<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 10 Aug 2024 12:03:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[メモ]Rails + React + TypeScript の導入メモ]]></title><description><![CDATA[
 Rails + React + TypeScript 導入メモ
この記事は、Rails、React、TypeScriptを組み合わせたプロジェクトの初期セットアップについてのメモです。将来ポートフォリオを作成する際に参考にできるよう作成しました。

 参考記事

Rails7 + React + TypeScript環境構築
Rails7でTailwind CSSを使う方法


 1. アプリケーションの作成
まず、以下のコマンドでRailsアプリケーションを作成します：
rails new [アプリ名] -d postgresql --javascript=esbuild
注意：初...]]></description><link>https://zenn.dev/kuma2/articles/1bbeba40016903</link><guid isPermaLink="true">https://zenn.dev/kuma2/articles/1bbeba40016903</guid><pubDate>Sat, 10 Aug 2024 11:58:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--euOWlfjw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E3%2583%25A1%25E3%2583%25A2%255DRails%2520%252B%2520React%2520%252B%2520TypeScript%2520%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2581%25BE%25E3%2581%258F%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkMmRjYmNiODYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くまくま</dc:creator></item><item><title><![CDATA[TypeScriptでZodスキーマから推論される型を生成する]]></title><description><![CDATA[Zodは、スキーマを定義してランタイムチェックを行うだけでなく、そのスキーマから型を推論して、静的な型チェックに利用することも可能です。この記事では、Zodを使ってスキーマから型を推論する方法を紹介します。

 Zodでスキーマを定義する
まず、Zodを使ってスキーマを定義します。ここでは、コンタクト情報を表すスキーマを例にします。このスキーマでは、personオブジェクトの中にfirstNameとlastNameという文字列のプロパティがあり、emailはメールアドレス形式の文字列であることを定義しています。
import {z} from 'zod'

const contactSc...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-generate-inferred-type-from-zod-schema</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-generate-inferred-type-from-zod-schema</guid><pubDate>Sat, 10 Aug 2024 11:00:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2vShnRAX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7Zod%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%258B%25E3%2582%2589%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E5%259E%258B%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[【TypeScript】interfaceで配列の配列(numberとstring含む)を定義する方法]]></title><description><![CDATA[TypeScriptって難しいなっていつも思う泉（@izumin_0401）です。
業務でAngularを触っているんですが、any型で定義された箇所があったのでinterfaceを作った際の備忘録。

 ブログ記事はこちら
https://traveler0401.com/typescript-interface-array-of-array

 interfaceで配列の配列(numberとstring含む)を定義する方法
{
  "unkos": [
    [
      1,
      "大きいウンコ"
    ],
    [
      2,
      "小さいウンコ"...]]></description><link>https://zenn.dev/izumin_0401/articles/221c28eac84b1c</link><guid isPermaLink="true">https://zenn.dev/izumin_0401/articles/221c28eac84b1c</guid><pubDate>Sat, 10 Aug 2024 02:52:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M4D09pfQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591interface%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%2528number%25E3%2581%25A8string%25E5%2590%25AB%25E3%2582%2580%2529%25E3%2582%2592%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B3%2589%25E6%25B5%25A9%25E5%2585%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTljYmRlNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>泉浩兵</dc:creator></item><item><title><![CDATA[Zustandで型推論をうまく使うには]]></title><description><![CDATA[
 はじめに
ZustandはTypeScriptサポートしてますが、あまり書き心地が良いとは言えません（主観）。
通常は次のような書き方をします。
import { create } from 'zustand'

interface CountState {
  count: number
  increase: (by: number) =&gt; void
}

const useCounterStore = create&lt;CountState&gt;(
  (set) =&gt; ({
    bears: 0,
    increase: (by) =&gt; set(...]]></description><link>https://zenn.dev/dai_shi/articles/e69c7fd231ed1b</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/e69c7fd231ed1b</guid><pubDate>Sat, 10 Aug 2024 01:02:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7tj_f4hL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zustand%25E3%2581%25A7%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%25E3%2582%2592%25E3%2581%2586%25E3%2581%25BE%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[TypeScriptプロジェクトにtsconfig.jsonを生成する方法]]></title><description><![CDATA[
 TypeScriptプロジェクトにtsconfig.jsonを生成する方法
TypeScriptプロジェクトを始める際に、TypeScriptコンパイラの設定を行うためのtsconfig.jsonファイルが必要です。このファイルは、プロジェクトのコンパイル設定やエクスポートするJavaScriptのバージョンなどを定義します。この記事では、tsconfig.jsonファイルを簡単に生成する方法を説明します。

 TypeScriptをプロジェクトにインストールする
まず最初に、プロジェクトにTypeScriptをインストールする必要があります。TypeScriptはtypescrip...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-generate-initial-tsconfig-file</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-generate-initial-tsconfig-file</guid><pubDate>Sat, 10 Aug 2024 00:31:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dnbb-TRL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABtsconfig.json%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[Next.jsで特定のページを削除してリダイレクトの設定をする]]></title><description><![CDATA[Next.jsでウェブサービスを運営していると、ページの構成を変更したい場合や古いコンテンツを新しいページに統合したい場合があります。この記事では、Next.jsで特定のページを削除し、そのURLから他のページへリダイレクトする方法を紹介します。

 ステップ 1: 不要なページの削除
まずは、削除したいページのファイル（例えば pages/old-page.js）をプロジェクトから削除します。ファイルを削除することで、そのページへのアクセスができなくなります。

 ステップ 2: リダイレクトの設定
削除したページへアクセスしたユーザーを新しいページに自動的にリダイレクトするには、ne...]]></description><link>https://zenn.dev/tomoyuki_kato/articles/d887636f0867ba</link><guid isPermaLink="true">https://zenn.dev/tomoyuki_kato/articles/d887636f0867ba</guid><pubDate>Fri, 09 Aug 2024 21:44:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--84YhMUiA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%2580%25E3%2582%25A4%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoyuki%2520Kato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyOTU0YTUzNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoyuki Kato</dc:creator></item><item><title><![CDATA[【Angular】Excelのダウンロード機能を実装！]]></title><description><![CDATA[Angularって情報少ないよなっていつも思う泉（@izumin_0401）です。

 ブログ記事はこちら
https://traveler0401.com/angular-excel-download

 AngularでExcelをダウンロードしたい
早速ですが、AngularでExcelのダウンロード機能を実装してみましたよん。

 Excelのダウンロード機能を実装する手順

 「xlsx」のインストール
$ npm install xlsx

 ソースコード
import * as XLSX from 'xlsx';

.
.
.

download() {
  const h...]]></description><link>https://zenn.dev/izumin_0401/articles/006231b26105c8</link><guid isPermaLink="true">https://zenn.dev/izumin_0401/articles/006231b26105c8</guid><pubDate>Fri, 09 Aug 2024 10:37:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aNrhdApC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Angular%25E3%2580%2591Excel%25E3%2581%25AE%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B3%2589%25E6%25B5%25A9%25E5%2585%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTljYmRlNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>泉浩兵</dc:creator></item><item><title><![CDATA[単価を上げる方法]]></title><description><![CDATA[
 どうやって単価を上げるのか？
私もよくわかりません😅
エンジニア歴も1.7年かな。長くはない。そんな私が、報酬をあげた方法をご紹介します。

 👀それは
勉強するだけ
えっこれだけですか。はいこれだけですね。笑。
これしかしてませんね。
いつも正社員で働いている友達が羨ましかったです。年数と学齢しき大人は信用しないので、僕は経歴ひどいので、いつも弾かれます😭
正社員諦めた笑
友達も今の会社嫌な話聞いたり、離職率高い会社だと、すぐ人辞めるので、クビにされない特権役に立たないですね。そんなに首切られるの嫌か？
私は、ブラック企業で働いていて、首切られました。でもよかったです。仕事つまらな...]]></description><link>https://zenn.dev/joo_hashi/articles/e6ec74a2206971</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/e6ec74a2206971</guid><pubDate>Fri, 09 Aug 2024 08:38:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V1BHhDRi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258D%2598%25E4%25BE%25A1%25E3%2582%2592%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[useRefと仲良くなりたい]]></title><description><![CDATA[
 👤対象者

useRefが理解できていない人
useStateと似てる気がするが

useRefとは何なのか？
/**
 * 
 * @returns 
 * What is useRef
 * refオブジェクトの(React.createRef の戻り値)を返すフック
 * DOMの参照や、コンポーネント内で値を保持できます。
 * useStateとの違いは、useStateはstateを更新するたびに再レンダリングされるが、
 * useRefは再レンダリングされない。
 */
私が知っている使い方だと、時間を計測する機能を作ったり、ダイアログに値を渡すときに使っていましたね...]]></description><link>https://zenn.dev/joo_hashi/articles/011c76811bf091</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/011c76811bf091</guid><pubDate>Fri, 09 Aug 2024 07:34:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jLAcg8OT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useRef%25E3%2581%25A8%25E4%25BB%25B2%25E8%2589%25AF%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[useStateと仲良くなりたい]]></title><description><![CDATA[
 👤対象者

useStateをカウンター以外で使いたい
簡単なものでいいから理解する。

useStateとは、Reactのstate(状態を管理する)、フックです。ただ関数かな。使う場面は、UI stateの更新ですね。画面が切り替わる。カウントされる。
/**
 * 
 * @returns 
 * What is useState?
 * stateと、state更新関数を返すフック
 * コンポーネントないでstate管理ができる
 * stateとは、UIに表示されるデータやUIの状態などアプリケーションが保持している情報（データや値）
 */
カウンターは見飽きてるので、...]]></description><link>https://zenn.dev/joo_hashi/articles/2a9d92a87d6930</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/2a9d92a87d6930</guid><pubDate>Fri, 09 Aug 2024 06:24:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BjjKaHN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useState%25E3%2581%25A8%25E4%25BB%25B2%25E8%2589%25AF%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[Svelte Writableストア 概説]]></title><description><![CDATA[
 ストアとは
Svelteにおいて，変数は通常，単一のコンポーネント内でしか使用できない．しかし，アプリケーションが複雑になるにつれて，複数のコンポーネント間で状態を共有したい場面が出てくる．このような場合，Svelteの「ストア」という仕組みを使用することで，複数のコンポーネント間で変数を簡単に共有することが可能となる．
Svelteには，用途に応じて使い分けることができるいくつかのストアタイプが用意されている．具体的には，以下の4種類が存在する．


Writableストア: 値の参照および更新が可能なストア．最も基本的でよく使われるストアタイプ．

Readableストア: 値の...]]></description><link>https://zenn.dev/watso/articles/20240809-svelte-writable-store</link><guid isPermaLink="true">https://zenn.dev/watso/articles/20240809-svelte-writable-store</guid><pubDate>Fri, 09 Aug 2024 06:10:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w2UyekZ6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte%2520Writable%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%2520%25E6%25A6%2582%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3V1OW1vVmxHR2pEUWo3TGYtWGxfbXVCMWRqMkd2bmFqODZiaGdybE0tbnlvOWNhND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>watso</dc:creator></item><item><title><![CDATA[MUIに入門する]]></title><description><![CDATA[
 👤対象者

MUIを使ってみたい人
ドキュメントを見たがよくわからない人
とりあえず使ってみたい人


 What is MUI?
offical

Move faster
with intuitive React UI tools


MUI offers a comprehensive suite of free UI tools to help you ship new features faster. Start with Material UI, our fully-loaded component library, or bring your own design sys...]]></description><link>https://zenn.dev/joo_hashi/articles/3e0c436a65db4e</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/3e0c436a65db4e</guid><pubDate>Fri, 09 Aug 2024 01:00:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fSu1w-LR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:MUI%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[【React】Reduxを使ってみる]]></title><description><![CDATA[
 Reduxとは？
state（状態）を容易に管理をするためのフレームワーク（ライブラリ）です。状態管理とは、アプリケーション内のデータ（状態）を一元管理し、必要なコンポーネントがそのデータにアクセスしたり更新したりできるようにすることです。Reduxを使うと、複雑なアプリケーションでも状態管理がスムーズに行えるようになります。

 なぜReduxを使うのか？
状態管理にはさまざまな方法がありますが、Reduxには以下のようなメリットがあります：


一元管理：アプリケーション全体の状態を一つの場所（ストア）にまとめることで、状態の追跡が容易になります。

予測可能な状態遷移：アクショ...]]></description><link>https://zenn.dev/xronotech/articles/bc9ee347f5e2a5</link><guid isPermaLink="true">https://zenn.dev/xronotech/articles/bc9ee347f5e2a5</guid><pubDate>Fri, 09 Aug 2024 01:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pfxVJ9OI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591Redux%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mizukich%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMTJiODY3MzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEXronotech%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2Q2bUgzdERkMVhVWlI3TU5obG1PcWRRSlNMWVVKbE9KNWQ3dXhhRWVxQXJDbDJoVDQ9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizukich</dc:creator></item><item><title><![CDATA[styled component入門]]></title><description><![CDATA[
 What is styled component
official
styled componenを仕事で使うので、キャッチアップすることになりました。まさかこれを使うとはな...
TailWindCSS, ChakuraUIが人気と思ったが。
こんな感じで作っていきます。


 Documentation

Utilising tagged template literals (a recent addition to JavaScript) and the power of CSS, styled-components allows you to write actual CSS...]]></description><link>https://zenn.dev/joo_hashi/articles/0476d4985f9ec7</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/0476d4985f9ec7</guid><pubDate>Fri, 09 Aug 2024 00:11:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YEH-jsXZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:styled%2520component%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[Typia で OpenAI Structured Outputを使ってみた！]]></title><description><![CDATA[

 はじめに
先日、OpenAI に Structured Output が登場しました。
https://openai.com/index/introducing-structured-outputs-in-the-api/
https://platform.openai.com/docs/guides/structured-outputs
Structured Output とは、以前から提供されていた JSON Mode の上位互換です。
Strucuted Output では、ユーザーが提供する JSON Schema に従って、OpenAI が生成した JSON を返してくれ...]]></description><link>https://zenn.dev/ryoppippi/articles/b0d3e17322099b</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/b0d3e17322099b</guid><pubDate>Thu, 08 Aug 2024 16:51:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pm2Ankfg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typia%2520%25E3%2581%25A7%2520OpenAI%2520Structured%2520Output%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[TypeScriptのインデックスアクセス型を使ったオブジェクト型からユニオン型への変換テクニック]]></title><description><![CDATA[この記事では、TypeScriptのインデックスアクセス型を使用してオブジェクト型から値を抽出し、それをユニオン型に変換する方法について解説します。TypeScriptを使用する際に便利なテクニックの一つであり、オブジェクト型の各値にアクセスしたり、それを効率的に型として扱うことができます。以下では、具体的な例を通じてその方法を見ていきましょう。


 TypeScriptのインデックスアクセス型とは？
まず、TypeScriptのインデックスアクセス型について説明します。インデックスアクセス型は、JavaScriptのオブジェクトアクセスに似た方法で、型から特定のプロパティの型を抽出す...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-object-type-values-into-union-type</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-object-type-values-into-union-type</guid><pubDate>Thu, 08 Aug 2024 11:00:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bhR8W3NF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%259E%258B%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25AA%25E3%2583%25B3%25E5%259E%258B%25E3%2581%25B8%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[esm.sh を使って超モダンなフロントエンドを体験しよう]]></title><description><![CDATA[こんにちは。やまゆです。

 トランスパイルとバンドル
皆さんは Web フロントエンドを構築する際、何を使っていますか？ node.js? webpack? Vite? 他にもたくさん候補はありますが、何かしらを使っているのではないでしょうか？
何故ブラウザで動作する Web フロントエンドに、 Linux や Windows ネイティブで動作する node.js が必要なのでしょうか。それは、 「これまでの Web ブラウザ単体では、フロントエンドを作る機能が不足していたから」 です。
現在一般化されている Web フロントエンドは、 React や Vue など様々なフレームワーク...]]></description><link>https://zenn.dev/yamayuski/articles/entering-esmsh</link><guid isPermaLink="true">https://zenn.dev/yamayuski/articles/entering-esmsh</guid><pubDate>Thu, 08 Aug 2024 02:29:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3r0pB4Sj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:esm.sh%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25B6%2585%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%25E3%2581%25AA%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2582%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pVWkFuSVloZ2NmMkJYb2tkWGpYODhWR2Y3MnVyWE9qN1dXOE56R0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまゆ</dc:creator></item><item><title><![CDATA[【保存版】JS/TSの省略記法と演算子完全ガイド：使用頻度評価付き]]></title><description><![CDATA[JavaScriptとTypeScriptには、コードをより簡潔に書くための様々な省略記法や演算子があります。これらを適切に使用することで、より読みやすく効率的なコードを書くことができます。以下に主要な演算子と構文をまとめました。各項目には、実際の開発での使用頻度を5段階で評価しています。

 オプショナルチェイニング演算子 (?.)
使用頻度: ⭐⭐⭐⭐⭐
オプショナルチェイニング演算子は、プロパティへの安全なアクセスを可能にします。
const user = { profile: { name: "太郎" } };

// 安全にネストされたプロパティにアクセス
const name...]]></description><link>https://zenn.dev/crebo/articles/article-0004-20240807</link><guid isPermaLink="true">https://zenn.dev/crebo/articles/article-0004-20240807</guid><pubDate>Wed, 07 Aug 2024 14:26:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mSCQFnpr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BF%259D%25E5%25AD%2598%25E7%2589%2588%25E3%2580%2591JS%252FTS%25E3%2581%25AE%25E7%259C%2581%25E7%2595%25A5%25E8%25A8%2598%25E6%25B3%2595%25E3%2581%25A8%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25EF%25BC%259A%25E4%25BD%25BF%25E7%2594%25A8%25E9%25A0%25BB%25E5%25BA%25A6%25E8%25A9%2595%25E4%25BE%25A1%25E4%25BB%2598%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BC%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxNzlhZTFjZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社くりぼー</dc:creator></item><item><title><![CDATA[v9.8.0 最新版 ESLint を超ざっくり理解したい]]></title><description><![CDATA[
 この記事について
eslintrcが非推奨になったと聞いて、これを機に超なんとなーく使ってたESLintを調べてみるか！と一念発起した時にしたためたメモです。

 この記事の対象者

ESLint とりあえず使ってみたい人
ESLint とりあえず概要を理解したい人
新しい設定ファイルの書き方をざっと理解したい人


 注意
この記事は公式を読みつつしたためたメモなので公式以上の情報は載ってません。
時々個人的な見解を入れたので間違っているかもしれません。そのときはそっと教えてくださいmm

 ESLint とは

ESLint はコードを静的に分析して問題を素早く見つけます。ほとん...]]></description><link>https://zenn.dev/s_h_i_o_n/articles/93c939d364d004</link><guid isPermaLink="true">https://zenn.dev/s_h_i_o_n/articles/93c939d364d004</guid><pubDate>Wed, 07 Aug 2024 14:10:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Bf1UkV7z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:v9.8.0%2520%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%2520ESLint%2520%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shion%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkZTI5OWJjNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shion</dc:creator></item><item><title><![CDATA[【Node.js】Built-in TypeScriptへの第一歩　Type Strippingの試験的導入]]></title><description><![CDATA[
 概要
Node.jsのバージョン22.6.0で、新たなTypeScriptサポート機能が導入されました。
この新機能は、Node.jsがTypeScriptをbuilt-inとして扱うための第一歩として興味深いので、この機能について見ていきます。
https://nodejs.org/api/typescript.html#type-stripping

 型の削除（Type Stripping）機能とは？
ファイル名：node-ts.tsとつけたTypeScriptのコードがあります。
このファイルをそのままNode.jsで実行すると、もちろんエラーが出ます。

node-ts.t...]]></description><link>https://zenn.dev/ma_me/articles/785eaa9933b3a3</link><guid isPermaLink="true">https://zenn.dev/ma_me/articles/785eaa9933b3a3</guid><pubDate>Wed, 07 Aug 2024 14:06:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hW_I-Nab--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Node.js%25E3%2580%2591Built-in%2520TypeScript%25E3%2581%25B8%25E3%2581%25AE%25E7%25AC%25AC%25E4%25B8%2580%25E6%25AD%25A9%25E3%2580%2580Type%2520Stripping%25E3%2581%25AE%25E8%25A9%25A6%25E9%25A8%2593%25E7%259A%2584%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ma_me%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzZjVkODUyNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ma_me</dc:creator></item></channel></rss>