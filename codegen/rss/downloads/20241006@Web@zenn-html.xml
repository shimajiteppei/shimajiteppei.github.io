<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「HTML」のフィード]]></title><description><![CDATA[Zennのトピック「HTML」のRSSフィードです]]></description><link>https://zenn.dev/topics/html</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/171432f5a6.png</url><title>Zennの「HTML」のフィード</title><link>https://zenn.dev/topics/html</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 06 Oct 2024 12:03:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/html/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Emmet の基本的な使い方と便利なショートカット]]></title><description><![CDATA[
 Emmet とは？
Emmet は、HTML や CSS のコーディングを効率化するためのツールです。特に、コードの補完機能が強力で、開発者の作業を大幅にスピードアップします。ここでは、Emmet の基本的な使い方と便利なショートカットを紹介します。

 基本的な使い方

 リストの生成
ul&gt;li と入力して補完すると、以下のような HTML 構造が生成されます。
&lt;ul&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

 ダミーテキストの挿入
lorem と入力して補完すると、以下のようなダミーテキストが挿入されます。
Lorem ip...]]></description><link>https://zenn.dev/electnoob/articles/0b82594c2d531d</link><guid isPermaLink="true">https://zenn.dev/electnoob/articles/0b82594c2d531d</guid><pubDate>Sat, 05 Oct 2024 09:41:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--caNwYf3I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Emmet%2520%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN1ZBbThyWUJxZFpUeTh4dkVpOS1qajl5NzFEY3d0YVZfTFFNbFMzZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TK</dc:creator></item><item><title><![CDATA[クロスオリジンな画像をキレイにして、Canvasに描画する]]></title><description><![CDATA[
 結論
こちらの StackOverFlow で示される手順の通り、Object URLを経由します。

 Tainted Canvas（汚染されたキャンバス）問題
セキュリティの観点から、クロスオリジンから取得した画像を CanvasRenderingContext2d に対して描画すると、その canvas 要素からは画像を取得できなくなります。
getImageData、toBlob等の再取得系メソッドは軒並みエラーを投げるようになります。
これを回避するために、取得した画像そのものを汚染されていない画像にする処理を施します。
いわゆるオリジンロンダリングをします（そんな言葉はあ...]]></description><link>https://zenn.dev/ihasq/articles/4a0ad7cae01300</link><guid isPermaLink="true">https://zenn.dev/ihasq/articles/4a0ad7cae01300</guid><pubDate>Fri, 04 Oct 2024 01:58:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qoj9xzKH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2582%25AA%25E3%2583%25AA%25E3%2582%25B8%25E3%2583%25B3%25E3%2581%25AA%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25AC%25E3%2582%25A4%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Canvas%25E3%2581%25AB%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ihasq%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3YWEyZmFhZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ihasq</dc:creator></item><item><title><![CDATA[HTMLの<table>要素]]></title><description><![CDATA[表（HTMLの&lt;table&gt;要素）を使ってデータを一覧表示する考え方について、以下のポイントに沿って詳しく説明します。

 1. 表の基本構造
HTMLの表は、以下の基本要素から構成されています。


&lt;table&gt;: 表全体を囲む要素。

&lt;thead&gt;: 表のヘッダー部分を囲む要素（列名など）。

&lt;tbody&gt;: 表のボディ部分を囲む要素（データ行）。

&lt;tr&gt;: 表の行を定義する要素（ヘッダー行やデータ行）。

&lt;th&gt;: 表のヘッダーセルを定義する要素。

&lt;td&gt;: 表のデータセルを定義する...]]></description><link>https://zenn.dev/kaishigaki/articles/1122f833884ad9</link><guid isPermaLink="true">https://zenn.dev/kaishigaki/articles/1122f833884ad9</guid><pubDate>Fri, 04 Oct 2024 01:00:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vH8sYZrh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:HTML%25E3%2581%25AE%253Ctable%253E%25E8%25A6%2581%25E7%25B4%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0MjQ2ZmVjOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かい</dc:creator></item><item><title><![CDATA[aタグを入れ子にしてはいけないことを知らずに3時間費やした件]]></title><description><![CDATA[
 記事のカードコンポネント作成の際に...
記事のコンポネント作成の際に、画像、タイトル、本文、ビュー数...などとコンポネントごとにファイルを分けて、ブロックで...とやっていたのですが、
カードの中にタグを表示させようとし、そのタグをカード以外の場所でも再利用しようとしたため、&lt;a&gt;を用いたのですが、そこで悲劇が起きました。
検証ツールを除いたところ、なぜか囲んでいたはずのブロックの外に空の&lt;a&gt;タグが生成されているのです。

 なぜこのようなことが起きるのか
HTML において、マークアップの際にコンテンツモデルというものがあるようです。
そのルールの中で...]]></description><link>https://zenn.dev/dashubei/articles/a_tag_not_in</link><guid isPermaLink="true">https://zenn.dev/dashubei/articles/a_tag_not_in</guid><pubDate>Thu, 03 Oct 2024 08:27:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IbOSOhsW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:a%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E5%25AD%2590%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259A%25E3%2581%25AB3%25E6%2599%2582%25E9%2596%2593%25E8%25B2%25BB%25E3%2582%2584%25E3%2581%2597%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dashu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXRHdEx4bGJPVkpNbktfQ0VfamlFUGM1OXRmeU1jczVhcTFSZXNUaDgyOFBfWEpfVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dashu</dc:creator></item><item><title><![CDATA[<title>タグの内容が必ずしもタイトルにならない件について]]></title><description><![CDATA[
 &lt;title&gt;タグで囲んだ内容がサイトのタイトルにならないこともあるようです
どういうことかといいますと、HTML の&lt;head&gt;タグ内の&lt;title&gt;タグの内容が検索結果のタイトルとして表示されるのですが、どうやら Google の検索エンジンにおいては必ずしも、それが適用されるとは限らないようです。
https://developers.google.com/search/blog/2021/09/more-info-about-titles?hl=ja#half-empty-titles
2021 年の更新内容では、従来の&lt;title&...]]></description><link>https://zenn.dev/dashubei/articles/google_title</link><guid isPermaLink="true">https://zenn.dev/dashubei/articles/google_title</guid><pubDate>Wed, 02 Oct 2024 05:34:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JzfdAXql--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%253Ctitle%253E%25E3%2582%25BF%25E3%2582%25B0%25E3%2581%25AE%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%258C%25E5%25BF%2585%25E3%2581%259A%25E3%2581%2597%25E3%2582%2582%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E4%25BB%25B6%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dashu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXRHdEx4bGJPVkpNbktfQ0VfamlFUGM1OXRmeU1jczVhcTFSZXNUaDgyOFBfWEpfVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dashu</dc:creator></item><item><title><![CDATA[WebP拡張子に変換して画像ファイルを圧縮しよう]]></title><description><![CDATA[
 WebP（ウェッピー）ってなに
まず、これウェッピーって読むらしいです。（私はウェブピーと読んでました笑）
2010 年に Google が開発した画像の形式らしいです。普段利用する画像の形式である、jpgやpngなどよりも圧縮率が高く、さらに特に画質が劣化する印象もないらしい！！
WebP に変換するツールとして、Google が開発した、Squoosh(スクワッシュ)というものがあり、プレビューなどをみながら変換することができるので、圧縮しすぎると粗くなってしまいますが、適度に圧縮すると特に見た感じ影響はなさそうです。
https://squoosh.app/
ただ、こちらは画像...]]></description><link>https://zenn.dev/dashubei/articles/e46c5cc47e80b1</link><guid isPermaLink="true">https://zenn.dev/dashubei/articles/e46c5cc47e80b1</guid><pubDate>Tue, 01 Oct 2024 09:25:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gxamVlEj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebP%25E6%258B%25A1%25E5%25BC%25B5%25E5%25AD%2590%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dashu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXRHdEx4bGJPVkpNbktfQ0VfamlFUGM1OXRmeU1jczVhcTFSZXNUaDgyOFBfWEpfVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dashu</dc:creator></item><item><title><![CDATA[すぐ消えてしまう要素をDevToolsで確認するTips集]]></title><description><![CDATA[
 はじめに
こんばんは！
皆さんは以下のようなすぐ消えてしまう要素をDevToolsで確認したいときはどうしますか？

常に表示されるようにわざわざコードを修正してから、DevToolsで要素を確認したりしていませんか？DevToolsをうまく使うことで、わざわざコードの修正をせずとも簡単に要素の確認をできるのでそのちょっとしたTipsのご紹介です！

 ① CSSイベントでの確認方法
まずはCSSイベントで要素の表示制御を行っているパターンでの確認方法です。以下のようにCSSイベントのhoverで表示制御をしている要素を例にDevToolsで確認する方法を見ていきましょう！
impo...]]></description><link>https://zenn.dev/gemcook/articles/3e90d883100140</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/3e90d883100140</guid><pubDate>Tue, 01 Oct 2024 04:57:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---HLOwpa2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2599%25E3%2581%2590%25E6%25B6%2588%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592DevTools%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258BTips%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KM%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjk0ZGQyMWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KM</dc:creator></item><item><title><![CDATA[[TailwindCSS]グリッドレイアウトで行頭を美しく整える]]></title><description><![CDATA[
 はじめに
今回は、Tailwind CSSを使って、要素が不揃いだったレイアウトを整然とした美しいデザインに改善する方法を紹介します。記事の流れとして、まず初めに改善前のコードを見ていただき、その後、どのようにして現在のコードに改善していったのかを解説していきます。

 改善前のコード
まず、こちらが改善前のコードです。このコードでは、項目名とその内容がバラバラに表示されており、統一感がありませんでした。

TypeScript
import React from "react";

const LegalNotice = () =&gt; {
  return (
    &lt;...]]></description><link>https://zenn.dev/haruki1009/articles/bd7bac7a117234</link><guid isPermaLink="true">https://zenn.dev/haruki1009/articles/bd7bac7a117234</guid><pubDate>Mon, 30 Sep 2024 05:38:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZSc3M2UQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTailwindCSS%255D%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25A7%25E8%25A1%258C%25E9%25A0%25AD%25E3%2582%2592%25E7%25BE%258E%25E3%2581%2597%25E3%2581%258F%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Haruki%2520Inoue%2520%257C%2520Not...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MGI2YjhmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Haruki Inoue | Notion公認キャンパスリーダー</dc:creator></item><item><title><![CDATA[HTMLのselect要素がCSSでカスタマイズ可能になる]]></title><description><![CDATA[
 select 要素がカスタマイズできるようになる
これまで HTML の&lt;select&gt;要素はカスタマイズが難しい部分でした。各ブラウザのデフォルトスタイルに依存しデザインや機能を統一するのが困難でした。かといってオリジナルのセレクトボックスを作成するとなると CSS と JavaScript でイチから作成する必要がありました。
しかし今後、HTML ネイティブの&lt;select&gt;要素に柔軟にスタイルを加えることができるようになるようです。イチから作成したセレクトボックスをネイティブのselect要素と同等レベルでアクセシビリティやパフォーマンスに配慮して、各...]]></description><link>https://zenn.dev/h_yokoyama/articles/html-select-style</link><guid isPermaLink="true">https://zenn.dev/h_yokoyama/articles/html-select-style</guid><pubDate>Sun, 29 Sep 2024 04:25:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q8nwMhtj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%25E3%2581%25AEselect%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258CCSS%25E3%2581%25A7%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hayato%2520Yokoyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNDg0ZTcyMTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hayato Yokoyama</dc:creator></item><item><title><![CDATA[リンクの未訪問と訪問済みを表す技術]]></title><description><![CDATA[ヤコブ・ニールセン博士が 2004 年に言っているように、未訪問のリンクと訪問済みのリンクは色などで違いがわかると嬉しい。
https://u-site.jp/alertbox/20040503
とはいえ、デフォルトの :link と :visited の色をそのまま使うとサイトの雰囲気に合わないことがあるので色々変えてみたい

 ブラウザデフォルト
多少の明度や彩度の調整をして使われることもある。


 underline なし
Google の検索結果のタイトル部分などで使われているパターン。
リンクであることは文脈でほぼ明示的だが、テキストカラーとは区別をつけたいというような場合。...]]></description><link>https://zenn.dev/15/articles/1d21eba86ae1ff</link><guid isPermaLink="true">https://zenn.dev/15/articles/1d21eba86ae1ff</guid><pubDate>Fri, 27 Sep 2024 11:44:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M1IE9wNZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%25E6%259C%25AA%25E8%25A8%25AA%25E5%2595%258F%25E3%2581%25A8%25E8%25A8%25AA%25E5%2595%258F%25E6%25B8%2588%25E3%2581%25BF%25E3%2582%2592%25E8%25A1%25A8%25E3%2581%2599%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:15%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCd2p5Q0htOUYzcmF6SW9SNU1jcXVidDc1cFdBUzdlQlRJYnpiYWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>15</dc:creator></item><item><title><![CDATA[CSS Anchor Positioning 仕様の紹介]]></title><description><![CDATA[CSS Anchor Positioning は、要素の配置を制御する新しい仕様で、指定した要素（アンカー要素）の位置を基準に、要素を配置できます。
ポップオーバーやツールチップ、トーストなどをはじめとした、さまざまな UI コンポーネントの実装に利用できます。
特に CSS Anchor Positioning による要素の配置には、「配置する要素が表示領域に収まらない場合の挙動を制御できる」「Popover API などによって Top Layer に配置される要素であっても、アンカー要素を基準にその位置を制御できる」といった特徴があります。
これまでは、JavaScript を用い...]]></description><link>https://zenn.dev/d_kawaguchi/articles/css-anchor-positioning-294aa71a7f77fc</link><guid isPermaLink="true">https://zenn.dev/d_kawaguchi/articles/css-anchor-positioning-294aa71a7f77fc</guid><pubDate>Thu, 26 Sep 2024 07:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zHbMNk6d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%2520Anchor%2520Positioning%2520%25E4%25BB%2595%25E6%25A7%2598%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:d-kawaguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliMjUzZTlmOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>d-kawaguchi</dc:creator></item><item><title><![CDATA[CSS設計初心者がBEMを使ってみて、理解しておいた方が良いと思ったところ、こうしていれば良かったかもしれないところ]]></title><description><![CDATA[CSS設計をやったことがない私がBEMを実際プロジェクトで使ってみて、こういう場合どうすれば良いの？と迷ったところが何点かあり、その経験をもとにBEMにおいて理解しておいた方が良いと思ったところをBEMの公式を確認しながらまとめます。
また、実際使ってみてこうした方が良かったかもしれない点についても述べたいと思います。
BEMを採用するに当たってBEMの記事をいろいろ読みましたが、おれおれBEMのような内容の記事も多いことから考えると、BEMそのもののメリットは大きいのでBEMのルールをベースにしつつ、厳密にやろうとすると不便に感じるところがあるので別のルールも追加するみたいな感じかと思...]]></description><link>https://zenn.dev/unkeleven/articles/e8973e8c4a377e</link><guid isPermaLink="true">https://zenn.dev/unkeleven/articles/e8973e8c4a377e</guid><pubDate>Thu, 26 Sep 2024 01:48:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k1WwNmGO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E8%25A8%25AD%25E8%25A8%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CBEM%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2580%2581%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258A%25E3%2581%2584%25E3%2581%259F%25E6%2596%25B9%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%25E3%2580%2581%25E3%2581%2593%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258C%25E3%2581%25B0%25E8%2589%25AF%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unk%2520eleven%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlNWI0NGI3MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>unk eleven</dc:creator></item><item><title><![CDATA[absoluteを使わない中央寄せ]]></title><description><![CDATA[
要素を中央寄せするとき、これまでは親要素にposition: relative;をしてposition:absolute;で位置を指定していました。
これまで通りabsoluteを使って中央寄せをしてもいいのですが、もっと簡単な書き方がないのか探したところgridを使うと実現できそうなので試してみました。以下のようなメリットがあります。

親要素のことを考えなくて良い
absoluteにすると要素の高さが消えるが、gridなら消えない
absoluteよりも短い記述で中央寄せを実装できる


 display:gridで中央寄せ
結論のコードです。
このあと解説をしています。
    ...]]></description><link>https://zenn.dev/928sekine/articles/2c11704aef149d</link><guid isPermaLink="true">https://zenn.dev/928sekine/articles/2c11704aef149d</guid><pubDate>Wed, 25 Sep 2024 11:38:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2QEu6vGG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:absolute%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25E4%25B8%25AD%25E5%25A4%25AE%25E5%25AF%2584%25E3%2581%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259B%25E3%2581%258D%25E3%2581%25AD%25E3%2582%258A%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDQ3MGIzZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>せきねりな</dc:creator></item><item><title><![CDATA[CSS変数で柔軟なマージン設定を実現しよう]]></title><description><![CDATA[要素（またはコンポーネント）自体にはマージンを持たせたくないですよね。要素が自身にマージンを持っていると他の場所で再利用した際に予期しない余白が生じレイアウトの調整が難しくなるからです。
しかし、状況に応じて各要素に異なるマージンを適用したい場合も多くあります。
この記事では要素自体にマージンを持たせず柔軟にマージンを設定する方法をご紹介します。

 フクロウセレクタを使った基本的なマージン設定
フクロウセレクタ* + *を使用して、兄弟要素間のマージンを統一的に管理します。
* + * {
  margin-top: var(--_spacer, 50px);
}


* + *は任意...]]></description><link>https://zenn.dev/dumbledore/articles/5d15016a7e3aff</link><guid isPermaLink="true">https://zenn.dev/dumbledore/articles/5d15016a7e3aff</guid><pubDate>Wed, 25 Sep 2024 05:07:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eckGAyN8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25A7%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AA%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25B3%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B3%25A2%25E8%25A1%2597%25E7%2594%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3N2NhOTE1OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>波街町</dc:creator></item><item><title><![CDATA[[react calendar] カレンダーを使って予約機能を作ろう＿１]]></title><description><![CDATA[韓国のIT教室に通い始めて３ヶ月が経った。
そして、みんなが心配していたチームプロジェクトが始まった。
第１プロゼクトのテーマは「リアルタイムで病院の予約システムを作る」
そこで私はメインの機能である予約ページを担当することになった。
この３ヶ月間で習ったこと以外のものを調べて作り上げなきゃいけなくなった。
最初はどんなページにすればいいのか頭に浮かばなくてボッとしていたが、とりあえずカレンダーが必要なのではないかと気づいた。
カレンダーを作ったこのは一度もなく、とりあえず「react calendar」と検索してみたらそのままのライブラリーが出てきた。
ライブラリーを使ったこともない。...]]></description><link>https://zenn.dev/hyoni/articles/2ff9d50b3a0a6e</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/2ff9d50b3a0a6e</guid><pubDate>Tue, 24 Sep 2024 13:55:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W_9xvjLa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Breact%2520calendar%255D%2520%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E4%25BA%2588%25E7%25B4%2584%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%25BF%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[純粋な静的ファイルのサイトで共通レイアウトを実現する]]></title><description><![CDATA[
 モチベーション
情報の表示が中心のシンプルなサイトを作っていると、フロントエンドのフレームワークやビルドプロセスが過剰に感じて、純粋な静的HTMLファイルだけでサイトを構築したい衝動にかられます。しかしその場合に難しくなるが共通レイアウトの適用です。
フレームワークのように共通レイアウトのHTMLを定義したひとつのファイルを各ページに適用させることは、たんに表示させるだけなら難しくはないが、遅延やちらつきなく表示させるとなるとちょっと難しい。
ということで外部ファイル化した共通レイアウトの取得して遅延・ちらつきなく表示するライブラリを作ってみました。
デモ https://ksk10...]]></description><link>https://zenn.dev/sizznami/articles/f5775fb885a2f7</link><guid isPermaLink="true">https://zenn.dev/sizznami/articles/f5775fb885a2f7</guid><pubDate>Tue, 24 Sep 2024 05:46:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XoV1f7tw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B4%2594%25E7%25B2%258B%25E3%2581%25AA%25E9%259D%2599%25E7%259A%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25A7%25E5%2585%25B1%25E9%2580%259A%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksk1015%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1YWZkZTlkZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksk1015</dc:creator></item><item><title><![CDATA[[JavaScript] チェックボックスによるボタンの活性/非活性の切り替え]]></title><description><![CDATA[
 はじめに
この記事では、Webサイトの「利用規約への同意」等で使用される、チェックボックスによるボタンの活性/非活性の切り替えのJavaScriptでの実装方法をまとめていきます。

 1. HTMLファイルの編集
&lt;input type="checkbox" id="agreement-check"&gt;
&lt;label for="agreement-check"&gt;&lt;a href="#" target="_brank"&gt;利用規約&lt;/a&gt;に同意する&lt;/label&gt;
&lt;button type="submit" value="登...]]></description><link>https://zenn.dev/aew2sbee/articles/javascript-checkbox</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/javascript-checkbox</guid><pubDate>Sun, 22 Sep 2024 13:11:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--75r-k-rk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%2520%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%25AE%25E6%25B4%25BB%25E6%2580%25A7%252F%25E9%259D%259E%25E6%25B4%25BB%25E6%2580%25A7%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝フロントエンド</dc:creator></item><item><title><![CDATA[[JavaScript] 一文字ずつ時間差で表示するアニメーション]]></title><description><![CDATA[
 はじめに
この記事では、Webページ上でテキストを一文字ずつ表示するアニメーションの実装方法をまとめます。

 結論
JavaScriptによって指定した要素を一文字ずつspanで囲い、styleを変更(opacityの値を0→1に)することで、一文字ずつ表示するアニメーションを実装しました。
この記事では、Webページ上でテキストを一文字ずつ表示するアニメーションの実装方法をまとめます。

 やり方

 1. HTMLファイルの編集
&lt;div&gt;
    &lt;p class="js-text"&gt;Welcome to TECHLOG.&lt;/p&gt;
&lt;...]]></description><link>https://zenn.dev/aew2sbee/articles/javascript-timelag-animation</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/javascript-timelag-animation</guid><pubDate>Sat, 21 Sep 2024 11:24:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pLvOJCGN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%2520%25E4%25B8%2580%25E6%2596%2587%25E5%25AD%2597%25E3%2581%259A%25E3%2581%25A4%25E6%2599%2582%25E9%2596%2593%25E5%25B7%25AE%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝フロントエンド</dc:creator></item><item><title><![CDATA[Drag & Drop APIのイベントの整理]]></title><description><![CDATA[業務の中で、ドラッグ&amp;ドロップを実装する機会があり、
イベントの種類がそこそこあったので、知識を整理しておきます。
この記事では、HTMLのDrag &amp; Drop APIの定義を整理した上で、
最後に実際に動かして理解できるコードを書くという流れにします。

 Drag &amp; Drop APIの各種イベント
主要なイベントについて整理します。
以下の表のようになります。



イベント
定義
備考




drag
ドラッグ対象の要素がドラッグされている間に発生し続ける
数百ミリ秒間隔で発生するので、常に発生している感覚


dragstart
ドラッグ対象の要素を...]]></description><link>https://zenn.dev/ohimusdev46301/articles/31694de152daf9</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/31694de152daf9</guid><pubDate>Sat, 21 Sep 2024 10:16:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o0CXZbbq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drag%2520%2526%2520Drop%2520API%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[最大寸法に制限されずにスクロール可能なcanvasを描画する方法]]></title><description><![CDATA[
 背景
canvasには描画領域の最大寸法が存在する。
この寸法を超えた場合、canvasが利用できなくなる。
以下はMDNのこちらのページから引用。
この表を見ると、x軸方向とy軸方向ともに最大30000px程度しか利用できない。
※IEはサポート終了のため。
最大面積も設定されているため、正方形に近い形で利用するならx軸方向とy軸方向ともに最大16000px程度となる。



ブラウザー
最大高
最大幅
最大面積




Chrome
32,767 pixels
32,767 pixels
268,435,456 pixels (つまり 16,384 x 16,384)



Fi...]]></description><link>https://zenn.dev/yaona807/articles/a1864ff0ac2e88</link><guid isPermaLink="true">https://zenn.dev/yaona807/articles/a1864ff0ac2e88</guid><pubDate>Sat, 21 Sep 2024 09:26:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UZXcj61W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E5%25A4%25A7%25E5%25AF%25B8%25E6%25B3%2595%25E3%2581%25AB%25E5%2588%25B6%25E9%2599%2590%25E3%2581%2595%25E3%2582%258C%25E3%2581%259A%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAcanvas%25E3%2582%2592%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yaona%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1QxSWFHM1NYaUIxOF9NS1FvTTV4MmpTRHJEeXJfbEFoU3BDTUZWSE5XX1VzRFJSWHU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yaona</dc:creator></item></channel></rss>