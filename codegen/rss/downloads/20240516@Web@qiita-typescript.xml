<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2024-05-16T14:26:08+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1859905</id>
    <published>2024-05-16T14:26:08+09:00</published>
    <updated>2024-05-16T14:26:08+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hiroXXI/items/2e31eab406f363a8c470"/>
    <url>https://qiita.com/hiroXXI/items/2e31eab406f363a8c470</url>
    <title>Vitestを使ってテストをしたい</title>
    <content type="html">背景
テストについて学んでいる中で、Vitestを使いたいとなった時に環境構築で時間を溶かしたのでその備忘です。
事前の環境
Vite + React + TypeScript
やりたいこと
fun…</content>
    <author>
      <name>hiroXXI</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1859888</id>
    <published>2024-05-16T13:36:17+09:00</published>
    <updated>2024-05-16T13:36:17+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuu_7_ns/items/050f7af2cf98fe49288c"/>
    <url>https://qiita.com/yuu_7_ns/items/050f7af2cf98fe49288c</url>
    <title>継続渡しスタイル（CPS）を理解する：フィボナッチ数列の実装を通じて</title>
    <content type="html">はじめに
Continuation-Passing Style (CPS)は、関数型プログラミングや非同期プログラミングにおいて重要な概念です。CPSを理解することで、複雑な計算や非同期処理の制御が…</content>
    <author>
      <name>yuu_7_ns</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1859880</id>
    <published>2024-05-16T13:00:42+09:00</published>
    <updated>2024-05-16T13:00:42+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kazuyuki_11E0/items/dc1a9e6769c0e9d41fa7"/>
    <url>https://qiita.com/kazuyuki_11E0/items/dc1a9e6769c0e9d41fa7</url>
    <title>[tips]ジェネリクスを使おう</title>
    <content type="html">こんにちは、ゆきおです。
今日はメモがてら、ちょっとしたことを書いていこうと思います。
Genericsとは
ジェネリクスとは汎用的なアルゴリズムやデータ構造の型を抽象化し、特定の型に依存しない再利…</content>
    <author>
      <name>kazuyuki_11E0</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1859834</id>
    <published>2024-05-16T10:44:48+09:00</published>
    <updated>2024-05-16T10:44:48+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/FumioNonaka/items/8867a4c6182b2e15bb94"/>
    <url>https://qiita.com/FumioNonaka/items/8867a4c6182b2e15bb94</url>
    <title>React + TypeScript: useContextフックでコンポーネントツリーに渡された情報を受け取る</title>
    <content type="html">コンテクスト(context)は、コンポーネントツリーに情報を渡す仕組みです。直接の子でなく、深い階層にある子コンポーネントであっても、useContextフックによりコンテクストの値を読み取り、そ…</content>
    <author>
      <name>FumioNonaka</name>
    </author>
  </entry>
</feed>
