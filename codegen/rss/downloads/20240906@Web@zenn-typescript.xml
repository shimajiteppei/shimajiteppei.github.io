<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 06 Sep 2024 12:04:05 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[VSCode + ESLint 拡張機能環境で eslint v9以降のフラットコンフィグを採用したらハマった話]]></title><description><![CDATA[
 TL;DR
VSCode の設定から eslint.useFlatConfig を検索してチェックを入れる。または設定をリセット（後述）する。
あるいは .vscode/settings.json に以下の様な設定を加える。
{
	"eslint.useFlatConfig": true,
}

 経緯
VSCode も TypeScript も ESLint も 初心者の人間が VSCode のプロジェクトにイマドキの eslint の設定法らしい Flat Config をいきなり導入してみようとしたら変なところでハマった。

 TypeScript 向け eslint の導入手...]]></description><link>https://zenn.dev/tettekete/articles/9d65fd1b0720ca</link><guid isPermaLink="true">https://zenn.dev/tettekete/articles/9d65fd1b0720ca</guid><pubDate>Fri, 06 Sep 2024 02:10:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LzZ1UDuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%252B%2520ESLint%2520%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%2520eslint%2520v9%25E4%25BB%25A5%25E9%2599%258D%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25B0%25E3%2582%2592%25E6%258E%25A1%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tettekete%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MzMzNDJmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tettekete</dc:creator></item><item><title><![CDATA[Cloudflare Workers / Cron Triggers で定期的にスクレイピング (GitHub Actions デプロイ)]]></title><description><![CDATA[なんだかんだたまにやるスクレイピングを Cloudflare Workers で定期実行する方法で実装してみました。
なお、Google Apps Script (GAS) でも同様のことができます（実際、最初は GAS でやろうとしていました）。
GAS での実装方法については以下の記事も参考にしていただけると嬉しいです！
定額給付金の案内ページを監視して更新があれば Slack に通知するボット #GoogleAppsScript - Qiita
https://qiita.com/y_k/items/39be3f144bbdd7d4ca89

 概要
Cloudflare Work...]]></description><link>https://zenn.dev/y_k/articles/automate-scraping-cloudflare-workers-cron-triggers</link><guid isPermaLink="true">https://zenn.dev/y_k/articles/automate-scraping-cloudflare-workers-cron-triggers</guid><pubDate>Thu, 05 Sep 2024 22:21:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vxJ1pd_I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%2520%252F%2520Cron%2520Triggers%2520%25E3%2581%25A7%25E5%25AE%259A%25E6%259C%259F%25E7%259A%2584%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2520%2528GitHub%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YetAnother_yk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YetAnother_yk</dc:creator></item><item><title><![CDATA[カラーテーマによるSVGの描画の変化をチェックできるツールを作ってみた]]></title><description><![CDATA[
SVG内のスタイル指定においても prefers-color-scheme が使え、それを利用してライトテーマ・ダークテーマごとに配色が異なる favicon を一つのSVGファイルで実現できることは既に知られているかと思います。
favicon 以外でも、GitHubのREADMEページにロゴとなるSVGを配置し、各テーマに対応している例も見かけます。
しかし各カラーテーマ下のSVGの描画変化を一画面で確認・比較できる方法が見つかりませんでした。Vue と DOM のおさらいも兼ねて確認・比較できるツールページを作成してみました。

 作ったもの
https://nanase.cc/...]]></description><link>https://zenn.dev/nanase_t/articles/7c14092b24424c</link><guid isPermaLink="true">https://zenn.dev/nanase_t/articles/7c14092b24424c</guid><pubDate>Thu, 05 Sep 2024 15:31:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--anBE0Z97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2586%25E3%2583%25BC%25E3%2583%259E%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BSVG%25E3%2581%25AE%25E6%258F%258F%25E7%2594%25BB%25E3%2581%25AE%25E5%25A4%2589%25E5%258C%2596%25E3%2582%2592%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2583%25E7%2580%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmZDc4M2MzOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>七瀬</dc:creator></item><item><title><![CDATA[bunでパッケージにpatchをあててみた]]></title><description><![CDATA[こんにちは〜 NITICのこうちゅけです。
以前にクラスメイトの@れおはかせがBunでパッチを当てるためにpatch-packageを動かす方法という記事を執筆していました。
この記事はbun patchコマンドが実装される前に執筆されていて、patch-packageをbunで動かすためにpatch-packageでpatch-packageにpatchを当てるということをした、という記事でした。
現在はbun patchが実装され、bunだけでpatchが当てられるようになったので実際に使ってみた、という記事です。
bunの公式ページ
https://bun.sh/docs/inst...]]></description><link>https://zenn.dev/koutyuke/articles/bun-patch-example</link><guid isPermaLink="true">https://zenn.dev/koutyuke/articles/bun-patch-example</guid><pubDate>Thu, 05 Sep 2024 12:28:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bqnQDs2I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:bun%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25ABpatch%25E3%2582%2592%25E3%2581%2582%25E3%2581%25A6%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2586%25E3%2581%25A1%25E3%2582%2585%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pENGRRSUhSYjZWUHhjSzlkMDJKQ0JJUURxV0MzeXhUbzFsdHB4dGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こうちゅけ</dc:creator></item><item><title><![CDATA[ReferenceError: Request is not defined]]></title><description><![CDATA[例えば、React Routerが使われたコードをjestでテストすると、タイトルのエラーが発生すると思います。
原因としては、下記になります。
https://github.com/jsdom/jsdom/issues/1724
上を読むとどうやら、単に、jsdomにRequestオブジェクトが実装されてないというだけになるかと思います。
issue自体も7年前にopenになってますし、RequestやFetch_APIもそんな新しい感じがしないので、jsdom、ちょっと大丈夫かなっていう感じは少しします。
↑のissue内にも対応方法がいろいろ載ってますが、
React Router...]]></description><link>https://zenn.dev/sikmi_tech/articles/e5597a5be6135a</link><guid isPermaLink="true">https://zenn.dev/sikmi_tech/articles/e5597a5be6135a</guid><pubDate>Thu, 05 Sep 2024 11:16:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ssGUTg5x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:ReferenceError%253A%2520Request%2520is%2520not%2520defined%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:na8esin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlYzhlY2ZlNDguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%2597%25E3%2581%258F%25E3%2581%25BF%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2htRnZJU0VZaHpTODM3VVpLRE5tdHNYV2FBazF4WE5GSUt3TG1oPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>na8esin</dc:creator></item><item><title><![CDATA[Server Actionsではconformを使うのが良さそう@2024/09/05]]></title><description><![CDATA[
 はじめに
Next.jsでServer Actionsを使ったフォーム処理を記述していたら実装に手間取ったのと、conformというライブラリが良さそうだったのでメモを残しておきます。

 結論
Server Actionsにはconformを使うが良さそうです。なぜ「@2024/09/05」かというと、react-hook-formも今後Server Actionsに対応予定だからです。
私も含めreact-hook-formのほうが馴染みがある人は多いのではないでしょうか。
https://github.com/edmundhung/conform

 フォーム要件

フロントで...]]></description><link>https://zenn.dev/ishiyama/articles/725dd443234f8c</link><guid isPermaLink="true">https://zenn.dev/ishiyama/articles/725dd443234f8c</guid><pubDate>Thu, 05 Sep 2024 09:42:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DjCVqraS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Server%2520Actions%25E3%2581%25A7%25E3%2581%25AFconform%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2595%25E3%2581%259D%25E3%2581%2586%25402024%252F09%252F05%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ishiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ODA5ZmJmZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ishiyama</dc:creator></item><item><title><![CDATA[ExcelのシートをJSON形式に変換する際に空行を読み込ませたくない]]></title><description><![CDATA[
 はじめに
ExcelからJSON形式に変換する際、Excelのシート上では空のはずが空行で読み込まれる事象に遭遇しました。
事前に行ごと削除すれば解決できますが、そもそもJSON形式に変換する際は空行を読み込ませたくないと思い、解決方法の備忘録として残します。

 環境



ライブラリ
バージョン




xlsx-js-style
1.2.0


typescript
5.5.3




 解決方法
sheet_to_jsonメソッドのblankrowsオプションをfalseに設定することで空行を読み込ませないようにできます。
非常にシンプルでした。
import XLSX fr...]]></description><link>https://zenn.dev/communitio/articles/avoid-empty-rows-with-xlsx-utils-sheet-to-json</link><guid isPermaLink="true">https://zenn.dev/communitio/articles/avoid-empty-rows-with-xlsx-utils-sheet-to-json</guid><pubDate>Thu, 05 Sep 2024 07:23:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dUIeieP3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592JSON%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E7%25A9%25BA%25E8%25A1%258C%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BE%25E3%2581%259B%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Ryosuke-Kawanobe%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjJlMWY1MjUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AA%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSktyZ2FERFM5ZjB2ZjlkekZuU012U3RkVFhJSWFuYldGS2NXal9uZUtWallQMU1BPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryosuke-Kawanobe</dc:creator></item><item><title><![CDATA[ビット演算でUIを制御したい！ 基礎編]]></title><description><![CDATA[TypeScript/JavaScriptで、ビット演算を使ってUIを制御する実装について書きます！
今回は基礎編として、入力項目とビットが1対1に対応するパターンについてデモコードを掘り下げながら解説します。
ビット演算とか二進数って何に使うの？ と疑問に思う方にも知ってもらうことで、実際の現場でビット演算を使った実装がしやすくなればみんなハッピー⭐（多分）。

 やりたいこと
解説用に👇のような簡単なデモを用意しました！
実際の動作やコードを確認しながら本文を読んでいただければと思います🙇



Yes/No で回答する何問かのアンケートを設けたい！
ユーザーの回答に応じて固有の応答...]]></description><link>https://zenn.dev/tor_inc/articles/2d11a5000c1080</link><guid isPermaLink="true">https://zenn.dev/tor_inc/articles/2d11a5000c1080</guid><pubDate>Thu, 05 Sep 2024 06:38:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--88UsJlfa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E6%25BC%2594%25E7%25AE%2597%25E3%2581%25A7UI%25E3%2582%2592%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2520%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AF%25E3%2582%258A%25E3%2581%25BC%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2YWFmMzM0ZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%25BC%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNWZmNjk4MTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はりぼて</dc:creator></item><item><title><![CDATA[【TypeScript】ユーザー定義型ガードを使って undefined を省いた配列操作を行う]]></title><description><![CDATA[
 はじめに
本記事の結論を先に書いておくと「特定のオブジェクト（配列）のfilter操作時にundefinedを省いた形にしたい場合はユーザー定義型ガードを使って明示的に処理を記述（型注釈）したほうが安全」という話です。
https://typescriptbook.jp/reference/functions/type-guard-functions
ユーザー定義型ガードについては上記が詳しいので、ここでは端的に説明します。
ユーザー定義型ガードは「引数名 is 型という記述で、（filter操作など処理の）返り値がtrueの場合「引数名に指定した型」として扱う」という仕組みです。
...]]></description><link>https://zenn.dev/benjuwan/articles/90e77010d5be8f</link><guid isPermaLink="true">https://zenn.dev/benjuwan/articles/90e77010d5be8f</guid><pubDate>Thu, 05 Sep 2024 03:40:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uZmjKU6E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E5%25AE%259A%25E7%25BE%25A9%25E5%259E%258B%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520undefined%2520%25E3%2582%2592%25E7%259C%2581%25E3%2581%2584%25E3%2581%259F%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:benjuwan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnd2XzJhLTN4SnJmSkN0Ql9wMkkwWUlVaVlTY1ozLTFQZFZoNkxsaUIyRmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>benjuwan</dc:creator></item><item><title><![CDATA[【JavaScript】BigIntに頼らずにNumber型の限界を超えてみる]]></title><description><![CDATA[!
ネタです。プロダクションで使用して変になっても知りません

Number型で正常に扱える整数値の上限は、Number.MAX_SAFE_INTEGERで定義される値（一般的には9007199254740991）です。それより大きい整数値を扱うにはBigInt型を利用することになります。
ですが、今回は数値を文字列型で扱い、BigInt型にすることなくNumber型の限界を超えた計算ができるようにしてみたいと思います。時間の都合上、自然数の足し算だけやってみます。

 どうやるの？
もちろん、普通の構文でNumber型を超えることはできません。今回は、小学校で習った筆算のアプローチを参...]]></description><link>https://zenn.dev/kakkokari_gtyih/articles/078743287873cd</link><guid isPermaLink="true">https://zenn.dev/kakkokari_gtyih/articles/078743287873cd</guid><pubDate>Thu, 05 Sep 2024 02:49:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lSOla1K---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591BigInt%25E3%2581%25AB%25E9%25A0%25BC%25E3%2582%2589%25E3%2581%259A%25E3%2581%25ABNumber%25E5%259E%258B%25E3%2581%25AE%25E9%2599%2590%25E7%2595%258C%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25EF%25BC%2588%25E4%25BB%25AE%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWViNWU2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>（仮）</dc:creator></item><item><title><![CDATA[URLシェアを支える技術 lz-string]]></title><description><![CDATA[WebアプリでURLシェアを実装する際に、URLにすべての情報を持たせてしまいたい場合があります。そのとき、情報をそのままクエリ文字列に渡してしまうとURLの文字数制限に引っかかってしまうかもしれません(厳密にはURLに上限はないようですが、現実はいつもブラウザ実装依存)。
そんなときURLセーフな文字列形式で圧縮してくれるライブラリがあります。lz-sringです。
https://github.com/pieroxy/lz-string

 変換の例
ライブラリで compressToEncodedURIComponent というAPIが提供されているのでこれを使用します。標準のen...]]></description><link>https://zenn.dev/chot/articles/what-is-lz-string</link><guid isPermaLink="true">https://zenn.dev/chot/articles/what-is-lz-string</guid><pubDate>Thu, 05 Sep 2024 00:47:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---ROl1Mcq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URL%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520lz-string%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2599%25E3%2581%25A6%25E3%2581%2583%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMTEyZmJmM2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すてぃん</dc:creator></item><item><title><![CDATA[＃45　Googleが発表したGeminiを試してみた]]></title><description><![CDATA[
 概要
2023年12月7日にGoogleがGeminiを発表しましたので、言語モデルとして有名なOpenAIのGPTと対話をさせてみてみようと思います

 実装と定義
今回は、Geminiに対応するクラスとOpenAI(GPT)に対応するクラスをそれぞれ作成します

 Gemini側の実装
公式のドキュメントを参考にチャットに必要な部分を実装します

チャットの初期化を行うinitChat()
メッセージの送信を行うsendChat()

import { ChatSession, GenerativeModel, GoogleGenerativeAI } from "@google...]]></description><link>https://zenn.dev/nxted_sapporo/articles/4c3ad852e16e64</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/4c3ad852e16e64</guid><pubDate>Thu, 05 Sep 2024 00:14:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--apC917fb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%258345%25E3%2580%2580Google%25E3%2581%258C%25E7%2599%25BA%25E8%25A1%25A8%25E3%2581%2597%25E3%2581%259FGemini%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[Node.jsでパスを連結する]]></title><description><![CDATA[JavaScript (TypeScript) でパスを連結するとき、文字列を結合して行いがちです。
const baseUrl = "https://example.com";
const urlPath = "foo/bar";
const url = `${baseUrl}/${urlPath}`;

console.log(url); // https://example.com/foo/bar
上の例では正しいパスが得られましたが、連結する値によっては不都合が生じる場合があります。
const baseUrl = "https://example.com/";
const ur...]]></description><link>https://zenn.dev/pupepa/articles/709f81eaaf8d73</link><guid isPermaLink="true">https://zenn.dev/pupepa/articles/709f81eaaf8d73</guid><pubDate>Wed, 04 Sep 2024 23:48:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0OPuZWkO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25A7%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E9%2580%25A3%25E7%25B5%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pupepa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2NWY5YjY5YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pupepa</dc:creator></item><item><title><![CDATA[【イラスト付き】Next.jsの通信とRSA【要点一気読み】]]></title><description><![CDATA[

 はじめに
皆さんこんにちは。
今回はNext.jsの通信周りの基本的な書き方についてご紹介します。
Next.jsは通信に関して独自の機能を用意しています。またWebAPI作成も簡単に行うことができます。

 こんな人にオススメ

Next.jsの通信周りの書き方の基本について理解したい
ブラウザAPIのfetchを使ったことがある

初めて学習する方にも分かるように、丁寧に解説していきます。
すでに利用している方も、是非一度目を通していただけると嬉しいです。
😋 Next.jsの通信周りのコードの雰囲気を捉えられるようにご紹介します♪

 通信とWebAPI


 まずポイントを...]]></description><link>https://zenn.dev/peter_norio/articles/40e8fee7c8eac5</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/40e8fee7c8eac5</guid><pubDate>Wed, 04 Sep 2024 15:34:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z9e3PDfM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2580%2591Next.js%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25A8RSA%25E3%2580%2590%25E8%25A6%2581%25E7%2582%25B9%25E4%25B8%2580%25E6%25B0%2597%25E8%25AA%25AD%25E3%2581%25BF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[【イラスト付き】Next.jsの書き方を把握する【要点一気読み】]]></title><description><![CDATA[

 はじめに
皆さんこんにちは。
今回はNext.jsのコードの基本的な書き方についてご紹介します。
Next.jsはReactをベースとしたフレームワークであり、基本的にReactと同様に記述可能ですが、Next.js固有のルールなどもあります。

 こんな人にオススメ

Next.jsの書き方の基本について理解したい
Reactをの書き方をすでに理解している

初めて学習する方にも分かるように、丁寧に解説していきます。
すでに利用している方も、是非一度目を通していただけると嬉しいです。
😋 Next.jsのコードの雰囲気を捉えられるようにご紹介します♪

 ルーティング（App R...]]></description><link>https://zenn.dev/peter_norio/articles/2c5a03770164f2</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/2c5a03770164f2</guid><pubDate>Wed, 04 Sep 2024 15:29:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w225gMYJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2580%2591Next.js%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E6%258A%258A%25E6%258F%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590%25E8%25A6%2581%25E7%2582%25B9%25E4%25B8%2580%25E6%25B0%2597%25E8%25AA%25AD%25E3%2581%25BF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[【イラスト付き】Next.jsの概要を把握する【要点一気読み】]]></title><description><![CDATA[

 はじめに
皆さんこんにちは。
今回はNext.jsの概要についてご紹介します。
Next.jsはReactをベースとしたフレームワークであり、Reactをより簡単に扱うことができます。

 こんな人にオススメ

Next.jsの概要について理解したい
Next.jsの記述の雰囲気を確認したい

初めて学習する方にも分かるように、丁寧に解説していきます。
すでに利用している方も、是非一度目を通していただけると嬉しいです。
😋 Next.jsの輪郭を捉えられるようにご紹介します♪

 Next.jsとは


 まずポイントをチェック

フルスタックなReactフレームワーク
React...]]></description><link>https://zenn.dev/peter_norio/articles/080fee3a662c5b</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/080fee3a662c5b</guid><pubDate>Wed, 04 Sep 2024 15:18:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9UQoaRC7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2580%2591Next.js%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2582%2592%25E6%258A%258A%25E6%258F%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590%25E8%25A6%2581%25E7%2582%25B9%25E4%25B8%2580%25E6%25B0%2597%25E8%25AA%25AD%25E3%2581%25BF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[【イラスト付き】発展的な型操作【丁寧に解説】]]></title><description><![CDATA[

 はじめに
皆さんこんにちは。
今回はTypeScriptでの発展的な型操作についてご紹介します。
TypeScriptは型から新たな型を生成することができます。型の一部を取得したり、似たような型を生成するなど、型を再利用して新たな型を生成できます。今回はTypeScriptでの型の再利用についてご紹介します。

 こんな人にオススメ

TypeScriptの発展的な型操作について知りたい。
TypeScriptのユーティリティ型について知りたい。

初めて学習する方にも分かるように、丁寧に解説していきます。
すでに利用されている方も、是非一度目を通していただけると嬉しいです。
😋 ...]]></description><link>https://zenn.dev/peter_norio/articles/40d47658854e4e</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/40d47658854e4e</guid><pubDate>Wed, 04 Sep 2024 15:07:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eO8TASYN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2580%2591%25E7%2599%25BA%25E5%25B1%2595%25E7%259A%2584%25E3%2581%25AA%25E5%259E%258B%25E6%2593%258D%25E4%25BD%259C%25E3%2580%2590%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[Elysia.jsを始める【Handler】]]></title><description><![CDATA[※ 主に https://elysiajs.com/essential/handler.html の日本語訳+αの検証をしているものになっているので、詳細は公式ページを参照のこと

 Elysiaのhandler
import { Elysia } from 'elysia'

new Elysia()
    .get('/mikochi', () =&gt; 'Nyahallo !')
    .listen(3000)
リソース（パス）に対して定義されているメソッドをElysiaではhandlerとしている。
上記であれば、() =&gt; 'Nyahallo !'部分がhandl...]]></description><link>https://zenn.dev/69incat/articles/1381df1f687ec7</link><guid isPermaLink="true">https://zenn.dev/69incat/articles/1381df1f687ec7</guid><pubDate>Wed, 04 Sep 2024 14:12:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Gx-VEn9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Elysia.js%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2580%2590Handler%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rock-in-Cats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ljc0VoMTZOeVB2NTRXT3B1Q1BpanRlaWVCWkdNQ21Hay1yN281Q2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rock-in-Cats</dc:creator></item><item><title><![CDATA[API 開発を革新する！Fastify と JSON Schema、OpenAPI を用いたスキーマ駆動開発の実践ガイド]]></title><description><![CDATA[※タイトル盛りすぎたかもしれません。

 スキーマ駆動開発とは
スキーマを最初に定義しておき、その定義を元にバックエンド、フロントエンドを開発します。
スキーマは、ここではAPIの仕様のことで、エンドポイント、メソッド、リクエスト、レスポンスなどの定義を指します。
バックエンド、フロントエンドが別れているアーキテクチャには親和性が高いと思います。
そう考える理由(メリット)は以下です。

バックエンド、フロントエンドでAPI定義の齟齬がなくなる
最初にスキーマ定義すれば、バックエンド、フロントエンド同時に開発できる


 Fastifyでのスキーマ駆動開発の進め方

 環境
今回は、フロ...]]></description><link>https://zenn.dev/x_point_1/articles/922f5f5ed2a5dd</link><guid isPermaLink="true">https://zenn.dev/x_point_1/articles/922f5f5ed2a5dd</guid><pubDate>Wed, 04 Sep 2024 14:00:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cSTW8aAp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E9%259D%25A9%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2581Fastify%2520%25E3%2581%25A8%2520JSON%2520Schema%25E3%2580%2581OpenAPI%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%25AE%259F%25E8%25B7%25B5%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshiyuki%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWdCU1IzQ2hSdzBrcU5QLXRjSEJzYmh4Qm9iZUtBZnBLdkpfTW84aWkzcWVTb1EtZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Sato</dc:creator></item><item><title><![CDATA[【イラスト付き】TypeScriptでのオブジェクト指向【丁寧に解説】]]></title><description><![CDATA[

 はじめに
皆さんこんにちは。
今回はTypeScriptでのオブジェクト指向プログラミングをご紹介します。
TypeScriptはJavaScriptが持つ言語仕様に加えて、クラスをより本格的に使ったオブジェクト指向を実現する機能が追加されています。JavaScript単体ではクラスの記述方法に限界があったり、他のクラスベースのオブジェクト指向言語には当然ある機能が欠けています。今回はTypeScriptでのオブジェクト指向プログラミングで使える要素についてご紹介します。

 こんな人にオススメ

TypeScriptのクラスの書き方を知りたい
TypeScriptの継承やインター...]]></description><link>https://zenn.dev/peter_norio/articles/8c0d50f2ef4150</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/8c0d50f2ef4150</guid><pubDate>Wed, 04 Sep 2024 11:53:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CHPRsehp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25E3%2580%2591TypeScript%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2580%2590%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item></channel></rss>