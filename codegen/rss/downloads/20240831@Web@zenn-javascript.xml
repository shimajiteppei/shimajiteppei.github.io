<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 31 Aug 2024 12:03:50 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[1分で簡単に理解するデータベース管理システム]]></title><description><![CDATA[
 データベース管理システム DBMS


 リレーショナルデータベース管理システム(RDBMS)
決められた項目、決められたデータ量を管理するときに、表形式でデータを管理するときに使うデータベース。ある程度関係性がある

 NoSQL（非リレーショナルデータベース）
項目もデータ量も違うデータを管理するときに使うデータベース

]]></description><link>https://zenn.dev/maiamitorio/articles/2fa19422013067</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/2fa19422013067</guid><pubDate>Sat, 31 Aug 2024 09:39:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7_an6uni--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E5%2588%2586%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[TanStack Start(alpha)をはじめよう]]></title><description><![CDATA[フルスタック React フレームワークである TanStack Start の使用方法について解説します。詳細はTanStack Start OverviewやGitHubリポジトリを参照してください。

 TanStack Startとは
TanStack Startは、TanStack Routerを基盤としたフルスタックReactフレームワークです。サーバーサイドレンダリング（SSR）、ストリーミング、サーバー関数、バンドルなどの機能を提供します。
https://tanstack.com/start/latest

 プロジェクトのステータス
TanStack Startは現在...]]></description><link>https://zenn.dev/laiso/articles/5df30bf71db6b7</link><guid isPermaLink="true">https://zenn.dev/laiso/articles/5df30bf71db6b7</guid><pubDate>Sat, 31 Aug 2024 07:54:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7Q6nBpLe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TanStack%2520Start%2528alpha%2529%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>laiso</dc:creator></item><item><title><![CDATA[[GSAP, Canvas] スクロール時の画像モザイクアニメーション]]></title><description><![CDATA[
 この記事の概要
最近CanvasとWebGLの勉強を始めました。拙いコードですが、お手柔らかに。
まずは完成品をどうぞ。
GSAPのScrollTriggerとCanvasを使って、スクロール時のアニメーション「画像モザイク→モザイクなし」をやってみました。codePenに載せてます。


 GSAPのScrollTrigger
Canvasの前にこちらをご覧頂きたい。

 ScrollTriggerなんぞや？
アニメーション実装に特化した神ライブラリ"GSAP"、から提供されるプラグインの１つ。
ウィンドウスクロール時のイベントを簡単に設定できます。
自力で実装する場合はInter...]]></description><link>https://zenn.dev/nekoengineer/articles/520efbc5d49ac2</link><guid isPermaLink="true">https://zenn.dev/nekoengineer/articles/520efbc5d49ac2</guid><pubDate>Sat, 31 Aug 2024 06:40:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SwwLtvjC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BGSAP%252C%2520Canvas%255D%2520%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E6%2599%2582%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2583%25A2%25E3%2582%25B6%25E3%2582%25A4%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2580%259A%25E3%2582%258A%25E3%2581%2599%25E3%2581%258C%25E3%2582%258A%25E3%2581%25AEfuga%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlhFazRFYzZrUnYwSHRNeWVCZ0JQSEFCdEtBdXFWaUxycHRvYi1JTUNaX19ZaDdVMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>通りすがりのfuga</dc:creator></item><item><title><![CDATA[イラストでそこそこわかる非同期処理、Promise]]></title><description><![CDATA[
 同期処理、非同期処理とは

 同期処理
一つの作業を終えるまで次の作業を行わない。

 非同期処理
1つの作業が終わるのを待たずに他の作業を始める。

 例え話
友達（A君、B君）と一緒にケーキを作ることを考えます。作業としてはケーキを焼く、皿の準備をする、トッピングの準備をする、があるとします。
同期処理の場合：A君がケーキを焼く。焼き終わってから、B君が皿の準備をはじめる。皿の準備が終わった後、自分はトッピングの準備をはじめる。

非同期処理の場合：A君がケーキを焼き始める。それと同時に、B君が皿の準備を始める。自分はトッピングの準備を始める。

上の説明から分かるように、非同期...]]></description><link>https://zenn.dev/maiamitorio/articles/ee68b6467234b3</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/ee68b6467234b3</guid><pubDate>Sat, 31 Aug 2024 00:56:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J5YCdeV4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E3%2581%259D%25E3%2581%2593%25E3%2581%259D%25E3%2581%2593%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2581Promise%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[clsx入門 - 動的CSSクラス生成のためのJavaScriptユーティリティの紹介]]></title><description><![CDATA[
 1. はじめに

clsxとは、JavaScriptやReactで、条件によってCSSのクラス名文字列を動的に生成するための小さな（239B）JavaScriptユーティリティです。
Next.jsの公式教材で紹介されています。

https://nextjs.org/learn/dashboard-app/css-styling#using-the-clsx-library-to-toggle-class-names


この記事では、clsxの基本的な使い方、実践的なコード例を学ぶことができます。

https://github.com/lukeed/clsx

 2. clsx...]]></description><link>https://zenn.dev/yuki_fujisawa/articles/8f868d46c2bc39</link><guid isPermaLink="true">https://zenn.dev/yuki_fujisawa/articles/8f868d46c2bc39</guid><pubDate>Sat, 31 Aug 2024 00:09:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FO1sivqv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:clsx%25E5%2585%25A5%25E9%2596%2580%2520-%2520%25E5%258B%2595%25E7%259A%2584CSS%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E7%2594%259F%25E6%2588%2590%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEJavaScript%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%2597%25A4%25E6%25BE%25A4%25E5%258B%2587%25E6%25A8%25B9%2528Yuki%2520Fujisawa%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyOWNiMTQyZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>藤澤勇樹(Yuki Fujisawa)</dc:creator></item><item><title><![CDATA[フロントエンドライブラリ開発におけるpackage.jsonのエントリーポイント設定]]></title><description><![CDATA[フロントエンドライブラリ開発において、package.jsonに設定するエントリーポイントについて、理解しきれずに設定していた状態だったため、公式ドキュメント等を通じて理解を深めました。その内容をまとめた記事です。

 前提
フロントエンドライブラリのエントリーポイントは、通常package.jsonに設定します。この設定の基本はNode.jsのドキュメントに記載されています。
プロジェクトがライブラリを使用する際、そのプロジェクトのバンドラー(webpack, viteなど)はライブラリによって定義されたpackage.jsonのエントリーポイントを参照しますが、その参照方法は個別のバ...]]></description><link>https://zenn.dev/t0daaay/articles/8dd448ec5c960d</link><guid isPermaLink="true">https://zenn.dev/t0daaay/articles/8dd448ec5c960d</guid><pubDate>Sat, 31 Aug 2024 00:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3BZUe1Li--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bpackage.json%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzZjZlYWU1ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つじ</dc:creator></item><item><title><![CDATA[Elysia + PGlite + Drizzleでの簡易API開発]]></title><description><![CDATA[
最近PGliteと呼ばれるPostgreSQLのWebAssemblyバイナリが登場しました。
インメモリへの簡易的なRDBの構築がプログラム内で完結できるようになりました。
これは構築のコストと開発の敷居を下げてくれるので非常に便利です。
今回はBun製フレームワークのElysiaとPGliteとORMのDrizzleで簡易的なAPIを作成する方法を記録いたします。


 環境

macOS 13.6.7
bun 1.1.26


 成果物

以下の本の情報のCRUD操作を行うREST APIを作成します。

GET /books
GET /books/:id
POST /books...]]></description><link>https://zenn.dev/t_o_d/articles/8ebe61e90a5b0a</link><guid isPermaLink="true">https://zenn.dev/t_o_d/articles/8ebe61e90a5b0a</guid><pubDate>Fri, 30 Aug 2024 15:35:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FtXHxo-U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Elysia%2520%252B%2520PGlite%2520%252B%2520Drizzle%25E3%2581%25A7%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593API%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_o_d%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYzIwYTUyNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_o_d</dc:creator></item><item><title><![CDATA[ジュニアエンジニアがセルフコードレビューを行う際に注意したいこと]]></title><description><![CDATA[
こんにちは、タビアン株式会社で採用責任者をやっている黒田です。
今回は弊社エンジニアの伊藤と共同執筆を行い、伊藤がエンジニアとしてセルフコードレビューを行う際に注意していることをまとめていただきました。
ジュニアエンジニアがコードレビューの際に陥りがちなミスや指摘されがちな部分について、伊藤自身の反省点や経験を踏まえてもらってまとめてもらっています。
長い時間をかけてコードを書いたにもかかわらず、たくさんの指摘事項をもらうとレビュアーの時間を割いていることもあり、プロジェクトの進行を遅れさせる原因にもなり得ます。読者の皆さんにもレビュアーとしてレビュイーとして類似のご経験があるのではな...]]></description><link>https://zenn.dev/tabian_zenn/articles/f66b6dcf3d7931</link><guid isPermaLink="true">https://zenn.dev/tabian_zenn/articles/f66b6dcf3d7931</guid><pubDate>Fri, 30 Aug 2024 11:09:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eG4FUX9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2582%25BB%25E3%2583%25AB%25E3%2583%2595%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2584%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%25EF%25BC%25A0%25E3%2582%25BF%25E3%2583%2593%25E3%2582%25A2%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25EF%25BD%259C%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxMzIzMGI5ODYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tabian%2520Zenn%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlODRiMWViOTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やっさん＠タビアン株式会社｜エンジニア採用｜新規事業の実現屋エンジニア</dc:creator></item><item><title><![CDATA[初めまして]]></title><description><![CDATA[初めまして、中国出身です。
日本語を練習するために、ここに技術に関する文章を発表しはじめます。
主にフロントエンド技術に関連する内容で、JavaScript、TypeScript、React、Angular、Ionicなどについて書いていきます。
どうぞよろしくお願いします。
]]></description><link>https://zenn.dev/kyou505/articles/985b99d423d01c</link><guid isPermaLink="true">https://zenn.dev/kyou505/articles/985b99d423d01c</guid><pubDate>Fri, 30 Aug 2024 05:58:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vm5pQRT3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takabashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZDNkMTYzMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takabashi</dc:creator></item><item><title><![CDATA[Class-Validator]]></title><description><![CDATA[
 Class-validator
標準搭載されているデコレーターの種類

 一般的な検証デコレーター(common)

 @IsDefined(value: any)

 概要
値が定義されているかどうかを確認する。
(!== undefined, !== null)
これはskipMissingPropertiesオプションを無視する唯一のデコレータです。
Qiitaより
skipMissingProperties: trueに設定すると、バリデータはバリデーションオブジェクトにないすべてのプロパティのバリデーションをスキップします。
引用 - Qiita

 デコレータ
@IsDe...]]></description><link>https://zenn.dev/rabi10/articles/a949744dd8ae06</link><guid isPermaLink="true">https://zenn.dev/rabi10/articles/a949744dd8ae06</guid><pubDate>Fri, 30 Aug 2024 05:33:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nH09s77---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Class-Validator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rabi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hpUFBPMlhXWTJodnQwMEdKd3pZRTdTRFd3TkJMWVkxYkVhRnVpM0tBPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rabi</dc:creator></item><item><title><![CDATA[React19で新しくなったuseTransition]]></title><description><![CDATA[
 はじめに
現在、React19 の RC 版がリリースされています。
https://ja.react.dev/blog/2024/04/25/react-19
React19 では様々な新機能が発表されていますが、その中でも新しくなったuseTransitionについて紹介してきます。
本記事では、


useTransition を使わない場合
React18 までの useTransition を使った場合
React19 で新しくなった useTransition を使った場合

の 3 つを比較して説明していきます。

 useTransition とは
https://j...]]></description><link>https://zenn.dev/h_yokoyama/articles/react19-usetransition</link><guid isPermaLink="true">https://zenn.dev/h_yokoyama/articles/react19-usetransition</guid><pubDate>Thu, 29 Aug 2024 14:24:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2qoSd4v---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259FuseTransition%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hayato%2520Yokoyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNDg0ZTcyMTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hayato Yokoyama</dc:creator></item><item><title><![CDATA[空配列に対するArray.prototype.every()の挙動]]></title><description><![CDATA[
 はじめに
この記事は、きちんとドキュメントを読まずにメソッドを使用した自分への戒めであり、記事というよりメモ書きのようなものです。

 Array.prototype.every()の基本的な挙動
Array.prototype.every()は下記のように、配列内の要素が特定の条件に当てはまるかチェックし、条件に合わない場合はfalseを返します。
const array = [10, 20, 30, 40, 50]
const result = array.every((a) =&gt; a &lt; 30)
console.log(result) // false
逆に言えば、...]]></description><link>https://zenn.dev/ncdc/articles/e110ec7d92a8a1</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/e110ec7d92a8a1</guid><pubDate>Thu, 29 Aug 2024 13:13:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CETvJdY5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A9%25BA%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258BArray.prototype.every%2528%2529%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:HS%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHVQY2tqSGFmYmlacHVwTEhvaW50bzVQSFBkbjM1NllVby1Jd2haSFlYa0MtZ1d4SDk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HS</dc:creator></item><item><title><![CDATA[祝！Valtio v2リリース]]></title><description><![CDATA[https://x.com/dai_shi/status/1829141648670175491
本当はReact 19と同時にリリースするつもりだったのですが、もう待ちきれないので、リリースしちゃいました。Valtio v2でpromiseを使う場合はReact 19の use を使う必要があるのですが、React 18向けの react18-use を作ったので、当面はそれで凌いでいただこうと思います。
]]></description><link>https://zenn.dev/dai_shi/articles/2ec4b8eb6ae88c</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/2ec4b8eb6ae88c</guid><pubDate>Thu, 29 Aug 2024 13:08:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JPL6GXW2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A5%259D%25EF%25BC%2581Valtio%2520v2%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[Nuxt3の継続できて辛くないユニットテスト方法]]></title><description><![CDATA[
 はじめに
私は普段、Nuxt3でフロントエンド開発をすることが多いのですが、単体テストの方法が確立しておりませんでした。
最近、自分なりの方法が確立したので、紹介します。
今回紹介する技術を使ってテストの準備をしていけば、Nuxt3で、効率的かつ継続が辛くないテストコードが書けますので、是非読んで実行してください！

 できること

Nuxt3 × vitestでの単体テストの方法をすることができる。
テストファイルで、毎回お決まりの設定を書かないで済むようになる。
Nuxt環境での単体テストは、オートインポートやuseStateなどのモックが辛いが、それをほぼしないで良くなる。
A...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/bf98c7af78c4d7</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/bf98c7af78c4d7</guid><pubDate>Thu, 29 Aug 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IGjRETIR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt3%25E3%2581%25AE%25E7%25B6%2599%25E7%25B6%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25A6%25E8%25BE%259B%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu_aoringo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[VSCode の TypeScript のインポート部分をフォーマットする機能]]></title><description><![CDATA[
 概要
VSCode には、TypeScript での以下のフォーマット機能があります。

未使用のインポートの削除
インポートの並び替え（昇順）

以下、該当コマンドです。
削除: TypeScript: Remove Unused Imports
並び替え: TypeScript: Sort Imports
削除&amp;並び替え： Organize Imports
なお、入力先（コマンドパレット）は以下のショートカットで開けます。
Mac: Cmd + Shift + P
Win: Ctrl + Shift + P
VSCode: 1.84.2

 コマンドを使用してみる
コマン...]]></description><link>https://zenn.dev/masani/articles/eac69a28d2779a</link><guid isPermaLink="true">https://zenn.dev/masani/articles/eac69a28d2779a</guid><pubDate>Thu, 29 Aug 2024 11:21:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TojC78j5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E3%2581%25AE%2520TypeScript%2520%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E9%2583%25A8%25E5%2588%2586%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkIzN29iSFVFazgteDh1eEJVTG1JWmtCOHItb3htWGY0ZkNtaUJVcXRTPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masani</dc:creator></item><item><title><![CDATA[Denoでやる「web標準のバックエンドアプリのテスト」の記事]]></title><description><![CDATA[
 要約
yusukebeさんの Web標準のバックエンドアプリのテストの記事をdenoで
やっています。

 はじめに
かなり長い間、zennに記事を書いてないので、もっと気軽に記事を出してみるテスト。

 この文章を書いた動機
他のプログラミング言語でプログラムを書いた経験はある人であっても、typescriptでプログラミング
を始めるには、私はちょっとめんどくさいと思っています。
具体的には、その時々で選べるツールがおおく、気持ちよくプログラミングを開始する環境設定に手間取る所です。
Denoならlinter/formater/test/LSPが全部ついてきて、サクっとコードを書...]]></description><link>https://zenn.dev/yabuki/articles/2024-08-29-web-standard-test-with-deno</link><guid isPermaLink="true">https://zenn.dev/yabuki/articles/2024-08-29-web-standard-test-with-deno</guid><pubDate>Thu, 29 Aug 2024 09:32:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LkN5cV3W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%25E3%2581%25A7%25E3%2582%2584%25E3%2582%258B%25E3%2580%258Cweb%25E6%25A8%2599%25E6%25BA%2596%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2580%258D%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YABUKI%2520Yukiharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huRmQ1MnFmTEF6bUNNYVREYVhrTEZsZ0l0d1FrNVlrczJvcjBEPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YABUKI Yukiharu</dc:creator></item><item><title><![CDATA[VueとReactの設計思想の違い]]></title><description><![CDATA[
 VueとReactの設計思想の違い

 1. アプローチの哲学



フレームワーク
アプローチ
説明




Vue.js
漸進的フレームワーク
小規模な部分的導入から始めて徐々に機能を拡張。テンプレートベースでHTMLやCSSに慣れた開発者に直感的。ビュー層の強化に特化。


React
UIライブラリ
コンポーネントベースで複雑なUIを構築。宣言的UI設計と再利用可能なコンポーネントに重きを置き、UIの状態管理を予測可能に。




 2. テンプレート vs. JSX

 Vue.jsのテンプレートシンタックス

VueはHTMLベースのテンプレートシンタックスを使用。
宣言...]]></description><link>https://zenn.dev/kibe/articles/1a7da71a36ea21</link><guid isPermaLink="true">https://zenn.dev/kibe/articles/1a7da71a36ea21</guid><pubDate>Thu, 29 Aug 2024 08:30:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t7TlpVx9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25A8React%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E6%2580%259D%25E6%2583%25B3%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k1b3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwOTYwY2IzNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k1b3</dc:creator></item><item><title><![CDATA[ＤＢの日付、時刻形式の変換]]></title><description><![CDATA[
 javaScriptで直接変換可能な、日付、時刻形式の種類

DATE: YYYY-MM-DD 形式
DATETIME: YYYY-MM-DD HH:MM:SS 形式
TIMESTAMP: 1970-01-01 00:00:01 形式。


 構文

 例
const date = new Date('2024-09-01);
console.log(date.toLocaleString());

 実践的な例
const date = new Date(example.publishedAt).toLocaleString();

//&lt;p&gt; 公開日:{date}&l...]]></description><link>https://zenn.dev/hiro_i999/articles/d81bda933b6b77</link><guid isPermaLink="true">https://zenn.dev/hiro_i999/articles/d81bda933b6b77</guid><pubDate>Wed, 28 Aug 2024 15:45:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xE1yuyDL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25A4%25EF%25BC%25A2%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E3%2580%2581%25E6%2599%2582%25E5%2588%25BB%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroyuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTJxU2lleWt6WmxqaVMwNDdyd3JKLU0yQjVqa3NTOTRtXzJiM0NNbWhfVmwwOHBlRT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroyuki</dc:creator></item><item><title><![CDATA[Dart とJavaScriptで、基礎的な書き方比べてみた]]></title><description><![CDATA[はじめに
現在、個人開発でIOSアプリFlutterで作成しています。
仕事では、よくJavaScriptを利用するので、DartとJavaScriptを比べてみました！
前提たいしたこと書いて無いです！

 JavaScriptエンジニアのためのDart・Flutter入門：基礎編
今回は、JavaScriptの知識をベースにFlutterの基礎を学んでいきましょう。FlutterはGoogleが開発したクロスプラットフォームのUIフレームワークで、Dartというプログラミング言語を使用します。

 1. 言語の基本：Dart vs JavaScript
まずは、DartとJavaSc...]]></description><link>https://zenn.dev/bizlink/articles/f1ae8988590b5f</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/f1ae8988590b5f</guid><pubDate>Wed, 28 Aug 2024 00:54:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FXutBImL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dart%2520%25E3%2581%25A8JavaScript%25E3%2581%25A7%25E3%2580%2581%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E6%25AF%2594%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item><item><title><![CDATA[JavaScript 正規表現]]></title><description><![CDATA[
 🔅Tips
正則表現とは？
正規表現とは 「正規表現」とは、「検索」や「置換」で指定する文字列をパターン表現する方法で、プログラミング言語やテキストエディタなどで利用できます。
正規表現を考えた人は誰ですか？
正規表現は，歴史的には1940年代の形式言語論に由来しますが，C言語とUNIXの開発に貢献したKen Thompson氏が1970年前後にQEDというエディタ・ソフトウエア（エディタ），ついでedと呼ばれるUNIX上のエディタに文字列検索用として組み込んだことから，コンピュータの世界でも利用されるようになりました。

 正規表現のチートシート

 基本的なメタ文字



パター...]]></description><link>https://zenn.dev/joo_hashi/articles/93dfe9528e5cb8</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/93dfe9528e5cb8</guid><pubDate>Tue, 27 Aug 2024 22:26:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--URHspzCq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:JavaScript%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item></channel></rss>