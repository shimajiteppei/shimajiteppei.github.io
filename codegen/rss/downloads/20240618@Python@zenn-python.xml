<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 18 Jun 2024 07:36:32 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[初心者のPython3レッスンーーPython3辞書型（dict）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonの辞書型（dict）は、キーと値のペアを格納するデータ構造です。辞書は変更可能（ミュータブル）で、キーは一意でなければなりませんが、値は重複しても構いません。辞書は以下の特徴を持っています。

キーと値のペア: 辞書はキーと値のペアを持ちます。キーを使って対応する値にアクセスします。
順序: Python 3.7以降では、辞書の要素は挿入された順序を保持します。
変更可能: 辞書は作成後に要...]]></description><link>https://zenn.dev/datasciencekun/articles/af3ed9f2bcb50a</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/af3ed9f2bcb50a</guid><pubDate>Tue, 18 Jun 2024 00:53:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G-fgiyXh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E8%25BE%259E%25E6%259B%25B8%25E5%259E%258B%25EF%25BC%2588dict%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[Python Mockを使用したテストの書き方]]></title><description><![CDATA[モック技術は、単体テストや統合テストを行う際に非常に有用です。実際の依存関係を模倣し、予測可能で制御可能な環境でテストを行うことができます。この記事では、モック技術を使用したテストの方法を解説し、具体的なサンプルコードを提供します。

 目次

モック技術とは
モック技術の利点
テストケースの概要
モックを使ったテストの準備
テストケースの解説
サンプルコード


 1. モック技術とは
モック技術は、テスト中に依存する外部リソース（例えば、データベース、外部API、ファイルシステムなど）を模倣する方法です。モックオブジェクトは、実際のオブジェクトの代わりに使用され、テストが予測可能で制...]]></description><link>https://zenn.dev/sakaki_web/articles/f9a1e78dbc995e</link><guid isPermaLink="true">https://zenn.dev/sakaki_web/articles/f9a1e78dbc995e</guid><pubDate>Tue, 18 Jun 2024 00:31:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bWaxqK71--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Mock%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YjRlYTI3YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sakaki</dc:creator></item><item><title><![CDATA[RaspberryPiでcamera moduleを用いて60fps未満で画像撮影を行う方法]]></title><description><![CDATA[省略]]></description><link>https://zenn.dev/hattori_sat/books/raspberrypi-camera-60hz</link><guid isPermaLink="true">https://zenn.dev/hattori_sat/books/raspberrypi-camera-60hz</guid><pubDate>Mon, 17 Jun 2024 16:55:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d1fRp28Q--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81ZmU2N2M2ZGViLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hattori-sat</dc:creator></item><item><title><![CDATA[Pythonの基本概念だけを学習してみた]]></title><description><![CDATA[
 はじめに
Python は、そのシンプルさと柔軟性、強力な標準ライブラリによって、多くの開発者に愛用されています。この記事では、Python 独自の概念について学び、そのメリットを探ります。

 動的型付け
Python は動的型付けの言語であり、変数の型を明示的に宣言する必要がありません。変数に値を代入すると、その変数が参照する値の型が決まります。
x = 10         # x は整数型
x = "Hello"    # x は文字列型に変更
print(x)
このコードでは、変数 x に整数値を代入した後、文字列を代入しています。

 動的型付けのメリット


柔軟性: ...]]></description><link>https://zenn.dev/tonbi_attack/articles/ae5b9549478d17</link><guid isPermaLink="true">https://zenn.dev/tonbi_attack/articles/ae5b9549478d17</guid><pubDate>Mon, 17 Jun 2024 11:53:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--48JziMp4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2592%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGQ4MThjYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tonbiattack</dc:creator></item><item><title><![CDATA[高齢者の膝高からの身長推定]]></title><description><![CDATA[
 はじめに
株式会社Rehab for JAPAN 開発2部サイエンスチームの上田です。
栄養評価や必要エネルギー量算出には身長や体重の測定値が必須ですが、高齢者の方では歩行や直立が困難であったり、脊椎が湾曲していたりして身長を正しく測定できない場合があります。このような場合、日本では主にChumlea[1]らやMiyazawa[2]らが提唱する身長推定式が利用されています。これらの推定式は膝高と年齢を説明変数に、身長を目的変数とした重回帰式です。
本記事ではChumleaらの式を例に、重回帰分析による膝高と年齢から身長を推定する式の導出と、同様にLightGBMで回帰分析を行った結果...]]></description><link>https://zenn.dev/rehabforjapan/articles/d2423882f44d16</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/d2423882f44d16</guid><pubDate>Mon, 17 Jun 2024 09:51:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S-SftGSU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E9%25BD%25A2%25E8%2580%2585%25E3%2581%25AE%25E8%2586%259D%25E9%25AB%2598%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E8%25BA%25AB%25E9%2595%25B7%25E6%258E%25A8%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Rehab%25E4%25B8%258A%25E7%2594%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkOWZiYmJiMzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rehab上田</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーー目次]]></title><description><![CDATA[https://zenn.dev/datasciencekun/articles/3979d693d19fa7
https://zenn.dev/datasciencekun/articles/837bb12cf937f8
https://zenn.dev/datasciencekun/articles/7fa0b605398930
https://zenn.dev/datasciencekun/articles/8b427751445d2a
https://zenn.dev/datasciencekun/articles/4329da75c5bf0e
https://zenn.dev/...]]></description><link>https://zenn.dev/datasciencekun/articles/319e0f4b4021c5</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/319e0f4b4021c5</guid><pubDate>Mon, 17 Jun 2024 08:47:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JmtQGa9r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BC%25E7%259B%25AE%25E6%25AC%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[Groq API + LangChainでRAG📌PDFマニュアルを参照して質問に回答する]]></title><description><![CDATA[
 概要
PDFで作成したマニュアルの情報を参照してLLMが質問に答えられるようにRAGを実装します。
!
2024/06現在、Groqはβ版のためAPIを無料で使用できます。今後利用条件が変わる可能性もありますのでお気を付けください。

!
2024/06/17現在、LangChainのDocumentationを確認したところRetrievalQAはver0.3で削除予定のようです。そのため、本記事ではcreate_retrieval_chainを使用する方法と、LCEL記法のchainで実装する方法を記載します。



 処理の流れ


pypdf.PdfReaderでPDF内のテ...]]></description><link>https://zenn.dev/mizunny/articles/330549d8f8225b</link><guid isPermaLink="true">https://zenn.dev/mizunny/articles/330549d8f8225b</guid><pubDate>Mon, 17 Jun 2024 07:24:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0N_coEi_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Groq%2520API%2520%252B%2520LangChain%25E3%2581%25A7RAG%2520PDF%25E3%2583%259E%25E3%2583%258B%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%25A6%25E8%25B3%25AA%25E5%2595%258F%25E3%2581%25AB%25E5%259B%259E%25E7%25AD%2594%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizuchan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2MGEyODIyYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizuchan</dc:creator></item><item><title><![CDATA[MLTマルチメディアフレームワークとmeltとPythonバインディング]]></title><description><![CDATA[
 MLTマルチメディアフレームワークとmeltとPythonバインディング

 はじめに
先日kdenliveの映像エフェクトレンダリングデモ一覧の記事を書いたわけですが、あれらのエフェクトはkdenliveなどのノンリニア動画編集ソフトを使用しないと実現できないものなのでしょうか？つまりコマンドラインから編集はできないのでしょうか？
はい、映像編集もコマンドラインから可能です。
例えば画像編集ソフトであるGIMPは高機能ですが、簡単な編集であればImageMagickで代用できますよね。
同じように、kdenliveやShotcutのような高機能な映像編集ソフトを使わなくても、簡単な...]]></description><link>https://zenn.dev/ykesamaru/articles/c3151d674de74b</link><guid isPermaLink="true">https://zenn.dev/ykesamaru/articles/c3151d674de74b</guid><pubDate>Mon, 17 Jun 2024 06:54:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QtnDwK3f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MLT%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8melt%25E3%2581%25A8Python%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4MmM3NDMxNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yKesamaru</dc:creator></item><item><title><![CDATA[量子コンピュータでALUを作ってみた(実装編)]]></title><description><![CDATA[
 はじめに
オンライン公開伴走型量子コンピューティング講座QC4U2卒業生のluna_moonlightです。前回、ALUを量子回路で表現する方法について解説しました。前回の記事を読んでいない方は、ぜひ読んでみてください。
https://zenn.dev/luna_moonlight/articles/4b6769086788e6
今回は、前回作成した量子ALUを実際に量子コンピュータに渡して計算する方法について解説していきます。

 量子コンピュータ実機
前回作成した量子回路版ALUの回路図を下に示します。これを元に早速実装していきましょう。


 実装
まず、IBMの量子コンピュ...]]></description><link>https://zenn.dev/luna_moonlight/articles/cd618bb1ee55e3</link><guid isPermaLink="true">https://zenn.dev/luna_moonlight/articles/cd618bb1ee55e3</guid><pubDate>Mon, 17 Jun 2024 01:53:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W5po1FYh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7ALU%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528%25E5%25AE%259F%25E8%25A3%2585%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luna_moonlight%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMThlMWEzMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luna_moonlight</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3タプル（tuple）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonのタプル（tuple）は、複数の値を1つのコレクションとしてまとめて扱うためのデータ型の一つです。タプルは以下の特徴を持ちます。


順序付き：タプルの要素は順序を持ち、インデックスによってアクセスできます。

変更不可：タプルの要素は作成後に変更することができません（イミュータブル）。

複数のデータ型を保持：タプルは異なるデータ型の要素を保持することができます。


 タプルの作成
タプ...]]></description><link>https://zenn.dev/datasciencekun/articles/4dd4c9e206c1a7</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/4dd4c9e206c1a7</guid><pubDate>Mon, 17 Jun 2024 01:26:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QTEfOsJ1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AB%25EF%25BC%2588tuple%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[【Python】NFD の濁音・半濁音を NFC に変換する]]></title><description><![CDATA[Unicode 正規化には unicodedata.normalize を使う
python3

&gt;&gt;&gt; import unicodedata
&gt;&gt;&gt; str = 'か\u3099'
&gt;&gt;&gt; len(str)
2
&gt;&gt;&gt; ret = unicodedata.normalize('NFC', str)
&gt;&gt;&gt; len(ret)
1
&gt;&gt;&gt; str2 = 'が'
&gt;&gt;&gt; len(str2)
1
&gt;&gt;&gt; ret2 = unicodedata.norma...]]></description><link>https://zenn.dev/masakielastic/articles/42118ec8962722</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/42118ec8962722</guid><pubDate>Sun, 16 Jun 2024 18:34:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8mdP2px5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591NFD%2520%25E3%2581%25AE%25E6%25BF%2581%25E9%259F%25B3%25E3%2583%25BB%25E5%258D%258A%25E6%25BF%2581%25E9%259F%25B3%25E3%2582%2592%2520NFC%2520%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[最適輸送について考える (1) — 何も分からないところから始める]]></title><description><![CDATA[
 目的
最適輸送が分からない。最適輸送距離が分からない。Earth Mover's Distance が分からない。Wasserstein 距離が分からない。分からない時は実験しながらそれっぽいものを探るのが良い気がするということで、試行錯誤してみる。
なお、厳密にはこれらは細かい区別があるようだが、今回は特に区別せずに混同して用いる。

 事の起こり（ポエム）
特に何というわけではないが、たまに最適輸送距離というのを聞くので、適当に検索したら 最適輸送入門 があって、3 周くらい読んだが何も分からなかった・・・。疑問は単純で、

片方の分布上の点を他方の分布上の点にマッピングするのっ...]]></description><link>https://zenn.dev/derwind/articles/dwd-optimal-transport01</link><guid isPermaLink="true">https://zenn.dev/derwind/articles/dwd-optimal-transport01</guid><pubDate>Sun, 16 Jun 2024 16:16:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9_LO8_Xm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2581%25A9%25E8%25BC%25B8%25E9%2580%2581%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2520%25281%2529%2520%25E2%2580%2594%2520%25E4%25BD%2595%25E3%2582%2582%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>derwind</dc:creator></item><item><title><![CDATA[GIS × Python Tutorial Session10 ~ DSM・DCHMの作成 ~]]></title><description><![CDATA[この記事は「GIS × Python Tutorial」の関連記事です。


 はじめに

前回の記事では DTM の後処理を行い、滑らかな DTM を作成しました。今回は DSM の作成と DCHM の作成を行います。


 今回使用するデータ

今回の記事では、オープンナガサキからダウンロードした点群データと前回の記事で作成した DTM を使用します。作成には PDAL と rasterio を使用しますので、このチュートリアルを初めて見た方は Session6 から読み進めて頂くとわかりやすいと思います。その他に国土地理院で公開されている基盤地図情報ダウンロードサイトから入手した5...]]></description><link>https://zenn.dev/daidai_daitai/articles/8fb138e7b4437d</link><guid isPermaLink="true">https://zenn.dev/daidai_daitai/articles/8fb138e7b4437d</guid><pubDate>Sun, 16 Jun 2024 13:58:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SPwTv0QG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session10%2520%7E%2520DSM%25E3%2583%25BBDCHM%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>橙。</dc:creator></item><item><title><![CDATA[日本語の単語分割APIを立てて他の言語で利用する]]></title><description><![CDATA[
 形態素解析 (morphological analysis)
日本語は，英語などの言語のように単語間をスペースで区切りません．しかし，文書の解析や，検索など，現実には文章を単語の配列に変換したいことが多々あります．そんな時に活躍するソフトウェアが形態素解析機です．
形態素解析機を用いることで日本語の文章を単語単位で分割することができます．
"私はエンジニアです"

[
	"私",
	"は",
	"エンジニア",
	"です",
]
形態素解析機では単語分割の他に，単語に対する品詞情報の付与,，単語の原型の復元といった機能を使うことができます．
単語の原型の復元を利用する用途としては，活...]]></description><link>https://zenn.dev/shundeveloper/articles/f4b27300d9d9fa</link><guid isPermaLink="true">https://zenn.dev/shundeveloper/articles/f4b27300d9d9fa</guid><pubDate>Sun, 16 Jun 2024 12:44:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2PXmUXRq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E5%258D%2598%25E8%25AA%259E%25E5%2588%2586%25E5%2589%25B2API%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E4%25BB%2596%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shunsock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shunsock</dc:creator></item><item><title><![CDATA[getattrの使い方とメリット]]></title><description><![CDATA[
 getattrとは
getattrは、Pythonの組み込み関数で、オブジェクトから属性の値を取得するために使用する。通常、オブジェクトの属性にはドット（.）でアクセスするが、getattrを使うと動的に属性を取得することができる。

 基本的な使い方
基本的な構文は以下の通り：
getattr(object, attribute_name, default_value)


object: 属性を取得する対象のオブジェクト。

attribute_name: 取得したい属性の名前（文字列）。

default_value（任意）: 指定した属性が存在しない場合に返される値。省略可能...]]></description><link>https://zenn.dev/giba/articles/a4e5c2bc9ca6f1</link><guid isPermaLink="true">https://zenn.dev/giba/articles/a4e5c2bc9ca6f1</guid><pubDate>Sun, 16 Jun 2024 06:22:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sfm8GMYM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:getattr%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E3%2583%25A1%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GIBA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MmM4MjdhMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GIBA</dc:creator></item><item><title><![CDATA[BeautifulSoupを使い取得したデータをJSONで出力する]]></title><description><![CDATA[
 Tips
PythonでWebスクレイピングをして、HTMLでデータを出力するのは、やったことあるが、JSONでは知らなかった💦

 参考にした動画
https://www.youtube.com/watch?v=rDVrf9sCOW8
こちらのサイトから情報を収集する
https://www.orangepage.net/recipes/search/292
[今回使用したライブラリ]
beautifulsoup4 4.12.3
certifi        2024.6.2
pip            23.2.1
setuptools     68.2.0
soupsieve...]]></description><link>https://zenn.dev/joo_hashi/articles/f623efc32d4bed</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/f623efc32d4bed</guid><pubDate>Sun, 16 Jun 2024 06:16:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PzxI0Wz2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BeautifulSoup%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592JSON%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[importlibを活用したモジュールの動的インポート]]></title><description><![CDATA[
 はじめに
Pythonの標準ライブラリであるimportlibは、モジュールのインポート機能を高度に制御するためのツールを提供する。このライブラリを活用することで、動的なモジュールのインポートや再読み込み、さらにはカスタムインポートの実装が可能となる。以下に、importlibの具体的なメリットと使い方を解説する。

 メリット


動的インポートの実現:
importlib.import_moduleを使うことで、実行時にモジュールを動的にインポートできる。これにより、必要なモジュールのみを必要なタイミングでロードする柔軟なコードが書ける。


プラグインシステムの実装:
動的イン...]]></description><link>https://zenn.dev/giba/articles/7ed4c5a8f07728</link><guid isPermaLink="true">https://zenn.dev/giba/articles/7ed4c5a8f07728</guid><pubDate>Sun, 16 Jun 2024 05:45:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WYJN-nAD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:importlib%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E5%258B%2595%25E7%259A%2584%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GIBA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MmM4MjdhMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GIBA</dc:creator></item><item><title><![CDATA[【Python】VScodeおすすめ拡張機能11選]]></title><description><![CDATA[
 はじめに：
プログラミング初学者がVScodeを用いてPython環境の構築後、VScodeの拡張機能を用いて、開発効率を高められるようにおすすめの拡張機能を一覧にまとめた記事となっている。

 環境：
環境構築がまだの方はこちらから
https://zenn.dev/code_journey_ys/articles/ddd8ba305a2538

windows 11
Vscode 1.87.2
Pyhton


 拡張機能とは

 1: Japanese Language Pack for Visual Studio Code
・VScodeを日本語対応にしてくれる。
https...]]></description><link>https://zenn.dev/code_journey_ys/articles/21799128baae33</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/21799128baae33</guid><pubDate>Sun, 16 Jun 2024 03:19:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M39Zv70j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591VScode%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD11%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[量子コンピュータでALUを作ってみた(量子回路編)]]></title><description><![CDATA[
 はじめに
オンライン公開伴走型量子コンピューティング講座QC4U2卒業生のluna_moonlightです。この記事では実装については行わず、古典回路におけるALUの作り方と量子回路への変換について解説していきます。実装については、次の記事で解説していきます。
量子コンピュータで加算回路を実装するという記事はいくつか見つかりますが、ALUの実装まで行っている記事は見当たらなかったので、この記事を書いていきます。

 準備
量子コンピュータでALUを実装する前に、必要な論理ゲートなどの量子ゲート表現について解説していきます。

 ANDゲート
ANDゲートは、CCX(Toffoli)ゲ...]]></description><link>https://zenn.dev/luna_moonlight/articles/4b6769086788e6</link><guid isPermaLink="true">https://zenn.dev/luna_moonlight/articles/4b6769086788e6</guid><pubDate>Sun, 16 Jun 2024 02:55:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SxMAKH-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258F%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7ALU%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528%25E9%2587%258F%25E5%25AD%2590%25E5%259B%259E%25E8%25B7%25AF%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luna_moonlight%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMThlMWEzMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luna_moonlight</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3リスト（list）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonにおけるリスト（list）は、複数のアイテムを順序付けて格納できる可変長のコレクション型です。リストの各アイテムは異なるデータ型であっても構いません。リストは、要素の追加、削除、並べ替え、スライスなどの操作が可能です。

 リストの基本

 定義
リストは、角括弧 [] を使って定義し、各要素をカンマ , で区切ります。
# 空のリスト
empty_list = []

# 空のリスト
em...]]></description><link>https://zenn.dev/datasciencekun/articles/f857aaa108ff15</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/f857aaa108ff15</guid><pubDate>Sun, 16 Jun 2024 02:12:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OHxa5qVJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2588list%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item></channel></rss>