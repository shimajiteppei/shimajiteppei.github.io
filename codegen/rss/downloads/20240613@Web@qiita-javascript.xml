<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/javascript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/javascript/feed"/>
  <title>JavaScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaScriptタグが付けられた新着記事</description>
  <updated>2024-06-13T20:13:16+09:00</updated>
  <link>https://qiita.com/tags/javascript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1871210</id>
    <published>2024-06-13T20:13:16+09:00</published>
    <updated>2024-06-13T20:23:41+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/emuyn/items/c5bbbe20714415ddc9ae"/>
    <url>https://qiita.com/emuyn/items/c5bbbe20714415ddc9ae</url>
    <title>JavaScript での Smirnov-Grubbs 検定 の実装</title>
    <content type="html">Reactive stat 内部の Smirnov-Grubbs 検定の実装 です
外れ値は、データセットの他の値から大きく外れた値のことを指します。
外れ値は、データ分析に大きな影響を与える可能性…</content>
    <author>
      <name>emuyn</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1871169</id>
    <published>2024-06-13T19:00:22+09:00</published>
    <updated>2024-06-13T19:20:38+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/emuyn/items/095350fdfa364b692108"/>
    <url>https://qiita.com/emuyn/items/095350fdfa364b692108</url>
    <title>JavaScript での Mann-Whitney U検定 の実装</title>
    <content type="html">Reactive stat 内部の Mann-Whitney U検定の実装 です
Mann-Whitney U検定は、2つの独立した標本が同じ母集団から抽出されたか、あるいは同じ分布を持つ母集団から…</content>
    <author>
      <name>emuyn</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1862315</id>
    <published>2024-06-13T18:44:46+09:00</published>
    <updated>2024-06-13T18:44:46+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kazukiiii/items/94df1d2e4747bc2e23ca"/>
    <url>https://qiita.com/kazukiiii/items/94df1d2e4747bc2e23ca</url>
    <title>最近知ったJS Tips</title>
    <content type="html">オブジェクトのプロパティを操作する際エラーを検知する方法
オブジェクトのプロパティに対して値を設定更新する際、仮にエラーが発生した場合に今までであれば以下のような形式でハンドリングを行っていました。
const user = {};

try {
    user.name = '太郎';
    console.log('Success!');
} catch (e) {
    console.error('Failed...');
}

console.log(user.name); // 太郎
delete user.name;
console.log(user.name); // undefined…</content>
    <author>
      <name>kazukiiii</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1871130</id>
    <published>2024-06-13T17:29:52+09:00</published>
    <updated>2024-06-13T17:29:52+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/taihong/items/147c4673e4f273ec67c2"/>
    <url>https://qiita.com/taihong/items/147c4673e4f273ec67c2</url>
    <title>JavaScriptのアロー関数について</title>
    <content type="html">アロー関数とは？
アロー関数は、簡潔な記法で関数を定義できる新しい方法です。普通の関数とは異なり、アロー関数はthisの扱いが変わってきます。
アロー関数の書き方
普通のJavaScriptの関数は…</content>
    <author>
      <name>taihong</name>
    </author>
  </entry>
</feed>
