<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 26 Jul 2024 07:51:30 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[配列内のオブジェクトに変更を加えたのに反映されない]]></title><description><![CDATA[
 記事の概要
先日「ループ処理で配列内のオブジェクトに対して変更を加える」ような処理を書いていたのですが、配列内オブジェクトに変更を加えたはずなのになぜかその変更が反映されないという問題に遭遇し、原因を突き止めるのに時間がかかったので、調べたことを忘れないようにこの記事を書きました。
参照渡しについての理解が浅かったことが原因でして恐らく基本の内容かと思われますが、同問題で困っている方にはもしかしたら参考になるかもしれないです。（配列の参照渡し周りについてざっくり書いています）

 問題と解決方法の概要（サンプルコードあり）

 問題コード(処理1)
今回遭遇した問題を簡単にしたもので...]]></description><link>https://zenn.dev/souemon/articles/eb424992afadb1</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/eb424992afadb1</guid><pubDate>Fri, 26 Jul 2024 05:54:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_EGvraVP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E5%2586%2585%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2582%2592%25E5%258A%25A0%25E3%2581%2588%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25AB%25E5%258F%258D%25E6%2598%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[[javascript] "Math.round()" or "Number.prototype.toFixed()"]]></title><description><![CDATA[
 Intro.
When I rounded a negative number by "Math.round()" or "Number.prototype.toFixed()", I noticed a little difference.
"Math.round()" converted -12.5 into -12.0 and -12.6 into -13.0 .

-12.5 -&gt; -12.0
-12.6 -&gt; -13.0

"toFixed()" converted -12.4 into -12.0 and -12.5 into -13.0 .

-12.4 -...]]></description><link>https://zenn.dev/shunyana/articles/43690755f20068</link><guid isPermaLink="true">https://zenn.dev/shunyana/articles/43690755f20068</guid><pubDate>Thu, 25 Jul 2024 19:46:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SNtaP1T8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bjavascript%255D%2520%2522Math.round%2528%2529%2522%2520or%2520%2522Number.prototype.toFixed%2528%2529%2522%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shunyana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGFCOWlNLTJsTkt5MklhdFdpQ1l3WnJyNl85a200WG83U2RINXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shunyana</dc:creator></item><item><title><![CDATA[TypeScriptコンパイラによる未使用パラメータと変数のチェック]]></title><description><![CDATA[TypeScriptコンパイラには、コードをチェックする際にリンターのような機能を持つオプションがあります。その中には、パラメータや変数が未使用のままになっていることを防ぐものがあります。

 noUnusedLocalsオプション
noUnusedLocalsは、デフォルトではfalseに設定されていますが、これをtrueに設定すると、未使用のローカル変数がある場合にコンパイラがエラーを出すようになります。以下のコード例を見てみましょう。
function printItem(item: any, index: number) {
  const indexedItem = `${in...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-compiler-checks-for-unused-params</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-compiler-checks-for-unused-params</guid><pubDate>Thu, 25 Jul 2024 11:00:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--53w_8IQk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[WFC Tiles]]></title><description><![CDATA[
 WFC Tiles
A Simple Example
March 17, 2023 - Tommy Dräger
https://fenixfox-studios.com/content/wfc_simple_tiles/
"Wave Function Control" (abbr. WFC) is a rabbit hole! It is defenitly one of the algortihms that will drasticly change procedual generation in the future. The priniciple of WFC and su...]]></description><link>https://zenn.dev/mlsprwr/articles/0fa415161960d5</link><guid isPermaLink="true">https://zenn.dev/mlsprwr/articles/0fa415161960d5</guid><pubDate>Thu, 25 Jul 2024 10:44:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zINr_Y4b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:WFC%2520Tiles%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tommy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWtXeGF2bmNsX1VoWW5KS2pPU1JvUjV4YkVPRGpHUDBnNkRpMzF5UjBHOW96b1g0ND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tommy</dc:creator></item><item><title><![CDATA[#03　[Angular] Standalone components]]></title><description><![CDATA["Components declaration that we have learned is adding your components to the imports array in the @NgModule . It doesn't bother us when we just develop a TODO app or some small-scale project for study or mainly for fun. When having a scale project, Angular's declaration can make the import list ...]]></description><link>https://zenn.dev/nxted_sapporo/articles/39f9b94d180f37</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/39f9b94d180f37</guid><pubDate>Thu, 25 Jul 2024 07:30:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o9dO4aCx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252303%25E3%2580%2580%255BAngular%255D%2520Standalone%2520components%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[＃01　marked.js + highlight.js でMarkdownをきれいにHTMLに変換]]></title><description><![CDATA[
 概要
Markdownで書いたページをHTMLに変換する際に、
marked.js と highlight.js のライブラリの組み合わせが使いやすかったのでご紹介です。

marked.js (Markdown→HTML変換用)
highlight.js (コードを書いてる部分をきれいにする用)


 準備

 marked.js
Documentation: https://marked.js.org/
Github: https://github.com/markedjs/marked
NPMで適用することもできますが、今回はgithubから直接ダウンロードしました。


ma...]]></description><link>https://zenn.dev/nxted_sapporo/articles/abe747c16ac6b3</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/abe747c16ac6b3</guid><pubDate>Thu, 25 Jul 2024 05:46:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aED7q8Sg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%258301%25E3%2580%2580marked.js%2520%252B%2520highlight.js%2520%25E3%2581%25A7Markdown%25E3%2582%2592%25E3%2581%258D%25E3%2582%258C%25E3%2581%2584%25E3%2581%25ABHTML%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[javascriptとbootstrapで簡単バーコード生成]]></title><description><![CDATA[需要があるか微妙ですがバーコードコード生成アプリを作りました。
フォーマットがCODE128なので数値以外のアルファベットもいけます。なので、在庫管理などの業務用のバーコードなんかに使えるかもしれません、わかんないですが。。。
動作も軽量です。
SVG、PNG、GIFでそれぞれダウンロード可能になっています。

 作成

Barcode.html
    &lt;!DOCTYPE html&gt;
    &lt;html lang="en"&gt;
    &lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="...]]></description><link>https://zenn.dev/dsr/articles/ef84aa45a85502</link><guid isPermaLink="true">https://zenn.dev/dsr/articles/ef84aa45a85502</guid><pubDate>Thu, 25 Jul 2024 00:55:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EB4amwwy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:javascript%25E3%2581%25A8bootstrap%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dsr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmI4ZjQwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dsr</dc:creator></item><item><title><![CDATA[イベントハンドラ名はonClick？handleClick？]]></title><description><![CDATA[
 はじめに
JavaScript やそのフレームワークを使用して Web アプリケーションを開発する際、イベントハンドラの命名規則について悩むことはありませんか？私は、onClick、handleClick、onSubmit、handleSubmit など、イベントハンドラ名について悩むことが多々ありました。
React の公式ドキュメントで、どのようにイベントハンドラ名を命名するべきかについて記載がありましたので、共有します。

 結論：イベントハンドラ名は handle[Event]とする
React の公式ドキュメントには、下記のように記載があります。

慣習的に、イベントハンド...]]></description><link>https://zenn.dev/torakm/articles/7e90cb039157e7</link><guid isPermaLink="true">https://zenn.dev/torakm/articles/7e90cb039157e7</guid><pubDate>Wed, 24 Jul 2024 23:04:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qByoY8yg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E5%2590%258D%25E3%2581%25AFonClick%25EF%25BC%259FhandleClick%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:torakm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWpwb3BqampCamdqSmw3MFRFcnZKNWZGZncwVUdBNGJxdGpJQXpadDU3N3FnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>torakm</dc:creator></item><item><title><![CDATA[FirestoreでGROUP BYを実現するObject.groupBy]]></title><description><![CDATA[
 状況
firestoreからのデータ取得時はGROUP BY句と同等の機能が存在しません。
Remixとfirebaseを使ってtodoリストを作成していて、firestoreからのデータ読み出し時にtodoをグループに分類して管理したいと思った時の話です。
データ取得後にfilterメソッドなどを使ってグループごとにまとめ直すしかないのか、と思って探していたら、JavaScriptのObject.groupByを見つけました。
しかし、TypeScriptを使っていたのでVSCode上でTypeScriptの型エラーが出て困ったり、出力方法を悩んだり勉強になったので備忘録です。

...]]></description><link>https://zenn.dev/nofi/articles/3983b1aabdc1ab</link><guid isPermaLink="true">https://zenn.dev/nofi/articles/3983b1aabdc1ab</guid><pubDate>Wed, 24 Jul 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OsV-4e3S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firestore%25E3%2581%25A7GROUP%2520BY%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BObject.groupBy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzYTc3YjFlMmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nofi</dc:creator></item><item><title><![CDATA[【たったの100行で実装できる】javascript、bootstrapで作るQRコード生成アプリ（コピペOK）]]></title><description><![CDATA[シンプルなQRコード生成アプリです。
QRコード読み取りアプリはあるんですが、QRコード生成はあまりなかったので作ってみました。
自前のアプリや管理画面上に設置など、URLやお店用のクーポン発行などに使えるかなと。
動作も軽量です。
SVG、PNG、GIFでそれぞれダウンロード可能になっています。

 作成

QR.html
    &lt;!DOCTYPE html&gt;
    &lt;html lang="ja"&gt;
    &lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" c...]]></description><link>https://zenn.dev/dsr/articles/cbc9ebc2600e38</link><guid isPermaLink="true">https://zenn.dev/dsr/articles/cbc9ebc2600e38</guid><pubDate>Wed, 24 Jul 2024 22:20:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hNWzlWy5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE100%25E8%25A1%258C%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2591javascript%25E3%2580%2581bootstrap%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BQR%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2594%259F%25E6%2588%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%2588%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259AOK%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dsr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmI4ZjQwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dsr</dc:creator></item><item><title><![CDATA[フロントエンド開発者のためのパッケージマネージャー比較：npm vs yarn vs pnpm]]></title><description><![CDATA[
 フロントエンド開発者のためのパッケージマネージャー比較：npm、yarn、pnpm
フロントエンド開発において、パッケージマネージャーは欠かせないツールです。本記事では、主要な3つのパッケージマネージャー（npm、yarn、pnpm）について解説し、それぞれの特徴や利点を紹介します。また、よく使用するコマンドの対比表も提供します。最後に、パッケージマネージャーではありませんが、関連するツールであるnpxについても触れます。

 1. npm (Node Package Manager)
npmは、Node.jsのデフォルトパッケージマネージャーであり、最も広く使用されています。

 ...]]></description><link>https://zenn.dev/crebo/articles/article-0001-20240724</link><guid isPermaLink="true">https://zenn.dev/crebo/articles/article-0001-20240724</guid><pubDate>Wed, 24 Jul 2024 12:54:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v4eEp2BA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259Anpm%2520vs%2520yarn%2520vs%2520pnpm%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BC%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxNzlhZTFjZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社くりぼー</dc:creator></item><item><title><![CDATA[JavaScriptでinputフォームに最大３桁の自然数のみ受け付ける]]></title><description><![CDATA[最大３桁の自然数のみを受け付けるinputフォームの実装方法をメモ。

 html
&lt;input
  type="text"
  inputmode="numeric"
  onchange="value = only3Numbers(value)"
/&gt;

 JavaScript
//全角数字を半角数字に変換-&gt;
//数字以外を削除-&gt;
//先頭の"0"を削除-&gt;
//初めの３文字だけ切り取る。
const only3Numbers = (n) =&gt; {
  return n
    .replace(/[０-９]/g, (s) =&gt; Stri...]]></description><link>https://zenn.dev/rosataku/articles/dda61c6b0d7a75</link><guid isPermaLink="true">https://zenn.dev/rosataku/articles/dda61c6b0d7a75</guid><pubDate>Wed, 24 Jul 2024 07:10:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ywRH1XAq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7input%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E6%259C%2580%25E5%25A4%25A7%25EF%25BC%2593%25E6%25A1%2581%25E3%2581%25AE%25E8%2587%25AA%25E7%2584%25B6%25E6%2595%25B0%25E3%2581%25AE%25E3%2581%25BF%25E5%258F%2597%25E3%2581%2591%25E4%25BB%2598%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2581%2595%25E3%2581%259F%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3YmQwOTVhZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろさたく</dc:creator></item><item><title><![CDATA[reactとnext.jsで実装するSummernoteエディタ]]></title><description><![CDATA[クライアントにリッチテキストエディタを組み込んで欲しいとの要望があったので、react/next.jsとSummernoteで作ってみました。
直接JqueryやBootstrapなんかを読み込んでいるのは、Summernoteとのバージョンが違う？らしく僕の環境ではうまく動作しなかったためです。。。

 作成
下記コードをコピペすれば動作します（多分。。）

app/sample/page.jsx
    "use client";
    import React, { useEffect, useRef, useState } from 'react';
    import { ...]]></description><link>https://zenn.dev/dsr/articles/c675a933132ae2</link><guid isPermaLink="true">https://zenn.dev/dsr/articles/c675a933132ae2</guid><pubDate>Wed, 24 Jul 2024 03:13:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--17e3xLV6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react%25E3%2581%25A8next.js%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258BSummernote%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dsr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmI4ZjQwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dsr</dc:creator></item><item><title><![CDATA[表示中の画面をワンクリックでPDFダウンロードする]]></title><description><![CDATA[こんにちは！株式会社ココナラのプロダクト開発部フロントエンド開発グループ所属の飯塚です。
ココナラでは、一定の条件を満たすと「納品書」等の帳票がダウンロードできます。
各帳票は、Webサイト上で確認したうえでワンクリックでPDFダウンロードできるようになっています。
以下は実際の納品書画面になります。

今回は、その ワンクリックでPDFダウンロード の実装方法についてご紹介します！

 要件
実装にあたり、要件は以下の通りでした。

ブラウザの「印刷」からPDFダウンロードすることは可能だが、手間なのでワンクリックでPDFダウンロードしたい
ヘッダーやフッターなど、帳票に関係ない要素は...]]></description><link>https://zenn.dev/coconala/articles/945f50223c1a20</link><guid isPermaLink="true">https://zenn.dev/coconala/articles/945f50223c1a20</guid><pubDate>Wed, 24 Jul 2024 01:37:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QTpISikI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%25A8%25E7%25A4%25BA%25E4%25B8%25AD%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25B3%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A7PDF%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B3%25E3%2582%25B3%25E3%2583%258A%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNTMxNzlmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社ココナラ</dc:creator></item><item><title><![CDATA[バックエンドエンジニアがフロントエンド技術をキャッチアップしてみた]]></title><description><![CDATA[
 目標

バックエンドとフロントエンドの連携を実装できるように、フロントエンドの技術を勉強する。


 勉強方針

細かいフロントエンドの技術を勉強するというより、エッセンスとなる概念・考え方を勉強する。
以下の順番で勉強する

JavaScriptの基本
モダンJavaScriptの基本
Reactの基本




 Javascriptの基本
以下の教材で勉強
はじめてのJavaScriptプログラミング入門

 Javascriptの基本文法など

 基本文法
基本文法として以下を学習。
概ねバックエンド言語と基本文法と同じなので、時間をかけずにさっと学習

データ型、
演算子
条...]]></description><link>https://zenn.dev/rabbit_penguin0/articles/b46ffffb652e65</link><guid isPermaLink="true">https://zenn.dev/rabbit_penguin0/articles/b46ffffb652e65</guid><pubDate>Wed, 24 Jul 2024 01:19:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zlmZ3TmF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259A%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25B3%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NjJhYjQ1YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ペンギン🐧</dc:creator></item><item><title><![CDATA[Jotai v2.9.1をリリースしました]]></title><description><![CDATA[その前にv2.9.0をリリースしていたわけですが、そのバージョンでは内部のstore.tsというコードを刷新しました。何週間かそれ以上かけて書き直したのですが、かなり大変でした。Jotaiの複雑さはほぼこの1ファイルに収まっていて、逆に周辺のコードは比較的簡単です。store.tsを書き直そうと思った理由は、書き直す前のコードはJotai v0時代の設計で、無駄に複雑な部分があったからです。これまでstore.tsはほぼ私一人で書いてきましたが、将来的にはみんなでいじれるようになるべきと思い、書き直しを決断しました。結果、なんとか動くものはできました。が、当初期待していたほどシンプルには...]]></description><link>https://zenn.dev/dai_shi/articles/cf1af600e7bba5</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/cf1af600e7bba5</guid><pubDate>Wed, 24 Jul 2024 00:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EybAb6Zb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jotai%2520v2.9.1%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[clusterイージースクリプト（ベータ用）関数一覧]]></title><description><![CDATA[まだ「clusterイージースクリプト」のインストールが済んでいない人は先に済ませてくださいね。
こちらの記事からどうぞ。
ベータ用の追加パッケージはこちらの記事からどうぞ。

 ベータ用の関数（_ベータ基本イージー.js）
これはScriptableItemにつけるものです。
なお、一部はPlayerScriptに_pl基本イージー.jsをつけていないと機能しません。サンプルではその辺りの設定が済んでいるので、それを改変していくといいでしょう。

 何かが起きたときの関数


ee.collide(obj): オブジェクトが衝突したときに実行される関数。衝突相手に応じて処理を行います。...]]></description><link>https://zenn.dev/vins/articles/25ba9397b090c7</link><guid isPermaLink="true">https://zenn.dev/vins/articles/25ba9397b090c7</guid><pubDate>Tue, 23 Jul 2024 22:46:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--87SC0htZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cluster%25E3%2582%25A4%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25EF%25BC%2588%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25BF%25E7%2594%25A8%25EF%25BC%2589%25E9%2596%25A2%25E6%2595%25B0%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:vins%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c0ZERlaWVTamtQcDFmTDYwS1FhTlpYMkpMeTJOOGtfeWRha1F6PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>vins</dc:creator></item><item><title><![CDATA[clusterイージースクリプト・ベータ用部分0.20]]></title><description><![CDATA[まだ「clusterイージースクリプト」のインストールが済んでいない人は先に済ませてくださいね。
こちらの記事からどうぞ。

 ベータ用部分のインストール
https://vins-jp.sakura.ne.jp/pack/020_beta_easyscript.unitypackage
unitypackageをまたUnityのプロジェクトの適当なとこにドラッグアンドドロップし、「インポート」してください。
あくまで　「clusterイージースクリプト」にプラスとして追加するものなので、先にイージースクリプトをインストールしておいてください。

 ベータ機能などをONにする

まず「C...]]></description><link>https://zenn.dev/vins/articles/a6fdde0c57148b</link><guid isPermaLink="true">https://zenn.dev/vins/articles/a6fdde0c57148b</guid><pubDate>Tue, 23 Jul 2024 22:24:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gccKfBBV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cluster%25E3%2582%25A4%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2583%25BB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25BF%25E7%2594%25A8%25E9%2583%25A8%25E5%2588%25860.20%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:vins%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c0ZERlaWVTamtQcDFmTDYwS1FhTlpYMkpMeTJOOGtfeWRha1F6PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>vins</dc:creator></item><item><title><![CDATA[CanvasRenderingContext2D関連メソッド一覧]]></title><description><![CDATA[『RPGツクールMZ』関連記事 目次

 はじめに
『RPGツクールMZ』のJavaScriptで図形を描くという記事で Canvas API について調べたのですが、長くなりすぎたので、メソッド・プロパティを表にしたところを別記事にしました。
なので、このページは純粋に JavaScript(というか Web API)の情報で『RPGツクールMZ』と直接の関係はない情報です。
MDNのページに全部解説はしてあるんですが、一覧性が良くないというか、自分がなかなか把握できなかったのでメモがてら。

 基本情報


CanvasクラスでgetContext("2d")すると2D描画するための...]]></description><link>https://zenn.dev/tonbi/articles/c1060c77f321cc</link><guid isPermaLink="true">https://zenn.dev/tonbi/articles/c1060c77f321cc</guid><pubDate>Tue, 23 Jul 2024 13:22:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GjSoWw8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CanvasRenderingContext2D%25E9%2596%25A2%25E9%2580%25A3%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2581%25B3%2540%25E9%25B3%25B6%25E5%25B6%258B%25E5%25B7%25A5%25E6%2588%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBYl9FRlAtZm9RQU1pN1VoM3hzYkNyQXZUSTZjUDFkZGJJMWJrPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんび@鳶嶋工房</dc:creator></item><item><title><![CDATA[『RPGツクールMZ』のJavaScriptで図形を描く]]></title><description><![CDATA[『RPGツクールMZ』関連記事 目次

 はじめに
『RPGツクールMZ』でJavaScriptを使い画像をベクター描画する方法を調べました。
ベクター描画ができると、二点間に線を引いたりできるのでシステムの幅が広がります。
リアルタイムに描画できるので、さまざまなインタフェースの形を状況に合わせて書き換えることもできます。
たとえばゲージの形も融通が効くようになります。
常に理屈の上でできることと、実際できることに隔たりはありますが(笑)
例によって適宜、次のリファレンスに、クラスなどリンクしていこうと思います。

『RPGツクールMZ』非公式JavaScriptリファレンス
MDN ...]]></description><link>https://zenn.dev/tonbi/articles/8921d43593f3b2</link><guid isPermaLink="true">https://zenn.dev/tonbi/articles/8921d43593f3b2</guid><pubDate>Tue, 23 Jul 2024 13:21:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7XsxwD8A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258ERPG%25E3%2583%2584%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25ABMZ%25E3%2580%258F%25E3%2581%25AEJavaScript%25E3%2581%25A7%25E5%259B%25B3%25E5%25BD%25A2%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2581%25B3%2540%25E9%25B3%25B6%25E5%25B6%258B%25E5%25B7%25A5%25E6%2588%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBYl9FRlAtZm9RQU1pN1VoM3hzYkNyQXZUSTZjUDFkZGJJMWJrPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんび@鳶嶋工房</dc:creator></item></channel></rss>