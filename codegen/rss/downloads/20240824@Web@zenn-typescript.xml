<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 24 Aug 2024 12:03:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[typescriptで新しくパッケージをテストしたいときのdocker環境構築]]></title><description><![CDATA[本記事ではChatGPTを使用して作成しています。一応手順の確認をしましたが、typescriptで新しくパッケージを勉強するときにコンテナで構築して動作を確認したかったのでつくりました。
参考になれば幸いです。

 1. プロジェクトの初期設定

 プロジェクトディレクトリを作成し、package.json を初期化
mkdir my-typescript-app
cd my-typescript-app
npm init -y

 必要なパッケージをインストール
npm install --save express nodemon neverthrow
npm install --s...]]></description><link>https://zenn.dev/kazumasa/articles/90b8ed1585f60a</link><guid isPermaLink="true">https://zenn.dev/kazumasa/articles/90b8ed1585f60a</guid><pubDate>Sat, 24 Aug 2024 04:35:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K0k1mj4S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:typescript%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%258F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AEdocker%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazumasa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d2MFpjUUctQVdIZTU5MmJTbGVxc3FCZnlYUDJOOEtKbmVTMEFDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazumasa</dc:creator></item><item><title><![CDATA[フロントエンドエンジニアのためのGo入門：変数と関数をサクッと理解しよう！]]></title><description><![CDATA[
 はじめに
Goはシンプルで効率的な言語ですが、TypeScript(Javascript)の経験のあるフロントエンドエンジニアが初めて学ぶ際には、いくつかの独特なポイントで戸惑ったので記事にしました。
フロントエンドエンジニアがGoを学ぶ際につまづきやすい点をわかりやすく解説し、それぞれの言語の比較コードを示します。
この記事はA Tour of GoのBasicsの一部をピックアップしました。
https://go-tour-jp.appspot.com/list

 エクスポートされた名前
Goでは、名前が大文字で始まる場合、その名前はパッケージ外から参照できる「エクスポートされ...]]></description><link>https://zenn.dev/miumi/articles/fcc720adb49093</link><guid isPermaLink="true">https://zenn.dev/miumi/articles/fcc720adb49093</guid><pubDate>Fri, 23 Aug 2024 22:56:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vXpXh-ja--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEGo%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2582%25AB%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4YjgwZTkyZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミカイ</dc:creator></item><item><title><![CDATA[TypeScriptで始めるデザインパターン入門]]></title><description><![CDATA[
 TypeScriptで始めるデザインパターン入門

 はじめに
デザインパターンは、ソフトウェア開発における一般的な問題に対する再利用可能な解決策を提供します。これらのパターンは、特定の状況でのベストプラクティスを示し、コードの可読性や保守性を向上させるために役立ちます。TypeScriptは、JavaScriptのスーパーセットであり、型安全性を提供することで、デザインパターンの実装をより明確にし、エラーを減少させることができます。本記事では、TypeScriptを使用してデザインパターンを実装する方法を紹介し、具体的な例を通じて理解を深めていきます。

 デザインパターンの基本
...]]></description><link>https://zenn.dev/llm_robot/articles/20240824-typescript-designpatterns-sql</link><guid isPermaLink="true">https://zenn.dev/llm_robot/articles/20240824-typescript-designpatterns-sql</guid><pubDate>Fri, 23 Aug 2024 22:08:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rj59J3ly--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIZAWA%2520version%253A0.0.2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTE3MGM1NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIZAWA version:0.0.2</dc:creator></item><item><title><![CDATA[Cloudflare Workers 入門【はじめからそうやって教えてくれればいいのに！】]]></title><description><![CDATA[
 はじめに
この記事の内容は、以下の動画でも解説しています。アニメーションでわかりやすくなっているので、ぜひ見てみてください。他にも Web に関する解説動画を投稿しているので、気になる人はチャンネル登録よろしくお願いします！
https://www.youtube.com/watch?v=ijjNvTKl5eg

 Cloudflare Workers とは？
Cloudflare Workers とは、一言で言うと、Cloudflare のエッジで動くサーバーレスの JavaScript 実行環境のことです。
...と言っても、これだけだとよくわからないですよね。だから、今回は初め...]]></description><link>https://zenn.dev/ak/articles/a2bd28a258b615</link><guid isPermaLink="true">https://zenn.dev/ak/articles/a2bd28a258b615</guid><pubDate>Fri, 23 Aug 2024 11:35:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mCHl5Nb---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%258B%25E3%2582%2589%25E3%2581%259D%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258C%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AB%25EF%25BC%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YTNhNmZhNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki</dc:creator></item><item><title><![CDATA[App Router の Route Handlers をうまくプロダクトに組み込む]]></title><description><![CDATA[
 この記事でやること

Next.js の App Router の基本的な学習
Route Handlers の基本的な学習


 この記事でやらないこと

外部との連携


 モチベーション
せっかく Route Handlers という便利そうな機能が存在するのに、その機能についての知見が足りていないと感じたので、この機会に少し学習しておこうと考えました。

 いざ実践

 今回実現すること

Route Handlers 経由でデータを取得する
Server Actions を使って Route Handlers に対して POST リクエストを送信する


 データを取得する...]]></description><link>https://zenn.dev/tbaba/articles/07fd1fac0d82ba</link><guid isPermaLink="true">https://zenn.dev/tbaba/articles/07fd1fac0d82ba</guid><pubDate>Fri, 23 Aug 2024 06:42:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o_0JW9hl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Router%2520%25E3%2581%25AE%2520Route%2520Handlers%2520%25E3%2582%2592%25E3%2581%2586%25E3%2581%25BE%25E3%2581%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tbaba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tbaba</dc:creator></item><item><title><![CDATA[Waku v0.21リリース反響まとめ]]></title><description><![CDATA[https://x.com/dai_shi/status/1825907642654666973
から、いくつかのサイトで取り上げられましたのでまとめておきます。

 This Week In React
https://thisweekinreact.com/newsletter/197

 React Status
https://react.statuscode.com/issues/396

 Bytes
https://bytes.dev/archives/316
]]></description><link>https://zenn.dev/dai_shi/articles/10c5821b22b72a</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/10c5821b22b72a</guid><pubDate>Fri, 23 Aug 2024 03:17:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TCozokHa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Waku%2520v0.21%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E5%258F%258D%25E9%259F%25BF%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[TS使っている人のRust 0から勉強日記1]]></title><description><![CDATA[こんにちは！普段TypeScriptを使ってフロントエンド開発をしている人です🙌
最近、上司に「TypeScript(ちょっとは)書けるようになったからRustやってみようか^^」と言われ、言われるがままやってみたものの何をやっているんだ状態…
ZennにはたくさんのRustの基礎となる部分の記事や本があったため、同じような内容にはなりますが、この記事の内容は基礎の基礎(+TypeScriptとの比較？)で自分の勉強の記録用に書いています。


 Rustってなんだ
そもそもRustってなんなんだから始まったので、とりあえずドキュメントを。
https://www.rust-lang.o...]]></description><link>https://zenn.dev/maru_contents/articles/rust_ownership</link><guid isPermaLink="true">https://zenn.dev/maru_contents/articles/rust_ownership</guid><pubDate>Fri, 23 Aug 2024 00:40:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vNZCS0z3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E4%25BA%25BA%25E3%2581%25AERust%25200%25E3%2581%258B%25E3%2582%2589%25E5%258B%2589%25E5%25BC%25B7%25E6%2597%25A5%25E8%25A8%25981%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyZDVlZjUxOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maru</dc:creator></item><item><title><![CDATA[Node.jsの最新トレンド：TypeScript、Deno、GraphQL、Serverless]]></title><description><![CDATA[
 Node.jsの最新トレンド：TypeScript、Deno、GraphQL、Serverless

 はじめに
Node.jsは、サーバーサイドのJavaScript環境として広く利用されており、近年のウェブ開発において重要な役割を果たしています。Node.jsのエコシステムは急速に進化しており、開発者は新しい技術やトレンドに常に目を光らせています。本記事では、Node.jsに関連する最新のトレンドとして、TypeScript、Deno、GraphQL、Serverlessについて詳しく解説します。これらの技術は、開発者がより効率的に、かつ効果的にアプリケーションを構築するための新...]]></description><link>https://zenn.dev/llm_robot/articles/20240823-typescript-deno-graphql-serverless</link><guid isPermaLink="true">https://zenn.dev/llm_robot/articles/20240823-typescript-deno-graphql-serverless</guid><pubDate>Thu, 22 Aug 2024 22:08:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UFEVJgep--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25AE%25E6%259C%2580%25E6%2596%25B0%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25EF%25BC%259ATypeScript%25E3%2580%2581Deno%25E3%2580%2581GraphQL%25E3%2580%2581Serverless%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIZAWA%2520version%253A0.0.2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTE3MGM1NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIZAWA version:0.0.2</dc:creator></item><item><title><![CDATA[AWSプロファイルを楽に管理できるCLIツール「credaw」を公開しました]]></title><description><![CDATA[作ったもの：
https://www.npmjs.com/package/credaw

 はじめに
AWS SDKやAWS CLIを使用する際、認証情報を ~/.aws/credentials および ~/.aws/config で管理するのが一般的です。しかし、複数のプロファイルを管理する際にこれらのファイルを手動で編集することは、煩雑でミスが発生しやすい作業となります。
そこで、これらのAWS認証情報をCLIで簡単にCRUD（作成・読み取り・更新・削除）できるツール「credaw」を開発しました。本ツールは、コマンドラインから直感的にAWSプロファイルの操作が可能です。
~/.aw...]]></description><link>https://zenn.dev/aoito/articles/c963ec4da3033d</link><guid isPermaLink="true">https://zenn.dev/aoito/articles/c963ec4da3033d</guid><pubDate>Thu, 22 Aug 2024 17:44:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1dD2yafC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BCLI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%258Ccredaw%25E3%2580%258D%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchay%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMWE1MmJjNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uchay</dc:creator></item><item><title><![CDATA[【App Router】Parallel RoutesとIntercepting Routesで作るモダンなモーダル機能]]></title><description><![CDATA[
 はじめに
こんにちは！
株式会社BLUEISH エンジニアの佐々木です。
昨今のウェブアプリ開発においては、UXがますます重要視されています。
たとえばInstagramのようなモダンで直感的なUXを持つアプリは、ユーザーにとって使い勝手が良く、訪問者の心を掴む力がありますよね🤔

直感的なUXの例（Instagram）
本記事では、App Routerの機能である「Parallel Routes」と「Intercepting Routes」を駆使して、直感的なUXをシンプルな実装で生み出す方法を探ってみたいと思います！
!
App Routerの基本構造やデータフェッチについては本...]]></description><link>https://zenn.dev/blueish/articles/32d6287a89fc86</link><guid isPermaLink="true">https://zenn.dev/blueish/articles/32d6287a89fc86</guid><pubDate>Thu, 22 Aug 2024 14:26:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NYJyGvhz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590App%2520Router%25E3%2580%2591Parallel%2520Routes%25E3%2581%25A8Intercepting%2520Routes%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%25E3%2581%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25BD%2590%25E3%2580%2585%25E6%259C%25A8%2520%25E7%25BE%258E%25E9%2581%25A5%2520%257C%2520BLUEISH%2520E...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5YWRmNjMzNzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BLUEISH%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3MDYwNjU5YWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>佐々木 美遥 | BLUEISH Engineer</dc:creator></item><item><title><![CDATA[TypeScript: 正規表現 使用例集]]></title><description><![CDATA[
 目的
たまにしか実装しないせいで、毎回「あれどうやって書くんだっけ？」となる正規表現。
最近珍しく複数回触れる機会があったので、正規表現を使った実装例を備忘録としてすこしずつ書き加えていきます。
URLの表現方法など具体的なサンプル集としたい。

 ファイル名 の正規表現
windowsではファイル名に使用できない文字が9種類(\,/,:,*,?,",&lt;,&gt;,|)あります。
const pattern = /[\\\/:\*\?\"&lt;&gt;\|]/;


[]: []内のいずれか任意の1文字と一致することを意味している。

\: エスケープ処理。正規表現で「*」な...]]></description><link>https://zenn.dev/yusa_yamamo/articles/regular-expression-examples</link><guid isPermaLink="true">https://zenn.dev/yusa_yamamo/articles/regular-expression-examples</guid><pubDate>Thu, 22 Aug 2024 13:19:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VRjhGRON--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%2520%25E4%25BD%25BF%25E7%2594%25A8%25E4%25BE%258B%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuya%25EF%25BD%258Da%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YjA4YjI0YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuyaｍa</dc:creator></item><item><title><![CDATA[NestJS, Prisma, PostgreSQL(Docker)で...Part3]]></title><description><![CDATA[
 認証つくっていくぜ
今回はNestJS公式で紹介されてるJWT認証を実装していきます
具体的には


JWTを発行する（signin時）
リクエストのヘッダーを見て、有効なJWTが含まれているか？を確認するGuardを作る
実行前にGuardで正しいJWT持ってますか？て確認をするAPIを作る
です。

JWTよくわからんて方は、わかりやすく解説してくれてる方がいたのでこちらをさっと読んでみてください

 email, passwordでuserをfindする超簡単な認証を作る

 AuthModule, AuthService, AuthController 生成
$ nest g...]]></description><link>https://zenn.dev/sasanegi/articles/0ddbc2979283b2</link><guid isPermaLink="true">https://zenn.dev/sasanegi/articles/0ddbc2979283b2</guid><pubDate>Thu, 22 Aug 2024 12:35:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7VBfKfPD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%252C%2520Prisma%252C%2520PostgreSQL%2528Docker%2529%25E3%2581%25A7...Part3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:negima%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSU1UckRUV04xNlo1QlU3amx5cEt6dm5jMHljTkN1UHZEWV9kRmJxbGdFYnVWQUxnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>negima</dc:creator></item><item><title><![CDATA[【備忘録】TypeScript - 型推論]]></title><description><![CDATA[
 Extractをジェネリックな関数で使った時の型推論のプロセス

 背景
ジェネリック型の引数を持つ関数でExtractを使用した時のTypeScriptの型推論のプロセスを理解するのに苦労した。
特に以下のgetValues関数のUがどのように型推論されるのか理解が難しかったため、型推論プロセスを備忘録に残しておく。

 例に使うgetValues関数について
第一引数にobject型のobj、第二引数にobjが持つキーの一部を格納したstring型の配列keysを持ち、keysの要素に一致するキーの値を格納したU型の配列を返す。
function getValues&lt;T, ...]]></description><link>https://zenn.dev/hiro8_hiro8/articles/ac79812165f589</link><guid isPermaLink="true">https://zenn.dev/hiro8_hiro8/articles/ac79812165f589</guid><pubDate>Thu, 22 Aug 2024 07:59:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jadzxzNJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591TypeScript%2520-%2520%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjVRSzFnQVpjV2cwTFJHUXlDcFMtU19uVm5HTlVzNlgwMEN2U2dYTUFmODVMMnFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiro</dc:creator></item><item><title><![CDATA[TypeScriptで型安全かつ可変長引数に対応したzip関数を実装する]]></title><description><![CDATA[type UnwrapTupleArray&lt;T extends any[][]&gt; = {
  [Index in keyof T]: T[Index][number]
}

function zip&lt;T extends any[][]&gt;(...tupleArray: T): UnwrapTupleArray&lt;T&gt;[] {
  // 最も短いlengthを取得
  const length = Math.min(...tupleArray.map(array =&gt; array.length))

  // 各配列の対応する要素をまとめて配列にする
...]]></description><link>https://zenn.dev/k_u_0615/articles/ef0dec7b5d6e9f</link><guid isPermaLink="true">https://zenn.dev/k_u_0615/articles/ef0dec7b5d6e9f</guid><pubDate>Wed, 21 Aug 2024 23:45:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9HtsFQdw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%258B%25E3%2581%25A4%25E5%258F%25AF%25E5%25A4%2589%25E9%2595%25B7%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259Fzip%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kagurazaka%2520%25E7%25A5%259E%25E6%25A5%25BD%25E5%259D%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNDhjYjZhOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kagurazaka 神楽坂</dc:creator></item><item><title><![CDATA[最近作ったBun向けの小さいツール(+alpha)たちの紹介 [自己満記事]]]></title><description><![CDATA[最近いくつか Bun 向けに小さいツールをいくつか作ったので紹介します。
!
これは完全に自己満足の記事です


 bun-plugin-isolated-decl
https://github.com/ryoppippi/bun-plugin-isolated-decl
Bun には Bun.build という Bundler 備わっています。
https://bun.sh/docs/bundler
とても速くて、プラグインを書くのも簡単なので、個人的にも気に入ってよく使ってます(ただし、tree-shaking が甘いという問題がある)。
しかし、Bun.build には現在のところ...]]></description><link>https://zenn.dev/ryoppippi/articles/2a8bf54c206659</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/2a8bf54c206659</guid><pubDate>Wed, 21 Aug 2024 19:07:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1VXYEZhE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E8%25BF%2591%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FBun%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E5%25B0%258F%25E3%2581%2595%25E3%2581%2584%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2528%252Balpha%2529%25E3%2581%259F%25E3%2581%25A1%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2520%255B%25E8%2587%25AA%25E5%25B7%25B1%25E6%25BA%2580%25E8%25A8%2598%25E4%25BA%258B%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[useEventは事前にsetupしよう]]></title><description><![CDATA[reactコンポーネントのユニットテストを書く際にTesting Libraryを利用していましたがv13からv14へのアップデートでuserEventの使い方が変わっていました。
ドキュメントはこちら
https://testing-library.com/docs/user-event/intro

 使い方
v13まではこうでしたが

MyComponent.spec.ts
import {render, screen} from '@testing-library/react'
import userEvent from '@testing-library/user-event'...]]></description><link>https://zenn.dev/mamuno/articles/91ebeaf445a49b</link><guid isPermaLink="true">https://zenn.dev/mamuno/articles/91ebeaf445a49b</guid><pubDate>Wed, 21 Aug 2024 15:42:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5WohBwsR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useEvent%25E3%2581%25AF%25E4%25BA%258B%25E5%2589%258D%25E3%2581%25ABsetup%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4M2IzMzZjMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkr</dc:creator></item><item><title><![CDATA[ReactとDjangoで登録フォームとモーダル画面作ってみた]]></title><description><![CDATA[
 元美容師のDjangoポートフォリオリニューアル日記 Part.4：コンポーネント分割とモーダルフォーム編(material-UIも少しだけ)
こんにちは、やぎです！
前回の記事では、DjangoとReactを連携させ、データベースに登録されているサロンデータの取得と表示を実装しました。
今回は、フロントエンドでサロンの登録機能を追加していきます！

 今回の実装内容
1.サロン登録機能の追加(単一ファイルで実装)
まずは前回作成したapp.jsに追加をしてサロン登録機能を作成します。
2.コンポーネントの分割
単一ファイルで作成していた機能を、部品ごとに分けてコンポーネント思考で作...]]></description><link>https://zenn.dev/jenny/articles/9a3595f37b6a0b</link><guid isPermaLink="true">https://zenn.dev/jenny/articles/9a3595f37b6a0b</guid><pubDate>Wed, 21 Aug 2024 14:12:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5rqyjN7q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8Django%25E3%2581%25A7%25E7%2599%25BB%25E9%258C%25B2%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A8%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E7%2594%25BB%25E9%259D%25A2%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0Y2NlYzgwYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やぎ</dc:creator></item><item><title><![CDATA[今後のnodejsのtypescript依存について思ったこと。]]></title><description><![CDATA[ざっと目を通して思った現時点の所感
流し読みなのでissueや他に答えあるかも知らん。

typescriptには参照実装はあるけど、仕様はないというのがまあまあ不安ですなぁ。
nodejsはpython(ビルド時依存)かつ、typescript(ランタイム依存)にも依存することになる不思議な不思議な言語になりそう。
coreに入れるということはnodejsから見るとtypescriptがランタイム依存なのにtypescriptのサポート期間1年考えるとnodejsのサポート期間2年なので、typescriptのサポート期間が短過ぎる気がしますが、大丈夫なんかねぇ?
typescript...]]></description><link>https://zenn.dev/oto/articles/e42c4d536b3900</link><guid isPermaLink="true">https://zenn.dev/oto/articles/e42c4d536b3900</guid><pubDate>Wed, 21 Aug 2024 11:06:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XuowawNu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E5%25BE%258C%25E3%2581%25AEnodejs%25E3%2581%25AEtypescript%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otogawa%2520Katsutoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiZTMxMWQ2YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otogawa Katsutoshi(oto)</dc:creator></item><item><title><![CDATA[社内でTypeScript大会しました（競プロ）]]></title><description><![CDATA[
 はじめに
皆さんは普段、コーディングをするときにCopilotを使っているでしょうか？
私はがっつり使ってます。
「どういったコードを書きたいか」をコメントするだけでコードの自動生成をしてくれたり、次に書くべきコードの提案を受けることができるので、非常に便利ですよね。
一方で、自分で考えてコードを書く機会が減るため、「自分でプログラミングを書けなくなるのでは？」という懸念があります...
自分で考えてコードを書く機会を作ることと、他の人がどんなコードを書いているのか勉強のために社内でTypeScript大会を開催しました。学びがありましたし、結構盛り上がって楽しかったです！
本記事で...]]></description><link>https://zenn.dev/takafumi2775/articles/21fa215be2d607</link><guid isPermaLink="true">https://zenn.dev/takafumi2775/articles/21fa215be2d607</guid><pubDate>Wed, 21 Aug 2024 09:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CsWQNfSH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A4%25BE%25E5%2586%2585%25E3%2581%25A7TypeScript%25E5%25A4%25A7%25E4%25BC%259A%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takamu</dc:creator></item><item><title><![CDATA[type-challengesのextremeレベルを解いてみた]]></title><description><![CDATA[
 まえがき
チーム内でTypeScriptの学習法について話題に上がった際にこちらの問題集をメンバーからご共有頂きました。
type-challenges
普段はよく使うライブラリのソースコードを読んだり、OSSに参加したりしながら実践的にTypeScript力を鍛えているのですが、こういう問題集に挑戦するのも面白そう。
ということで、一番難しいレベルの「extreme」に記載されている問題について自分なりの解法と回答を記してみます。
あくまでも僕が個人的に考えたものなので最適な回答ではない可能性が高いです。
参考程度にお読みください。

 5 - Get Readonly Keys
...]]></description><link>https://zenn.dev/8times12/articles/20a27923bdefca</link><guid isPermaLink="true">https://zenn.dev/8times12/articles/20a27923bdefca</guid><pubDate>Wed, 21 Aug 2024 07:19:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--82PZxZC6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type-challenges%25E3%2581%25AEextreme%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryusei%2520Abe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NTk2MzRmMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryusei Abe</dc:creator></item></channel></rss>