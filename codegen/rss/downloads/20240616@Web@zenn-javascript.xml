<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 16 Jun 2024 09:00:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[! (Non-null assertion )や ?.  (Optional chaining)についてまとめてみる]]></title><description><![CDATA[Javascript や typescript の学習を進めていると、 !  や ? といった演算子がちょくちょく登場するのですが、理解が曖昧のため使い方を整理して理解を深めたいと思います。

 ! (Non-null assertion operator / 非null アサーション)
これは、型チェックをする際に、null また undefined の可能性を無視することをコンパイラに伝えるものです。
使い方
let foo: string | undefined;
foo = "Hello";
console.log(foo!.length);  // ! を入れることで、コンパイ...]]></description><link>https://zenn.dev/surume3/articles/70d435329ac363</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/70d435329ac363</guid><pubDate>Sun, 16 Jun 2024 09:00:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i8KJH_Cd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2521%2520%2528Non-null%2520assertion%2520%2529%25E3%2582%2584%2520%253F.%2520%2520%2528Optional%2520chaining%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[あれ？CUID作られないんだけど？]]></title><description><![CDATA[
 あれ？PostgresでCUID作られないんだけど？
Nuxt3のアプリケーションでPrismaを使っているときに、PostgresデータベースでCUIDが生成されない問題についてお話しします。

 前提条件

Nuxt3のアプリケーションでPrismaを使用しています。
データベースにはPostgresを使用しています。
ユーザーに自動インクリメントのIDを表示したくない場合があるので、UUIDを使用しています。


 問題の背景
開発中にDBにSQLクライアントから手動でサンプルデータを追加したいシーンがあると思います。
ユーザーテーブルにUUIDカラムをdefault cuid...]]></description><link>https://zenn.dev/kosuke_ito/articles/ac5014359221ff</link><guid isPermaLink="true">https://zenn.dev/kosuke_ito/articles/ac5014359221ff</guid><pubDate>Sun, 16 Jun 2024 07:53:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZyuAJsPp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2582%258C%25EF%25BC%259FCUID%25E4%25BD%259C%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kosuke%2520ito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1ZDE2NTk1ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kosuke ito</dc:creator></item><item><title><![CDATA[JavaScriptクイズ: JSON.parseできるけどJSとして有効でないことはある？]]></title><description><![CDATA[以下のクイズの解説を書きます。
JavaScriptクイズ: 以下の関数はtrueを返すことがある？
function quiz(s) {
  if (typeof s !== 'string') return false;
  try { JSON.parse(s); } catch { return false; }
  try { eval('(' + s + ')'); } catch { return true; }
  return false;
}
※ ただし、 JSON や eval を外のスコープから置き換える、といったことは禁止。
バージョンはES2023 (ECMA...]]></description><link>https://zenn.dev/luma/articles/javascript-quiz-json-but-not-js</link><guid isPermaLink="true">https://zenn.dev/luma/articles/javascript-quiz-json-but-not-js</guid><pubDate>Sun, 16 Jun 2024 06:50:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cn23pnwY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%253A%2520JSON.parse%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%2591%25E3%2581%25A9JS%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%259C%2589%25E5%258A%25B9%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lnRFRSQVhGMGJ1cUs3cXg4NGdUYlVNU3RlZnVVekdiN0p0Q0hWRFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luma</dc:creator></item><item><title><![CDATA[[React]クリックしたらメニューがすぐ側に出現するUXを汎用的なコンポーネントに落とし込んでみた]]></title><description><![CDATA[
 はじめに
しばしば見かける以下のようなUXを、誰でも扱えるコンポーネントとして実装してみたので解説します。


 完成系

以下にて、ソースコードを公開しております。

https://github.com/yu-ta-9/yuta9-storybook-v2/tree/main/src/components/tools/MenuModalPortal

 解説

以下、該当のコンポーネントをMenuModalPortalと呼称します。


 Props設計
&lt;MenuModalPortal
    buttonElement={
        &lt;button type...]]></description><link>https://zenn.dev/yu_ta_9/articles/a9e5dce4ca21bd</link><guid isPermaLink="true">https://zenn.dev/yu_ta_9/articles/a9e5dce4ca21bd</guid><pubDate>Sun, 16 Jun 2024 01:44:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9O2R-96i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%255D%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%258C%25E3%2581%2599%25E3%2581%2590%25E5%2581%25B4%25E3%2581%25AB%25E5%2587%25BA%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BUX%25E3%2582%2592%25E6%25B1%258E%25E7%2594%25A8%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YU-TA-9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNzU2NmM5MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YU-TA-9</dc:creator></item><item><title><![CDATA[いまさら、Next.jsを調べてみる]]></title><description><![CDATA[
 ごあいさつ
こんにちは！
オアシステクノロジーズの山本です。
いまや、フロントエンド開発において必須となっているJavaScriptフレームワークですが、
デファクトスタンダード（業界標準）となっている！？ReactとNext.jsについて整理してみたいと思います。
どなたかの製品選定等に役立てば幸いです。

 フロントエンドのデファクトスタンダードなJSライブラリとは
フロントエンドの開発に携わっているかたで、以下のJSライブラリは聞いたことがあるかと思います。

React（Next.js)
Vue.js
Angular
Svelte
jQuery

Next.jsはReactの...]]></description><link>https://zenn.dev/oasys/articles/78c7c2d5d7f6ba</link><guid isPermaLink="true">https://zenn.dev/oasys/articles/78c7c2d5d7f6ba</guid><pubDate>Sun, 16 Jun 2024 00:00:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nigOVW6B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E3%2580%2581Next.js%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMGUxYmY0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オアシステクノロジーズ</dc:creator></item><item><title><![CDATA[エンジニア編: ToDoリストアプリを作成してみた（HTML, CSS, JavaScript）]]></title><description><![CDATA[
 VSCode

VSCode使ってやっと開発しようかと思ったが、そもそもこのツールの使い方を知らないことが発覚。
Mac上部のメニュー欄からHelpを選択、Documentationを確認。
最上部にあった動画を視聴。
https://youtu.be/B-s71n0dHUk
・コマンドパレットから&gt;Color Themeと入力することで、色を変えられる
・⌘Nでファイルを作成できる

 HTML

要素（Element）の構成

サンプルコードをとりあえず書き写してみた。
・コードを書いてると勝手に「これはHtmlですね」みたいな感じで、右下に表示される
.&lt;head&...]]></description><link>https://zenn.dev/tetty2525/articles/82b5f6cc381a31</link><guid isPermaLink="true">https://zenn.dev/tetty2525/articles/82b5f6cc381a31</guid><pubDate>Sat, 15 Jun 2024 13:26:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9xBVoR1t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E7%25B7%25A8%253A%2520ToDo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588HTML%252C%2520CSS%252C%2520JavaScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tetty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjMTFjNGMyOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tetty</dc:creator></item><item><title><![CDATA[JavaScript Interview Preparation]]></title><description><![CDATA[中国語です]]></description><link>https://zenn.dev/ianchen0419/books/2d26cdfbac59c7</link><guid isPermaLink="true">https://zenn.dev/ianchen0419/books/2d26cdfbac59c7</guid><pubDate>Sat, 15 Jun 2024 11:45:43 GMT</pubDate><dc:creator>イーアン</dc:creator></item><item><title><![CDATA[JavaScriptのランタイム構成からイベントループを学ぶ]]></title><description><![CDATA[こんにちは、Yu_riです。
今回はJavaScriptのイベントループについて以下動画（JavaScript Visualized - Event Loop, Web APIs, (Micro)task Queue）で学んだことを記載していきます。
https://www.youtube.com/watch?v=eiC58R16hb8&amp;list=PLYiYQVWAjSGMDserRaYZOsYVjsGazJefy&amp;t=51s

 JavaScriptランタイム（実行環境）の構成

 1. Call Stack（コールスタック）　≒　JavaScriptエンジン
※Jav...]]></description><link>https://zenn.dev/yyuri/articles/af7586da0982b1</link><guid isPermaLink="true">https://zenn.dev/yyuri/articles/af7586da0982b1</guid><pubDate>Sat, 15 Jun 2024 09:05:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6XfhMBd4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%25A7%258B%25E6%2588%2590%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yu_ri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZTkzMDZmOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yu_ri</dc:creator></item><item><title><![CDATA[React.memo の Shallow Comparison 回避方法]]></title><description><![CDATA[
 概要
今回は、実務の中で若干詰まった Shallow Comparison の回避方法を、忘れないようメモ程度の記事として残しておこうと思います。
簡単な内容のため、ほとんど React の公式ドキュメントの内容を自分のわかりやすい言葉に置き換えているだけなので、さわりだけ見ていただいた後は公式を見る方が安全だと思います。
https://ja.react.dev/reference/react/memo
!
React.memo がどのような機能かなどの説明は行なっておりません。


 課題
コンポーネントを memo 化することで、不要なレンダリングを回避することができます。
で...]]></description><link>https://zenn.dev/noko_noko/articles/70a85ea0294f50</link><guid isPermaLink="true">https://zenn.dev/noko_noko/articles/70a85ea0294f50</guid><pubDate>Sat, 15 Jun 2024 03:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BzJlYwAx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React.memo%2520%25E3%2581%25AE%2520Shallow%2520Comparison%2520%25E5%259B%259E%25E9%2581%25BF%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%25A1%25E3%2581%25AE%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjZDZjM2E1ZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つちのこ</dc:creator></item><item><title><![CDATA[プロトアウトスタジオの授業スタート前チェックリスト]]></title><description><![CDATA[プロトアウトスタジオで行う授業に、自分でも参加できるのだろうか？と不安になる人がよくいます。今回はとりそぎ、授業前に必要な環境やスキルのチェックリストとなっています。「迷ったら飛び込んできて欲しい！」ってのが率直な想いなのですが、なかなかそうともいかないとは思うのでこれが出来る人は問題ないよ！て項目をリストアップしておきます。]]></description><link>https://zenn.dev/protoout/books/protoout-pre-lesson-2024</link><guid isPermaLink="true">https://zenn.dev/protoout/books/protoout-pre-lesson-2024</guid><pubDate>Fri, 14 Jun 2024 13:51:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3afxDGjH--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wNTIyMmUxOTdkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>プロトアウト</dc:creator></item><item><title><![CDATA[型定義を一括オプショナルにする方法]]></title><description><![CDATA[
 自己紹介
おはこんばんにちは。まだ駆け出しエンジニアの柿です。
普段はフロントエンド領域を生業としていて、
個人でなにかやるときには React/Next、仕事では Vue/Nuxt を使用しています。

 はじめに
今回は業務で TypeScript を使っていて、
「へー！こんなことできるんだ！」と思ったことをシェアしたいと思います。

 型定義を一括オプショナルにする方法
TypeScript では、オブジェクトの型定義を一括でオプショナルにすることができます。
例えば、次のような型があったとします。
interface User {
  name: string;
  age...]]></description><link>https://zenn.dev/xeiculy/articles/5021831486a403</link><guid isPermaLink="true">https://zenn.dev/xeiculy/articles/5021831486a403</guid><pubDate>Fri, 14 Jun 2024 11:18:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ToYVVw37--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259F%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhZDQ4ZGE2NDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>柿</dc:creator></item><item><title><![CDATA[コミットメッセージの体裁を強制してみたお話]]></title><description><![CDATA[
 自己紹介
こんにちは。若手の web エンジニアの柿です！
フロントエンド領域を生業としています :)
個人でなにかやるときには React/Next を使いますが、仕事では Vue/Nuxt を使用しています。

 今回のお話
今回は、コミットメッセージの体裁を強制してみることを頑張ったときのお話です。
なぜ頑張ったのかというと、
「コミットメッセージ、lint できるようにしてみてよ！」
という大先輩からの一言があったからです。
チームの課題として、一時期「コミットメッセージの体裁が乱れていたこと」を提起させて頂いた過去があったので、
これできるようになったらおもろいな、と思った...]]></description><link>https://zenn.dev/xeiculy/articles/60fffa58a8bd36</link><guid isPermaLink="true">https://zenn.dev/xeiculy/articles/60fffa58a8bd36</guid><pubDate>Fri, 14 Jun 2024 09:51:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YHHVtvB5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E4%25BD%2593%25E8%25A3%2581%25E3%2582%2592%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259F%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhZDQ4ZGE2NDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>柿</dc:creator></item><item><title><![CDATA[TypeScriptにおけるクラスのimplementsとextends]]></title><description><![CDATA[implementsとextendsはどちらもクラスに関連していますが、異なる目的で使用されます。

 implementsの概要


目的: クラスが特定のインターフェースを実装することを示す。


使用方法: クラスがインターフェースで定義されたプロパティやメソッドを持つことを強制する。


例:
interface Animal {
  name: string;
  makeSound(): void;
}

class Dog implements Animal {
  name: string;

  constructor(name: string) {
    this....]]></description><link>https://zenn.dev/lyio/articles/fab176ca55d415</link><guid isPermaLink="true">https://zenn.dev/lyio/articles/fab176ca55d415</guid><pubDate>Fri, 14 Jun 2024 08:22:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dh8x_EOF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AEimplements%25E3%2581%25A8extends%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lyio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lyio</dc:creator></item><item><title><![CDATA[【Chome126】View Transitions APIで滑らかな画面遷移を実装する]]></title><description><![CDATA[こんにちは！
Chrome 111からView Transitions APIが利用可能になりましたが、今まで試す機会がありませんでした。
今回満を持して試してみたところ非常に面白かったので、この記事で共有したいと思います。
また、2024年6月11日にリリースされたChrome 126からView Transitions APIが強化されましたので、その点についても触れてみたいと思います。

 View Transitions APIとは
!
View Transitions APIについては現時点(2024年6月)では一部のブラウザが対応していないため、ご注意ください。(参照)

h...]]></description><link>https://zenn.dev/gemcook/articles/ccbefdef11960f</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/ccbefdef11960f</guid><pubDate>Fri, 14 Jun 2024 05:50:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9rAc469f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Chome126%25E3%2580%2591View%2520Transitions%2520API%25E3%2581%25A7%25E6%25BB%2591%25E3%2582%2589%25E3%2581%258B%25E3%2581%25AA%25E7%2594%25BB%25E9%259D%25A2%25E9%2581%25B7%25E7%25A7%25BB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KM%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjk0ZGQyMWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KM</dc:creator></item><item><title><![CDATA[ExcelJSでファイル編集してみたお話と、出力ファイルが変な表示になったお話]]></title><description><![CDATA[
 ExcelJSでファイル編集してみたお話
テンプレートExcelファイルがあるとき、 JSからそのファイルを修正・修正したものをダウンロードしたいということで、ExcelJSというライブラリを触ってみました。
Excelファイルの読み込み、一部修正、そして別ファイルとしてダウンロードするまでの流れをやってみた。そんな記事。

 ExcelJSでファイルを操作する
この記事ではExcelJSというライブラリを使ってExcelファイルの編集をしていきます。
適当にNuxt3プロジェクトを作って、ライブラリをインストール。
yarn add exeljs
インストールが済んだら、Excel...]]></description><link>https://zenn.dev/rie_amasato/articles/beb4a00515be22</link><guid isPermaLink="true">https://zenn.dev/rie_amasato/articles/beb4a00515be22</guid><pubDate>Fri, 14 Jun 2024 04:46:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uO5RU8C9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ExcelJS%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%25E3%2581%25A8%25E3%2580%2581%25E5%2587%25BA%25E5%258A%259B%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258C%25E5%25A4%2589%25E3%2581%25AA%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Amasato%2520Rie%2528%25E9%2581%258D%25E6%2580%259C%2520%25E6%2582%25A7%25E5%258F%25A1%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzE4OTZjN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Amasato Rie(遍怜 悧叡)</dc:creator></item><item><title><![CDATA[New Film France 2024 All France]]></title><description><![CDATA[https://www.scoop.it/topic/ver-intensa-mente-2-2024-online-en-espanol-y-latino-gratis-by-ver-intensa-mente-2-2024-online-en-espanol-y-latino-gratis
https://www.scoop.it/topic/pelisplus-ver-intensa-mente-2-2024-online-en-espanol-y-latino-gratis-by-ver-intensa-mente-2-2024-online-en-espanol-y-latin...]]></description><link>https://zenn.dev/fdghsfhsdg/articles/6d9b6645359678</link><guid isPermaLink="true">https://zenn.dev/fdghsfhsdg/articles/6d9b6645359678</guid><pubDate>Thu, 13 Jun 2024 19:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JRLS9Pwk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:New%2520Film%2520France%25202024%2520All%2520France%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sdgsdhgsdgsdg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS21NQmxSenhPUTFyYlJfVWloYjhRODVkSzY0Zks0ME14Q1RUN0VhdGVnU3piN1RnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sdgsdhgsdgsdg</dc:creator></item><item><title><![CDATA[Mapbox Search JS を触ってみる (SearchBox/React編)]]></title><description><![CDATA[
 はじめに
この記事はMapbox Search JS を触ってみる (SearchBox/Web編)の続きで、Search JSのSearchBox/Reactの使い方を見ていきます。Search Box - React QuickstartのIntegration with a Mapbox GL JS Mapを参考にしつつ、Add Search Box for Japanと同じものを作成します。
以下が本サンプルのデモです。SafariやFirefoxを使用されている方はデモが実行されない可能性があります。Chromeで表示するか、 https://stackblitz.com/...]]></description><link>https://zenn.dev/mapbox_japan/articles/ab629f6696e865</link><guid isPermaLink="true">https://zenn.dev/mapbox_japan/articles/ab629f6696e865</guid><pubDate>Thu, 13 Jun 2024 13:02:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o6bLPXZI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mapbox%2520Search%2520JS%2520%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528SearchBox%252FReact%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:OttyLab%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZWNmNDhhMWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhMGJmZWJmZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OttyLab</dc:creator></item><item><title><![CDATA[Quill.js（Ver2）でプレーンテキストをペーストする]]></title><description><![CDATA[
 はじめに
先日、開発しているサービスに使用していたJSのリッチエディターライブラリであるQuill.jsをver2系にアップデートしました。独自にカスタマイズしていた部分において、いくつか変更が必要となったため備忘録として残しておきます。

 テキストをプレーンテキストでペーストする
デフォルトだとリッチテキストはリッチテキストのままペーストされます。

 Ver1系
Ver1系において、プレーンテキストで貼り付ける場合は下記のカスタマイズを施していました。
ライブラリが持つPlainClipboardクラスのonPasteメソッドに対してパッチを当てています。
★参考 Quillの...]]></description><link>https://zenn.dev/n4sh/articles/8184ec58a961b5</link><guid isPermaLink="true">https://zenn.dev/n4sh/articles/8184ec58a961b5</guid><pubDate>Thu, 13 Jun 2024 11:38:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q_-mNysv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Quill.js%25EF%25BC%2588Ver2%25EF%25BC%2589%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:n4sh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhMDk2NzViMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n4sh</dc:creator></item><item><title><![CDATA[TypeScriptを使って、エントリーポイントに紐づくts, js, vueの依存関係を追う]]></title><description><![CDATA[
 はじめに
現在 https://snkrdunk.com/ では、多くのWebアプリケーションにおいて、webpackを利用してマルチページアプリケーション（MPA）の構成でFrontendの実装をしています。
エントリーポイントは100を超え、その大半がVue.jsとJavaScript、TypeScriptを組み合わせて実装されています。
今回は、そんな環境の依存関係を紐解くべく調査のためのscriptを作成したお話になります。

 エントリーポイントごとの依存関係をJSON形式で生成

outputData.json
[
  {
    "entryPointPath": "s...]]></description><link>https://zenn.dev/team_soda/articles/da2a262cb99b80</link><guid isPermaLink="true">https://zenn.dev/team_soda/articles/da2a262cb99b80</guid><pubDate>Thu, 13 Jun 2024 04:12:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p17YOaT5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E7%25B4%2590%25E3%2581%25A5%25E3%2581%258Fts%252C%2520js%252C%2520vue%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:aokiken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYTM5ODQ3MWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SODA%2520Engineering%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczNmNjYmUyMGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aokiken</dc:creator></item><item><title><![CDATA[【メモ】＼←の打ち方・意味]]></title><description><![CDATA[javaspcriptを勉強しているときに　＼　この打ち方がわからず迷ったのでメモしておきます。
/ ←とは向きが違うし、なんぞや？
⚫︎「\」…バックスラッシュ　
javaspcriptにおける意味について
…ざっくり言うと「エスケープシーケンス（エスケープ処理）」をするためのもの　です。
エスケーシーケンスとは？
　…バックスラッシュ（\）もしくは円記号（￥）を前に付けて、特殊文字を表す方法です。バックスラッシュか円記号は使用しているOSやデバイスによって異なります。現在は殆どがバックスラッシュで表されるようです。
この\のあとにつづく記号によって意味が変わってくるみたいです。
表記...]]></description><link>https://zenn.dev/yuzukame/articles/b7ccbec989efe4</link><guid isPermaLink="true">https://zenn.dev/yuzukame/articles/b7ccbec989efe4</guid><pubDate>Thu, 13 Jun 2024 00:27:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AVYxpl7V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591%25EF%25BC%25BC%25E2%2586%2590%25E3%2581%25AE%25E6%2589%2593%25E3%2581%25A1%25E6%2596%25B9%25E3%2583%25BB%25E6%2584%258F%25E5%2591%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjYzU5YzJkZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MH</dc:creator></item></channel></rss>