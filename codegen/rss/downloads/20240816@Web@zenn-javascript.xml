<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 16 Aug 2024 01:19:08 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[JS]乱数を作成してサイコロ機能を実装する]]></title><description><![CDATA[JavaScriptには、乱数を生成するための便利なメソッドとしてMath.random()が用意されています。このメソッドと他のMathメソッドを組み合わせることで、さまざまな用途に応じた乱数を簡単に生成することができます。

 1. Math.random()の基本
Math.random()は、0以上1未満の範囲でランダムな浮動小数点数を生成するメソッドです。例えば、以下のように使います。
const randomNumber = Math.random();
console.log(randomNumber);
このコードを実行すると、毎回異なる0以上1未満の数値がコンソールに表...]]></description><link>https://zenn.dev/mhirata/articles/22a39a1b8af7b0</link><guid isPermaLink="true">https://zenn.dev/mhirata/articles/22a39a1b8af7b0</guid><pubDate>Thu, 15 Aug 2024 14:36:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HBALQ-gw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJS%255D%25E4%25B9%25B1%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25B3%25E3%2583%25AD%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNTg5NmU0ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizuki</dc:creator></item><item><title><![CDATA[[JS]Infinityの使い方]]></title><description><![CDATA[
 1. Infinity とは何か？
Infinity は、通常の数値の範囲を超えた「無限大」を表す数値で、特に大きな値や割り算でのエラー結果としてよく現れます。

 特徴


無限大: Infinity は正の無限大を示し、非常に大きな正の数値を扱うときに使用されます。例えば、1 / 0 のような演算は Infinity を返します。同様に-Infinity は負の無限大を示します。


 計算例
console.log(1 / 0);        // 出力: Infinity
console.log(-1 / 0);       // 出力: -Infinity
console...]]></description><link>https://zenn.dev/mhirata/articles/aa47806c99bd1b</link><guid isPermaLink="true">https://zenn.dev/mhirata/articles/aa47806c99bd1b</guid><pubDate>Thu, 15 Aug 2024 14:13:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dYwuIg_g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJS%255DInfinity%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNTg5NmU0ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizuki</dc:creator></item><item><title><![CDATA[全角文字を半角文字の2文字分として数えるの、意外と難しい問題【Rails】]]></title><description><![CDATA[ラブグラフでエンジニア兼CTOをしております横江( @yokoe24 )です。
文字数バリデーションを付けたいことはよくあると思います。
ただ、ユーザーのニックネームなどの場合、
「正直、表示する場所の横幅の問題だから、半角文字を0.5文字で全角文字を1文字と数えたいなぁー」と思うこともあると思います。
半角文字を0.5文字で全角文字を1文字と数える。
至って単純そうなこの仕組み、なかなかの難儀を迎えるのでした……。

 各文字のバイトサイズを考えればなんとかなる？！
まずは ChatGPT に聞いてみましょう！

Rails で、User モデルの name カラムに対するバリデーショ...]]></description><link>https://zenn.dev/lovegraph/articles/a43529cc3653f6</link><guid isPermaLink="true">https://zenn.dev/lovegraph/articles/a43529cc3653f6</guid><pubDate>Thu, 15 Aug 2024 05:06:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1j9XRHAF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25A8%25E8%25A7%2592%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E5%258D%258A%25E8%25A7%2592%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE2%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%25E3%2581%25AE%25E3%2580%2581%25E6%2584%258F%25E5%25A4%2596%25E3%2581%25A8%25E9%259B%25A3%25E3%2581%2597%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25E3%2580%2590Rails%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25A8%25AA%25E6%25B1%259F%25EF%25BC%25A0%25E3%2583%25A9%25E3%2583%2596%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNWYxYmUwYzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A9%25E3%2583%2596%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMjA2NjYzODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>横江＠ラブグラフ</dc:creator></item><item><title><![CDATA[var の落とし穴：なぜモダンJavaScriptで避けるべきか]]></title><description><![CDATA[
 はじめに
みなさん、こんにちは。私は業界歴 1 年半、JavaScript 歴も同じく 1 年半の hiro です。
正直なところ、最初はvarについて「なんとなく使わない方がいいらしい」という漠然とした認識しかありませんでした。ES6 以降のモダンな JavaScript しか触れてこなかった私にとって、varはどこか遠い存在で、その問題点を深く理解する機会がありませんでした。
しかし、先輩エンジニアの方々とコードレビューを重ねる中で、varの使用に対して厳しい指摘を何度か目にしました。「なぜvarはそれほど問題なのか？」「letやconstとどう違うの？」そんな疑問が徐々に膨らん...]]></description><link>https://zenn.dev/eneosgrandchild/articles/99aa52128f9ac7</link><guid isPermaLink="true">https://zenn.dev/eneosgrandchild/articles/99aa52128f9ac7</guid><pubDate>Thu, 15 Aug 2024 03:01:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x2bhxZ07--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:var%2520%25E3%2581%25AE%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E7%25A9%25B4%25EF%25BC%259A%25E3%2581%25AA%25E3%2581%259C%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3JavaScript%25E3%2581%25A7%25E9%2581%25BF%25E3%2581%2591%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YWhBVTdOSGM4WUhqYmZMY3VKSDVTWkVaMjlzR0NxNHAwR2hPNGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiro</dc:creator></item><item><title><![CDATA[【JS初級】#1 mapメソッドとforEachメソッドの違い・使い分け【3分解説】]]></title><description><![CDATA[
 まえがき
今回から始まりました、JavaScript(TypeScript)解説シリーズ。実務でJavaScript(TypeScript)を使っている人も、勉強中の人も、「あれ？言われてみればどうだったっけ？」となるような疑問を解決していこうというコーナーです。今後はもっと踏み込んだ内容も執筆していきたいと思っています。

 今回のテーマ
第一回のテーマはmapメソッドとforEachメソッドです。どちらもよく使われることのあるメソッドですが、違いを正しく理解せずに使っている方も中にはいるのではないでしょうか。今回はこの二つのメソッドの違いについて解説します。

 例題
const...]]></description><link>https://zenn.dev/gamuprog/articles/29ea2f58883750</link><guid isPermaLink="true">https://zenn.dev/gamuprog/articles/29ea2f58883750</guid><pubDate>Wed, 14 Aug 2024 22:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tAoYOBB1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E5%2588%259D%25E7%25B4%259A%25E3%2580%2591%25231%2520map%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25A8forEach%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2583%25BB%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25E3%2580%25903%25E5%2588%2586%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmYTNjODM0OTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>がむ</dc:creator></item><item><title><![CDATA[TypeScriptの基本的な型]]></title><description><![CDATA[
 型アノテーション(型注釈)
変数名: 型名 = 値
let name: string = "Name";

 プリミティブな型

 number

整数、浮動小数、負の値、NaN(not a number)、infinity、2進数(0b)、8進数(0o)、16進数(0x)
範囲は約 -9007199254740991-(2^53 − 1)から約 90071992547409912^53 − 1



 string

シングルクウォート、ダブルクウォート、バックティック(テンプレートリテラル)


 boolean

true/false


 undefined

値が存在しない...]]></description><link>https://zenn.dev/momonga_g/articles/755294dea6f610</link><guid isPermaLink="true">https://zenn.dev/momonga_g/articles/755294dea6f610</guid><pubDate>Wed, 14 Aug 2024 16:11:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ujR3TMvt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2582%25E3%2582%2593%25E3%2581%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWRkZTc0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ももんが</dc:creator></item><item><title><![CDATA[use-immer でネストした State を更新する]]></title><description><![CDATA[こんにちは。記事の連投記録更新中ののツーさんです 😁。State の管理といえば React の "useState" を使うのが一般的ですよね。もちろん私もよく使っています。
しかし、下記みたいなネストされた State を更新をする時ってちょっとめんどくさいと思ったことありませんか？
const [form, setForm] = useState&lt;FormType&gt;({
  name: "",
  address: {
    prefecture: "",
    city: "",
  },
  contact: {
    tel: "",
    email: ...]]></description><link>https://zenn.dev/cocomina/articles/update-nested-state-with-use-immer</link><guid isPermaLink="true">https://zenn.dev/cocomina/articles/update-nested-state-with-use-immer</guid><pubDate>Wed, 14 Aug 2024 13:43:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g_Npwo2w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:use-immer%2520%25E3%2581%25A7%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%2520State%2520%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Twosun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiODhhMjUyYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Twosun</dc:creator></item><item><title><![CDATA[ClerkのAuthMiddlewareをClerkMiddlewareで書き換える方法]]></title><description><![CDATA[
 はじめに
個人開発の勉強にて以下のYoutube動画を参考にクローンアプリを作りながらNextJSに触れているのですが、Middlewareの認証周りで非推奨に出会ったので、ClerkMiddlewareでのコーディングを載せておきます.
https://www.youtube.com/watch?v=pRybm9lXW2c

 Clerkとは何か
Clerkは、Next.jsアプリケーションに簡単に認証機能を追加できるサービスです.
個人開発アプリを公開をする場合に認証情報の管理は非常に大切ですが、他の機能の作り込みを頑張りたいのが性な気がします(個人の感想ですが...).
Cle...]]></description><link>https://zenn.dev/norinoriver/articles/1b02876c46dd95</link><guid isPermaLink="true">https://zenn.dev/norinoriver/articles/1b02876c46dd95</guid><pubDate>Wed, 14 Aug 2024 13:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gAgo7mZ6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Clerk%25E3%2581%25AEAuthMiddleware%25E3%2582%2592ClerkMiddleware%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YjI5NDBlMjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nori</dc:creator></item><item><title><![CDATA[（macOS）Safari App Extensionの作り方]]></title><description><![CDATA[
 はじめに
この記事ではSafari App Extensionの作り方を説明します。Google Chromeなどと互換性のあるSafari Web Extensionとは異なりますのでご注意ください。
対象読者はiOSアプリなどAppleプラットフォームのネイティブアプリを作成した経験がある方です。Xcodeの使い方やBundle IDとは何か、といった説明はしませんのでご容赦ください。

 環境
記事の投稿にあたり、以下の環境にて動作確認を行いました。

macOS Monterey 12.7.5
Safari Version 17.5 (17618.2.12.111.5, 17...]]></description><link>https://zenn.dev/moutend/articles/87d7e592dd7307</link><guid isPermaLink="true">https://zenn.dev/moutend/articles/87d7e592dd7307</guid><pubDate>Wed, 14 Aug 2024 09:54:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6cVc44iX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2588macOS%25EF%25BC%2589Safari%2520App%2520Extension%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiyuki%2520Koyanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2luT1BUc1lmTWF3NkFTeUViN24wS2cza184NktOcDh0WUtIbGh0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Koyanagi</dc:creator></item><item><title><![CDATA[経験談に基づく主観的Vue.js学習ロードマップ]]></title><description><![CDATA[
 はじめに
おはようございますhiroです。
Vueを学習するにあたり、初学者向けのロードマップがあればと思っていたため本記事を書きました ✏️
タイトルにもありますが、本記事は私の経験に基づくかなり主観的なものとなっていますので予めご了承ください。「これからVueをどのように学習しよう？」そう悩んでいる方の参考になれば幸いです！

 対象読者
本記事はVueをこれから学習しようとしている初学者の方を対象としています。具体的に以下のような悩みを持った方を想定しています。

JavaScriptをざっと学びこれからVueをどのように学習しようか悩んでいる方
どのような教材を使用すれば良い...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/c2b0b9dd97ff49</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/c2b0b9dd97ff49</guid><pubDate>Wed, 14 Aug 2024 05:46:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wuRZDT-6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B5%258C%25E9%25A8%2593%25E8%25AB%2587%25E3%2581%25AB%25E5%259F%25BA%25E3%2581%25A5%25E3%2581%258F%25E4%25B8%25BB%25E8%25A6%25B3%25E7%259A%2584Vue.js%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwOTUyYzVkNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiro</dc:creator></item><item><title><![CDATA[個人的に好きなPrettierの設定]]></title><description><![CDATA[
 はじめに
今までデフォルトの設定でPrettierを使ってコード整形をしていましたが、最近コードの見た目をスッキリさせたいと思ってPrettierを自分好みに設定してみました。

 個人的に好きなPrettier設定

.prettierrc
{
  "printWidth": 90,
  "semi": false,
  "singleQuote": true,
}

以上！

 printWidth: 90
1行あたりの最大文字数を90文字に設定。

デフォルトは80文字

折り返しの幅はもうちょっと広めに設定したかったので90文字にしました。
バージョンアップによって、デフォル...]]></description><link>https://zenn.dev/ryouta26/articles/747431b844b4f0</link><guid isPermaLink="true">https://zenn.dev/ryouta26/articles/747431b844b4f0</guid><pubDate>Wed, 14 Aug 2024 05:14:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3wNaPtYJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25AB%25E5%25A5%25BD%25E3%2581%258D%25E3%2581%25AAPrettier%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryouta.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZjIyNTZmYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryouta.js</dc:creator></item><item><title><![CDATA[マジカルミライ2024プログラミングコンテストに参戦してみた]]></title><description><![CDATA[初音ミク「マジカルミライ 2024」プログラミング・コンテストに、moomindaniとべりんぐで一緒に参戦してみました。
開発したリリックアプリは大変嬉しいことに入選となりました。
リリックアプリとは楽曲の歌詞を表示するアプリでして、今回のマジカルミライ2024の受賞曲が課題曲になってます。
現在はミクナビアプリ（要会員登録）経由で一般投票受付中です。8/20まで正午まで。
ぜひ遊んでみて、気に入ったら投票していただけたら大変嬉しいです。
エントリーNo.6: Rhyme Traveler - ライムトラベラー
https://magicalmirai.com/2024/procon/...]]></description><link>https://zenn.dev/moomindani/articles/d173059bac2751</link><guid isPermaLink="true">https://zenn.dev/moomindani/articles/d173059bac2751</guid><pubDate>Wed, 14 Aug 2024 03:41:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qSn9C5bh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2582%25B8%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%259F%25E3%2583%25A9%25E3%2582%25A42024%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E5%258F%2582%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:moomindani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2s0RktaMEMwcENoMWRfLWVkZndHTmc0US1ENl9aZ0J3SFdhNmZtZWFPalRETk5nND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>moomindani</dc:creator></item><item><title><![CDATA[ビフォーアフター画像スライダー - TwentyTwenty -]]></title><description><![CDATA[ビフォーアフター画像スライダーTwentyTwentyの設定方法

 デモ
デモページ


 HTML

 JavaScriptとcssの設置

index.html
&lt;script src="https://code.jquery.com/jquery-3.7.1.min.js"&gt;&lt;/script&gt;
&lt;script src="js/jquery.event.move.js"&gt;&lt;/script&gt;
&lt;script src="js/jquery.twentytwenty.js"&gt;&lt;/script&gt;
&lt;link re...]]></description><link>https://zenn.dev/iwashitech/articles/5b9a5fe6707cbd</link><guid isPermaLink="true">https://zenn.dev/iwashitech/articles/5b9a5fe6707cbd</guid><pubDate>Wed, 14 Aug 2024 02:37:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UZb9fgbu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2593%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%2595%25E3%2582%25BF%25E3%2583%25BC%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%2520-%2520TwentyTwenty%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iwashitech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyYmY1MDFjMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iwashitech</dc:creator></item><item><title><![CDATA[ビフォーアフター画像スライダー - Image Compare Viewer -]]></title><description><![CDATA[ビフォーアフター画像スライダーImage Compare Viewerの設定方法

 デモ
デモページ


 HTML

 JavaScriptとcssの設置

index.html
&lt;script src="https://unpkg.com/image-compare-viewer/dist/image-compare-viewer.min.js"&gt;&lt;/script&gt;
&lt;link rel="stylesheet" href="https://unpkg.com/image-compare-viewer/dist/image-compare-viewer....]]></description><link>https://zenn.dev/iwashitech/articles/8ad4c9696c2fbb</link><guid isPermaLink="true">https://zenn.dev/iwashitech/articles/8ad4c9696c2fbb</guid><pubDate>Wed, 14 Aug 2024 02:36:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UIIJ1-GH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2593%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%2595%25E3%2582%25BF%25E3%2583%25BC%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%2520-%2520Image%2520Compare%2520Viewer%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iwashitech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyYmY1MDFjMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iwashitech</dc:creator></item><item><title><![CDATA[ZodとHTMLだけでバリデーションをやってみた。react-hook-form未使用]]></title><description><![CDATA[こんにちは。最近暑さにめっぽうやられてるツーさんです 😁。こんな時はゾッとする話でも聞いて涼みたいですね。はい。とゆうわけで今回は Zod と HTML だでバリデーションをやってみたのでその内容を記事にしてみました。
※ 本記事では react-hook-form は使用していません。

 記事内に掲載しているソースコードは Github でも確認できます。
https://github.com/twosun-8-git/zod

 Zod とは 🤔
Zod のサイト見ると "TypeScript-first schema validation with static type inf...]]></description><link>https://zenn.dev/cocomina/articles/validation-zod-pure-html</link><guid isPermaLink="true">https://zenn.dev/cocomina/articles/validation-zod-pure-html</guid><pubDate>Tue, 13 Aug 2024 15:24:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---08utYPS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zod%25E3%2581%25A8HTML%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582react-hook-form%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Twosun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiODhhMjUyYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Twosun</dc:creator></item><item><title><![CDATA[TypeScript: 指定回数反復処理の読み手にやさしい記述]]></title><description><![CDATA[
 やりたいこと

for文よりもすっきりと書きたい
n回の処理結果ごとの要素からなる配列を作りたい場合に、宣言・for文で複数行使いたくない。
簡潔に書く方法はないか？
可読性は下げたくない
Array(n).map() で書かれた他人のコードを見てぱっと見でミスに気づけなかった。
本流と関係のない挙動を把握するために脳のリソースを割かずに済むようにしたい。


 結論

指定要素数の配列を作成する関数を定義して使用する。
「中にArray(n)を閉じて見えないようにする」「振る舞いについてJSDocに残す」ことで、可読性を下げない・読み手に無駄な負荷をかけないような優しい実装になる。...]]></description><link>https://zenn.dev/yusa_yamamo/articles/4f91401c139c7b</link><guid isPermaLink="true">https://zenn.dev/yusa_yamamo/articles/4f91401c139c7b</guid><pubDate>Tue, 13 Aug 2024 14:45:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wSJ2hD8W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%253A%2520%25E6%258C%2587%25E5%25AE%259A%25E5%259B%259E%25E6%2595%25B0%25E5%258F%258D%25E5%25BE%25A9%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E6%2589%258B%25E3%2581%25AB%25E3%2582%2584%25E3%2581%2595%25E3%2581%2597%25E3%2581%2584%25E8%25A8%2598%25E8%25BF%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuya%25EF%25BD%258Da%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YjA4YjI0YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuyaｍa</dc:creator></item><item><title><![CDATA[帰ってきたニコニコからコメントを取得する]]></title><description><![CDATA[祝🎉ニコニコ動画復活
バージョンが帰ってきたニコニコとなり、コメントの取得方法が変わりました。
変更点と実装など述べていきます
間違ってたらコメント下さい

 過去バージョンからの変更点
コメント取得にはThreadIDとThreadKeyが必要です。
過去バージョンではidにjs-initial-watch-dataを持つdivタグがHTML内にあり、それをパースして取得していました。
新バージョンではそのdivタグがなくなり、代わりにscriptタグに埋め込まれたJSONから値を取得できるようになりました
下の実装では正規表現で抜き取っています
あと、これは新バージョンからなのかわか...]]></description><link>https://zenn.dev/doma_itachi/articles/c448d4b6271d32</link><guid isPermaLink="true">https://zenn.dev/doma_itachi/articles/c448d4b6271d32</guid><pubDate>Tue, 13 Aug 2024 14:31:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6JJN9o_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B8%25B0%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E3%2583%258B%25E3%2582%25B3%25E3%2583%258B%25E3%2582%25B3%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259C%259F%25E9%2596%2593%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzMGNmMTgwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>土間いたち</dc:creator></item><item><title><![CDATA[【JavaScript】モーダルを作ってclassに入門する]]></title><description><![CDATA[
 この記事を書こうと思った理由

Web 制作で class を使う、という場合に、具体的で class が使いたくなるような解説や記事があまり無かったため。
class のチュートリアルや、記事を読んで、いざ書こうと思ったら何もできなかった過去の自分と同じような人の手助けのため。
class の継承を使ってみて、自分自身の理解度を上げるため。


 ゴール

とにかく class に触れてみる。
class 使ってみよう！と思うこと。
class のワケワカランから脱出する。!
class やオブジェクト指向についての深い理解や、this や constructor、インスタンス等の...]]></description><link>https://zenn.dev/taku1116/articles/77e80c90c4235e</link><guid isPermaLink="true">https://zenn.dev/taku1116/articles/77e80c90c4235e</guid><pubDate>Tue, 13 Aug 2024 10:38:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0rfhGSY7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6class%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnlhZ3d2T2FJRExLV2pYWVVkLXNpUDVzM1c0TXRHQ1pzbUVJZWpKTDVsMHMxYk9CUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taku</dc:creator></item><item><title><![CDATA[[Node.js]ファイルからデータを読み込み、行単位で処理する]]></title><description><![CDATA[
exec.ts
import { readFileSync } from "node:fs";

const animals = readFileSync("./animals.txt", "utf-8").split("\n");

animals.forEach((animal, i) =&gt; {
  console.log(`${i}: ${animal}`);
});


animals.txt
犬
猫
鶏

実行結果
1: 犬
2: 猫
3: 鶏
]]></description><link>https://zenn.dev/purratto/articles/0499c4be680961</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/0499c4be680961</guid><pubDate>Tue, 13 Aug 2024 08:15:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bClkQKU4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNode.js%255D%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2580%2581%25E8%25A1%258C%25E5%258D%2598%25E4%25BD%258D%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[[Node.js]CSVの1つのセルの中でJSONデータをインデントをつけてわかりやすく表示する]]></title><description><![CDATA[
exec.ts
import { createWriteStream } from "node:fs";

const dogs = [
  {
    breed: "セントバーナード",
    detail: {
      size: "大型",
      origin: "スイス",
      rescueAbility: 100,
    },
  },
  {
    breed: "プードル",
    detail: {
      size: "小型",
      origin: "フランス",
      hypoallergenic: true,
    ...]]></description><link>https://zenn.dev/purratto/articles/ecef8fd8f6bae1</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/ecef8fd8f6bae1</guid><pubDate>Tue, 13 Aug 2024 05:32:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E75NZgsC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNode.js%255DCSV%25E3%2581%25AE1%25E3%2581%25A4%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7JSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item></channel></rss>