<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 05 Jul 2024 02:38:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[さくっとDockerを使ってFirebase エミュレータのAuthenticationで認証を試す]]></title><description><![CDATA[
 はじめに
株式会社バニッシュ・スタンダードでエンジニアをしております、chanponと申します。最近、Firebaseを触る機会があり、Firebaseエミュレータの構築について学びましたので、その経験を共有したいと思います。この記事では、Dockerを使ってFirebaseエミュレータを立ち上げ、Authenticationを利用したユーザーの登録から認証までの流れを紹介します。
https://firebase.google.com/docs/emulator-suite?hl=ja

 事前準備
まず、FirebaseエミュレータをDockerで動かすために必要なファイルを準備...]]></description><link>https://zenn.dev/vs_blog/articles/1b5d62cf575fab</link><guid isPermaLink="true">https://zenn.dev/vs_blog/articles/1b5d62cf575fab</guid><pubDate>Fri, 05 Jul 2024 01:20:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mk4OoJcK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2595%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A8Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Firebase%2520%25E3%2582%25A8%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AEAuthentication%25E3%2581%25A7%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:chanpon2015%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOTFhMjZiZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2590%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5YjNkOGUwMTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chanpon2015</dc:creator></item><item><title><![CDATA[ひとくちメモ：LXC コンテナの中で Docker を実行する]]></title><description><![CDATA[ひとくちメモなのですごく短いです。

前提：

Ubuntu
LXC / LXD をお使いの方

LXC コンテナはもちろんコンテナなので仮想化技術の上で動いている。Docker はもちろん仮想化技術である。なので、コンテナの上で Docker を動かすなら仮想化のネスティング的なものが必要になる。
ネスティングは LXC コンテナに対して実行する。厳密にはホストも対応が必要だが、現代のコンピューなら多分何もしなくても勝手に対応してくれているはず。具体的なコマンドは下記一つだけ。
lxc config set &lt;container&gt; security.nesting true...]]></description><link>https://zenn.dev/argi_berri/articles/fd902d45844476</link><guid isPermaLink="true">https://zenn.dev/argi_berri/articles/fd902d45844476</guid><pubDate>Thu, 04 Jul 2024 17:28:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pBYn_3L8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25B2%25E3%2581%25A8%25E3%2581%258F%25E3%2581%25A1%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%259ALXC%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7%2520Docker%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ARGIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYWQwM2NmMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ARGIA</dc:creator></item><item><title><![CDATA[【Python】dockerでpython-dotenvを実装する]]></title><description><![CDATA[
 はじめに
Pythonでpython-dotenvを用いて機密情報を管理する方法を以下にまとめている。

 動作環境

windows
python3
docker
vscode


 1..envファイルの作成

ターミナル（powershell）
New-Item .env


出力結果
$ New-Item .env
    ディレクトリ: C:\Desktop\test-python

Mode                 LastWriteTime         Length Name
----                 -------------       ...]]></description><link>https://zenn.dev/code_journey_ys/articles/ec43f4f9c91ede</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/ec43f4f9c91ede</guid><pubDate>Thu, 04 Jul 2024 13:53:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jgZw0JJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591docker%25E3%2581%25A7python-dotenv%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[CodeBuildでdocker buildを高速化できるポテンシャルを持つネタ 3選]]></title><description><![CDATA[
 概要
CodeBuildを使ってコンテナイメージをビルドしてECSやApp RunnerなどのコンテナサービスにデプロイをするCI/CDパイプラインを作る際、コンテナイメージのビルド時間を短くしたい！
CIは早いに越したことはない！ので、そのような期待は皆さんお持ちなのではないでしょうか？
そんなときにコンテナイメージをビルドするのにかかる時間(CodeBuildの実行時間)をなるべく短くする方法で効果を発揮しそうな3ネタを紹介します。
本記事では、以下の3ネタを紹介します。

CodeBuildのインスタンスサイズを適切なものを選ぶ
CodeBuildのローカルキャッシュを有効化す...]]></description><link>https://zenn.dev/tkg216/articles/5b3e4dea15b8ae</link><guid isPermaLink="true">https://zenn.dev/tkg216/articles/5b3e4dea15b8ae</guid><pubDate>Thu, 04 Jul 2024 12:57:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o93uBKL6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeBuild%25E3%2581%25A7docker%2520build%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%259D%25E3%2583%2586%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AB%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4%25E3%2583%258D%25E3%2582%25BF%25203%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkg216%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5OTg2N2QzZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkg216</dc:creator></item><item><title><![CDATA[【2024年版 M1Mac】安全なWEBアプリケーションの作り方セットアップ]]></title><description><![CDATA[
 はじめに
体系的に学ぶ 安全なWebアプリケーションの作り方 第2版 脆弱性が生まれる原理と対策の実践を購入したのですが、環境のセットアップに少し時間がかかってしまったので、こちらにまとめたいと思います。

 実行環境の作成

 準備してあるもの
以下のものは準備が完了している前提で進めます。

Firefoxのインストール
Dockerデスクトップ


 実習用仮想マシン(Docker版)のダウンロード・実行
こちらからDocker版の実習用仮想マシンをダウンロードします。
ページを開くためには書籍に記載されているIDとパスワードが必要です。
ダウンロードした後、zipファイルを解...]]></description><link>https://zenn.dev/kinoucyu_yuta/articles/b0b67c0ce2efd9</link><guid isPermaLink="true">https://zenn.dev/kinoucyu_yuta/articles/b0b67c0ce2efd9</guid><pubDate>Thu, 04 Jul 2024 12:30:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fEzHgtlC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E7%2589%2588%2520M1Mac%25E3%2580%2591%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AAWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noukin_technologies%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhN2UxMWEzOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noukin_technologies</dc:creator></item><item><title><![CDATA[How to install Docker to Ubuntu 22.04]]></title><description><![CDATA[
 1. Update System
sudo apt update

 2. Install Prerequisites
Install the necessary prerequisites for Docker.
sudo apt install apt-transport-https ca-certificates curl software-properties-common

 3. Add Docker’s Official GPG Key
Add Docker's official GPG key.
curl -fsSL https://download.docker.c...]]></description><link>https://zenn.dev/yuto_mo/articles/aad50bbee5628f</link><guid isPermaLink="true">https://zenn.dev/yuto_mo/articles/aad50bbee5628f</guid><pubDate>Thu, 04 Jul 2024 10:48:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LYLSKwsL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:How%2520to%2520install%2520Docker%2520to%2520Ubuntu%252022.04%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu</dc:creator></item><item><title><![CDATA[【Ubuntu:22.04】Dockerfile内でbashrcを読み込めない件]]></title><description><![CDATA[
 概要
Dockerfile内でsource ~/.bashrcを実行しているのに設定した環境変数が読み込まれない問題の解決方法を記載する。

 原因
.bashrc内の以下の記述が悪さをしていた。
[ -z "$PS1" ] &amp;&amp; return

 解決法
Dockerfile内に以下を記述する。
FROM ubuntu:22.04
RUN sed -i '/\[ -z "\$PS1" \] &amp;&amp; return/d' ~/.bashrc
!
本書では記述を削除してますが、要件によってはPS1に値を代入する等の対応が必要です。


 一言
Docker ...]]></description><link>https://zenn.dev/suraud/articles/solve-cannot-load-bashrc-within-dockerfile</link><guid isPermaLink="true">https://zenn.dev/suraud/articles/solve-cannot-load-bashrc-within-dockerfile</guid><pubDate>Thu, 04 Jul 2024 10:18:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hfgCiifK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ubuntu%253A22.04%25E3%2580%2591Dockerfile%25E5%2586%2585%25E3%2581%25A7bashrc%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2581%25E3%2581%25AA%25E3%2581%2584%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%252FUD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0NzY3NjU1ODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>/UD</dc:creator></item><item><title><![CDATA[PCの環境汚染を食い止めろ ~Docker編~]]></title><description><![CDATA[
 概要
多くの方が、記事に書いてある設定をとりあえず試してみた経験があるのではないでしょうか。
しかし、期待値通りに動作しなかった場合、試した設定をきれいに消している方は多くはないと思います。
本書では、Dockerを使用してUbuntuコンテナを作成し、コンテナ内でテストすることでPCの汚染を防ぐ方法について詳しく解説します。コンテナを利用することで、OS本体に影響を与えることなく、様々なコマンドや設定を安全に試すことができます。

 環境
OS：Ubuntu 22.04.3（筆者はWSL内）

 構成
Docker Compose + Dockerfile でコンテナを管理しましょ...]]></description><link>https://zenn.dev/suraud/articles/protect-your-environment</link><guid isPermaLink="true">https://zenn.dev/suraud/articles/protect-your-environment</guid><pubDate>Thu, 04 Jul 2024 10:18:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LAXCvmSr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PC%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25B1%259A%25E6%259F%2593%25E3%2582%2592%25E9%25A3%259F%25E3%2581%2584%25E6%25AD%25A2%25E3%2582%2581%25E3%2582%258D%2520%7EDocker%25E7%25B7%25A8%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%252FUD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0NzY3NjU1ODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>/UD</dc:creator></item><item><title><![CDATA[Rails - Docker上の Rspec を Makefile から実行する書き方の例]]></title><description><![CDATA[
 概要

docker-compose 構成が前提
Makeの引き数として RSPEC_TARGET を利用してファイル名を指定する
localではRailsのディレクトリがMakefileのあるディレクトリより下層にある場合 ( 例: some_rails_directory  ) を想定している


 Makefile
rspec:
	docker-compose run --rm -e RAILS_ENV=test &lt;docker_service_name&gt; rspec ${RSPEC_TARGET:some_rails_directory/%=%}
実行例
make...]]></description><link>https://zenn.dev/yumainaura/articles/qiita-2024-05-24t07_24_36-09_00</link><guid isPermaLink="true">https://zenn.dev/yumainaura/articles/qiita-2024-05-24t07_24_36-09_00</guid><pubDate>Thu, 04 Jul 2024 10:07:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rpQS8Ye7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rails%2520-%2520Docker%25E4%25B8%258A%25E3%2581%25AE%2520Rspec%2520%25E3%2582%2592%2520Makefile%2520%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25AE%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>稲浦悠馬 (いなうらゆうま)</dc:creator></item><item><title><![CDATA[Docker + Traefikで運用するDrupalのリバースプロキシ設定]]></title><description><![CDATA[
 概要
以下の記事で紹介したDocker + Traefikを用いて、HTTPS化したDrupalを運用していました。
https://zenn.dev/nakamura196/articles/c607c7834aad0d
この時、Drupalのデフォルト設定の場合、以下のように、httpのURLが設定されていました。

この問題として、以下の記事になるように、例えばGoogleアカウントでログインするようにした際、リダイレクトURLがhttpから始まるURLとなり、Google Cloud コンソールにはhttpsから始まるURLを入力する必要があり、この齟齬によって、認証ができな...]]></description><link>https://zenn.dev/nakamura196/articles/4abc5e67efde49</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/4abc5e67efde49</guid><pubDate>Thu, 04 Jul 2024 10:06:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lPyW2tQn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520Traefik%25E3%2581%25A7%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258BDrupal%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[TraefikでHTTPS化した複数コンテナを運用する]]></title><description><![CDATA[
 概要
TraefikでHTTPS化した複数コンテナを運用する方法に関する備忘録です。
https://github.com/traefik/traefik

 背景
これまで、jwilder/nginx-proxyとjrcs/letsencrypt-nginx-proxy-companionを使い、以下のような構成で運用していました。

 プロキシ

docker-compose.yml
version: '3'
# proxy
services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: n...]]></description><link>https://zenn.dev/nakamura196/articles/c607c7834aad0d</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/c607c7834aad0d</guid><pubDate>Wed, 03 Jul 2024 21:55:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7o4OUX8z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Traefik%25E3%2581%25A7HTTPS%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E8%25A4%2587%25E6%2595%25B0%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[【Python】モジュールとパッケージとライブラリの違いとfromとimportについて]]></title><description><![CDATA[
 はじめに
今回は、Pythonのファイル上部に記載されているfromとimportに加え、それらを理解するために必要な周辺知識についてまとめていく。

Pythonのファイル上部に記載されているFromとimport

 fromキーワードとimportキーワード
from &lt;PACKAGE_NAME&gt; import &lt;MODULE_NAME&gt;
!
fromキーワード
モジュールまでのパッケージ階層を指定。階層はドット.で区切る。
importキーワード
モジュール内の関数やクラスを指定。インポート文を使うことで、別のモジュールやパッケージの中に定義された関数...]]></description><link>https://zenn.dev/code_journey_ys/articles/9200058ccbc01d</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/9200058ccbc01d</guid><pubDate>Wed, 03 Jul 2024 13:19:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F4pbkoWo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8from%25E3%2581%25A8import%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Linux/Docker Command CheatSheet]]></title><description><![CDATA[A collection of commands used on Linux and Docker.
Updates as sometimes.

 Linux

 Create file
touch filename.txt

 Create directory
mkdir directory_name

 current directory path
pwd

 Moving files
mv file1 directory

 Copy files
cp dir/file1.txt dir2/file2.txt

 Delete directory/file
rm -r direc...]]></description><link>https://zenn.dev/yuto_mo/articles/bfe2b9cadbc68e</link><guid isPermaLink="true">https://zenn.dev/yuto_mo/articles/bfe2b9cadbc68e</guid><pubDate>Wed, 03 Jul 2024 12:34:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZzIB6cun--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Linux%252FDocker%2520Command%2520CheatSheet%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu</dc:creator></item><item><title><![CDATA[Docker掃除]]></title><description><![CDATA[Docker と互換環境の Podman を共存させていたりしたらアンインストールしたDockerが再インストールしても動かなくなってしまった。Windowsで散らばっている設定ファイルを消していく旅
基本的に「ユーザー\アカウント」の中にあるデータを掃除しないとどうしようもなさそうなので消してみることにする。
まずは 「.docker」というのがあるので消し。
次に「AppData」に入っていく。隠しフォルダになっているかも。
「AppData\Local」にDocker があるのでまず消し。
「AppData\LocalLow」には何もなかった。
「AppData\Roaming」に...]]></description><link>https://zenn.dev/okomeki/articles/b51fe87eaa11d1</link><guid isPermaLink="true">https://zenn.dev/okomeki/articles/b51fe87eaa11d1</guid><pubDate>Wed, 03 Jul 2024 10:34:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oja-G2Fx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Docker%25E6%258E%2583%25E9%2599%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2593%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WktJZGhJVmNtMENxVW5NMWlRa0pKS2tOQU9WcGlPbmM0b3JrWXRzSTA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おこめ</dc:creator></item><item><title><![CDATA[WSL2で急にdockerが起動しなくなった]]></title><description><![CDATA[
 開発環境

windows 10 Enterprice
docker
ubuntu


 WSL2で急にdockerが起動しなくなった
ある日windowsをアップデートした際にdokcerk起動しようとしたが、起動しなくなった
$ sudo service docker start
Job for docker.service failed because the control process exited with error code.
See "systemctl status docker.service" and "journalctl -xeu docker.serv...]]></description><link>https://zenn.dev/shirokumakun/articles/3ba7c1e172dc39</link><guid isPermaLink="true">https://zenn.dev/shirokumakun/articles/3ba7c1e172dc39</guid><pubDate>Wed, 03 Jul 2024 08:39:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1QIkKc6m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25A7%25E6%2580%25A5%25E3%2581%25ABdocker%25E3%2581%258C%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjNjFhZmQ5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくまくん</dc:creator></item><item><title><![CDATA[Dockerで通信の流れを学んだ]]></title><description><![CDATA[Dockerの仕組みを学ぼうと思い、以下のサイトを参考にしてシンプルなプロジェクトにとりくんだ
https://zenn.dev/k41531/articles/054a0e30d49f19

 学んだこと

Dockerの構成
３つの間での通信方法

WebページとWebサーバー間
WebサーバーとバックエンドAPI間
バックエンドサーバーとAPI間




 今回のスタック

Docker - バックエンドとフロントエンドのネットワークを共有する
Express.js - Webサーバーとして、バックエンドAPIとの通信を可能にする
Flask - Flask APIを使用して、AP...]]></description><link>https://zenn.dev/akinko0915/articles/2f09a9b37ee149</link><guid isPermaLink="true">https://zenn.dev/akinko0915/articles/2f09a9b37ee149</guid><pubDate>Wed, 03 Jul 2024 02:26:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mmxWZjwS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%25E3%2582%2592%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akinko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSy13cHdwSE5jYThHWWJKMHBCb0NRU3A3WFlZd3Q0Wjc5SFY3clVhWENIUmFpSTlXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akinko</dc:creator></item><item><title><![CDATA[Dev Containers メモ]]></title><description><![CDATA[Visual Studio Code の Dev Containers に関するメモです。
(記事にするまでもない細かいのを追記していく)

 パフォーマンス改善

Dev Containers のパフォーマンス改善


 プロキシとの闘い

プロキシが必要な環境で、WSL2にDockerをインストールしてDevContainerを利用する


 デフォルトで拡張機能を入れる
常にDevContainerに入れる拡張を設定できる。
これはプロジェクトには必須ではないが、個人として必要な拡張機能(たとえばキーバインド)を入れるときに役に立つ。
remote.containers.defau...]]></description><link>https://zenn.dev/onozaty/articles/devcontainer-memo</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/devcontainer-memo</guid><pubDate>Tue, 02 Jul 2024 14:18:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0-epWEE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Dev%2520Containers%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[dockerのphp.iniを編集する方法]]></title><description><![CDATA[
 結論


dockerコンテナに入る。(入り方はコンテナの構成などによると思うので各自で調べてください。)


php -i | grep php.ini
下記のようなパスが表示される。


Configuration File (php.ini) Path =&gt; /usr/local/etc/php/5.6
Loaded Configuration File =&gt; /usr/local/etc/php/5.6/php.ini  //こっち//

vi + 先ほど取得したパス

vi /usr/local/etc/php/5.6/php.ini 

必要な箇所を編集し保存...]]></description><link>https://zenn.dev/babyen/articles/a8708c960a6c78</link><guid isPermaLink="true">https://zenn.dev/babyen/articles/a8708c960a6c78</guid><pubDate>Tue, 02 Jul 2024 08:49:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lXSZvxfB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%25E3%2581%25AEphp.ini%25E3%2582%2592%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LaughingFlame219%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMDVjOTRmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>LaughingFlame219</dc:creator></item><item><title><![CDATA[Docker版のOmeka SでCORS対応を行う]]></title><description><![CDATA[
 概要
Docker版のOmeka Sで、以下の記事のようにCORS対応を実施した際、サーバエラーが発生しました。その備忘録を記載します。
https://zenn.dev/nakamura196/articles/b8971f470f983f

 Dockerfile
以下のようなDockerfileを対象とします。
FROM php:apache

LABEL maintainer="Satoru Nakamura &lt;na.kamura.1263@gmail.com&gt;"

RUN a2enmod rewrite

ENV DEBIAN_FRONTEND noninter...]]></description><link>https://zenn.dev/nakamura196/articles/0c24dfc194f37e</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/0c24dfc194f37e</guid><pubDate>Tue, 02 Jul 2024 08:27:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g9tW0Hz8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2589%2588%25E3%2581%25AEOmeka%2520S%25E3%2581%25A7CORS%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[Dockerで発生する"error response from daemon network [ネットワーク名]"の解決方法]]></title><description><![CDATA[
 エラーの概要

 エラーメッセージの内容
「error response from daemon: network」とは、Dockerデーモンがネットワークに関する問題に直面した際に表示されるエラーメッセージです。
具体的には、Docker Composeを使ってプロジェクトを立ち上げる際に発生することが多いエラーです。

 エラーの発生状況
このエラーは、以下のような状況で発生することがあります。

新しいコンテナを立ち上げる際に、既存のネットワークと名前が重複している場合

ネットワーク設定に誤りがある場合

Dockerのネットワークリソースが競合している場合


 原因の解説...]]></description><link>https://zenn.dev/nomikazu_x/articles/docker-error-response-from-daemon-network</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/docker-error-response-from-daemon-network</guid><pubDate>Tue, 02 Jul 2024 03:22:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--utdhm6Ra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%2522error%2520response%2520from%2520daemon%2520network%2520%255B%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2590%258D%255D%2522...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item></channel></rss>