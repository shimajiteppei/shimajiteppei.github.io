<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 20 May 2024 00:59:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ミニPCでマルチサーバー構築 [Immichコンテナ]]]></title><description><![CDATA[
ミニPCでマルチサーバー構築シリーズのImmichコンテナ構築の記録メモです。[Immich v1.103.1]

 シリーズ

N100搭載ミニPCでマルチサーバーの構想と構築準備
ミニPCでマルチサーバー構築 [OS等インストール]
ミニPCでマルチサーバー構築 [Sambaコンテナ]
ミニPCでマルチサーバー構築 [PostgreSQLコンテナ]
ミニPCでマルチサーバー構築 [Nginxコンテナ]
ミニPCでマルチサーバー構築 [Immichコンテナ]  この記事

ミニPCでマルチサーバー構築 [VaultwardenコンテナとTailscale]
ミニPCでマルチサーバー構...]]></description><link>https://zenn.dev/scirexs/articles/75e7669cd0d2b6</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/75e7669cd0d2b6</guid><pubDate>Sun, 19 May 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wMOEHZsm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%258BPC%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%2520%255BImmich%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[Dockerfile内で.bash_profileを反映させる]]></title><description><![CDATA[
 概要
dockerのimageをbuildするとき、rbenvやnvmなどをインストールしてrubyやnodeを入れようとしたけどsource ~/.bash_profileをやってもrbenvやnvmコマンドが見つからない時。

 結論
ひとつのRUNの中でやるとsourceが反映されます。
# rubyをインストール
RUN &lt;&lt;EOF
  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
  echo 'eval "$(~/.rbenv/bin/rbenv init - bash)"' &gt;&gt; ~/...]]></description><link>https://zenn.dev/gomo/articles/1e290b697b488a</link><guid isPermaLink="true">https://zenn.dev/gomo/articles/1e290b697b488a</guid><pubDate>Sun, 19 May 2024 05:35:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AqNTBAMI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dockerfile%25E5%2586%2585%25E3%2581%25A7.bash_profile%25E3%2582%2592%25E5%258F%258D%25E6%2598%25A0%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtRjJxMWpOMWJqN1lzb2VDWUYybmlwb21TNk1qcHEzMTdHN3VwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masamoto</dc:creator></item><item><title><![CDATA[ミニPCでマルチサーバー構築 [Nginxコンテナ]]]></title><description><![CDATA[
ミニPCでマルチサーバー構築シリーズのNginxコンテナ構築の記録メモです。

 シリーズ

N100搭載ミニPCでマルチサーバーの構想と構築準備
ミニPCでマルチサーバー構築 [OS等インストール]
ミニPCでマルチサーバー構築 [Sambaコンテナ]
ミニPCでマルチサーバー構築 [PostgreSQLコンテナ]
ミニPCでマルチサーバー構築 [Nginxコンテナ]  この記事

ミニPCでマルチサーバー構築 [Immichコンテナ]
ミニPCでマルチサーバー構築 [VaultwardenコンテナとTailscale]
ミニPCでマルチサーバー構築 [AdGuard Homeコンテ...]]></description><link>https://zenn.dev/scirexs/articles/f8fc482809a4b5</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/f8fc482809a4b5</guid><pubDate>Sat, 18 May 2024 21:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--12lwir6z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%258BPC%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%2520%255BNginx%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[Dockerで構築したMySQLデータベースのバックアップ・リストア]]></title><description><![CDATA[設定ファイルにバックアップの設定入れておく。

my.cnf
[mysqldump]
single-transaction
events
routines
triggers
skip-disable-keys

zipやgzより圧縮率、速度が優れているZStandardを入れておく。
# Linux
sudo apt install zstd
# Mac
brew install zstd
# データベースのコンテナ名を確認する
docker ps

# DBバックアップ
docker exec コンテナ名 mysqldump -u DBユーザ名 -pDBパスワード --all-data...]]></description><link>https://zenn.dev/takaha4k/articles/3460fe12bb4d5d</link><guid isPermaLink="true">https://zenn.dev/takaha4k/articles/3460fe12bb4d5d</guid><pubDate>Sat, 18 May 2024 11:30:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kAxrlp7E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259FMySQL%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25BB%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NTYwOTI4ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaha4k</dc:creator></item><item><title><![CDATA[【Kubernetes】<ハンズオン記録>Pod のスケジューリングをわざとぶっ壊して解像度を上げる試み Taints/Toleration]]></title><description><![CDATA[作って壊すKubernetes本を参考にハンズオンの記録
kind でマルチノード構成の k8s クラスターを作って、わざとスケジュールされないようにしてトラブルシューティングしてみるやつ
$ cat multinode-config.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker

$ kind create cluster -n kind-multinode --config multinode-config...]]></description><link>https://zenn.dev/ymz_note/articles/064dbdc7071419</link><guid isPermaLink="true">https://zenn.dev/ymz_note/articles/064dbdc7071419</guid><pubDate>Sat, 18 May 2024 10:27:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zPSFeTDc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Kubernetes%25E3%2580%2591%253C%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E8%25A8%2598%25E9%258C%25B2%253EPod%2520%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B1%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E3%2582%258F%25E3%2581%2596%25E3%2581%25A8%25E3%2581%25B6%25E3%2581%25A3%25E5%25A3%258A%25E3%2581%2597%25E3%2581%25A6%25E8%25A7%25A3%25E5%2583%258F%25E5%25BA%25A6%25E3%2582%2592%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2520Tain...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ymz_note%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTJsLTRaOVh4YjFqV1ZmMG1QYXpHZGd0d2t5MmFhLXJ0WEo1WkQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ymz_note</dc:creator></item><item><title><![CDATA[Dockerで構築したpostgreSQLデータベースのバックアップ・リストア]]></title><description><![CDATA[# PostgreSQLデータベースのコンテナ名を確認する
docker ps

# DBバックアップ
docker exec コンテナ名 pg_dumpall -c -U DBユーザ名 &gt; dump.sql

# DBリストア
cat dump.sql | docker exec -i コンテナ名 psql -U DBユーザ名 -d データベース名

# DBアクセス
docker exec -it コンテナ名 psql -U DBユーザ名 -d データベース名

# DBテーブル一覧表示
\dt

# テーブルの中身表示
select * from テーブル名

]]></description><link>https://zenn.dev/takaha4k/articles/a31f63fa2ea746</link><guid isPermaLink="true">https://zenn.dev/takaha4k/articles/a31f63fa2ea746</guid><pubDate>Sat, 18 May 2024 09:57:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GCDtOy5---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259FpostgreSQL%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25BB%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NTYwOTI4ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaha4k</dc:creator></item><item><title><![CDATA[【Docker／Kubernetes】minikube ハンズオン環境の構築資材]]></title><description><![CDATA[「15 Stepで習得 Dockerから入るKubernates」という本がありまして、ハンズオン環境構築の付録が付いているのですが、この本の刊行が古いためかどうかは知りませんが、全然うまくいかなかったので動くように修正した資材を上げておきます。
Vagrant と VirtualBox 端末に入っていれば動くでしょう。知らんけど。
あ、Ansible は勝手に入ります。インストールするもののバージョンを変えたい場合は、minikube.yml 内の各種パッケージのバージョンを変えてください。
git clone -b main https://github.com/ymz-note/p...]]></description><link>https://zenn.dev/ymz_note/articles/ab68aff264293c</link><guid isPermaLink="true">https://zenn.dev/ymz_note/articles/ab68aff264293c</guid><pubDate>Sat, 18 May 2024 08:24:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9B8_jO7v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25EF%25BC%258FKubernetes%25E3%2580%2591minikube%2520%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E8%25B3%2587%25E6%259D%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ymz_note%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTJsLTRaOVh4YjFqV1ZmMG1QYXpHZGd0d2t5MmFhLXJ0WEo1WkQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ymz_note</dc:creator></item><item><title><![CDATA[Docker以前に、コンテナってそもそも何]]></title><description><![CDATA[
 Dockerとは
Dockerとは、コンテナ技術を利用してアプリケーションを効率よく管理・実行するためのツールです。このコンテナ技術は仮想化技術の一種です。

 仮想化とは
仮想化とは、実際には存在しないものを、まるで実在しているかのように表現する技術のことです。例えば、クラウドコンピューティングでは、実際の物理サーバーの数に関係なく、あたかも複数のサーバーが存在しているかのように見せることができます。この技術を使うことで、サーバーのリソースを効率よく配分できます。例えば、物理サーバーが一台しかない場合でも、そのサーバーのメモリやCPUを無駄なく使用することが可能です。

 仮想化の...]]></description><link>https://zenn.dev/ayatakaa_chan/articles/b8f2c9d3edd4dd</link><guid isPermaLink="true">https://zenn.dev/ayatakaa_chan/articles/b8f2c9d3edd4dd</guid><pubDate>Sat, 18 May 2024 00:06:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T4xR-MY---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E4%25BB%25A5%25E5%2589%258D%25E3%2581%25AB%25E3%2580%2581%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259D%25E3%2582%2582%25E3%2581%259D%25E3%2582%2582%25E4%25BD%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjMjFjMTZiMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hagi</dc:creator></item><item><title><![CDATA[ミニPCでマルチサーバー構築 [PostgreSQLコンテナ]]]></title><description><![CDATA[
ミニPCでマルチサーバー構築シリーズのPostgreSQLコンテナ構築の記録メモです。

 シリーズ

N100搭載ミニPCでマルチサーバーの構想と構築準備
ミニPCでマルチサーバー構築 [OS等インストール]
ミニPCでマルチサーバー構築 [Sambaコンテナ]
ミニPCでマルチサーバー構築 [PostgreSQLコンテナ]  この記事

ミニPCでマルチサーバー構築 [Nginxコンテナ]
ミニPCでマルチサーバー構築 [Immichコンテナ]
ミニPCでマルチサーバー構築 [VaultwardenコンテナとTailscale]
ミニPCでマルチサーバー構築 [AdGuard Ho...]]></description><link>https://zenn.dev/scirexs/articles/cdd3214968e821</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/cdd3214968e821</guid><pubDate>Fri, 17 May 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oMmbZ1l1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%258BPC%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%2520%255BPostgreSQL%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[docker-comose の volumes の左辺は記法によってホストのディレクトリ / volume 名指定 が分かれるので注意]]></title><description><![CDATA[
 概要
非常にわかりづらい
docker-compose.yml で
volumeの左辺を ./ で始めるとホスト ( local ) のパス指定になるが
version: '3.8'
services:
  bar:
    volumes:
      - ./some_host_directory:/path/to/docker-somewhere
書かないとdockerのvolumeを指定することになる
version: '3.8'
services:
  foo:
    volumes:
      - some-volume-name:/path/to/docker-so...]]></description><link>https://zenn.dev/yumainaura/articles/qiita-2024-05-14t11_24_00-09_00</link><guid isPermaLink="true">https://zenn.dev/yumainaura/articles/qiita-2024-05-14t11_24_00-09_00</guid><pubDate>Fri, 17 May 2024 18:51:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--spZaVBay--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker-comose%2520%25E3%2581%25AE%2520volumes%2520%25E3%2581%25AE%25E5%25B7%25A6%25E8%25BE%25BA%25E3%2581%25AF%25E8%25A8%2598%25E6%25B3%2595%25E3%2581%25AB%25E3%2582%2588%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%2520%252F%2520volume%2520%25E5%2590%258D%25E6%258C%2587%25E5%25AE%259A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>稲浦悠馬 (いなうらゆうま)</dc:creator></item><item><title><![CDATA[【2024年版】WSL2+Ubuntu24.04+Docker＋GPUでつくる機械学習環境]]></title><description><![CDATA[
 はじめに
WSL2（Windows Subsystem for Linux 2）は、Microsoft Windows上でLinuxカーネルを直接実行できるようにする機能です。
この記事ではWSL2環境にDockerを導入しGPUを用いた機械学習環境を構築する手順を紹介します。
構築イメージは以下の図の通りです。NvidiaGPUを搭載したマシンにWSL2環境を構築します。Dockerを用いてコンテナを用意し、CUDAは各コンテナ内のCUDA Toolkitを用いて利用します。

今回開発するPCのスペックは以下の通りです。

Windows 11
Windows version: ...]]></description><link>https://zenn.dev/yumizz/articles/627d4e4821c636</link><guid isPermaLink="true">https://zenn.dev/yumizz/articles/627d4e4821c636</guid><pubDate>Fri, 17 May 2024 12:17:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cLcEQwSm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E7%2589%2588%25E3%2580%2591WSL2%252BUbuntu24.04%252BDocker%25EF%25BC%258BGPU%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yumizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliZDExZTUwOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yumizu</dc:creator></item><item><title><![CDATA[ローカルのAWS Lambda開発環境を整える(hot reload)]]></title><description><![CDATA[ローカルでLambdaの開発をやるために環境を整備したのでやったことを残しておきます。
コードはここ
https://github.com/imishinist/lambda-sample

 できること

ローカルに立ち上げたDockerでAWS Lambdaを動かす
手元からcurlでLambdaを呼び出す
ビルド時に自動でLambdaを更新する(hot-reload)


 動かし方
Goのコード(Lambdaのハンドラ)をビルドしたいときは以下の make を実行する。
make build-lambda
Lambdaを立ち上げたいときは docker-compose で起動する...]]></description><link>https://zenn.dev/imishinist/articles/8ff24429f0eb41</link><guid isPermaLink="true">https://zenn.dev/imishinist/articles/8ff24429f0eb41</guid><pubDate>Fri, 17 May 2024 11:11:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LMIFqiyK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEAWS%2520Lambda%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2528hot%2520reload%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:imishinist%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1d5X0N2YkdrSjFTOTR6a3lTT1dKaGxnU2FvRTVTRWQ3TUJ1bDlFYk1jT3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>imishinist</dc:creator></item><item><title><![CDATA[【Docker】entry-point.sh の役割と使用例]]></title><description><![CDATA[
 はじめに
こんにちは、Takeです。都内の自社開発企業でエンジニアとして働いています。
この記事では主に以下について紹介いたします。


entry-point.shの役割

entry-point.shとDockerfileのサンプルコード

entry-point.shが無くなったら困ること


 entry-point.shのざっくりとした役割
entry-point.shはDockerコンテナ内で使用されるスクリプトであり、コンテナ起動時に実行される初期コマンドやスクリプトを指定するものです。
ENTRYPOINT命令をDockerfileに記述することで、このスクリプトはコ...]]></description><link>https://zenn.dev/take_tech/articles/a06e8cf9f35884</link><guid isPermaLink="true">https://zenn.dev/take_tech/articles/a06e8cf9f35884</guid><pubDate>Fri, 17 May 2024 10:01:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AuUGRH8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591entry-point.sh%2520%25E3%2581%25AE%25E5%25BD%25B9%25E5%2589%25B2%25E3%2581%25A8%25E4%25BD%25BF%25E7%2594%25A8%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Take%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNThiNDQ2YTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Take</dc:creator></item><item><title><![CDATA[Amazon ECR イメージスキャン結果通知 ベーシックスキャンと拡張スキャンで異なるよ]]></title><description><![CDATA[Amazon ECRのスキャン結果をChatbot経由でSlackに通知する
などでベーシックスキャンの場合は紹介されています
拡張スキャンの場合、Amazon EventBridgeで定義するイベントパターンを変える必要があります

 ベーシックスキャン

ベーシックスキャン
サンプルイベント


サンプルイベント
{
    "version": "0",
    "id": "85fc3613-e913-7fc4-a80c-a3753e4aa9ae",
    "detail-type": "ECR Image Scan",
    "source": "aws.ecr",
   ...]]></description><link>https://zenn.dev/tomiyan/articles/36b51bca1f3226</link><guid isPermaLink="true">https://zenn.dev/tomiyan/articles/36b51bca1f3226</guid><pubDate>Fri, 17 May 2024 09:30:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qYfAT2D6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520ECR%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E7%25B5%2590%25E6%259E%259C%25E9%2580%259A%25E7%259F%25A5%2520%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E3%2581%25A8%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E3%2581%25A7%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomiyan%2520%25E5%2586%25A8%25E7%2594%25B0%2520%25E6%2598%258C%25E9%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMzM5OTVkN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomiyan 冨田 昌邦</dc:creator></item><item><title><![CDATA[DevContainer接続エラー（Error reading shell environment.）]]></title><description><![CDATA[
 はじめに
最近、VSCodeで開発環境としてDevContainerを使用していた際に、接続エラーに直面しました。そのエラー内容と解決方法について説明します。

 エラー内容
接続エラーが発生した際のログは以下の通りです。
[5591 ms] [05:34:26] Extension host agent started.
[5950 ms] [05:34:26] No uninstalled extensions found.
[8190 ms] Error reading shell environment.
[8190 ms] Command failed: /sbin/nol...]]></description><link>https://zenn.dev/yicr/articles/7347a76d583542</link><guid isPermaLink="true">https://zenn.dev/yicr/articles/7347a76d583542</guid><pubDate>Fri, 17 May 2024 08:19:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v5lfwURg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DevContainer%25E6%258E%25A5%25E7%25B6%259A%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%2588Error%2520reading%2520shell%2520environment.%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yicr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZUY0Sjg5VVRKclNZLWN1TDNEOU51MjFtNlZscFVWU3ExS2YwcXhuYUNpZDJvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yicr</dc:creator></item><item><title><![CDATA[AWSを使用したアプリケーションのローカルテスト]]></title><description><![CDATA[
 AWSを使用したアプリケーションのテスト方法
AWSを使用しているアプリケーションの開発時に問題となるのは、どのようにテストを実施するかという問題が発生します。
この時の選択肢は次の通りとなります。

単体テスト時にAWSのモックを作成してテストを行う
AWS上にテスト用の環境を用意してテスト時に接続してテストを行う
LocalStackを使用してローカルにAWSサービスのエミュレーターを動かしてテストする

単体テスト時にAWSのモックを作成してテストを行う

単体テスト時にモックアップする方法はテストに都合のいいデータを返せるため容易にテストが行えます。
モックの作成に手間がかか...]]></description><link>https://zenn.dev/carenet/articles/eeafa0f2424a8a</link><guid isPermaLink="true">https://zenn.dev/carenet/articles/eeafa0f2424a8a</guid><pubDate>Fri, 17 May 2024 07:58:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fki_exQC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kaz%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJGOGFDT3NiNW5JTGRDSkVSUC1tNTJZZF9qNzRqUWJTemlGR0s9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kaz</dc:creator></item><item><title><![CDATA[ミニPCでマルチサーバー構築 [Sambaコンテナ]]]></title><description><![CDATA[
ミニPCでマルチサーバー構築シリーズのSambaコンテナ構築の記録メモです。以前構築した際も色々大変だった記憶がありますが、今回も大変でした。

 シリーズ

N100搭載ミニPCでマルチサーバーの構想と構築準備
ミニPCでマルチサーバー構築 [OS等インストール]
ミニPCでマルチサーバー構築 [Sambaコンテナ]  この記事

ミニPCでマルチサーバー構築 [PostgreSQLコンテナ]
ミニPCでマルチサーバー構築 [Nginxコンテナ]
ミニPCでマルチサーバー構築 [Immichコンテナ]
ミニPCでマルチサーバー構築 [VaultwardenコンテナとTailscale...]]></description><link>https://zenn.dev/scirexs/articles/8d636244d27ed2</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/8d636244d27ed2</guid><pubDate>Thu, 16 May 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0t4gsoaY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%258BPC%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%2520%255BSamba%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[Java版 Minecraft Server を Docker で構築する（Vanilla）]]></title><description><![CDATA[コンテナ型仮想環境で、Java版マインクラフトの公式サーバー Vanilla を構築します。なお、使用するコンテナイメージは Docker 社が運営する公開レジストリの Docker Hub から取得します。
!
用語：Vanilla【バニラ】
Java版マインクラフトにおける、MODやデータパックの導入およびテクスチャ変更等の手を加えていない状態のこと。呼称についてはフレーバーやトッピングのないバニラアイスクリームに由来する。


 🛠️ 事前準備
デバイスやソフトウェアは以下を用いる。

💻 サーバ機（Ubuntu Server、Docker）
🌐 Docker Hub


💿 it...]]></description><link>https://zenn.dev/mesgory/articles/e3dc962bd38dfd</link><guid isPermaLink="true">https://zenn.dev/mesgory/articles/e3dc962bd38dfd</guid><pubDate>Wed, 15 May 2024 18:01:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--trZUHk_L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E7%2589%2588%2520Minecraft%2520Server%2520%25E3%2582%2592%2520Docker%2520%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Vanilla%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E1%25B4%258D%25E1%25B4%2587s%25C9%25A2%25E1%25B4%258F%25CA%2580%25CA%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4MGQyYmQ0MjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ᴍᴇsɢᴏʀʏ</dc:creator></item><item><title><![CDATA[Devcontainerでsystemdが動くコンテナを起動する]]></title><description><![CDATA[VS CodeのDevcontainerでsystemdが動くコンテナを起動する方法を記します。
今回作成した環境(CentOS 7, Ubuntu 22.04, Red Hat Universal Base Image 9)は下記リポジトリで公開しています。


 実施すること
Dockerfile側とdevcontainer.json側のそれぞれで設定が必要です。

 Dockerfile側
以下のようにENTRYPOINTを指定します。
/sbin/initを指定することでsystemdが起動します。
devcontainer.json側で"runArgs": ["--entryp...]]></description><link>https://zenn.dev/yutotnh/articles/9e8a4ce455ac44</link><guid isPermaLink="true">https://zenn.dev/yutotnh/articles/9e8a4ce455ac44</guid><pubDate>Wed, 15 May 2024 16:17:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--li2EJI87--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Devcontainer%25E3%2581%25A7systemd%25E3%2581%258C%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutotnh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCMGg4Y3Vrb29zUnFuekVBZ0l2cFFxb0p0X3lIa1Z3QVBUYU5TPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yutotnh</dc:creator></item><item><title><![CDATA[DockerでFastAPI環境構築(HelloWorldまで)]]></title><description><![CDATA[
 FastAPI環境構築

リンク
チュートリアル - ユーザーガイド - FastAPI

 使用技術

 環境

Docker
Python 3.12.3(執筆時最新)
nginx(webサーバー)


 DB

MySQL 8系
SQLModel(ORマッパー)
alembic(マイグレーション管理)


 ライブラリ管理

poetry

構成はシンプルでnginxをwebサーバーとして配置して、Uvicormをアプリケーションサーバーにします。

 ディレクトリ作成
最低限のディレクトリを作成していきます。
project_root
├── _docker
│   ├── n...]]></description><link>https://zenn.dev/momonga_g/articles/f131ea192b1184</link><guid isPermaLink="true">https://zenn.dev/momonga_g/articles/f131ea192b1184</guid><pubDate>Wed, 15 May 2024 13:53:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I3m3GWGB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7FastAPI%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528HelloWorld%25E3%2581%25BE%25E3%2581%25A7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2582%25E3%2582%2593%25E3%2581%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWRkZTc0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ももんが</dc:creator></item></channel></rss>