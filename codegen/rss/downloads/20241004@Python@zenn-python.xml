<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 04 Oct 2024 09:00:24 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Google ColabからEdge TTSを利用して音声合成する方法]]></title><description><![CDATA[
 自分がこれまで利用してきた音声合成の方法
動画コンテンツの作成などで音声合成を利用することがあります。数年前まではAWSやGoogleのクラウドサービスを利用していました。
https://aws.amazon.com/jp/polly/
https://cloud.google.com/text-to-speech?hl=ja
少し前にはESPnetを使って、無料で音声合成できるのはいいなと思っていました。
https://github.com/espnet/espnet
ただ、ESPnetをGoogle Colabから利用しようとすると、モデルのロードなどでセットアップに時間がか...]]></description><link>https://zenn.dev/kaorumori/articles/a69b19bc5802db</link><guid isPermaLink="true">https://zenn.dev/kaorumori/articles/a69b19bc5802db</guid><pubDate>Fri, 04 Oct 2024 01:20:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JpN1lH4J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E3%2581%258B%25E3%2582%2589Edge%2520TTS%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E9%259F%25B3%25E5%25A3%25B0%25E5%2590%2588%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaorumori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjZjA1YmY3MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaorumori</dc:creator></item><item><title><![CDATA[LeetCode #94 Binary Tree Inorder Traversal]]></title><description><![CDATA[
 問題概要
入力値：root (num array)
出力値：num array
return the inorder traversal
問題のリンク

 入力例
root: [1,null,2,3]
answer: [1,3,2]

 解答例1
計算量：O(n)
DFS using recursion
Python
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.v...]]></description><link>https://zenn.dev/pirika/articles/abe4766bad43b1</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/abe4766bad43b1</guid><pubDate>Thu, 03 Oct 2024 23:59:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fCBu8eFB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520%252394%2520Binary%2520Tree%2520Inorder%2520Traversal%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[pythonを使ってcvatのデータを操作する]]></title><description><![CDATA[
 概要
pythonを使ってcvatのデータを操作する機会がありましたので、備忘録です。

 セットアップ
今回はDockerを使って起動します。
git clone https://github.com/cvat-ai/cvat --depth 1
cd cvat
docker compose up -d

 アカウントの作成
http://localhost:8080にアクセスして、アカウントを作成します。

 Pythonによる操作
まず、以下のライブラリをインストールします。
pip install cvat-sdk
アカウントの情報を.envに記載します。
host=http...]]></description><link>https://zenn.dev/nakamura196/articles/93a19fbbf0161c</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/93a19fbbf0161c</guid><pubDate>Thu, 03 Oct 2024 23:20:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JmfiOXtF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6cvat%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[【イベント参加レポート】PyCon JP 2024]]></title><description><![CDATA[2024/9/27, 28 に行われた PyCon JP 2024 の感想です。
２日目のみの参加です。

 Pythonで日本語処理 入門〜フリガナプログラムを作ろう〜
https://x.com/takanory/status/1839835716190192009

 感想

来月会社の勉強会で形態素解析について扱うので発表資料作成の参考になった

rubyタグの存在を初めて知った
これまでMecab + neologdを使っていたが、辞書を考慮するとSudachiの使用も検討してみたい


 参考

sudachi.rs


 Pythonの数学機能を学ぼう！その仕組みも学ぼう！...]]></description><link>https://zenn.dev/adverdest/articles/pycon_jp_2024_review</link><guid isPermaLink="true">https://zenn.dev/adverdest/articles/pycon_jp_2024_review</guid><pubDate>Thu, 03 Oct 2024 23:09:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fB5VwKxU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2580%2591PyCon%2520JP%25202024%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:philosophynote%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5NzI1YzFiNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>philosophynote</dc:creator></item><item><title><![CDATA[[Python]指定したWEBページからテキストを取得して音読してもらう[pyttsx3]]]></title><description><![CDATA[pyttsx3 を使えばPythonでも簡単に、しかもオフラインの環境でもテキストの音読できるスクリプトができました。しかし読み上げ対象となるテキストを毎回どこからかコピペしてきて指定するのは、正直言って面倒くさいですよね。なので、WEBページを指定して、そこから本文を自動的に抽出し、音読してもらうように改良しました。
pyttsx3を使った音声読み上げに関する基本の記事はこちらです。
https://zenn.dev/zenn24yykiitos/articles/c3ad2101993805

 手順の概要

ウェブスクレイピングで記事取得
取得した記事の読み上げ

読み上げ対象とな...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/037a9dbb3ff54f</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/037a9dbb3ff54f</guid><pubDate>Thu, 03 Oct 2024 13:44:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fWtJu1M_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259FWEB%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E9%259F%25B3%25E8%25AA%25AD%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%255Bpyttsx3%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[Pythonでも音声読み上げしてもらいたい]]></title><description><![CDATA[
 動機
家事をしている最中、YouTubeをラジオ感覚で聞いているのですが、動画コンテンツはやはりビジュアルがメインなので、音声だけだと得られる情報が限られてしまいます。物足りないですし、製作者にも失礼だなと常々思っておりました。テキストベースの媒体であればその問題が解消されます。特に、個人的に興味のあるジャンルのニュース記事やブログ記事ならば、情報収集もでき、また再生時間もさほど長くありません。
優れた読み上げツールは世に存在しますし、読み上げ機能のあるブラウザや、拡張機能で読み上げ機能を付与することもできますが、暇だしPythonでやってみよう… という試みです。今回は pytts...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/c3ad2101993805</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/c3ad2101993805</guid><pubDate>Thu, 03 Oct 2024 13:09:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--THCaGBm3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%2582%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%25AD%25E3%2581%25BF%25E4%25B8%258A%25E3%2581%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[LeetCode #409 Longest Palindrome]]></title><description><![CDATA[
 問題概要
入力値：s
出力値：num
return the length of the longest palindrome that cane be build with those letters.
問題のリンク

 入力例
nums: "aabbc"
answer: 5 ("abcba")

 解答例1
計算量：O(n)
Using dict that contains count of each char
if all counts are even numbers→return sum of the numbers
if even count exists then the...]]></description><link>https://zenn.dev/pirika/articles/22ad2355e7629e</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/22ad2355e7629e</guid><pubDate>Thu, 03 Oct 2024 12:59:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JZqPaIVl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:LeetCode%2520%2523409%2520Longest%2520Palindrome%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[Playwrightで可能なWEBブラウザ操作]]></title><description><![CDATA[
 はじめに
Playwrightを使うと、基本的なブラウザ操作だけでなく、さまざまなユーザーインターフェース（UI）の操作が可能です。codegenを利用することで、以下のようなインターフェース操作が記録・スクリプト化可能です。
Playwrightの導入がまだの方はこちらのページをご参考ください。
https://zenn.dev/zenn24yykiitos/articles/d1bdecda4f3f5c

 基本の Playwright のコード
以下は簡単な Playwrightのコードです。URLに指定したページに移動し、タイトルを取得し、プロンプトに表示するだけのプログラム...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/bf542a761ece55</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/bf542a761ece55</guid><pubDate>Thu, 03 Oct 2024 12:22:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nZiGnz0Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25A7%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAWEB%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[Playwrightのcodegenでブラウザ操作スクリプトを自動生成する]]></title><description><![CDATA[Playwrightには codegen というツールが実装されています。codegenを使うと、selenium IDEと同じく、ブラウザ操作を記録してテストスクリプトを自動生成できます。複雑な操作には向いていませんが、簡単なブラウザ操作の自動化をしたい人にとって、とても便利ツールです。

 概要
Playwrightのcodegenは、ブラウザでの操作を自動的に記録し、それに基づいてテストスクリプトや自動化スクリプトを自動生成するための強力なツールです。この機能を使うことで、複雑な操作を簡単にスクリプト化でき、テストやウェブスクレイピングの自動化を迅速に開始できます。
codegen...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/3d7f582ac119b5</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/3d7f582ac119b5</guid><pubDate>Thu, 03 Oct 2024 11:53:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b2377Ac7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25AEcodegen%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E6%2593%258D%25E4%25BD%259C%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[【Python】NumPyのスライスの方法]]></title><description><![CDATA[
 スライスとは？
スライスは、配列データなどから条件に一致する部分を抜き出す操作です。
Pythonのリストや、NumPyの配列に対して、**[開始:終了] **といった形でスライスを指定することができます。
それでは、コードで使い方を確認しましょう。

import numpy as np

# 一次元配列を用意
arr = np.array([0, 1, 2, 3, 4, 5])

# インデックス1から2までの要素を取得
sliced_arr = arr[1:3]
print(sliced_arr)

# 出力:  [1 2]

ちょっとややこしいのが「終了」。
「n番目のインデ...]]></description><link>https://zenn.dev/hovinci/articles/114b1874d9e9e6</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/114b1874d9e9e6</guid><pubDate>Thu, 03 Oct 2024 11:03:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WhGjMbwS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591NumPy%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYTE5NmI1NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[Kivy入門(1) 画像・文字・ボタンで構成された画面を作成する]]></title><description><![CDATA[
 はじめに
このシリーズは、Kivyでしっかりしたアプリケーションを作る前に、簡単なツールを作って、Kivyの設計感覚をつかむことを目的としています。今回は、文字表示、画像表示、ボタン表示をおこないます。
Kivyではアプリケーション・文字・画像・ボタンなどをウィジェット（Widget）と呼び、配置するウィジェットのモジュールをimportする必要があります。アプリを作成する際に、アプリケーションのウィジェットは必ず必要です。
今回は用いませんが、アプリケーション内に複数のスクリーンを作りたい時（たとえば「スタート画面」と「メイン画面」などを分けたい時）は、スクリーンウィジェットと、ス...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/441ce6b2fc7826</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/441ce6b2fc7826</guid><pubDate>Thu, 03 Oct 2024 09:36:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CGpwJQzF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kivy%25E5%2585%25A5%25E9%2596%2580%25281%2529%2520%25E7%2594%25BB%25E5%2583%258F%25E3%2583%25BB%25E6%2596%2587%25E5%25AD%2597%25E3%2583%25BB%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%25A7%25E6%25A7%258B%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[Seleniumと比較したPlaywrightの強味]]></title><description><![CDATA[PlaywrightとSeleniumはどちらもブラウザの自動化フレームワークであり、クロスブラウザ対応やUIテストの自動化、ブラウザ操作のスクリプト化など共通する機能や特徴があります。この記事はすでにSeleniumへの知識があり、Playwrightへの移行を検討している人に向けて、Seleniumと比較した時のPlaywrightの強みをまとめています。

 1. 複数のブラウザエンジンに対応
Playwrightは、1つのAPIで以下の複数のブラウザエンジンに対応しているのが大きな特徴です。

Chromium（Google Chrome、Microsoft Edge）
Fire...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/2c3bfa490ed042</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/2c3bfa490ed042</guid><pubDate>Thu, 03 Oct 2024 09:24:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6c94iH-y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Selenium%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%259FPlaywright%25E3%2581%25AE%25E5%25BC%25B7%25E5%2591%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[Linux* で AI 開発キットと OpenVINO™ を使用してリアルタイム人数カウントを行う方法]]></title><description><![CDATA[この記事は、Medium に公開されている「How To Perform Real-Time People Counting on Linux AI Dev Kit With OpenVINO™」の日本語参考訳です。原文は更新される可能性があります。原文と翻訳文の内容が異なる場合は原文を優先してください。
https://medium.com/openvino-toolkit/how-to-perform-real-time-people-counting-on-linux-ai-dev-kit-with-openvino-e9c3aa96d431
この記事の PDF 版は下記からご利用...]]></description><link>https://zenn.dev/intel_developer/articles/8c55483c292609</link><guid isPermaLink="true">https://zenn.dev/intel_developer/articles/8c55483c292609</guid><pubDate>Thu, 03 Oct 2024 09:13:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L9iNbVjN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%252A%2520%25E3%2581%25A7%2520AI%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2581%25A8%2520OpenVINO%2520%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E4%25BA%25BA%25E6%2595%25B0%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2599%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiZThlMTc0MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>インテルデベロッパーゾーン</dc:creator></item><item><title><![CDATA[Playwrightでブラウザバイナリをカスタムするには？]]></title><description><![CDATA[
 Playwrightの概要
Playwrightはブラウザの自動化ツールです。似たようなツールにSeleniumがあり、Webアプリケーションのテストやスクレイピングに使われます。どちらのツールも優れた機能を持っていますが、Playwrightは複数のブラウザエンジンに対応可能なことや、ネイティブなヘッドレスモード、ページのスクリーンショットやPDF生成が簡単なことなどが強みです。Playwrightの動作には、複数のブラウザバイナリが必要です。この記事でブラウザバイナリを指定して用いる方法を紹介します。
また、下記のリンク先ではPlaywrightの導入方法や、簡単なサンプルコード...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/9882ac6cf8af84</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/9882ac6cf8af84</guid><pubDate>Thu, 03 Oct 2024 09:13:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PDCuYqQT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[【Azure Open AI】トークン超の大容量PDFをLLMに高速で読み込ませたい]]></title><description><![CDATA[
 要約
エンベディングモデルを複数展開し、PDFをチャンクに分割して並列処理を行うことで、ベクトルDBインデックス作成の時間を大幅に短縮します。5回の実験結果から、モデル数を増やすと処理時間が短縮されるものの、並行度が高いほど一貫性が低下する傾向が見られました。

 課題の概要
コンテキストウィンドウを超過したドキュメントをLLMに読み込ませるベストプラクティスとしてベクトルDBを使用する方法がありますが、
Azure AI Searchを使用して有価証券報告書のような大容量PDFをインデックス作成する際、処理に数分間の時間がかかってしまいます。
これは、大量のデータを一度に処理するた...]]></description><link>https://zenn.dev/myksyut/articles/b11feb367cec6a</link><guid isPermaLink="true">https://zenn.dev/myksyut/articles/b11feb367cec6a</guid><pubDate>Thu, 03 Oct 2024 09:04:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f6TVby-W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Azure%2520Open%2520AI%25E3%2580%2591%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E8%25B6%2585%25E3%2581%25AE%25E5%25A4%25A7%25E5%25AE%25B9%25E9%2587%258FPDF%25E3%2582%2592LLM%25E3%2581%25AB%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25A7%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BE%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:myksyut%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p2cERRbnItaWdLbGRsZUJib2l6eWxjOW5vdFBzck5UdzhOSUxTd0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>myksyut</dc:creator></item><item><title><![CDATA[PythonでPlaywriteの環境構築]]></title><description><![CDATA[
 Playwrightとは？
Playwrightは、Webブラウザの自動化ツールです。もともとはNode.js用に開発されましたが、Python版も提供されており、ヘッドレスブラウザの操作やテスト自動化に利用できます。Playwrightは、Chromium、Firefox、WebKitといった複数のブラウザエンジンをサポートしており、クロスブラウザテストを効率的に実行できます。

 Playwrightの特徴

マルチブラウザ対応：Chrome、Firefox、Safariなどの異なるブラウザで一貫した動作を実現できます。
ヘッドレスモード：ブラウザを表示せずにバックグラウンドで操...]]></description><link>https://zenn.dev/zenn24yykiitos/articles/d1bdecda4f3f5c</link><guid isPermaLink="true">https://zenn.dev/zenn24yykiitos/articles/d1bdecda4f3f5c</guid><pubDate>Thu, 03 Oct 2024 08:26:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RXJgKFqA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Playwrite%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn_kiitos%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYTcwNzc1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn_kiitos</dc:creator></item><item><title><![CDATA[Python 3 エンジニア認定データ分析試験に合格しました]]></title><description><![CDATA[
 はじめに
AWS を触ってみたいと思い、サンプルプログラムでよく用いられている Python の知識を得ようということでPython3エンジニア認定試験 に引き続き、 Python3エンジニア認定データ分析試験 の合格を目指しました。🐍🐍
(Python の開発経験はないです。)

 試験概要
Pythonの基礎、数学の基礎に加えて、ライブラリによる分析実践などについての設問があり、Pythonを使ったデータ分析を問う試験です。


受験料
11,000円


試験時間
60分


問題数
40問


問題形式
CBT の選択式


合格基準
70% 以上


主催
一般社団法人Py...]]></description><link>https://zenn.dev/nasrisilva/articles/730ec2a1e4032e</link><guid isPermaLink="true">https://zenn.dev/nasrisilva/articles/730ec2a1e4032e</guid><pubDate>Thu, 03 Oct 2024 04:50:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S56eMpMM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AB%25E5%2590%2588%25E6%25A0%25BC%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NasriSilva%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c0MUZHSjZnaFhURl93V0pjMUkwQjFJUDA4bkRsa1dxbFlXS0x6ckE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NasriSilva</dc:creator></item><item><title><![CDATA[AI動画解析サービスを試してみる 2]]></title><description><![CDATA[前回のAmazon Rekognition Videoに引き続き、AI動画解析サービスを試してみるの2回目です。
今回は GoogleのVideo AI(Video Intelligence API)を使うまでの設定とPythonスクリプトを使用した解析を実行して結果を取得し、JSONで保存してみます。

 Video AI(Video Intelligence API)とは？
詳しくは公式Webサイトを見ていただくのが一番ですが、簡単に言えばローカルにあるファイルやGoogle Cloud Storageに保存してある画像や動画に対して顔検出、テキスト検出、ラベル検出などの解析が行える...]]></description><link>https://zenn.dev/ubiblog2/articles/4f5e448fcc895a</link><guid isPermaLink="true">https://zenn.dev/ubiblog2/articles/4f5e448fcc895a</guid><pubDate>Thu, 03 Oct 2024 01:46:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pOxcdcdB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E5%258B%2595%25E7%2594%25BB%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TechSavvy_24%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3YTVmZDAwZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TechSavvy_24</dc:creator></item><item><title><![CDATA[【欠陥あり】イジングモデルで作るQRコード【強引】]]></title><description><![CDATA[
 はじめに
1年ほど前にQRコードについてのポッドキャストを聴き、それ以降の人生ではたびたびQRコードについて考えることがありました。そして、学部時代に学び最近になってもう一度出てきたイジングモデルをぼーっと眺めていた時に、「イジングモデルを使ってQRコード作れるんじゃね？」と思ったので作ってみました。
物理とPython、そしてQRコードを浅く知っているZenn初投稿者なので、改善点があれば優しく教えてください🥳
https://www.youtube.com/watch?v=Zu3DUeKNHec

 結論
結果としてはうまく読み込めるQRコードを生成することができなかった。

 ...]]></description><link>https://zenn.dev/kodaira/articles/2bc2442a7281e0</link><guid isPermaLink="true">https://zenn.dev/kodaira/articles/2bc2442a7281e0</guid><pubDate>Wed, 02 Oct 2024 16:33:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vR5Wi48o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25AC%25A0%25E9%2599%25A5%25E3%2581%2582%25E3%2582%258A%25E3%2580%2591%25E3%2582%25A4%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BQR%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2590%25E5%25BC%25B7%25E5%25BC%2595%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kodaira%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnYyOUplQmVnUXFrWm1RZVFCZi1VQUZRM0xYSkZadFNwQVViYlpSOEpYY1hsT216az1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kodaira</dc:creator></item><item><title><![CDATA[Safetensors のヘッダーを読む]]></title><description><![CDATA[
 Safetensors とは
Safetensors は HuggingFace が開発している、主にテンソルを安全・高速に読み書きできるファイルフォーマットと、それを扱うためのライブラリです。
https://github.com/huggingface/safetensors
提供されている Python ライブラリでは、PyTorch や Tensorflow などとの互換性があるほか、pickle 形式のような任意のコードを実行する機能がなく比較的安全なため、最近の深層学習系のモデルはこの形式で配布されることが多くなりました。

 構造

Safetensorsのファイル構造...]]></description><link>https://zenn.dev/platina/articles/e65c73cb01a900</link><guid isPermaLink="true">https://zenn.dev/platina/articles/e65c73cb01a900</guid><pubDate>Wed, 02 Oct 2024 11:24:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CIGmC82I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Safetensors%2520%25E3%2581%25AE%25E3%2583%2598%25E3%2583%2583%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Plat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MWUzM2RiMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Plat</dc:creator></item></channel></rss>