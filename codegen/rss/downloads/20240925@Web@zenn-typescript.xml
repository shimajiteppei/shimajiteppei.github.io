<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 25 Sep 2024 02:47:32 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Valibot の v0.31.0 への Migration 対応をした。]]></title><description><![CDATA[まだまだ Zod を採用しているプロダクトが多い。

が、
Finswer では、Schema Validation ライブラリに Zod ではなく、Valibot を採用している。
https://github.com/fabian-hiller/valibot
!
本記事で、以下についての記載しません。

Valibot の説明
Valibot の採用理由



 Migration to 0.31.0
https://valibot.dev/guides/migrate-to-v0.31.0/

Migrating Valibot from an older version to ...]]></description><link>https://zenn.dev/yanskun/articles/valibot-migrate-to-031</link><guid isPermaLink="true">https://zenn.dev/yanskun/articles/valibot-migrate-to-031</guid><pubDate>Wed, 25 Sep 2024 01:18:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RiKClJ_z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Valibot%2520%25E3%2581%25AE%2520v0.31.0%2520%25E3%2581%25B8%25E3%2581%25AE%2520Migration%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yanskun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Y2I3NTU5ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yanskun</dc:creator></item><item><title><![CDATA[AIキメラとの会話トレーニングアプリ 『キメ友』をQiitaハッカソンで作った話]]></title><description><![CDATA[こんにちは、Webエンジニアのまさぴょんです！
今回は、Qiitaハッカソン2024の予選で、AIキメラとの会話トレーニングアプリ 『キメ友』を作ったので、ご紹介します🐱

!
実は私、第１回Qiitaハッカソンにも1人で参加していましたが、予選敗退でした・・・😭
前回のQiitaハッカソン(2024/2/10〜2/11)から、はや7ヶ月近く経過して新たにチームメンバーも加えてのリベンジ・マッチです！

前回作成した作品の紹介記事は、こちらです👀🌟
https://zenn.dev/aiq_dev/articles/89bc61e8bd7d34

 Qiitaハッカソン2024 予選会の...]]></description><link>https://zenn.dev/manase/articles/a97158b745b030</link><guid isPermaLink="true">https://zenn.dev/manase/articles/a97158b745b030</guid><pubDate>Tue, 24 Sep 2024 14:52:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TFzL5ba3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%25AD%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25A8%25E3%2581%25AE%25E4%25BC%259A%25E8%25A9%25B1%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2580%258E%25E3%2582%25AD%25E3%2583%25A1%25E5%258F%258B%25E3%2580%258F%25E3%2582%2592Qiita%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AB%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwMmM5YTlmMGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まさぴょん</dc:creator></item><item><title><![CDATA[個人的にReact Hook Formで気をつけていること]]></title><description><![CDATA[
 はじめに
React Hook Formの特徴や個人的に気をつけていることをまとめました💫

 React Hook Formの特徴

レンダリング回数を減らすことができる
バンドルサイズの軽減が可能


 レンダリングについて
通常のReactでは、stateで値を管理し、stateを更新（setState）するたびに再レンダリングが発生します。
一方、React Hook Formでは、値の管理にstateではなくrefを使用するため、再レンダリングを抑制できます。
この仕組みにより、フォーム操作時に不要な再レンダリングを減らすことが可能です。
詳細は公式ドキュメントにも記載され...]]></description><link>https://zenn.dev/kiman/articles/e9ded457ead731</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/e9ded457ead731</guid><pubDate>Tue, 24 Sep 2024 14:01:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m9E7gY8G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25ABReact%2520Hook%2520Form%25E3%2581%25A7%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[【React】state構造の原則をおさらいしてstateの使い方を反省する]]></title><description><![CDATA[
 概要
「このstateいる？」や「このstate更新しずら！」と感じる場面は多々あると思います。
いくつstateを使うのか、データ構造をどのようにするのかについて言語化が難しく、もっと考えてstateを使わなければといけないと感じたため、今一度、原点に立ち返りつつ、state構造の原則をおさらいして反省したいと思います。

 state構造の原則
state構造の原則については公式から5つの原則が設けられており、これらの原則の背景にはミスを入りこませずにstateを容易に更新できるようにすることが目的となっている。
最適とはいえないstate構造でも動くコードを作ることは可能ではあ...]]></description><link>https://zenn.dev/reds/articles/8e321a942e4934</link><guid isPermaLink="true">https://zenn.dev/reds/articles/8e321a942e4934</guid><pubDate>Tue, 24 Sep 2024 12:44:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AAPfYXLZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591state%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25E3%2582%2592%25E3%2581%258A%25E3%2581%2595%25E3%2582%2589%25E3%2581%2584%25E3%2581%2597%25E3%2581%25A6state%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2592%25E5%258F%258D%25E7%259C%2581%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%258A%25E3%2581%2598%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OWM4YzQwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーとおじさん</dc:creator></item><item><title><![CDATA[useSyncExternalStoreを使った音声状態管理]]></title><description><![CDATA[Reactアプリケーションで音声の再生状態を管理する際、どのような方法を使っていますか？useState や useEffect を用いて状態を管理することが多いかもしれません。しかし、これらの方法では状態が不安定になったり、管理が複雑になったりすることがあります。
この記事では、音声状態管理のいくつかのアプローチを紹介し、最終的にuseSyncExternalStore を使った最も信頼性の高い方法を提案します。

 useSyncExternalStore とは？
 useSyncExternalStore は、React 18で導入されたフックで、外部ストアの状態をReactコンポ...]]></description><link>https://zenn.dev/ryomaejii/articles/81ba8b58f7b95d</link><guid isPermaLink="true">https://zenn.dev/ryomaejii/articles/81ba8b58f7b95d</guid><pubDate>Tue, 24 Sep 2024 08:14:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OhINhhPT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useSyncExternalStore%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259F%25B3%25E5%25A3%25B0%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryomaejii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzZTkxNGFjMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryomaejii</dc:creator></item><item><title><![CDATA[LogTape 0.6.0のリリース：何が変わったのか？]]></title><description><![CDATA[JavaScript及びTypeScript用のゼロ依存構造化ロギングライブラリであるLogTapeがv0.6.0をリリースしました。何が変わったのでしょうか？

 親ロガーのシンクをオーバーライド可能に
LogTapeの特徴の一つは、階層的カテゴリを通じたシンクの継承です。例えば、以下のように2つのロガーを設定した場合：
import { configure, getConsoleSink, getFileSink } from "@logtape/logtape";

await configure({
  sinks: {
    console: getConsoleSink()...]]></description><link>https://zenn.dev/hongminhee/articles/f9310365580c10</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/f9310365580c10</guid><pubDate>Tue, 24 Sep 2024 07:49:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qqxDjbhm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LogTape%25200.6.0%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E4%25BD%2595%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[(React)コンテナー・プレゼンテーションパターンの設計]]></title><description><![CDATA[
 概要
業務委託で4社以上経験がありますが、だいたいどこの現場でも、フロントエンドの設計は、「雰囲気で運用している」ことが多かったです。
なので、今回はコンテナープレゼンテーションパターンについて、本気出して考えてみました！
Reactの設計についてはこの動画がよかったです！
コンテナープレゼンテーションパターンは、この記事が一番しっくりきました。
https://zenn.dev/morinokami/books/learning-patterns-1/viewer/presentational-container-pattern#コンテナ・プレゼンテーションパターン

React ...]]></description><link>https://zenn.dev/rsugi/articles/1c200186e3a0e3</link><guid isPermaLink="true">https://zenn.dev/rsugi/articles/1c200186e3a0e3</guid><pubDate>Tue, 24 Sep 2024 05:55:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4F1Dtp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528React%2529%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25BC%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:r-sugi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0YTAwZTQ1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>r-sugi</dc:creator></item><item><title><![CDATA[Load testing I am working on]]></title><description><![CDATA[負荷試験について。
現職の開発のローンチに向けた作業が本格化している。
Production の構成の決定やコストの試算、脆弱性試験などを進めていく必要がある。
負荷試験は実際の環境に近い状態で行いたい。これまでの経験を踏まえ。

 tl;dr

har-to-k6 [1] は Playwright のテスト シナリオを再利用できる。
k6 [2] で実装するテストシナリオを削減できる。


 HAR の生成

har ( HTTP Archiveフォーマット ) [3] を生成するには、Context を設定。

context を Close すると、har が path に作成され...]]></description><link>https://zenn.dev/dannya/articles/7dafc5d0a40640</link><guid isPermaLink="true">https://zenn.dev/dannya/articles/7dafc5d0a40640</guid><pubDate>Tue, 24 Sep 2024 05:09:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XhH13nRb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Load%2520testing%2520I%2520am%2520working%2520on%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNDY0NzBmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke Yamamoto</dc:creator></item><item><title><![CDATA[React ダイアログ(モーダル)コンポーネントでも window.confirm の使い心地を実現]]></title><description><![CDATA[
 概要
window.confirm はすごく便利な API です。自動で確認ダイアログを出し、ユーザーが承認またはキャンセルするまで処理を待機し、確定したら結果を教えてくれます。
しかし実際の開発ではデザイナーさんが考えて作ってくれたデザインを実現するために window.confirm は利用せず、自前で確認ダイアログ(モーダル)を用意する、、、なんて場合も多いのではないでしょうか？
本記事では React のダイアログコンポーネントで window.confirm のような使い心地を実現する方法(デモあり)を紹介します。
今回は TODO アプリのタスク削除機能を想定し、タスクの...]]></description><link>https://zenn.dev/k0rosuke/articles/0ee743045a346c</link><guid isPermaLink="true">https://zenn.dev/k0rosuke/articles/0ee743045a346c</guid><pubDate>Tue, 24 Sep 2024 04:36:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DOXM29Pz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%2528%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%2529%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A7%25E3%2582%2582%2520window.confirm%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%25BF%2583%25E5%259C%25B0%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:korosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmODcxM2MxMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>korosuke</dc:creator></item><item><title><![CDATA[選択したテキストとリンクを簡単に引用できるChrome拡張機能を作った]]></title><description><![CDATA[
 ツールの紹介
選択したテキストを簡単に引用できるChrome拡張機能を作りました。
https://chromewebstore.google.com/detail/link-quote-clip/hoifjgjfbccgjdcimgepihcihfnhocfb?authuser=0&amp;hl=ja
Chromeで、コピーしたい文章を選択。

右クリックで、「Copy Selection with link」を選択。

クリップボードに、選択した文章とリンクが以下の形式でコピーされます。
&gt; ${selected text}

${link to text}
実際に貼り付け...]]></description><link>https://zenn.dev/sho_hata/articles/d9114c690fe95d</link><guid isPermaLink="true">https://zenn.dev/sho_hata/articles/d9114c690fe95d</guid><pubDate>Tue, 24 Sep 2024 03:40:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JEFZXvFQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2581%25B8%25E6%258A%259E%25E3%2581%2597%25E3%2581%259F%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A8%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25BC%2595%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BChrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sho-hata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZThlZjQ3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sho-hata</dc:creator></item><item><title><![CDATA[tsupでUMDモジュールを作成する]]></title><description><![CDATA[tsupでUMDモジュール作りたかったので検証しました。
結論はesbuild-plugin-umd-wrapperを使う事でUMDモジュールを作成できました。

 tsup.config.ts の設定
esbuild-plugin-umd-wrapperを使います。
既存の形式の出力方法も維持したかったので、tsupのコードにあった defaultOutExtension() をコピペしています。
https://github.com/monakamon/make-umd-by-tsup/blob/main/libs/hoge/tsup.config.ts

 ブラウザからの読み込み
...]]></description><link>https://zenn.dev/monakamon/articles/tsup-umd-build-tips</link><guid isPermaLink="true">https://zenn.dev/monakamon/articles/tsup-umd-build-tips</guid><pubDate>Tue, 24 Sep 2024 00:21:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---hHmQ1c2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tsup%25E3%2581%25A7UMD%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:monakamon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzY2M3NTJjNTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>monakamon</dc:creator></item><item><title><![CDATA[Javascript で簡単に group by ができるようになったってマジ？]]></title><description><![CDATA[
 はじめに
先日、フロントエンドの開発中に、配列をグルーピングする必要が出てきたので、サンプルコードを探すためにJavascript groupbyで検索をかけていました。[1]
検索結果を見て驚いたことに、いつの間にかJavascript自体にgroup byが実装されていたのです！！
感動が薄れる前に、記事にさせていただきます🙌

 対象読者

何かしらの言語で配列のgroup byを知っている（SQLは除く）
Javascriptの基本的な言語知識がある
Javascprit（Typescript）で手軽にgroup byができなくて悩ましい


 これが Javascript ...]]></description><link>https://zenn.dev/agent_grow/articles/dead78ddb3386d</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/dead78ddb3386d</guid><pubDate>Mon, 23 Sep 2024 23:30:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CnZ5Muse--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%2520group%2520by%2520%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%259E%25E3%2582%25B8%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A6%25E3%2582%258B%25E3%2582%2582%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzNmRmZWMxYmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるもと</dc:creator></item><item><title><![CDATA[TypeScriptの型でドメインモデリング⛅️]]></title><description><![CDATA[
 紹介すること
TypeScriptの型を厳密に定義し、ドメインモデリングを行います。
ソースコードがドキュメントとして機能することを目指します。具体的には、Branded Typeやタグ付きユニオンなどの技法を扱います。
この記事は、TypeScriptをこれから使いこなしてみたい方向けの内容です。

 紹介しないこと
ドメイン駆動開発や関数型プログラミングの概念については、深くは触れません。

 Make Illegal States Unrepresentable
あり得る型だけを定義するという考え方です。
詳細は以下を御覧ください。
https://fsharpforfunan...]]></description><link>https://zenn.dev/x_point_1/articles/b4d1c914e3c762</link><guid isPermaLink="true">https://zenn.dev/x_point_1/articles/b4d1c914e3c762</guid><pubDate>Mon, 23 Sep 2024 13:16:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YaSLA6jQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshiyuki%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzODNlOTg4OTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Sato</dc:creator></item><item><title><![CDATA[部分型関係から考えるTypeScriptの`keyof`と`never`と`unknown`]]></title><description><![CDATA[
 はじめに
TypeScriptはkeyofという型演算子を備えています。名前からも類推できるように、keyofは直感的にはオブジェクトの型のキーを取り出す演算子です。例えば、以下のように使います。
type T = { a: number, b: string }
type Key = keyof T // "a" | "b"
型Tは"a"と"b"というキーを持つ型なので、keyof Tは"a" | "b"型になるというわけです。
では、keyof neverやkeyof unknownはどうなるでしょうか？
type KeyOfNever = keyof never // ???
...]]></description><link>https://zenn.dev/mshaka/articles/603aae9f141042</link><guid isPermaLink="true">https://zenn.dev/mshaka/articles/603aae9f141042</guid><pubDate>Mon, 23 Sep 2024 10:25:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EiNYF0wx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2583%25A8%25E5%2588%2586%25E5%259E%258B%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%258B%25E3%2582%2589%25E8%2580%2583%25E3%2581%2588%25E3%2582%258BTypeScript%25E3%2581%25AE%2560keyof%2560%25E3%2581%25A8%2560never%2560%25E3%2581%25A8%2560unknown%2560%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A8%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MGMxZmFkMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほとけ</dc:creator></item><item><title><![CDATA[楽天商品の価格通知アプリをつくりました]]></title><description><![CDATA[
 概要
個人開発で楽天商品のお買い得情報をLINE通知するWebアプリを作りました。

楽天価格通知アプリ
ソースコード

このアプリは自分がほしいものリストに追加した楽天の商品がセールなどで安くなったら、LINE 通知してくれる web アプリケーションです。

 想定ユーザー
自分用に作ったのでユーザーは自分だけです。
なので今のところ認証機能はありません。

 使用技術

 フロントエンド

TypeScript 4.5.4

Next.js 14.0.4

MUI 5.15.20



 バックエンド

Python 3.12



 インフラ

Docker
AWS

Lam...]]></description><link>https://zenn.dev/ryouta26/articles/0bfda1e6c22e36</link><guid isPermaLink="true">https://zenn.dev/ryouta26/articles/0bfda1e6c22e36</guid><pubDate>Mon, 23 Sep 2024 10:11:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AJd0YJpo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25BD%25E5%25A4%25A9%25E5%2595%2586%25E5%2593%2581%25E3%2581%25AE%25E4%25BE%25A1%25E6%25A0%25BC%25E9%2580%259A%25E7%259F%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryouta.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZjIyNTZmYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryouta.js</dc:creator></item><item><title><![CDATA[アニメ検索アプリをつくりました]]></title><description><![CDATA[
 概要
シーズンやタイトルでアニメを検索できる Web アプリを作成しました。
検索結果は Annict というサイトの人気順で表示されます。
アニメを見る方はぜひ使ってみてください！

サイトの URL
ソースコード


 作成した目的

次のシーズンでは、何のアニメを放送するか知りたかったから
特定のアニメが次いつ放送予定か知りたかったから
GraphQL を使用したかったから


 使用技術

 フロントエンド

Next.js 14.2.5

TypeScript
ChakraUI
apollo/client
GraphQL


 外部 API

Annict API

アニメ...]]></description><link>https://zenn.dev/ryouta26/articles/564a6d636e767a</link><guid isPermaLink="true">https://zenn.dev/ryouta26/articles/564a6d636e767a</guid><pubDate>Mon, 23 Sep 2024 10:03:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y8f8Yd-h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryouta.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZjIyNTZmYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryouta.js</dc:creator></item><item><title><![CDATA[Prismaのenumがクライアントビルドに含まれるとモジュールの解決に失敗する]]></title><description><![CDATA[Prismaのenumをクライアントサイドで動作する箇所で参照していて、クライアントビルドに含まれるような場合、モジュールの解決に失敗します。
Viteのproduction用のビルドで発生するようです。(Remixで問題を確認しましたが、Nuxt.jsでも同じ内容の問題が報告されていました)
Viteの開発サーバだと発生しません。
下記Issueで報告されていますが、まだ直っていない問題になります。(設定による解決方法あり)

`Uncaught TypeError: Error resolving module specifier “.prisma/client/index-brow...]]></description><link>https://zenn.dev/onozaty/articles/prisma-enum-vite-resolve-failed</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/prisma-enum-vite-resolve-failed</guid><pubDate>Mon, 23 Sep 2024 08:47:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e4T__c0R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25AEenum%25E3%2581%258C%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2582%258B%25E3%2581%25A8%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%25AB%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[INTMAX Wallet SDKを使ってガスレスDappを実装してみた！]]></title><description><![CDATA[

 はじめに
皆さん、こんにちは！
7月下旬にEDCONのサイドイベントとして開催した INTMAX というスケーリングソリューションのミートアップを開催した時のハンズオンの内容を技術ブログとしてまとめ直しました！！
https://lu.ma/c18ubb0n
スライドは以下で公開しています！
https://www.canva.com/design/DAGGhlUKo4k/B-p8a_dfUjowiCPdp6XDMg/view?utm_content=DAGGhlUKo4k&amp;utm_campaign=designshare&amp;utm_medium=link&amp;u...]]></description><link>https://zenn.dev/mashharuki/articles/c089ecf9e3d056</link><guid isPermaLink="true">https://zenn.dev/mashharuki/articles/c089ecf9e3d056</guid><pubDate>Mon, 23 Sep 2024 08:43:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KhexXiG8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:INTMAX%2520Wallet%2520SDK%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AC%25E3%2582%25B9%25E3%2583%25AC%25E3%2582%25B9Dapp%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Haruki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dIaXowNy12WWVodmV1RVRrNGZoU25LaldfYTVFdmJlYnprWG1XPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Haruki</dc:creator></item><item><title><![CDATA[ESLintプラグインをTypeScriptで作る際にv8とv9の差を検証してみた]]></title><description><![CDATA[
 始めに
今までESLintのカスタムルールをTypeScriptで作って事前にコンパイルし、eslint-plugin-local-rulesに流し込んで運用してました。
小規模のプロジェクトであれば一緒に置くのは何も問題ないと思いますが、コードが増えるとパッケージとして切り出せるものは切り出したい気持ちが高まってきました。eslint-plugin-react-hooksのようにパッケージ化するとそっちのリポジトリでコンパイルやテストができるのでアプリケーション側のリポジトリはそこだけに集中できて良いですよね。
ただ最近はESLint v9がリリースされてFlat Configで大...]]></description><link>https://zenn.dev/numa_san/articles/d9e6766a4d910e</link><guid isPermaLink="true">https://zenn.dev/numa_san/articles/d9e6766a4d910e</guid><pubDate>Mon, 23 Sep 2024 05:36:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pTWg4aWx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592TypeScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E9%259A%259B%25E3%2581%25ABv8%25E3%2581%25A8v9%25E3%2581%25AE%25E5%25B7%25AE%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MWZjYWE2NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬまさん</dc:creator></item><item><title><![CDATA[ファイルのアップロード機能：ファイル名の設定]]></title><description><![CDATA[Next.jsとsupabaseで個人開発をしています。その中で、ファイルをアップロードする機能を作成しています。アップロードできないファイル名(eapⅡ.mp4など)があったため解決方法をまとめました。

 ファイル名の設定

index.ts
const sanitizedFileName=file.name.replace(/[^a-z0-9]/gi,'_').toLowerCase();
//aからz,0から9,アンダースコアなどの文字列を以外の文字を除外する
const lastDotIndex=sanitizedFileName.lastIndexOf('.');//sani...]]></description><link>https://zenn.dev/maiamitorio/articles/b1764f7265ae09</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/b1764f7265ae09</guid><pubDate>Mon, 23 Sep 2024 01:26:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jWjXHUP_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25EF%25BC%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item></channel></rss>