<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 16 Aug 2024 07:19:04 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Python】デコレーターの挙動]]></title><description><![CDATA[

 デコレーターの使い方

 デコレーターとは?

関数の中で別の関数を呼び出す際に前後に処理を追加したり呼び出す側で定義自体を変更することなく、関数を呼び出せることで関数の動作を拡張できる機能。


 @を使用せず手動で適用する場合
def my_decorator(func):
    def wrapper():
      print("start")
      func()
      print("stop")
    return wrapper

def say_hello():
    print("Hello!")

# 手動でデコレーターを適用
say_hell...]]></description><link>https://zenn.dev/takesaya/articles/python_decorator_kuroja</link><guid isPermaLink="true">https://zenn.dev/takesaya/articles/python_decorator_kuroja</guid><pubDate>Fri, 16 Aug 2024 01:36:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Kj9IDyM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyOTExOTY4MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[GoogleCalendarのイベントをGoogleAPIを使って取得する]]></title><description><![CDATA[

 はじめに
■モチベーション

自前のWebアプリケーションから、GoogleCalendarに登録しているイベント情報を取得したい。

→この記事では、PythonコードでGoogleCalendarAPIを使って、検証目的でGoogleCalendarに登録しているイベント情報を取得する方法を解説します。

 前提

実行環境：VSCode
Python：3.11


 GoogleAPIの設定
まず、GoogleAPIを使うためにGoogleCloudコンソールでプロジェクトを作成し、GoogleCalendarAPIを有効化し認証周りを設定します。

 プロジェクト作成
Go...]]></description><link>https://zenn.dev/nomhiro/articles/google-calendar-api</link><guid isPermaLink="true">https://zenn.dev/nomhiro/articles/google-calendar-api</guid><pubDate>Fri, 16 Aug 2024 01:14:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--upyez42---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleCalendar%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592GoogleAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0YmFmOGY4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくま</dc:creator></item><item><title><![CDATA[ChartBoost/ruff-action で ruff v0.5.0 以降を利用する場合のTIPS]]></title><description><![CDATA[
 背景
ruff v0.5.0 で　ruff &lt;path&gt; コマンドが deprecated となったため、ChartBoost/ruff-action を利用している場合、error: ruff &lt;path&gt; has been removed. Use ruff check &lt;path&gt; instead. といったエラーが発生し、正常に動作しない
https://github.com/astral-sh/ruff/releases/tag/0.5.0

 応急対処
以下のように workflow を記述することで、応急的に動かすことができる (本当...]]></description><link>https://zenn.dev/kiakiraki/articles/15e6e2dfc0180c</link><guid isPermaLink="true">https://zenn.dev/kiakiraki/articles/15e6e2dfc0180c</guid><pubDate>Fri, 16 Aug 2024 00:19:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pz8PSHf6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChartBoost%252Fruff-action%2520%25E3%2581%25A7%2520ruff%2520v0.5.0%2520%25E4%25BB%25A5%25E9%2599%258D%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AETIPS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258D%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvY05zYzZlS0hBQ1Y4aHlqVE9SWlpNWlBldnNSQjN3eXYxRjZQYUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あきらき</dc:creator></item><item><title><![CDATA[FXのデータをリアルタイムに非同期で受け取る方法]]></title><description><![CDATA[記事にするか迷ったがGMO FX普及活動のため書き溜めておく
必要なライブラリはpybottersです.
リンク先に導入方法があります.
通貨ペアはドル円です
"symbol": "USD_JPY"を変えることで他の通貨も可能
詳しくはGMO ドキュメントにて
コメントアウトしてます
ご自身でカスタマイズして使ってください
!
この記事を書くのに15分も掛かってないのでどこか不備があるかも

import os
import pybotters
import asyncio

class FX:
    def __init__(self) -&gt; None:
        sel...]]></description><link>https://zenn.dev/ashitahonkidasu/articles/5c5e3f9c8ce1d5</link><guid isPermaLink="true">https://zenn.dev/ashitahonkidasu/articles/5c5e3f9c8ce1d5</guid><pubDate>Thu, 15 Aug 2024 13:57:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SMIRua4O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FX%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1OThjYTZmNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shiba</dc:creator></item><item><title><![CDATA[366B]]></title><description><![CDATA[N = int(input())
S = [input() for _ in range(N)]
M = max(map(len, S))
T = [["*"] * N for _ in range(M)]
for i in range(N):
    for j in range(len(S[i])):
        #ココ
        T[j][N - i - 1] = S[i][j]
for i in range(M):
    while T[i][-1] == "*":
        T[i].pop()
    print("".join(T[i]))
どこを置換する...]]></description><link>https://zenn.dev/5151/articles/5b9b70048ecd57</link><guid isPermaLink="true">https://zenn.dev/5151/articles/5b9b70048ecd57</guid><pubDate>Thu, 15 Aug 2024 09:07:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3pqrkkJZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:366B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miChill%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2N2EzZjRmNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miChill</dc:creator></item><item><title><![CDATA[【Streamlit】簡単Pythonアプリを作る｜ページ表示までの簡単な手順メモ]]></title><description><![CDATA[簡単にPythonのアプリが作成できる「Streamlit」が気になったので、ページを表示できるまでのステップを簡単に調べてみました。
今回は、Streamlitで「サクッとページを表示するまで」の工程メモです。

 Streamlitでページ表示までの簡単な始め方

 1）アプリのフォルダを作る
my_streamlit_app/

 2）仮想環境を作る（※省略も可）
$ python3 -m venv .venv      # 仮想環境を作成するコマンド
$ source .venv/bin/activate  # 仮想環境を有効化するコマンド
解説# 1. 仮想環境を作成するコマン...]]></description><link>https://zenn.dev/buenotheebiten/articles/5a23bbef7fd786</link><guid isPermaLink="true">https://zenn.dev/buenotheebiten/articles/5a23bbef7fd786</guid><pubDate>Thu, 15 Aug 2024 05:10:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--409N0ImD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Streamlit%25E3%2580%2591%25E7%25B0%25A1%25E5%258D%2598Python%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BD%259C%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えびてん</dc:creator></item><item><title><![CDATA[FastAPIでDIのメソッドにパラメータを渡す(同期も非同期も)]]></title><description><![CDATA[
 始めに
FastAPIにてメソッドやクラスをDIできますが、DI時に部分的に処理を差し替えたい時があります。その時にパラメータを渡せば処理を差し替えられますが、少々ハマったのでそれをブログにします。

 環境

Python

3.12.4


FastAPI

0.112.0




 実装

 同期処理の場合
Dependsで呼び出す際にlambdaでパラメータを使用すれば呼び出せます。ただし、非同期処理は呼び出せないので注意してください。コンパイルエラーは発生しませんが何も起こりません。
async def async_printer(msg: str) -&gt; None:...]]></description><link>https://zenn.dev/kirimaru/articles/962caaaa02b1b6</link><guid isPermaLink="true">https://zenn.dev/kirimaru/articles/962caaaa02b1b6</guid><pubDate>Thu, 15 Aug 2024 03:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nhlgw1Ry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7DI%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AB%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%2528%25E5%2590%258C%25E6%259C%259F%25E3%2582%2582%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2582%2582%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E4%25B8%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きり丸</dc:creator></item><item><title><![CDATA[イーロンマスクになりたい x Deep-Live-Cam]]></title><description><![CDATA[
 はじめに
なりたいですよね。なりましょう。
今回はDeep-Live-Camというオープンソースを使用してリアルタイムのフェイススワップを試してみました。
https://github.com/hacksider/Deep-Live-Cam
MacbookPro(M1)での動作確認方法についてまとめていきます。

 対象読者

機械学習に興味があるエンジニア
顔交換技術に興味がある方
M1 Macユーザー


 技術スタック

Python 3.10
FFmpeg
PyTorch
tensorflow


 概要
今回はM1チップのMacbookProでの検証になるため、その他の環境...]]></description><link>https://zenn.dev/t_o_m_o/articles/9201b803095d9c</link><guid isPermaLink="true">https://zenn.dev/t_o_m_o/articles/9201b803095d9c</guid><pubDate>Thu, 15 Aug 2024 00:55:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Jow7XfIK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2520x%2520Deep-Live-Cam%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDBiNzc5MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomo</dc:creator></item><item><title><![CDATA[Speech-to-Text(Reazonspeech／Amzon Transcribe／Whisper ) を試してみた！]]></title><description><![CDATA[
 はじめに
ChatGPT等のAIの進化については盛り上がりを見せているが、音声データのテキスト化についても精度や速度がとても向上しているとのこと。
各エンジン（モデル？）を使った場合の比較サイトはいくつかあるので、特徴についてはそういうのを参考に何となく把握したのだが、いざお試しで実装しようとしたら意外と手こずってしまった。同じ事をやろうとしたら、また手こずる気がするのでメモを残しておく。

 実施環境
■ PCスペック
　CPU：Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz 3.20 GHz
　ﾒﾓﾘ：8.00 GB
　※API利用のものは、本PC...]]></description><link>https://zenn.dev/relims7165/articles/4fc5cc85d0b697</link><guid isPermaLink="true">https://zenn.dev/relims7165/articles/4fc5cc85d0b697</guid><pubDate>Wed, 14 Aug 2024 15:44:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2hdFAbPr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Speech-to-Text%2528Reazonspeech%25EF%25BC%258FAmzon%2520Transcribe%25EF%25BC%258FWhisper%2520%2529%2520%25E3%2582%2592%25E8%25A9%25A6...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:relims%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0ZjdjYzk5MjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>relims</dc:creator></item><item><title><![CDATA[[Tips] Segment Anything Model 2 (SAM 2)を使うときに悩んだ細かい点: 動画の順方向と逆方向への処理]]></title><description><![CDATA[
 背景
Metaが発表したセグメンテーションが注目されています。
https://github.com/facebookresearch/segment-anything-2
実際に環境を構築すると、Google Colabなどの無料GPUでもギリギリ処理ができます (1画像1秒あたり)。CPUのみを使ったFork版を使った場合でも同じぐらいの処理速度になります。
私が確認できる範囲で確認したところ、RTX3090だと10-12画像/秒、RTX4090だと15-17画像/s、またRTA 6000 Adaだと25画像/秒ぐらいで動作する様子でした。
動画が1秒あたり24-25枚ぐらいのF...]]></description><link>https://zenn.dev/takilog/articles/44943bb26a92be</link><guid isPermaLink="true">https://zenn.dev/takilog/articles/44943bb26a92be</guid><pubDate>Wed, 14 Aug 2024 09:28:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SlXMzakv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTips%255D%2520Segment%2520Anything%2520Model%25202%2520%2528SAM%25202%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%2582%25A9%25E3%2582%2593%25E3%2581%25A0%25E7%25B4%25B0%25E3%2581%258B%25E3%2581%2584%25E7%2582%25B9%253A%2520%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たきろぐ</dc:creator></item><item><title><![CDATA[[tesseract] macでOCRをしてみる]]></title><description><![CDATA[
 はじめに
macでOCRをしてみる。

 環境

System Version: macOS 14.4 (23E214)
Python 3.12.5


 手順

 1. tesseractをインストール
% brew install tesseract

 2. pytesseractのインストールを確認
% tesseract --version

tesseract 5.4.1
 leptonica-1.84.1
  libgif 5.2.1 : libjpeg 8d (libjpeg-turbo 3.0.0) : libpng 1.6.43 : libtiff 4.6.0 :...]]></description><link>https://zenn.dev/kotopasi/articles/30cd8d5af97c28</link><guid isPermaLink="true">https://zenn.dev/kotopasi/articles/30cd8d5af97c28</guid><pubDate>Wed, 14 Aug 2024 08:01:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5ZqeQie8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Btesseract%255D%2520mac%25E3%2581%25A7OCR%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あまたつ</dc:creator></item><item><title><![CDATA[＃30　正規表現でマッチした文字列を順に置換したい]]></title><description><![CDATA[
 はじめに
前回、ネストのあるjsonの文字列の置換についてとりあげましたが、今回はその番外編として、正規表現でマッチした文字列をリストに沿って置換する方法について備忘録としてまとめていきたいと思います。
今回やりたい内容は

正規表現でマッチした文字列の一部を残し、その他のマッチした部分は削除する
拡張子を「jpg」から「png」に置換する

です。

 使用するjson
前回使用したjsonをベースに、いくつか情報を追加しました。
    {
      "data": {
        "id": {
          "num": "1"
        },
      ...]]></description><link>https://zenn.dev/nxted_sapporo/articles/d8b4d8c9f8b0f9</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/d8b4d8c9f8b0f9</guid><pubDate>Wed, 14 Aug 2024 07:26:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dJzHpbwU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%258330%25E3%2580%2580%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2581%2597%25E3%2581%259F%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E9%25A0%2586%25E3%2581%25AB%25E7%25BD%25AE%25E6%258F%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[AI動画解析サービスを試してみる]]></title><description><![CDATA[AmazonのAmazon Rekognition VideoとGoogleのVideo AI(Video Intelligence API)の解析を使用してみて、それぞれどのような結果が得られるのか確認したいと思います。
今回は1回目ということでAmazon Rekognitionを使うまでの設定とPythonスクリプトを使用した解析を実行して結果をJSONで取得してみます。

 Amazon Rekognitionとは？
詳しくは公式Webサイト見ていただくのが一番ですが、簡単に言えばAWSのS3に保存してある画像や動画に対して顔検出、テキスト検出、ラベル検出などの解析が行えるサービ...]]></description><link>https://zenn.dev/ubiblog2/articles/018a9b6aeeef36</link><guid isPermaLink="true">https://zenn.dev/ubiblog2/articles/018a9b6aeeef36</guid><pubDate>Wed, 14 Aug 2024 04:48:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--51LRsE3B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E5%258B%2595%25E7%2594%25BB%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TechSavvy_24%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3YTVmZDAwZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TechSavvy_24</dc:creator></item><item><title><![CDATA[重回帰分析の勉強に使えそうなダミーデータを生成したい]]></title><description><![CDATA[
 はじめに
重回帰分析の勉強に使えそうなダミーデータを作ってみました。また、このダミーデータが期待したデータになっているか確認するスクリプトも作りました。

 モジュール
スクリプト実行環境のモジュール情報です。
$ pip list
Package         Version
--------------- ------------
numpy           1.26.3
pandas          2.2.2
statsmodels     0.14.2

 ダミーデータを作るスクリプト
コンソールでpython createDummyDate.pyと実行するとdum...]]></description><link>https://zenn.dev/zgw426/articles/23038bb9cbebea</link><guid isPermaLink="true">https://zenn.dev/zgw426/articles/23038bb9cbebea</guid><pubDate>Tue, 13 Aug 2024 22:37:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OsyCQWUe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%258D%25E5%259B%259E%25E5%25B8%25B0%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E3%2583%2580%25E3%2583%259F%25E3%2583%25BC%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5OWNjMjMzNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suo</dc:creator></item><item><title><![CDATA[366C]]></title><description><![CDATA[q = int(input())

cnt = [0]*1000000

ans = 0

for _ in range(q):
    t,*x = map(int,input().split())

    if t == 1:
        #インデックスそろえてるだけ？
        x[0] -= 1
        cnt[x[0]] += 1
        if cnt[x[0]] == 1:
            ans += 1

    elif t == 2:
        
        x[0] -= 1
        cnt[x[0]] -= 1...]]></description><link>https://zenn.dev/5151/articles/77b0b4aba61b34</link><guid isPermaLink="true">https://zenn.dev/5151/articles/77b0b4aba61b34</guid><pubDate>Tue, 13 Aug 2024 14:36:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wwKZEnnk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:366C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miChill%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2N2EzZjRmNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miChill</dc:creator></item><item><title><![CDATA[TkEasyGUIテーマの変更方法]]></title><description><![CDATA[TkEasyGUIはtkinterをベースに作ってあるので見慣れたテーマかと思います

実行環境

Windows
Python 3.11.9
TkEasyGUI 0.2.73


!
TkEasyGUI 0.2.73バージョン時のテーマの変更方法になります。
バージョンが変わることで仕様が変更されるかもしれません。

https://github.com/kujirahand/tkeasygui-python/blob/main/docs/TkEasyGUI/utils-py.md#set_theme

 テーマに関する関数

 テーマ一覧の取得
eg.get_tnemes()
eg....]]></description><link>https://zenn.dev/shiro_toy_box/articles/03ccd3bfa8d62c</link><guid isPermaLink="true">https://zenn.dev/shiro_toy_box/articles/03ccd3bfa8d62c</guid><pubDate>Tue, 13 Aug 2024 12:56:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pS2OMAq9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TkEasyGUI%25E3%2583%2586%25E3%2583%25BC%25E3%2583%259E%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろ</dc:creator></item><item><title><![CDATA[Cloud Vision APIでお手軽にゲーム画像からテキスト抽出してみた！]]></title><description><![CDATA[
 まえがき
うわーん、ゲーム画像からテキストが抽出したいよー
でも「画像　テキスト　プログラム」で調べてもOCRエンジンをインストールしたりしなきゃいけないし、精度上げようとすると大変そうだよー
Googleレンズとかあるし、GoogleがそういうAPI公開してたりしないのー
https://cloud.google.com/vision/docs?hl=ja
あるじゃん！！！

 Cloud Visionとは？
Googleが提供しているクラウドサービス「Google Cloud」で提供されているプロダクトの１つで、画像や動画といったメディアから

テキストを抽出する
顔認識、ランド...]]></description><link>https://zenn.dev/nanae/articles/062de920ab9ed7</link><guid isPermaLink="true">https://zenn.dev/nanae/articles/062de920ab9ed7</guid><pubDate>Tue, 13 Aug 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8i7aM0-H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Vision%2520API%25E3%2581%25A7%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nanae%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyOWRhNGI5NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nanae</dc:creator></item><item><title><![CDATA[Ragasのライブラリを使ってテストデータを作成する]]></title><description><![CDATA[
 やりたいこと
Ragasと言えばRAGの検索・生成精度を定量的に評価できるフレームワークですが、テストデータも作成できることを知ったので、紹介します。

 背景
Ragasの公式ドキュメントを見てみましょう。
https://docs.ragas.io/en/stable/concepts/testset_generation.html

テストデータ生成におけるRagasの違いは？
Ragasは評価データ生成に斬新なアプローチをとります。理想的な評価データセットは、様々な難易度の問題を含む、本番で出題される様々なタイプの問題を網羅する必要があります。デフォルトのLLMは、共通のパス...]]></description><link>https://zenn.dev/headwaters/articles/c1382c20373cf5</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/c1382c20373cf5</guid><pubDate>Tue, 13 Aug 2024 11:30:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bxvwb8fH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ragas%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:akihiro%2520nakamura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MjU4ZWEwY2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akihiro nakamura</dc:creator></item><item><title><![CDATA[LangGraphでエージェントシステムを簡単に構築]]></title><description><![CDATA[
 LangGraphでエージェントシステムを簡単に構築
この記事では、エージェントシステムを簡単に構築するためのツール「LangGraph」を紹介します。LangGraphは、複雑なタスクを効率よく処理するための仕組みを簡潔に実装できるツールです。

 エージェントとは
エージェントは、AI（LLM）を活用して、ツールを使いこなしながら複雑なタスクを自動で処理するシステムです。例えば、検索やデータ分析など、複数のツールを組み合わせて高度な目標を達成します。

 LLMとエージェントの違い


LLM: 単一のタスクに対して、入力された内容を処理し、結果を返します。

エージェント: 複...]]></description><link>https://zenn.dev/niix/articles/26319d33e3ce89</link><guid isPermaLink="true">https://zenn.dev/niix/articles/26319d33e3ce89</guid><pubDate>Tue, 13 Aug 2024 11:18:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HRiUZFsC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangGraph%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekpZM1BNUE4xNjhseThYd2FmeUdkcHpLQzNMY1lZZGNOaHpGdWg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n</dc:creator></item><item><title><![CDATA[[統計学] ベータ分布の可視化・期待値・分散・最尤推定・ベイズモデル]]></title><description><![CDATA[
 確率密度関数 (probability density function)
ベータ分布の確率密度関数は以下のように定義される．ただし，xの定義行きに注意せよ．

\begin{align*}
f_{X}(x) &amp;= B(\alpha, \beta)^{-1} x^{\alpha-1} (1-x)^{\beta-1} \\
x &amp;\in [0, 1]
\end{align*}


 可視化
ベータ分布の確率密度関数を確認する. 初めに a+b=10 に固定しながら a,b の値を変化させる.

次に a/b を固定しながら a,b の絶対値を大きくしていく様子を可視化す...]]></description><link>https://zenn.dev/shundeveloper/articles/67dce99edba5a3</link><guid isPermaLink="true">https://zenn.dev/shundeveloper/articles/67dce99edba5a3</guid><pubDate>Tue, 13 Aug 2024 06:21:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D4EhvtXx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B5%25B1%25E8%25A8%2588%25E5%25AD%25A6%255D%2520%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E5%25B8%2583%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2583%25BB%25E6%259C%259F%25E5%25BE%2585%25E5%2580%25A4%25E3%2583%25BB%25E5%2588%2586%25E6%2595%25A3%25E3%2583%25BB%25E6%259C%2580%25E5%25B0%25A4%25E6%258E%25A8%25E5%25AE%259A%25E3%2583%25BB%25E3%2583%2599%25E3%2582%25A4%25E3%2582%25BA%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shunsock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shunsock</dc:creator></item></channel></rss>