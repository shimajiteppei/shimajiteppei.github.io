<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 25 Aug 2024 07:39:13 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Azure OpenAIを使用してSQLに自然言語で問い合わせる(NL2SQL)]]></title><description><![CDATA[
 はじめに

OpenAIで公開されているcookbookを参考に日本語化しながら解説します
最初に天気を取得する簡単なFunction Callingを実施し、データベースに対して自然言語で問い合わせる仕組みを紹介します
自然言語からクエリを作成し、Function Callingで外部関数を読み出し、結果を取得することができます
一般的には、NL2SQL(Natural Language to SQL Queries)で認識されています。
LangChainのSQL Database Toolkitも同様のことができますが、出力の速度が遅かった(数十秒)のでFunction Cal...]]></description><link>https://zenn.dev/yyteam/articles/nl2sql-first</link><guid isPermaLink="true">https://zenn.dev/yyteam/articles/nl2sql-first</guid><pubDate>Sun, 25 Aug 2024 02:10:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X3xHhP48--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6SQL%25E3%2581%25AB%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E5%2595%258F%25E3%2581%2584%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2582%258B%2528NL2SQL%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyteam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmVhOWM3M2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyteam</dc:creator></item><item><title><![CDATA[Zenn記事のリストをスプレッドシートに出力する]]></title><description><![CDATA[
 はじめに
私のZenn記事も90件を超えてきました。
ここで発生するのが、情報量が多すぎてどこになんの記事があるかわからない問題です。
いろいろやってみようと考えていますが、まずは第一歩としてZenn記事をリストで出力して、その後スプレッドシートに出力するをやってみようと思います。
スコープですが、私のアカウントだけではつまらないので、「Accenture Japan (有志)」を対象にしようと思います。

 RSSで記事のリストを取得する
記事の一覧ですが、ZennではRSSが対応しているようなので、RSSで取得しますかぁ。
下記URLでXML形式で記事のリストが取得されます。
h...]]></description><link>https://zenn.dev/acntechjp/articles/7b1895f5ac394e</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/7b1895f5ac394e</guid><pubDate>Sat, 24 Aug 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--saY0MIEt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Masanori%2520Yoshida%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MzkwNDBmYjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masanori Yoshida</dc:creator></item><item><title><![CDATA[pythonをrustへ変換したときの対応をまとめる]]></title><description><![CDATA[もともとpythonのアプリがあって、それをrustへ書き直す作業をしていたことがありまして、
この記事ではその際につまづいた変換部分をまとめておきます。（随時追加予定）
それぞれの言語で特徴や目的が違うので、機能が対応しているわけではないです。
（例：pythonのdictをrustのstructに対応させるなど）
・python：処理が最後まで動けばOK。
・rust：テストが動けばよし。（またrustの経験が浅いので、技術的に難しいものは使っていません）
注意点
pythonの動的型付けとrustの静的型付けの違いは大きく、そのまま変換してもうまく動かないことがあります。
その場合...]]></description><link>https://zenn.dev/pycetra/articles/python_to_rust</link><guid isPermaLink="true">https://zenn.dev/pycetra/articles/python_to_rust</guid><pubDate>Sat, 24 Aug 2024 18:05:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z4zONPRj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592rust%25E3%2581%25B8%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pycetra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjkxZTkyMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pycetra</dc:creator></item><item><title><![CDATA[夏休みの宿題でPort Scannerを自作してみた②~開発環境準備編]]></title><description><![CDATA[
 これまでのお話

夏だし，Port Scannerを自作してみたい。

技術選定編では，Port Scannerを自作するにあたってどのような技術を使うかを考えた。
今回は，Port Scannerの開発環境を整えつつ，全体設計を考えていきます。



 開発環境を整える
とりあえず，ミニマムでやることを洗い出しました。

GitHubのリポジトリを作る
pythonのプロジェクトを作る
Dev ContainerとDockerが動くような環境を整える(VSCodeのExtensionsとかもこのへんでやる)

Dockerfileの準備
.devcontainer/devconta...]]></description><link>https://zenn.dev/sigma_tom/articles/e9fed37f0da0a6</link><guid isPermaLink="true">https://zenn.dev/sigma_tom/articles/e9fed37f0da0a6</guid><pubDate>Sat, 24 Aug 2024 14:46:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d7ghYMIA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%258F%25E4%25BC%2591%25E3%2581%25BF%25E3%2581%25AE%25E5%25AE%25BF%25E9%25A1%258C%25E3%2581%25A7Port%2520Scanner%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A1%7E%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25BA%2596%25E5%2582%2599%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sigma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1dYMkRnWUs1akI0RHBxcTN3Y1hwOGV5X0RKbzVxVC12QW5aUHoyOTJyPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sigma</dc:creator></item><item><title><![CDATA[夏休みの宿題でPort Scannerを自作してみた③~実装編~]]></title><description><![CDATA[
 これまでのお話

夏だし，Port Scannerを自作してみたい --&gt; せっかくなのでmy_portscannerを作る過程を紹介していきます。

技術選定編では，Port Scannerを自作するにあたってどのような技術を使うかを考えました。

開発環境準備編Port Scannerの開発環境を整えた。
今回は，Port Scannerの実装をしていきます。



 実装の前に

 pythonをパッケージ化する
yt-dlpの構成を真似したらいい感じにパッケージ化できました。
全体構成としてはこんな感じ
$ pwd
/home/tomita/my_portscanner...]]></description><link>https://zenn.dev/sigma_tom/articles/464f2e43420e0c</link><guid isPermaLink="true">https://zenn.dev/sigma_tom/articles/464f2e43420e0c</guid><pubDate>Sat, 24 Aug 2024 14:46:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G6hWwOPc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%258F%25E4%25BC%2591%25E3%2581%25BF%25E3%2581%25AE%25E5%25AE%25BF%25E9%25A1%258C%25E3%2581%25A7Port%2520Scanner%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A2%7E%25E5%25AE%259F%25E8%25A3%2585%25E7%25B7%25A8%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sigma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1dYMkRnWUs1akI0RHBxcTN3Y1hwOGV5X0RKbzVxVC12QW5aUHoyOTJyPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sigma</dc:creator></item><item><title><![CDATA[夏休みの宿題でPort Scannerを自作してみた①~技術選定編~]]></title><description><![CDATA[
 はじめに
こんにちは。
世間は夏休み真っ只中ですが、皆さんはいかがお過ごしでしょうか。
夏休みといえば、宿題がつきものですよね。
私は夏休みというと，なにか新しいことができそうな謎のワクワク感がするタイプなので，なんか作ってみるかということで，Port Scannerを自作してみました。
みなさんもぜひ，夏休みの宿題としてPort Scannerを自作してみてはいかがでしょうか。
本記事では鋭意作成中のmy_portscannerを作る過程を紹介していきます。
よりよりものにしていきたいので，みなさんのアドバイスやコメントもお待ちしております。


 Port Scannerとは

...]]></description><link>https://zenn.dev/sigma_tom/articles/3de59d1f44aa7e</link><guid isPermaLink="true">https://zenn.dev/sigma_tom/articles/3de59d1f44aa7e</guid><pubDate>Sat, 24 Aug 2024 14:46:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tD_vxBLV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%258F%25E4%25BC%2591%25E3%2581%25BF%25E3%2581%25AE%25E5%25AE%25BF%25E9%25A1%258C%25E3%2581%25A7Port%2520Scanner%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2591%25A0%7E%25E6%258A%2580%25E8%25A1%2593%25E9%2581%25B8%25E5%25AE%259A%25E7%25B7%25A8%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sigma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1dYMkRnWUs1akI0RHBxcTN3Y1hwOGV5X0RKbzVxVC12QW5aUHoyOTJyPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sigma</dc:creator></item><item><title><![CDATA[DjangoのFormとTailwindの組み合わせについてちゃんと考えてみる]]></title><description><![CDATA[
 はじめに
Webの開発をする際にDjango・TailwindCSSという組み合わせをよく採用しています。
何かを形にするときの手軽さとTailwindCSSの使い勝手の良さがかなりマッチしていると思っているのですが、以前からFormに関しての相性は微妙に思うところがあり、手軽さと便利さをうまく共存させる方法がないか考えてみます。
※Tailwindはnode環境のCLIでビルドし、生成されたcssを使用する想定です。

 Django Formについて
Djangoでは簡単にFormを作成する方法としてformクラスが提供されています。
詳細は以下。
https://docs.dj...]]></description><link>https://zenn.dev/taltalsource/articles/django-form-tailwind</link><guid isPermaLink="true">https://zenn.dev/taltalsource/articles/django-form-tailwind</guid><pubDate>Sat, 24 Aug 2024 08:28:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8l2ExwVD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AEForm%25E3%2581%25A8Tailwind%25E3%2581%25AE%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taltalsource%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1ZmVjODFhZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taltalsource</dc:creator></item><item><title><![CDATA[ReflexをCloud Runにデプロイする]]></title><description><![CDATA[
 はじめに
ここ最近、Reflexという PythonのみでUI含めたWebアプリが作成できるライブラリ が使ってみていい感じなので、いろいろと触ってみてます。
https://zenn.dev/neka_nat/articles/f2f5b6ebeb049a
https://zenn.dev/neka_nat/articles/32824920cb6004
https://github.com/neka-nat/reflex-firebase
Reflexには専用のホスティングサービスがあるのですが、環境に入れられるものがpipでインストールできるものに限られてたり、ドメインを自由に...]]></description><link>https://zenn.dev/neka_nat/articles/113c38c0f7aae6</link><guid isPermaLink="true">https://zenn.dev/neka_nat/articles/113c38c0f7aae6</guid><pubDate>Sat, 24 Aug 2024 07:37:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1rKHkfsr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Reflex%25E3%2582%2592Cloud%2520Run%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0NjU3ODEwYjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくま</dc:creator></item><item><title><![CDATA[GithubActionsでmicroCMSの新規記事をツイートする]]></title><description><![CDATA[
 はじめに
ここではmicroCMSで記事が投稿された際にTwitter(新X)上で記事のツイートを自動で行う方法について解説します。また、読者がmicroCMS、GitHubおよびGitHub Actions、Twitter API、Pythonについて基本的なことを理解していることを前提にしています。
⚠️ これらの技術について何も知らない場合は...
もしこれらについて何も知らないのであれば以下のドキュメントを読むことをおすすめします。
microCMSブログではmicroCMSを用いた様々な利用用途を確認できます。microCMSドキュメントとともに読むことでmicroCMSの...]]></description><link>https://zenn.dev/uxoxu/articles/39b66ab6f93389</link><guid isPermaLink="true">https://zenn.dev/uxoxu/articles/39b66ab6f93389</guid><pubDate>Sat, 24 Aug 2024 05:22:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c8YkBCOv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GithubActions%25E3%2581%25A7microCMS%25E3%2581%25AE%25E6%2596%25B0%25E8%25A6%258F%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2598%25A5%25E9%25A2%25A8%25E3%2581%25BF%25E3%2581%25A1%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMTc2MzQzNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>春風みちる</dc:creator></item><item><title><![CDATA[pythonで大きなファイルをgzipする]]></title><description><![CDATA[pythonを使ってcsvファイルをgzipする方法

 いまのところうまくいってる処理
import gzip
path = "xxx.csv"
out_path = "yyy.csv"
with open(path, "r", encoding='utf-8') as f_in, gzip.open(out_path, mode='wt',encoding='utf-8') as f_out:
	while True:
		data = f_in.read(1000000)
		if not data:
			break

		f_out.write(date)

 たまにエラーが出...]]></description><link>https://zenn.dev/pycetra/articles/python_tips_to_gzip</link><guid isPermaLink="true">https://zenn.dev/pycetra/articles/python_tips_to_gzip</guid><pubDate>Sat, 24 Aug 2024 04:13:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--da10hZXO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592gzip%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pycetra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MjkxZTkyMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pycetra</dc:creator></item><item><title><![CDATA[Python で、帰ってきたニコニコのコメントを取得する]]></title><description><![CDATA[私はこれまで、ニコニコに投稿した動画のコメントを Python で取得していたのですが、この度ニコニコのバージョンが「帰ってきたニコニコ」となったことに伴い、コメントの取得方法が変わったらしく、今までの方法では取得できなくなりました。
そこで、帰ってきたニコニコでコメントを取得する方法がないか調べたところ、TypeScript で実装したという以下の記事を見つけました。
https://zenn.dev/doma_itachi/articles/c448d4b6271d32
こちらを参考にさせて頂いて Python で実装した、というのが本記事の内容です。

 スクリプト

 get_c...]]></description><link>https://zenn.dev/umi_sign/articles/b73e63a9923fa6</link><guid isPermaLink="true">https://zenn.dev/umi_sign/articles/b73e63a9923fa6</guid><pubDate>Sat, 24 Aug 2024 03:31:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LX0T9QTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E3%2580%2581%25E5%25B8%25B0%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E3%2583%258B%25E3%2582%25B3%25E3%2583%258B%25E3%2582%25B3%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNGE1MzAyZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うみ</dc:creator></item><item><title><![CDATA[SnowflakeCLIを利用したStreamlitアプリのデプロイ【Streamlit in Snowflake】]]></title><description><![CDATA[
 はじめに
この記事では、SnowflakeCLIを利用してローカルファイルにあるStreamlitアプリをSnowflakeへデプロイする手順をまとめます。

 1.SnowflakeCLIのインストール
まずは下記コマンドでSnowflakeCLIをインストールします。
$ pip install snowflake-cli-labs
https://github.com/Snowflake-Labs/snowcli

 2.Snowflake接続の作成
次にSnowflake接続設定を作成します。
$ snow connection add
# 表示されたプロンプトに沿って入力
...]]></description><link>https://zenn.dev/hrk_mrks/articles/d89f7697413aab</link><guid isPermaLink="true">https://zenn.dev/hrk_mrks/articles/d89f7697413aab</guid><pubDate>Sat, 24 Aug 2024 01:15:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o2_4bGrS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SnowflakeCLI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FStreamlit%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2580%2590Streamlit%2520in%2520Snowflake%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:haruki%2520murakoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhY2Q2YTdlNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>haruki murakoshi</dc:creator></item><item><title><![CDATA[【python】-Azureのコストをpythonで取得する]]></title><description><![CDATA[
 やること
pythonを使ってAzureのコストを取得する方法を紹介します。

 手順

サービスプリンシパルの作成
コード実行


 前提

python 3.11.9


 サービスプリンシパルの作成

以下を参考にサービスプリンシパルを作成する

https://zenn.dev/headwaters/articles/e82aca7bec3579

Azure Subscriptionを開く
「サブスクリプション」&gt;「アクセス制御（IAM）」&gt;「ロールの割り当て」で「追加」をクリックし、「コスト管理の共同作成者」ロールを選択し、サービスプリンシパルを割り当てます。...]]></description><link>https://zenn.dev/headwaters/articles/3f018d4f5e86d6</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/3f018d4f5e86d6</guid><pubDate>Sat, 24 Aug 2024 01:07:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VLzwlH1V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591-Azure%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592python%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODg5YTRhYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item><item><title><![CDATA[AtCoder - Coloring Matrix]]></title><description><![CDATA[今回は，AtCoder Beginner Contest 311 B 問題を解いた際につまずいたポイントに関するメモを残しておきます．
Coloring Matrix
https://atcoder.jp/contests/abc311/tasks/abc311_b

 自分の回答
N = int(input())
A, B = [], []
for _ in range(N):
    A.append(list(map(int, input().split())))
for _ in range(N):
    B.append(list(map(int, input().split...]]></description><link>https://zenn.dev/os515/articles/atcoder-abc298</link><guid isPermaLink="true">https://zenn.dev/os515/articles/atcoder-abc298</guid><pubDate>Sat, 24 Aug 2024 00:41:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A92je71W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AtCoder%2520-%2520Coloring%2520Matrix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:soso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXhTVFZ2dEMxc1c4N3NudWhKSVp0YTVMUWpsMUR5VW1YVTl5UFY2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soso</dc:creator></item><item><title><![CDATA[Python multithreading and multiprocessing]]></title><description><![CDATA[
 背景

マルチスレッドで動作しているプロセスを並列処理できるようにしたい。


 multithreading
pythonでマルチスレッドを実装する場合、asyncioを用いて以下のように実装できるだろう。
import asyncio


class AsyncTask:
    async def run(self):
        print("async task!")
        await asyncio.sleep(0.1)


if __name__ == "__main__":
    asyncio.run(AsyncTask().run())

 mul...]]></description><link>https://zenn.dev/tsugumisys/articles/164bb9a237d255</link><guid isPermaLink="true">https://zenn.dev/tsugumisys/articles/164bb9a237d255</guid><pubDate>Fri, 23 Aug 2024 13:18:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oAzb1uXX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Python%2520multithreading%2520and%2520multiprocessing%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsugumi-sys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjZGU4NDM0N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsugumi-sys</dc:creator></item><item><title><![CDATA[レンタルサーバー上でpythonプログラムを定期実行するまでの記録]]></title><description><![CDATA[
 やりたいこと
webサイト上の情報を取得してメール／Slack／LINEあたりに通知するプログラムを3時間おきに自動で回したい。ていうかどんなプログラムでもいいからサーバー上にファイル置いて定期実行するっていうのをできるようになりたい
ほんとにこれ、PC閉じてても勝手に動作してくれる本当の意味での自動化をしてみたいのよ
https://gammasoft.jp/vps/

 現状
いったんなんでもいいからスクレイピングするプログラム書いた。ヤフーファイナンスからランキングとってくるやつ
from selenium import webdriver
from selenium.webd...]]></description><link>https://zenn.dev/yama112/articles/7b58088166758c</link><guid isPermaLink="true">https://zenn.dev/yama112/articles/7b58088166758c</guid><pubDate>Fri, 23 Aug 2024 10:38:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HstVi-2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E4%25B8%258A%25E3%2581%25A7python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWN2eEpXcmRvMGxFRnBMdlJJUnVZd3c3N2g2Nk42VHNrTERmMFM0TzhXUElHdGRxUWtwdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamada</dc:creator></item><item><title><![CDATA[RAGに本気で向き合ってみた - 開発の苦労と工夫とヒント]]></title><description><![CDATA[
 はじめに

みなさんRAG本気でやってます？
私はここ半年ほどプライベートでRAGに本気で向き合ってみました。
（※普段の仕事はアプリエンジニアなので、業務でLLMにはほぼ触れていません。）
RAGで精度が出ないという話はよく聞きます。
LLMがアプリケーションに載らないと、このままAIブームが終わってしまいます。
モデルの精度が高まった今、アプリの時代にしなければなりません。
全てのアプリエンジニアはLLMに目覚めてください。
この記事では、RAGの精度向上に向けて、自分が試したこととそのコスト・効果について書いていきます。

 RAGとは
RAGについては、他の多くの記事で解説さ...]]></description><link>https://zenn.dev/immedio/articles/a5fc6dfd9952cf</link><guid isPermaLink="true">https://zenn.dev/immedio/articles/a5fc6dfd9952cf</guid><pubDate>Fri, 23 Aug 2024 10:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wt9J3Ky3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RAG%25E3%2581%25AB%25E6%259C%25AC%25E6%25B0%2597%25E3%2581%25A7%25E5%2590%2591%25E3%2581%258D%25E5%2590%2588%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520-%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E8%258B%25A6%25E5%258A%25B4%25E3%2581%25A8%25E5%25B7%25A5%25E5%25A4%25AB%25E3%2581%25A8%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:n%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlZjc0OTgxOWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:immedio%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3N2M0MjNmODkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-365｜A - Leap Year]]></title><description><![CDATA[
 設問ページ

🔗ABC-365 A - Leap Year



 提出結果
def getInt():
    return int(input())


def main():
    Y = getInt()

    if Y % 4 &gt; 0:
        print(365)
    elif Y % 400 == 0:
        print(366)
    elif Y % 100 == 0:
        print(365)
    else:
        print(366)


if __name__ == "__main__":
    ...]]></description><link>https://zenn.dev/hyperdb/articles/b9792866750fca</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/b9792866750fca</guid><pubDate>Fri, 23 Aug 2024 08:03:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rXTFQHAv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-365%25EF%25BD%259CA%2520-%2520Leap%2520Year%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-366｜B - Vertical Writing]]></title><description><![CDATA[
 設問ページ

🔗ABC-366 B - Vertical Writing



 提出結果
def getInt():
    return int(input())


def getStringRow(N):
    return [input() for _ in range(N)]


def main():
    N = getInt()
    S = getStringRow(N)
    S.reverse()

    for i in range(max([len(w) for w in S])):
        T = ""
        for s in...]]></description><link>https://zenn.dev/hyperdb/articles/8057ce2469f18d</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/8057ce2469f18d</guid><pubDate>Fri, 23 Aug 2024 08:03:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--br_O0_rQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-366%25EF%25BD%259CB%2520-%2520Vertical%2520Writing%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-366｜A - Election 2]]></title><description><![CDATA[
 設問ページ

🔗ABC-366 A - Election 2



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    N, T, A = getIntMap()

    print("No" if T &lt;= N // 2 and A &lt;= N // 2 else "Yes")


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/4106071cb789fe</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/4106071cb789fe</guid><pubDate>Fri, 23 Aug 2024 08:03:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--719MSfaY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-366%25EF%25BD%259CA%2520-%2520Election%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item></channel></rss>