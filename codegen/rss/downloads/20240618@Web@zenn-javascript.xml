<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 18 Jun 2024 06:18:35 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ChatGPTのようなタイプライターエフェクトを簡単に実装できるJSライブラリ: TypeIt]]></title><description><![CDATA[
最近、ChatGPTなどで見かけるようになったタイプライターエフェクト。文字が一文字ずつ表示されるあれ、あなたも一度は見たことがあるのではないでしょうか？
私はこのエフェクトが大好きで、自身のプロジェクトでも使ってみたいと思いました。しかし、一から実装するのは大変そう...と思っていたところ、素晴らしいライブラリを見つけました。その名も「TypeIt」です。
TypeItは、ウェブ上で柔軟で動的なタイピング・タイプライターエフェクトを作成するためのJavaScriptライブラリです。このライブラリの存在を知って触ってみたら、その使いやすさと多機能さに感動。これは多くの人に知ってもらいた...]]></description><link>https://zenn.dev/kg_lens/articles/cdb7a85fac25f1</link><guid isPermaLink="true">https://zenn.dev/kg_lens/articles/cdb7a85fac25f1</guid><pubDate>Tue, 18 Jun 2024 06:17:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ld1WhMld--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25A8%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BJS%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%253A%2520TypeIt%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KG%2520%257C%2520%25E3%2583%259D%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnFrMzFCTVQtcHpLYWFKR21mcU83UHVwVzZDZ0VFUVlpMlVzSi09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KG | ポーカー</dc:creator></item><item><title><![CDATA[Javascriptのことを調べていたら「ランタイム」について知らな過ぎたので調べた]]></title><description><![CDATA[この度、株式会社天地人エンジニアチームでは、念願のエンジニア技術ブログの立ち上げ～運用体制の整備が整いました。記念すべき第一回を担当するのは、Webアプリケーションエンジニア兼エンジニアリングマネージャの高瀬（@k_tacafe）です。
今回のテーマは「ランタイム」です。つい先日、Software Design 2024年6月号の ［実証］Bun 次世代JavaScriptランタイムの実体に迫る を読もうかと思った際に、JavaScriptのランタイムとかエンジンって何のことだっけ？いや、そもそも「ランタイム」ってちゃんと分かっていないよね？？という想いが湧きあがりましたので、今日はラン...]]></description><link>https://zenn.dev/tenchijin/articles/20240618_runtime</link><guid isPermaLink="true">https://zenn.dev/tenchijin/articles/20240618_runtime</guid><pubDate>Tue, 18 Jun 2024 03:24:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qci5y6aI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2582%2589%25E3%2580%258C%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2580%258D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E9%2581%258E%25E3%2581%258E%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JAXA%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25EF%25BC%2588%25E6%25A0%25AA%25EF%25BC%2589%25E5%25A4%25A9%25E5%259C%25B0%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1NDZmZjY5N2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JAXAベンチャー（株）天地人</dc:creator></item><item><title><![CDATA[JavaScriptで始めるProtocol Buffers(protobuf)]]></title><description><![CDATA[
 この記事について
元々はGoogleが開発した基盤技術で、オープンソース化されたProtocol Buffers(protobuf)。
手軽に理解するために、JavaScriptでの実装を通してprotobufを学ぶことが本記事の目的。


Client側: React.jsで作成した簡易的なWebアプリ
Backend側: node.js(express利用)で作成した簡易的なAPIサーバー

□ Client/Backend APIの両方でJavaScriptを利用してprotobuf(Protocol Buffers)を使う。
□ Clientでprotobufの定義を使いen...]]></description><link>https://zenn.dev/ringo_to/articles/8694525cb4323c</link><guid isPermaLink="true">https://zenn.dev/ringo_to/articles/8694525cb4323c</guid><pubDate>Mon, 17 Jun 2024 22:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0okSqJx8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BProtocol%2520Buffers%2528protobuf%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akide_su%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmNmM2YzZkYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akide_su</dc:creator></item><item><title><![CDATA[Next.jsでWarning: Extra attributes from the serverエラー]]></title><description><![CDATA[Next.jsで
npm run dev
実行後、localhost:3000にchromeでアクセスしたところ、下記のエラーが発生した。
Warning: Extra attributes from the server: data-google-analytics-opt-out
調査をしてみると、chromeの拡張機能(extensions)が悪さをしているらしく、さっそく、使っていない拡張機能をオフにしたところエラーがなくなった。
]]></description><link>https://zenn.dev/maito/articles/b5009dd3c558a1</link><guid isPermaLink="true">https://zenn.dev/maito/articles/b5009dd3c558a1</guid><pubDate>Mon, 17 Jun 2024 14:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1DPabYN0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7Warning%253A%2520Extra%2520attributes%2520from%2520the%2520server%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjOTE0YzE4YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maito</dc:creator></item><item><title><![CDATA[【javascript】for-in, for-ofの挙動と使い方]]></title><description><![CDATA[
 はじめに
 以前にforEach文の使用について調査して以降、for-in, for-ofを使用しておきながら、細かい仕様をすっかり忘れてしまっていたので、勉強も兼ねてまとめてみる。

 内容
 まず、for-in、for-ofについての概要を説明する。
for-inは連想配列に対し、その「プロパティ」を順番に取り出す。
for-ofは列挙可能なオブジェクト（配列など、値が順番に並んでいる様なオブジェクト）に対し、その「値」を順番に取り出す。

for-in, for-of
let memberObj = {
    name: '田中',
    age: 16,
    from...]]></description><link>https://zenn.dev/murimuriko/articles/8796610ef8ab58</link><guid isPermaLink="true">https://zenn.dev/murimuriko/articles/8796610ef8ab58</guid><pubDate>Mon, 17 Jun 2024 14:44:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vqqO3T6n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590javascript%25E3%2580%2591for-in%252C%2520for-of%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2582%258A%25E3%2582%2580%25E3%2582%258A%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JNa0lieEdJMkZGU1hSVURJb09NT1owVG5RNjFHcVNoRGdpdVZRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むりむりこ</dc:creator></item><item><title><![CDATA[window.top.location.hrefの話]]></title><description><![CDATA[
 window.top.location.href...？
GASでHTMLを公開している時に、window.location.hrefでは対応できず
window.top.location.hrefを使用する箇所があり
違いが分かっていなかったので違いとそもそも何なのかをメモ

 そもそもwindow.locationとは？
window.locationは、JavaScriptで現在のウィンドウやフレームのURLに関する情報を操作するためのオブジェクト。
このオブジェクトを利用することで、
現在表示されているページのURLを取得したり、変更したりすることができる。
window.l...]]></description><link>https://zenn.dev/zenn_rr/articles/4c5226be42c6d8</link><guid isPermaLink="true">https://zenn.dev/zenn_rr/articles/4c5226be42c6d8</guid><pubDate>Mon, 17 Jun 2024 13:16:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--97LnDbvs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:window.top.location.href%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NWNhMDI0NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sto</dc:creator></item><item><title><![CDATA[SECCON Beginners CTF 2024 Writeup]]></title><description><![CDATA[
 初めに
こんにちはfumi0916です。
seccon beginners ctf 2024にJR.FOLKSというチームとして参加しました。
今回はその振り返りとか感想とかを書いていきたいと思います。

 結果
僕はwebの問題２問と、miscの問題１問の計３問の問題を正解しました。
チーム全体の成績としてはこんな感じです。


 getRank (misc)

僕は主にwebの問題を担当する予定だったのですが、最初になんとなくこの問題を開いたらwebに係してそうだったので解くことにしました。
この問題はwebサイト上の数当てゲームで数を当てていきスコアを上げてサイト内のラインキン...]]></description><link>https://zenn.dev/fumi0916/articles/2fb58d62a44b57</link><guid isPermaLink="true">https://zenn.dev/fumi0916/articles/2fb58d62a44b57</guid><pubDate>Mon, 17 Jun 2024 12:59:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ojmaE-gS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:SECCON%2520Beginners%2520CTF%25202024%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fumi0916%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN1ZQTUlBQzdZNEFhQUUyMW8walFVM05ianI2VHhoR2k4TWROYzRGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fumi0916</dc:creator></item><item><title><![CDATA[JavaScriptでスクロール処理を実装するのに便利なscrollIntoViewがAndroid Chromeで動かなくて焦った件]]></title><description><![CDATA[
 スクロール処理の実装に便利な scrollIntoView

Webページ内の特定の要素を画面に表示される領域までスクロールさせることができます。
しかも、簡潔に実装できます。とっても便利です。
const targetElement = document.getElementById('elementId');
targetElement?.scrollIntoView();
window.scroll や window.scrollTo などを利用して、同挙動を実現することは可能です。
ただ、特定の要素の位置座標を取得するロジックが必要になるなど、scrollIntoView よ...]]></description><link>https://zenn.dev/lclco/articles/3b5a74133730c3</link><guid isPermaLink="true">https://zenn.dev/lclco/articles/3b5a74133730c3</guid><pubDate>Mon, 17 Jun 2024 12:40:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q1gASgzd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAscrollIntoView%25E3%2581%258CAndroid%2520Chrome...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258A%25E3%2581%25A8%25E3%2581%25AE%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzlhY2Y4M2EuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LCL%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMGE0NGYzM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おとの</dc:creator></item><item><title><![CDATA[The next-generation pluggable version manager: proto]]></title><description><![CDATA[
 はじめに
とってもクール😎な次世代バージョン管理ツール proto の紹介です！

 対象とする読者

言語・ランタイム・パッケージマネージャのバージョン管理をしたい
環境を汚したくない

Volta や mise (rtx) との違いを知りたい


 proto とは？
言語・ランタイム・パッケージマネージャ、様々なツールのバージョン管理ができるunified toolchainです。

proto is a pluggable version manager, a unified toolchain.

https://moonrepo.dev/docs/proto

 対応して...]]></description><link>https://zenn.dev/iput_app/articles/8b2bd627c061a4</link><guid isPermaLink="true">https://zenn.dev/iput_app/articles/8b2bd627c061a4</guid><pubDate>Mon, 17 Jun 2024 08:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---tTz7oCC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:The%2520next-generation%2520pluggable%2520version%2520manager%253A%2520proto%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wiyco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg4M2Q2OTAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2580%2590IPUT%25E3%2580%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTJiNGUyZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wiyco</dc:creator></item><item><title><![CDATA[疑似3Dであっさりアウトラン]]></title><description><![CDATA[
 アウトランとは!?
アウトランは、1980年代にゲームセンターを大いに賑わせた大人気カーレースゲームです。
今回は疑似3Dで、アウトランの様なスピード感ある演出に挑戦してみます。(せ〜がぁ〜♬)
※重要でない箇所は解説を省略しておりますので予めご了承下さい

完成イメージ
ここでは、描画にOpenProcessingを利用します。
使い方に関しては、p5.jsをかじる本を参考にして頂けると幸いです。

 疑似3Dとは
疑似3Dとは、3D座標(x,y,z)を2D座標(x,y)に変換する手法の事を言います。
文字通り、"擬似的に3Dを表現する"という意味ですね。
疑似3Dでは、次の手順に...]]></description><link>https://zenn.dev/sdkfz181tiger/articles/5b96fc307510a3</link><guid isPermaLink="true">https://zenn.dev/sdkfz181tiger/articles/5b96fc307510a3</guid><pubDate>Sun, 16 Jun 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JTXwvyX1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2596%2591%25E4%25BC%25BC3D%25E3%2581%25A7%25E3%2581%2582%25E3%2581%25A3%25E3%2581%2595%25E3%2582%258A%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2598%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxM2MwMGU4MGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かじる</dc:creator></item><item><title><![CDATA[satisfies で exhaustiveness check]]></title><description><![CDATA[
 TL;DR
type A = "a" | "b" | "c";

function exhaustive(v: A) {
  switch (v) {
    case "a":
      return "A";
    case "b":
      return "B";
    case "c":
      return "C";
    default:
      return v satisfies never; // check exhaustiveness
  }
}

 はじめに
TypeScriptにsatisfies文が追加されて久しいですね。
satisf...]]></description><link>https://zenn.dev/ryoppippi/articles/ac1c2b46dcc0ed</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/ac1c2b46dcc0ed</guid><pubDate>Sun, 16 Jun 2024 17:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WgQe9P6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:satisfies%2520%25E3%2581%25A7%2520exhaustiveness%2520check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[Google Apps Script（GAS）でSlackに当番通知Botを作成！]]></title><description><![CDATA[
 目的
掃除当番、お花の水やり当番、給食当番など色々な当番がありますが、その日の当番って意外と忘れがちで『今日の当番って誰？』ってことありませんか？今の会社では朝会のファシリテーター（進行役）をメンバーで回しているのですが、意外と当番を忘れがちです。今回はそんなことを無くすために当番通知Botを作成してみました！

 方針
まず、スプレッドシートに『当番シート』と『祝日シート』を作成し、関数を使い営業日とその日の当番を書いたテーブルを用意します。次に、Slackに通知するためにメンバーとSlackのIDを持つテーブルを用意し、GASで当日の当番を通知するコードを書いていきます。

 実...]]></description><link>https://zenn.dev/tekuteku_1104/articles/c79e34780c1fbd</link><guid isPermaLink="true">https://zenn.dev/tekuteku_1104/articles/c79e34780c1fbd</guid><pubDate>Sun, 16 Jun 2024 17:24:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1y4rhFYb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Apps%2520Script%25EF%25BC%2588GAS%25EF%25BC%2589%25E3%2581%25A7Slack%25E3%2581%25AB%25E5%25BD%2593%25E7%2595%25AA%25E9%2580%259A%25E7%259F%25A5Bot%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2589%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXpEY2hVU3MzQzNvODYydUZ1dHlmZ1hERUZYRnl0ZWZncnphOHg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>らっしー</dc:creator></item><item><title><![CDATA[総当たりケース作成]]></title><description><![CDATA[
 概要
Googleスプレッドシートで見出しとケースパターンを記載すると、総当たりの表を作成する処理。



設定値入力シート
結果出力シート









画像の例は子音、母音、濁点の有無でマトリクスを作った場合の入力例。
「や行」は「い」と「え」の文字が無い、「あ行」は濁点が無い、などの除外条件が思いつきやすく、ケースが3種類あるのでこれをサンプルとした。

 入力値の仕様

 タイトル
セルにケースのタイトルを記載する。
種類を増やす場合は列方向に伸ばしていく。

 ケース
タイトルに対するケースをセル内改行で複数記載する。

 除外ケース
総当たりのためにケースを並べた時点...]]></description><link>https://zenn.dev/modokisealsky/articles/f8e7be20996ce9</link><guid isPermaLink="true">https://zenn.dev/modokisealsky/articles/f8e7be20996ce9</guid><pubDate>Sun, 16 Jun 2024 11:41:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0rc0SZJS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%258F%25E5%25BD%2593%25E3%2581%259F%25E3%2582%258A%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2582%2582%25E3%2581%25A9%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkMDI1ZDRiMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>開発者もどき</dc:creator></item><item><title><![CDATA[一瞬で理解するHydration]]></title><description><![CDATA[
 はじめに
この記事の内容は、以下の動画でも解説しているので是非見てみてください！（動画の方が多分わかりやすいです！）
https://youtu.be/PyXbb8YqaNg?si=tu3MPODwvaQjKe9-

 Hydrationとは？
Hydration（ハイドレーション）とは、直訳すると「水分補給」という意味です。
フロントエンドの世界では、静的な HTML に JavaScript を結び付けてインタラクティブにするプロセスのことを指します。
例えば、React で SSR する場合を考えてみましょう。

SSR では、まずブラウザはサーバーに対して、リクエストを送信し...]]></description><link>https://zenn.dev/ak/articles/dd60f8b1712628</link><guid isPermaLink="true">https://zenn.dev/ak/articles/dd60f8b1712628</guid><pubDate>Sun, 16 Jun 2024 10:52:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IjR7rDzQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258BHydration%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YTNhNmZhNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki</dc:creator></item><item><title><![CDATA[type と interface の違いがよくわからない]]></title><description><![CDATA[タイトルの通り、違いがよくわからなかったので調べました。
結論、どちらもできることはほとんど同じで、使うシーンや拡張の方法や少し異なるだけでした。

 基本的な使い方
// 基本的な型エイリアス
type ID = number | string;

// オブジェクト型のエイリアス
type User = {
name: string;
age: number;
};

// 関数型のエイリアス
type Greet = (name: string) =&gt; string;

// オブジェクトのインターフェース
interface User {
name: string;
age...]]></description><link>https://zenn.dev/surume3/articles/33cfb159119a84</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/33cfb159119a84</guid><pubDate>Sun, 16 Jun 2024 09:34:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fO4pi6oX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type%2520%25E3%2581%25A8%2520interface%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[! (Non-null assertion )や ?.  (Optional chaining)についてまとめてみる]]></title><description><![CDATA[Javascript や typescript の学習を進めていると、 !  や ? といった演算子がちょくちょく登場するのですが、理解が曖昧のため使い方を整理して理解を深めたいと思います。

 ! (Non-null assertion operator / 非null アサーション)
これは、型チェックをする際に、null また undefined の可能性を無視することをコンパイラに伝えるものです。
使い方
let foo: string | undefined;
foo = "Hello";
console.log(foo!.length);  // ! を入れることで、コンパイ...]]></description><link>https://zenn.dev/surume3/articles/70d435329ac363</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/70d435329ac363</guid><pubDate>Sun, 16 Jun 2024 09:00:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i8KJH_Cd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2521%2520%2528Non-null%2520assertion%2520%2529%25E3%2582%2584%2520%253F.%2520%2520%2528Optional%2520chaining%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[あれ？CUID作られないんだけど？]]></title><description><![CDATA[
 あれ？PostgresでCUID作られないんだけど？
Nuxt3のアプリケーションでPrismaを使っているときに、PostgresデータベースでCUIDが生成されない問題についてお話しします。

 前提条件

Nuxt3のアプリケーションでPrismaを使用しています。
データベースにはPostgresを使用しています。
ユーザーに自動インクリメントのIDを表示したくない場合があるので、UUIDを使用しています。


 問題の背景
開発中にDBにSQLクライアントから手動でサンプルデータを追加したいシーンがあると思います。
ユーザーテーブルにUUIDカラムをdefault cuid...]]></description><link>https://zenn.dev/kosuke_ito/articles/ac5014359221ff</link><guid isPermaLink="true">https://zenn.dev/kosuke_ito/articles/ac5014359221ff</guid><pubDate>Sun, 16 Jun 2024 07:53:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZyuAJsPp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2582%258C%25EF%25BC%259FCUID%25E4%25BD%259C%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kosuke%2520ito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1ZDE2NTk1ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kosuke ito</dc:creator></item><item><title><![CDATA[JavaScriptクイズ: JSON.parseできるけどJSとして有効でないことはある？]]></title><description><![CDATA[以下のクイズの解説を書きます。
JavaScriptクイズ: 以下の関数はtrueを返すことがある？
function quiz(s) {
  if (typeof s !== 'string') return false;
  try { JSON.parse(s); } catch { return false; }
  try { eval('(' + s + ')'); } catch { return true; }
  return false;
}
※ ただし、 JSON や eval を外のスコープから置き換える、といったことは禁止。
バージョンはES2023 (ECMA...]]></description><link>https://zenn.dev/luma/articles/javascript-quiz-json-but-not-js</link><guid isPermaLink="true">https://zenn.dev/luma/articles/javascript-quiz-json-but-not-js</guid><pubDate>Sun, 16 Jun 2024 06:50:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cn23pnwY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%253A%2520JSON.parse%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%2591%25E3%2581%25A9JS%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%259C%2589%25E5%258A%25B9%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lnRFRSQVhGMGJ1cUs3cXg4NGdUYlVNU3RlZnVVekdiN0p0Q0hWRFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luma</dc:creator></item><item><title><![CDATA[[React]クリックしたらメニューがすぐ側に出現するUXを汎用的なコンポーネントに落とし込んでみた]]></title><description><![CDATA[
 はじめに
しばしば見かける以下のようなUXを、誰でも扱えるコンポーネントとして実装してみたので解説します。


 完成系

以下にて、ソースコードを公開しております。

https://github.com/yu-ta-9/yuta9-storybook-v2/tree/main/src/components/tools/MenuModalPortal

 解説

以下、該当のコンポーネントをMenuModalPortalと呼称します。


 Props設計
&lt;MenuModalPortal
    buttonElement={
        &lt;button type...]]></description><link>https://zenn.dev/yu_ta_9/articles/a9e5dce4ca21bd</link><guid isPermaLink="true">https://zenn.dev/yu_ta_9/articles/a9e5dce4ca21bd</guid><pubDate>Sun, 16 Jun 2024 01:44:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9O2R-96i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%255D%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%258C%25E3%2581%2599%25E3%2581%2590%25E5%2581%25B4%25E3%2581%25AB%25E5%2587%25BA%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BUX%25E3%2582%2592%25E6%25B1%258E%25E7%2594%25A8%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YU-TA-9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNzU2NmM5MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YU-TA-9</dc:creator></item><item><title><![CDATA[いまさら、Next.jsを調べてみる]]></title><description><![CDATA[
 ごあいさつ
こんにちは！
オアシステクノロジーズの山本です。
いまや、フロントエンド開発において必須となっているJavaScriptフレームワークですが、
デファクトスタンダード（業界標準）となっている！？ReactとNext.jsについて整理してみたいと思います。
どなたかの製品選定等に役立てば幸いです。

 フロントエンドのデファクトスタンダードなJSライブラリとは
フロントエンドの開発に携わっているかたで、以下のJSライブラリは聞いたことがあるかと思います。

React（Next.js)
Vue.js
Angular
Svelte
jQuery

Next.jsはReactの...]]></description><link>https://zenn.dev/oasys/articles/78c7c2d5d7f6ba</link><guid isPermaLink="true">https://zenn.dev/oasys/articles/78c7c2d5d7f6ba</guid><pubDate>Sun, 16 Jun 2024 00:00:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nigOVW6B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E3%2580%2581Next.js%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMGUxYmY0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オアシステクノロジーズ</dc:creator></item></channel></rss>