<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 10 Sep 2024 02:05:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScriptの簡易ランダム英数文字列生成]]></title><description><![CDATA[
TypeScript(JavaScript)でHTMLタグのid属性に使用できる簡易的なユニークな英数ランダム文字列生成機が欲しくなり実装した備忘メモです。

 前提

英数文字列で構成される任意長の文字列を生成する

ただし最初の文字は数字にしない


大文字と小文字は区別する
実装の簡単化のためz|Zは含まない
文字列長は指定可能にする
必要に応じてユニーク保証回数の制限を設定可能にする


 実装
codeclass HtmlIds {
  #limit = Number.POSITIVE_INFINITY;
  #length;
  #store = new Set&lt;st...]]></description><link>https://zenn.dev/scirexs/articles/aef93447b35fda</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/aef93447b35fda</guid><pubDate>Mon, 09 Sep 2024 21:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iYcum3q9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E8%258B%25B1%25E6%2595%25B0%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[Vercel AI SDK Core + Gemma 2を使って記事のカテゴリ分類タスクを開発する]]></title><description><![CDATA[Vercel AI SDKはLLMを活用したアプリケーションを構築できるように設計されたTypeScript製のツールキットです。チャットボットの構築に伴う定型的なコードを排除して、本質的な部分の開発に集中することを可能にします。
しかしVercel AI SDKは何もチャットボット開発だけに使えるわけではありません。たとえばLangChainのように様々なモデルとツールを組み合わせて、複雑なタスクを解決するデータパイプラインを構築することも可能です（Pythonの豊富なライブラリと比べるとまだまだ実現できることは限定的ですが）。
Vercel AI SDKは、主に次の3つのコンポーネン...]]></description><link>https://zenn.dev/laiso/articles/a6a7b4864a713f</link><guid isPermaLink="true">https://zenn.dev/laiso/articles/a6a7b4864a713f</guid><pubDate>Mon, 09 Sep 2024 11:47:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gXf3uhvC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520AI%2520SDK%2520Core%2520%252B%2520Gemma%25202%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2588%2586%25E9%25A1%259E%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>laiso</dc:creator></item><item><title><![CDATA[useSelectorを使った効率的なState参照方法（分割代入の活用）]]></title><description><![CDATA[React ReduxのuseSelectorを使ってStateを参照する際、以下のようにState全体から特定のプロパティを参照することが一般的なのかなと思っていました。
const broadcastState = useSelector(state =&gt; state.broadcast);
ただ、この場合、broadcastStateに格納されたオブジェクトのプロパティを使うたびに、常にbroadcastState.をつけて参照しなければなりません。
例えば、broadcastsやnextを参照する場合は次のようになります。
if (broadcastState.broadc...]]></description><link>https://zenn.dev/kingdom0927/articles/5b84a9742efcde</link><guid isPermaLink="true">https://zenn.dev/kingdom0927/articles/5b84a9742efcde</guid><pubDate>Mon, 09 Sep 2024 10:36:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qmkDRtyv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useSelector%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AAState%25E5%258F%2582%25E7%2585%25A7%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parapone1005%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWZlYWI5M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>parapone1005</dc:creator></item><item><title><![CDATA[markdown テーブルを表形式データに変換]]></title><description><![CDATA[
 はじめに
本記事では「Markdown テーブルの文字列を、表計算ソフト（例：Microsoft Excel や Google Sheets など）のデータに変換する」ことを目的とし、その実装を考えていきます。なお 実際の動き（利用方法）としては、下記のようになります。


markdown テーブルのテキストを、コピーしてフォームに貼り付け
フォーム内容を基に、tsv( Tab-Separated Values ) 形式のテキストデータを作成する

クリップボードを経由して、表計算ソフトへ貼り付け（markdown テーブルでの行列構造を維持）

クリップボードについての話は、最下...]]></description><link>https://zenn.dev/nonaka101/articles/markdown-to-excel</link><guid isPermaLink="true">https://zenn.dev/nonaka101/articles/markdown-to-excel</guid><pubDate>Mon, 09 Sep 2024 02:47:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wabqk5fs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:markdown%2520%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%2592%25E8%25A1%25A8%25E5%25BD%25A2%25E5%25BC%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nonaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YWMyOGJiZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nonaka</dc:creator></item><item><title><![CDATA[【JavaScript】String.prototype.indexOf()のイメージ]]></title><description><![CDATA[
 まとめ
indexOf()は文字列内の特定の文字列を検索する際に使います
const anyString = "abcdef";

//第一引数は検索したい文字列
//戻り値は、検索した文字列が最初に見つかったインデックス
console.log(anyString.indexOf("cd"));//2

//検索した文字列が見つからなかった場合、-1を返す
console.log(anyString.indexOf("あ"));//-1

//第二引数はオプション。検索範囲の開始インデックスを指定できる
//第二引数のデフォルトは0
console.log(anyString.in...]]></description><link>https://zenn.dev/417yr/articles/3bd919607bf975</link><guid isPermaLink="true">https://zenn.dev/417yr/articles/3bd919607bf975</guid><pubDate>Sun, 08 Sep 2024 17:42:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EDyyxmI4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591String.prototype.indexOf%2528%2529%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:417yr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3ZDQ5MjM1NmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>417yr</dc:creator></item><item><title><![CDATA[【JavaScript】String.prototype.substring() のイメージ]]></title><description><![CDATA[
 まとめ
substring()は、
元の文字列から削り取っていくようなイメージです
const anyString = "0123456";

//第一引数は、戻り値となる部分文字列の開始インデックス
console.log(anyString.substring(2)); // "23456"

//第二引数は戻り値となる部分文字列から除外される最初のインデックス
console.log(anyString.substring(2, 5)); // "234"

//第一引数と第二引数が等しい場合、空の文字列を返す
console.log(anyString.substring(2...]]></description><link>https://zenn.dev/417yr/articles/89a91e2918a8c3</link><guid isPermaLink="true">https://zenn.dev/417yr/articles/89a91e2918a8c3</guid><pubDate>Sun, 08 Sep 2024 14:40:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0U65UZXA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591String.prototype.substring%2528%2529%2520%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:417yr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3ZDQ5MjM1NmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>417yr</dc:creator></item><item><title><![CDATA[[React]お問い合せフォーム]]></title><description><![CDATA[
 お問い合せフォーム作成
フォームのJSXは、HTMLと違った書き方をする😯🩵

⭐️またフォーム全体は&lt;form&gt;&lt;/form&gt;で囲むこと🪼
コード
js
import React from 'react';

class ContactForm extends React.Component {
  render() {
    return (
      &lt;div className='contact-form'&gt;
        &lt;form&gt;
          &lt;p&gt;メールアドレス（必須）&lt;/p&gt;
  ...]]></description><link>https://zenn.dev/takeda_kaho/articles/73cdded78535eb</link><guid isPermaLink="true">https://zenn.dev/takeda_kaho/articles/73cdded78535eb</guid><pubDate>Sun, 08 Sep 2024 11:10:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KutjOi-Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%255D%25E3%2581%258A%25E5%2595%258F%25E3%2581%2584%25E5%2590%2588%25E3%2581%259B%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takepanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZWRlZDIyZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takepanda</dc:creator></item><item><title><![CDATA[【React】map()のkeyにindexの利用が推奨されない理由]]></title><description><![CDATA[Next.jsを書いているときにmap()を多用します。
mapのkeyにindexを使うのことが良くないことは知っていたのですが、理解が不十分だと感じたのでまとめます。

 keyとは？
公式サイトに以下のように書かれています。

配列内の他のアイテムと区別できるようにするための一意な文字列ないし数値のこと。


key は、配列のどの要素がどのコンポーネントに対応するのかを React が判断し、後で正しく更新するために必要です。これが重要となるのは、配列の要素が移動（ソートなどによって）した場合、挿入された場合、あるいは削除された場合です。適切に key を選ぶことで、React ...]]></description><link>https://zenn.dev/yuomatsu/articles/e8bd3f5f55de2f</link><guid isPermaLink="true">https://zenn.dev/yuomatsu/articles/e8bd3f5f55de2f</guid><pubDate>Sun, 08 Sep 2024 08:12:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fTB-DDo0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591map%2528%2529%25E3%2581%25AEkey%25E3%2581%25ABindex%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%258C%25E6%258E%25A8%25E5%25A5%25A8%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZGMwNmE4ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆう</dc:creator></item><item><title><![CDATA[なぜ非同期処理？ Node.jsの実装から読み解く Fetch API の response.json()]]></title><description><![CDATA[皆さんはなぜ Fetch API の res.json() が非同期処理なのか、不思議に思ったことはありませんか？
const response = await fetch("https://jsonplaceholder.typicode.com/todos/");
console.log(response.headers.get("content-type")); // application/json; charset=utf-8
const jsonData = await response.json(); // なぜ非同期処理なのか？
私は最初、JSON パースの処理を Web...]]></description><link>https://zenn.dev/ryomaejii/articles/a55f428609ffc5</link><guid isPermaLink="true">https://zenn.dev/ryomaejii/articles/a55f428609ffc5</guid><pubDate>Sun, 08 Sep 2024 05:24:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RpQeyiXg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%259F%2520Node.js%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2520Fetch%2520API%2520%25E3%2581%25AE%2520response.json%2528%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryomaejii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzZTkxNGFjMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryomaejii</dc:creator></item><item><title><![CDATA[LogTape：JavaScript/TypeScript向けのシンプルで柔軟なロギングライブラリの紹介と使い方]]></title><description><![CDATA[こんにちは、皆さん。今回は、JavaScriptとTypeScript向けの新しいロギングライブラリ「LogTape」をご紹介します。
https://github.com/dahlia/logtape
ログ出力は開発者にとって欠かせない作業ですが、適切なツールがないと面倒で時間がかかることがあります。LogTapeは、この問題を解決するために設計された、シンプルでありながら強力なロギングライブラリです。
LogTapeの主な特徴は以下の通りです：


依存関係なし：LogTapeには依存関係がありません。LogTapeの依存関係を心配することなく使用できます。


ライブラリサポート：...]]></description><link>https://zenn.dev/hongminhee/articles/47e4985e1764fc</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/47e4985e1764fc</guid><pubDate>Sun, 08 Sep 2024 03:08:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Z6unlIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LogTape%25EF%25BC%259AJavaScript%252FTypeScript%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25A7%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AA%25E3%2583%25AD%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[Promiseチェーンを可変長にする方法]]></title><description><![CDATA[
 背景
Promiseチェーンは複数の非同期処理を順番に実行するための方法である。
例えば、以下のようなコードのことを指す。
const promise = new Promise((resolve, reject) =&gt; {
    setTimeout(() =&gt; resolve("First"), 1000);
});

promise
    .then(result =&gt; {
        console.log(result); // "First"
        return "Second";
    })
    .then(result =&g...]]></description><link>https://zenn.dev/yaona807/articles/2fe82db3275fe3</link><guid isPermaLink="true">https://zenn.dev/yaona807/articles/2fe82db3275fe3</guid><pubDate>Sat, 07 Sep 2024 07:19:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SWwFCDC9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Promise%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%258F%25AF%25E5%25A4%2589%25E9%2595%25B7%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yaona%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1QxSWFHM1NYaUIxOF9NS1FvTTV4MmpTRHJEeXJfbEFoU3BDTUZWSE5XX1VzRFJSWHU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yaona</dc:creator></item><item><title><![CDATA[ジュースの自販機にあるくじ引きを作りたい]]></title><description><![CDATA[
 作成物

JavaScriptで乱数を作って、クラス名を付与しただけ。

 参考リンク
CSSを駆使してDIV要素１つでデジタル数字を作る


 所感
これじゃない感。アニメーションでセグメントを動かしてくじ引きっぽくしないと。まだまだ。
]]></description><link>https://zenn.dev/taiyok/articles/6cfced2572d4cb</link><guid isPermaLink="true">https://zenn.dev/taiyok/articles/6cfced2572d4cb</guid><pubDate>Sat, 07 Sep 2024 02:07:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dglq7y3g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E8%2587%25AA%25E8%25B2%25A9%25E6%25A9%259F%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%25E3%2581%258F%25E3%2581%2598%25E5%25BC%2595%25E3%2581%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%2583%25E3%2582%25AF%25E5%25B1%258B%2540%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5NmJjOTA0YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マック屋@ソフトウェアエンジニア</dc:creator></item><item><title><![CDATA[Mapbox Newsletter WEEKLY TIPSの解説 -「データドリブンプロパティで円を設定」]]></title><description><![CDATA[
 はじめに
この記事は、先日配信されたMapbox NewsletterのWEEKLY TIPSで紹介されていた「データドリブンプロパティで円を設定」についての解説です。このサンプルではVectorソースの使い方を例示しています。また、Newsletterの購読はこちらからお申し込みいただけます。
以下が本サンプルのデモです。


 コードを確認
まずExamplesのコードを見に行きましょう。
日本語サイト

英語サイト

基本的に同じコードですが、英語版はスタイルがMapbox Light v11にアップグレードされているのでこちらを使用します。Mapbox Light v10では...]]></description><link>https://zenn.dev/mapbox_japan/articles/3f2151f38fc901</link><guid isPermaLink="true">https://zenn.dev/mapbox_japan/articles/3f2151f38fc901</guid><pubDate>Fri, 06 Sep 2024 14:21:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fP7RXo0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mapbox%2520Newsletter%2520WEEKLY%2520TIPS%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%2520-%25E3%2580%258C%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2589%25E3%2583%25AA%25E3%2583%2596%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25A7%25E5%2586%2586%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:OttyLab%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZWNmNDhhMWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhMGJmZWJmZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OttyLab</dc:creator></item><item><title><![CDATA[有名アプリをクローンして学ぶ講座一覧]]></title><description><![CDATA[Real World Exampleで学びたい

 トイアプリよりReal World Exampleで学びたい
新しいプログラミング言語、ジャンルでの開発を学ぶ上で本を読んだり公式ドキュメントを見るのは有用ですが、実際のプロダクションエンジニアとしてのお仕事プログラミングとは乖離があります。
本についているサンプルコードも一つの参考となりますがコード量は小さく局所的にしか参考にならなかったり、公式ドキュメントはレファレンスに徹底していてチュートリアルがなかったりそれぞれはまりどころがあったりします。
トイアプリより実際の業務コード(Real World Example)で学びたい！
最...]]></description><link>https://zenn.dev/hiromichinomata/articles/09dcd455442abe</link><guid isPermaLink="true">https://zenn.dev/hiromichinomata/articles/09dcd455442abe</guid><pubDate>Fri, 06 Sep 2024 13:34:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IyzranYl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2589%25E5%2590%258D%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%2597%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%25E8%25AC%259B%25E5%25BA%25A7%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiromichi%2520NOMATA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dKVzhiSzBKYjZ4cXc1MDFjSHFXXzJ1cmxiMGFMYmY5T3poY1RPUnc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiromichi NOMATA</dc:creator></item><item><title><![CDATA[CSR、SSR、SSGの違いを簡単にまとめる]]></title><description><![CDATA[
 CSR
クライアント側でjavaScriptを使用してページをレンダリングする。
初回ロードは速いが、コンテンツの表示には時間がかかることがある。（ユーザーにとっては遅く感じるかも）
一度ロードされるとページ間の遷移がスムーズです。
SEOによわい。

 SSR
サーバー側でHTMLを生成し、クライアントに送信する。
初回ロードが速く、ユーザーがすぐにコンテンツを見ることができる。javaScriptはあとからロードされる。
ページ移動時にリクエストが発生するため、遅延が生じることがある。
SEOにつよい（サーバーで完全なHTMLを生成するため）

 SSG
ビルド時に静的HTMLを...]]></description><link>https://zenn.dev/vertz/articles/a1855eb1282aea</link><guid isPermaLink="true">https://zenn.dev/vertz/articles/a1855eb1282aea</guid><pubDate>Fri, 06 Sep 2024 02:24:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pa3Y9Q14--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSR%25E3%2580%2581SSR%25E3%2580%2581SSG%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2590%25E3%2583%25BC%25E3%2583%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODQ3MmM1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>バーツ</dc:creator></item><item><title><![CDATA[Fetch]]></title><description><![CDATA[
 Fetch
サーバーからデータやファイルを取得する際に使用するWebAPIの一種。
fetch関数は非同期処理になる。
以下はfetchの例。
async function myFetch() {
  const response = await fetch("sample.json");
  const data = await response.json();
  for (const { key, value } of data) {
    console.log(key + ":" + value);
  }
}
myFetch();

sample.json
[
    ...]]></description><link>https://zenn.dev/kasai/articles/0908da7d0e8a05</link><guid isPermaLink="true">https://zenn.dev/kasai/articles/0908da7d0e8a05</guid><pubDate>Thu, 05 Sep 2024 16:06:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lkOGjm67--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Fetch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasai%2520Ukyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3F2dWdUMTdiRFNiQ0NDZ3NJNUNMa190ZUV4S25rWktMcDNiNVZlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasai Ukyo</dc:creator></item><item><title><![CDATA[async / await]]></title><description><![CDATA[
 async
関数の先頭につけることで非同期関数という特殊な関数を定義できる。
非同期関数のreturnが返す値は必ずPromiseインスタンスになる。
仮に非同期関数の戻り地がPromiseでない場合は暗黙的にPromiseでラップされた値が返る。
returnが定義されていない場合には、undefinedがラップされたPromiseインスタンスが返る。
//非同期関数の宣言
async function fn(){...};

 await
Promiseインスタンスの前に記述することで、Promiseのステータスがfulfilledかrejectedになるまで後続のコードの実行を...]]></description><link>https://zenn.dev/kasai/articles/34a78ded2a2aad</link><guid isPermaLink="true">https://zenn.dev/kasai/articles/34a78ded2a2aad</guid><pubDate>Thu, 05 Sep 2024 15:20:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--poECP7Ty--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:async%2520%252F%2520await%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasai%2520Ukyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3F2dWdUMTdiRFNiQ0NDZ3NJNUNMa190ZUV4S25rWktMcDNiNVZlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasai Ukyo</dc:creator></item><item><title><![CDATA[Promiseを使った並列処理]]></title><description><![CDATA[
 Promiseのステータス一覧
pending : resolve, rejectが呼び出される前の状態
fulfilled : resolveが呼び出された状態
rejected : rejectが呼び出された状態

 Promise.all
すべての非同期処理を並列に実行し、すべての完了を待ってから次の処理を行う。
与えられたPromiseインスタンスがfulfilledになった際に続くthenメソッドの処理に移る。その際にthenのコールバック関数の引数に渡されるのは各resolveに設定した実引数が格納された配列。
一つでもrejectedになればcatchメソッドに移る。
...]]></description><link>https://zenn.dev/kasai/articles/eb2bc89c28d28f</link><guid isPermaLink="true">https://zenn.dev/kasai/articles/eb2bc89c28d28f</guid><pubDate>Thu, 05 Sep 2024 14:27:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--81eorZF4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Promise%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasai%2520Ukyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3F2dWdUMTdiRFNiQ0NDZ3NJNUNMa190ZUV4S25rWktMcDNiNVZlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasai Ukyo</dc:creator></item><item><title><![CDATA[表形式データを markdown テーブルに変換]]></title><description><![CDATA[
 はじめに
本記事では「表計算ソフト（例：Microsoft Excel や Google Sheets など）のデータを、Markdown テーブル に変換する」ことを目的とし、その実装を考えていきます。なお 実際の動き（利用）としては、下記を想定しています。

表データをコピーする

クリップボードを経由して、テキスト形式（≒ tsv）でフォームに貼り付け
フォーム内容を基に、markdown テーブルを作成

クリップボードについての話は、最下段に補足として乗せておきます。

 その他紹介
本記事と逆のパターンも用意していますので、興味がある方は下記記事を参照してください。
ht...]]></description><link>https://zenn.dev/nonaka101/articles/excel-to-markdown</link><guid isPermaLink="true">https://zenn.dev/nonaka101/articles/excel-to-markdown</guid><pubDate>Thu, 05 Sep 2024 11:45:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XjKQldDP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A1%25A8%25E5%25BD%25A2%25E5%25BC%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%2520markdown%2520%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nonaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YWMyOGJiZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nonaka</dc:creator></item><item><title><![CDATA[WixStudioでVeloを使う Step 29 「CMSのサンドボックス」]]></title><description><![CDATA[
 はじめに

はじめに謝ります。まさかのVeloを使わない記事です。ごめんなさい。ただし、WixStudioにおける開発に全く関係ないというわけではありません。CMSの話です。そして開発に関わる話です。今後開発に取り組む上では役に立つし、お世話になる機能だと思うので記事にします。今回はCMSのサンドボックスに触れてみる。

 サンドボックスとは
そもそもサンドボックスとは何かって話ですが、平たく言えば検証用の環境。だから、CMSのサンドボックスとは本番公開用のデータではなくて、検証用のデータを管理するための仕組みと捉えればいい。

 必要？
必要。基本的にWix,WixStudioは公...]]></description><link>https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0029</link><guid isPermaLink="true">https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0029</guid><pubDate>Thu, 05 Sep 2024 08:01:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oPNrm_UO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WixStudio%25E3%2581%25A7Velo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520Step%252029%2520%25E3%2580%258CCMS%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Niibori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZDA4Mjg3YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niibori</dc:creator></item></channel></rss>