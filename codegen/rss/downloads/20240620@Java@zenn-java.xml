<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 20 Jun 2024 08:51:31 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[プロキシ認証を突破してApache Spark(pyspark)のconfigでjarを指定して追加する]]></title><description><![CDATA[昔Qiitaで
https://qiita.com/junkor-1011/items/b12ec62f2615d068c1a5
みたいな記事を書いたことがあるが、
プロキシ認証が必要な環境だと追加設定をしないと同じことが出来ないので、それについて調べてメモをしたもの。
すなわち、
from pyspark.sql import SparkSession

# 例としてApache Iceberg:
# https://mvnrepository.com/artifact/org.apache.iceberg/iceberg-spark-runtime-3.4
# のjarファイルを取得...]]></description><link>https://zenn.dev/junkor/articles/f2cd0eb267db0c</link><guid isPermaLink="true">https://zenn.dev/junkor/articles/f2cd0eb267db0c</guid><pubDate>Wed, 19 Jun 2024 15:30:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yIrOMlXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E7%25AA%2581%25E7%25A0%25B4%25E3%2581%2597%25E3%2581%25A6Apache%2520Spark%2528pyspark%2529%25E3%2581%25AEconfig%25E3%2581%25A7jar%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>7e+8</dc:creator></item><item><title><![CDATA[OpenTelemetryのBufferingとRetryについて]]></title><description><![CDATA[OpenTelemetryでTraceとればロックインを回避できてコストカットができると考えて会社で進めている。その中でよく受ける質問として、CollectorのSideCarが落ちたらデータがロストするのではないか、みたいな事をいわれる。
これは調べると半分あっていて、半分間違っているように見える。
データロストを防ぐ方法としては、RetryとBufferingがよく使われるが、OpenTelemetryではどのように実装されているかを確認する。

 SDKでやっていること
OpenTelemetryのSDKはTraceを作成して、logsにもtrace idやspan idを付与して...]]></description><link>https://zenn.dev/mickeey/articles/8a3c3b2a4891e2</link><guid isPermaLink="true">https://zenn.dev/mickeey/articles/8a3c3b2a4891e2</guid><pubDate>Wed, 19 Jun 2024 12:27:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hEptN1-C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenTelemetry%25E3%2581%25AEBuffering%25E3%2581%25A8Retry%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mickeey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hwcFZyc3E3LVYwc0FZUno1SXFPaTlmbTF1Uk50OEktSl91cE9XRVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mickeey</dc:creator></item><item><title><![CDATA[【Java】Stream APIを使ってグループごとの合計を求める]]></title><description><![CDATA[
 はじめに
JavaのStream APIとCollectorsを使用し、データを指定の属性でグループ化し、各グループの合計を求める方法を説明します
初めてのJavaの実装で手こずったので記事に残しました

 前提

 商品データ
以下は例として使用する商品データです



カテゴリ
ブランド
色
ID
商品名
価格
原価




トップス
Lunaire
白
T001
シルクブラウス
49.99
25.00


トップス
Lunaire
白
T002
レースタンクトップ
29.99
15.00


トップス
Lunaire
白
T004
カシミアセーター
79.99
50.00


...]]></description><link>https://zenn.dev/tara_is_ok/articles/d424d64d769f39</link><guid isPermaLink="true">https://zenn.dev/tara_is_ok/articles/d424d64d769f39</guid><pubDate>Wed, 19 Jun 2024 07:09:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zZbwtTsK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591Stream%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E5%2590%2588%25E8%25A8%2588%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tara%2520is%2520ok%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjFiNzc5NjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tara is ok</dc:creator></item><item><title><![CDATA[javaとkotlinの文法比較]]></title><description><![CDATA[想定読者

javaを普段使っている
kotlinをこれから使いたい or 使う予定がある

本記事では、javaとkotlinの文法上の相違点をまとめます。本記事に記載されている以外にも様々な相違点があるので、雰囲気だけでもお伝えできればと思います。
kotlinは2011年にJetBrain社が開発した静的型付けのオブジェクト指向言語です。Javaをもっと簡潔・安全になるように改良しておりJVM上で動作します。
変数宣言
kotlinでは末尾のセミコロンが必要ありません。
varは再代入可能、valは再代入不可となります。
java
String str = "abc";
int n...]]></description><link>https://zenn.dev/tnakano/articles/467be3d5e607e2</link><guid isPermaLink="true">https://zenn.dev/tnakano/articles/467be3d5e607e2</guid><pubDate>Tue, 18 Jun 2024 08:46:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2n-flvCV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:java%25E3%2581%25A8kotlin%25E3%2581%25AE%25E6%2596%2587%25E6%25B3%2595%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZmI5YmE5NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taiki</dc:creator></item><item><title><![CDATA[JavaのGZIPInputStreamのバグを踏んだ話]]></title><description><![CDATA[
 TL;DR


java.util.zip.GZIPInputStreamにはバグがあり、gzipのstreamの終端（end of stream, EOS）を正しく判定できない場合がある


InputStream.available()が0以上であることをEOSの判定条件の1つに使っているが、InputStreamの実装によっては0が必ずしもEOSを表すとは限らない
特に、concatenatedなgzip（複数のgzipを連結したgzip）だと処理が途中で終わってしまう可能性がある


10年以上前からバグとして報告されていたが、2024年になってようやく修正され、JDK 23...]]></description><link>https://zenn.dev/polyomino/articles/java-gzipinputstream-bug</link><guid isPermaLink="true">https://zenn.dev/polyomino/articles/java-gzipinputstream-bug</guid><pubDate>Mon, 17 Jun 2024 02:01:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hEqLeUiB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AEGZIPInputStream%25E3%2581%25AE%25E3%2583%2590%25E3%2582%25B0%25E3%2582%2592%25E8%25B8%258F%25E3%2582%2593%25E3%2581%25A0%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takumi%2520Ishikawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeFNacGxwWmh1VUJpYmhVMV9BbG5QMHB2cGZETHh1a3FzenJSWFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takumi Ishikawa</dc:creator></item><item><title><![CDATA[OSSのデザインパターン解説シリーズ：Singletonパターンの活用と悪いコード例]]></title><description><![CDATA[
 1. はじめに
このシリーズでは、オープンソースソフトウェア（OSS）のソースコードを通じて、GoF（Gang of Four）デザインパターンの活用方法を解説します。
特に悪い例と良い例を見ることで、デザインパターンのメリットを考えていきます。
なお、OSSやデザインパターンの詳しい解説は書きません。
最小限のコード例と解説を書いていきます。

 2. Singletonパターンとは
Singletonパターンとは、"一つしか存在しないもの"を表現するためのパターンです。
特に、インスタンスが複数存在すると問題ある場合に有効なパターンです。
Javaでは、以下の標準入出力においてS...]]></description><link>https://zenn.dev/neko_student/articles/7e0384e0f1332f</link><guid isPermaLink="true">https://zenn.dev/neko_student/articles/7e0384e0f1332f</guid><pubDate>Sun, 16 Jun 2024 23:20:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--neNeNqp5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OSS%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25EF%25BC%259ASingleton%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%25A8%25E6%2582%25AA%25E3%2581%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:neko%2520student%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2ZnQzBseWZlcFJjSXIwMUJqQnFxVWZsZm5RZ1lNUUN0d1N6blA5VE8tTUE0TEtjQlAzdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>neko student</dc:creator></item><item><title><![CDATA[疑問解消編②]]></title><description><![CDATA[お久しぶりです！
オアシステクノロジーズの中村です。
前回に引き続き新しいWebの現場を経験し疑問点がいくらか沸いたので、疑問点や知らない単語をChatGPTに聞いてみた！編Part2です。

 今回のトピック

SSO基盤
redis
クラスター


 SSO基盤
「SSO基盤ってなんですか？」
ChatGPT君

SSO（Single Sign-On）基盤は、複数のソフトウェアやシステムにおいて、1回の認証操作で複数のサービスにアクセスできる仕組みです。通常、ユーザーは複数のアカウントやパスワードを管理する必要がありますが、SSOを使用すると、1つの認証情報（通常はユーザー名とパスワ...]]></description><link>https://zenn.dev/oasys/articles/53b901f00f51a7</link><guid isPermaLink="true">https://zenn.dev/oasys/articles/53b901f00f51a7</guid><pubDate>Sun, 16 Jun 2024 00:01:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6xfSLQy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2596%2591%25E5%2595%258F%25E8%25A7%25A3%25E6%25B6%2588%25E7%25B7%25A8%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMGUxYmY0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オアシステクノロジーズ</dc:creator></item><item><title><![CDATA[Java 8：2024年のオプションは？]]></title><description><![CDATA[
2022年3月、OracleはJava 8のPremier Supportを打ち切った。もしあなたが社内の意思決定者であるなら、自問すべきはこうだ：今がJava 8を手放すべき最適なタイミングなのか？と。
2018年、OracleはJavaのライセンス方法とリリーススケジュールを根本的に変更した。昨年までは、Java 8とJava 11のみがLong-Term Supportバージョン（LTS）であり、これは本番環境でバージョンを使用するかどうかの決定に大きな影響を及ぼしていた。最近になって、これはより迅速なリリース・スケジュールに置き換えられ、古いバージョンのJavaの廃止予定日につ...]]></description><link>https://zenn.dev/leaning_tech_jp/articles/43376abf38284f</link><guid isPermaLink="true">https://zenn.dev/leaning_tech_jp/articles/43376abf38284f</guid><pubDate>Sat, 15 Jun 2024 08:25:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mFrJ0Cwd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25208%25EF%25BC%259A2024%25E5%25B9%25B4%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leaning%2520Technologi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MmNjYWUyNWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leaning Technologies Japan (リーニングテクノロジー)</dc:creator></item><item><title><![CDATA[CS115]]></title><description><![CDATA[Java]]></description><link>https://zenn.dev/koki0122/books/c48cdade29da37</link><guid isPermaLink="true">https://zenn.dev/koki0122/books/c48cdade29da37</guid><pubDate>Wed, 12 Jun 2024 16:39:17 GMT</pubDate><dc:creator>池田紘規</dc:creator></item><item><title><![CDATA[Web API開発をはじめるまえに]]></title><description><![CDATA[API開発をはじめるプログラマーの方向けに、API開発の全体像をまとめました。

 Web APIとは？
API（Application Programming Interface）とは、アプリケーション間での情報や機能のやり取りを可能にする窓口を意味します。
Web APIでは、Webサービスで提供している機能やデータを外からプログラムが読み取りやすい形で利用できるよう定めた規約や手順が定義されています。
Web APIにはいくつも種類がありますが、代表的に使用されているREST APIについて触れていきます。

 Web APIの代表的な規約：REST API / RESTful A...]]></description><link>https://zenn.dev/azunyan/articles/4fd9e67cb454ca</link><guid isPermaLink="true">https://zenn.dev/azunyan/articles/4fd9e67cb454ca</guid><pubDate>Tue, 11 Jun 2024 02:24:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nmHC016M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%2520API%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E3%2581%25BE%25E3%2581%2588%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25BF%25E3%2582%258A%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlODc0NGRhYmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えみり〜</dc:creator></item><item><title><![CDATA[【総まとめ】ニコニコ・カドカワを襲ったRansomwareの考察【2024-6-8】]]></title><description><![CDATA[
株式会社KADOKAWAは 9日未明、本社へのサイバー攻撃の被害を受けている旨の声明を発表した―――。

2024年6月8日（土）未明に発生したシステム障害により、KADOKAWAグループ ポータルサイト（ https://group.kadokawa.co.jp/ ）をはじめ、当社グループの複数のウェブサイトが利用できない&gt;事象が発生しております。これまでの経緯、現在の状況、今後の対応については、こちらをご覧くだ&gt;さい。


1.　経緯
　6月8日（土）未明より、当社グループの複数のサーバーにアクセスできない障害が発生しました。この事実を受け、データ保全のため関連するサー...]]></description><link>https://zenn.dev/incognito/articles/1c9286f493446b</link><guid isPermaLink="true">https://zenn.dev/incognito/articles/1c9286f493446b</guid><pubDate>Mon, 10 Jun 2024 10:18:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CRwfJ4iH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25B7%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2583%258B%25E3%2582%25B3%25E3%2583%258B%25E3%2582%25B3%25E3%2583%25BB%25E3%2582%25AB%25E3%2583%2589%25E3%2582%25AB%25E3%2583%25AF%25E3%2582%2592%25E8%25A5%25B2%25E3%2581%25A3%25E3%2581%259FRansomware%25E3%2581%25AE%25E8%2580%2583%25E5%25AF%259F%25E3%2580%25902024-6-8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:incognito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlIyWjBITnFKNnBoVTBqQ2U3eXQwa0N4QUcyOGd2ME5vcFdIb2xYRC1LPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>incognito</dc:creator></item><item><title><![CDATA[【Java】Mapの種類を変更する]]></title><description><![CDATA[
 Mapとは
JavaのMapには、HashMap、TreeMap、LinkedHashMapの3種類があります。

 HashMap

他のMapよりも高速に機能するため、最も一般的なMapクラスです。
キーからハッシュ値を算出して値を管理しているため、キーの順番は保証されておらず同じ順序で取り出せるとは限りません。

 TreeMap

ツリー構造を持つMapクラスです。
キーは昇順に並び替えられて保持されています。


 LinkedHashMap

HashMapとLinkedListの両方で管理しているMapクラスです。
キーは挿入順に保持されます。

 方法

 コンストラ...]]></description><link>https://zenn.dev/mmm_wak/articles/a9a9cebfebf729</link><guid isPermaLink="true">https://zenn.dev/mmm_wak/articles/a9a9cebfebf729</guid><pubDate>Mon, 10 Jun 2024 08:07:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EdgGKY4b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591Map%25E3%2581%25AE%25E7%25A8%25AE%25E9%25A1%259E%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZGU2MTlkNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もえ</dc:creator></item><item><title><![CDATA[Javaを難しく感じる理由を言語化してみる]]></title><description><![CDATA[
 はじめに

 記事の目的
まず Java 批判ではありません。 次に Java 固有の問題ではありません。 筆者は Java によるアプリケーション作成が難しいという苦手意識を持っています。所属会社は SIer であり、Java による開発は花形です。せっかくなら Java に強くなりたいと思い、この問題を乗り越えるため思ったことを言語化しようという記事です。

 筆者について

AWS メインのインフラエンジニア
業務では Terraform, Python, ShellScript を利用
アプリケーション開発はほぼ経験無し
Java は Spring + MyBatis を 1...]]></description><link>https://zenn.dev/teradatky/articles/think-about-java-20240609</link><guid isPermaLink="true">https://zenn.dev/teradatky/articles/think-about-java-20240609</guid><pubDate>Sun, 09 Jun 2024 13:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LKgpGeOx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2582%2592%25E9%259B%25A3%25E3%2581%2597%25E3%2581%258F%25E6%2584%259F%25E3%2581%2598%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%25E3%2582%2592%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuya%2520Terada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUJHdEJIQ2hzYXVjbWNMWFdaYlpBNG1LSmFrbGhSOF84WGttc0Rkb0E1eVZrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takuya Terada</dc:creator></item><item><title><![CDATA[Java チートシート]]></title><description><![CDATA[
 基本構文
// クラス宣言
public class MyClass {
    // メンバ変数
    int myVar;

    // コンストラクタ
    public MyClass(int var) {
        this.myVar = var;
    }

    // メソッド
    public void myMethod() {
        System.out.println("Hello, World!");
    }

    // メインメソッド
    public static void main(String[] args) ...]]></description><link>https://zenn.dev/happy_engineer/articles/a0156644827cff</link><guid isPermaLink="true">https://zenn.dev/happy_engineer/articles/a0156644827cff</guid><pubDate>Sun, 09 Jun 2024 00:21:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D_M39hXH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2583%25BC%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3U2U01IV1VwWjRBVVNpdXZUMGxiTVFFM1ZGaVpjYW9nbVhWTDB1djhST3NIeEFtVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まーさん</dc:creator></item><item><title><![CDATA[JavaのfindFirstとfindAnyの違い]]></title><description><![CDATA[あまり使うことのなかったfindFirstとfindAnyを調べたのでメモ

 findFirstとは
findFirstメソッドは、Streamから最初の要素を返すために使用される。
順序付けされている状態であれば、findFirstは常に最初の要素を返す。

例


 Main.java
List&lt;String&gt; names = Arrays.asList("Test1", "Test2", "Test3", "Test4");
Optional&lt;String&gt; firstName = names.stream().findFirst();
firstName...]]></description><link>https://zenn.dev/zenn_rr/articles/1bdd5fe2f5fd7f</link><guid isPermaLink="true">https://zenn.dev/zenn_rr/articles/1bdd5fe2f5fd7f</guid><pubDate>Fri, 07 Jun 2024 11:17:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6c76jhZ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AEfindFirst%25E3%2581%25A8findAny%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NWNhMDI0NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sto</dc:creator></item><item><title><![CDATA[2024/6/6　わからないリスト(自分用)]]></title><description><![CDATA[以下のように修正しました。

 ユーザーの興味のあるカテゴリ（intent type）

 関数
一定の処理（命令）がひとまとめにされているプログラムの集合体
引数から値を受け取ることで、それに対応した処理の実行が可能
※戻り値が帰らないコードもあります：追加で出たコードリスト プロシージャ

 引数
関数やメソッドに情報を渡すために使用される値。
関数やメソッドが実際に処理を行う際に、所持している各種命令に対して必要となる値。
引数は関数が用意している棚の番号にあう箱に値を入れて、同じ番号の箇所に箱を納めている処理。この時棚が埋まっていないとエラーが起きる。

 const
設定したあ...]]></description><link>https://zenn.dev/moto_fff/articles/509b3c43060457</link><guid isPermaLink="true">https://zenn.dev/moto_fff/articles/509b3c43060457</guid><pubDate>Thu, 06 Jun 2024 12:52:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RcsGrYl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%252F6%252F6%25E3%2580%2580%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2528%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:motomotomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1YTJhNTNjN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>motomotomo</dc:creator></item><item><title><![CDATA[オブジェクト指向で書く。]]></title><description><![CDATA[
 はじめに
プログラミングをする時、オブジェクト指向を意識して書く事ってどれくらいあるでしょうか？
あまり意識しない事が多いと思います。
そもそも「オブジェクト指向で書く」とは、どういう事でしょう？
「いやいや、毎日オブジェクト指向でやってるよ。オブジェクト指向言語で書いてるもん。
クラス作って、new　でインスタンス化（オブジェクト生成）とかやってるし。」
・・・なるほど。
確かにPHPもJavaもPythonもみんなオブジェクト指向言語です。
しかし、オブジェクト指向言語を使う事と、オブジェクト指向で書く事はちょっと違うかも？と思います。

 ポリモーフィズムでスッキリと書く。
オ...]]></description><link>https://zenn.dev/k_tabuchi/articles/53626a82df0ccb</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/53626a82df0ccb</guid><pubDate>Tue, 04 Jun 2024 12:32:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d-jPdjW_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[JavaのByteの計算で詰まった話]]></title><description><![CDATA[
 入力されたbyteが0x00 ~ 0xFDの間にあるか確認したい
指定されたbyteが0x00 ~ 0xFDにいる事を確認したく以下コードを書いたとき

Main.java
byte arg = (byte) 0x01;

if((byte) 0x00 &gt;= arg &amp;&amp; arg =&lt; (byte) 0xFD){
  System.out.println("問題なし");
}

何故か条件に入らない、、、

 Javaのbyteは符号付き
Javaのbyteは符号付きのためbyteを数値として表すと
-128 ~ 127
になる。
つまり、2進数の1000...]]></description><link>https://zenn.dev/zenn_rr/articles/ae0c98a29161d3</link><guid isPermaLink="true">https://zenn.dev/zenn_rr/articles/ae0c98a29161d3</guid><pubDate>Tue, 04 Jun 2024 11:31:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3Qviiiv0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AEByte%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NWNhMDI0NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sto</dc:creator></item><item><title><![CDATA[【Spring Boot】Spring Data MongoDBでAggregationアノテーションを使用したクエリ]]></title><description><![CDATA[
 概要
Spring Data MongoDBでAggregationのクエリを発行したい場合、Aggregation Framework SupportのようにmongoTemplateを使用した実装が挙げられますが、できればmongoTemplateを使用せずにRepositoryの機能でクエリを行いたいです。
調べてみたら、Spring Data MongoDB - Guide to the @Aggregation Annotationの記事にある通り、アノテーションでクエリを設定できる機能があるそうなので、今回はこれを試してみました。

 前提

使用したSpring Dat...]]></description><link>https://zenn.dev/someone7140/articles/11e638f7ce8fca</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/11e638f7ce8fca</guid><pubDate>Sun, 02 Jun 2024 10:03:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FsnA5-dH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%25E3%2580%2591Spring%2520Data%2520MongoDB%25E3%2581%25A7Aggregation%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[AndroidでのView描画の基礎]]></title><description><![CDATA[
 概要
View・Canvas・Paintの基礎を抑える

 開発環境



タイトル
内容




Android
10


AndroidStudio
Bumblebee


macOS
12.3


minSdk
28


targetSdk
31


実行端末
Pixel3a




 参考資料

「はじめてのAndroidアプリ開発　Java編」07-01
View
Canvas
Paint


 ビューとは
ビュー（ウィジェット/レイアウト）はViewの派生クラス。
なので、独自のビューを作成したい場合はViewを継承する。

 カスタムビューの基本


java

pub...]]></description><link>https://zenn.dev/yt_hsgw/articles/113b987b8d7b56</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/113b987b8d7b56</guid><pubDate>Sat, 01 Jun 2024 03:31:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iq1Fe04U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7%25E3%2581%25AEView%25E6%258F%258F%25E7%2594%25BB%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item></channel></rss>