<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 06 Aug 2024 00:06:26 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScriptで緩くDI的な事をしたい]]></title><description><![CDATA[
 何がしたいか
参照透過性、純粋関数、テストしやすい関数みたいな文脈で調べていて、関数が外部に依存している部分を自由に外から注入できるようにしたいと思った
mockやspyOnを書くのがめんどくさくて嫌いで、その関数自身がDIの機能を持ってるとテストが書きやすくて楽そう

 Velona
デコレータを使わずコールバック関数に依存性を注入できるDIヘルパーをたった15行のTypeScriptで作った話
自分がしたい事をスマートに叶えてくれそうなのがあった
が、これだとdependenciesの部分が関数の作成時に実行されてしまう🥲
import { depend } from 'velo...]]></description><link>https://zenn.dev/waonpad/articles/7b6eb75061c92f</link><guid isPermaLink="true">https://zenn.dev/waonpad/articles/7b6eb75061c92f</guid><pubDate>Mon, 05 Aug 2024 16:32:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s3kDbWKw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E7%25B7%25A9%25E3%2581%258FDI%25E7%259A%2584%25E3%2581%25AA%25E4%25BA%258B%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2594%25BB%25E6%2592%2583%25E5%258A%259B3500%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMTJmNmU2MDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>攻撃力3500</dc:creator></item><item><title><![CDATA[exportは名前付きエクスポートでやりましょう]]></title><description><![CDATA[こんにちは。Web デザイナーのツーさんです 😁
昨今の開発環境ではコンポーネントを import や export したりするのは当たり前ですよね。ご存知の通りexport には "デフォルトエクスポート（default export）" と "名前付きエクスポート（named export）" があります。
今回の記事の内容はこの 2 種類のexportの方法の違いとおすすめのエクスポート方法をまとめた小ネタです。

 結論：名前付きエクスポートを使いましょう 👍
「そんでどっちを使えばいいの？」となりますよね。
個人的には"名前付きエクスポート"を使うことをおすすめします。 デフォ...]]></description><link>https://zenn.dev/cocomina/articles/recommended-export</link><guid isPermaLink="true">https://zenn.dev/cocomina/articles/recommended-export</guid><pubDate>Mon, 05 Aug 2024 15:55:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X56Z6gZR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:export%25E3%2581%25AF%25E5%2590%258D%25E5%2589%258D%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7%25E3%2582%2584%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Twosun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiODhhMjUyYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Twosun</dc:creator></item><item><title><![CDATA[TypeScriptの変数から型定義を自動生成する]]></title><description><![CDATA[
 やりたいこと
明示的に型を指定していない変数の型定義を取得したい。エディタをホバーすると出てくる型定義をコピペするのを自動化するイメージ
const sample = [
  {id: 1, name: 'sample'}
];
type Sample = typeof sample // type Sampleの結果が欲しい

 実行前後のコード

 実行前は明示的な型定義がない配列
export const posts = [
  {
    userId: 1,
    id: 1,
    title:
      "sunt aut facere repellat prov...]]></description><link>https://zenn.dev/dev_commune/articles/66f01bad61780d</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/66f01bad61780d</guid><pubDate>Mon, 05 Aug 2024 14:58:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5-CGclMQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:astatsuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNDAyZDljNDkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>astatsuya</dc:creator></item><item><title><![CDATA[raect-hook-formの使い方]]></title><description><![CDATA[こんにちは。Web デザイナーのツーさんです 😁。今までは WordPress や CSS の記事を書いていたのですが、ありがたいことに少し前からフロントエンドのお仕事が増えてきたので、今回からフロントエンドエンジニア関連の記事も書いていこうと思います。フロントエンドでは React や NextJS を使っています。
今回は React（Next） でのフォーム作成ライブラリの定番とも言える 「raect-hook-form」 の使い方をご紹介します。
※ Zod や Yup などは本記事では使用していません。

 記事内に掲載しているソースコードは Github でも確認できます。
...]]></description><link>https://zenn.dev/cocomina/articles/how-to-use-react-hook-form</link><guid isPermaLink="true">https://zenn.dev/cocomina/articles/how-to-use-react-hook-form</guid><pubDate>Mon, 05 Aug 2024 07:32:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QxWHbL7e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:raect-hook-form%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Twosun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiODhhMjUyYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Twosun</dc:creator></item><item><title><![CDATA[Cognitoのログイン情報が書き換わったタイミングを検知するhooks作った]]></title><description><![CDATA[
 概要
今回はReactで動作しているSPAで、Cognitoを使っている場合のTipsです。
AWSのコンソールなんかもそうですが、同一ブラウザで複数タブで異なるアカウントで操作しようとすると、元々動かしていた方のアカウントの操作ができなくなり、リロードや再ログインを促されたりします(もしかしたら名称があるかも)。
あの仕組みをそのまま自作したので、たたき台として共有します。

 バージョン情報
Reactのバージョンはちょい古めです。
関係してそうなものだけpackage.jsonから抜粋。

"@aws-amplify/ui-react": "^5.0.4"
"aws-ampli...]]></description><link>https://zenn.dev/nekoniki/articles/13de709efb8519</link><guid isPermaLink="true">https://zenn.dev/nekoniki/articles/13de709efb8519</guid><pubDate>Mon, 05 Aug 2024 07:22:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zq0Bvyeb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cognito%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258Bhooks%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nekoniki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1OGNmMzMwMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nekoniki</dc:creator></item><item><title><![CDATA[JS Hooksの第一歩]]></title><description><![CDATA[
 XRPL Hooks
XRPL Hooksは、分散型のL1ブロックチェーンXRP LedgerのXRP Ledgerプロトコルで利用可能なスマートコントラクト機能です。Hooks機能は現時点ではXRPLと同じXRPLプロトコルベースのネットワークであるXahau Networkでのみ利用可能です。
https://zenn.dev/tequ/articles/xrpl-hooks-starter
XRP LedgerメインネットへのHooks機能統合へも取り組まれており、Hooks機能はXRPLのスマートコントラクト機能として利用可能となることが期待されています。

 JS Hook...]]></description><link>https://zenn.dev/tequ/articles/xrpl-jshooks-first</link><guid isPermaLink="true">https://zenn.dev/tequ/articles/xrpl-jshooks-first</guid><pubDate>Mon, 05 Aug 2024 05:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8RZS4vlF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:JS%2520Hooks%25E3%2581%25AE%25E7%25AC%25AC%25E4%25B8%2580%25E6%25AD%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tequ%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvSjhtbzdCYjZmVkU1b2tsZno4TUtXVUxvN2NfYm5oQTlsc01oPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tequ</dc:creator></item><item><title><![CDATA[意味のタグ付けする Branded Typeで型の一意性を守るテクニック]]></title><description><![CDATA[
 1. TypeScript の問題点
TypeScriptは、型システムとして構造的型付けを採用しています。
構造的型付けとは、「型の名前ではなく、型の構造に基づいて型の互換性を判断する仕組みのこと」です。
構造的型付けは、型の柔軟性やコードの再利用性を向上させるメリットがある一方で、意図せず型の互換性を生じさせてしまう可能性があります😱
例えば、以下のコードを見てみましょう。
type User = { 
  id: string
  name: string
}
type Post = {
  id: string
  name: string
}

const post: Po...]]></description><link>https://zenn.dev/ourly_tech_blog/articles/branded_type_20240726</link><guid isPermaLink="true">https://zenn.dev/ourly_tech_blog/articles/branded_type_20240726</guid><pubDate>Mon, 05 Aug 2024 05:14:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GX0MNeFD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B0%25E4%25BB%2598%25E3%2581%2591%25E3%2581%2599%25E3%2582%258B%2520Branded%2520Type%25E3%2581%25A7%25E5%259E%258B%25E3%2581%25AE%25E4%25B8%2580%25E6%2584%258F%25E6%2580%25A7%25E3%2582%2592%25E5%25AE%2588%25E3%2582%258B%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25EF%25BD%258Dayukoooo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZDQxYzc1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ourly%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwOTU3Mjk3MDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ｍayukoooo</dc:creator></item><item><title><![CDATA[デコレーターを使って、クラス内のメソッドを実行する時に値が書き変わる前のプロパティを保存する方法(Typescript使用)]]></title><description><![CDATA[
 はじめに
タイトルを見るとあまり使用するケースが思い浮かばないかもしれません。
なので、まずはこの記事を書く動機になったケースをお話します。
実装しているアプリケーションでは、通知機能がありました。
この通知は管理者の追加・削除された時、対象の人にいきます。
イメージは以下のような形です。

当初はまず既存の管理者情報を取得し、その人に通知を送り、新しい管理者がセットされたら再度対象の人に通知を送るようにしていました。
しかし、通知処理が走る部分の処理を見直し、以下のようなレスポンスの時に実行されるインターセプター部分で、通知がいくように修正しました。

このようにインターセプターで...]]></description><link>https://zenn.dev/maronn/articles/nestjs-custom-decolator</link><guid isPermaLink="true">https://zenn.dev/maronn/articles/nestjs-custom-decolator</guid><pubDate>Mon, 05 Aug 2024 03:15:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R-jyx18g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AB%25E5%2580%25A4%25E3%2581%258C%25E6%259B%25B8%25E3%2581%258D%25E5%25A4%2589%25E3%2582%258F%25E3%2582%258B%25E5%2589%258D%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2528Typescri...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25AD%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYzVlMmFlYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マロン</dc:creator></item><item><title><![CDATA[TypescriptベースのECフレームワークMedusaがアツい]]></title><description><![CDATA[こんにちは、トラストハブのピロピロです。
トラストハブ社では先週、新たにトレーディングカードのECサービス「Cloveストア」をリリースしました。
このサービスではMedusaというTypescriptベースのコマースフレームワークをベースに開発しています。このMedusaが素晴らしいので紹介します。

 Medusaとは
Medusaはコマースプラットフォームと銘打たれたOSSプロダクトです。Medusaの本体と呼べるのはコマースのためのAPIと管理画面で、いわゆるヘッドレス・コマースと呼ばれる領域のプロダクトです。これらはセルフホストすることで利用できます。
https://medu...]]></description><link>https://zenn.dev/trusthub/articles/e698e267ac846d</link><guid isPermaLink="true">https://zenn.dev/trusthub/articles/e698e267ac846d</guid><pubDate>Mon, 05 Aug 2024 02:55:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5NYIFHbf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AEEC%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFMedusa%25E3%2581%258C%25E3%2582%25A2%25E3%2583%2584%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2594%25E3%2583%25AD%25E3%2583%2594%25E3%2583%25AD%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NzlhZmI5YTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TrustHub%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmM2FmZDU4ZmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピロピロ</dc:creator></item><item><title><![CDATA[Cloudflare D1 を使った日本語の全文検索を実装する]]></title><description><![CDATA[!
この記事は、CYBOZU SUMMER BLOG FES '24 (Frontend Stage) DAY 5 の記事です。

最近、SQL アンチパターンという本を読んでいたら、MySQL、 PostgreSQL、SQLite などのデータベースでも拡張機能を利用することで全文検索を実装できることを知りました。[1]
SQLite で構築されている Cloudflare D1 についても調べてみたところ、制限はあるものの全文検索の拡張機能が使えるということがわかりました。

Export is not supported for virtual tables, including ...]]></description><link>https://zenn.dev/cybozu_frontend/articles/cloudflare-d1-fts</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/cloudflare-d1-fts</guid><pubDate>Mon, 05 Aug 2024 01:21:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4ftxH_FX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520D1%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nissy-dev%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjMzg3ZjYwNjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nissy-dev</dc:creator></item><item><title><![CDATA[Remixでmetaをエクスポートせずにheadの内容を書き換えてSSR]]></title><description><![CDATA[
 Remix の head の内容制御
Remix では Head の内容を設定するには、routes に配置したファイルから meta 変数をエクスポートする形で行うのが公式の方法です。ただ、この方法を使うと、各コンポーネント内から柔軟に内容を設定するようなことが出来ません。とんでもなく不便です。なぜこのような構造になっているかというと、各コンポーネントの評価が行われるよりも前に、head タグの評価が終了しているため、後から変更しようとしても出来ないからです。
しかし実は React はコンポーネントの実行順序を動的に変更する機能が標準で用意されています。それを使えば、各コンポーネ...]]></description><link>https://zenn.dev/sora_kumo/articles/remix-helmet</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/remix-helmet</guid><pubDate>Mon, 05 Aug 2024 00:20:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ChqCS_1R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Remix%25E3%2581%25A7meta%25E3%2582%2592%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%259B%25E3%2581%259A%25E3%2581%25ABhead%25E3%2581%25AE%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2581%25A6SSR%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[LangChain.jsのFile Loadersで任意の拡張子に対応する]]></title><description><![CDATA[
 はじめに
とうとう社会人2年生になってしまったwinnieです 🍯
少し前からPM見習いとして実装と離れた生活を送っていましたが、最近プライベートで携わっているプロジェクトで本格的にLLMまわりの技術を触り始めたので、久しぶりに実装関連の知見をアウトプットしていこうと思います！

 困ったこと
RAGなどを実装するときにファイルの中身を読み込むべく、LangChainのFile Loadersを利用するシチュエーションは多々あるかと思います。
その中でも DirectoryLoader や MultiFileLoader は複数のファイルをまとめて読み込むことができてとても便利です[...]]></description><link>https://zenn.dev/activecore/articles/479870fe507ce4</link><guid isPermaLink="true">https://zenn.dev/activecore/articles/479870fe507ce4</guid><pubDate>Sun, 04 Aug 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8k4qxJ78--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain.js%25E3%2581%25AEFile%2520Loaders%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E5%25AD%2590%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:winnie279%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYjdkMGRlNzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2582%25B3%25E3%2582%25A2%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMmM5OGMxOWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>winnie279</dc:creator></item><item><title><![CDATA[なぜ<React.Fragment>を書かなければならないのか]]></title><description><![CDATA[
 JSXと単一ルートの制約
JSXのコンポーネントには、単一のルート要素を返さなければいけないという制約があります。
単純にコンポーネントを&lt;div&gt;で囲むなどの方法で対処できることもありますが、flexboxの中の要素をコンポーネント化していて&lt;div&gt;が追加されることによりスタイルが崩れる場合などにはそういった対処が難しいこともあります。
DOMに直接影響を与えないようにするには、&lt;Fragment&gt;、もしくはその省略記法の&lt;&gt;を利用します。
// Fragmentを用いて2つの&lt;li&gt;要素をレンダーする
function...]]></description><link>https://zenn.dev/koyo_k0/articles/2533063f227628</link><guid isPermaLink="true">https://zenn.dev/koyo_k0/articles/2533063f227628</guid><pubDate>Sun, 04 Aug 2024 18:25:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MIVR8hGX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%253CReact.Fragment%253E%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2591%25E3%2582%258C%25E3%2581%25B0%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDM0MjIwMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koyo</dc:creator></item><item><title><![CDATA[【tailwindcss】configから直接、型を取り出してみた]]></title><description><![CDATA[初めまして、NITICのこうちゅけです。
皆さん、Tailwindcss使ってますか？
.cssファイルを作成せずにスタイルコーディングできるTailwindcssはとてもいいものですよね。
しかし、Typescriptでコーディングしていると、Tailwindcssのデザイントークンに関する型情報がなくてモヤモヤすることが時たまあります。
また、動的にclassを変更する関数を実装しようとした際に型情報がなく型をハードコードすることもあると思います。
今回は設定ファイルから直接、colorの型やpadding, marginなどで使用されているScale(lgや4,8など)の型情報を取...]]></description><link>https://zenn.dev/koutyuke/articles/extrac-colo-type-from-tailwind-config</link><guid isPermaLink="true">https://zenn.dev/koutyuke/articles/extrac-colo-type-from-tailwind-config</guid><pubDate>Sun, 04 Aug 2024 15:58:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L3B2R5n1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590tailwindcss%25E3%2580%2591config%25E3%2581%258B%25E3%2582%2589%25E7%259B%25B4%25E6%258E%25A5%25E3%2580%2581%25E5%259E%258B%25E3%2582%2592%25E5%258F%2596%25E3%2582%258A%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2586%25E3%2581%25A1%25E3%2582%2585%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pENGRRSUhSYjZWUHhjSzlkMDJKQ0JJUURxV0MzeXhUbzFsdHB4dGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こうちゅけ</dc:creator></item><item><title><![CDATA[指定した並列度で非同期処理（HTTPリクエストなど）を実行する]]></title><description><![CDATA[
 はじめに
自作ライブラリ Rotery に新機能を追加しました。
https://www.npmjs.com/package/rotery
https://github.com/somnicattus/rotery
Rotery は、反復処理を効率よく行うためのユーティリティライブラリです。 iterator と asyncIterator のサポート、関数型プログラミングと pipe 関数、TypeScript の強力な型サポートが特徴です。

 機能の概要
今回追加した新機能は、「並列度制御」の機能です。例えば、以下のコードは並列で 5 つの HTTP リクエストが実行されるよう...]]></description><link>https://zenn.dev/somnicattus/articles/089c58d9626ec0</link><guid isPermaLink="true">https://zenn.dev/somnicattus/articles/089c58d9626ec0</guid><pubDate>Sun, 04 Aug 2024 15:00:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--224uLJWz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E4%25B8%25A6%25E5%2588%2597%25E5%25BA%25A6%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588HTTP%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AA%25E3%2581%25A9%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:somnicattus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlNvNXE3eXJhZTY5OHVBWGpCN05EYTVOZVRxanpMQ2hBakhaek85RmZSPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>somnicattus</dc:creator></item><item><title><![CDATA[Babylon.js で天文学に基づいた太陽の位置を表現しようとしてダメだった]]></title><description><![CDATA[こんにちは。やまゆです。
太陽の位置は、天文学的にかなり小さい誤差で算出が可能らしいです。
観測地点の緯度・経度と、日時を入力とすると、 XYZ や azimuth(方位角, 北とか) と inclination(傾斜) で出力することが出来ます。
ちなみに、 mourner/suncalc: A tiny JavaScript library for calculating sun/moon positions and phases. というライブラリもありましたが、興味本位で数式を探してみます。
Position of the Sun - Wikipedia
位置の計算について Wi...]]></description><link>https://zenn.dev/yamayuski/articles/b020f6cf8ba72a</link><guid isPermaLink="true">https://zenn.dev/yamayuski/articles/b020f6cf8ba72a</guid><pubDate>Sun, 04 Aug 2024 12:05:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Es7fjdTC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Babylon.js%2520%25E3%2581%25A7%25E5%25A4%25A9%25E6%2596%2587%25E5%25AD%25A6%25E3%2581%25AB%25E5%259F%25BA%25E3%2581%25A5%25E3%2581%2584%25E3%2581%259F%25E5%25A4%25AA%25E9%2599%25BD%25E3%2581%25AE%25E4%25BD%258D%25E7%25BD%25AE%25E3%2582%2592%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2580%25E3%2583%25A1%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2582%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pVWkFuSVloZ2NmMkJYb2tkWGpYODhWR2Y3MnVyWE9qN1dXOE56R0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまゆ</dc:creator></item><item><title><![CDATA[React + MUIで管理画面を作ってみた]]></title><description><![CDATA[
 🤔管理画面を作るには何が適しているのか？
Flutter Webで管理画面を作っていたのですが、なんか満足できなかった。Firebase Hostingした後に、表示されるのが遅い？？？
WidgetにTimePickerがあるので、時計の入力画面が使えるのは気に入っていた。しかしWebの言語は、もっとUIライブラリが充実しているのではと思った💡
こちらが参考になった!
https://mui.com/x/react-date-pickers/time-picker/
https://stackblitz.com/run?file=Demo.tsx

 実際に作ってみたもの
Flut...]]></description><link>https://zenn.dev/joo_hashi/articles/f2430ca15e181a</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/f2430ca15e181a</guid><pubDate>Sun, 04 Aug 2024 11:57:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--deyfMrSW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520MUI%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[間違えてyarnとnpmを共存させてしまった時の対処法]]></title><description><![CDATA[TypeScriptやJavaScriptで作業する際に、yarnとnpmを統一せずに使用したときの問題点と対応策をまとめて備忘録として残しておく。

 問題点
依存関係の不整合:
npmが管理するpackage-lock.jsonとyarnが管理するyarn.lockが同時に存在すると、どちらのファイルが正しいのか不明確になる可能性がある。
キャッシュの重複:
npmとyarnはそれぞれ異なるキャッシュシステムを使用しているため、同じパッケージが2重にキャッシュされることがある。
依存関係のインストール順序の違い:
npmとyarnで依存関係のインストール順序が異なる場合があり、ツール...]]></description><link>https://zenn.dev/mhirata/articles/8fad0e5144758f</link><guid isPermaLink="true">https://zenn.dev/mhirata/articles/8fad0e5144758f</guid><pubDate>Sun, 04 Aug 2024 08:12:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uVJ-nUOo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%2593%25E9%2581%2595%25E3%2581%2588%25E3%2581%25A6yarn%25E3%2581%25A8npm%25E3%2582%2592%25E5%2585%25B1%25E5%25AD%2598%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNTg5NmU0ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizuki</dc:creator></item><item><title><![CDATA[フィットネス記録のログ: Google Apps Scriptとclaspで実験的に作成]]></title><description><![CDATA[下記で投稿した記事を翻訳したものです！

https://dev.to/xxxuutaxxx/building-a-google-apps-script-workout-logger-track-and-visualize-your-fitness-progress-with-spreadsheets-and-looker-studio-3505


 WorkoutログをGoogle Looker Studioでモニタリングしたい
普段からジムに通っています。
Workoutログを扱うアプリケーションは、特にモバイルデバイス向けに多数ありますが、Looker StudioなどBIツール...]]></description><link>https://zenn.dev/yutti/articles/bc9aa3d87dde2d</link><guid isPermaLink="true">https://zenn.dev/yutti/articles/bc9aa3d87dde2d</guid><pubDate>Sun, 04 Aug 2024 06:05:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u-Bdox-j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%258D%25E3%2582%25B9%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%253A%2520Google%2520Apps%2520Script%25E3%2581%25A8clasp%25E3%2581%25A7%25E5%25AE%259F%25E9%25A8%2593%25E7%259A%2584%25E3%2581%25AB%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxMWUwNjhiOTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uuta</dc:creator></item><item><title><![CDATA[export {}; が使われるTypeScript特有の事情]]></title><description><![CDATA[TypeScriptのコードでは、export {}; という記述を見かけることがあります。これはECMAScriptの構文ではあるものの、これが使われる背景にはTypeScript特有の事情があります。この記事では、export {}; がなぜ使われるのか、どのような効果があるのかを解説します。

 export {}; とは
この構文は、exportというキーワードから分かるように、モジュールに関連する構文です。
一般に、export { ... };という構文は、既存の変数をモジュールからエクスポートするために使われます。例えば、次のようなコードが考えられます。
const foo...]]></description><link>https://zenn.dev/uhyo/articles/typescript-export-empty</link><guid isPermaLink="true">https://zenn.dev/uhyo/articles/typescript-export-empty</guid><pubDate>Sun, 04 Aug 2024 05:04:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A83b7I2Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:export%2520%257B%257D%253B%2520%25E3%2581%258C%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2582%258BTypeScript%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E4%25BA%258B%25E6%2583%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uhyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjYjFlMDJlNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uhyo</dc:creator></item></channel></rss>