<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 22 May 2024 01:45:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[シェルスクリプトのロギングに便利、標準エラー出力に任意の情報を自動追加]]></title><description><![CDATA[シェルスクリプト製の簡易アプリをコンテナで動作させる場合は JSON Lines のような凝った形式の実装が難しいので、単純に標準出力を info レベル、標準エラー出力を error レベルと扱い、error レベルを Slack 通知しています。
これでエラー発生には気づけるので問題ないのですが、1点だけちょっとした不便がありました。
その不便とは、コマンドがエラー終了した場合にそのコマンドが出力する内容だけで十分な情報が得られればいいのですが、コマンドによっては追加情報がないとよく分からないことがあります。
そこで今回は標準エラー出力だけに任意の追加情報を付与する方法を紹介します。...]]></description><link>https://zenn.dev/forrep/articles/0dbad2712ee672</link><guid isPermaLink="true">https://zenn.dev/forrep/articles/0dbad2712ee672</guid><pubDate>Tue, 21 May 2024 15:28:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N64-ij8n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2580%2581%25E6%25A8%2599%25E6%25BA%2596%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AB%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:forrep%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgyMTYwNDM3ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>forrep</dc:creator></item><item><title><![CDATA[SadServers解説#18 "Lisbon": etcd SSL cert troubles]]></title><description><![CDATA[https://ja.wikipedia.org/wiki/リスボン

 問題概要

 シナリオ
etcd SSL証明書の問題

 問題詳細
https://localhost:2379で実行されているetcdサーバーがあります。このサーバーからキーfooの値を取得してください。例えば、コマンドetcdctl get fooまたはcurl https://localhost:2379/v2/keys/fooを実行します。

 解決判定
Check My Solutionボタンをクリックしてください。
解答が正解かどうか、コマンドプロンプト上で確認することも可能です。次のコマンドを実行して...]]></description><link>https://zenn.dev/comf_nakamura/articles/sadservers_18</link><guid isPermaLink="true">https://zenn.dev/comf_nakamura/articles/sadservers_18</guid><pubDate>Tue, 21 May 2024 13:15:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qLrzK1rL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SadServers%25E8%25A7%25A3%25E8%25AA%25AC%252318%2520%2522Lisbon%2522%253A%2520etcd%2520SSL%2520cert%2520troubles%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E4%25B8%25AD%25E6%259D%2591%25EF%25BD%259C%25E6%2596%25B0%25E4%25BA%25BA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1OGFjNDI2M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>コンフォートゾーン中村｜新人クラウドエンジニア</dc:creator></item><item><title><![CDATA[新MacでLinux VM版：Kubuntu24.04LTS ⑥ VM Setting UTM]]></title><description><![CDATA[本連載ではAppleSilicon(M1系)で仮想マシン上にLinuxを入れる方法を、全くの初心者の方でも理解できるように説明しています。
この連載の全記事目次はこちら

 1.UTMの設定(起動前)
では今回は起動前にUTMの設定をしてみます。
仮想マシンのリストのWindowで、対象のマシンを選んで右上のアイコンを押します。

Parallels同様、必要な部分だけ説明します。

 1-1.設定画面

 ディスプレイ

[ON]Retinaモード
画面を詳細に使えるようにするため、ONにします。




 共有
試した所、現時点ではQEMUの仮想マシン（つまりApple仮想マシンを使...]]></description><link>https://zenn.dev/armcore/articles/kubuntu2404_6</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/kubuntu2404_6</guid><pubDate>Tue, 21 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wGm5hmxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%2520VM%25E7%2589%2588%25EF%25BC%259AKubuntu24.04LTS%2520%25E2%2591%25A5%2520VM%2520Setting%2520UTM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[POP!_OSにDocker Desktopをインストールする]]></title><description><![CDATA[
 概要

 目指すところ
linuxディストリビューションの一つ、POP!_OSで稼働するミニPCにDocker Desktopをインストールする。備忘録。

 対象
Dockerやら仮想環境は使ったことがあるけどlinuxにインストールするのは初めてだよという人向けだと思います。

 前提

 ハードウェア
中華メーカーCHUWIのLarkBox X 2023 RAM12GBモデル。
メモリは16GBで欲しかったけど、メーカー欠品ぽかったので。Amazonで2.5万円しないくらいでした。すごい時代だ。
IntelのN100というプロセッサを積んだ低電力ミニPC郡の1つです。CHUWI...]]></description><link>https://zenn.dev/tmmfire/articles/f5da5a3a6fe087</link><guid isPermaLink="true">https://zenn.dev/tmmfire/articles/f5da5a3a6fe087</guid><pubDate>Tue, 21 May 2024 09:42:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rwqjJ8Z_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:POP%2521_OS%25E3%2581%25ABDocker%2520Desktop%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmmfire%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNnItbThvVEJJeXgwSTlia1pXd0N4V0RnaFhWSmkweEE4QThaTE09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tmmfire</dc:creator></item><item><title><![CDATA[[Linux] SystemdのUnit定義ファイルで日時入りのログ出力を実装する方法]]></title><description><![CDATA[
 はじめに
Raspberry Pi内に入っているsystemdを使って、Raspberry Piを起動したらスクリプトを自動起動させるという設定を行う機会がありました。
当初はshファイルをただ実行するコマンドだけを設定していましたが、このshファイルのログを何時でも見られるようにする必要がでてきたため、ログ出力を実装することになりました。
今回は、Unit定義ファイル内でログ出力を実装する方法をまとめていきます。

 環境

Raspberry Pi 4 Model B

OS: Raspbian 32bit（64bit版でも実装可能です）


Python 3.11.6


 実...]]></description><link>https://zenn.dev/headwaters/articles/d2a70dab380064</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/d2a70dab380064</guid><pubDate>Tue, 21 May 2024 08:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QrrH3iFC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLinux%255D%2520Systemd%25E3%2581%25AEUnit%25E5%25AE%259A%25E7%25BE%25A9%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7%25E6%2597%25A5%25E6%2599%2582%25E5%2585%25A5%25E3%2582%258A%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuichiro%2520Sakata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYmQ1ZTMxYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shuichiro Sakata</dc:creator></item><item><title><![CDATA[新MacでLinux VM版：Kubuntu24.04LTS ⑤ VM Setting Parallels]]></title><description><![CDATA[本連載ではAppleSilicon(M1系)で仮想マシン上にLinuxを入れる方法を、全くの初心者の方でも理解できるように説明しています。
この連載の全記事目次はこちら

 1.起動前にVMの設定を
ここまででKubuntuが動くようになりました。早速動かしたい！と思うでしょうが、急がば回れ。まずは仮想マシンの設定をしましょう。というのも、設定をしないと仮想マシンでLinuxを動かす本来の力を発揮しないからです。
詳細に入り込み過ぎると良くないので、今回の設定で可能になることを書いておくと、Parallels、UTMとも適切なドライバをインストールすることで下記の内容が可能になります。
...]]></description><link>https://zenn.dev/armcore/articles/kubuntu2404_5</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/kubuntu2404_5</guid><pubDate>Mon, 20 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xFuJ3W89--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%2520VM%25E7%2589%2588%25EF%25BC%259AKubuntu24.04LTS%2520%25E2%2591%25A4%2520VM%2520Setting%2520Parallels%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[tarコマンドの基本と、SSHを介した便利な使い方]]></title><description><![CDATA[tarは便利なコマンドではあるものの、慣れていない人にとっては扱いづらく、いくつか注意点もあるコマンドです。
またリモートにあるサーバとファイルのやり取りをする際、 scp などを使うことが多いと思います。
これもファイル数の多いディレクトリやサイズの大きいテキストファイルを扱う際は、tarを使うことで効率的に行える場合もあります。
そのためtarコマンドの注意点やリモートサーバとのやり取りで覚えておくとよい使い方を記載します。

 tarコマンドの注意点
（使い方だけ知りたい方は、基本的な使い方 までスキップしてください）
tar は Tape ARchive という名称から来ているこ...]]></description><link>https://zenn.dev/shuh/articles/tar-command-use</link><guid isPermaLink="true">https://zenn.dev/shuh/articles/tar-command-use</guid><pubDate>Mon, 20 May 2024 10:52:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GL5GBVVr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tar%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E3%2580%2581SSH%25E3%2582%2592%25E4%25BB%258B%25E3%2581%2597%25E3%2581%259F%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODg1Y2EwN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusch</dc:creator></item><item><title><![CDATA[ElectronでWindows/Linux向けアプリの習作開発を通して感じた注意点・感想]]></title><description><![CDATA[
 はじめに

TypeScript + Electronで「PDF Shift」というWindows, Linux向けのデスクトップアプリを個人の習作で作成しました。
内容としてはPDFのページ入れ替えなどが出来るツールで、アプリとしては他に機能がずっと良いものが沢山あります（何よりMac OSではデフォルトのビューアで同様の操作が手軽に出来た！笑）。
が、今回「マルチプラットフォームでデスクトップアプリを作ることに挑戦したい！」って気持ちがあり、かつ過去にもElectronを学んでいたことから、トライしてみました。
後半ちょっと詰まってしまいましたが、大体1週間ちょっとくらいかけて作...]]></description><link>https://zenn.dev/shimarisu_121/articles/ab9e3dfe565b2c</link><guid isPermaLink="true">https://zenn.dev/shimarisu_121/articles/ab9e3dfe565b2c</guid><pubDate>Sun, 19 May 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UaNSs3U8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Electron%25E3%2581%25A7Windows%252FLinux%25E5%2590%2591%25E3%2581%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E7%25BF%2592%25E4%25BD%259C%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%25A6%25E6%2584%259F%25E3%2581%2598%25E3%2581%259F%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2583%25BB%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimarisu_121%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyYTA5YjFmMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimarisu_121</dc:creator></item><item><title><![CDATA[新MacでLinux VM版：Kubuntu24.04LTS ④ Kubuntu Package]]></title><description><![CDATA[本連載ではAppleSilicon(M1系)で仮想マシン上にLinuxを入れる方法を、全くの初心者の方でも理解できるように説明しています。
この連載の全記事目次はこちら

 1.先に進むための最低限の知識
ここから先、Linuxを操作しながらKubuntuをインストールして行きますが、最低限下記の知識が必要です。
・ログインの仕方
・システム終了の仕方
・コマンドの入れ方
・仮想端末の使い方
・エディタの操作(vimもしくはnano)
当然知っているという方は読み飛ばして下さい。

 1-1.ログインの仕方
これは簡単ですし既に前回の最後で実行したと思います。設定したIDとパスワードを入...]]></description><link>https://zenn.dev/armcore/articles/kubuntu2404_4</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/kubuntu2404_4</guid><pubDate>Sun, 19 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U7fuI0M1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%2520VM%25E7%2589%2588%25EF%25BC%259AKubuntu24.04LTS%2520%25E2%2591%25A3%2520Kubuntu%2520Package%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[Swapメモリの作成・削除]]></title><description><![CDATA[サーバ等のLinux環境でメモリ不足で困ったときの対応としてSwapメモリを作成する方法をまとめておきます。
一時的な対処だった場合に、作成したSwapメモリを削除してクリーンに戻す方法も記載します。
メモリ不足になっている状態自体は好ましいことではないので、本当はサーバ自体のメモリを増設するべきですが、

オンプレ等で簡単にメモリの増設ができない😵
AWS EC2 などのクラウドインスタンスでも、常時稼働しているサーバで冗長構成等もないので気軽に停止してスペックアップできない🤢
メモリを増やすとなると費用がかかるし、各所に申請等しなくてめんどくさいので、ちゃちゃっと対処したい😈
その他...]]></description><link>https://zenn.dev/shuh/articles/swap-memory-linux</link><guid isPermaLink="true">https://zenn.dev/shuh/articles/swap-memory-linux</guid><pubDate>Sun, 19 May 2024 06:36:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BvQyNynS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Swap%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODg1Y2EwN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusch</dc:creator></item><item><title><![CDATA[Linux 使いになりたい人向けの Intel N100 ミニ PC で構築する開発環境（１０）- VS Code の設定]]></title><description><![CDATA[
 はじめに
これは、Linux 使いになりたい人向けに Intel N100 ミニ PC を使って開発環境を構築する方法を解説する記事の第１０弾です。第１弾はLinux 使いになりたい人向けの Intel N100 ミニ PC で構築する開発環境（１） - 構築する開発環境について にあり、そこから第２弾へと続いています。そちらからご覧ください。
ここで使用する Intel N100 ミニ PC の仕様は次のものを前提とします。



項目
内容




OS
Windows 11 Pro


CPU
Intel N100


メモリ
16GB


ストレージ
SSD 512 GB

...]]></description><link>https://zenn.dev/hiro345/articles/n100_10_20240519</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/n100_10_20240519</guid><pubDate>Sun, 19 May 2024 00:18:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--52QqTfQI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%2520%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%2520Intel%2520N100%2520%25E3%2583%259F%25E3%2583%258B%2520PC%2520%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2588%25EF%25BC%2591%25EF%25BC%2590%25EF%25BC%2589-%2520VS%2520Code...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[新MacでLinux VM版：Kubuntu24.04LTS ③ Ubuntu Server]]></title><description><![CDATA[本連載ではAppleSilicon(M1系)で仮想マシン上にLinuxを入れる方法を、全くの初心者の方でも理解できるように説明しています。
この連載の全記事目次はこちら

 1.予備知識とインストールの流れ
さて、いよいよインストールです。が、いくつか説明しておくことがあります。

 1-2.Kubuntuとは何か
KubuntuというのはUbuntuというメジャーなディストリビューションの派生版で、UbuntuをベースにKDE Plasmaというデスクトップ（GUI環境）を組み合わせて馴染ませたものになります。馴染ませるとは単にKDEを入れただけではなく、Ubuntuのフル機能を利用で...]]></description><link>https://zenn.dev/armcore/articles/kubuntu2404_3</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/kubuntu2404_3</guid><pubDate>Sat, 18 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J5DFzwh3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%2520VM%25E7%2589%2588%25EF%25BC%259AKubuntu24.04LTS%2520%25E2%2591%25A2%2520Ubuntu%2520Server%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[新MacでLinux VM版：Kubuntu24.04LTS ① prologue]]></title><description><![CDATA[本連載ではAppleSilicon(M1系)で仮想マシン上にLinuxを入れる方法を、全くの初心者の方でも理解できるように説明しています。
この連載の全記事目次はこちら

 1.新章の開始✨

 1-1.まえがき
はじめまして、Armlinです。
これから始まるのは、「Mac買ったんだけど、Linux使いたいんだよね。」という方に向けた記事です。今後シリーズで書いていこうと思います。とにかく使える様にしたいけど、記事が多すぎる。という方。ひとまずこの記事を辿れば使えるようになりますよ👀
インストール完了後はプログラミング環境の構築など別シリーズに繋げて行きたいと思っています。その為に今回...]]></description><link>https://zenn.dev/armcore/articles/kubuntu2404_1</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/kubuntu2404_1</guid><pubDate>Fri, 17 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GwHauc94--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%2520VM%25E7%2589%2588%25EF%25BC%259AKubuntu24.04LTS%2520%25E2%2591%25A0%2520prologue%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[新MacでLinux VM版：Kubuntu24.04LTS ② Virtual Machine]]></title><description><![CDATA[本連載ではAppleSilicon(M1系)で仮想マシン上にLinuxを入れる方法を、全くの初心者の方でも理解できるように説明しています。
この連載の全記事目次はこちら

 1.下準備

 1-1.仮想マシンの作り方
M1系のMacで仮想マシンを作るには、専用のアプリを使います。そもそも仮想マシンとは何か簡単に説明しておきます。

 ▷仮想マシンはソフトウェアで実現する、本物そっくりのPC
パソコンは多くの部品が集まって出来ています。そしてその上でOS(MacOSなど)が動いています。しかしOSは単なるプログラムですから、本当にそこに物理的にパソコンが存在するかをOS自身が確認するわけで...]]></description><link>https://zenn.dev/armcore/articles/kubuntu2404_2</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/kubuntu2404_2</guid><pubDate>Fri, 17 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aYeXzR96--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%2520VM%25E7%2589%2588%25EF%25BC%259AKubuntu24.04LTS%2520%25E2%2591%25A1%2520Virtual%2520Machine%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[Raspberry Piを使ってストリーミング配信システムを作ってみる]]></title><description><![CDATA[Raspberry PiからNGINXとRTMP/HLSを使って配信サーバを作成し、試したときの作業メモです。

 サーバ側の準備
今回はOSとしてubuntu 22.04.3 LTSを用いました。

 NGINXのインストール
nginxとrtmpモジュールをインストールします。
　sudo apt install -y nginx
　sudo apt install -y libnginx-mod-rtmp
インストールが終わったら、配信に使用するためのテンポラリ用のディレクトリを作成します。
sudo chmod -R 755 /tmp/hls
設定ファイルは以下のようにしました。...]]></description><link>https://zenn.dev/kobayutapon/articles/8a928dff86c45c</link><guid isPermaLink="true">https://zenn.dev/kobayutapon/articles/8a928dff86c45c</guid><pubDate>Fri, 17 May 2024 01:45:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---jh_yK8B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E9%2585%258D%25E4%25BF%25A1%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2590%25E3%2583%25A6%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2J6SVJNTHZLREJYd0NFYUQyaDctMktyYk9rU3F5NjNLSWtodEk3UzlMQmZvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>コバユタ</dc:creator></item><item><title><![CDATA[SadServers解説#17 "Melbourne": WSGI with Gunicorn]]></title><description><![CDATA[https://ja.wikipedia.org/wiki/メルボルン

 問題概要

 シナリオ
Gunicornを使用したWSGI

 問題詳細
/home/admin/wsgi.pyというPython WSGIウェブアプリケーションファイルがあり、そのアプリケーションは文字列 "Hello, world!" を返します。このファイルはGunicornサーバーによって提供され、その手前にはnginxサーバーが配置されています（両方のサーバーはsystemdによって管理されています）。
HTTPリクエストのフローは次のようになります

ウェブクライアント (curl) -&gt; Ng...]]></description><link>https://zenn.dev/comf_nakamura/articles/sadservers_17</link><guid isPermaLink="true">https://zenn.dev/comf_nakamura/articles/sadservers_17</guid><pubDate>Thu, 16 May 2024 15:00:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eSl1R_3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SadServers%25E8%25A7%25A3%25E8%25AA%25AC%252317%2520%2522Melbourne%2522%253A%2520WSGI%2520with%2520Gunicorn%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E4%25B8%25AD%25E6%259D%2591%25EF%25BD%259C%25E6%2596%25B0%25E4%25BA%25BA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1OGFjNDI2M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>コンフォートゾーン中村｜新人クラウドエンジニア</dc:creator></item><item><title><![CDATA[デバッグのコツ]]></title><description><![CDATA[
 比較する。
現状、期待通りに動作しているものとの比較を行うことで、異常の原因を探す手法です。
プログラミングの他、Linuxでのサーバ構築で威力を発揮します。
ただし、人間が目で確認するだけでは細かい違いを調べるのは難しいため、差分検出ツールを使います。
windowsであればwinmerge、macであればCompareMergeがオススメ。
この二つはフォルダ比較という機能を備えていて、同じディレクトリ構造であれば数百個のファイルでも一括で差分を洗い出すことができます。

CompareMerge
目で間違い探しをしていては抜け漏れが発生します。間違えない人でも無駄に疲れます。
...]]></description><link>https://zenn.dev/k_tabuchi/articles/02176795753152</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/02176795753152</guid><pubDate>Thu, 16 May 2024 13:06:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WNQ5X7SP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[新MacでLinuxシリーズ 目次]]></title><description><![CDATA[
 MacでLinuxを使おう！🍎

 なぜMacでLinuxを使うの
「Linuxと言えばPCでしょ？それにMacならOSがUNIXじゃなかったっけ？」
　そんな風に思う人も多いでしょう。でもAppleシリコン（M1系CPU）を搭載した2020年以降のMacは本当に優秀。今では天才的な開発者のみなさまによって、ネイティブに（つまりMacOSなしに直接ハードウェアの上で）Linuxを動かすこともできます。確かにMacOSはUNIXです。が、UNIXとして使う、という点ではLinuxの方が文献や開設も豊富。Linuxを学ぶことでMacOSの使い方も変わるでしょう。
　実はLinuxの生みの...]]></description><link>https://zenn.dev/armcore/articles/maclinux_index</link><guid isPermaLink="true">https://zenn.dev/armcore/articles/maclinux_index</guid><pubDate>Thu, 16 May 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uRLw-EmK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0Mac%25E3%2581%25A7Linux%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%2520%25E7%259B%25AE%25E6%25AC%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Armlin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIxNWUwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Armlin</dc:creator></item><item><title><![CDATA[Java版 Minecraft Server を Docker で構築する（Vanilla）]]></title><description><![CDATA[コンテナ型仮想環境で、Java版マインクラフトの公式サーバー Vanilla を構築します。なお、使用するコンテナイメージは Docker 社が運営する公開レジストリの Docker Hub から取得します。
!
用語：Vanilla【バニラ】
Java版マインクラフトにおける、MODやデータパックの導入およびテクスチャ変更等の手を加えていない状態のこと。呼称についてはフレーバーやトッピングのないバニラアイスクリームに由来する。


 🛠️ 事前準備
デバイスやソフトウェアは以下を用いる。

💻 サーバ機（Ubuntu Server、Docker）
🌐 Docker Hub


💿 it...]]></description><link>https://zenn.dev/mesgory/articles/e3dc962bd38dfd</link><guid isPermaLink="true">https://zenn.dev/mesgory/articles/e3dc962bd38dfd</guid><pubDate>Wed, 15 May 2024 18:01:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x2in9OPY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E7%2589%2588%2520Minecraft%2520Server%2520%25E3%2582%2592%2520Docker%2520%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Vanilla%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mesgory%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4MGQyYmQ0MjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mesgory</dc:creator></item><item><title><![CDATA[Devcontainerでsystemdが動くコンテナを起動する]]></title><description><![CDATA[VS CodeのDevcontainerでsystemdが動くコンテナを起動する方法を記します。
今回作成した環境(CentOS 7, Ubuntu 22.04, Red Hat Universal Base Image 9)は下記リポジトリで公開しています。


 実施すること
Dockerfile側とdevcontainer.json側のそれぞれで設定が必要です。

 Dockerfile側
以下のようにENTRYPOINTを指定します。
/sbin/initを指定することでsystemdが起動します。
devcontainer.json側で"runArgs": ["--entryp...]]></description><link>https://zenn.dev/yutotnh/articles/9e8a4ce455ac44</link><guid isPermaLink="true">https://zenn.dev/yutotnh/articles/9e8a4ce455ac44</guid><pubDate>Wed, 15 May 2024 16:17:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--li2EJI87--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Devcontainer%25E3%2581%25A7systemd%25E3%2581%258C%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yutotnh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCMGg4Y3Vrb29zUnFuekVBZ0l2cFFxb0p0X3lIa1Z3QVBUYU5TPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yutotnh</dc:creator></item></channel></rss>