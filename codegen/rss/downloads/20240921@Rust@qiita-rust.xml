<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/rust/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/rust/feed"/>
  <title>Rustタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでRustタグが付けられた新着記事</description>
  <updated>2024-09-21T19:53:21+09:00</updated>
  <link>https://qiita.com/tags/rust</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1914258</id>
    <published>2024-09-21T19:53:21+09:00</published>
    <updated>2024-09-21T19:53:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kino-ma/items/082656e728eded33d034"/>
    <url>https://qiita.com/kino-ma/items/082656e728eded33d034</url>
    <title>Rust で依存先のソースを勝手に書き換える</title>
    <content type="html">目的
Rust で依存しているクレートに（自分にとっての）不都合があった時、勝手に書き換える方法を紹介します。
使用例：勝手に feature を追加したい、一部の不要なコードを消したい
ほとんど以…</content>
    <author>
      <name>kino-ma</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1914214</id>
    <published>2024-09-21T17:45:13+09:00</published>
    <updated>2024-09-21T17:50:57+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/flowerhill/items/187883f7cb5eefac0764"/>
    <url>https://qiita.com/flowerhill/items/187883f7cb5eefac0764</url>
    <title>AtCoder Beginner Contest 371 振り返り</title>
    <content type="html">ABC371の振り返りです。久しぶりに書きます。
結果
A,Bの2完でした。今回むずかった


解説
A問題

問題

https://atcoder.jp/contests/abc371/tasks/ab…</content>
    <author>
      <name>flowerhill</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1913553</id>
    <published>2024-09-19T20:04:45+09:00</published>
    <updated>2024-09-19T20:12:20+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/lucidfrontier45/items/508a5441d704b196697b"/>
    <url>https://qiita.com/lucidfrontier45/items/508a5441d704b196697b</url>
    <title>Rustの乱数生成器はどんな型で受けるのが正解なのか</title>
    <content type="html">背景
Rustは静的型付言語であり、型に関しては厳密である一方で自由度を担保する仕組みも豊富にあります。その一つがtrait objectと呼ばれるものであり dyn TraitA の様に型が宣言さ…</content>
    <author>
      <name>lucidfrontier45</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1913366</id>
    <published>2024-09-19T12:16:29+09:00</published>
    <updated>2024-09-19T12:16:29+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yukunC/items/192ce2e8cacb47e75513"/>
    <url>https://qiita.com/yukunC/items/192ce2e8cacb47e75513</url>
    <title># 音声信号処理の勉強ノート - 3. 音声入力/出力</title>
    <content type="html">音声信号処理の勉強ノート - 3. 音声入力/出力
この記事では、リアルタイムDSPの基本的な理解を深めるために、CPALを使用したシンプルなオーディオ入出力の例を勉強します。この例では、リアルタイ…</content>
    <author>
      <name>yukunC</name>
    </author>
  </entry>
</feed>
