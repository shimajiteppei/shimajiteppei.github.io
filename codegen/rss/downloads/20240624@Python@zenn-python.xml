<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 24 Jun 2024 10:18:15 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Java/Go/Node.js/Pythonのタスクランナー]]></title><description><![CDATA[
 概要
Zennで記事を1回書いてみようと思い、筆者がこれまでに使ったことがあるタスクランナーを整理した記事になります。各ツールの比較をする記事ではありません。

 タスクランナーとは
この記事ではソースコードのビルド、静的解析、Unit Testの実行など、開発時に必要となる処理をコマンドラインから実行するソフトウェアを指しています。

 各言語のタスクランナー

 Java

 Apache Maven
https://maven.apache.org/
mvnコマンドでビルドしたり、pom.xmlファイルで依存性を管理するJava向けのツール。
最近はGradleばかりを使うよう...]]></description><link>https://zenn.dev/glavis/articles/0062f5a9e926a4</link><guid isPermaLink="true">https://zenn.dev/glavis/articles/0062f5a9e926a4</guid><pubDate>Mon, 24 Jun 2024 09:08:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u5GOLmRV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%252FGo%252FNode.js%252FPython%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Glavis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWpkSFU2WHVTX0o1cGE1X3JQdTNJSUphMm1ZdlJ2LXByWTA0ZUNEQzNLdkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Glavis</dc:creator></item><item><title><![CDATA[WSL2上のDockerコンテナから`plt.show()`でグラフを表示するための設定]]></title><description><![CDATA[
 これはなに
WSL2（Ubuntu）上のDockerコンテナから、matplotlibで作成したグラフをshow()メソッドで表示するための設定のメモ。

 前提
Dockerコンテナからplt.show()でグラフを表示しようとすると、下記のようなエラーが発生して、グラフが表示されない。

error
$ /usr/local/bin/python /home/user/workspaces/src/main.py
/home/user/workspaces/src/main.py:9: UserWarning: FigureCanvasAgg is non-interactive...]]></description><link>https://zenn.dev/nakurei/articles/display-graph-from-within-docker-container-on-wsl2</link><guid isPermaLink="true">https://zenn.dev/nakurei/articles/display-graph-from-within-docker-container-on-wsl2</guid><pubDate>Sun, 23 Jun 2024 22:55:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b5PcgTXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E4%25B8%258A%25E3%2581%25AEDocker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%258B%25E3%2582%2589%2560plt.show%2528%2529%2560%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NakuRei</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3匿名関数（lambda）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonにおける匿名関数（anonymous function）は、名前を持たない関数のことです。通常の関数定義と異なり、lambdaキーワードを使って一行で定義されます。

 匿名関数の基本構文
lambda 引数1, 引数2, ... : 式
この構文では、lambdaの後に引数を指定し、コロンの後に式を記述します。式の結果が匿名関数の戻り値となります。

 匿名関数の特徴

名前を持たない: ...]]></description><link>https://zenn.dev/datasciencekun/articles/410b6e5b3c39c7</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/410b6e5b3c39c7</guid><pubDate>Sun, 23 Jun 2024 10:52:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SPkzBjCR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E5%258C%25BF%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%25EF%25BC%2588lambda%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3の関数]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
関数は組織化され、再使用可能であり、単一または関連する機能のコード・セグメントを実装することです。
関数はアプリケーションのモジュール性とコードの重複利用を向上させます。Pythonにはprint()のような多くの内蔵関数がありますが、自分で関数を作成することもできます。これはカスタム関数と呼ばれます。

 関数の定義と呼び出し
Pythonで関数を定義するには、defキーワードを使用します。
関数の呼...]]></description><link>https://zenn.dev/datasciencekun/articles/31a1ff7202c3ed</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/31a1ff7202c3ed</guid><pubDate>Sun, 23 Jun 2024 10:33:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ob_r8gm1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[開発環境管理はとりあえずmiseで]]></title><description><![CDATA[Mac限定です(Windowsサポート外)
開発しているとpython, nodejs, ruby, perl, golang...といろいろな言語の実行環境が必要になると思います。
それぞれの言語環境に閉じて見れば、pyenvとかrbenvとか、色々な管理ツールがありますが、それぞれ当然別個のものなのでだんだん混乱してきます。
そしてそれすら使っていない場合は brew install で乱暴にインストールしてもはやカオスなローカル環境ができがちでした...
半年前くらいにasdfという開発環境管理ツールを見つけて適当に使っていたのですが、最近ではさらにasdfの課題も解消したmise...]]></description><link>https://zenn.dev/knziiy/articles/fa32a6e6a3aa63</link><guid isPermaLink="true">https://zenn.dev/knziiy/articles/fa32a6e6a3aa63</guid><pubDate>Sun, 23 Jun 2024 08:37:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UR5aScJL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AF%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259Amise%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knziiy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTFkYzlkZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knziiy</dc:creator></item><item><title><![CDATA[FastUI＋FastAPIによるPythonフルスタック開発]]></title><description><![CDATA[こんにちは、学生エンジニアのMasamichiです！
春学期はとにかく忙しくて、全然筋トレできず体重が5kg以上落ちてしまいました。頑張って夏までに体型を戻したいです💪
さて、昨今ではバックエンドに使用されるような言語でもフロントエンドを構築する技術が増えてきています。そこで今回はPythonのFastUIフレームワークを使用してWebフロントエンドを構築してみたいと思います。

 概要
Pythonで使用できるフロントのライブラリは主に以下のようなものがあるそうです：

ReactPy
FastUI
mesop

などが挙げられます。今回はこの中でもFastUIフレームワークを使用して...]]></description><link>https://zenn.dev/masamichi2004/articles/350647755acc4b</link><guid isPermaLink="true">https://zenn.dev/masamichi2004/articles/350647755acc4b</guid><pubDate>Sun, 23 Jun 2024 08:12:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3MF-UNcL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastUI%25EF%25BC%258BFastAPI%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BPython%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masamichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5MTFkMjk2OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masamichi</dc:creator></item><item><title><![CDATA[宇宙からの地球観測10章 校正(Calibration)]]></title><description><![CDATA[宇宙からの地球観測　
第10章は、 校正についてです。　なにか校正と言われると紙の上のデザインをイメージしてしまうので、Calibrationと言われたほうがしっくりきます。　どんなに良いセンサーを積んでいてもCalibrationが不十分だと性能が悪いままです。民生品の場合は、製造工程の最終工程として重要なものですが、衛星の場合は打ち上げたあとの宇宙で行うことになります。　このCalibrationをいかに素早く行うかが、今後コンステレーション運用をしていく時に重要になるはずなので　しっかり理解しておきたいと思います。

 問題 10.1

打ち上げ前に幾何学校正された SAR を，打...]]></description><link>https://zenn.dev/kozayupapa/articles/4fdcdb3eacda9e</link><guid isPermaLink="true">https://zenn.dev/kozayupapa/articles/4fdcdb3eacda9e</guid><pubDate>Sun, 23 Jun 2024 06:38:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--as1eTLBo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%2587%25E5%25AE%2599%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E5%259C%25B0%25E7%2590%2583%25E8%25A6%25B3%25E6%25B8%25AC10%25E7%25AB%25A0%2520%25E6%25A0%25A1%25E6%25AD%25A3%2528Calibration%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kozayupapa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Y2ZkMTM5ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kozayupapa</dc:creator></item><item><title><![CDATA[ChatGPT(gpt4o)でソフトウェア治具をさっと作る例2]]></title><description><![CDATA[
 ChatGPT(gpt4o)でソフトウェア治具をさっと作る例2

 はじめに
ChatGPT (GPT-4) を使って簡単なツール（治具）を作成し、PyPIに公開するまでの過程を紹介します。
今回は、AWS DynamoDBの操作を支援するコマンドラインツールを作りました。
このツールはDynamoDBテーブルのリスト表示とデータエクスポート機能を持っています。

 ステップ1: ツールの仕様決定とコーディング
まず、作成するツールの仕様を決定します。今回作成するツールの内容を結構細かく考えつつ、プロンプトを書きます。

 指示:
pythonのコマンドラインツールの実装を手伝ってく...]]></description><link>https://zenn.dev/crandim_r_and_d/articles/240623_jig_quick_build_with_gpt4o_2</link><guid isPermaLink="true">https://zenn.dev/crandim_r_and_d/articles/240623_jig_quick_build_with_gpt4o_2</guid><pubDate>Sun, 23 Jun 2024 04:34:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rVR8Ek64--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2528gpt4o%2529%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E6%25B2%25BB%25E5%2585%25B7%25E3%2582%2592%25E3%2581%2595%25E3%2581%25A3%25E3%2581%25A8%25E4%25BD%259C%25E3%2582%258B%25E4%25BE%258B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tokoi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5Y2NiZGRkODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tokoi</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーイテレータとジェネレータ]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonにおけるイテレータ（Iterator）とジェネレータ（Generator）は、反復処理を行うための重要なツールです。以下でそれぞれについて詳しく説明します。

 イテレータ（Iterator）
イテレータは、要素を一つずつ順に返すオブジェクトのことです。Pythonでは、イテレータは以下の2つのメソッドを実装するオブジェクトとして定義されます：


iter(): イテレータオブジェクト自身...]]></description><link>https://zenn.dev/datasciencekun/articles/85b7e14e247a73</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/85b7e14e247a73</guid><pubDate>Sun, 23 Jun 2024 03:43:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iWETxnA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BC%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[ChatGPT(gpt4o)でソフトウェア治具をさっと作る例1]]></title><description><![CDATA[
 ChatGPT(gpt4o)でソフトウェア治具をさっと作る例1
この例では、ChatGPT（GPT-4）を利用して、PDF結合ツール「PDF結合君」を作成します。
このツールは、複数のPDFファイルを1つに結合するための簡単なGUIアプリケーションです。

 1. ツールの要件定義
まず、ツールの基本的な要件を定義しました。今回は以下の要件を設定しました。

複数のPDFファイルを選択して1つのPDFに結合する
GUIを使用して直感的に操作できる
ツールはexeファイルとして配布可能にする

これに基づき、次のようなREADME.mdを作成しました。
# PDF結合君

### 説明...]]></description><link>https://zenn.dev/crandim_r_and_d/articles/240623_jig_quick_build_with_gpt4o</link><guid isPermaLink="true">https://zenn.dev/crandim_r_and_d/articles/240623_jig_quick_build_with_gpt4o</guid><pubDate>Sun, 23 Jun 2024 03:36:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---26LZsRa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2528gpt4o%2529%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E6%25B2%25BB%25E5%2585%25B7%25E3%2582%2592%25E3%2581%2595%25E3%2581%25A3%25E3%2581%25A8%25E4%25BD%259C%25E3%2582%258B%25E4%25BE%258B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tokoi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5Y2NiZGRkODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tokoi</dc:creator></item><item><title><![CDATA[[Python] Pillowより10倍高速に画像をリサイズする]]></title><description><![CDATA[
 はじめに
この記事では、cykooz.resizerを使って高速に画像をリサイズする方法を紹介します。

 cykooz.resizer
cykooz.resizerは画像のリサイズを行うための Python パッケージです。
Rust crate のfast_image_resizeを pyo3 を使ってバインディングしています。
fast_image_resize は SIMD を活用することで高速に画像のリサイズを実現しています。

 ベンチマーク例
これ以降は公式の README を引用しながら紹介していきます。まずはベンチマークの例です。

 環境


CPU: AMD R...]]></description><link>https://zenn.dev/nishikoh/articles/fe3111b52ede22</link><guid isPermaLink="true">https://zenn.dev/nishikoh/articles/fe3111b52ede22</guid><pubDate>Sun, 23 Jun 2024 00:18:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mZDOdY8k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520Pillow%25E3%2582%2588%25E3%2582%258A10%25E5%2580%258D%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishikoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MzI0MTlkMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nishikoh</dc:creator></item><item><title><![CDATA[Content Negotiationを使って、PythonでURIからRDFを取得する]]></title><description><![CDATA[
 概要
WikidataのエンティティのURIからRDFデータを取得する機会がありましたので、備忘録です。

 Content Negotiationを使用しない
まず以下のように、headersを空のままリクエストします。
import requests

# URL for the Wikidata entity in RDF format
url = "http://www.wikidata.org/entity/Q12418"

headers = {
}

# Sending a GET request to the URL
response = requests.get(u...]]></description><link>https://zenn.dev/nakamura196/articles/64181175703f99</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/64181175703f99</guid><pubDate>Sat, 22 Jun 2024 22:58:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cvvh7-Z0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Content%2520Negotiation%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581Python%25E3%2581%25A7URI%25E3%2581%258B%25E3%2582%2589RDF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[[C++]Pythonに追いつきたい！２ 自作プログラムでSSH接続する]]></title><description><![CDATA[
 この記事の対象読者
Pythonのparamikoモジュールの使われ方を見たとき、「えっ、こんな手軽にSSHが使えるんだ！」と、感じた事はないでしょうか？「C++で、ワンポイントで手軽にSSHを使いたい。」そんなニッチな方向けの記事です。ちなみに、C++でがっつりSSHを使いたい人向けには、libssh2というライブラリが公開されていますので、こちらをお勧めします。
　また、この技法は、
https://zenn.dev/goldsmith/articles/34a61a41d57641
の、SubProcessクラスを使って構築しています。こちらの記事も、よろしければご覧ください。...]]></description><link>https://zenn.dev/goldsmith/articles/fbcfbf6c88f06f</link><guid isPermaLink="true">https://zenn.dev/goldsmith/articles/fbcfbf6c88f06f</guid><pubDate>Sat, 22 Jun 2024 18:51:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qqU0QLRy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BC%252B%252B%255DPython%25E3%2581%25AB%25E8%25BF%25BD%25E3%2581%2584%25E3%2581%25A4%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%2592%2520%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25A7SSH%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GoldSmith%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3c5WVdrYnhpV3ZjMC1adW9fN0JibWtxVUZyVU5aaUgwU1BqNWJUemFsajNKQkJRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GoldSmith</dc:creator></item><item><title><![CDATA[【GUI入門】tkinterチュートリアル（Python 3.8）]]></title><description><![CDATA[ 〇内容
 「Python」の「tkinter」ライブラリを使用したGUI関連の情報をまとめております。
 ]]></description><link>https://zenn.dev/yuni50314/books/python_tkinter_ver38</link><guid isPermaLink="true">https://zenn.dev/yuni50314/books/python_tkinter_ver38</guid><pubDate>Sat, 22 Jun 2024 17:03:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--joppNJrS--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yMjJmOGIzOGU0LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>yuni50314</dc:creator></item><item><title><![CDATA[【モデル処理入門】Open3Dチュートリアル（Python 3.8）]]></title><description><![CDATA[ 〇内容
 「Python」の「Open3D」ライブラリを使用したモデル処理関連の情報をまとめております。
 ]]></description><link>https://zenn.dev/yuni50314/books/python_open3d_ver38</link><guid isPermaLink="true">https://zenn.dev/yuni50314/books/python_open3d_ver38</guid><pubDate>Sat, 22 Jun 2024 17:03:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_6zCAsRp--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yZTk4MzhiMzc5LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>yuni50314</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3内包表記]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Python内包表記（comprehensions）は、リスト、セット、辞書、およびジェネレータを簡潔かつ効率的に作成するための構文です。内包表記を使用すると、少ないコード行でシーケンスを生成、フィルタリング、および変換できます。主に以下の種類があります：リスト内包表記、セット内包表記、辞書内包表記、およびジェネレータ式。

 リスト内包表記
リスト内包表記を使用すると、新しいリストを生成するための簡潔...]]></description><link>https://zenn.dev/datasciencekun/articles/8415eee461c5e8</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/8415eee461c5e8</guid><pubDate>Sat, 22 Jun 2024 12:51:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e8C9edwf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E5%2586%2585%25E5%258C%2585%25E8%25A1%25A8%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3ループ（for、while）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonのループ（循環）文は、特定のコードブロックを繰り返し実行するための構文です。Pythonでは、主に for ループと while ループの2つのループ構文があります。

 forループ
for ループは、イテラブル（リスト、タプル、文字列、レンジなど）の各要素に対して一度ずつ反復処理を行います。
forループの一般的なフォーマットは以下の通りです。
for &lt;variable&gt; ...]]></description><link>https://zenn.dev/datasciencekun/articles/1eca09f2df4a71</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/1eca09f2df4a71</guid><pubDate>Sat, 22 Jun 2024 12:29:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uiafo2yH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25EF%25BC%2588for%25E3%2580%2581while%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[OpenAI Whisperのコードの動きを追ってみるメモ]]></title><description><![CDATA[ただ愚直に動きを追う

 参考
https://youtu.be/2rS3DdvW-pQ

 環境準備

 レポジトリ
git clone https://github.com/openai/whisper.git
でレポジトリを持ってくる.

 ファイル用意

 音声データ
一番上に適当なwavファイルなども追加. (whisper.cppに入っていたjfk.wav音声データ)
https://github.com/ggerganov/whisper.cpp/blob/master/samples/jfk.wav


 trymain.pyを追加
baseサイズのmodelを使用する....]]></description><link>https://zenn.dev/sarutabiko/articles/bd4bdc538884d7</link><guid isPermaLink="true">https://zenn.dev/sarutabiko/articles/bd4bdc538884d7</guid><pubDate>Sat, 22 Jun 2024 10:45:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aoPmNmO0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Whisper%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%258B%2595%25E3%2581%258D%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarutabiko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y296ZkZWTnpka3IzQ3VkanhDYzdrSHVNZFQ4Ni1NN1c3X2FBYkYzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarutabiko</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3条件制御（if-else）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonの条件制御は、プログラムの実行フローを制御するために使用されます。これは主に、if文、elif文、およびelse文を使用して行われます。
条件制御の実行手順は次の図で簡単にわかります。

コード実行手順です:


 if、elif、else文
if文は、条件が真（True）の場合に特定のコードブロックを実行します。
elif文（else ifの略）は、最初のif条件が偽（False）で、他の...]]></description><link>https://zenn.dev/datasciencekun/articles/badf3757c5c55a</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/badf3757c5c55a</guid><pubDate>Sat, 22 Jun 2024 09:12:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pdzkpGLt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%25B6%25E5%25BE%25A1%25EF%25BC%2588if-else%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[Flaskで作ったアプリのコードレビューをしてもらった話]]></title><description><![CDATA[
 はじめに
初めてのZennへの投稿になります！
以前、ハッカソンで開発したアプリのコードレビューをしていただいたので、そのときに指摘していただいたことのまとめです。
以下のコードを修正していくという流れで進めていこうと思います！
サインアップ機能のためのコード
controllers/signup.py
from backend import db
from backend.common.models.user import User
import datetime
from flask import Blueprint
from flask import jsonify
from ...]]></description><link>https://zenn.dev/yusuke1115/articles/python-code-review</link><guid isPermaLink="true">https://zenn.dev/yusuke1115/articles/python-code-review</guid><pubDate>Sat, 22 Jun 2024 09:08:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y56aGrYd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:usuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3NWZmYjBiMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>usuke</dc:creator></item></channel></rss>