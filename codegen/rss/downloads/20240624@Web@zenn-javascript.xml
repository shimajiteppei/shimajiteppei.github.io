<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 24 Jun 2024 10:56:21 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[git guiでnode.jsを使う]]></title><description><![CDATA[6/24
今日は、node_moduleからnpm i コマンドでnodemonやexpressをインストールしてviews/.ejsを使ってみた。
app.get('/', (req, res)=&gt;{
    res.render(index);
});

app.get('/r/:subreddit', (req, res)=&gt;{
    const {subreddit} = req.params;
    res.render('subreddit', {subreddit});
});

]]></description><link>https://zenn.dev/denki/articles/e8a68e4bae2385</link><guid isPermaLink="true">https://zenn.dev/denki/articles/e8a68e4bae2385</guid><pubDate>Mon, 24 Jun 2024 10:30:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZXkHLi6y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:git%2520gui%25E3%2581%25A7node.js%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259B%25BB%25E6%25B0%2597%25E5%25B7%25A5%25E4%25BA%258B%25E5%25A3%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2VGcGxjVWxDek5ENGxDR05zUENCSExsbm91Y1liRks0SEYwekVkUGZuS09PR2U5OD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>電気工事士からエンジニアへ</dc:creator></item><item><title><![CDATA[useMemoをなんとなくで使っていたので、ざっくりまとめてみました]]></title><description><![CDATA[
 useMemoとは

 概要

ReactHooksのひとつ
関数の計算結果を保持するためのフック
何回行っても結果が同じ値を保存して再取得します
パフォーマンス向上のために使用されます

const cachedValue = useMemo(calculateValue, dependencies)

 引数


calculateValue :キャッシュしたい値を計算する関数。純関数[1]である必要があります。

dependencies :calculateValue 内で参照されるすべてのリアクティブ値の配列。これが変わると再計算されます。

const result = ...]]></description><link>https://zenn.dev/vertz/articles/a10418f4d236d7</link><guid isPermaLink="true">https://zenn.dev/vertz/articles/a10418f4d236d7</guid><pubDate>Mon, 24 Jun 2024 06:28:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fWQhckZI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useMemo%25E3%2582%2592%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2590%25E3%2583%25BC%25E3%2583%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODQ3MmM1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>バーツ</dc:creator></item><item><title><![CDATA[Prismaで実行されるSQLを確認する]]></title><description><![CDATA[export const prisma = new PrismaClient({
  log: ["query"],
});
参考
https://www.prisma.io/docs/orm/prisma-client/observability-and-logging/logging
https://www.prisma.io/docs/orm/reference/prisma-client-reference#log-levels
]]></description><link>https://zenn.dev/purratto/articles/011e0392a746d4</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/011e0392a746d4</guid><pubDate>Mon, 24 Jun 2024 03:09:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xGSnXQtZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258BSQL%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[Uint8ArrayやArraryBufferやBufferとか]]></title><description><![CDATA[JavaScriptでbinaryを表現するものとしてUint8Array / ArraryBuffer / Bufferとか色々あってそれぞれどう違うんだ？と思ったので改めて調べてみました。

 それぞれの概念について
まずは、それぞれの概念について軽く調べていきます

 ArrayBuffer
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer
ArrayBufferはNode.js環境でもブラウザ環境でもどちらでも使用することが可能で、生のバイナリーデータ...]]></description><link>https://zenn.dev/porokyu32/articles/79b81a46cbba2e</link><guid isPermaLink="true">https://zenn.dev/porokyu32/articles/79b81a46cbba2e</guid><pubDate>Sun, 23 Jun 2024 15:33:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--icgpfzoe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Uint8Array%25E3%2582%2584ArraryBuffer%25E3%2582%2584Buffer%25E3%2581%25A8%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porokyu32%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1c4QWNfYzdFblBBak1hNEFmWUIxNkdyTHI5N1cyS3A1NHVwTEI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>porokyu32</dc:creator></item><item><title><![CDATA[XRPLのペイメントチャネルについて知っておくべきこと3選]]></title><description><![CDATA[今回は私がペイメントチャネル（Payment Channel）を触る中で気がついたことについてまとめてみました。

 ペイメントチャネルとは
ペイメントチャネルは、送金者と受領者がオフチェーンで取引を行うための手段です。
概念としてはチェーンを問わず存在するものとなりますが、XRPLでは、ネイティブ機能としてメインネットで使用できる「高度な支払い機能」のひとつで、アプリケーション開発においては、様々なアイデアを実現できる強力な機能だと思います。
また、XRPL界隈では、略して「ペイチャン」と呼ばれています。

 SettleDelay フィールド
SettleDelayフィールドは資金が...]]></description><link>https://zenn.dev/nabe3/articles/d8f99bf4bb4399</link><guid isPermaLink="true">https://zenn.dev/nabe3/articles/d8f99bf4bb4399</guid><pubDate>Sun, 23 Jun 2024 14:23:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DRztzbt8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XRPL%25E3%2581%25AE%25E3%2583%259A%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2581%25E3%2583%25A3%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%2593%25E3%2581%25A83%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nabe3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjM2ZDU5MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nabe3</dc:creator></item><item><title><![CDATA[HTMX入門【はじめからそうやって教えてくれればいいのに！】]]></title><description><![CDATA[
 はじめに
この記事の内容は、以下の動画でも解説しています。アニメーションでわかりやすくなっているので、ぜひ見てみてください。他にもWebに関する解説動画を投稿しているので、気になる人はチャンネル登録よろしくお願いします！
https://youtu.be/B4X7Pyj4sQY?si=_rOISbwyatYOP52f

 HTMXとは？
HTMX とは、一言で言うと、JavaScriptを書かずに動的なページを簡単に作成できるライブラリのことです。

htmx is a library that allows you to access modern browser features...]]></description><link>https://zenn.dev/ak/articles/735e05d2ba8da0</link><guid isPermaLink="true">https://zenn.dev/ak/articles/735e05d2ba8da0</guid><pubDate>Sun, 23 Jun 2024 13:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W7YCFvKJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTMX%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%258B%25E3%2582%2589%25E3%2581%259D%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258C%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AB%25EF%25BC%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YTNhNmZhNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki</dc:creator></item><item><title><![CDATA[Try catch文の意味について簡単に説明]]></title><description><![CDATA[
 導入
try catch文って何のためにあるのだろうと思ったことはありませんか？
手短に説明します。

 使用場面
try catchで予期しないエラーが発生する可能性があるコードに使う
下記のような場合(絶対ではないが)



使用場面
データベースからデータをとってくるとき
server側の処理




 コードで考える
平均を求めるプログラムを考えます
y:得点
x:人数
try{
if(x===0){
throw new Error('0が入っている');
}
let avg:number=y/x;
console.log('平均点'+avg);
}catch(e){
con...]]></description><link>https://zenn.dev/maiamitorio/articles/fcee42472410af</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/fcee42472410af</guid><pubDate>Sun, 23 Jun 2024 12:32:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uyjeIEwt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Try%2520catch%25E6%2596%2587%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[【JS】スクロール量に応じて矢印が進む]]></title><description><![CDATA[
 スクロール量に応じて進むバーを実装してみました。
https://codepen.io/mdvlzqqm-the-lessful/pen/ExzXmVa

 JSの実装

スクロールされたらcontainerの高さを取得
containerの高さからビューポートの高さを引いて最大のスクロール量を取得
スクロール量が最大のスクロール量の何％かを計算して、その値を矢印のtopに設定する。
footerの直前で止めたいので、スクロール量の割合が100％を超えたら100を設定するようにする。

]]></description><link>https://zenn.dev/nami_06063/articles/d9a6919b7be690</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/d9a6919b7be690</guid><pubDate>Sun, 23 Jun 2024 12:32:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1fPBl6xQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E9%2587%258F%25E3%2581%25AB%25E5%25BF%259C%25E3%2581%2598%25E3%2581%25A6%25E7%259F%25A2%25E5%258D%25B0%25E3%2581%258C%25E9%2580%25B2%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[ReactNativeでGPTからのレスポンスをストリーミングで受け取る方法]]></title><description><![CDATA[
 ストリーミングを正式にサポートしているライブラリや方法がない...
メジャーな二つの方法はどちらも使えませんでした。

Axiosはクライアント側でのストリーミング形式をサポートしていない
fetchだと可能だが、出来るのはWebだけでReactNativeでは出来ない模様（普通のReact.jsと使われているJSのエンジンの違いによるものとのこと）

実際に試してみましたがエラーになりました。


他に方法はないのか探してみたところ一つだけありました。
react-native-communityから出しているreact-native-fetch-apiを使うことでストリーミングで...]]></description><link>https://zenn.dev/headwaters/articles/cc110e5b6866e8</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/cc110e5b6866e8</guid><pubDate>Sun, 23 Jun 2024 11:41:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aMuKgKSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReactNative%25E3%2581%25A7GPT%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ikebowsan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNTM1ZTc4OGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikebowsan</dc:creator></item><item><title><![CDATA[Mac OSでファイル名の濁点が一文字として扱われる場合の対処法（JavaScript編）]]></title><description><![CDATA[
 はじめに
先日、JavaScriptでファイルアップロード処理を実装していたところ、ファイル名が以下のように表示されてしまいました。
アッフ゜ ロート゛ したファイル.csv
元のファイル名は「アップロードしたファイル.csv」だったのですが、濁点、半濁点が一文字として扱われている状態です。今回はこちらをJavaScript(TypeScript)で解消する方法をまとめました。

 前提条件
・Mac OSのPCを使っている
・アップロードしたファイルはuploadedFileで保持している

 解消方法
uploadedFile.name.normalize('NFC');

//...]]></description><link>https://zenn.dev/hrtr/articles/6a238878bfd08e</link><guid isPermaLink="true">https://zenn.dev/hrtr/articles/6a238878bfd08e</guid><pubDate>Sun, 23 Jun 2024 05:15:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nNNpC7pf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%2520OS%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2581%25AE%25E6%25BF%2581%25E7%2582%25B9%25E3%2581%258C%25E4%25B8%2580%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%2589%25B1%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%25EF%25BC%2588JavaScript%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HRTR-86%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MzMxZGQyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HRTR-86</dc:creator></item><item><title><![CDATA[JavaScriptエコシステムに関するワードについて調べてまとめてみた]]></title><description><![CDATA[JavaScriptの文法は一通り学んだので、JavaScriptがブラウザで動く裏側の世界に目を向けてみます。

 パッケージ管理

 モジュール


説明: モジュールとは、独立した機能を持つコードの集合体。コードを論理的に分割し、再利用を容易にする。

背景: 昔のJavaScriptは、名前空間（変数のようなもの）が分けられていなかったため、複数人で大きなファイルで作業する際に、変数名や関数名が衝突しやすく、バグの温床になっていた。

代表例:

ES Modules (import/export)
CommonJS (require/module.exports)




 パ...]]></description><link>https://zenn.dev/surume3/articles/17d44d42c8b4fb</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/17d44d42c8b4fb</guid><pubDate>Sun, 23 Jun 2024 01:22:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u4v6CJfJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[オブジェクトについて]]></title><description><![CDATA[
 オブジェクトについて知らないことがあったのでまとめました

 オブジェクトのメソッドを設定する方法
const object={
method:()=&gt;{
console.log('Hello World');
}
}

object.method    // Hello World

 省略可能なプロパティを設定
const object={
name:string,
password?:string
method?:()=&gt;{
console.log('hello')
}
}
const information:object={
name:"Apple"
}

 オブ...]]></description><link>https://zenn.dev/maiamitorio/articles/f270605bdaf4e1</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/f270605bdaf4e1</guid><pubDate>Sun, 23 Jun 2024 01:03:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ov1vcuai--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[CORSを理解する]]></title><description><![CDATA[CORSについての理解が浅く、業務で躓いた場面があったので、 MDN Web Docs などを読みながら理解した内容と実際にブラウザで動かしながら理解した内容について整理しました。
内容に誤りがあればご指摘いただけますと幸いです。

 CORSとは
CORS (オリジン間リソース共有, Cross-Origin Resource Sharing) は、クロスオリジンリクエストを許可するための仕組みです。
前提として、ブラウザとサーバーが同一オリジン間 (例: https://domain-a.com から https://domain-a.com) のHTTPリクエストは自由に実行できま...]]></description><link>https://zenn.dev/t0daaay/articles/316bc2fce67c7b</link><guid isPermaLink="true">https://zenn.dev/t0daaay/articles/316bc2fce67c7b</guid><pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4zfwoCE4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:CORS%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzZjZlYWU1ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つじ</dc:creator></item><item><title><![CDATA[Hono Conference 2024参戦レポート]]></title><description><![CDATA[こんにちは、あさひです。
今回はナウでイケてると話題？の Hono のカンファレンスに潜入してきましたので雰囲気やどんな流れだったかをまとめようと思います。

 Hono🔥 って？

Hono - means flame🔥 in Japanese - is a small, simple, and ultrafast web framework built on Web Standards. It works on any JavaScript runtime: Cloudflare Workers, Fastly Compute, Deno, Bun, Vercel, Netlify,...]]></description><link>https://zenn.dev/gemcook/articles/hono-conference-report</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/hono-conference-report</guid><pubDate>Sat, 22 Jun 2024 14:05:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AIipY00t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520Conference%25202024%25E5%258F%2582%25E6%2588%25A6%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2582%25E3%2581%2595%25E3%2581%25B2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhMDQyOWUwODUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あさひ</dc:creator></item><item><title><![CDATA[The 2023 State of JavaScript のピックアップ]]></title><description><![CDATA[
 はじめに
こんにちは。
Soziの米田です。
The 2023 State of JavaScript が公開されました。
https://2023.stateofjs.com/en-US/
JavaScript界隈、主にJS自体の新し目の機能だったり、ライブラリ、ツールについて、認知度など調査結果をまとめたものです。
移り変わりの激しいフロントエンドですが、このような調査があることはとてもありがたく思っています。
さて、今回はライブラリを中心に、いくつかピックアップしてみました。
!
調査に答えている人は欧米に大きく偏っているため、あくまで「ざっくり」とトレンドをつかむ、程度に利用...]]></description><link>https://zenn.dev/sozi/articles/3deb414b260cf2</link><guid isPermaLink="true">https://zenn.dev/sozi/articles/3deb414b260cf2</guid><pubDate>Fri, 21 Jun 2024 14:56:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hJvQFgON--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:The%25202023%2520State%2520of%2520JavaScript%2520%25E3%2581%25AE%25E3%2583%2594%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:keisukekomeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjNjI1ZmE4Y2QuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sozi%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5NzkzYzA0NTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisukekomeda</dc:creator></item><item><title><![CDATA[webpackのruntimeChankでハマった]]></title><description><![CDATA[
 現象
react + webpackでwebアプリを作っている。
世間がreact19で騒いでいる中、今更ながらreact18にあげようと思った。
開発上ホットリロードは必須だが、react-hot-loaderはreact18に対応していないことがわかった。
https://github.com/gaearon/react-hot-loader/issues/1808
代わりにreact-refresh-webpack-pluginをいれてみた。
https://github.com/pmmmwh/react-refresh-webpack-plugin
npm install後、...]]></description><link>https://zenn.dev/vbbvbbvbbv/articles/0741ed67fa7d46</link><guid isPermaLink="true">https://zenn.dev/vbbvbbvbbv/articles/0741ed67fa7d46</guid><pubDate>Fri, 21 Jun 2024 11:29:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lW6LQmh_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:webpack%25E3%2581%25AEruntimeChank%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tatsumi%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkY2RkNzQyNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tatsumi Yamamoto</dc:creator></item><item><title><![CDATA[GitHub のプルリクでブランチ検索が出来なくなったので復活させるスクリプト]]></title><description><![CDATA[GitHub の変更によっては動かなくなるかもしれませんが、パッチとして 🙏
e = document.getElementsByClassName("SelectMenu-filter")[0];
p = document.getElementsByClassName("js-branches-tags-tabs")[0].parentNode;
p.insertBefore(e, null);
ブックマークレットの場合はこちら
javascript:(function(){e = document.getElementsByClassName("SelectMenu-filter")...]]></description><link>https://zenn.dev/egstock_inc/articles/ec10a3e3b292be</link><guid isPermaLink="true">https://zenn.dev/egstock_inc/articles/ec10a3e3b292be</guid><pubDate>Fri, 21 Jun 2024 05:55:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--128vC7s---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AB%25E3%2583%25AA%25E3%2582%25AF%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2581%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%258C%25E5%2587%25BA%25E6%259D%25A5%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%25BE%25A9%25E6%25B4%25BB%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%258F%25E3%2581%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ZDdjZGIzZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EGSTOCK%252CInc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyYzVlZjM5NGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>プレーンわに</dc:creator></item><item><title><![CDATA[macOSでミュージックライブラリの曲情報をJS(JXA)でいじる]]></title><description><![CDATA[
 はじめに
macOSではアプリケーションをスクリプトから制御する仕組みとしてAppleScriptがありますが、JavaScriptでも記述できてJXAと呼ぶようです。
で、長年Windows PCのiTunesで管理していたライブラリを、macOSのミュージックに移行したところ、評価(5段階の星印)や曲のチェックボックスやボリューム調整などの曲情報が移行されませんでした。
ということでJavaScript(JXA)を使って曲情報を移行した話です。

 スクリプトからミュージックアプリを制御
macOSの「ミュージック」アプリはApplication('Music')経由で色々できる...]]></description><link>https://zenn.dev/ebang/articles/2406_macos-music</link><guid isPermaLink="true">https://zenn.dev/ebang/articles/2406_macos-music</guid><pubDate>Thu, 20 Jun 2024 14:46:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d3jhfp6A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:macOS%25E3%2581%25A7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E6%259B%25B2%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592JS%2528JXA%2529%25E3%2581%25A7%25E3%2581%2584%25E3%2581%2598%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ebang%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5MDQ2M2U2NWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ebang</dc:creator></item><item><title><![CDATA[Mapbox Search JS を触ってみる (SearchBox/Core + Minimap編)]]></title><description><![CDATA[
 はじめに
この記事はMapbox Search JS を触ってみる (SearchBox/React編)の続きで、Search JSのSearchBox/Coreの使い方を見ていきます。Search Box - Search SessionのSearchSessionのExampleを参考にしつつ、使い方を見ていきます。
以下が本サンプルのデモです。テキストボックスに地名や住所を入れてSuggestボタンをクリックします。次にSelectメニューに追加された候補から一つ選択することで地図が表示され、その場所がマーカーで示されます。


 Search Box Core と Minim...]]></description><link>https://zenn.dev/mapbox_japan/articles/58da502b2292d1</link><guid isPermaLink="true">https://zenn.dev/mapbox_japan/articles/58da502b2292d1</guid><pubDate>Thu, 20 Jun 2024 12:05:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3UXzaxQ4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mapbox%2520Search%2520JS%2520%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528SearchBox%252FCore%2520%252B%2520Minimap%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:OttyLab%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZWNmNDhhMWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhMGJmZWJmZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OttyLab</dc:creator></item><item><title><![CDATA[JavaScriptでMapのキーにオブジェクトを使う際の注意点と解決方法]]></title><description><![CDATA[JavaScriptのMapは、キーと値のペアを保持するための便利なデータ構造です。
しかし、キーとしてオブジェクトを使用する場合には注意が必要です。
以下のコードがundefinedを出力する理由とその対策について説明します。
const map = new Map();
map.set({a: 1}, "foo");
console.log(map.get({a: 1})); // "undefined"と表示される

 問題の原因
上記のコードでは、mapにオブジェクト{a: 1}をキーとして値fooをセットしています。
同じ形状のオブジェクト{a: 1}を使って値を取得しようとす...]]></description><link>https://zenn.dev/asamin/articles/46518a672af39a</link><guid isPermaLink="true">https://zenn.dev/asamin/articles/46518a672af39a</guid><pubDate>Thu, 20 Jun 2024 09:03:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x3KWuK9P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7Map%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:asami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YWMyYjMxNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asami</dc:creator></item></channel></rss>