<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 21 Aug 2024 09:21:06 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Rustでaxumとreqwestを使用したロギングの実装]]></title><description><![CDATA[
 背景
最近はRustの勉強にはまっており、個人アプリをつくりながら学習しています。
Rustは主にWeb API Backendの用途で使っています。
APIをつくっていると、loggingしたいですが自分で設定していく必要があります。
今回はその実装時に調べたことを記事にしました。

 はじめに
RustのWebフレームワークaxumと、HTTPクライアントライブラリreqwestを使用する際のロギング実装について説明します。トレーシングとロギングを適切に設定することで、アプリケーションの動作を詳細に把握し、デバッグや性能分析を効果的に行うことができます。

 axumでのロギング...]]></description><link>https://zenn.dev/taiyop/articles/7ef2a06a2c7922</link><guid isPermaLink="true">https://zenn.dev/taiyop/articles/7ef2a06a2c7922</guid><pubDate>Wed, 21 Aug 2024 02:37:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v0BQ60lN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7axum%25E3%2581%25A8reqwest%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%25AD%25E3%2582%25AE%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiyop%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyMmNhODE0YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taiyop</dc:creator></item><item><title><![CDATA[＃34　Unraveling Asynchronous Programming: Why, What, and How]]></title><description><![CDATA[
 Introduction
In today's fast-paced digital age, we often expect our devides and applications to perform seamlessly, reacting instantaneously to our inputs, even when managing multiple tasks. Imagine typing into a search bar and waiting miniutes, or even seconds, for auto-suggestions to appear. ...]]></description><link>https://zenn.dev/nxted_sapporo/articles/c80f62331ad6ee</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/c80f62331ad6ee</guid><pubDate>Wed, 21 Aug 2024 01:41:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cSYYyEgl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%258334%25E3%2580%2580Unraveling%2520Asynchronous%2520Programming%253A%2520Why%252C%2520What%252C%2520and%2520How%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[tauriのフロントエンド部分でwindow.confirmを使用した部分をtauriのdialogで書いてみた]]></title><description><![CDATA[[経緯]
tauriで作成したアプリケーションでダイアログの確認をした後に、バックエンドの処理を呼ぶため、window.confirmを使用した。
ただtauriのdialogも使用できるようなので使ってみた。
[結論]
window.confirmだと最小限のカスタマイズしかできないが、tauriのdialogならタイトルなどさまざまな変更が可能である。MUIなどで実装する程でもないと言う時に使用できるかもしれないと思いました。
変更前
import { invoke } from "@tauri-apps/api/tauri";

const executeCommands = ()...]]></description><link>https://zenn.dev/amana/articles/b6452ad9871e32</link><guid isPermaLink="true">https://zenn.dev/amana/articles/b6452ad9871e32</guid><pubDate>Mon, 19 Aug 2024 14:53:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AgYPHxHW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tauri%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2583%25A8%25E5%2588%2586%25E3%2581%25A7window.confirm%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E9%2583%25A8%25E5%2588%2586%25E3%2582%2592tauri%25E3%2581%25AEdialog%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXl5YnE2MF9NVW5SaXNqUm15RGs2YVpFcmxQM1pKYlhQOER3aWI4NXdqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[The Embedonomiconでハマったことあれこれ(3章まで)]]></title><description><![CDATA[
 はじめに

 これからThe Embedonomiconを始める方々へ
こちらのはてなブログをベースに進めていくことを推奨します。本家はクセが強い（これから書くソースコードを、編集後のファイルをcat、head、tail、sedで表示する形で表すのはどこぞのコミュニティでのデファクトスタンダードなのか？最初、はて？となってしまった）上に致命的なミスが放置されているせいか、その置き換えを狙ったのではないかと思うほどよく書かれているし、問題が発生する箇所のフォローもしている。実行環境の構築は本家を参照し、それ以降はこのブログで読み進めつつ本家の内容を確認する方法が、スムーズに進めるために...]]></description><link>https://zenn.dev/mabe/articles/69468ac7c4ddfa</link><guid isPermaLink="true">https://zenn.dev/mabe/articles/69468ac7c4ddfa</guid><pubDate>Mon, 19 Aug 2024 11:43:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5xhZhMSz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:The%2520Embedonomicon%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258C%25E3%2581%2593%25E3%2582%258C%25283%25E7%25AB%25A0%25E3%2581%25BE%25E3%2581%25A7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mabby%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeC1qa21DSW1TaXZobGl6RmFzZ0RXalgyeDhxdktnd0pORUg2V1o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mabby</dc:creator></item><item><title><![CDATA[curlでgRPC-WebのRequestをする方法]]></title><description><![CDATA[
 アンサー
printf '\x00\x00\x00\x00\x05\n\x03aaa' \
     | curl 'http://localhost:50051/greeting.Greeter/SayHello' \
      -X POST \
      -H 'content-type: application/grpc-web+proto' \
      --data-binary '@-' \
      --output -
ポイントとしては、

--data-binaryにデータを渡す場合、空文字化を防ぐため標準入力から渡す必要がある

細かい理由は後述
--d...]]></description><link>https://zenn.dev/daijinload/articles/102a1e7df8b73c</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/102a1e7df8b73c</guid><pubDate>Mon, 19 Aug 2024 09:38:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IyYNst7l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:curl%25E3%2581%25A7gRPC-Web%25E3%2581%25AERequest%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item><item><title><![CDATA[TauriとLeptosで作るデスクトップアプリ（3）バックエンドを呼び出す]]></title><description><![CDATA[
 はじめに
TauriとLeptosでデスクトップアプリを作っていきます。今回は、LeptosフロントエンドからTauriバックエンドのコマンドを呼び出します。あわせて、デバッグ用にフロントエンドのコンソールにログを表示できるようにします。
関連記事
https://zenn.dev/daizutabi/articles/tauri-leptos-01
https://zenn.dev/daizutabi/articles/tauri-leptos-02

環境

Windows 11 Home
Rust 1.80
Tauri 2.0.0-rc

https://v2.tauri.ap...]]></description><link>https://zenn.dev/daizutabi/articles/tauri-leptos-03</link><guid isPermaLink="true">https://zenn.dev/daizutabi/articles/tauri-leptos-03</guid><pubDate>Sun, 18 Aug 2024 23:13:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wx7NYT7t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E3%2581%25A8Leptos%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%25883%25EF%25BC%2589%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daizutabi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMTMzM2MwY2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daizutabi</dc:creator></item><item><title><![CDATA[麻雀アプリ(GUI)をフルRustで書いてみた]]></title><description><![CDATA[
 はじめに
前回の投稿で麻雀のエンジンを Rust で組む話をしました。今回は夏休みの宿題的に GUI アプリケーションを Rust で組んだので、技術選定の経緯や実際に書いた感触を話します。

 なぜ Rust で GUI アプリケーションを作るのか
麻雀のロジックを Rust で組み上げていて、当初は DLL に書き出して C#で GUI を作ったり、WASM にして React で書くことを構想していましたが、まだロジック部分が未完成の段階でデバッグを繰り返しながら完成させていくことを考えると、DLL や WASM などといったインタフェースでは非常にデバッグがしづらく開発のスピ...]]></description><link>https://zenn.dev/kacky/articles/226aa22183a60e</link><guid isPermaLink="true">https://zenn.dev/kacky/articles/226aa22183a60e</guid><pubDate>Sun, 18 Aug 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qU0EAuqt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25BA%25BB%25E9%259B%2580%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2528GUI%2529%25E3%2582%2592%25E3%2583%2595%25E3%2583%25ABRust%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kacky%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNDNjY2VhMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kacky</dc:creator></item><item><title><![CDATA[Rustでフロントエンド with Dioxus ～環境づくり～]]></title><description><![CDATA[ここ数ヶ月、趣味でRustを使ってCLIツールなどを作っていましたが、最近はフロントエンドもRustで書けるということを知り、興味を持ちました。そこで、クロスプラットフォームのWebフレームワークであるDioxusを使ってみることにしました。

 Dioxusって？
https://dioxuslabs.com/
Dioxusは、Rustで書かれたWebフレームワークです。WebAssemblyを使ってフロントエンドをRustで書くことができます。また、Dioxusはクロスプラットフォームであるため、Webアプリケーションだけでなく、デスクトップやモバイル、TUI[1]のアプリケーション...]]></description><link>https://zenn.dev/sakai_nako/articles/dioxus-study-01</link><guid isPermaLink="true">https://zenn.dev/sakai_nako/articles/dioxus-study-01</guid><pubDate>Sun, 18 Aug 2024 13:42:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8oJNxIfc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2520with%2520Dioxus%2520%25EF%25BD%259E%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A5%25E3%2581%258F%25E3%2582%258A%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sakai-Nako%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5Yzg4ZjE1MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sakai-Nako</dc:creator></item><item><title><![CDATA[TauriとLeptosで作るデスクトップアプリ（2）カウンタコンポーネントを作成する]]></title><description><![CDATA[
 はじめに
TauriとLeptosでデスクトップアプリを作っていきます。今回は、シンプルなカウンタを作成します。
関連記事
https://zenn.dev/daizutabi/articles/tauri-leptos-01
https://zenn.dev/daizutabi/articles/tauri-leptos-03

環境

Windows 11 Home
Rust 1.80
Tauri 2.0.0-rc

https://v2.tauri.app/

Leptos 0.7.0-beta

https://leptos.dev/


 コンポーネントライブラリThaw ...]]></description><link>https://zenn.dev/daizutabi/articles/tauri-leptos-02</link><guid isPermaLink="true">https://zenn.dev/daizutabi/articles/tauri-leptos-02</guid><pubDate>Sun, 18 Aug 2024 12:05:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--smfucJo5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E3%2581%25A8Leptos%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%25882%25EF%25BC%2589%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daizutabi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMTMzM2MwY2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daizutabi</dc:creator></item><item><title><![CDATA[Tauri2.0 × React のアプリ開発 - TauriのインストールからTailwind 導入まで]]></title><description><![CDATA[少し前からFlutterを使ってアプリ開発を始めていたのですが、Rustとwebフロントの技術を使ってマルチプラットフォーム開発ができるTauriのメジャーバージョンアップの話を聞きつけこちらの開発もやってみることにしました。
アプリ開発に機械学習の要素も取り入れたかったので、Rustで実現する様子もそのうち記事にしていけたらいいなとおもってます。

 この記事でふれないこと

android仮想環境の構築
rustのセットアップ
bunのセットアップ


 Tauriのインストール
https://v2.tauri.app/start/
まず、Nodeの実行環境はBunを採用しました。...]]></description><link>https://zenn.dev/takisato/articles/ee955f168b3ec1</link><guid isPermaLink="true">https://zenn.dev/takisato/articles/ee955f168b3ec1</guid><pubDate>Sun, 18 Aug 2024 08:29:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sDBqwuk8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri2.0%2520%25C3%2597%2520React%2520%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2520-%2520Tauri%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589Tailwind%2520%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takisato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3OWZiNGE0ZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takisato</dc:creator></item><item><title><![CDATA[TauriとLeptosで作るデスクトップアプリ（1）プロジェクトを作成する]]></title><description><![CDATA[
 はじめに
TauriとLeptosでデスクトップアプリを作っていきます。

Windows 11 Home
Rust 1.80
Tauri 2.0.0-rc
Leptos 0.7.0-beta

https://v2.tauri.app/
https://leptos.dev/
関連記事
https://zenn.dev/daizutabi/articles/tauri-leptos-02
https://zenn.dev/daizutabi/articles/tauri-leptos-03


 Rustプロジェクトを作成する
TauriとLeptosを使ったサンプルプロジェクトを...]]></description><link>https://zenn.dev/daizutabi/articles/tauri-leptos-01</link><guid isPermaLink="true">https://zenn.dev/daizutabi/articles/tauri-leptos-01</guid><pubDate>Sun, 18 Aug 2024 06:33:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7M19RdTa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E3%2581%25A8Leptos%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%25881%25EF%25BC%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daizutabi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMTMzM2MwY2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daizutabi</dc:creator></item><item><title><![CDATA[Rust言語入門：安全性と高速性を兼ね備えた次世代プログラミング言語]]></title><description><![CDATA[
 Rust言語入門：安全性と高速性を兼ね備えた次世代プログラミング言語

 はじめに
Rustは、Mozillaによって開発されたシステムプログラミング言語であり、特に安全性とパフォーマンスを重視しています。CやC++と同様に低レベルの操作が可能でありながら、メモリ安全性を保証するための独自の仕組みを持っています。これにより、開発者はバグやセキュリティの脆弱性を減少させることができ、効率的なプログラムを作成することが可能です。
本記事では、Rustの基本的な概念、特徴、実用的な例を通じて、Rustがどのようにして安全性と高速性を両立させているのかを探ります。また、Rustのエコシステム...]]></description><link>https://zenn.dev/llm_robot/articles/20240816-rust-ownership-borrowing-cargo</link><guid isPermaLink="true">https://zenn.dev/llm_robot/articles/20240816-rust-ownership-borrowing-cargo</guid><pubDate>Thu, 15 Aug 2024 22:08:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bmdoBKAp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A8%2580%25E8%25AA%259E%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E3%2581%25A8%25E9%25AB%2598%25E9%2580%259F%25E6%2580%25A7%25E3%2582%2592%25E5%2585%25BC%25E3%2581%25AD%25E5%2582%2599%25E3%2581%2588%25E3%2581%259F%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIZAWA%2520version%253A0.0.2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTE3MGM1NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIZAWA version:0.0.2</dc:creator></item><item><title><![CDATA[Rust を試してみる]]></title><description><![CDATA[
 概要
世の中で徐々に C/C++ から Rust への移行が始まっているので、Rust を試してみようと思い、環境構築から試してみました。
同じような記事はネットで沢山あがっていますが、当然ながら古い記事もあり、少しハマりました・・・。
この記事の内容は 2024/08/15 に試しています。

 環境
OS: Windows 10
Rust: 1.80.1

 インストール
参考にしたサイト：
https://www.rust-lang.org/tools/install
https://qiita.com/rfukudome/items/76fd9251f4885de69edd
...]]></description><link>https://zenn.dev/kconcon/articles/009a08400449b2</link><guid isPermaLink="true">https://zenn.dev/kconcon/articles/009a08400449b2</guid><pubDate>Thu, 15 Aug 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f4V3LPEz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kcon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2J3dThiblhQNFVPck5ESVA2MTRHamVOUEIteU52U2lpUzZnZXhKeEUzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kcon</dc:creator></item><item><title><![CDATA[Rust | axumにCSRF対応のトークンを組み込む]]></title><description><![CDATA[
 概要
「Rust | axumでモノリシックなWEBサイトを作るための色々」の続き
axumでモノリシックなWEBサイトを作る際に使えそうなネタのメモ。
今回はCSRF対策について
試すクレートは下記２点

axum_csrf
csrf

!
環境情報
Rust: 1.80.1
axum: 0.7.5


 axum_csrfクレートでCSRFトークンを追加する
axum_csrfを利用してCSRFトークンを利用できるようにする
Cargo.tomlへ下記を追加
axum_csrf = { version = "0.9.0", features = ["layer"] }
main....]]></description><link>https://zenn.dev/systemkd/articles/0663af773ab08e</link><guid isPermaLink="true">https://zenn.dev/systemkd/articles/0663af773ab08e</guid><pubDate>Thu, 15 Aug 2024 08:47:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b-3Dq53I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%257C%2520axum%25E3%2581%25ABCSRF%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:systemkd%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2JqVUtvRnp1U1gtd2NSaU5FZVN5bkdYLWJLeXM3eW90OGJzQVM1WVl3M1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>systemkd</dc:creator></item><item><title><![CDATA[Nimのメモリ管理を理解する⑥ ー Rustと比較して]]></title><description><![CDATA[この記事はNimのメモリ管理を理解するシリーズの6作目になります。Nimではコンパイラがソースコードを解析し、スコープと所有権に基づくメモリ管理を開発者が考える必要がなく自動で行います。今回は同じ処理をRustで実装し、それがNimではどう書けるのか、コンパイラはそれをどう変化させるのかを見ていきます。

〜Nimのメモリ管理を理解するシリーズ〜

Nimのメモリ管理を理解する① ― Nimの新しいGC、ARCについて
Nimのメモリ管理を理解する② ― Nimのムーブセマンティクス
Nimのメモリ管理を理解する③ ― GCなしのNim
Nimのメモリ管理を理解する④ ― ORC - ア...]]></description><link>https://zenn.dev/dumblepy/articles/d17f07bd973c6b</link><guid isPermaLink="true">https://zenn.dev/dumblepy/articles/d17f07bd973c6b</guid><pubDate>Wed, 14 Aug 2024 14:08:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DBawS476--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nim%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A5%2520%25E3%2583%25BC%2520Rust%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:medy%2520%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NTI2MzJiNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>medy🐍👑</dc:creator></item><item><title><![CDATA[wasm-opt で [parse exception: expected more elements in list] エラーが発生した]]></title><description><![CDATA[wasm-bindgen を使用したプロジェクトで表題のようなエラーが出て苦しんだので備忘録として解決法を残しておきます。

 TL;DR
pkg/ ディレクトリにある XXX_bg.wasm-opt.wasm を削除してリビルドします。

 環境

macOS Sonoma 14.2
MacBook Air M2, 2022
rustc 1.80.0 (051478957 2024-07-21)
cargo 1.80.0 (376290515 2024-07-16)


 Cargo.toml
[package]
edition = "2021"

[lib]
crate-type =...]]></description><link>https://zenn.dev/itsu_dev/articles/3ff4b61fac7959</link><guid isPermaLink="true">https://zenn.dev/itsu_dev/articles/3ff4b61fac7959</guid><pubDate>Mon, 12 Aug 2024 18:23:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VjzcG0D8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:wasm-opt%2520%25E3%2581%25A7%2520%255Bparse%2520exception%253A%2520expected%2520more%2520elements%2520in%2520li...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2582%2585%25E3%2582%258B%25E3%2582%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNGNhZjgxZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちゅるり</dc:creator></item><item><title><![CDATA[Rustで湯婆婆を作ってみた]]></title><description><![CDATA[
 元ネタ様
https://qiita.com/Nemesis/items/c7192a7c510788d2cba2

 実際に動かすとこんな感じ


 コードはこちら
https://github.com/2323-code/yubaba-rust
ほとんどThe bookを参考にしました。
（ioやrand、変数を String::new()で宣言するなど）

 main()
start_yubaba()を呼び出すだけです。
fn main() {
    start_yubaba(); // start_yubaba()を呼び出すだけ
}

 start_yubaba()
今回の...]]></description><link>https://zenn.dev/2323_code/articles/8efd8a79c224e1</link><guid isPermaLink="true">https://zenn.dev/2323_code/articles/8efd8a79c224e1</guid><pubDate>Mon, 12 Aug 2024 16:00:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G_y6GGGn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E6%25B9%25AF%25E5%25A9%2586%25E5%25A9%2586%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%25BF%25E3%2581%25B5%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZGFlNGU3NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふみふみ</dc:creator></item><item><title><![CDATA[Actix Web と slqx を使って TiDB Serverless にアクセスする]]></title><description><![CDATA[
 はじめに
今更ながら、ゼルダの時のオカリナにハマっている Shota ですw
今回は、Rust の webフレームワークの Actix Web ✖︎ sqlx ✖︎ TiDB で簡易的なAPIサーバーを構築しましたので、紹介をしていきます！
他の参考記事もほとんどなかったので、ぜひ本記事が参考になれば嬉しいです。
Actix Web については以前に公開した記事がありますので、こちらも参考になればと。
https://zenn.dev/collabostyle/articles/77f4f8528ded1c
🔻Actix Web
https://actix.rs/
🔻sqlx
htt...]]></description><link>https://zenn.dev/collabostyle/articles/1ca9677d9c9777</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/1ca9677d9c9777</guid><pubDate>Mon, 12 Aug 2024 11:20:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tji7yt9W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Actix%2520Web%2520%25E3%2581%25A8%2520slqx%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520TiDB%2520Serverless%2520%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shota%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNGNlNzQxNTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota</dc:creator></item><item><title><![CDATA[chrono から serde を使った Serialize できない場合の対処]]></title><description><![CDATA[
 はじめに
DB内の created_at、updated_atを参照する機会は少なくないと思いますが、
これらを Rust の chrono クレートを使って参照し、最終的に serde クレートの Serialize をしようとした時にプチハマりしたことをつらつら書いていきます。

 エラー内容
以下のような構造体を定義し、属性マクロに Serialize を定義します。
#[derive(Serialize)]
struct Todos {
    id: String,
    title: String,
    description: Option&lt;String&g...]]></description><link>https://zenn.dev/collabostyle/articles/5a01a8ba60552a</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/5a01a8ba60552a</guid><pubDate>Mon, 12 Aug 2024 08:10:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ATLRxLxT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chrono%2520%25E3%2581%258B%25E3%2582%2589%2520serde%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%2520Serialize%2520%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shota%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNGNlNzQxNTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota</dc:creator></item><item><title><![CDATA[Tauri上でSpotifyの再生中の曲情報をリアルタイムで取得し表示する]]></title><description><![CDATA[
 導入
今回は、Tauriを使用してSpotifyから再生中の曲情報をリアルタイムで取得する方法を紹介します。環境はmacOSです、悪しからず。
フロントのフレームワークはReactです。


 AppleScriptを使ったSpotifyトラック情報の取得
macOSでは、Spotify APIを使わずともAppleScriptを使用してSpotifyから現在再生中の曲情報を取得することができます。以下のようなAppleScriptを作成し、Rustのコードから呼び出します。
tell application "Spotify"
    if player state is play...]]></description><link>https://zenn.dev/ocat/articles/e7a22ac0f658f7</link><guid isPermaLink="true">https://zenn.dev/ocat/articles/e7a22ac0f658f7</guid><pubDate>Mon, 12 Aug 2024 01:57:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9RgqFroS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E4%25B8%258A%25E3%2581%25A7Spotify%25E3%2581%25AE%25E5%2586%258D%25E7%2594%259F%25E4%25B8%25AD%25E3%2581%25AE%25E6%259B%25B2%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ocat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0OTdhYmZiZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ocat</dc:creator></item></channel></rss>