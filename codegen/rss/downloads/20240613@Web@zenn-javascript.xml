<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 13 Jun 2024 03:26:25 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【メモ】＼←の打ち方・意味]]></title><description><![CDATA[javaspcriptを勉強しているときに　＼　この打ち方がわからず迷ったのでメモしておきます。
/ ←とは向きが違うし、なんぞや？
⚫︎「\」…バックスラッシュ　
javaspcriptにおける意味について
…ざっくり言うと「エスケープシーケンス（エスケープ処理）」をするためのもの　です。
エスケーシーケンスとは？
　…バックスラッシュ（\）もしくは円記号（￥）を前に付けて、特殊文字を表す方法です。バックスラッシュか円記号は使用しているOSやデバイスによって異なります。現在は殆どがバックスラッシュで表されるようです。
この\のあとにつづく記号によって意味が変わってくるみたいです。
表記...]]></description><link>https://zenn.dev/yuzukame/articles/b7ccbec989efe4</link><guid isPermaLink="true">https://zenn.dev/yuzukame/articles/b7ccbec989efe4</guid><pubDate>Thu, 13 Jun 2024 00:27:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AVYxpl7V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591%25EF%25BC%25BC%25E2%2586%2590%25E3%2581%25AE%25E6%2589%2593%25E3%2581%25A1%25E6%2596%25B9%25E3%2583%25BB%25E6%2584%258F%25E5%2591%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjYzU5YzJkZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MH</dc:creator></item><item><title><![CDATA[【JavaScript】NFD の濁音・半濁音を NFC に変換する]]></title><description><![CDATA[Unicode 正規化のためのメソッドは String.prototype.normalize である
node
&gt; 'が'.normalize('NFD').length
2
&gt; "か\u{3099}".normalize('NFC').length
1
&gt; '神'.normalize('NFC')
'神'
&gt; '神'.normalize('NFD')
'神'
正規表現でひらがなやカタカナなどは Unicode プロパティとして定義されている
&gt; regex = /\p{sc=Hiragana}/u;
/\p{sc=Hiragana}/u
&gt; reg...]]></description><link>https://zenn.dev/masakielastic/articles/5105794389ead6</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/5105794389ead6</guid><pubDate>Wed, 12 Jun 2024 21:10:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OosKsFAW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591NFD%2520%25E3%2581%25AE%25E6%25BF%2581%25E9%259F%25B3%25E3%2583%25BB%25E5%258D%258A%25E6%25BF%2581%25E9%259F%25B3%25E3%2582%2592%2520NFC%2520%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[CodeRabbit お試ししたくて面談管理ツールを作ってみる（その26：評価理由登録）]]></title><description><![CDATA[
 本日の内容

評価理由を登録できるように項目追加


 簡単な要約
よく考えたら、評価された時には理由があるので、それも残しておきたいと思い項目ついかしました。

 作成した画面


評価登録画面



ユーザー評価一覧




 プルリク
https://github.com/WdknWdkn/oneonone/pull/55

 CodeRabbitのコメント



 終わり
これも当然なんですが、変更箇所が少ないほどコメントが返ってくるのは早いですね。
]]></description><link>https://zenn.dev/wdknwdkn/articles/ed245bfb99d784</link><guid isPermaLink="true">https://zenn.dev/wdknwdkn/articles/ed245bfb99d784</guid><pubDate>Wed, 12 Jun 2024 18:43:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wGHsNZmE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeRabbit%2520%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25A6%25E9%259D%25A2%25E8%25AB%2587%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE26%25EF%25BC%259A%25E8%25A9%2595%25E4%25BE%25A1%25E7%2590%2586%25E7%2594%25B1%25E7%2599%25BB%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2593%25EF%25BC%25A0%25E9%25A7%2586%25E3%2581%2591%25E5%2587%25BA%25E3%2581%2597%25E8%2582%25B2%25E3%2581%25A6%25E3%2582%258BEM%25E5%259F%25B7%25E8%25A1%258C%25E5%25BD%25B9%25E5%2593%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JISkF3QXNGeGxMY29sdEpjUHRpN0IwRWpTdlZ0MzFkWnluQ2tmUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わだけん＠駆け出し育てるEM執行役員</dc:creator></item><item><title><![CDATA[【JS】横幅が違う場合の縦スクロールで横スクロール]]></title><description><![CDATA[
 前回実装した縦スクロールで横スクロールされるコンテンツの、各コンテンツの横幅が違う場合の実装をしてみました
https://zenn.dev/nami_06063/articles/4982d2703e6340
https://codepen.io/mdvlzqqm-the-lessful/pen/dyEWzrO

 CSSの実装
横幅が均等の時はjsでwidthを設定しましたが、バラバラなのでCSSで設定します。

 JSの実装
x方向への移動量を、1つ目の要素の横幅を引いた値を設定します。こうしておかないと、スクロールし終えた時に表示されるコンテンツが何も無くなって、空白が表示さ...]]></description><link>https://zenn.dev/nami_06063/articles/5e39cb87cbe0e8</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/5e39cb87cbe0e8</guid><pubDate>Wed, 12 Jun 2024 14:07:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GyJhKLb2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591%25E6%25A8%25AA%25E5%25B9%2585%25E3%2581%258C%25E9%2581%2595%25E3%2581%2586%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E7%25B8%25A6%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E6%25A8%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[暗黙的型変換で、なぜ { } や [ ] は Truthy値なのかを考える]]></title><description><![CDATA[javascriptの暗黙的なBool値の型変換について、値によって true と判定されるものと、false と判定されるものに分けることができます。
判定元の値をそれぞれtruthy / falsy な値と呼びます。以下に具体例を書き出します。
// falsy な値
false
0
""（空文字列）
null
undefined
NaN
// truthy な値
"hello"(非空文字列)
1, -1, 42(非ゼロの数値)
{ key: "value" }(オブジェクト)
[1, 2, 3](配列)
function()(関数)
true
ここでふと思ったのが、空のオブジェクト...]]></description><link>https://zenn.dev/surume3/articles/3f03eca29f0af9</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/3f03eca29f0af9</guid><pubDate>Wed, 12 Jun 2024 14:07:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hmigno7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259A%2597%25E9%25BB%2599%25E7%259A%2584%25E5%259E%258B%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A7%25E3%2580%2581%25E3%2581%25AA%25E3%2581%259C%2520%257B%2520%257D%2520%25E3%2582%2584%2520%255B%2520%255D%2520%25E3%2581%25AF%2520Truthy%25E5%2580%25A4%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[TypeORM の create が信用できないなら build メソッドを用意すると良さげ]]></title><description><![CDATA[
 TypeORM


TypeORM

ver. 0.3.20





 create が信用できない件
以下、公式サイトの例から。
仮に User Entity のid・firstName 等の値の指定が必須だとしても、 create のタイミングではエラーを吐きません。
create 後に値の追加・更新が行われることが想定されているようです。


create - Creates a new instance of User. Optionally accepts an object literal with user properties which will be writt...]]></description><link>https://zenn.dev/masani/articles/74f36e48b4d227</link><guid isPermaLink="true">https://zenn.dev/masani/articles/74f36e48b4d227</guid><pubDate>Wed, 12 Jun 2024 13:45:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--roLUzNDI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeORM%2520%25E3%2581%25AE%2520create%2520%25E3%2581%258C%25E4%25BF%25A1%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589%2520build%2520%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E7%2594%25A8%25E6%2584%258F%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%2589%25AF%25E3%2581%2595%25E3%2581%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkIzN29iSFVFazgteDh1eEJVTG1JWmtCOHItb3htWGY0ZkNtaUJVcXRTPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masani</dc:creator></item><item><title><![CDATA[[ JavaScript] 基本（都度更新）]]></title><description><![CDATA[
 はじめに
共同開発が始まり、しれっとJava Scriptが始まりました🫥
迷惑をかける気しかしないので時間があるうちに勉強。そして慣れるまで時間がかかりそうなので
それまでは簡単なコードも早見表として記録しておこうかな🫨
正直流れを把握するのも大変で３人で出来るのか、、ふ、不安〜😞

[変数宣言方法]
JavaScriptでは、変数名の前にletを付けることで、変数を宣言
let 変数名 = 内容 ;
let hello = "Hello, World";
[条件分岐]
条件式が1つの場合

条件1を満たすときは、処理1を実行
if(条件1){
  処理1
}

1つの条件式で、処...]]></description><link>https://zenn.dev/takeda_kaho/articles/cda60abd600a44</link><guid isPermaLink="true">https://zenn.dev/takeda_kaho/articles/cda60abd600a44</guid><pubDate>Wed, 12 Jun 2024 11:57:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RpNEqtWI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%2520JavaScript%255D%2520%25E5%259F%25BA%25E6%259C%25AC%25EF%25BC%2588%25E9%2583%25BD%25E5%25BA%25A6%25E6%259B%25B4%25E6%2596%25B0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takepanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZWRlZDIyZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takepanda</dc:creator></item><item><title><![CDATA[dialog要素をhtml/javascriptで実装してみる]]></title><description><![CDATA[
 ダイアログ・モーダル・モードレスの定義

 ダイアログ
ダイアログとは、一般的に「対話」や「会話」を意味し、2人以上の人々が意見を交換する行為を指します。ユーザーのアクションに対するレスポンスとして表示されるコンポーネントです。
ダイアログには、ユーザーが表示中のダイアログを閉じるまで他の操作を行えない「モーダルダイアログ」と、ダイアログ表示中も他の操作を続けられる「モードレスダイアログ」があります。

 dialogタグの基本的な仕様

 open属性
dialogタグにopen属性を設定すると、ブラウザ上に表示されます。

ダイアログはボタン操作などにより表示・非表示を切り替える...]]></description><link>https://zenn.dev/yyoshioka/articles/04fdd6ee1fc304</link><guid isPermaLink="true">https://zenn.dev/yyoshioka/articles/04fdd6ee1fc304</guid><pubDate>Wed, 12 Jun 2024 01:35:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NP65AESk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dialog%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592html%252Fjavascript%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2587%25E3%2581%2586%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjkxZTg3NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みょうじょう</dc:creator></item><item><title><![CDATA[index]]></title><description><![CDATA[https://github.com/Un-ptitruc-en-plus-Streaming-Vf
https://github.com/Un-ptitruc-en-plus-StreamingVf
https://github.com/Un-ptitrucen-plus-Streaming-Vf
https://github.com/Un-ptitrucen-plus-StreamingVf
https://github.com/En-plus-Un-ptit-truc-Streaming-Vf
https://github.com/En-plus-Un-ptit-truc-Stre...]]></description><link>https://zenn.dev/kegelapan/articles/bf29f8446ad679</link><guid isPermaLink="true">https://zenn.dev/kegelapan/articles/bf29f8446ad679</guid><pubDate>Tue, 11 Jun 2024 19:20:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1NJjjL6H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:index%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:penguasakegelapan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSldkc1dyZW1BMkxrSE0wYlZjM05ib2IyWDNXNUFTaEpGZFZZYlJDaE93T2F3SFBBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>penguasakegelapan</dc:creator></item><item><title><![CDATA[⚠️ bun は設定次第でビルド成果物に環境変数を埋め込みます]]></title><description><![CDATA[https://bun.build/
https://github.com/oven-sh/bun/blob/main/src/env_loader.zig#L285-L302

 条件


bun build --target bun または bun build --compile --target bun-darwin-arm64 などでビルドをしていて
ソースコード中で process.env を介した環境変数の参照 (process.env.HOME 等) を使っていて
参照されている環境変数がビルド時の環境変数に含まれるとき
bun はビルド成果物にその環境変数を文字列リテラル...]]></description><link>https://zenn.dev/unecochan/articles/b2377bef373c1e</link><guid isPermaLink="true">https://zenn.dev/unecochan/articles/b2377bef373c1e</guid><pubDate>Tue, 11 Jun 2024 16:09:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_z7dJG-y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520bun%2520%25E3%2581%25AF%25E8%25A8%25AD%25E5%25AE%259A%25E6%25AC%25A1%25E7%25AC%25AC%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2588%2590%25E6%259E%259C%25E7%2589%25A9%25E3%2581%25AB%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2583%25BC%25E3%2581%25AD%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMNW1SR0NQTlFkcVlJaGxYejJlUHNGd1RabWZjczIwUXNfU0xMT1prPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うーねこ</dc:creator></item><item><title><![CDATA[カーソルにボタンが少しくっつくホバーアニメーション]]></title><description><![CDATA[
 制作物
ホバーすると少しカーソルにくっついてくるボタン。
最近デザインギャラリーでよく見かけるな、と思ったので作ってみました。


 解説

 ボタンの上に乗った時の処理
ボタンの上に乗った時に、ボタンをマウスカーソルの方向へ少し動かすように記述すればOKです。
ボタンのX座標 = ((マウスカーソルのX座標) - (ボタンの横幅 / 2) - (ボタンのX座標))
このように記述するとボタンの上に乗った時に、ボタンがマウスカーソルに追従するようになります。
この値に1以下の任意の値をを掛けて、くっついてくる座標の限界値を決めます。
ボタンのX座標 = ((マウスカーソルのX座標) ...]]></description><link>https://zenn.dev/deguchihi/articles/35f51dc4972cdf</link><guid isPermaLink="true">https://zenn.dev/deguchihi/articles/35f51dc4972cdf</guid><pubDate>Tue, 11 Jun 2024 12:55:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w9ZtbrPG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E3%2581%25AB%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%258C%25E5%25B0%2591%25E3%2581%2597%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A4%25E3%2581%258F%25E3%2583%259B%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Deguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZmZiODljNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Deguchi</dc:creator></item><item><title><![CDATA[if文の条件式の中身は厳密に判定できる形にしよう]]></title><description><![CDATA[タイトルの通り、if文の条件式の中は厳密に判定できる形にすることで予期せぬバグを防ぐことができる、という話です。
例えば、ユーザーの名前をラベルとして表示する関数があるとして、名前が空文字の場合は「名無しさん」と表示したいとします。
function getLabel(name: string): string {
if (!name) {
return "名無しさん";
}
return `${name}さん`;
}
このように書いた場合、引数 name が false の場合、「名無しさん」と表示されることになり、例えば空文字以外にも falsy な値 (null や undefin...]]></description><link>https://zenn.dev/surume3/articles/da5844409cc8d3</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/da5844409cc8d3</guid><pubDate>Tue, 11 Jun 2024 10:27:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t4bKlZWE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:if%25E6%2596%2587%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E5%25BC%258F%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2581%25AF%25E5%258E%25B3%25E5%25AF%2586%25E3%2581%25AB%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E5%25BD%25A2%25E3%2581%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[配列のループ処理時間]]></title><description><![CDATA[
 はじめに
JavaScriptで競プロの問題解いてみようかな〜と思い、配列のループ処理はどれが早いか検証してみました。

 検証

 前提
paiza.ioで実施しました。
実施時点(2024/6/11)の環境はNode.js v16.17.0です。
ループ処理の対象となる配列は以下のコードで作成します。
nを10**1, 10**2, ..., 10**7と変化させそれぞれの処理時間を計測します。
n = 10 ** 7;
let arr = [];
for(let i = 0; i &lt; n; i++) {
    arr.push(Math.round(Math.rando...]]></description><link>https://zenn.dev/hrk9129/articles/bb6ba6757087e4</link><guid isPermaLink="true">https://zenn.dev/hrk9129/articles/bb6ba6757087e4</guid><pubDate>Tue, 11 Jun 2024 03:01:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kzwUn3LV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E5%2587%25A6%25E7%2590%2586%25E6%2599%2582%25E9%2596%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2582%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZGIxMjljNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆり</dc:creator></item><item><title><![CDATA[[JS]先頭を削除した配列をイミュータブルに取得する]]></title><description><![CDATA[配列の先頭を削除した配列をイミュータブル（破壊的な変更なし）に取得する方法です。
const array = ["a", "b", "c"];
const arrayWithoutFirstElement = array.filter((_, i) =&gt; i !== 0);
console.log(array): // ["a", "b", "c"]
console.log(arrayWithoutFirstElement); // ["b", "c"]
参考
https://developer.mozilla.org/ja/docs/Web/JavaScript/Referenc...]]></description><link>https://zenn.dev/purratto/articles/803dc123daa7ea</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/803dc123daa7ea</guid><pubDate>Tue, 11 Jun 2024 02:56:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k-aSV524--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJS%255D%25E5%2585%2588%25E9%25A0%25AD%25E3%2582%2592%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2597%25E3%2581%259F%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[[Tips]フロントエンドで複数ファイルを一括ダウンロード]]></title><description><![CDATA[
 この記事は何
フロントエンドの操作で複数ファイルを一括ダウンロードさせたかった時に、少しの躓きと気づきがあったので紹介します。

 前提

ブラウザはGoogle Chromeとします。他環境での動作は確認できていません。
想定するシーンは、ユーザーがブラウザ上でボタン操作を行うと、サーバーが裏でファイルを準備してS3に格納＆ダウンロード用URLを生成してブラウザに返却し、ブラウザがそのURL先のファイルをダウンロードする、とします。ファイルは1つにまとめられておらず、複数ファイルを(ほぼ)同時にダウンロードします。

サーバーサイドでファイルを1つにまとめておくのが親切かと思います...]]></description><link>https://zenn.dev/foxtail88/articles/multiple-download</link><guid isPermaLink="true">https://zenn.dev/foxtail88/articles/multiple-download</guid><pubDate>Mon, 10 Jun 2024 23:39:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tCp-yOY9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTips%255D%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxZjIzZDE4NGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkoh</dc:creator></item><item><title><![CDATA[CodeRabbit お試ししたくて面談管理ツールを作ってみる（その25：Account概念導入）]]></title><description><![CDATA[
 本日の内容

Accountテーブル作成
ログイン時にusers.account_idに該当するaccountsのレコード情報をセッション保持
各テーブル上から、users.account_idに該当するレコードのみ取得するよう制限
users.account_idが空のときは各画面を参照できないよう制限


 簡単な要約
今のままだと、どのユーザーが触っても別組織の情報が参照できてしまうので、Accountの概念を導入して、各テーブルの情報をAccount単位で仕切るようにしました。

 作成した画面


アカウント一覧



機能制限画面




 プルリク
実は、一度レビューを...]]></description><link>https://zenn.dev/wdknwdkn/articles/90cb8505409ba4</link><guid isPermaLink="true">https://zenn.dev/wdknwdkn/articles/90cb8505409ba4</guid><pubDate>Mon, 10 Jun 2024 15:55:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5oBQg49F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeRabbit%2520%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25A6%25E9%259D%25A2%25E8%25AB%2587%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE25%25EF%25BC%259AAccount%25E6%25A6%2582%25E5%25BF%25B5%25E5%25B0%258E%25E5%2585%25A5%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2593%25EF%25BC%25A0%25E9%25A7%2586%25E3%2581%2591%25E5%2587%25BA%25E3%2581%2597%25E8%2582%25B2%25E3%2581%25A6%25E3%2582%258BEM%25E5%259F%25B7%25E8%25A1%258C%25E5%25BD%25B9%25E5%2593%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JISkF3QXNGeGxMY29sdEpjUHRpN0IwRWpTdlZ0MzFkWnluQ2tmUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わだけん＠駆け出し育てるEM執行役員</dc:creator></item><item><title><![CDATA[「`typeof` 演算子でアタフタしたけど、これでバッチリ！具体例で完全攻略✨」]]></title><description><![CDATA[
 typeof 演算子の結果ってこうなる⁉ 具体例も一緒に確認してみよう！🚀
JavaScriptで typeof 演算子を使うと、値の型が分かるんだけど、実際どんな風に動くのか具体例を見てみたいよね。そこで、以下にいくつかの具体例をまとめてみたよ！

 typeof の結果に応じた型の一覧と具体例



型

typeof の結果
具体例




Undefined
"undefined"
let x; console.log(typeof x); // "undefined"


Null

"object" (reason)
let x = null; console.log(t...]]></description><link>https://zenn.dev/melwey/articles/aae0e952562a9f</link><guid isPermaLink="true">https://zenn.dev/melwey/articles/aae0e952562a9f</guid><pubDate>Mon, 10 Jun 2024 15:38:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DoYfZvQU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%2560typeof%2560%2520%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25A7%25E3%2582%25A2%25E3%2582%25BF%25E3%2583%2595%25E3%2582%25BF%25E3%2581%2597%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A9%25E3%2580%2581%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A7%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E3%2583%25AA%25EF%25BC%2581%25E5%2585%25B7%25E4%25BD%2593%25E4%25BE%258B%25E3%2581%25A7%25E5%25AE%258C%25E5%2585%25A8%25E6%2594%25BB%25E7%2595%25A5%2520%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%25E3%2582%258B%25E3%2581%2586%25E3%2581%2587%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnQ2WmZjNnNTOTgzY0o4UVpwR3BBWk1LTGZ0WDFYRjhFYTVkNy1VcVJRamZzYml3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>めるうぇい</dc:creator></item><item><title><![CDATA[【JS】splideのスライダーで真ん中のスライドだけ大きく表示]]></title><description><![CDATA[
 splideとは？
https://ja.splidejs.com/
アクセシビリティに配慮した軽量・高機能スライダー！
日本人が開発しているので公式ドキュメントが日本語で読みやすいです。
いろんなオプションもあって便利！
https://codepen.io/mdvlzqqm-the-lessful/pen/XWwgMBG

 CSSの実装
transform: scale(.8);
でスライドを小さくします。
.splide__slide{
  &amp;.is-active{
    .splide__content{
      transform: scale(1);
  ...]]></description><link>https://zenn.dev/nami_06063/articles/064f72da81387b</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/064f72da81387b</guid><pubDate>Mon, 10 Jun 2024 11:16:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D4cEQeHu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591splide%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25A7%25E7%259C%259F%25E3%2582%2593%25E4%25B8%25AD%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25A0%25E3%2581%2591%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%258F%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[Stale Closureとは]]></title><description><![CDATA[
 Closureとは
Stale Closureについて説明する前に、Closureとは何でしょうか?
Closure（クロージャ）は、関数が定義された時点の周囲の状態（レキシカルスコープ）を「記憶」するJavaScriptの機能です。簡単に言うと、「関数が作成された時点での変数や状態を保持し続ける機能」と言えます。
詳しくはこちらをご覧ください。

 Stale Closureとは？
Stale Closureは、クロージャによって関数が定義された時点の変数や状態のスナップショットを「記憶」し続け、後にそれらが更新されても古い値を参照し続ける現象を指します。
Reactでは、コンポー...]]></description><link>https://zenn.dev/i3design/articles/2ddf0bb17aa3bc</link><guid isPermaLink="true">https://zenn.dev/i3design/articles/2ddf0bb17aa3bc</guid><pubDate>Mon, 10 Jun 2024 04:24:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZkWd2ZgB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Stale%2520Closure%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yamarin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMTc3MDY0MzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E9%2583%25A8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZGE5ODFmMTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamarin</dc:creator></item><item><title><![CDATA[【JavaScript】配列全ての要素に非同期の処理を施し、全て完了したときの処理を追記する]]></title><description><![CDATA[
 解
Promise.all(TARGET_LIST.map(async x =&gt; {
    // ...
})).then(() =&gt; {
    // ...
})
]]></description><link>https://zenn.dev/ihasq/articles/a8cc38ad72bab1</link><guid isPermaLink="true">https://zenn.dev/ihasq/articles/a8cc38ad72bab1</guid><pubDate>Mon, 10 Jun 2024 01:54:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mewBTiAj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ihasq%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3YWEyZmFhZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ihasq</dc:creator></item></channel></rss>