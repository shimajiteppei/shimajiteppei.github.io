<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 20 Aug 2024 01:29:08 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[lodash-esよりも軽量かつ高速なes-toolkitに移行してみる]]></title><description><![CDATA[
 es-toolkitとは
es-toolkitは配列・数値計算・オブジェクトや文字列操作などの機能を提供するJavaScriptのユーティリティです。公式の紹介文によると、lodashなどの代替品と比較して最大97%のバンドルサイズの削減、実行時パフォーマンスの2～3倍高速化、シンプルかつ堅牢なTypeScriptのサポートを特徴としています。バージョンv1.0.0が2024年5月末と新しいライブラリに関わらず（現在はv1.16.0）、GitHub Starは4.6kと期待のライブラリです。

 検証内容/前提条件
今回はlodash（正確にはlodash-es）をあまり利用していな...]]></description><link>https://zenn.dev/est/articles/9aef523ba88fa1</link><guid isPermaLink="true">https://zenn.dev/est/articles/9aef523ba88fa1</guid><pubDate>Mon, 19 Aug 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vPaSUbqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lodash-es%25E3%2582%2588%25E3%2582%258A%25E3%2582%2582%25E8%25BB%25BD%25E9%2587%258F%25E3%2581%258B%25E3%2581%25A4%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AAes-toolkit%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:est%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZTU2ZGFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>est</dc:creator></item><item><title><![CDATA[JavaScript filter]]></title><description><![CDATA[
 filterの色々なパターン
JavaScripで、条件に一致する内容を検索するときに、filterメソッドを使うことがあります。　arrayが持っている機能ですね。
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
あまり理解していないので、色々なパターンを試してみました。
filter() は Array インスタンスのメソッドで、指定された配列の中から指定された関数で実装されているテストに合格した要素だけを抽出したシャローコピーを作成します。
co...]]></description><link>https://zenn.dev/joo_hashi/articles/03d8e591447d73</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/03d8e591447d73</guid><pubDate>Mon, 19 Aug 2024 15:37:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--srduEX7e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:JavaScript%2520filter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[個人開発者が挑戦！多目的ツールサイト「Ruby Tools」の開発秘話]]></title><description><![CDATA[みなさん、こんにちは！今回は、私が取り組んだ個人開発プロジェクト「Ruby Tools」についてお話しします。このサイトは、様々な職種の方々の日常業務や個人的なタスクを効率化するツールを集めた、オールインワンの便利ツールボックスです。

 Ruby Toolsの誕生秘話
「あれ、このツールどこかにあったはずなんだけど...」
こんな経験、ありませんか？私自身、仕事や日常生活で何度もこう思うことがありました。そこで閃いたのです。「よく使うツールを1つのサイトにまとめれば、もっと効率的になるんじゃないか？」
こうして、Ruby Toolsは生まれました。
サイトURL: https://no...]]></description><link>https://zenn.dev/nomincoding/articles/671b4af6397fb2</link><guid isPermaLink="true">https://zenn.dev/nomincoding/articles/671b4af6397fb2</guid><pubDate>Mon, 19 Aug 2024 14:21:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CWXaHoqg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%258C%25E6%258C%2591%25E6%2588%25A6%25EF%25BC%2581%25E5%25A4%259A%25E7%259B%25AE%25E7%259A%2584%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2580%258CRuby%2520Tools%25E3%2580%258D%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%25A7%2598%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sena%2520Aoyagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3dhWl9BN195UmpsbExhb09xdXFIN2Ffa3dyZi14VHVkYkd0UDZjeWlzLXI5UnRURT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sena Aoyagi</dc:creator></item><item><title><![CDATA[Javascript標準組み込みオブジェクトのまとめ]]></title><description><![CDATA[
 はじめに
最近久しぶりにコーディングテストに挑戦し始めました。現職に勤めてからはほとんど手をつけていなかったので、約5年ぶりですね。最初は簡単なアルゴリズム問題から練習してみたのですが、長年自動補完機能に頼ってきたせいか、基本的な文法を手動で書くことに苦戦しました。
それでも1問ずつ解くうちに少しずつ感覚を取り戻してきました。ただ、言語の組み込み関数を覚えてなかったため、それを使わずにコードを書くとコードが長くなり可読性が落ちたり、パフォーマンスが悪化することに気づきました。すべての組み込み関数を全部覚えるのは現実的ではありませんが、コーディングテストでよく使われる関数だけは整理して...]]></description><link>https://zenn.dev/harper/articles/f9ae1217843aa3</link><guid isPermaLink="true">https://zenn.dev/harper/articles/f9ae1217843aa3</guid><pubDate>Mon, 19 Aug 2024 14:12:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BcYpnKso--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E6%25A8%2599%25E6%25BA%2596%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BD%25E3%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWhRSVZiRVl2X0RZTWlSMDFiZF85bThiaFh4X2FJZGZNTmVYQV9pWTI0V0E3WHBzMWs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ソウ</dc:creator></item><item><title><![CDATA[「スワイプできます」ヒントを自作する]]></title><description><![CDATA[自分のポートフォリオサイトを作っているとき、スライダーを使う際スワイプできるヒントを出したかったのでネットで探してみましたが、overflow:scroll;の時に発動できるライブラリしかなかったので自作しました。
デモサイト：https://azurite0901.github.io/slideHint/
スマホサイズのみを想定してるので検証ツールで狭めてください。
ポートフォリオを作成してるときに作ったやつなのでクラス名がそれにちなんでます。デモサイトではsplideを使用しています

 作りたいもの

スワイプしたら消えるヒントを作る
画面領域内に入ったらふわっと表示させる
スワイ...]]></description><link>https://zenn.dev/az0901/articles/024763ad5a1607</link><guid isPermaLink="true">https://zenn.dev/az0901/articles/024763ad5a1607</guid><pubDate>Mon, 19 Aug 2024 14:10:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2EN_QsD4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2582%25B9%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2599%25E3%2580%258D%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Azurite0901%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1ZDMwMTg4YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Azurite0901</dc:creator></item><item><title><![CDATA[JavaScriptでネストしたオブジェクトから、キーワード検索]]></title><description><![CDATA[
 ネストしたオブジェクトから値を取得するにはどうするのか？
仕事で配列を操作して値を取得するロジックを実装する場面があった。意外と難しかった。入れ子構造になってるオブジェクトから値をキーワード検索で取得する。
let companies = [
    {
        id: 1,
        name: '株式会社A',
        member: {
            age: 20,
            count: 500,
        },
        place: 'TOKYO'
    },
    {
        id: 2,
    ...]]></description><link>https://zenn.dev/joo_hashi/articles/b768de4d3bb9ec</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/b768de4d3bb9ec</guid><pubDate>Mon, 19 Aug 2024 14:03:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fiEjLLhh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E6%25A4%259C%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[JavaScript配列の強力な味方: Array.prototype.reduce()の活用ガイド]]></title><description><![CDATA[
 Array.prototype.reduce()とは
Array.prototype.reduce()は、JavaScriptの配列メソッドの中でも特に強力で柔軟性の高いメソッドです。このメソッドは配列の各要素に対して、ユーザーが定義したコールバック関数を実行し、単一の結果値を生成します。
基本的な構文は以下のようになります：
array.reduce(callback(accumulator, currentValue, index, array), initialValue)


callback: 各要素に対して実行される関数

accumulator: 前回のコールバックの戻...]]></description><link>https://zenn.dev/crebo/articles/article-0005-20240818</link><guid isPermaLink="true">https://zenn.dev/crebo/articles/article-0005-20240818</guid><pubDate>Sun, 18 Aug 2024 12:05:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8M_Z3w_q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E5%25BC%25B7%25E5%258A%259B%25E3%2581%25AA%25E5%2591%25B3%25E6%2596%25B9%253A%2520Array.prototype.reduce%2528%2529%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BC%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxNzlhZTFjZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社くりぼー</dc:creator></item><item><title><![CDATA[Clipboard APIで非同期処理を含む操作をする際の注意点とその対策]]></title><description><![CDATA[!
この記事は、CYBOZU SUMMER BLOG FES '24 (Frontend Stage) DAY 18の記事です。

本記事では、Clipboard APIのブラウザ間での仕様の違いと、非同期処理を含む操作をする際の注意点とその対策をまとめました。

 Clipboard APIとは
Clipboard APIは、Webアプリケーションがシステムクリップボードにアクセスするためのインターフェースを提供します。
例えば、Clipboard.writeTextを使用すると、クリップボードを特定の文字列で上書きすることができます。
// テキストをクリップボードにコピー
navi...]]></description><link>https://zenn.dev/cybozu_frontend/articles/async-clipboard-api</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/async-clipboard-api</guid><pubDate>Sun, 18 Aug 2024 09:43:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iDTNn2gf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Clipboard%2520API%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:daiki%2520%252F%2520%25E3%2581%258D%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258A%25E3%2581%2599%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkzN2NiNjM1NWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daiki / きちくりす</dc:creator></item><item><title><![CDATA[X(旧Twitter)でいいねした画像と動画を、自動でダウンロードする方法]]></title><description><![CDATA[
 はじめに
みなさん、画像収集(意味深) 捗っていますか？
画像収集されている方の中には、いいねをブックマーク代わりに使っている方もいると思います。
でも、1つ1つ画像を右クリックして名前を付けて保存もめんどくさいですよね。
しかも、TwitterAPIも無料プランは投稿の取得ができなくなりました。
そこで、スクロールするだけで自分がいいねした投稿の画像と動画を自動でダウンロードしてくれる コードを書きました(AIが)。しかも無料。これでいつもの画像収集がより捗ることでしょう。
!
※お遊び程度に作ったので、エラー確認もしてなければ、試行回数も数回なので精度に関しては悪しからず...あ...]]></description><link>https://zenn.dev/grimro92/articles/d052dc966cf971</link><guid isPermaLink="true">https://zenn.dev/grimro92/articles/d052dc966cf971</guid><pubDate>Sun, 18 Aug 2024 06:55:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C3z-RnpC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:X%2528%25E6%2597%25A7Twitter%2529%25E3%2581%25A7%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E3%2581%2597%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25A8%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E3%2580%2581%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:grimro92%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y25TU2lTSXRWZWdDcDY4NzBOd2N2bGFLdllBeTJDOENKQW8xTEVtQ0hyTTRjPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>grimro92</dc:creator></item><item><title><![CDATA[【React.js】animate()メソッドを使ってコンポーネントのmount/unmount時にfade-in/fade-outさせる]]></title><description><![CDATA[
 はじめに
fade-in/fade-outは主にモーダル・ダイアログでよく使用されています。
fade-inはCSSのtransitionやanimationを用いることで簡単に実装できます。
fade-outはReactだと不透明度を0にして視覚上見えなくしたり[1]、framer-motionなどの外部ライブラリを頼ることが多いと思います。
今回はブラウザ標準の機能であるElement.animate()メソッドを使ってmount/unmountに連動してfade-in/fade-outを行うモーダルを実装してみます。

 前提知識

HTML
CSS
JavaScript
Ty...]]></description><link>https://zenn.dev/katsuo3/articles/d12a29aab02e66</link><guid isPermaLink="true">https://zenn.dev/katsuo3/articles/d12a29aab02e66</guid><pubDate>Sat, 17 Aug 2024 15:41:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KffYaDEA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React.js%25E3%2580%2591animate%2528%2529%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AEmount%252Funmount%25E6%2599%2582%25E3%2581%25ABfade-in...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2583%2584%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHlHUXlaVGhQNERqUi1DUk03RkdaNlhBUWFkSmNodDNJd1VtQjN2MTc1eUNZWE13PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カツオ</dc:creator></item><item><title><![CDATA[👨‍💼「並列処理と並行処理の違いはなんですか？JSの非同期処理はどちらに該当しますか？」]]></title><description><![CDATA[
 まえがき
こんなこと急に聞かれたら困りますよね(?)。CS専攻じゃないとそこまで気にしたことがない人も多いと思います。名前が似ていてややこしいですが、根本的な違いがあるのでまとめてみました。

 並列処理と並行処理の違い

 並列処理
複数のスレッドでプロセス(タスク)を同時に実行する処理。


 並行処理
単一のスレッドで、複数のプロセス(タスク)を高速で切り替えながら実行する処理。
(人間からしたら複数タスクが同時に実行されているように見えるが、実際は高速に切り替えながら一つ一つの処理を交互に行っているので、同時に複数のプロセス(タスク)は実行されていない)


 自己流の覚え方...]]></description><link>https://zenn.dev/gamuprog/articles/4a05d3770a219f</link><guid isPermaLink="true">https://zenn.dev/gamuprog/articles/4a05d3770a219f</guid><pubDate>Sat, 17 Aug 2024 11:25:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fSDKftnf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%25E3%2580%258C%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8%25E4%25B8%25A6%25E8%25A1%258C%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259FJS%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%25AB%25E8%25A9%25B2%25E5%25BD%2593%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmYTNjODM0OTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>がむ</dc:creator></item><item><title><![CDATA[Vanilla JSでAjax通信する方法(Wp,FetchAPI)]]></title><description><![CDATA[沼ったので自分用にメモ。
固定ページ用テンプレートに記事を出力する。

ajax.php
&lt;?php
    $post_num = 3;
    $paged = get_query_var("paged") ? get_query_var("paged") : 1; //ページ番号
    $query = new WP_Query(
        array(
            'post_type' =&gt; 'post', //カスタム投稿タイプを指定
            'posts_per_page' =&gt; $post_num, //記事の表示件数...]]></description><link>https://zenn.dev/yuta1naba/articles/b64856aa5096c7</link><guid isPermaLink="true">https://zenn.dev/yuta1naba/articles/b64856aa5096c7</guid><pubDate>Sat, 17 Aug 2024 10:14:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K8jr90Hf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vanilla%2520JS%25E3%2581%25A7Ajax%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2528Wp%252CFetchAPI%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ccyuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNUxqQUtuQU1pSERkWHZ2Ym5uR2V4REs0eXFZaE1yNWM5SXJaY3BKQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ccyuta</dc:creator></item><item><title><![CDATA[ブラウザバック広告のデモ]]></title><description><![CDATA[先日、以下の『ブラウザの履歴を操作して「戻る」ボタンで広告を出すやつについて』という記事が話題になっていました。
https://blog.maripo.org/2024/08/history-api-abuse/
技術的な仕組みをより理解するため、実際に動くデモを作ってみました。ただし、Safari対策等は省略しています。
!
お使いの環境によっては動かないかもしれません。
筆者は Linux の Vivaldi, Chrome, Edge, Firefox で動作を確認しました。

https://eduidl.github.io/history-api-demo/
上のリンクを開く...]]></description><link>https://zenn.dev/eduidl/articles/history-api-abuse</link><guid isPermaLink="true">https://zenn.dev/eduidl/articles/history-api-abuse</guid><pubDate>Sat, 17 Aug 2024 10:00:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4vbEEXPP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E5%25BA%2583%25E5%2591%258A%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:eduidl%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNDMwMDk1NTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>eduidl</dc:creator></item><item><title><![CDATA[JavaScriptのエクスポートについて]]></title><description><![CDATA[ちょいちょい忘れるのでまとめます！

 エクスポート形式の比較

 1. export function (関数宣言)


形式: 関数宣言をそのままエクスポートする。

特徴:

ホイスティングが効くため、宣言前に呼び出すことが可能。
デフォルトエクスポートは不可。



// utils/math.js

export function add(a, b) {
  return a + b;
}


使用シーン: シンプルな関数で、ホイスティングが必要な場合に適している。


 2. export const 変数名 = function (関数式)Named export (imp...]]></description><link>https://zenn.dev/momonga_g/articles/3392a4a1fbcf18</link><guid isPermaLink="true">https://zenn.dev/momonga_g/articles/3392a4a1fbcf18</guid><pubDate>Sat, 17 Aug 2024 06:36:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dy3vN7jR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2582%25E3%2582%2593%25E3%2581%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWRkZTc0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ももんが</dc:creator></item><item><title><![CDATA[[JS]文字列操作: 連続する文字列を変換する方法]]></title><description><![CDATA[
 replaceを用いた文字列操作
replaceメソッドと正規表現を使って、連続する特定の文字列を一つにまとめる方法を解説します。
以下のコードは、連続するハイフンを一つのハイフンに置き換える例です。
let str = "hello---world--example";
let result = str.replace(/-+/g, "-");
console.log(result); // "hello-world-example"
g オプションを付けることで、文字列全体に対して正規表現を適用し、該当するすべての部分を置き換えます。ここで、正規表現の便利なオプションである g ...]]></description><link>https://zenn.dev/mhirata/articles/22d3717c0c4e3b</link><guid isPermaLink="true">https://zenn.dev/mhirata/articles/22d3717c0c4e3b</guid><pubDate>Sat, 17 Aug 2024 04:41:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K5jxt58Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJS%255D%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%253A%2520%25E9%2580%25A3%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjNTg5NmU0ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizuki</dc:creator></item><item><title><![CDATA[リッチテキストエディター（RTE）のJSライブラリ色々試してみた]]></title><description><![CDATA[!
この記事は、CYBOZU SUMMER BLOG FES '24 (Frontend Stage) DAY 17日目の記事です。


 リッチテキストエディタ(RTE)って？
リッチテキストエディタ（以下RTE）とは、文字を入力できるだけでなく、文字に装飾を加えたり、段落を設定できたりと複雑な機能を持つエディタのことです。
弊社プロダクトであるkintone内にも以下のようなエディタが存在します。

また、似たものを指すWYSIWYG(読み方:ウィジウィグ)という用語もありますが、これはWhat You See Is What You Get（見たままが得られる）の略であり、編集時と...]]></description><link>https://zenn.dev/cybozu_frontend/articles/7733bf0560829e</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/7733bf0560829e</guid><pubDate>Sat, 17 Aug 2024 03:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ezq5w4d8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2581%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%25BC%25EF%25BC%2588RTE%25EF%25BC%2589%25E3%2581%25AEJS%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E8%2589%25B2%25E3%2580%2585%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:irico%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZTk4ZmY5ZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>irico</dc:creator></item><item><title><![CDATA[npmインストールでバージョン固定したい場合はnpm ciを使う]]></title><description><![CDATA[
 はじめに（結論）

開発中は$ npm installで環境を整える（package-lock.jsonを確定させる）
確定以後は$ npm ciを使用しpackage-lock.jsonに基づいてインストールすることで、実行時点によらず同じバージョンのライブラリがインストールできる


 npmインストールコマンドの挙動の違い（installとci）

 $ npm install



package.jsonをもとにインストールする

package-lock.jsonが更新される（されてしまう）


 $ npm ci



package-lock.jsonをもとにインスト...]]></description><link>https://zenn.dev/wanage/articles/9cfa67f7d678cf</link><guid isPermaLink="true">https://zenn.dev/wanage/articles/9cfa67f7d678cf</guid><pubDate>Sat, 17 Aug 2024 00:42:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bl29xBvQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:npm%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E5%259B%25BA%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AFnpm%2520ci%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wanage%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNGQ1NzBiZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wanage</dc:creator></item><item><title><![CDATA[Next.jsとtRPCで始めるタイプセーフなAPI開発]]></title><description><![CDATA[
 Next.jsとtRPCで始めるタイプセーフなAPI開発

 はじめに
近年、Webアプリケーションの開発において、フロントエンドとバックエンドの連携がますます重要になっています。特に、APIの設計と実装は、アプリケーションのパフォーマンスやメンテナンス性に大きな影響を与えます。そこで注目されているのが、Next.jsとtRPCの組み合わせです。Next.jsはReactベースのフレームワークであり、tRPCはタイプセーフなAPIを構築するためのライブラリです。この二つを組み合わせることで、開発者は効率的かつ安全にAPIを構築することができます。
本記事では、Next.jsとtRPC...]]></description><link>https://zenn.dev/llm_robot/articles/20240817-nextjs-trpc-api</link><guid isPermaLink="true">https://zenn.dev/llm_robot/articles/20240817-nextjs-trpc-api</guid><pubDate>Fri, 16 Aug 2024 22:07:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gfyKXwQG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A8tRPC%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25BC%25E3%2583%2595%25E3%2581%25AAAPI%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIZAWA%2520version%253A0.0.2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTE3MGM1NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIZAWA version:0.0.2</dc:creator></item><item><title><![CDATA[wkhtmltopdfの代わりにPrintdで解決した話]]></title><description><![CDATA[2023年にwkhtmltopdfの開発が停止した。とはいえ動作はしていたから、いくつか問題を抱えながらも解決を後回しにしていたけど、たまたま知ったPrintdで解決した。
Printdはウェブページの特定の要素を印刷することができる。デモはわかりやすいけど、ページの一部を印刷している様子がわかりにくいかも。

 背景
そもそものPDFを出力する理由は、最終的に紙に印刷するから。だからユーザーはPDFに限らず、印刷できればなんでもOK。
業務フローの観点からPrintdで印刷ダイアログを出すのは問題なく、むしろ好ましい動作。これによりwkhtmltopdfを使ってサーバーでPDFを出力す...]]></description><link>https://zenn.dev/count0/articles/cb132eb70cee85</link><guid isPermaLink="true">https://zenn.dev/count0/articles/cb132eb70cee85</guid><pubDate>Fri, 16 Aug 2024 04:23:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RuAUCCY9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:wkhtmltopdf%25E3%2581%25AE%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25ABPrintd%25E3%2581%25A7%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masami%2520Asai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkMWZjNGE0NzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masami Asai</dc:creator></item><item><title><![CDATA[JS で絵文字リストを配列として作る。イテレーターで。]]></title><description><![CDATA[
 この記事は…

JS のイテレーターの作り方がわかります
絵文字のリストを配列として作れるようになります
アイデア次第ではもっと実用的な配列もつくれるかもしれません


 顔文字のリストがほしくなった
Web サービスを使ってると、絵文字を入力するときに
パレットみたいなのから、選択して入れられる UI ありますよね。

こういうやつ
これを実装するにあたって、一つずつコードに絵文字を打ち込んで、
配列にするのはめんどくさいな…と思いまして。
どうやってラクしようかなと考えたわけです。

 イテレーターを作っちゃえば良いのでは？
JS ではイテレーターっていうやつがありまして。
ht...]]></description><link>https://zenn.dev/agent_grow/articles/ea59ae6900cde1</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/ea59ae6900cde1</guid><pubDate>Fri, 16 Aug 2024 01:57:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k_OIjumX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%2520%25E3%2581%25A7%25E7%25B5%25B5%25E6%2596%2587%25E5%25AD%2597%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2582%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25A7%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ezaki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliYTQ4YzNhOWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ezaki</dc:creator></item></channel></rss>