<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 13 Sep 2024 06:19:55 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[#51 √2の近似値を二分法で計算してみた]]></title><description><![CDATA[
 概要
√2の近似値を二分法で計算してみようと思います。√2に限らず、JavaScriptで表せる任意の正の実数であれば同じように計算できます

 手順
以下の手順で近似値を求めます

最小値と最大値の中間値を求める
1で求めた値が目的の値より小さい場合は最小値を、大きい場合は最大値を1で求めた値に置き換える
任意の精度(※)に達していなければ1に戻る

※JavaScriptではNumber.EPSILON(2^-52)より小さな差を表現できないので、今回はそこを目標にします

 実装
2の平方根は2より小さいことが知られているので、

最小値: 0
最大値: 2

を初期値として設...]]></description><link>https://zenn.dev/nxted_sapporo/articles/0724585d3f4414</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/0724585d3f4414</guid><pubDate>Fri, 13 Sep 2024 03:00:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mPxU5T_o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252351%2520%25E2%2588%259A2%25E3%2581%25AE%25E8%25BF%2591%25E4%25BC%25BC%25E5%2580%25A4%25E3%2582%2592%25E4%25BA%258C%25E5%2588%2586%25E6%25B3%2595%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[#41　二分探索を可視化してみた]]></title><description><![CDATA[
 概要
普段よく探索アルゴリズムを使っているので動きを理解するために二分探索を実装して可視化してみたいと思います
この記事は前回のクイックソートをCanvasを用いて可視化してみたの関連記事となります

 二分探索の実装

 二分探索の概要
二分探索とは、ソートされた配列に適用できる探索アルゴリズムで、検索対象の値が配列の中央の値より大きいか小さいかを繰り返し判断して範囲を絞り込んでいく手法です
前提条件: 検索したい配列がソートされていること

検索したい値と配列の中央値を比較して値が同じ値であれば探索を終了し、そうでないのならば2へ進みます
検索したい値が大きい場合は検索する配列の...]]></description><link>https://zenn.dev/nxted_sapporo/articles/a3de5157c75f87</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/a3de5157c75f87</guid><pubDate>Fri, 13 Sep 2024 02:48:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1gCvfqAo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252341%25E3%2580%2580%25E4%25BA%258C%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[bun outdated]]></title><description><![CDATA[bun の v1.1.26 から bun outdated コマンドが実装されてた。
ずっと欲しい機能だったんだけどついに！！
今までは npm-check-updates を使ってたけど、もう不要だー。
$ bun outdated
更新したい時は bun update or bun update --latest で OK.

 参考リンク

Bun v1.1.26
Request: outdated CLI command #1223
bun outdated

]]></description><link>https://zenn.dev/melwey/articles/19140d5436a151</link><guid isPermaLink="true">https://zenn.dev/melwey/articles/19140d5436a151</guid><pubDate>Fri, 13 Sep 2024 02:24:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wL1H8i2S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:bun%2520outdated%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%25E3%2582%258B%25E3%2581%2586%25E3%2581%2587%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnQ2WmZjNnNTOTgzY0o4UVpwR3BBWk1LTGZ0WDFYRjhFYTVkNy1VcVJRamZzYml3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>めるうぇい</dc:creator></item><item><title><![CDATA[SCSSをパワーアップ：TypeScriptプロパティタイプの自動化]]></title><description><![CDATA[要約
コンポーネントのスタイリングプロパティを手動で定義するのはもううんざりですか？ 動的な型生成でSCSSに頑張ってもらいましょう！
例えば、size--sm、size--md のようなクラスがCSSにいくつかあるとします。 size: 'sm' | 'md' のようなプロパティを自動的に生成することができます。これは、常にscssファイルの内容と同期されます。
要点はこちら:


SCSSの構造化: クラスには property-name--property-value の命名規則に従ってください（例： size--sm、variant--primary）。


typed-scss...]]></description><link>https://zenn.dev/sun_asterisk/articles/574530d6e80e48</link><guid isPermaLink="true">https://zenn.dev/sun_asterisk/articles/574530d6e80e48</guid><pubDate>Fri, 13 Sep 2024 01:25:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J7ITBKud--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SCSS%25E3%2582%2592%25E3%2583%2591%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25EF%25BC%259ATypeScript%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2593%25E3%2583%25B3%2520%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A7%25E3%2583%25A0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YTU0ZjZiM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sun%252A%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNTVlY2IwMTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>デルビン アルチョム</dc:creator></item><item><title><![CDATA[[TypeScript×Supabase] テーブルの型情報を自動で生成]]></title><description><![CDATA[
 はじめに
TypsScriptで、Supabaseのテーブルの型情報を自動で生成し、typesファイルを作成するやり方を知ったので、メモ程度に書いていきます。

 テーブルの情報
今回使用するテーブルの情報は以下のようになります。

 taskテーブル
id： int8
title: text
contents: text


 生成手順
生成方法は簡単です。
以下のコマンドをルートディレクトリで実行します。
npx supabase gen types typescript --project-id XXXXXXXXX --schema public &gt; types/supa...]]></description><link>https://zenn.dev/ryohei0509/articles/65672a6a60b92c</link><guid isPermaLink="true">https://zenn.dev/ryohei0509/articles/65672a6a60b92c</guid><pubDate>Fri, 13 Sep 2024 00:35:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x_hj1upp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%25C3%2597Supabase%255D%2520%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AE%25E5%259E%258B%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hukuryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2JhYWM4YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hukuryo</dc:creator></item><item><title><![CDATA[[三感記事]ts-nodeをHello Worldから始める入門ガイド]]></title><description><![CDATA[
 1. イントロダクション
TypeScriptとNode.jsを組み合わせたts-nodeは、TypeScriptをトランスパイルせずに直接実行できる強力なツールです。本チュートリアルでは、基本的なts-nodeプロジェクトの設定から、実践的なアプリケーションの構築、さらには高度な使用法まで、初心者から中級者まで幅広く解説します。

 1.1 対象読者

Node.jsの基本を理解している初心者開発者
TypeScriptを学び始めたばかりの方
ts-nodeを使ってプロジェクトを始めたい方


 1.2 チュートリアルのゴール

ts-nodeプロジェクトの基本的なセットアップ方法...]]></description><link>https://zenn.dev/o6lvl4/articles/d961550af3b601</link><guid isPermaLink="true">https://zenn.dev/o6lvl4/articles/d961550af3b601</guid><pubDate>Thu, 12 Sep 2024 17:48:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2i4_fMWx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E4%25B8%2589%25E6%2584%259F%25E8%25A8%2598%25E4%25BA%258B%255Dts-node%25E3%2582%2592Hello%2520World%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O6lvl4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2ZTAzMjVhYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O6lvl4</dc:creator></item><item><title><![CDATA[TypeScript + Biome + Bun + Zod + Vitestのボイラーテンプレートを作成]]></title><description><![CDATA[TypeScript + Biome + Bun + Zod + Vitestを利用したボイラーテンプレートを作成しました。
https://github.com/arucraft2022/typescript-biome-bun-zod-vitest.git

 きっかけ
これまでNode.js上でプログラムを作成していたのですが、Bunの存在を知り、他のランタイム環境も試してみたくなったため、今回のテンプレートを作成しました。

 各バージョン
プログラミング言語：TypeScript@5.6.2
静的解析ツール：Biome@1.8.3
JavaScriptラインタイム：Bun@1....]]></description><link>https://zenn.dev/arucraft2022/articles/a15bb16b9ede71</link><guid isPermaLink="true">https://zenn.dev/arucraft2022/articles/a15bb16b9ede71</guid><pubDate>Thu, 12 Sep 2024 15:24:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f35MJiaC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%252B%2520Biome%2520%252B%2520Bun%2520%252B%2520Zod%2520%252B%2520Vitest%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25A4%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzNTMxMWMzZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アルク</dc:creator></item><item><title><![CDATA[【初心者向け】Reactのレンダリングについて学んでみよう！]]></title><description><![CDATA[
 はじめに
Reactのレンダリングそのものについての記事は意外と少ないと感じたため、執筆しました！
Reactのレンダリングメカニズムを理解することは、効率的な開発とパフォーマンス最適化に直結します。
この記事では、Reactのレンダリングの基本的な概念をお届けし、React開発をよりスムーズにするお手伝いができればと思っています！

 問題
以下に、姓と名の入力フィールドで構成されたシンプルなコンポーネントがあります。
あなたは、このコンポーネントの姓のフィールドに「react」、名のフィールドに「test」と入力しました。
ここで、次の問いに答えてください。

合計で何回レンダリ...]]></description><link>https://zenn.dev/kiman/articles/30f6d604e95847</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/30f6d604e95847</guid><pubDate>Thu, 12 Sep 2024 05:03:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E6syrhU1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591React%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[utilsの整理整頓]]></title><description><![CDATA[
 1. 関数を機能ごとにファイルに分割

utils/calculate.ts
export const add = (a: number, b: number): number =&gt; a + b;
export const subtract = (a: number, b: number): number =&gt; a - b;


utils/format.ts
export const formatCurrency = (value: number): string =&gt; `$${value.toFixed(2)}`;
export const formatDate...]]></description><link>https://zenn.dev/unsco/articles/10ae03b765e738</link><guid isPermaLink="true">https://zenn.dev/unsco/articles/10ae03b765e738</guid><pubDate>Thu, 12 Sep 2024 01:10:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6yTeNw9C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:utils%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%25E6%2595%25B4%25E9%25A0%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2582%2593%25E3%2581%2599%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhN2QzN2Q5YWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あんすこ</dc:creator></item><item><title><![CDATA[broadcast-channel 日本語訳]]></title><description><![CDATA[以下の broadcast-channel の日本語訳です。
https://github.com/pubkey/broadcast-channel

メモ
- Deepl による機械翻訳です]]></description><link>https://zenn.dev/hsato_workman/books/fd2b3463f9b069</link><guid isPermaLink="true">https://zenn.dev/hsato_workman/books/fd2b3463f9b069</guid><pubDate>Wed, 11 Sep 2024 18:08:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wT2VKQpu--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82MmY0NThlZTM2LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hiroki-sato-workman</dc:creator></item><item><title><![CDATA[TS, React未経験からスタートするReactプロジェクト]]></title><description><![CDATA[
 概要
TypeScriptS初心者（cdkでたまに触る程度）かつReact開発経験がないメンバーで、Vue2のプロダクトをReactで作り直した。その時にReactで開発するためにやってきたこと、技術選定をまとめた。規模としては4名のスクラムチームで、ReactはSPAで作っている。新規にReactで開発をはじめる方でもそうでない方でも参考になると良いです。
根底にあるのは、対象がReactでもVue3でもなんでも良く、新しいフレームワークで開発する際に、どうやって学習して適応して切り抜けるかということ。カオスエンジニアリングと似ていて、フレームワーク移行に対応できるチームですか？と...]]></description><link>https://zenn.dev/nibutake/articles/df229452babf90</link><guid isPermaLink="true">https://zenn.dev/nibutake/articles/df229452babf90</guid><pubDate>Wed, 11 Sep 2024 14:43:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4cQVWCYC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%252C%2520React%25E6%259C%25AA%25E7%25B5%258C%25E9%25A8%2593%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258BReact%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nibu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhYTM1MWUzZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nibu</dc:creator></item><item><title><![CDATA[Next.jsとCloudflareでポートフォリオサイトを作った]]></title><description><![CDATA[今回はモダンな技術でポートフォリオサイトを作ったので紹介します。
使用した技術は

Next.js
Cloudflare Pages
shadcn/ui
heroicons

です。

 作成したサイトの概要
選定理由の前に、まず作ったサイトを紹介します。
是非アクセスして見ていただけると嬉しいです。
https://portfolio.neoserv.app/
全体はこんな感じです。メインページはシンプルになっていて、右上にボタンと下にターミナルがあるだけなシンプルなデザインにしています。

ここのターミナルでは実際に文字を打つことが出来ます。
現在では、

ls -l
cd [pat...]]></description><link>https://zenn.dev/negilemon/articles/1bb626149769a8</link><guid isPermaLink="true">https://zenn.dev/negilemon/articles/1bb626149769a8</guid><pubDate>Wed, 11 Sep 2024 14:31:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--skdQylH0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A8Cloudflare%25E3%2581%25A7%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%258E%25E3%2582%258C%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzMWNiOTRkZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねぎれもん</dc:creator></item><item><title><![CDATA[分割代入で null に対するデフォルト値の型推論がへん]]></title><description><![CDATA[以下のコードの a1 の型が 1 | null になるのなんで？(ブルーベリー本だと null になるって書いてあるのに・・・)
意味的にも null にデフォルト値は適用されないので型推論の結果としては null になって欲しい感じがする。
const v1 = { a1: null };
const { a1 = 1 } = v1
console.log(a1) // null と出力される, a1: 1 | null


const v2 = { a2: undefined };
const { a2 = 1 } = v2
console.log(a2) // 1 と出力される, ...]]></description><link>https://zenn.dev/melwey/articles/1e82e5a125ad91</link><guid isPermaLink="true">https://zenn.dev/melwey/articles/1e82e5a125ad91</guid><pubDate>Wed, 11 Sep 2024 12:56:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aZ5Id-ra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%25A7%2520null%2520%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E5%2580%25A4%25E3%2581%25AE%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%258C%25E3%2581%25B8%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%25E3%2582%258B%25E3%2581%2586%25E3%2581%2587%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnQ2WmZjNnNTOTgzY0o4UVpwR3BBWk1LTGZ0WDFYRjhFYTVkNy1VcVJRamZzYml3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>めるうぇい</dc:creator></item><item><title><![CDATA[{}, object, unknown, Record<string, unknown>]]></title><description><![CDATA[
 まとめ



値の種類
unknown
{}
object
Record&lt;string, unknown&gt;




オブジェクト (レコード)
✅
✅
✅
✅


オブジェクト (レコード以外)
✅
✅
✅
❌


プリミティブ
✅
✅
❌
❌


null
✅
❌
❌
❌


undefined
✅
❌
❌
❌



整理すると理解が進みますね。

 確認用コード
let v1: {};

v1 = 100
v1 = true
v1 = "hello"
v1 = { a: 1 }
v1 = [1]
v1 = null       // 型エラー
v1 = undefin...]]></description><link>https://zenn.dev/melwey/articles/5b9335f9b3c210</link><guid isPermaLink="true">https://zenn.dev/melwey/articles/5b9335f9b3c210</guid><pubDate>Wed, 11 Sep 2024 12:44:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nGb8b3cj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%257B%257D%252C%2520object%252C%2520unknown%252C%2520Record%253Cstring%252C%2520unknown%253E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%25E3%2582%258B%25E3%2581%2586%25E3%2581%2587%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnQ2WmZjNnNTOTgzY0o4UVpwR3BBWk1LTGZ0WDFYRjhFYTVkNy1VcVJRamZzYml3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>めるうぇい</dc:creator></item><item><title><![CDATA[NestJSで多言語化対応を行う方法]]></title><description><![CDATA[トラストハブが運営しているCloveオリパは海外からアクセスするユーザーが増加しており、より積極的なサポートのために海外ユーザー向けに多言語化対応を行っています。
トラストハブではほぼ全てのサービスのバックエンドAPIにNestJSを使っており、nestjs-i18nというパッケージを導入することで多言語化対応を実現しています。
https://nestjs-i18n.com

 nestjs-i18nの導入方法
まずは、nestjs-i18nをインストールします
pnpm install nestjs-i18n
最初に翻訳ファイルを作成します。
トラストハブでは、src/libディレク...]]></description><link>https://zenn.dev/trusthub/articles/13e5b62b259f9f</link><guid isPermaLink="true">https://zenn.dev/trusthub/articles/13e5b62b259f9f</guid><pubDate>Wed, 11 Sep 2024 06:14:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fhumBbLV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2581%25A7%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:matsupiee%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NzlhZmI5YTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TrustHub%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEozYlVnSGpHNEk1a3lsLV93bC1nOGRVZWhzd3BNNmMzaGQxdEIzcUdPWEZyeUJHQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>matsupiee</dc:creator></item><item><title><![CDATA[Expo で始める React Native 開発]]></title><description><![CDATA[ゼロから Expo 使いながら React Native を学べます。

【読者】
・React Native の初学者
・React使いで React Native に興味ある方

【特徴は】
・Expo の公式ドキュメントにそって日本語で学習できること
・公式は JavaScript ですが TypeScript で学習できること
・CI 環境を構築できること
・リポジトリが公開されていること

【本書籍がカバーする技術】
・React Native
・Expo
・ESLint
・Prettier
・husky
・lint-staged
・TypeScript
・GitHub Actions

【その他】
「いいね」してくれたらモチベーションあがります🚀 ]]></description><link>https://zenn.dev/hayato94087/books/9ba8aa1f337dd5</link><guid isPermaLink="true">https://zenn.dev/hayato94087/books/9ba8aa1f337dd5</guid><pubDate>Wed, 11 Sep 2024 06:01:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zThUZ6-g--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kMTZlMzkwYjhhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[T3 Stackでプログラミングに特化したタイピングゲームを作りました！あなたは何点出せますか？]]></title><description><![CDATA[
 はじめに
T3 Stack でプログラミングに特化したタイピングゲーム「UnTyping」を作成しました。
この記事では、開発に使用した技術スタックについて触れながら、タイピングゲームのどの部分でどの技術を使ったのか解説していきたいと思います。

 「UnTyping - エンジニア向けプログラミングタイピングゲーム　」とは？
「UnTyping」とは、プログラミングを練習するために特化したタイピングゲームです。エンジニアを主なターゲットにしています。
https://untyping.jp?from=zenn
そもそも、なぜ UnTyping を作ったのかというと、プログラミングの...]]></description><link>https://zenn.dev/taichifukumoto/articles/typing-game-untyping</link><guid isPermaLink="true">https://zenn.dev/taichifukumoto/articles/typing-game-untyping</guid><pubDate>Wed, 11 Sep 2024 05:48:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wBoE37DY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:T3%2520Stack%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E7%2589%25B9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AF%25E4%25BD%2595%25E7%2582%25B9%25E5%2587%25BA%25E3%2581%259B%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taichi%2520fukumoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiZTU1OWFmNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taichi fukumoto</dc:creator></item><item><title><![CDATA[コミット時にtypescript-eslintを使ったlintを高速化する]]></title><description><![CDATA[
 コミット時のlintが遅い問題
うちのチームではコミット時にlint-stagedを使ってeslintを使ったlintを実行していますが、コミットに20~30秒程度の時間がかかる課題がありました。
この問題の解決策としてすぐに考えつくのは以下の二つです。
1.そもそもコミット時のlintをやめてエディタの設定でon save時にlintを実行する
2.biomeやoxlintといった高速なlinterを利用する
エディタの設定でon save時にlintを実行する戦略は割とワークするやり方ではありますが、チーム内で使っているエディタが統一されていないことなどから導入には至りませんでし...]]></description><link>https://zenn.dev/thiry/articles/31d807055dbd53</link><guid isPermaLink="true">https://zenn.dev/thiry/articles/31d807055dbd53</guid><pubDate>Wed, 11 Sep 2024 05:26:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yZUQ3rGO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E6%2599%2582%25E3%2581%25ABtypescript-eslint%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259Flint%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thiry%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNldySFpJSlQtRDdtVGJDd2paak9aOUVIcG9uTWpSSVR5d0N5bGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>thiry</dc:creator></item><item><title><![CDATA[【Next.js】styled-componentsにおけるprops,mixin, スタイルの継承についてふれる]]></title><description><![CDATA[React/Next.jsでの開発において、コンポーネントへのスタイル適用は主にstyled-componentsを使っています。しかし、改めてその機能を学び直してみると、mixinやスタイルの継承といった使い方ができることを知り、自分がstyled-componentsのごく表層の基本機能しか活用できていなかったことに気づかされました。
本記事では、styled-componentsを使ったpropsやmixin、スタイルの継承の実装方法についてまとめたいと思います。

 実行環境
本記事で使用している環境は以下の通りです。

Next.js: 14.2.5
React: 18.x
s...]]></description><link>https://zenn.dev/atsumu22/articles/aaebcd118f1aee</link><guid isPermaLink="true">https://zenn.dev/atsumu22/articles/aaebcd118f1aee</guid><pubDate>Wed, 11 Sep 2024 04:39:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dKoxkG5b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591styled-components%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bprops%252Cmixin%252C%2520%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E7%25B6%2599%25E6%2589%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25B5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25A4%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkMTVhNTAzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あつむ</dc:creator></item><item><title><![CDATA[弊社のフロントエンドのパフォーマンス改善のお話]]></title><description><![CDATA[
 はじめに
はじめまして、BEENOSの山岡です。
普段は主にフロントエンドの開発を担当しており、執筆時点では新卒3年目となりました(時が経つのは早いですね…)
今回は、弊社が運用している大規模Webサービスのフロントエンドのパフォーマンス改善について、振り返りも兼ねて共有したいと思います✏️

 問題
今回の取り組みの前に抱えていたプロダクトの問題点としては、以下の2点です。
①レンダリング後にAPIをたたいた後、再度データを取得する際に、再び同じAPIをたたいてしまっている。
②APIのレスポンスの値に対して、都度storeの枠を増やす必要があり、それを行わずに別の場所で再ロードを...]]></description><link>https://zenn.dev/beenos_tech/articles/6ca40f923ba064</link><guid isPermaLink="true">https://zenn.dev/beenos_tech/articles/6ca40f923ba064</guid><pubDate>Wed, 11 Sep 2024 02:59:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LjQExeJ---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BC%258A%25E7%25A4%25BE%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%2594%25B9%25E5%2596%2584%25E3%2581%25AE%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2582%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkNzY5MmQxNGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BEENOS%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NTYzZDU1MzYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまとも</dc:creator></item></channel></rss>