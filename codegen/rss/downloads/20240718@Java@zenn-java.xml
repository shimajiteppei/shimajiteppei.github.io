<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 18 Jul 2024 07:39:37 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【JavaFX】WebViewを使用してGoogle APIのOAuth同意画面を表示する方法]]></title><description><![CDATA[JavaFX の WebView を使用して Google API の OAuth 同意画面を表示する方法をまとめました。

 1. 動作環境

macOS 14.5
Java 21.0.3
JavaFX 21.0.3
google-api-client 2.6.0
google-oauth-client-jetty 1.36.0
google-api-services-drive v3-rev20240628-2.0.0


 2. サンプルプロジェクト
GitHub でサンプルプロジェクトを公開しています。
https://github.com/iwazou-dev/javafxgo...]]></description><link>https://zenn.dev/iwazou/articles/javafx-googleapi-auth-1af5ddc356e296</link><guid isPermaLink="true">https://zenn.dev/iwazou/articles/javafx-googleapi-auth-1af5ddc356e296</guid><pubDate>Thu, 18 Jul 2024 07:38:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fsuCFdyb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaFX%25E3%2580%2591WebView%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Google%2520API%25E3%2581%25AEOAuth%25E5%2590%258C%25E6%2584%258F%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258F%25E3%2581%259E%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUlKUmg4NHc5a2k5Y3p0YmtZN0dqd2hwd1V3Yk1vbTFFYUJkaTBsNC1hPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いわぞう</dc:creator></item><item><title><![CDATA[Semantic Kernel で Text-To-Speech と Speech-To-Text を試す]]></title><description><![CDATA[前回に引き続いて Java 版の Semantic Kernel を試したいと思います。掲題の通りに Text-To-Speech と Speech-To-Text を試したいと思いますが、それぞれ個別の AI モデルを利用します。具体的には以下となります。

Text-To-Speech: tts モデルを利用　https://learn.microsoft.com/ja-jp/azure/ai-services/openai/text-to-speech-quickstart?tabs=command-line

Speech-To-Text: Whisper モデルを利用 http...]]></description><link>https://zenn.dev/microsoft/articles/semantickernel-java-02</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/semantickernel-java-02</guid><pubDate>Thu, 18 Jul 2024 04:58:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6U-cpBIO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520%25E3%2581%25A7%2520Text-To-Speech%2520%25E3%2581%25A8%2520Speech-To-Text%2520%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Daichi%2520Isami%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGF2NkRDRXVKdXRUN2VRRmI0ZDdKcmJycURONXBQNmdxNVI1NGdkZFhoY0o2Mj1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daichi Isami</dc:creator></item><item><title><![CDATA[IDEAの文字コードでcom.github.johnrengelman.shadowでCould not create taskになった]]></title><description><![CDATA[
 環境

Windows 10
Android Studio Iguana 2023.2.1 #AI-232.10227.8.2321.11479570
Java 17
Gradle 7.6
com.github.johnrengelman.shadow 7.1.2


 背景
com.github.johnrengelman.shadowを導入したGradleプロジェクトを作っていた。

build.gradle.kts
...
plugins {
    ...
    id("com.github.johnrengelman.shadow") version "7.1.2"
}
...]]></description><link>https://zenn.dev/i8v8c32ftf0ixdj/articles/971e54c95821d1</link><guid isPermaLink="true">https://zenn.dev/i8v8c32ftf0ixdj/articles/971e54c95821d1</guid><pubDate>Wed, 17 Jul 2024 05:08:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T8CV09G4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IDEA%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7com.github.johnrengelman.shadow%25E3%2581%25A7Could%2520not%2520crea...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhMGYyMTQ1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>_</dc:creator></item><item><title><![CDATA[Javaのスレッドに割り込みをして停止する]]></title><description><![CDATA[
 はじめに
今回はJavaのスレッドに割り込みをして強制停止する方法について調査しました。

 スレッドに割り込みをして停止する
interruptメソッドを使用すると、スレッドでInterruptedExceptionを発生させて、スレッドの処理を終了させることができます。

TestMain.java
public class TestMain {
    public static void main(String[] args) {
        try {

            // スレッドを起動
            TestThread testThread =...]]></description><link>https://zenn.dev/rescuenow/articles/1dceed5efe634e</link><guid isPermaLink="true">https://zenn.dev/rescuenow/articles/1dceed5efe634e</guid><pubDate>Tue, 16 Jul 2024 08:30:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rYmsTLKD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AB%25E5%2589%25B2%25E3%2582%258A%25E8%25BE%25BC%25E3%2581%25BF%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E5%2581%259C%25E6%25AD%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nmatsu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzOThkNmZjMGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nmatsu</dc:creator></item><item><title><![CDATA[「入門Javaのenum」のAppendix]]></title><description><![CDATA[JavaのEnumを友人に説明してくれと言われたので。
この記事は入門Javaのenumを補完する目的で書いたため、まずは元の記事を軽く読んでからこの記事を読むとよい。

 Enumとは
JavaのEnum(列挙型)は特殊なクラスとして表現される。
メンタルモデルの説明をするため、実際にはどのように処理されているか僕は知らない。

 Class to Enum
まずはクラスからEnumっぽいものを構成していき最後にEnumに変換する方針で説明する。

 メインで完結
まずはクラス型変数をメインに定義にする。
class Rank {
    double discountRate;
  ...]]></description><link>https://zenn.dev/oksongh/articles/hello_java_enum</link><guid isPermaLink="true">https://zenn.dev/oksongh/articles/hello_java_enum</guid><pubDate>Tue, 16 Jul 2024 02:54:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tMwvD9Po--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%2585%25A5%25E9%2596%2580Java%25E3%2581%25AEenum%25E3%2580%258D%25E3%2581%25AEAppendix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oksongh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKei1WNzVFZzlpWVd3SlV0LTZTTTFsclVnSTBjSUdVN09lNjJERjQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oksongh</dc:creator></item><item><title><![CDATA[【Mac】バッチファイルの内容をシェルスクリプトとして実行する方法]]></title><description><![CDATA[
 記事作成の背景
Macでのバッチファイルの実行方法を調べたところ、シェルスクリプトとして実行することでwindowsで行うようなバッチ処理が可能ということがわかったため、備忘録的な形で残そうと思った。
もし認識誤りなどあれば、適宜ご指摘いただければ幸いです。

 ①バッチファイルの内容を下記のように修正する
◾️ 修正前（Windowsでのバッチ処理実行用の内容）
# PATH環境変数を設定
set PATH=/Applications/Eclipse_2024-06.app/Contents/java/21/bin;%PATH%
# ディレクトリを移動
cd /Applicatio...]]></description><link>https://zenn.dev/keita09/articles/f89e39ee6b1564</link><guid isPermaLink="true">https://zenn.dev/keita09/articles/f89e39ee6b1564</guid><pubDate>Mon, 15 Jul 2024 14:55:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m5Te-3jx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Mac%25E3%2580%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjNTc2NjBmNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keita</dc:creator></item><item><title><![CDATA[Spring Data JPAでのデータベース操作の解説]]></title><description><![CDATA[
 Spring Data JPAを使ったデータベース操作の解説
Spring Data JPAを使用すると、Javaアプリケーションでデータベースとの連携を効率的に行うことができます。

 1. プロジェクト設定

 Mavenの場合
&lt;!-- pom.xml --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;
&lt;/d...]]></description><link>https://zenn.dev/teru_whisky/articles/15f0c034f2e08c</link><guid isPermaLink="true">https://zenn.dev/teru_whisky/articles/15f0c034f2e08c</guid><pubDate>Mon, 15 Jul 2024 13:18:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eCrKyPT0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Data%2520JPA%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:teru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5NjMzN2ZhYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>teru</dc:creator></item><item><title><![CDATA[クリーンコード【境界編】]]></title><description><![CDATA[
 はじめに
本記事では、Robert C. Martinの名著『Clean Code』の第8章「境界」に関して自分用にまとめました。コードの具体例は差し替えたり、追加したりしています。本書にはさらに詳細なベストプラクティスが含まれていますので、興味がある方はぜひお読みください。

 イントロダクション
この記事では、外部のコードと自分のコードを綺麗に接続するための方法について詳しく見ていきます。多くのプロジェクトでは、サードパーティのライブラリやフレームワークを利用することが一般的です。これらの外部依存を適切に扱うことは、システムの安定性や保守性を高めるために重要です。

 サードパー...]]></description><link>https://zenn.dev/currypun/articles/e8997d38d09a6b</link><guid isPermaLink="true">https://zenn.dev/currypun/articles/e8997d38d09a6b</guid><pubDate>Mon, 15 Jul 2024 12:51:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S61EnR-S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2590%25E5%25A2%2583%25E7%2595%258C%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2582%258B%25E3%2581%258A%25E3%2583%25BC%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYWFiNjI2ODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へるおーじ</dc:creator></item><item><title><![CDATA[Javaで学ぶOOP基礎(クラス,継承,ポリモーフィズム,カプセル化)]]></title><description><![CDATA[
 オブジェクト指向プログラミング（OOP）を理解する
~前書き~
前書き: 私のOOP学習きっかけ
去年私はJavaを少ししか触らずして、kotlinでの開発がはじまりました。
しかし、理解しようとしてもJavaが、OOPが、わかんないからなのか?理解できないと
感じることが多かったです。
そこでやったのが、Javaに戻ってJavaでOOPを改めて学ぶ！
そしてそれはKotlinではどう変化した?KotlinのこれはJavaの何に当たるのか?
というふうに学ぶに変更しました。
(人によってはルート違うかも？いろんな方法がありそう!)
ということでアウトプットとして、OOPについて学んで...]]></description><link>https://zenn.dev/airiswim/articles/195c4bb80b4e2f</link><guid isPermaLink="true">https://zenn.dev/airiswim/articles/195c4bb80b4e2f</guid><pubDate>Mon, 15 Jul 2024 08:39:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1fY5b5Eq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6OOP%25E5%259F%25BA%25E7%25A4%258E%2528%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%252C%25E7%25B6%2599%25E6%2589%25BF%252C%25E3%2583%259D%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25BA%25E3%2583%25A0%252C%25E3%2582%25AB%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25AB%25E5%258C%2596%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Airichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0NGFlNmMyNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Airichan</dc:creator></item><item><title><![CDATA[【Java】クラス解説39・匿名クラス]]></title><description><![CDATA[
 匿名クラス
匿名クラスとはクラス名の定義を行わず、インスタンスの生成を持って匿名クラスを定義するものです。
また、匿名クラスは一度しか使えませんが、新しいクラスを作成する手間を省き、コードを簡潔に保つのに役立ちます。
下記では、同じ結果となるコードを、内部クラス・ローカルクラス・匿名クラスの各々を使って記述しますので、比較して理解を深めていきたいと思います。


 内部クラスのコード例
public class Main {
    public static void main(String[] args) {
        // 外部クラスのインスタンスを生成
        ...]]></description><link>https://zenn.dev/goriki/articles/077-anonymous-class</link><guid isPermaLink="true">https://zenn.dev/goriki/articles/077-anonymous-class</guid><pubDate>Mon, 15 Jul 2024 03:03:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dMYz4NzU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E8%25A7%25A3%25E8%25AA%25AC39%25E3%2583%25BB%25E5%258C%25BF%25E5%2590%258D%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%2597%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhZTBkYWY1NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>藤</dc:creator></item><item><title><![CDATA[ExpoでLocalBuildしたらThe supplied javaHome seems to be i...って怒られた時の対処法]]></title><description><![CDATA[The supplied javaHome seems to be invalid. I cannot find the java executable. Tried location: C:\Program Files\Eclipse Foundation\jdk-16.0.2.7-hotspot\bin\
って怒られました。
環境変数やファイルを探してもそんなパスが設定されているものは見つからず、Gradleは一体どこを見に行ってるんだろう状態でお手上げでした。

 解決方法
何故か、C:\Program Files\Eclipse Foundation\jdk-16.0.2.7-h...]]></description><link>https://zenn.dev/natsune/articles/bc7c31f9f01871</link><guid isPermaLink="true">https://zenn.dev/natsune/articles/bc7c31f9f01871</guid><pubDate>Sun, 14 Jul 2024 14:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JECznexR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Expo%25E3%2581%25A7LocalBuild%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589The%2520supplied%2520javaHome%2520seems%2520to%2520be%2520i...%25E3%2581%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%25A4%25E3%2581%25AD%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MDBkZjI5MmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なつねこ</dc:creator></item><item><title><![CDATA[【Spring Data MongoDB】Updateアノテーションを用いて複数ドキュメントを更新]]></title><description><![CDATA[
 概要
Spring Data MongoDBでドキュメントのupdateを行う際は、SpringBoot + MongoDB を使ってREST APIを作ってみようの記事にある通り、repository経由で一度findでオブジェクトを取得した後にsaveするという実装が多いかなと思います。
単一ドキュメントならこの実装で良いのですが、複数ドキュメントに対して一律更新をかけたい場合はどうするのかというののメモ書きです。

 前提

使用したSpring Data MongoDBのバージョンは4.3.0です。
今回はJavaでの実装を前提としています。（Kotlinでもほぼ同様の実装で...]]></description><link>https://zenn.dev/someone7140/articles/7a319e3dc8b6a9</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/7a319e3dc8b6a9</guid><pubDate>Sun, 14 Jul 2024 12:22:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wz_sBbWo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Data%2520MongoDB%25E3%2580%2591Update%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[備忘録：JavaFX+GuiceでFXMLコントローラークラスにインジェクションする方法]]></title><description><![CDATA[JavaFX+Guice で FXML コントローラークラスにインジェクションする方法の備忘録。

 1. 動作環境

macOS 14.5
Java 21.0.3
JavaFX 21.0.3
Guice 7.0.0


 2. 概要
FXMLLoader クラスに Guice の Injector を使ったコントローラーファクトリーを指定してロードする。

 3. サンプル
ボタンを押したらリストに日時を追加する。




ファイル名
概要




App.java
JavaFX メインクラス


JavaFXGuiceMain.fxml
FXML ファイル


JavaFXGuice...]]></description><link>https://zenn.dev/iwazou/articles/javafx-guice-0bc74f540ece9b</link><guid isPermaLink="true">https://zenn.dev/iwazou/articles/javafx-guice-0bc74f540ece9b</guid><pubDate>Sun, 14 Jul 2024 08:47:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GjSZHUfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%259AJavaFX%252BGuice%25E3%2581%25A7FXML%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258F%25E3%2581%259E%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUlKUmg4NHc5a2k5Y3p0YmtZN0dqd2hwd1V3Yk1vbTFFYUJkaTBsNC1hPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いわぞう</dc:creator></item><item><title><![CDATA[クリーンコード【エラー処理編】]]></title><description><![CDATA[
 はじめに
本記事では、Robert C. Martinの名著『Clean Code』の第７章「エラー処理」に関して自分用にまとめました。具体的なコード例は差し替えたり、追加したりしています。本書にはさらに詳細なベストプラクティスが含まれていますので、興味がある方はぜひお読みください。

 イントロダクション
エラー処理はとても重要ですが、本来のロジックが不明瞭になることは避けねばなりません。以下では、エラー処理をうまく扱うための具体的な方法を見ていきます。

 リターンコードではなく、例外を使用する
以下のコードは、戻り値でエラーコードを用いた例です。
public class En...]]></description><link>https://zenn.dev/currypun/articles/1961a45a683f6f</link><guid isPermaLink="true">https://zenn.dev/currypun/articles/1961a45a683f6f</guid><pubDate>Sun, 14 Jul 2024 02:59:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YFGNrLTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2590%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%2587%25A6%25E7%2590%2586%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2582%258B%25E3%2581%258A%25E3%2583%25BC%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYWFiNjI2ODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へるおーじ</dc:creator></item><item><title><![CDATA[Semantic Kernel の Java SDK を試す]]></title><description><![CDATA[前回の記事でも記載しましたが、Semantic Kernel は Microsoft が提供する OpenAI/Azure OpenAI/Hugging Face 等の LLM を統合する SDK となります。.NET/Python/Java で提供されているものの、Java 側のノウハウ公開が少ないなと思ったので今回はこちらを記載したいと思います。また、ご存じでない方もいらっしゃると思いますが、実は Java 版の Semantic Kernel は既に GA（一般リリース）されています。
https://devblogs.microsoft.com/semantic-kernel/a...]]></description><link>https://zenn.dev/microsoft/articles/semantickernel-java-01</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/semantickernel-java-01</guid><pubDate>Sat, 13 Jul 2024 22:51:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5uZRav1S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520%25E3%2581%25AE%2520Java%2520SDK%2520%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Daichi%2520Isami%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGF2NkRDRXVKdXRUN2VRRmI0ZDdKcmJycURONXBQNmdxNVI1NGdkZFhoY0o2Mj1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daichi Isami</dc:creator></item><item><title><![CDATA[JavaのRecord型とMyBatisマッピングの親和性について、思い知らされた話。]]></title><description><![CDATA[最近JavaでWEBアプリ開発をしているのですが、MyBatisのマッピングで若干時間を取られてしまったので、記事に残しておきます。
公式ドキュメント読みつつマッピングの仕組みを理解していれば、こんなことにはならなかったはず。いつものように反省。

 事の発端
途中からデータの持ち方をrecordからclassに変更したら、データが取れなくなった・・・

 原因
キャメルケース／スネークケースの命名規則の自動認識について、理解が甘かった。

 結論
record：設定ファイルに追加の構成は不要
class：設定ファイルでmapUnderscoreToCamelCase=trueにする必要...]]></description><link>https://zenn.dev/miki54592116150/articles/5963a3ecad6cc0</link><guid isPermaLink="true">https://zenn.dev/miki54592116150/articles/5963a3ecad6cc0</guid><pubDate>Sat, 13 Jul 2024 08:57:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fnkKwMnp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AERecord%25E5%259E%258B%25E3%2581%25A8MyBatis%25E3%2583%259E%25E3%2583%2583%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E8%25A6%25AA%25E5%2592%258C%25E6%2580%25A7%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E6%2580%259D%25E3%2581%2584%25E7%259F%25A5%25E3%2582%2589%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMWFjNzFlYjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miki</dc:creator></item><item><title><![CDATA[クリーンコード【オブジェクトとデータ構造編】]]></title><description><![CDATA[
 はじめに
本記事では、Robert C. Martinの名著『Clean Code』の第６章「オブジェクトとデータ構造」に関して、自分用にまとめました。具体的なコード例は差し替えたり追加しています。この章では、オブジェクト指向と手続き型プログラミングの違い、データ抽象化、デメテルの法則などについて議論されています。興味がある方はぜひ本書をお読みください。

 変数をprivateにする理由
変数をprivateにすることで、実装を隠蔽し、他のクラスからの依存を避け、実装を自由に変更できるようになります。しかし、多くのプログラマは反射的にゲッタとセッタを用意し、実質的に変数をpubli...]]></description><link>https://zenn.dev/currypun/articles/e1608e40edbed2</link><guid isPermaLink="true">https://zenn.dev/currypun/articles/e1608e40edbed2</guid><pubDate>Sat, 13 Jul 2024 03:13:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_bKACts7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2590%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25A8%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2582%258B%25E3%2581%258A%25E3%2583%25BC%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYWFiNjI2ODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へるおーじ</dc:creator></item><item><title><![CDATA[クリーンコード【関数編】]]></title><description><![CDATA[
 はじめに
本記事では、Robert C. Martinの名著『Clean Code』の第３章「関数」に関して、自分用にまとめました。コード例は差し替えたり追加したりしています。本書の第３章にはさらに詳細な関数に関するベストプラクティスが含まれていますので、興味がある方はぜひお読みください。

 イントロダクション
関数はあらゆるプログラムの最も基本的な構成要素であり、その設計やリファクタリングの方法を理解することは、クリーンコードを書くための重要なステップです。この記事では、具体的な例を用いて、関数の設計やリファクタリングの方法について詳しく解説します。

 例
以下の関数を見てくだ...]]></description><link>https://zenn.dev/currypun/articles/bba59b817a3703</link><guid isPermaLink="true">https://zenn.dev/currypun/articles/bba59b817a3703</guid><pubDate>Sat, 13 Jul 2024 02:42:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pXxhGhQJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2590%25E9%2596%25A2%25E6%2595%25B0%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2582%258B%25E3%2581%258A%25E3%2583%25BC%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYWFiNjI2ODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へるおーじ</dc:creator></item><item><title><![CDATA[クリーンコード【命名編】]]></title><description><![CDATA[
 はじめに
本記事では、Robert C. Martinの名著『Clean Code』の第２章「意味のある名前」に関して、自分用にまとめました。コードは追加したり差し替えたりしています。本書の第2章には詳細な命名に関するベストプラクティスが含まれていますので、興味がある方はぜひお読みください。

 イントロダクション
命名は、変数、関数、引数、クラス、パッケージ、ファイル、ディレクトリなど、あらゆるものに対して繰り返し行う最も重要な作業の一つです。ここでは、命名に関するルールを見ていきます。

 コードの意図を明確にする
以下のような関数を見てみましょう。
public static ...]]></description><link>https://zenn.dev/currypun/articles/bf81c23161a378</link><guid isPermaLink="true">https://zenn.dev/currypun/articles/bf81c23161a378</guid><pubDate>Sat, 13 Jul 2024 02:18:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PeRQJEjx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2590%25E5%2591%25BD%25E5%2590%258D%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2582%258B%25E3%2581%258A%25E3%2583%25BC%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYWFiNjI2ODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へるおーじ</dc:creator></item><item><title><![CDATA[Java ストリームAPI]]></title><description><![CDATA[
 概要
「Java SE 11 Programmer II (1Z0-816-JPN) 試験」の出題範囲「Java ストリームAPI」の自己学習メモになります

 ストリームAPI
ストリームAPIは、コレクション、配列、I/Oリソースなどのデー タ提供元となるデータソースをもとに、集計操作を行うAPIです。ストリームは、ある処理結果を次の処理のデータソース(入力)として渡すことができます。そのため、データソースをもとに様々な処 理を通じてデータを加工することができます。
List&lt;String&gt; list = Arrays.asList("bb", "aa", "cc")...]]></description><link>https://zenn.dev/greenwakame/articles/8344356e6a57ae</link><guid isPermaLink="true">https://zenn.dev/greenwakame/articles/8344356e6a57ae</guid><pubDate>Mon, 08 Jul 2024 13:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m2UDPuTq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A0API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:greenwakame%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pmWkJvR1pwQS1NblhzT0d3UTdRRHhPcTd3QkpIQkFuRnVjcUZnMUh3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>greenwakame</dc:creator></item></channel></rss>