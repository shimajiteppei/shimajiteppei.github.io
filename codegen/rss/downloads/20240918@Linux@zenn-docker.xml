<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 18 Sep 2024 10:30:09 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Dockerのバージョンアップに伴って発生したエラーをMacOSのアップデートで解消した話]]></title><description><![CDATA[
 概要

docker engineをv4.32.0より上に上げると、dbコンテナup時にエラーが発生していた
エラー内容は assertion failed [result.value != EEXIST]: VmTracker attempted to allocate existing mapping というもの
MacOSのバージョンを13.6.6から14.7に上げることで解消した


 環境

m2 Mac
MacOS 13.6.6
docker engine v4.32.0（rosseta2使用）


 対象読者

同環境で assertion failed [result...]]></description><link>https://zenn.dev/hrmtnmch/articles/06b7bd48be5a29</link><guid isPermaLink="true">https://zenn.dev/hrmtnmch/articles/06b7bd48be5a29</guid><pubDate>Wed, 18 Sep 2024 01:17:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6VXx9Pet--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AB%25E4%25BC%25B4%25E3%2581%25A3%25E3%2581%25A6%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592MacOS%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hrmtnmch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWxqbnl2TmluLW94b2QwbEplbURfNlJ5M2tHWGFrdFZwNkREWm5YMWkxOUVYazhDWT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hrmtnmch</dc:creator></item><item><title><![CDATA[[Docker] Datadog Agent コンテナによるログ収集の仕組み]]></title><description><![CDATA[
 まえがき
Datadog Agent コンテナのログ収集の仕組みについて解説する。

 ログ収集の仕組み
Dockerコンテナのログは、ホストの /var/lib/docker/containers に保存される。
Datadog Agentコンテナは、ホストの /var/lib/docker/containers をコンテナ上にマウントし、そこからログを読み取る。
より具体的な例を見てみる。
以下は、Datadog Agentコンテナを走らせるdocker run
docker run -d --name datadog-agent \
           --cgroupns ...]]></description><link>https://zenn.dev/taromn/articles/e844e867729191</link><guid isPermaLink="true">https://zenn.dev/taromn/articles/e844e867729191</guid><pubDate>Tue, 17 Sep 2024 18:48:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9WhhV-QG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BDocker%255D%2520Datadog%2520Agent%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%25AD%25E3%2582%25B0%25E5%258F%258E%25E9%259B%2586%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taromn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1YWYzNzNkODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taromn</dc:creator></item><item><title><![CDATA[Dockerfile docker-compose.yml]]></title><description><![CDATA[
 はじめに
このページではDockerfileとdocker-compose.ymlについて記述します。

 Dockerfileとは
Dockerfileは、単一のDockerコンテナイメージを構築するための一連の命令を記述するテキストファイルです。これにより、アプリケーションの実行環境を一貫して定義し、簡単に再現可能な形で環境を共有できます。

 Dockerfileの基本構成と各コマンドの詳細

 1. FROM コマンド
FROMはDockerfileの最初に記述されるコマンドで、ベースイメージを指定します。このイメージを元に新しいDockerイメージが構築されます。すべてのD...]]></description><link>https://zenn.dev/skrikzts/articles/88ff3b8e37b907</link><guid isPermaLink="true">https://zenn.dev/skrikzts/articles/88ff3b8e37b907</guid><pubDate>Tue, 17 Sep 2024 13:12:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r52YgI4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Dockerfile%2520docker-compose.yml%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skrikzts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2OTdkMjhmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skrikzts</dc:creator></item><item><title><![CDATA[【Rails】primary_key(主キー)をランダムな文字列にする]]></title><description><![CDATA[
 はじめに
お疲れ様です。
おおくまです。
今回は、「【Rails】primary_key(主キー)をランダムな文字列にする」ということで、Ruby on Railsにおいて、primary_keyをランダムな文字列にする方法についてまとめてみました。
少しでも皆様の参考になりますと幸いです。

 対象読者
!


Ruby on Railsを学習中の方

primary_keyをランダムな文字列にする方法について知りたい方



 注意点
!

内容に誤りがある場合があります。
コメント等で教えていただけると幸甚です。



 環境
!

Docker Desktop：4.34.2
...]]></description><link>https://zenn.dev/linkedge/articles/616c3884527769</link><guid isPermaLink="true">https://zenn.dev/linkedge/articles/616c3884527769</guid><pubDate>Tue, 17 Sep 2024 09:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vqs5Xn8T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rails%25E3%2580%2591primary_key%2528%25E4%25B8%25BB%25E3%2582%25AD%25E3%2583%25BC%2529%25E3%2582%2592%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25AA%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:RyoyaOkuma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZmQ2YjJiMTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzhIN0k1TWtwTzN0SFJZOWQzRzVSdTVyVlpRVmI1MG5IWG1HWTdwdk5ublk4PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>RyoyaOkuma</dc:creator></item><item><title><![CDATA[Apple SiliconとDockerの互換性(platform)]]></title><description><![CDATA[
 はじめに
このページではApple SiliconのチップでDockerを利用する際に--platformオプションを使用する必要がある場合について記述します。

 Apple SiliconとDockerの互換性について
Apple Silicon（M1、M2など）のMacでは、CPUアーキテクチャが従来のIntelベースのx86_64からARM64ベースに変更されました。このため、Dockerコンテナを実行する際に、使用するベースイメージやビルド設定によっては、互換性の問題が発生する場合があります。

 1. --platformオプションの概要
--platformオプションは...]]></description><link>https://zenn.dev/skrikzts/articles/8b3d2355214194</link><guid isPermaLink="true">https://zenn.dev/skrikzts/articles/8b3d2355214194</guid><pubDate>Tue, 17 Sep 2024 07:33:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LMb0tAoz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apple%2520Silicon%25E3%2581%25A8Docker%25E3%2581%25AE%25E4%25BA%2592%25E6%258F%259B%25E6%2580%25A7%2528platform%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skrikzts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2OTdkMjhmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skrikzts</dc:creator></item><item><title><![CDATA[dbt Core × BigQuery で Dev Container の環境構築]]></title><description><![CDATA[!

 学べること

dbt Core × BigQuery で Dev Container の環境構築
構成要素

SQLFluff
BigQuery Runner
dbt power user



下記の Dev Container 版構築
https://zenn.dev/yuichi_dev/articles/ba5c376c955e52


 はじめに

ローカルで、dbt coreを開発するためには環境構築の手間がかかるため、Dev Containerを作成しました。とはいえ、IDEをVS Codeに強制してしまうため、Dockerファイルだけでも良かったかもです。
業務委...]]></description><link>https://zenn.dev/yuichi_dev/articles/914e34816a549e</link><guid isPermaLink="true">https://zenn.dev/yuichi_dev/articles/914e34816a549e</guid><pubDate>Tue, 17 Sep 2024 06:12:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NsjgB5FU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dbt%2520Core%2520%25C3%2597%2520BigQuery%2520%25E3%2581%25A7%2520Dev%2520Container%2520%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmI0ZGExMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuichi</dc:creator></item><item><title><![CDATA[Linux ディストリビューション]]></title><description><![CDATA[
 はじめに
このページでは、Dockerイメージとしてよく使われるLinuxディストリビューションについて記述します。

 Linux ディストリビューションとは
Linuxディストリビューション（ディストロ）は、Linuxカーネルをベースにして、追加のソフトウェアやツールを組み合わせて構成されたオペレーティングシステムです。Linuxディストリビューションには、用途やユーザーのニーズに合わせて異なる構成が提供されています。以下では、Linuxディストリビューションの基本的な要素について解説します。

 1. Linuxカーネル
Linuxカーネルは、Linuxオペレーティングシステム...]]></description><link>https://zenn.dev/skrikzts/articles/9cb502a06f73e2</link><guid isPermaLink="true">https://zenn.dev/skrikzts/articles/9cb502a06f73e2</guid><pubDate>Tue, 17 Sep 2024 05:59:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DMKHfaEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%2520%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skrikzts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2OTdkMjhmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skrikzts</dc:creator></item><item><title><![CDATA[公式サンプルを公式Dockerイメージに入れる（SQL Server編）]]></title><description><![CDATA[
 はじめに
サンプルデータベースが欲しくなったのですが、最近は見かけないような気がします。
昔々は、scott/tiger でつないで EMP テーブルで練習するのがお約束でしたが…。
調べてみることにしました。
最初は、サンプルデータベースの場所だけの備忘録にしようと思ったのですが、ちょっとデータベースを使ったデモとかテストが必要になったので、サンプルデータベース入りの Docker イメージを作って、イメージを作る材料もイメージも公開しようと思います。

 SQL Server 編
MySQL には似たような記事がいくつかあります（苦笑）。
これまでの PostgreSQL、MyS...]]></description><link>https://zenn.dev/robon/articles/d3430c4f72421e</link><guid isPermaLink="true">https://zenn.dev/robon/articles/d3430c4f72421e</guid><pubDate>Tue, 17 Sep 2024 01:13:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ouLLqzSc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25AC%25E5%25BC%258F%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%2592%25E5%2585%25AC%25E5%25BC%258FDocker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25EF%25BC%2588SQL%2520Server%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>荒木 岳夫</dc:creator></item><item><title><![CDATA[本当にあった怖い話: Dockerイメージにはバージョンタグをつけろ!]]></title><description><![CDATA[こんにちは、ハコベル開発チームの坂東です。今日は、実際に私たちのチームで起きたちょっとした“怖い話”を共有しようと思います。

 開発は順調に進んでいたはずだった…
私たちのチームでは、これまでプロダクトをローカル環境で動かす際、ファイルアップロード系の処理では開発用のAWS環境に直接アップロードするようにしていました。
しかし、複数のAWS環境を跨ぐような開発をする時にやりづらいので、効率化のためにローカル環境でAWSをエミュレートできるLocalStackを導入することにしました。LocalStackは、他のチームでも導入実績があったので、安心して導入に踏み切りました。
一人のメンバ...]]></description><link>https://zenn.dev/hacobell_dev/articles/0b352b29a96ab5</link><guid isPermaLink="true">https://zenn.dev/hacobell_dev/articles/0b352b29a96ab5</guid><pubDate>Tue, 17 Sep 2024 01:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eqWBHGHP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%25AB%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E6%2580%2596%25E3%2581%2584%25E8%25A9%25B1%253A%2520Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2581%25AF%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258D%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Ricky%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYjhhODE4MTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Hacobell%2520Developers%2520...%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxNmZhMjA2NzcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ricky</dc:creator></item><item><title><![CDATA[Docker ComposeをWeb UIで管理する［Dockge］]]></title><description><![CDATA[
 はじめに
今回は、複数のDocker Composeを簡単に管理できるツール、Dockgeを紹介します。
現代のソフトウェア開発では、コンテナ技術を使ったアプリケーションのデプロイと管理が一般的です。しかし、複数のアプリケーションを自宅などでセルフホストする場合、Docker Composeの管理が煩雑になることも少なくありません。そこで登場するのがDockgeです。Dockgeは、Docker Composeの管理をGUI上で直感的に行える便利なツールです。

 Dockgeとは
Dockgeは、セルフホスト型のDocker Compose管理ツールです。Web UIからDocke...]]></description><link>https://zenn.dev/rmuraix/articles/22c256b41754be</link><guid isPermaLink="true">https://zenn.dev/rmuraix/articles/22c256b41754be</guid><pubDate>Tue, 17 Sep 2024 00:19:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IFxdJUMU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Compose%25E3%2582%2592Web%2520UI%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25EF%25BC%25BBDockge%25EF%25BC%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rmu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBvaW5Bc2hkeEM0eTFTdTZ3a25NcnNSZVBEcXEydXdad254ajIybE1TUTZLSj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rmu</dc:creator></item><item><title><![CDATA[Windows PC上でDocker Desktopを利用してLinuxの開発環境を構築するまでの仕組み]]></title><description><![CDATA[Windows PC上でDocker Desktopを利用してLinuxの開発環境を構築する場合、ホスト型仮想化（仮想マシン）とコンテナ型仮想化（コンテナ）の両方が組み合わさって動作します。それぞれの役割と技術的背景を説明します。

 1. Docker Desktopの仕組み
Docker Desktopは、Windows上でコンテナを利用するためのツールですが、WindowsとLinuxでは動作するOSカーネルが異なります。DockerコンテナはLinuxカーネルの機能に依存しているため、Windows上でそのまま動作させることはできません。このため、Docker Desktopは内...]]></description><link>https://zenn.dev/skrikzts/articles/55f7744ee82aa9</link><guid isPermaLink="true">https://zenn.dev/skrikzts/articles/55f7744ee82aa9</guid><pubDate>Mon, 16 Sep 2024 09:30:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m15ySu00--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520PC%25E4%25B8%258A%25E3%2581%25A7Docker%2520Desktop%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Linux%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skrikzts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2OTdkMjhmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skrikzts</dc:creator></item><item><title><![CDATA[docker runで-itオプションをつけてもコンテナが終了する理由]]></title><description><![CDATA[
 はじめに
Dockerコンテナ内でコマンドを打ちたい時は、コンテナを立ち上げるときのdocker container run（docker run）コマンドに-itオプションをつけると思います。
ではこの-itとは何をしているのか？
そして-itをつけてもコンテナが終了してしまい、コンテナに接続できないことがあるのはなぜ？
というのが気になったので、ChatGPTに聞いてみました。
この記事はChatGPTの解答をまとめ、それにいくつか補足をしたものになります。
少しでも理解の助けになれば幸いです。
!
筆者はDocker初心者のため、内容に間違いがある可能性があります。
そのため書...]]></description><link>https://zenn.dev/nanasi_1/articles/31bd0243c0c02e</link><guid isPermaLink="true">https://zenn.dev/nanasi_1/articles/31bd0243c0c02e</guid><pubDate>Mon, 16 Sep 2024 09:10:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G1jwWTaI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520run%25E3%2581%25A7-it%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2582%2582%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%258C%25E7%25B5%2582%25E4%25BA%2586%25E3%2581%2599%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nanasi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MDFiNWU4NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nanasi</dc:creator></item><item><title><![CDATA[[Tips] Fast Map Matching の Docker環境]]></title><description><![CDATA[
 Map Matching とは
西田さんの記事を読んでください。
https://zenn.dev/r_nsd/articles/2938c356eba355

 Map Matching の Docker環境
以下のDockerfileでビルドして使っています。Python 2系じゃなくて、Python 3系を使うようにしていました。あとは/homeにあるディレクトリとかにデータを置いたり、ホストのディレクトリをマウントするなりして使います。numpyが'&lt;2'がいいかどうかは実装するもの（他のもの）に依存するかもしれません。
gdalの扱いが結構めんどくさく、まだベストプラ...]]></description><link>https://zenn.dev/takilog/articles/35d52fde4dd8f0</link><guid isPermaLink="true">https://zenn.dev/takilog/articles/35d52fde4dd8f0</guid><pubDate>Mon, 16 Sep 2024 06:51:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nTL8CF89--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTips%255D%2520Fast%2520Map%2520Matching%2520%25E3%2581%25AE%2520Docker%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たきろぐ</dc:creator></item><item><title><![CDATA[Dockerfileについてやる]]></title><description><![CDATA[
 .dockerignoreファイル
Dockerfileをおいたディレクトリ内のファイルで、Dockerデーモンに送りたくないファイルを指定します。ワイルドカードが使えます。

 基本構文について
基本書式
# コメント
&lt;命令&gt; &lt;引数&gt;
一文が長くなるとエスケープ文字()を使える
RUN apt-get update &amp;&amp; apt-get install -y \
httpd \
nginx

 形式
・shell形式
→シェル(bash)を通してコマンドが実行されるので、環境変数が使える
&lt;命令&gt; &lt;引数&gt;
・ex...]]></description><link>https://zenn.dev/shobute/articles/6f53cc8b7f32d5</link><guid isPermaLink="true">https://zenn.dev/shobute/articles/6f53cc8b7f32d5</guid><pubDate>Mon, 16 Sep 2024 04:16:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uMhMVHtU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dockerfile%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E8%25B2%25A0%25E6%2589%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzI3YTVkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>勝負手</dc:creator></item><item><title><![CDATA[Podman Desktop（Windows）のコンテナを docker コマンドで操作する]]></title><description><![CDATA[Docker Desktop の代替として Podman Desktop を利用する際、docker コマンドではなく podman コマンドを使ってコンテナ等を操作しなければなりません。
しかし、コンテナを扱うガイドは docker コマンドを前提としたものがほとんどで、docker コマンドを都度 podman コマンドに読み替える必要があるのは少し面倒です。
本記事では Podman Desktop を docker コマンドで操作できるようにする方法を紹介します。

 docker cli のインストール
最新の docker cli を以下のページからダウンロードします。
※ ...]]></description><link>https://zenn.dev/negokaz/articles/8e0e3cadd20246</link><guid isPermaLink="true">https://zenn.dev/negokaz/articles/8e0e3cadd20246</guid><pubDate>Mon, 16 Sep 2024 01:17:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gBn2INu1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Podman%2520Desktop%25EF%25BC%2588Windows%25EF%25BC%2589%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%2520docker%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:negokaz%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNzU1MzkxMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>negokaz</dc:creator></item><item><title><![CDATA[【簡単3分】Rails ConsoleでRedisにセッションデータを確認する具体例を紹介‼️🍜]]></title><description><![CDATA[
 はじめに
こんにちは、Takeです。都内の自社開発企業でエンジニアとして働いています。
こちらの記事では、動作確認の目的でRails Consoleを使用してRedisにセッションを保存し、そのデータを取得して確認する一連の流れを紹介します。

 そもそもRedisとは何ぞや？という方向け👇
最低2分半でキャッチアップできる動画を厳選していますので、よろしければご覧ください。
https://zenn.dev/take_tech/articles/40fc1c8c11899d

 結論
[1] pry(main)&gt; redis = Redis.new(url: ENV['RED...]]></description><link>https://zenn.dev/take_tech/articles/d1de725fd9d482</link><guid isPermaLink="true">https://zenn.dev/take_tech/articles/d1de725fd9d482</guid><pubDate>Sun, 15 Sep 2024 19:57:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zwNLjs-C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25B0%25A1%25E5%258D%25983%25E5%2588%2586%25E3%2580%2591Rails%2520Console%25E3%2581%25A7Redis%25E3%2581%25AB%25E3%2582%25BB%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E5%2585%25B7%25E4%25BD%2593%25E4%25BE%258B%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Take%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNThiNDQ2YTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Take</dc:creator></item><item><title><![CDATA[RustのDockerイメージビルドを高速にする]]></title><description><![CDATA[
 要約
以下を参考にしましょう。
https://docs.docker.com/guides/language/rust/develop/

 はじめに
Rustは素晴らしい言語ですが、弱点もあります。その弱点の一つが、コンパイル時間が長いことです。
特にDockerイメージのビルドにおいては、キャッシュをうまく使わないと、依存関係を含めて毎回すべてをビルドすることになり、とても遅くなってしまいます。例えばCI上でビルドすることを考えると、コードを変更する度にCIが通るまで長い時間がかかってしまうのは、試行錯誤の効率を下げることになってしまい困りますね。
本稿ではDockerイメージ...]]></description><link>https://zenn.dev/htlsne/articles/rust-build-image-faster</link><guid isPermaLink="true">https://zenn.dev/htlsne/articles/rust-build-image-faster</guid><pubDate>Sun, 15 Sep 2024 12:52:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f7Xkr5x2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AEDocker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiterm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiZGY0NzgyMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiterm</dc:creator></item><item><title><![CDATA[Next.js × Nest.jsの環境をDockerで作成する]]></title><description><![CDATA[
 はじめに
フロントエンドをNext.js、バックエンドをNest.jsで作成し、Dockerで環境構築します。

node 20.9.0

next.js 14.2.11

nest.js 10.0.0



 プロジェクトを作成
任意の開発ディレクトリでプロジェクト用のディレクトリを作成します。
mkdir next-nest-dev
cd next-next-dev

 フロント側をNext.jsで作成
Next.jsのフロント環境をcreate-next-appを使って作ります。
npx create-next-app front
対話形式で選択できる初期設定は好みですが、今回...]]></description><link>https://zenn.dev/deguchihi/articles/406610ceb2fb1f</link><guid isPermaLink="true">https://zenn.dev/deguchihi/articles/406610ceb2fb1f</guid><pubDate>Sun, 15 Sep 2024 09:47:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NqhPQ9OV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25C3%2597%2520Nest.js%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Deguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZmZiODljNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Deguchi</dc:creator></item><item><title><![CDATA[API GatewayとLambdaでReactをホスティングする]]></title><description><![CDATA[
 はじめに
AWSでReactデプロイしろって言われたらどうします？
AWSでこういったSPAをデプロイしようとすると大体S3とCloudfrontに行き着くかと思います。
今回はReactとおまけにフロントエンドからリクエストするAPIも合わせてAPI GatewayとLambdaにぶち込もうと思います。
柔軟なインフラ構成ではないので小ネタです。本番環境には適していないのであしからず。
また、今回使用するサンプルはGithubに置いてありますので、よかったら実際にデプロイしてみてください。
https://github.com/Tomoaki-Moriya/lambda-react...]]></description><link>https://zenn.dev/t_o_m_o/articles/6c71e03def4346</link><guid isPermaLink="true">https://zenn.dev/t_o_m_o/articles/6c71e03def4346</guid><pubDate>Sun, 15 Sep 2024 08:08:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O6GwnfNG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%2520Gateway%25E3%2581%25A8Lambda%25E3%2581%25A7React%25E3%2582%2592%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDBiNzc5MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomo</dc:creator></item><item><title><![CDATA[docker 利用時の Cannot connect to the Docker daemon at  エラーの解消]]></title><description><![CDATA[docker compose up
で docker を立ち上げようとしたところ、次のようなのエラーに遭遇しました。
Cannot connect to the Docker daemon at unix:ディレクトリ名/docker.sock. Is the docker daemon running? 
原因は、シンプルに dockerが立ち上がっていなかっただけでしたので、デスクトップアプリを立ち上げたら解消しました。
]]></description><link>https://zenn.dev/surume3/articles/69b3f3eeadeae8</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/69b3f3eeadeae8</guid><pubDate>Sat, 14 Sep 2024 13:05:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gYh0fRtk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520%25E5%2588%25A9%25E7%2594%25A8%25E6%2599%2582%25E3%2581%25AE%2520Cannot%2520connect%2520to%2520the%2520Docker%2520daemon%2520at%2520%2520%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B6%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Syumai3</dc:creator></item></channel></rss>