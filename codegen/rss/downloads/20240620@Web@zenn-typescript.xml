<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 20 Jun 2024 09:15:01 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Next.js App RouterとSupabaseで遊んでみた]]></title><description><![CDATA[
 できたもの
成果物はこちらです。
https://github.com/dmorita00/nextjs-supabase-auth
Next.jsとsupabaseでfrontend-bff-dbのどシンプルな構成にしました。

 こだわり
どシンプルですが雑すぎるのは誰の役にも立たないので、Server Actionsを簡易版ですが全てのフォームに使用しています。
（業務ではreact-hook-formやconform、zodなど使ってしっかり安全性を上げていきましょう）
あとは、サーバーサイドでSupabaseのパスワードリセットのリダイレクションを実装しているんですが、あま...]]></description><link>https://zenn.dev/dmorita00/articles/0dbc5ca555d28a</link><guid isPermaLink="true">https://zenn.dev/dmorita00/articles/0dbc5ca555d28a</guid><pubDate>Thu, 20 Jun 2024 07:21:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QZWsy6ty--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520Router%25E3%2581%25A8Supabase%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dmrt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pCVi1tSGFvdElhRkJJNTBQOEEzV2tNTV92V1EzSWJYUV9RRkxzanc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dmrt</dc:creator></item><item><title><![CDATA[腹をくくってUnifiedのプラグインを書くときの備忘録]]></title><description><![CDATA[unifiedは巨大なmarkdownとHTMLの相互変換エコシステムです。
今回は自作の構文をmarkdownに対応させるべくパーサの自作をしていきます。

 今回作るもの
マークダウンにハッシュタグを認識させる
# header1
paragraph
#tag &lt;--- これ！

 参考文献

https://zenn.dev/januswel/articles/44801708e8c7fdd358e6#parser-プラグイン
https://www.zenryoku-kun.com/post/unified
https://qiita.com/masato_makino/i...]]></description><link>https://zenn.dev/cou_kamiya/articles/624723c1d7887f</link><guid isPermaLink="true">https://zenn.dev/cou_kamiya/articles/624723c1d7887f</guid><pubDate>Thu, 20 Jun 2024 06:48:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_-pjzC0p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2585%25B9%25E3%2582%2592%25E3%2581%258F%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6Unified%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2586%25EF%25BC%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NGIzNWU1YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こう？</dc:creator></item><item><title><![CDATA[AppRouter移行におけるuseRouterのハマりポイント]]></title><description><![CDATA[こんにちは。株式会社 Sally エンジニアの @piesukeです。
私たちは、マーダーミステリーを遊べることが出来るアプリ「ウズ」と、マーダーミステリーを制作してウズ上で遊べることが出来るアプリ「ウズスタジオ」を開発しています。
最近良かったマーダーミステリーは「あなたの原罪」です。
私たちは運営する Web サイトにおいて Next.js を採用しています。今までは PageRouter を使用していましたが、様々な事情により最近 AppRouter に移行することになりました。その際、useRouter の仕様変更が地味に辛く、破壊的変更を行った Next.js への怒りがふつふ...]]></description><link>https://zenn.dev/uzu_tech/articles/app-router-use-router</link><guid isPermaLink="true">https://zenn.dev/uzu_tech/articles/app-router-use-router</guid><pubDate>Thu, 20 Jun 2024 03:54:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ccsamwWd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppRouter%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BuseRouter%25E3%2581%25AE%25E3%2583%258F%25E3%2583%259E%25E3%2582%258A%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:piesuke%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NjI5NGIwZmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UZU%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjNDgyMGY2MzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>piesuke</dc:creator></item><item><title><![CDATA[<T, K extends keyof T> をちゃんと理解する]]></title><description><![CDATA[
 TL;DR
TypeScriptでライブラリなどを覗いているとよく見かける&lt;T, K extends keyof T&gt;について、問題を分解してきちんと理解する試みです。

 extends
この場合のextendsの役割は継承ではなく、制約です。
例えば以下のようなイメージ。
type StringOrNumber&lt;T extends string | number&gt; = T
type A = StringOrNumber&lt;string&gt;
type B = StringOrNumber&lt;number&gt; 

// Type 'boolea...]]></description><link>https://zenn.dev/bs_kansai/articles/da0547f3128308</link><guid isPermaLink="true">https://zenn.dev/bs_kansai/articles/da0547f3128308</guid><pubDate>Thu, 20 Jun 2024 03:06:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aXJLuNxr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%253CT%252C%2520K%2520extends%2520keyof%2520T%253E%2520%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMDEzZTI2ODYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kobe.ts%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQ5MmViYmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[Limo：using構文を用いたファイル読み書きライブラリ]]></title><description><![CDATA[
 はじめに
こんにちは！
今回は、自作のライブラリ「Limo」を紹介します！
このライブラリは、テキスト、JSON、JSONC、TOML、YAMLなどのファイル形式を手軽に読み書きできる小さなツールです。
ファイルの読み書きをusing構文を使って簡単に行えるのが特徴です。
以下はREADMEを翻訳したものをベースにしています。
https://jsr.io/@ryoppippi/limo
https://github.com/ryoppippi/limo

 「Limo」って何？
こんな特徴があります！


簡単なファイル読み書き：わずかなコードでファイルの読み書きを実現

変更の自...]]></description><link>https://zenn.dev/ryoppippi/articles/639ea2cce644ec</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/639ea2cce644ec</guid><pubDate>Wed, 19 Jun 2024 13:52:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pgmkTuZS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Limo%25EF%25BC%259Ausing%25E6%25A7%258B%25E6%2596%2587%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25AA%25AD%25E3%2581%25BF%25E6%259B%25B8%25E3%2581%258D%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[buttonとaタグの両方に対応するonClickイベント]]></title><description><![CDATA[
 はじめに
Reactでボタンやリンクのクリックイベントを処理する際、buttonタグとaタグではイベントの型が異なるため、同じonClickハンドラを使用することが難しくなります。この問題を解決し、両方のタグに対応する汎用的なonClickハンドラを実装する方法について解説します。

 問題
通常、buttonタグとaタグの両方に対応するコンポーネントを作成する際、onClickイベントの型の違いにより、型エラーが発生します。HTMLButtonElementとHTMLAnchorElementのイベント型が異なるため、同じonClickハンドラを共有することが困難です。
const...]]></description><link>https://zenn.dev/mczk9402/articles/e5165e34dff974</link><guid isPermaLink="true">https://zenn.dev/mczk9402/articles/e5165e34dff974</guid><pubDate>Wed, 19 Jun 2024 10:49:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dBGfrKvI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:button%25E3%2581%25A8a%25E3%2582%25BF%25E3%2582%25B0%25E3%2581%25AE%25E4%25B8%25A1%25E6%2596%25B9%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258BonClick%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%259B%25E6%259C%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pTSTRNTHZhWEhoU2tlYnpXUm12bG9JaUpBREtBOXE5MVViWEtiPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>望月</dc:creator></item><item><title><![CDATA[JSON.parseはなぜanyを返すのか]]></title><description><![CDATA[
 はじめに
TypeScriptを始めた頃からanyは悪だと教わってきましたが、それなのになぜanyを返すんだ！？
なぜJSON.parseがanyを返すのか気になったので、原因を調べたり推測しました。

 anyを使うのは本当に適切？
なぜanyを返すかを調査する前に、TypeScriptのanyとunknownについておさらいしましょう。


any
どのような値でも代入を許す型、コンパイラーが型チェックを行わない型
私は後者の意味が重要だと考えています。


unknown
TypeScript 3.0から導入された対象の値の型が何かわからないときに使用する型
unknownの値...]]></description><link>https://zenn.dev/pipipipipi/articles/2e4bf64d3f9c8f</link><guid isPermaLink="true">https://zenn.dev/pipipipipi/articles/2e4bf64d3f9c8f</guid><pubDate>Wed, 19 Jun 2024 00:07:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VEq2q60T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSON.parse%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%259Cany%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:popp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjFBVFVfNExibktPbVJpWks1MlJMWERjZ25McDRMNHNfNUJNTHdRLWQxUVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>popp</dc:creator></item><item><title><![CDATA[rechartsのCustomActiveShapePieChartをTypeScriptで攻略する]]></title><description><![CDATA[記事作成時の recharts のバージョン: 2.12.7

 はじめに
前回の記事recharts の円グラフ入門（TypeScript）では、recharts の円グラフの基本的な使い方を紹介しました。
今回のテーマとなるCustomActiveShapePieChartは、rechats の公式サイトの samples の中でも発展的な内容になっており、また、TypeScript への変換も少しコツが必要です。
ということで、早速本題です。

 CustomActiveShapePieChart

ドーナツ型の円グラフです。とてもおしゃれですね。
ドーナツの穴の部分にデータのラベ...]]></description><link>https://zenn.dev/ksk_17090k1/articles/d6a5f457dc0d7d</link><guid isPermaLink="true">https://zenn.dev/ksk_17090k1/articles/d6a5f457dc0d7d</guid><pubDate>Tue, 18 Jun 2024 14:42:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y5YVl8Gx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:recharts%25E3%2581%25AECustomActiveShapePieChart%25E3%2582%2592TypeScript%25E3%2581%25A7%25E6%2594%25BB%25E7%2595%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksk_17090k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGhlS0k3RVlTOUFGUXYyaFJPM21vOUFJXzZsWHY4WmVCbWc5TmxkajQ5bUlLUEROYXY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksk_17090k1</dc:creator></item><item><title><![CDATA[Canvasグラフィックアニメーションの学び方＆楽しみ方]]></title><description><![CDATA[
 はじめに
最近表現の幅を広げたいと思いまして、CSSや2Dや3Dアニメーションを誠意勉強しはじめました。そして2Dアニメーションの看板であるCanvasを今更ながら学びまして、そして見事Canvasの表現の世界にどハマりしたという話でございます。
本記事では、Canvasをどう学んだか、どのような表現ができるのか、学んでみてわかった面白さなどをお伝えしてきます。
また、Canvasアニメーションを利用したちょっとしたポケモン題材のアプリを作ってみたので、そのアプリを中心にどんな表現ができるのかもお伝えできたらなと思います。
Canvasをこれから学んでみようか迷っている方。
もうめち...]]></description><link>https://zenn.dev/moepyxxx/articles/0fc56049c0bb98</link><guid isPermaLink="true">https://zenn.dev/moepyxxx/articles/0fc56049c0bb98</guid><pubDate>Tue, 18 Jun 2024 12:38:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f4yU-oVE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Canvas%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%25AD%25A6%25E3%2581%25B3%25E6%2596%25B9%25EF%25BC%2586%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%25BF%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:moepyxxx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0MzA5NDk2MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>moepyxxx</dc:creator></item><item><title><![CDATA[TypeScriptのextendsを使いこなす：型引数の制約とクラスの継承]]></title><description><![CDATA[TypeScriptのextendsは、2つの異なる場面で使用されます。同じキーワードですが、用途が異なるため紛らわしいと感じるかもしれません。今回は、その使い方についてまとめます。
extendsは以下の2つの場面で使われます。

型引数
クラスの継承


 型引数に制約を設定するパターン
このパターンでは、型引数に制約を設定する際にextendsを使用します。
まず、型引数とは何かを説明します。型を定義する際に、型を引数として渡して使うことができます。動物を例にとって、以下のように型定義を行います。
// 鳥には足と羽がある
type Bird = {
    leg:number;...]]></description><link>https://zenn.dev/aono/articles/edb0c42893569f</link><guid isPermaLink="true">https://zenn.dev/aono/articles/edb0c42893569f</guid><pubDate>Tue, 18 Jun 2024 10:19:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TN91J93v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AEextends%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2599%25EF%25BC%259A%25E5%259E%258B%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E5%2588%25B6%25E7%25B4%2584%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E7%25B6%2599%25E6%2589%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aono%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmZTVjNjE3ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aono</dc:creator></item><item><title><![CDATA[【禁欲タイマー】世界忍耐時計-PatienceDay Clock-]]></title><description><![CDATA[
 はじめに
健康や自己実現のために禁欲や我慢を続けることは容易ではないし、継続しないと成果が目に見ないのでモチベーションが続かない。
ならばその成果を目に見えるようにしてしまえばいいと考えて、
世界禁欲時計-PatienceDay Clock- を作りました。
まあ大げさなことを言いましたが、いわゆる禁欲タイマー的なものです。
巷にこの手のサイトはあふれていると思うので、自分なりの工夫を加えました(それでも差別化が図れているかどうかはわかりませんが…)。
あとサブタイトルの英文法が怪しいのは、世界禁欲時計のDoomsday Clockにあやかって名付けたからです。
動画

 使い方

...]]></description><link>https://zenn.dev/syab_syab/articles/c39194e9c797ca</link><guid isPermaLink="true">https://zenn.dev/syab_syab/articles/c39194e9c797ca</guid><pubDate>Tue, 18 Jun 2024 09:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BEWZbauy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25A6%2581%25E6%25AC%25B2%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2580%2591%25E4%25B8%2596%25E7%2595%258C%25E5%25BF%258D%25E8%2580%2590%25E6%2599%2582%25E8%25A8%2588-PatienceDay%2520Clock-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%25E3%2581%2597%25E3%2582%2583%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlVLdDBZeHh0TzVNRVdqV3lrQlQtM0l0UWZPZ1JlaE1EbERNR0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しゃぶしゃぶ</dc:creator></item><item><title><![CDATA[React19のuseActionsStateをTypeScriptで書く]]></title><description><![CDATA[
 注意！！
2024/06/18現在、まだRC版なので使い方が変わる可能性があることを留意してください。

 公式サンプル（JavaScript版）
元記事
https://react.dev/blog/2024/04/25/react-19
// Using &lt;form&gt; Actions and useActionState
function ChangeName({ name, setName }) {
  const [error, submitAction, isPending] = useActionState(
    async (previousState,...]]></description><link>https://zenn.dev/daijinload/articles/7fbe73e040c0a2</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/7fbe73e040c0a2</guid><pubDate>Tue, 18 Jun 2024 04:39:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AvakqBdM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25AEuseActionsState%25E3%2582%2592TypeScript%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item><item><title><![CDATA[Next Auth（v4）を導入しようとしているあなたに届けたい仕様と使い所]]></title><description><![CDATA[NextAuthについて色々検証する機会があったので備忘録としてここに残します。
NextAuthの導入を考えている方に少しでも参考になれば嬉しいです！
NextAuthはとても便利ですが、表面的に使うと仕様が暗黙的で戸惑う部分が多かったので仕様を探り解説していきます！

 概要

そもそもNextAuthとは何かについて軽くおさらいしましょう。

 NextAuthの概要
NextAuthは、Next.jsアプリケーションのためのオープンソースの認証ライブラリです。
Next.jsアプリケーションに簡単に認証機能を追加するためのライブラリであり、対応プロバイダーはOAuth (Goog...]]></description><link>https://zenn.dev/bosushi/articles/cff6ac4071f6c6</link><guid isPermaLink="true">https://zenn.dev/bosushi/articles/cff6ac4071f6c6</guid><pubDate>Mon, 17 Jun 2024 07:33:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1gR55yl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next%2520Auth%25EF%25BC%2588v4%25EF%25BC%2589%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AB%25E5%25B1%258A%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%25E4%25BB%2595%25E6%25A7%2598%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2589%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BC%25E5%25AF%25BF%25E5%258F%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHdDlwT2JkbDlIcktHWmI0Wlc5V09FS3N1RnVYR3pmQ2dJcUJKYlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぼ寿司</dc:creator></item><item><title><![CDATA[TypeScriptの型定義をざっくり理解する]]></title><description><![CDATA[
 はじめに
TypeScript にはさまざまな型定義があります。
私は業務で TypeScript を使う中で、コンパイルエラーに度々苦労しています。
苦手意識を払拭するため、名著のブルーベリー本で型定義について学習しました。
非常にわかりやすい本でおすすめです。
今回は TypeScript の型定義がざっくり理解できるように紹介していきます。
※サンプルコードは自作しています

 変数の型
変数の型定義は、特定の値の種類を表します。この例では、Name 型が文字列型 (string) を示しています。

 構文
type 型名 = 型;

 例
type Name = strin...]]></description><link>https://zenn.dev/irsc/articles/105b554659ce41</link><guid isPermaLink="true">https://zenn.dev/irsc/articles/105b554659ce41</guid><pubDate>Mon, 17 Jun 2024 03:59:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y_bWBfox--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KH%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYzg5ZmZiMGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEInner%2520Resource%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjZDVjYWJhMmUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KH</dc:creator></item><item><title><![CDATA[satisfies で exhaustiveness check]]></title><description><![CDATA[
 TL;DR
type A = "a" | "b" | "c";

function exhaustive(v: A) {
  switch (v) {
    case "a":
      return "A";
    case "b":
      return "B";
    case "c":
      return "C";
    default:
      return v satisfies never; // check exhaustiveness
  }
}

 はじめに
TypeScriptにsatisfies文が追加されて久しいですね。
satisf...]]></description><link>https://zenn.dev/ryoppippi/articles/ac1c2b46dcc0ed</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/ac1c2b46dcc0ed</guid><pubDate>Sun, 16 Jun 2024 17:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WgQe9P6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:satisfies%2520%25E3%2581%25A7%2520exhaustiveness%2520check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[Tauriで型安全なクライアントを生成する]]></title><description><![CDATA[
 A
tauri-spectaを使う
https://github.com/oscartbeaumont/tauri-specta/blob/main/docs/v1.md
※Tauri v1での使い方を書きますが、v2でも問題なくできると思います。

 使い方(既存のtauriプロジェクトに追加)

 1. tauri-spectaの追加
cargo add specta@1
cargo add tauri-specta@1 --features javascript,typescript

 2. #[specta::specta]を適応する
#[tauri::command]
+...]]></description><link>https://zenn.dev/cou_kamiya/articles/4c21204fe97452</link><guid isPermaLink="true">https://zenn.dev/cou_kamiya/articles/4c21204fe97452</guid><pubDate>Sun, 16 Jun 2024 16:13:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B5TWRrxB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2586%25EF%25BC%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NGIzNWU1YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こう？</dc:creator></item><item><title><![CDATA[TypeScriptの基本概念だけを学習してみた]]></title><description><![CDATA[
 はじめに
TypeScript は JavaScript に型システムを追加した言語で、静的型付けや強力なツールサポートを提供します。この記事では、TypeScript の基本的な概念について学び、そのメリットを探ります。

 型システム
TypeScript の型システムは、コンパイル時にエラーを検出し、コードの品質を向上させます。

 型アノテーション
let message: string = "Hello, TypeScript";
console.log(message);
このコードでは、message 変数に対して string 型を指定しています。

 型システムのメ...]]></description><link>https://zenn.dev/tonbi_attack/articles/485d6ec1b07992</link><guid isPermaLink="true">https://zenn.dev/tonbi_attack/articles/485d6ec1b07992</guid><pubDate>Sun, 16 Jun 2024 13:12:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7sm0ahGP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2592%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGQ4MThjYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tonbiattack</dc:creator></item><item><title><![CDATA[typescript の基本的な Utility type についてまとめてみる]]></title><description><![CDATA[
 Partial と Required
プロパティを 任意にしたり、必須にしたりする型。Partial  (部分的)と Required(必須) という意味
type User = {
id: number;
name: string;
age: number;
};

type PartialUser =  Partial&lt;User&gt;
// 型は以下のようになる
type PartialUser = {
    id?: number | undefined;
    name?: string | undefined;
    age?: number | undefi...]]></description><link>https://zenn.dev/surume3/articles/2d34b576a1bfae</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/2d34b576a1bfae</guid><pubDate>Sun, 16 Jun 2024 10:31:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DGphc7-u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:typescript%2520%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%2520Utility%2520type%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[【Next.js×Firebase】Authenticationで爆速Googleログイン実装]]></title><description><![CDATA[
 はじめに
前回はfirebaseのサービスfirestoreを使ってDB構築を行いました。今回は同じくfirebaseのサービスのAuthenticationを使ってGoogleログインを導入します。

 Firebaseセットアップ
前回の記事で紹介したので省略します。

 Authenticationセットアップ
Authenticationを選択＞始める

プロバイダーを選択（今回はGoogleを選択）

有効にする＞メールアドレス入力＞保存

以上で完了です。簡単...

 Firebase＋Authentication初期化処理
Next.jsの記述に移ります。
confi...]]></description><link>https://zenn.dev/kiwichan101kg/articles/b38dd43d04622e</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/b38dd43d04622e</guid><pubDate>Sun, 16 Jun 2024 10:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CjnldEfl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25C3%2597Firebase%25E3%2580%2591Authentication%25E3%2581%25A7%25E7%2588%2586%25E9%2580%259FGoogle%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[type と interface の違いがよくわからない]]></title><description><![CDATA[タイトルの通り、違いがよくわからなかったので調べました。
結論、どちらもできることはほとんど同じで、使うシーンや拡張の方法や少し異なるだけでした。

 基本的な使い方
// 基本的な型エイリアス
type ID = number | string;

// オブジェクト型のエイリアス
type User = {
name: string;
age: number;
};

// 関数型のエイリアス
type Greet = (name: string) =&gt; string;

// オブジェクトのインターフェース
interface User {
name: string;
age...]]></description><link>https://zenn.dev/surume3/articles/33cfb159119a84</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/33cfb159119a84</guid><pubDate>Sun, 16 Jun 2024 09:34:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fO4pi6oX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type%2520%25E3%2581%25A8%2520interface%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item></channel></rss>