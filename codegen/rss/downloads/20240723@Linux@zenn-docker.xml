<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 23 Jul 2024 07:07:04 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その6）]]></title><description><![CDATA[
 概要
【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その5）の続編です。
現在、削除以外の実装が完了してる状態です。今回はdeleteアクションを実装して、完了とします。

 バージョン情報
その1から同じなので、割愛

 PostController::deleteを実装

 コントローラ側

 app/UseCases/Post/DeleteAction.phpを編集

app/UseCases/Post/DeleteAction.php
&lt;?php

namespace App\UseCases\Post;

use A...]]></description><link>https://zenn.dev/dragonarrow/articles/4b583956df18d8</link><guid isPermaLink="true">https://zenn.dev/dragonarrow/articles/4b583956df18d8</guid><pubDate>Tue, 23 Jul 2024 03:44:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0VOQ9vn7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel10%25E3%2580%2591%2520Inertia%2520%252B%2520React%2520%25E3%2581%25A7%25E3%2580%258C%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25BB%25E5%25A4%2589%25E6%259B%25B4%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2583%25BB%25E9%2596%25B2%25E8%25A6%25A7%25E3%2580%258D%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE6%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:napojin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbFhOc2dJVFkzb0FRVnF3X2JlZXBxVDNIWE1VWWxJSy1qQjVvblg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>napojin</dc:creator></item><item><title><![CDATA[【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その5）]]></title><description><![CDATA[
 概要
【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その4）の続編です。
現在、index,new,store,showアクションの実装が完了してる状態です。今回はedit,updateアクションを実装します。

 バージョン情報
その1から同じなので、割愛

 PostController::editを実装

 コントローラ側

 app/Http/Controllers/PostController.phpを編集

PostController.php
&lt;?php

namespace App\Http\Controlle...]]></description><link>https://zenn.dev/dragonarrow/articles/3bad998c69b4f7</link><guid isPermaLink="true">https://zenn.dev/dragonarrow/articles/3bad998c69b4f7</guid><pubDate>Tue, 23 Jul 2024 03:43:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yq1xE8_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel10%25E3%2580%2591%2520Inertia%2520%252B%2520React%2520%25E3%2581%25A7%25E3%2580%258C%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25BB%25E5%25A4%2589%25E6%259B%25B4%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2583%25BB%25E9%2596%25B2%25E8%25A6%25A7%25E3%2580%258D%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE5%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:napojin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbFhOc2dJVFkzb0FRVnF3X2JlZXBxVDNIWE1VWWxJSy1qQjVvblg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>napojin</dc:creator></item><item><title><![CDATA[【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その4）]]></title><description><![CDATA[
 概要
【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その3）の続編です。
現在、indexとnew,storeアクションの実装が完了してる状態です。今回はcreateアクションを実装します。

 バージョン情報
その1と同じなので、割愛

 PostController::showを実装

 コントローラ側

 app/Http/Requests/Post/FindRequest.phpを作成
php artisan make:request Post/FindRequest

app/Http/Requests/Post/Find...]]></description><link>https://zenn.dev/dragonarrow/articles/7e6ce4bc7e042e</link><guid isPermaLink="true">https://zenn.dev/dragonarrow/articles/7e6ce4bc7e042e</guid><pubDate>Tue, 23 Jul 2024 03:43:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fbkk5cuI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel10%25E3%2580%2591%2520Inertia%2520%252B%2520React%2520%25E3%2581%25A7%25E3%2580%258C%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25BB%25E5%25A4%2589%25E6%259B%25B4%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2583%25BB%25E9%2596%25B2%25E8%25A6%25A7%25E3%2580%258D%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE4%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:napojin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbFhOc2dJVFkzb0FRVnF3X2JlZXBxVDNIWE1VWWxJSy1qQjVvblg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>napojin</dc:creator></item><item><title><![CDATA[【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その3）]]></title><description><![CDATA[
 概要
【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その2）の続編です。
現在、indexとnewアクションの実装が完了してる状態です。今回はcreateアクションを実装します。

 バージョン情報
その2から同じなので、割愛

 PostController::storeを実装

 コントローラ側

 app/Http/Requests/Post/StoreRequest.phpを作成

下記コマンドでRequestファイルを生成。

php artisan make:request Post/StoreRequest
以下のよう...]]></description><link>https://zenn.dev/dragonarrow/articles/657f40a5aca153</link><guid isPermaLink="true">https://zenn.dev/dragonarrow/articles/657f40a5aca153</guid><pubDate>Tue, 23 Jul 2024 03:42:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KEo1QDmr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel10%25E3%2580%2591%2520Inertia%2520%252B%2520React%2520%25E3%2581%25A7%25E3%2580%258C%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25BB%25E5%25A4%2589%25E6%259B%25B4%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2583%25BB%25E9%2596%25B2%25E8%25A6%25A7%25E3%2580%258D%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:napojin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbFhOc2dJVFkzb0FRVnF3X2JlZXBxVDNIWE1VWWxJSy1qQjVvblg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>napojin</dc:creator></item><item><title><![CDATA[【Laravel10】 Inertia + React で「追加・変更・削除・閲覧」機能をつくる（その1）]]></title><description><![CDATA[
 概要
以前、Inertiaを使ったLaravel 10 + Reactのベストチュートリアルで、Laravel 10を用いて、Inertia + Reactの動作環境とログイン機能をつくってみましたが、今回もその流れで基本的な「追加・変更・削除・閲覧」部分（いわゆる CRUD）をつくってみることにしました。
CRUDを理解すれば、よくある基本的な機能の開発は問題なく行うことができるようになるので、教材として最適です。

 バージョン情報

Laravel 10.0.0
手元の作業PC: Apple M1 Pro
Docker: 20.10.21

イメージ: php:8.1-apac...]]></description><link>https://zenn.dev/dragonarrow/articles/7cd8915a68f57b</link><guid isPermaLink="true">https://zenn.dev/dragonarrow/articles/7cd8915a68f57b</guid><pubDate>Tue, 23 Jul 2024 03:41:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VdfoJbJV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel10%25E3%2580%2591%2520Inertia%2520%252B%2520React%2520%25E3%2581%25A7%25E3%2580%258C%25E8%25BF%25BD%25E5%258A%25A0%25E3%2583%25BB%25E5%25A4%2589%25E6%259B%25B4%25E3%2583%25BB%25E5%2589%258A%25E9%2599%25A4%25E3%2583%25BB%25E9%2596%25B2%25E8%25A6%25A7%25E3%2580%258D%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:napojin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbFhOc2dJVFkzb0FRVnF3X2JlZXBxVDNIWE1VWWxJSy1qQjVvblg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>napojin</dc:creator></item><item><title><![CDATA[ローカルの PostgreSQL コンテナでスロークエリを発見する方法]]></title><description><![CDATA[こんにちは。わいけいです。
今回はローカル環境で DB に対して発行されているスロークエリを発見する手順について書いていきたいと思います。
アプリケーションが育ってくると、サーバーのパフォーマンスのボトルネックになりやすいのが DB です。
クラウドが浸透した現在では、アプリケーションサーバーの方はお金さえ払えば比較的自由に（水平・垂直に）スケーリングできます。
これに対して、RDB の方は相対的にスケーリングが難しい傾向にあります。（クラウドのパワーによって金でゴリ押し可能な面が増えてきてはいますが）
そういった背景から、極力非効率な SQL は投げたくないものです。
とはいえ、現実的...]]></description><link>https://zenn.dev/spiralai/articles/65db8a78ea31d4</link><guid isPermaLink="true">https://zenn.dev/spiralai/articles/65db8a78ea31d4</guid><pubDate>Tue, 23 Jul 2024 02:41:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--enpA76vL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%2520PostgreSQL%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%2592%25E7%2599%25BA%25E8%25A6%258B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%258F%25E3%2581%2584%25E3%2581%2591%25E3%2581%2584%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNDE5NGY4ZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SpiralAI%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwZDg4ZGFlNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わいけい</dc:creator></item><item><title><![CDATA[BazelからCloud Native BuildpacksへDockerイメージのビルドを移行した話]]></title><description><![CDATA[
 現在のリポジトリの構成
こんにちは、バックエンドエンジニアのSです。
弊社ではGoで実装されたアプリケーションのDockerイメージをBazelにてビルドしていましたが、この度、Cloud Native Buildpacksへ移行しました。その経緯と移行に辺り工夫した点をご紹介いたします。

 Bazelの概要
弊社ではrules_dockerを使用することにより、Dockerイメージをアプリケーションのエンドポイント毎にビルドしていました。Bazelのビルド設定となるBUILD.bazelファイルに関してはGazelleにより、自動生成します。エンドポイント毎に複数のDockerf...]]></description><link>https://zenn.dev/sprocket/articles/cbcbb5ffd3c6a0</link><guid isPermaLink="true">https://zenn.dev/sprocket/articles/cbcbb5ffd3c6a0</guid><pubDate>Tue, 23 Jul 2024 00:22:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XwboJtB_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bazel%25E3%2581%258B%25E3%2582%2589Cloud%2520Native%2520Buildpacks%25E3%2581%25B8Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2582%2592%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Sprocket%2520Zenn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1ZWQxMjFmN2UuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sprocket%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyY2UxY2ZlNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sprocket Zenn</dc:creator></item><item><title><![CDATA[最強Wordpress環境 (Docker, PHP8, Gulp, apache, MariaDB, SCSS)]]></title><description><![CDATA[
 開発環境（使用ツールやスキル）
このプロジェクトは、WordPressのカスタムテーマとプラグインを開発するための環境を構築するものです。主に以下のツールとスキルを使用します。

Docker
Docker Compose
Node.js
Gulp
BrowserSync
WordPress
PHP
MySQL (MariaDB)
SCSS
TypeScript
Rollup


 開発環境構築の目的
開発環境を統一し、異なる環境での動作を保証するためにDockerを利用して一貫性のある環境を提供します。これにより、開発チーム内での環境差異による問題を最小限に抑えます。

 1. な...]]></description><link>https://zenn.dev/maki_1003/articles/f1035a817d7a22</link><guid isPermaLink="true">https://zenn.dev/maki_1003/articles/f1035a817d7a22</guid><pubDate>Mon, 22 Jul 2024 16:38:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b1mRW1vz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E5%25BC%25B7Wordpress%25E7%2592%25B0%25E5%25A2%2583%2520%2528Docker%252C%2520PHP8%252C%2520Gulp%252C%2520apache%252C%2520MariaDB%252C%2520SCSS%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhNjNlNzM3ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item><item><title><![CDATA[Electronの開発用Dockerコンテナ作成]]></title><description><![CDATA[
 環境
OS: Ubuntu 22.04.4 LTS
コンテナベースイメージ： Ubuntu:22.04
Docker: 27.0.3
docker-compose: v2.10.0
GPU:
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 545.29.06              Driver Version: 545.29.06    CUDA Version: 12.3     |
|------------------...]]></description><link>https://zenn.dev/masakitanaka/articles/c926e2bcf3c037</link><guid isPermaLink="true">https://zenn.dev/masakitanaka/articles/c926e2bcf3c037</guid><pubDate>Mon, 22 Jul 2024 11:15:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fxBAX4pj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Electron%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2594%25A8Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0OWYyOGMyMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mt</dc:creator></item><item><title><![CDATA[Dockerで動くNestJSのbuildをSWCを使って速くする]]></title><description><![CDATA[
 概要

DockerでNestJSを動かしています。ホットリロードが重いので、SWCを導入してbuildを速くしたいと思います。


 設定内容

基本的にNestJS公式(下記参考に記載)と同じやり方です。

SWCのインストールは公式を参照してください。


各種ファイル設定は以下です。


 package.json
"scripts": {
    "build": "npx swc src -d dist",
    "start:dev": "nest start -b swc -w",
}


 nest-cli.json
{
  "$schema": "https:/...]]></description><link>https://zenn.dev/emily_mz/articles/42115ccf9235b3</link><guid isPermaLink="true">https://zenn.dev/emily_mz/articles/42115ccf9235b3</guid><pubDate>Mon, 22 Jul 2024 02:34:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--puBgBb3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258FNestJS%25E3%2581%25AEbuild%25E3%2582%2592SWC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2580%259F%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%2588%25E3%2582%258B%25E3%2581%25BA%25E3%2582%2593%25E3%2581%258E%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMzY0OTg2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるえるぺんぎん</dc:creator></item><item><title><![CDATA[Docker触ってみた]]></title><description><![CDATA[https://qiita.com/etaroid/items/b1024c7d200a75b992fc
この記事良さそうなのでこの記事を元に学習していきたいと思います。

 Dockerとは？
コンテナ型仮想化技術
仮想化？
PCやサーバといったマシンにインストールされているOS(ホストOS)の上に、別のマシンを仮想的に立ち上げる事
簡単に言うと「パソコンの中に仮想パソコンを起動する」のが仮想化です。
コンテナ型仮想化。
従来のホスト型仮想化とは異なり、ゲストOSを起動せずにホストOSの上に動作しているDockerエンジンからコンデナと呼ばれるミドルウェアの環境を構築された実行環境を作...]]></description><link>https://zenn.dev/yukiyuki1126/articles/04a15bd6fa3c5d</link><guid isPermaLink="true">https://zenn.dev/yukiyuki1126/articles/04a15bd6fa3c5d</guid><pubDate>Sun, 21 Jul 2024 12:12:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iKm2oL7---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukiyuki1126%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeFhfcjVVM3JqUjJ0WHRwTndZM20wM2J0ejdCSXc0dGcxMUFOcXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yukiyuki1126</dc:creator></item><item><title><![CDATA[docker composeの`version` is obsolete]]></title><description><![CDATA[
 まとめ

docker composeのversionがv2.25.0以降から出始めた様子

https://github.com/docker/compose/issues/11628


docker composeのversionの確認の仕方

docker compose version



obsolete ってなに

「廃れた」とか「陳腐化した」とか、もう使われなくなったような意
ひとえに「廃止」とだけ認識しないほうがよさそう
https://eow.alc.co.jp/search?q=obsolete
発音記号は「ɑ̀bsəlíːt」


元々19.03.0から不...]]></description><link>https://zenn.dev/jksan/articles/docker_compose-version_is_obsolate</link><guid isPermaLink="true">https://zenn.dev/jksan/articles/docker_compose-version_is_obsolate</guid><pubDate>Sun, 21 Jul 2024 01:58:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hfkMljwd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520compose%25E3%2581%25AE%2560version%2560%2520is%2520obsolete%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jksan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd0xVQWlydjJhMzlyQVNFN1AzaXdydlB1aG9SSXA2a3Njem1xUVA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jksan</dc:creator></item><item><title><![CDATA[QNAPのNASでPDFビューワ(Komga)を動かす]]></title><description><![CDATA[
 概要
QNAPのNASを買ったんですが、どうやらDockerが動くらしい。
AppleのBooks的な、オンプレで建てられるいい感じのPDFビューワをChatGPTに聞いたらKomgaというのを教えてくれました。

最終的にはこんな感じ。Webアプリケーションなのでスマホからでも見れる。
参考
https://komga.org/


 実行環境



NAS種別
使用アプリケーション




QNAP TS-133

Container Station



いっちゃん安いエントリーモデルのやつ。
Container Stationが動く新しめのQNAP製品なら同じように動くと思う...]]></description><link>https://zenn.dev/sum3sh1/articles/2e905fa139d37b</link><guid isPermaLink="true">https://zenn.dev/sum3sh1/articles/2e905fa139d37b</guid><pubDate>Sat, 20 Jul 2024 13:37:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y1JMejoF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:QNAP%25E3%2581%25AENAS%25E3%2581%25A7PDF%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AF%2528Komga%2529%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumeshi_kun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwM2EzNzkyNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumeshi_kun</dc:creator></item><item><title><![CDATA[Elasticsearch 入門(1)]]></title><description><![CDATA[
 Elasticsearch 入門(1)
Elasticsearch 8.14 を Mac 上の Docker で動かしてみます。
基本的に、Run Elasticsearch locally in Docker (without security) という手順書の通りにやってみるだけです。
なお、M2 Mac 上で MacOS (Ventura) を使っています。

 Decker Desktop の準備
https://www.docker.com/products/docker-desktop/ から Docker Desktop を導入します。（私の場合、Apple Silic...]]></description><link>https://zenn.dev/tmiya/articles/c91def9d04adca</link><guid isPermaLink="true">https://zenn.dev/tmiya/articles/c91def9d04adca</guid><pubDate>Sat, 20 Jul 2024 09:18:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FVwgbHpS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Elasticsearch%2520%25E5%2585%25A5%25E9%2596%2580%25281%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmiya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDlBbDdyckxtZUtiS1pEcEpCLVhTSkliVWt6c0ZKaXJZcnJ6QlJCYUE3MUhLS1diTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tmiya</dc:creator></item><item><title><![CDATA[ECRにgithub actionsからimageをbuild&pushする]]></title><description><![CDATA[※ 備忘録です。

 概要
github actionsのワークフローを設定します。その中でファイル生成やdocker imageのbuild、ECRへのpushを行います。

 手順

こちらを参考に行なっています。基本的にこちらの手順通りに進めるとうまく行くと思います。

(とても参考になりました！ありがとうございます！)
https://zenn.dev/kou_pg_0131/articles/gh-actions-ecr-push-image


最後のgithub actionsワークフローの中身だけ異なるので、何かの参考になればと思い記載します。


 ワークフローの中身
...]]></description><link>https://zenn.dev/emily_mz/articles/67719e398e1705</link><guid isPermaLink="true">https://zenn.dev/emily_mz/articles/67719e398e1705</guid><pubDate>Sat, 20 Jul 2024 03:29:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sW8SLtDj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECR%25E3%2581%25ABgithub%2520actions%25E3%2581%258B%25E3%2582%2589image%25E3%2582%2592build%2526push%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%2588%25E3%2582%258B%25E3%2581%25BA%25E3%2582%2593%25E3%2581%258E%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMzY0OTg2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるえるぺんぎん</dc:creator></item><item><title><![CDATA[MacでDocker x PythonのGUI開発環境をつくる]]></title><description><![CDATA[株式会社ウェイブの渡邉です！
MacでPythonのGUIアプリを作りたく環境構築を行いました。
最初はMac上のPython環境でTkinterを使おうとしたのですがうまくいかず...
Dockerで環境を構築できたので、備忘録として残しておきます。

 環境情報

OS: macOS 14.5
CPU: Apple M1 Pro
Rancher Desktop: 1.14.1
Docker: 26.1.0-rd,
Docker Compose: v2.27.1


 手順

 1. XQuartzのインストールと起動
XQuartzをインストールします。
Homebrewがあれば下記...]]></description><link>https://zenn.dev/wwwave/articles/6cdfb830820e65</link><guid isPermaLink="true">https://zenn.dev/wwwave/articles/6cdfb830820e65</guid><pubDate>Fri, 19 Jul 2024 09:25:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--___N6blA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25A7Docker%2520x%2520Python%25E3%2581%25AEGUI%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:swat%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0OTU3ZTVkYWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:wwwave%2527s%2520Techblog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNWFmZDZmODMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>swat</dc:creator></item><item><title><![CDATA[Docker + OpenCV Python の module *** has no attribute *** のエラー回避]]></title><description><![CDATA[
 概要
dockerにおける、OpenCV Python の module *** has no attribute *** のエラー回避方法を説明する。

 環境

Ubuntu 20.04.5 LTS
Docker 20.10.18


 原因とエラー回避方法
原因はpythonのopencvに関係するモジュールのバージョンに不整合が起こっているためであるため、以下のDockerfileのようにopencvに関係するモジュールのバージョンを統一すればエラーを回避できる。

Dockerfile
FROM python:3.9

ARG OPENCV_PYTHON_VERSION=4...]]></description><link>https://zenn.dev/room_208/articles/4045781ed7821e</link><guid isPermaLink="true">https://zenn.dev/room_208/articles/4045781ed7821e</guid><pubDate>Fri, 19 Jul 2024 06:54:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q-YjpP9D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520OpenCV%2520Python%2520%25E3%2581%25AE%2520module%2520%252A%252A%252A%2520has%2520no%2520attribute%2520%252A%252A%252A%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:room_208%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MmRkNTEzN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>room_208</dc:creator></item><item><title><![CDATA[DevContainerで始めるLaTeX論文予稿執筆]]></title><description><![CDATA[
 TL;DR
DevContainer内で \LaTeX の執筆環境テンプレートを作りました
https://github.com/SoRA-X7/latex-devcontainer-termpaper

 メリット

構築が楽、TeX Live をローカルにインストールしなくて済む
パッケージ追加もDockerfileを編集するだけ
LaTeX Workshopが自動でconfig込みで入るので、コンパイルを気にする必要がない


 LaTeXの実行環境
アカデミックな分野で論文を執筆する場合は、WordやPages、Google Docsよりも\LaTeXを利用することが多いです...]]></description><link>https://zenn.dev/lirais/articles/6b28a6b1c3e918</link><guid isPermaLink="true">https://zenn.dev/lirais/articles/6b28a6b1c3e918</guid><pubDate>Fri, 19 Jul 2024 05:08:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F7FVxukE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DevContainer%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BLaTeX%25E8%25AB%2596%25E6%2596%2587%25E4%25BA%2588%25E7%25A8%25BF%25E5%259F%25B7%25E7%25AD%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SoRA_X7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FLWGFMQkVjUUxfbW5kYmNrN3AxSk81UTVDdjhhVGlBZ2k1RDVjSXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SoRA_X7</dc:creator></item><item><title><![CDATA[MySQL9.0の新機能 Saving JSON output from EXPLAIN ANALYZE INTO を触ってみる]]></title><description><![CDATA[
 MySQL9.0 登場！
2024/07/01にMySQL9.0がOracleよりリリースされました。イノベーションリリースの最新版です。
https://dev.mysql.com/doc/refman/9.0/en/mysql-nutshell.html

 主な新機能

JavaScript stored programs(エンプラのみ)
VECTOR type suport
Saving JSON output from EXPLAIN ANALYZE INTO

新機能の中でも、Saving JSON output from EXPLAIN ANALYZE INTOは気軽に...]]></description><link>https://zenn.dev/gmomedia/articles/1f29fa8933d47d</link><guid isPermaLink="true">https://zenn.dev/gmomedia/articles/1f29fa8933d47d</guid><pubDate>Fri, 19 Jul 2024 02:58:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9CUi55Vs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MySQL9.0%25E3%2581%25AE%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%2520Saving%2520JSON%2520output%2520from%2520EXPLAIN%2520ANALYZE%2520INTO...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%2597%25E3%2581%258B%25E3%2581%259A%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzOGEzNzc5MTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GMO%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNzQwY2NhMDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いしかず</dc:creator></item><item><title><![CDATA[Docker + PostgreSQLで環境構築して、パーティションについて学ぶ]]></title><description><![CDATA[
 はじめに
実務でn千万からn億レコードのテーブルがあり、その過程でパーティション構成について考える機会がありました。
パーティションって単語は知っているけど、実際なんなん？というふわっとした理解だったので改めて内容をまとめてアウトプットするのが目的です。
テーブルはPostgreSQLを使用しDockerで環境構築します。

 環境構築
※Dockerは既にインストール済みのため省略します。
公式ドキュメントに従い、PostgreSQLのイメージを使用します。
postgres - Official Image | Docker Hub
公式ドキュメントから2024/07/11時点の...]]></description><link>https://zenn.dev/sui_water/articles/6bd9e98c4c82bf</link><guid isPermaLink="true">https://zenn.dev/sui_water/articles/6bd9e98c4c82bf</guid><pubDate>Thu, 18 Jul 2024 14:22:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ebLtFz4x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520PostgreSQL%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MGQ1MWNkOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スイ</dc:creator></item></channel></rss>