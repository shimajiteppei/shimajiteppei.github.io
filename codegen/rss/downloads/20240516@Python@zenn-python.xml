<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 16 May 2024 05:37:24 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Pythonの.pycファイル入門]]></title><description><![CDATA[こんにちは、fastriver(@fastriver_org)です。今回は皆さん一度は夢に見るであろう、Pythonのバイナリファイルの解析・扱い方について紹介します。

 .pycファイルとは

Pythonはインタプリタ型言語ですが、直接実行するのではなく一旦バイトコードに変換してからそれをPythonVM上で実行する、ということを行っています。PythonVMはJVMなど他の一般的なVM同様にスタックマシンであり、スタック上に値を積んだり変換したりを繰り返して計算を進めます。

便宜上バイトコードと呼んでいますが、PythonVMのバイトコードは1命令あたり2バイトの大きさです。
...]]></description><link>https://zenn.dev/fastriver/articles/python-pyc-binary</link><guid isPermaLink="true">https://zenn.dev/fastriver/articles/python-pyc-binary</guid><pubDate>Wed, 15 May 2024 14:36:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---4GTR5Qm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE.pyc%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fastriver%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3OTZiYTczZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fastriver</dc:creator></item><item><title><![CDATA[Plotlyの図が表示されない問題の解決メモ]]></title><description><![CDATA[Jupyter labの場合とvscode(Jupyter)における図が表示されない場合における私がした対処方法をメモとして残しておきます。

 Jupyter lab
インストール

conda install -c plotly plotly=5.22.0
conda install "jupyterlab&gt;=3" "ipywidgets&gt;=7.6"
conda install -c conda-forge -c plotly jupyter-dash
Jupyter labで起動していろいろコードを書いていく

JavaScript Error: Cannot read...]]></description><link>https://zenn.dev/production_765/articles/b7b3ddfe64f3c8</link><guid isPermaLink="true">https://zenn.dev/production_765/articles/b7b3ddfe64f3c8</guid><pubDate>Wed, 15 May 2024 14:19:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fr7_RGQY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Plotly%25E3%2581%25AE%25E5%259B%25B3%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:production_765%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeFJQZzRBZkpJNC1Bb2drREE5Y3Jjd0hlcGM3cjF2TlhILTJ6VUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>production_765</dc:creator></item><item><title><![CDATA[DockerでFastAPI環境構築(HelloWorldまで)]]></title><description><![CDATA[
 FastAPI環境構築

リンク
チュートリアル - ユーザーガイド - FastAPI

 使用技術

 環境

Docker
Python 3.12.3(執筆時最新)
nginx(webサーバー)


 DB

MySQL 8系
SQLModel(ORマッパー)
alembic(マイグレーション管理)


 ライブラリ管理

poetry

構成はシンプルでnginxをwebサーバーとして配置して、Uvicormをアプリケーションサーバーにします。

 ディレクトリ作成
最低限のディレクトリを作成していきます。
project_root
├── _docker
│   ├── n...]]></description><link>https://zenn.dev/momonga_g/articles/f131ea192b1184</link><guid isPermaLink="true">https://zenn.dev/momonga_g/articles/f131ea192b1184</guid><pubDate>Wed, 15 May 2024 13:53:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I3m3GWGB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7FastAPI%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528HelloWorld%25E3%2581%25BE%25E3%2581%25A7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2582%25E3%2582%2593%25E3%2581%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWRkZTc0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ももんが</dc:creator></item><item><title><![CDATA[デザインパターン備忘録(後半)]]></title><description><![CDATA[
 前回の記事から
今回は2つの記事に分けることになりました。
こちらはデザインパターン備忘録(前半)からの続きになります。

 Chain of Responsibility（責任の連鎖）パターン

 メリット

柔軟なリクエスト処理

リクエストを処理するオブジェクトを動的に変更できるため、柔軟なリクエスト処理が可能です。

コードの分離

リクエストを処理する各オブジェクトを独立して設計できるため、責任を分離できます。

可読性と保守性の向上

処理ロジックをチェーン内の各オブジェクトに分散させることで、コードの可読性と保守性が向上します。

新しい処理の追加が容易

新しい処理を...]]></description><link>https://zenn.dev/kou_kawa/articles/36-design-pattern-02</link><guid isPermaLink="true">https://zenn.dev/kou_kawa/articles/36-design-pattern-02</guid><pubDate>Wed, 15 May 2024 13:47:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MQBCehL4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2528%25E5%25BE%258C%25E5%258D%258A%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kou</dc:creator></item><item><title><![CDATA[デザインパターン備忘録(前半)]]></title><description><![CDATA[
 はじめに
ChatGPT-4oが使用できるようになりました。私も早速使ってみましたが、以前のバージョンに比べてスピードと精度の向上を実感しました。これを機に、デザインパターンについての記事を書いてみることにしました。この記事を通じて勉強にもなり、後で見返すための資料としても活用できるようにしたいと思います。サンプルコードには、Java、TypeScript、Pythonのプログラミング言語を使用しています。
今回は記事を2つに分けることになりました。
後半の記事はこちら

 デザインパターン一覧

生成に関するパターン

Abstract Factory（アブストラクトファクトリー）...]]></description><link>https://zenn.dev/kou_kawa/articles/35-design-pattern-01</link><guid isPermaLink="true">https://zenn.dev/kou_kawa/articles/35-design-pattern-01</guid><pubDate>Wed, 15 May 2024 13:47:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ihl2SnhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2528%25E5%2589%258D%25E5%258D%258A%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kou</dc:creator></item><item><title><![CDATA[SQLite互換サーバーレスDB Turso & FastAPI]]></title><description><![CDATA[
 Tursoとは？
公式ページによると，Tursoはスピードとスケーラビリティを兼ね備えたSQLite互換のデータベースです．
https://turso.tech/
あまり使ったことはないですが，Cloudflare D1に似てますね．

 料金
Tursoの大きな特徴はコストの低さです．無料プランには以下の機能が含まれています．

9 GBのストレージ基本容量、追加GBごとに$0.75
最大500データベース、最大3箇所のロケーション
月1億行の読み取り無料、超過分は10億行ごとに$1
月2500万行の書き込み無料、超過分は100万行ごとに$1
無制限の組み込みレプリカ
オーバーユ...]]></description><link>https://zenn.dev/be4rr/articles/68b12eb1ac0bf6</link><guid isPermaLink="true">https://zenn.dev/be4rr/articles/68b12eb1ac0bf6</guid><pubDate>Wed, 15 May 2024 13:33:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QUToMX5m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLite%25E4%25BA%2592%25E6%258F%259B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9DB%2520Turso%2520%2526%2520FastAPI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:be4rr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2oyM3lfcjhMZ052QjFqeHFiMjdzTDd4cEVHU2dfU2tRYl95NVVsYlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>be4rr</dc:creator></item><item><title><![CDATA[Reflexにnpmのコンポーネントを入れたい！！]]></title><description><![CDATA[
 はじめに
reflexではnpmのコンポーネントを入れることができます。
https://reflex.dev/docs/wrapping-react/overview/#wrapping-react
バグなどでインポートできないケースがありますが、ほぼすべてのライブラリをラップすることが可能です。
ただ、何をどうすればよいか初見ではわかりにくいので簡単に説明します。

 Reactを作るイメージ
Reactのソースコードを作るイメージで作成すると理解しやすいと思います。
まず、ライブラリのインストールを行い、次にファイルでライブラリをインポートし、さいごにタグを実装する流れと全く同...]]></description><link>https://zenn.dev/peter_yusuke/articles/4eac35626021a9</link><guid isPermaLink="true">https://zenn.dev/peter_yusuke/articles/4eac35626021a9</guid><pubDate>Wed, 15 May 2024 10:27:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CY0zIzra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Reflex%25E3%2581%25ABnpm%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:peter_yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1MjU4ZTY1NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>peter_yusuke</dc:creator></item><item><title><![CDATA[cloud9でpython作業していると勝手に生成される__pycache__ってなに？]]></title><description><![CDATA[
 結論
__pycache__ディレクトリは、Pythonのバイトコンパイル済みバージョンである「.pyc」ファイルが保存される場所！
これは、Pythonの実行速度を向上させるために行われる一種の最適化

 生成される理由
__pycache__ディレクトリが生成される理由はいくつかある。


実行速度の向上: Pythonは通常、スクリプトを実行する際にソースコードをコンパイルします。しかし、同じスクリプトが再度実行されるとき、毎回コンパイルする必要はありません。__pycache__に保存されたコンパイル済みのバージョンがあれば、Pythonはそのファイルを読み込んで実行速度を向...]]></description><link>https://zenn.dev/nyankonya/articles/462516d0946a3d</link><guid isPermaLink="true">https://zenn.dev/nyankonya/articles/462516d0946a3d</guid><pubDate>Wed, 15 May 2024 06:06:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DJ_PgwzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cloud9%25E3%2581%25A7python%25E4%25BD%259C%25E6%25A5%25AD%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25A8%25E5%258B%259D%25E6%2589%258B%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B__pycache__%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2582%2583%25E3%2582%2593%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1NmU0MTcwZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>にゃんこ</dc:creator></item><item><title><![CDATA[ryeでDiscord Botの開発体験を向上させる]]></title><description><![CDATA[こんにちは、@sushi-chanです。電気通信大学で学生をしています。
私はPythonでDiscordのBotを作っているのですが、パッケージマネージャーとしてはpoetryを使ってきました。
しかし、

ビルド済みDockerイメージを自動デプロイしているので、ビルド前にpoetry.lockとrequirements.txtを同期させないといけない
タスクランナーやLinter・Formatterなどインストールしないといけないツールが多い

などの理由で開発・ビルド環境のセットアップが非常に面倒だというつらさがありました。
そこで最近話題のryeに移行してみたところ、これらの点...]]></description><link>https://zenn.dev/sushichaaaan/articles/5bae57e665f0d1</link><guid isPermaLink="true">https://zenn.dev/sushichaaaan/articles/5bae57e665f0d1</guid><pubDate>Wed, 15 May 2024 05:27:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1r9h-O7_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rye%25E3%2581%25A7Discord%2520Bot%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%25E3%2582%2592%25E5%2590%2591%25E4%25B8%258A%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sushi-chaaaan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ODFhMGYyZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sushi-chaaaan</dc:creator></item><item><title><![CDATA[画像PDFをOCR→テキスト抽出からの透過テキスト埋め込み（無料で頑張るGoogle Colab✕Google Vision API編）]]></title><description><![CDATA[
 作成経緯
基本的にはスキャナ付属ソフトを使用し、書類スキャン→OCR処理→透過テキスト付きPDFファイル作成している。
しかし、スキャナ付属ソフトでは、個別に用意した画像PDFを変換することができない。
無料のWebサービスもあるけど、よくわからないWebサービスにファイルをアップロードするのはちょっと心配。
もちろんAdobe Acrobatのような有料のソフトもあるけど、お金もかけたくない💸
ということで、頑張って（ChatGPTに相談しながら）作ることにした。

 仕様
PDFファイルはいろいろな手段で準備するので、個別にアップロードできるようにする。
透過テキストを埋め込んだ...]]></description><link>https://zenn.dev/oto122333/articles/7595a6a12399ef</link><guid isPermaLink="true">https://zenn.dev/oto122333/articles/7595a6a12399ef</guid><pubDate>Tue, 14 May 2024 16:59:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--97EOrn7O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258FPDF%25E3%2582%2592OCR%25E2%2586%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E9%2580%258F%25E9%2581%258E%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%25EF%25BC%2588%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7%25E9%25A0%2591%25E5%25BC%25B5%25E3%2582%258BGoogle%2520Colab%25E2%259C%2595Google%2520V...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlN2E2YjUyMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おと</dc:creator></item><item><title><![CDATA[仮想環境の有効化(venv)/Djangoのセットアップ]]></title><description><![CDATA[Windows環境です！

 仮想環境を作成する
your_env_nameという名前の仮想環境を作成する
python -m venv your_env_name

仮想環境を作ると、パッケージを個別にインストールできる！

 仮想環境を有効化
your_env_name\Scripts\activate

 Djangoプロジェクトの作成
django-admin startproject your_project .

 データベースの作成
python manage.py migrate

 セットアップができたか確認
python manage.py runserver
以下の...]]></description><link>https://zenn.dev/yuya_t/articles/b387bdd40dcc35</link><guid isPermaLink="true">https://zenn.dev/yuya_t/articles/b387bdd40dcc35</guid><pubDate>Tue, 14 May 2024 15:20:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RnU2OC6P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%259C%2589%25E5%258A%25B9%25E5%258C%2596%2528venv%2529%252FDjango%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%2590%25E3%2582%25BC%25E3%2583%25AD%25E3%2583%2597%25E3%2583%25AD%25E3%2580%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlYjQyYTY1OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゼロから始めるプログラミング【ゼロプロ】</dc:creator></item><item><title><![CDATA[[AtCoder Daily Training HARD 2024/05/14 17:30start] 参加記録]]></title><description><![CDATA[AtCoder Daily Training HARD 2024/05/14 17:30start に参加しました。
0冠です。
ひどいもんだ。

 E - Robot Takahashi

もしくは こちら

 考え方
体重の小さい順に並べ、順にボーダーラインをチェックして、f(X) の増減を確認します。
基本的に公式解説通りです。
注意するべきは、体重が同じ場合の処理です。
体重が同じ場合、その間にボーダーを置くことができず、まとめて処理する必要があります。
if i != n - 1 and weight == sw[i + 1][0]: で体重が同じ場合を判定しています。
実装例...]]></description><link>https://zenn.dev/shizukakokoro/articles/f1c86ea37d614e</link><guid isPermaLink="true">https://zenn.dev/shizukakokoro/articles/f1c86ea37d614e</guid><pubDate>Tue, 14 May 2024 09:48:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dkVcJz3i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAtCoder%2520Daily%2520Training%2520HARD%25202024%252F05%252F14%252017%253A30start%255D%2520%25E5%258F%2582%25E5%258A%25A0%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>静心</dc:creator></item><item><title><![CDATA[GPT4o を OpenAI API + Gradio で使う]]></title><description><![CDATA[
 GPT4o を OpenAI API + Gradio で使う
ただのメモです。公式以上の情報はないです。.env ファイルに API_KEY を設定している前提です。

 環境構築 (Anacondaの場合)
$ conda create -n finetuning python=3.12
$ conda activate finetuning
$ pip install openai python-dotenv

 コード
GPT4o がマークダウン形式で出力してくる場合に一応対応したつもり。
import os
from dotenv import load_dotenv
fr...]]></description><link>https://zenn.dev/bbled/articles/7116c555f10959</link><guid isPermaLink="true">https://zenn.dev/bbled/articles/7116c555f10959</guid><pubDate>Tue, 14 May 2024 07:05:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BZezoRK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT4o%2520%25E3%2582%2592%2520OpenAI%2520API%2520%252B%2520Gradio%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B6%2585%25EF%25BC%25AC%25E3%2583%2581%25E3%2582%25AB%25E5%259B%25A3%25E7%25B7%25A8%25E9%259B%2586%25E5%25B1%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZjA2enFDc2wzSWtPcXhWX0c2UEtBZFFtYUpJYnlZY3QzZGVTUEItbHRnZnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>超Ｌチカ団編集局</dc:creator></item><item><title><![CDATA[YAML Templating Tool の概要と使い方]]></title><description><![CDATA[
 ytt とは
ytt（YAML Templating Tool）は、Carvelによって開発された強力なテンプレートツールで、YAMLファイルの管理を簡易化します。このツールは特にKubernetesの設定ファイルを含む複雑なYAML構成を扱う際に有効です。yttは、データの挿入、構成の変更、コードの再利用を容易にするために、プログラム可能なロジックを利用してYAMLファイルを動的に生成することができます。

 1. ytt のインストール方法
さまざまなオペレーティングシステムで ytt を簡単にインストールできます。
macOS（Homebrewを使用）:
brew instal...]]></description><link>https://zenn.dev/bonsai_engineer/articles/ed11eb909d41d8</link><guid isPermaLink="true">https://zenn.dev/bonsai_engineer/articles/ed11eb909d41d8</guid><pubDate>Tue, 14 May 2024 00:30:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yGIQUUX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YAML%2520Templating%2520Tool%2520%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>盆栽エンジニア</dc:creator></item><item><title><![CDATA[OpenAI の API を使って python で ChagGPT の Fine-Tuning 機能を使う]]></title><description><![CDATA[
 主旨
2024/05 時点での python を使って Fine-Tuning する手順のメモです。基本、公式の通りやればできます。なお、手順や方法は頻繁に変更されるため、公式を参照するほうが確実です。また、Fine-Tuning 自体は python を使わなくても可能です。詳しくは下記を参照してください。

OpenAI API Fine-Tuning


 実行環境の準備
$ conda create -n finetuning python=3.12
$ conda activate finetuning
$ pip install openai python-dotenv
...]]></description><link>https://zenn.dev/bbled/articles/dd8ed61aac20ba</link><guid isPermaLink="true">https://zenn.dev/bbled/articles/dd8ed61aac20ba</guid><pubDate>Mon, 13 May 2024 19:05:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cOgHWWp3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E3%2581%25AE%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520python%2520%25E3%2581%25A7%2520ChagGPT%2520%25E3%2581%25AE%2520Fine-Tuning%2520%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B6%2585%25EF%25BC%25AC%25E3%2583%2581%25E3%2582%25AB%25E5%259B%25A3%25E7%25B7%25A8%25E9%259B%2586%25E5%25B1%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZjA2enFDc2wzSWtPcXhWX0c2UEtBZFFtYUpJYnlZY3QzZGVTUEItbHRnZnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>超Ｌチカ団編集局</dc:creator></item><item><title><![CDATA[Django Debug Toolbarでパフォーマンスチューニング]]></title><description><![CDATA[
 はじめに
現在、Djangoで開発を行っている学生です。
就活を行うにあたって開発の意識を変えている最中です。
そこで、パフォーマンスチューニングを行いたいと考えこの記事を書いて行きます。
もし、おかしな点などあれば教えていただけると幸いです。
対象者は、すでにDjangoでアプリケーションを開発したことある方です。

 Django Debug Toolbarとは
公式ドキュメントは以下です。
https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
Django Debug Toolbarは、D...]]></description><link>https://zenn.dev/koupro0204/articles/94b08f82530bef</link><guid isPermaLink="true">https://zenn.dev/koupro0204/articles/94b08f82530bef</guid><pubDate>Mon, 13 May 2024 14:07:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J1HIS787--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520Debug%2520Toolbar%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>い。</dc:creator></item><item><title><![CDATA[Docker上でPoetryをインストールしようとしたらはまった話]]></title><description><![CDATA[よく読めばすぐわかる問題だったけど、こういう時遠回りしちゃうんだよなー
後々考えた適切と思われる解析のやり方と一緒に、備忘録として残しておく

 前提

 対象のDockerfile

Dockerfile
FROM python:3.11.9
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# poetryのインストール
RUN curl -sSL https://install.python-poetry.org | python3
COPY pyproject.toml* poetry.lock* ./

RUN poetry config virtua...]]></description><link>https://zenn.dev/zaspa/articles/f01ac26f77f884</link><guid isPermaLink="true">https://zenn.dev/zaspa/articles/f01ac26f77f884</guid><pubDate>Mon, 13 May 2024 13:54:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sat6DN9E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E4%25B8%258A%25E3%2581%25A7Poetry%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2581%25AF%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zaspa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTIxOTA2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zaspa</dc:creator></item><item><title><![CDATA[Blueskyのモデレーションリストにユーザーを追加する（Python）]]></title><description><![CDATA[
 更新履歴
2024/05/14 完全一致検索の調査を追加

 はじめに
APIで投稿するサンプルはいくつか見つかるものの、検索やモデレーションリストの追加等のサンプルが無かったので作りました。
実際に使う場合は、後述の注意点等を読んで適宜修正してください。

 事前準備

 Blueskyでの作業
サンプルプログラムの書き換えに必要な情報の取得と、モデレーションリストの作成を行います。

プロフィール画面等から自分のID（例：example.bsky.social）を取得する
アプリパスワードを発行し、取得する

「設定」－「アプリパスワード」画面を開き、「アプリパスワードを追加」ボ...]]></description><link>https://zenn.dev/siwon_g/articles/95af6f85fa7e5b</link><guid isPermaLink="true">https://zenn.dev/siwon_g/articles/95af6f85fa7e5b</guid><pubDate>Mon, 13 May 2024 11:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aYfBVjCj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bluesky%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%258A%25E3%2581%2598%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhZGM4ZjRlMDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しおじい</dc:creator></item><item><title><![CDATA[環境構築すら不要なllamafileでローカルLLM(phi-3)]]></title><description><![CDATA[いままでローカルのLLM構築(特にGPUを積んでいないマシン用)にはllama.cppを使っていました。
llama.cpp自体はコンパイル環境を整える必要がありますが、pythonバインドのllama-cpp-pythonを使うのであれば、pipでインストールすることができます。
ここらへんは、過去にllama.cppおよび、llama-cpp-pythonの構築記事を上げています。
https://zenn.dev/emoclew/articles/b896d9f04df519
https://zenn.dev/emoclew/articles/9dfa7fd948a18b
上記の記...]]></description><link>https://zenn.dev/emoclew/articles/42386452c1b37b</link><guid isPermaLink="true">https://zenn.dev/emoclew/articles/42386452c1b37b</guid><pubDate>Mon, 13 May 2024 09:12:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0odVhJC0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%2589%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AAllamafile%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%2528phi-3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emoclew%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXVmTzdVbGY4Tl9uV3hlamh0ZHpxSmtMVGpfWTlhNG1vZ0dOWDQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>emoclew</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-333｜C - Repunit Trio]]></title><description><![CDATA[
 設問ページ

🔗ABC-333 C - Repunit Trio



 提出結果
def getInt():
    return int(input())


def main():
    n = getInt()

    mx = 13
    a = set()
    for i in range(1, mx):
        si = int('1' * i)
        for j in range(1, mx):
            sj = int('1' * j)
            for k in range(1, mx):
        ...]]></description><link>https://zenn.dev/hyperdb/articles/dc5c0ad5e53759</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/dc5c0ad5e53759</guid><pubDate>Mon, 13 May 2024 07:27:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U0yPj6Qu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-333%25EF%25BD%259CC%2520-%2520Repunit%2520Trio%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item></channel></rss>