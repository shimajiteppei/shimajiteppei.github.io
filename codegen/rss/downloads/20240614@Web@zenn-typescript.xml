<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 14 Jun 2024 05:29:28 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Tailwind CSS を使うなら hoverOnlyWhenSupported を設定しておこう]]></title><description><![CDATA[現在最新の Tailwind CSS は v3.4.4 時点では、hover 系のクラスを使うと pointer の有無を考慮せずにスタイルが当てられてしまい、タッチデバイスでは hover 系のスタイルが意図せず残ってしまう、いわゆる Sticky Hover States problem が起きます。
これは Media query を使うことでポインタデバイスのみで適用させる、という対処法がありますが、現在 Tailwind の公式から v4 が出るまでの間これを防ぐためのフラグ hoverOnlyWhenSupported が提供されているのでこれを指定しておきましょう。
mod...]]></description><link>https://zenn.dev/kamina_zzz/articles/935de246956603</link><guid isPermaLink="true">https://zenn.dev/kamina_zzz/articles/935de246956603</guid><pubDate>Fri, 14 Jun 2024 05:29:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7RlODAaH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tailwind%2520CSS%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589%2520hoverOnlyWhenSupported%2520%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258A%25E3%2581%2593%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kamina-zzz%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lJWllnbGlPaHpNY291SW80QTZJamhQTktLeVlTc19uck9LUk9FPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kamina-zzz</dc:creator></item><item><title><![CDATA[useSWRをuseContextの代わりに使ってみる試み]]></title><description><![CDATA[先日、こちらの勉強会に参加しました。
https://classmethod.connpass.com/event/316669/
学びになる内容がたくさんあったのですが、自分が一番気になったのはこちらの発表でした。
https://speakerdeck.com/sutetotanuki/gao-su-an-jian-li-tishang-gedeshi-warerumatuhatenpuretonohurontoendoji-shu-xuan-ding?slide=36
この発表のなかで触れられている、

必要に応じてSWRのfetch関数にnullを指定、キャッシュのインバリデート...]]></description><link>https://zenn.dev/bs_kansai/articles/a015ffbadb0793</link><guid isPermaLink="true">https://zenn.dev/bs_kansai/articles/a015ffbadb0793</guid><pubDate>Fri, 14 Jun 2024 02:59:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3Xny5rIz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useSWR%25E3%2582%2592useContext%25E3%2581%25AE%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNTU3YjY1MDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kobe.ts%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQ5MmViYmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[JS→C#のリクエストで400エラーが出る]]></title><description><![CDATA[
 環境

ASP.NET Core
React
TypeScript
Vite


 現象
post時、400 (Bad Request)エラーが出続ける

 原因
JS側のデータ型（Number）とC#側のデータ型の不一致

Memo.cs
public class Memo
{
    public int Id { get; set; }
    public string Description { get; set; } = string.Empty;
}


MemosController.cs
[HttpPost]
public async Task&lt;ActionR...]]></description><link>https://zenn.dev/zhenyou620/articles/eaa2fd4545e600</link><guid isPermaLink="true">https://zenn.dev/zhenyou620/articles/eaa2fd4545e600</guid><pubDate>Fri, 14 Jun 2024 01:25:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--osoLiG4l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%25E2%2586%2592C%2523%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7400%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mayu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5ODA4ZjExZWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mayu</dc:creator></item><item><title><![CDATA[prismaのmultiple filesの変更差分をdumpしてうまいこと検出したい]]></title><description><![CDATA[Prismaのv5.15よりschemaを複数ファイルに分割して管理できるようになった。
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}
とても便利なのだが、うっかり変な変更をしたりしてしまってないかなど確認する仕組みを作りたくなったので考えてみた。
今回はPlanetScaleの利用など、通常db pushする環境を想定している

 primsa migrate diffでダンプする
schmaからCreate Tableを吐き出...]]></description><link>https://zenn.dev/terrierscript/articles/2024-06-13-prisma-multiple-files-dump</link><guid isPermaLink="true">https://zenn.dev/terrierscript/articles/2024-06-13-prisma-multiple-files-dump</guid><pubDate>Thu, 13 Jun 2024 13:18:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--abVppE4---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prisma%25E3%2581%25AEmultiple%2520files%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E5%25B7%25AE%25E5%2588%2586%25E3%2582%2592dump%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2586%25E3%2581%25BE%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:terrierscript%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNzJjMjE0Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>terrierscript</dc:creator></item><item><title><![CDATA[【TS】そんなのあったの？PropertyKey型]]></title><description><![CDATA[こんにちは。
最近TypeChallengeにはまっており、「完全に理解した」状態になるまで１問１問に深く向き合っている日々の筆者です。
そんな僕が、長年(3ヶ月くらい)めちゃくちゃストレス(肌寒いなぁくらい。)に思っていることがあり、日々調査に明け暮れ(たまーに5分検索するくらい)ても解決できない問題がありました...。
https://github.com/type-challenges/type-challenges/tree/main
今回は、そんなストレスを解消することができたので、記事として残したいと思います！

 オブジェクトのKeyを指す型
!
本記事では普段普通に宣言す...]]></description><link>https://zenn.dev/gemcook/articles/6b8fd769cd708a</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/6b8fd769cd708a</guid><pubDate>Thu, 13 Jun 2024 05:03:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Voc3mx-7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TS%25E3%2580%2591%25E3%2581%259D%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25EF%25BC%259FPropertyKey%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B2%25E3%2582%2587%25E3%2581%25B7%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MmQ2ODA0Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひょぷて</dc:creator></item><item><title><![CDATA[<script> and <script setup> must have the same language type.が発生した]]></title><description><![CDATA[
 概要
&lt;script setup&gt;としたscriptタグ内の処理でtsを使用したかったので&lt;script setup lang="ts"&gt;と変更したら、Pre-transform error: [@vue/compiler-sfc] &lt;script&gt; and &lt;script setup&gt; must have the same language type.というエラーが発生した。
これの原因と解決策を残す。

 環境
Vue:3.4.27
Nuxt:3.12.1
typescript: 5.4.3

 原因
原因となったhoge.vue内...]]></description><link>https://zenn.dev/ohran/articles/c99dcb7fdb930d</link><guid isPermaLink="true">https://zenn.dev/ohran/articles/c99dcb7fdb930d</guid><pubDate>Thu, 13 Jun 2024 04:30:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bITb8Kqd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%253Cscript%253E%2520and%2520%253Cscript%2520setup%253E%2520must%2520have%2520the%2520same%2520language%2520t...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohran%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjNzYyYzIzMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ohran</dc:creator></item><item><title><![CDATA[TypeScriptを使って、エントリーポイントに紐づくts, js, vueの依存関係を追う]]></title><description><![CDATA[
 はじめに
現在 https://snkrdunk.com/ では、多くのWebアプリケーションにおいて、webpackを利用してマルチページアプリケーション（MPA）の構成でFrontendの実装をしています。
エントリーポイントは100を超え、その大半がVue.jsとJavaScript、TypeScriptを組み合わせて実装されています。
今回は、そんな環境の依存関係を紐解くべく調査のためのscriptを作成したお話になります。

 エントリーポイントごとの依存関係をJSON形式で生成

outputData.json
[
  {
    "entryPointPath": "s...]]></description><link>https://zenn.dev/team_soda/articles/da2a262cb99b80</link><guid isPermaLink="true">https://zenn.dev/team_soda/articles/da2a262cb99b80</guid><pubDate>Thu, 13 Jun 2024 04:12:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p17YOaT5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E7%25B4%2590%25E3%2581%25A5%25E3%2581%258Fts%252C%2520js%252C%2520vue%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:aokiken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYTM5ODQ3MWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SODA%2520Engineering%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczNmNjYmUyMGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aokiken</dc:creator></item><item><title><![CDATA[XState で複雑な状態遷移をシンプルに管理する]]></title><description><![CDATA[こんにちは！
KANNA の開発のお手伝いをしております、フリーランスエンジニアの len_prog です。
今回は、XState を用いてステートマシーンを作り、アプリケーションの複雑な状態遷移をシンプルに実装する方法についてご紹介します。

 背景
アルダグラムでは、デジタル帳票アプリケーション「KANNA レポート」を提供しています。
KANNA レポートは、Excel や Google スプレッドシートのようなユーザーインターフェースを備えた Next.js 製の Web アプリケーションとなっており、複雑な状態遷移を多く含んでいます。
このような複雑な状態遷移を管理するためには...]]></description><link>https://zenn.dev/aldagram_tech/articles/59407d4546301d</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/59407d4546301d</guid><pubDate>Thu, 13 Jun 2024 01:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3cgNBmOs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XState%2520%25E3%2581%25A7%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E7%258A%25B6%25E6%2585%258B%25E9%2581%25B7%25E7%25A7%25BB%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:len_prog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmOGMxMzIxNmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>len_prog</dc:creator></item><item><title><![CDATA[TypeScriptの型を使って、実行時の挙動を変えてみる]]></title><description><![CDATA[TypeScript はトランスコンパイルを前提とする言語です。トランスコンパイルの結果は JavaScript と一対一で対応しているわけではなく、本質的に型が付与された JavaScript ではありません。トランスコンパイルの結果が実行時に影響を与えることをしっかり認識する必要があります。

 型情報を実行時に使う

 事前設定
tsconfig.jsonに以下の設定を追加します。特殊なコンパイラプラグインなどは必要ありません。
{
  "compilerOptions": {
   "experimentalDecorators": true
   "emitDecoratorM...]]></description><link>https://zenn.dev/sora_kumo/articles/typescript-decorator</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/typescript-decorator</guid><pubDate>Wed, 12 Jun 2024 23:33:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0D0kk3T9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[node.js/express.jsにSentryをいれる。一気通関にログを抽出するためのトレースIDを仕込む。]]></title><description><![CDATA[
 はじめに
node.jsにSetnryを導入し、ちょっと凝ったことをしようとしたとき、あまり記事がヒットしなかったので自分の実装を備忘録として残しておきます。
やりたいことはフロントとバックエンドを通して関連するログを一気通貫で抽出することです。

 Source
今回使用したソースコードはこちらです。「sentry-nodejs-react」となっているのは、当初はフロント側も作ろうと思っていたからです、、、コードはnodejs部分だけです。
https://github.com/ishiyama0530/sentry-nodejs-react
そして、ほぼこのsrc/index....]]></description><link>https://zenn.dev/ishiyama/articles/8792279dc03b18</link><guid isPermaLink="true">https://zenn.dev/ishiyama/articles/8792279dc03b18</guid><pubDate>Wed, 12 Jun 2024 23:12:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HneqrCcA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:node.js%252Fexpress.js%25E3%2581%25ABSentry%25E3%2582%2592%25E3%2581%2584%25E3%2582%258C%25E3%2582%258B%25E3%2580%2582%25E4%25B8%2580%25E6%25B0%2597%25E9%2580%259A%25E9%2596%25A2%25E3%2581%25AB%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9ID%25E3%2582%2592%25E4%25BB%2595%25E8%25BE%25BC%25E3%2582%2580%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ishiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ODA5ZmJmZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ishiyama</dc:creator></item><item><title><![CDATA[Viteで始めるGoogleChrome拡張機能開発]]></title><description><![CDATA[
 はじめに
都内のSES企業で勤務しているスイと申します。
実務ではExcelやPowerPointと睨めっこするSEです。
今回はGoogle Chromeの拡張機能をVite + TypeScriptを使用して開発したので、初めて拡張機能を開発する人の第一歩になればよいなと思い書いていきます。

 この記事で話すこと

TypeScript + Viteを使って拡張機能を開発する方法


 なぜJavaScriptで開発しない？
Google Chrome拡張機能を開発するにはmanifest.jsonとcontent_scriptとして必要なJavaScriptファイルのみで実行...]]></description><link>https://zenn.dev/sui_water/articles/7d7daef8f4d057</link><guid isPermaLink="true">https://zenn.dev/sui_water/articles/7d7daef8f4d057</guid><pubDate>Wed, 12 Jun 2024 22:47:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TM5WWeqI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BGoogleChrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MGQ1MWNkOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スイ</dc:creator></item><item><title><![CDATA[TypeScriptの型システムに命を吹き込む: Typia と unplugin-typia]]></title><description><![CDATA[
 TL;DR

この度、unplugin-typia という Library を作りました

unplugin-typia を使うと今までめんどくさかった Typia の導入が簡単になります

Vite、esbuild、webpackなどフロントエンドで主流の様々なbundlerに対応しています

Next.jsでも簡単に使えます

Bunにも対応しています

https://github.com/ryoppippi/unplugin-typia/
https://jsr.io/@ryoppippi/unplugin-typia
https://typia.io/docs/setup/...]]></description><link>https://zenn.dev/ryoppippi/articles/c4775a3a5f3c11</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/c4775a3a5f3c11</guid><pubDate>Wed, 12 Jun 2024 19:03:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h6voF2iX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E5%2591%25BD%25E3%2582%2592%25E5%2590%25B9%25E3%2581%258D%25E8%25BE%25BC%25E3%2582%2580%253A%2520Typia%2520%25E3%2581%25A8%2520unplugin-typia%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[TypeORM の create が信用できないなら build メソッドを用意すると良さげ]]></title><description><![CDATA[
 TypeORM


TypeORM

ver. 0.3.20





 create が信用できない件
以下、公式サイトの例から。
仮に User Entity のid・firstName 等の値の指定が必須だとしても、 create のタイミングではエラーを吐きません。
create 後に値の追加・更新が行われることが想定されているようです。


create - Creates a new instance of User. Optionally accepts an object literal with user properties which will be writt...]]></description><link>https://zenn.dev/masani/articles/74f36e48b4d227</link><guid isPermaLink="true">https://zenn.dev/masani/articles/74f36e48b4d227</guid><pubDate>Wed, 12 Jun 2024 13:45:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--roLUzNDI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeORM%2520%25E3%2581%25AE%2520create%2520%25E3%2581%258C%25E4%25BF%25A1%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589%2520build%2520%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E7%2594%25A8%25E6%2584%258F%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%2589%25AF%25E3%2581%2595%25E3%2581%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkIzN29iSFVFazgteDh1eEJVTG1JWmtCOHItb3htWGY0ZkNtaUJVcXRTPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masani</dc:creator></item><item><title><![CDATA[React+Reduxの仕組みを説明]]></title><description><![CDATA[
 はじめに
実務でReduxを使用するプロジェクトに入るので、Reduxの学習をしました。
理解を深めるためにReact+ReduxでのバックエンドとのAPI通信を用いてReduxの仕組みを説明します。

 解説の流れ

Reduxの利点の説明
ログイン機能を用いてreduxの処理の流れの説明
ReduxToolkitを使用した際のコードの変化の説明
ログイン状態を維持させる(おまけ)


 1.Reduxの利点の説明
Reduxは状態管理のライブラリです。
アプリケーションの状態を一元管理することで、予測可能な方法で状態の更新を行うことができます。
私が考える主な利点は二つあります。...]]></description><link>https://zenn.dev/d1099_1099/articles/39dd09ec7df8f9</link><guid isPermaLink="true">https://zenn.dev/d1099_1099/articles/39dd09ec7df8f9</guid><pubDate>Wed, 12 Jun 2024 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VDY1UOa1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252BRedux%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E8%25AA%25AC%25E6%2598%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MFVCbDBKWEpSczRwaW9rYVFHLVdtSlkzOFRoeFB4VzRWb2RmTXk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daisuke</dc:creator></item><item><title><![CDATA[react + typescriptでloadingをいい感じに扱うhooksを作った]]></title><description><![CDATA[react + typescript において data fetch や reload を行う際に、loading 中は placeholder などを表示し、loading が終わったらデータを表示する、というようなことはよくやると思いますが、その際に loading の true/false と、fetch したデータが取得できているか（undefined でないかどうか）を両方チェックしていると、コードが冗長になりがちです。
ということで、これをいい感じに扱える hooks を作成しました。
なお Suspence は利用しない時代の話です。

 作成した hooks
import...]]></description><link>https://zenn.dev/cbmrham/articles/202406-react-typescript-use-with-loading</link><guid isPermaLink="true">https://zenn.dev/cbmrham/articles/202406-react-typescript-use-with-loading</guid><pubDate>Wed, 12 Jun 2024 08:36:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qJ_qqAxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react%2520%252B%2520typescript%25E3%2581%25A7loading%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2586hooks%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%25B3%25E3%2581%25AF%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZF9UcllnZW1raWhJVWhlMWwteXZYOWdfc1BVUDlOUjVxRk56bV89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちびはむ</dc:creator></item><item><title><![CDATA[Readonly 使ってますか？]]></title><description><![CDATA[ムーザルちゃんねるのムーです。今回は TS の Readonly を使うか否か zaru さんと会話しました。
以前の zaru さんのこちらの記事 Reactのpropsはreadonlyにするべきか？で、Readonly については記載していますが、今回会話をする中で改めて気づいた知見などがあったのでシェアしたいと思います。
https://www.youtube.com/watch?v=LHRzYXgxqxk
動画本編の中でも Readonly の罠として二つ紹介していますが、それらについて書いておきたいと思います。

 その1 immutable なオブジェクトを mutable...]]></description><link>https://zenn.dev/moozaru/articles/7268f75ccbf36d</link><guid isPermaLink="true">https://zenn.dev/moozaru/articles/7268f75ccbf36d</guid><pubDate>Wed, 12 Jun 2024 06:39:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BSmtaUy---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Readonly%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:moo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiNDkwNTdmZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25AB%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25AD%25E3%2582%258B%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyN2UwNTNiOTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>moo</dc:creator></item><item><title><![CDATA[useFieldArrayを使った時に型推論が効かない]]></title><description><![CDATA[
react-hook-form v7.45

useFieldArrayを使ってネストされたフォームを作成すると、型推論が正しく行われないケースがある
バリデーションスキーマを共有していても、ネストしたnameを指定するのと、直接nameを指定するのとで型推論が何故か変わる
const { fields, append } = useFieldArray({name: `test.${index}.keyValue`})

append({
	key1: value1 // typescript error (wrong type assigned)
})
const { fields...]]></description><link>https://zenn.dev/blackmax/articles/d2a497d0b6f3fb</link><guid isPermaLink="true">https://zenn.dev/blackmax/articles/d2a497d0b6f3fb</guid><pubDate>Wed, 12 Jun 2024 06:13:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xKdafQrR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useFieldArray%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuroma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZTU3MWIzZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kuroma</dc:creator></item><item><title><![CDATA[【実践】React 100本ノック No.1：Hello, World]]></title><description><![CDATA[
 はじめに
はじめまして！@haganenoubik（アライ リョータ）です。
現在、ReactとTypeScriptを学習中です。
Reactの基礎的な学習をある程度終えた（TypeScriptは触り程度）ので、アウトプット主体で理解度を深めるために、下記のQiita記事シリーズを参考に、課題のミニアプリを作成していきます。
https://qiita.com/Sicut_study/items/3c5cd798313854a471a0
※良い機会なので、記事はZenn CLIを使用して作成しました

 使用環境
手軽に環境構築できるため、基本的にはStackblitzを使用していく...]]></description><link>https://zenn.dev/haganenoubik/articles/a7d896f58647fe</link><guid isPermaLink="true">https://zenn.dev/haganenoubik/articles/a7d896f58647fe</guid><pubDate>Wed, 12 Jun 2024 05:49:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0VZaETHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%259F%25E8%25B7%25B5%25E3%2580%2591React%2520100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%2520No.1%25EF%25BC%259AHello%252C%2520World%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%2520%25E3%2583%25AA%25E3%2583%25A7%25E3%2583%25BC%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjN2FiMjdlODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アライ リョータ</dc:creator></item><item><title><![CDATA[Warning: Cannot update a component　X while rendering a different compo]]></title><description><![CDATA[
react-hook-form ≥ 7.46.0

useFieldArray.appendを使って空の配列に新しくフォーム要素を追加しようとした時に発生

 原因
どうやらバグのようだ
https://github.com/orgs/react-hook-form/discussions/10964
https://github.com/react-hook-form/react-hook-form/issues/10907
複数のIssueで取り上げられており、v7.46以後で発生している。v7.45までは発生しない
useFormStateの実装が良くないようだ。

 解決策
v...]]></description><link>https://zenn.dev/blackmax/articles/8969f90df3344f</link><guid isPermaLink="true">https://zenn.dev/blackmax/articles/8969f90df3344f</guid><pubDate>Wed, 12 Jun 2024 04:49:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--on2TaPOB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Warning%253A%2520Cannot%2520update%2520a%2520component%25E3%2580%2580X%2520while%2520rendering%2520a%2520di...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuroma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZTU3MWIzZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kuroma</dc:creator></item><item><title><![CDATA[【TypeScript】オブジェクトのvalueの型を取得したユニオン型を作ってみる]]></title><description><![CDATA[最近、弊社のフロントエンドチームでは週に1度、ゆるTS勉強会と称して、ゆる〜くTypeScriptの社内勉強会を行っています。
Type Challengeやフロントエンドリーダーから出された問題を僕たちフロントエンドメンバーが解き、みんなに解説する、といったスタイルで実施しています。
https://github.com/type-challenges/type-challenges
問題自体は単純な型操作が大半ですが、それらを解説できるレベルまで理解し、理解が難しいジュニアには簡単に言い換えたり、例を出したり...。と、「ひとに伝えられるようになること」をゴールとして、型に対する理解...]]></description><link>https://zenn.dev/gemcook/articles/50de243d4dd24a</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/50de243d4dd24a</guid><pubDate>Wed, 12 Jun 2024 03:33:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TwnNGWsL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AEvalue%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25AA%25E3%2583%25B3%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%259E%25E3%2581%25AE%25E3%2582%258A%25E3%2582%2587%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3NzU3NTlmZWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぞのりょー</dc:creator></item></channel></rss>