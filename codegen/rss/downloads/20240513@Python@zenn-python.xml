<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 13 May 2024 07:10:00 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AtCoder ABC 002 A-正直者 Pythonでの解き方を初心者向けに解説！【競プロ】]]></title><description><![CDATA[https://youtube.com/shorts/1_hj0ZD-uKE?feature=share

 問題
いま、神の恵みで高橋くんにお金が与えられます。
神は高橋くんに 2 つの金額を提示します。
正直者の高橋くんは、常に大きな金額を選択します。
そこで、与えられた 2 つの整数のうち、大きい方の値を出力するプログラムを書いてください。

 制約
0≦X≦10^9
0≦Y≦10^9
お互いに異なることが保証されている。

 入力形式
X Y

 解説
↓こちらが正解例です。

ABC002-A.py
X,Y=map(int,input().split())
ans=max(X,...]]></description><link>https://zenn.dev/yuya_t/articles/0e5181f98021fc</link><guid isPermaLink="true">https://zenn.dev/yuya_t/articles/0e5181f98021fc</guid><pubDate>Mon, 13 May 2024 04:58:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xfZLWVwQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%2520ABC%2520002%2520A-%25E6%25AD%25A3%25E7%259B%25B4%25E8%2580%2585%2520Python%25E3%2581%25A7%25E3%2581%25AE%25E8%25A7%25A3%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E3%2580%2590%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%2590%25E3%2582%25BC%25E3%2583%25AD%25E3%2583%2597%25E3%2583%25AD%25E3%2580%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlYjQyYTY1OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゼロから始めるプログラミング【ゼロプロ】</dc:creator></item><item><title><![CDATA[PythonのTips集]]></title><description><![CDATA[
 はじめに
Pythonを書く際に、よく使うテクニックやツールについてまとめました。特に、自分が今まで困ってきた内容を中心に取り上げており、自分のためのメモとしても活用しています。

 Seaborn
SeabornはPythonで利用可能なデータ可視化ライブラリです。Matplotlibのラッパーライブラリであるため、Matplotlibの機能を利用することができます。Seabornは、データの可視化を行う際に、Matplotlibよりも簡単に利用できるため、データの可視化を行う際には、Seabornをよく利用しています。

 データの読み込み
seabornは、sns.load_d...]]></description><link>https://zenn.dev/naoki0103/articles/python-tips-collection</link><guid isPermaLink="true">https://zenn.dev/naoki0103/articles/python-tips-collection</guid><pubDate>Sun, 12 May 2024 22:39:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4brHy_zp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Python%25E3%2581%25AETips%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWxCWERuLXJiTnA3UzRCb0gzQldFTGh6RlNWQkxhcTIyelQzYW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoki</dc:creator></item><item><title><![CDATA[【Blender×Python】Pythonチュートリアル（Blender 4.1）]]></title><description><![CDATA[ 〇内容
 「Blender」の「Python API」に関連する情報をまとめております。
 
 〇更新情報
 2024/05/13 新規作成
 ]]></description><link>https://zenn.dev/yuni50314/books/blender_python_api_ver41</link><guid isPermaLink="true">https://zenn.dev/yuni50314/books/blender_python_api_ver41</guid><pubDate>Sun, 12 May 2024 15:47:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TeIvPTvO--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mNmU2Y2ZhMWE3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>yuni50314</dc:creator></item><item><title><![CDATA[購買データ分析の基礎]]></title><description><![CDATA[購買データの分析方法についての基礎を学習します。
購買データ分析の重要性や、必要な作業手順について説明していきます。

実際に、KaggleのデータとPython, SQLを用いて無償で分析を行うことができるプログラムもセットしています。]]></description><link>https://zenn.dev/paxdare_labo/books/c1750ffbd59e8b</link><guid isPermaLink="true">https://zenn.dev/paxdare_labo/books/c1750ffbd59e8b</guid><pubDate>Sun, 12 May 2024 13:36:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5XEgWsWe--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mYzEyNzAwM2JjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Pd Labo</dc:creator></item><item><title><![CDATA[Linux pyenv 環境構築]]></title><description><![CDATA[参考
zenn
qiita
apt install
sudo apt install build-essential libffi-dev libssl-dev zlib1g-dev liblzma-dev libbz2-dev libreadline-dev libsqlite3-dev libopencv-dev tk-dev git
pyenvのclone
git clone https://github.com/pyenv/pyenv.git ~/.pyenv
bashに書き込み、再起動
echo '' &gt;&gt; ~/.bashrc
echo 'export PYENV_...]]></description><link>https://zenn.dev/greenbottle/articles/de32bed8a7e6f6</link><guid isPermaLink="true">https://zenn.dev/greenbottle/articles/de32bed8a7e6f6</guid><pubDate>Sun, 12 May 2024 12:27:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4Yieq-q5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%2520pyenv%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:greenbottle%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZjJhZDhjZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>greenbottle</dc:creator></item><item><title><![CDATA[PythonからPDFファイルをテキスト化する(pypdfium2/pypdf編)]]></title><description><![CDATA[Pythonを使いPDFファイルをテキスト抽出する機会があったので、pypdfium2とpypdfの使い方をメモ。
現時点では、比較できるほど使い込んではいない。

 要件

言語は日本語
複数ページのPDFファイル
レイアウトは1段
Pythonから使いたい
スピードは不要


 選定
GitHub 上にPythonのPDFライブラリを様々な観点から比較しているベンチマークレポジトリがある
https://github.com/py-pdf/benchmarks/blob/main/
具体的には、テキスト抽出(Text Extraction Quality)の上位は以下の通り

上位3...]]></description><link>https://zenn.dev/quiver/articles/21c2978cf869db</link><guid isPermaLink="true">https://zenn.dev/quiver/articles/21c2978cf869db</guid><pubDate>Sun, 12 May 2024 05:30:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lzuRsFRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589PDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528pypdfium2%252Fpypdf%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:quiver%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZTA5M2I2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>quiver</dc:creator></item><item><title><![CDATA[今更GymRetroを動かす]]></title><description><![CDATA[
 概要
OpenAIが以前開発を進めていた Gym Retro を動かします。
こちらは、2020年で更新が止まっており、こちらが参照している Gym も
2022年で更新が終了しています。
なので、普通にセットアップを進めてもまともに動かなかったので、
動かすまでに行った事を記載します。

 関連サイト
https://github.com/openai/retro
https://github.com/openai/gym

 環境
OS: Windows11
Anaconda: conda 24.3.0

 手続き

 専用環境の作成
古いバージョンのものを多く利用するので、
普...]]></description><link>https://zenn.dev/rhythmcan/articles/5486522984016f</link><guid isPermaLink="true">https://zenn.dev/rhythmcan/articles/5486522984016f</guid><pubDate>Sun, 12 May 2024 05:08:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OtrHcvfl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E6%259B%25B4GymRetro%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:becky%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkMzBmMjcxNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>becky</dc:creator></item><item><title><![CDATA[conda-forgeに登録したパッケージのバージョンアップ]]></title><description><![CDATA[
 はじめに
こちらの記事で記載しているパッケージ（仮想高分子ライブラリ発生器 SMiPoly）をバージョンアップし、PyPIとconda-forgeに反映したので、次回に備え、conda-forgeの部分をメモ。
素人がなんとかマニュアルを読み解き、みたいなところがあるので、参考程度にご覧ください。

 概要
PyPIでバージョンアップすると、 regro-cf-autotick-botがversion updateを自動作成してくれ、このpull request (PR) をmergeするだけでよかった。

 内容

 1. マニュアル参照
conda-forgeのpackageメン...]]></description><link>https://zenn.dev/pejpo/articles/9f767fa1bf031e</link><guid isPermaLink="true">https://zenn.dev/pejpo/articles/9f767fa1bf031e</guid><pubDate>Sun, 12 May 2024 02:23:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8veA5lhG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda-forge%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dr_O</dc:creator></item><item><title><![CDATA[NumPy配列を作成する方法3選]]></title><description><![CDATA[
 はじめに
NumPy配列(ndarray)を作成する方法を3つまとめます。

 1.np.array()
最も知られている手法であり、配列をndarrayにして返します。
l = [1,2]
arr = np.array(l)
引数と返り値は別オブジェクトです。
arr[0] = 2
l[0],arr[0]
(1, 2)

 2.np.asarray()
np.asarray()でもNumPy配列を作成できます。
l = [1,2]
arr = np.asarray(l)
ただしnp.asarray()はnp.array()とは異なり、引数にndarrayが入力された場合は参照オブジ...]]></description><link>https://zenn.dev/sergicalsix/articles/d12592d5b750af</link><guid isPermaLink="true">https://zenn.dev/sergicalsix/articles/d12592d5b750af</guid><pubDate>Sat, 11 May 2024 16:33:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HsL5Abbb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPy%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%25953%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlNzliZWZhNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sergicalsix</dc:creator></item><item><title><![CDATA[日本語対応オープンソースOCRの比較 その２]]></title><description><![CDATA[以前の比較からそれぞれバージョンが上がっていましたので、再度比較しました。
・Tesseract
・PaddleOCR
・EasyOCR
それぞれの実行
といっても、モデルファイルの更新は、paddleOCRだけのようでしたので、軽く比較して、paddleOCRを少し試してみます。
実行方法は、前回Colabと同じ[1][2]です。



 結果
Tesseract, EasyOCRは、変化なし
PaddleOCRは、ほとんど変わらず。わずかによくなった？
Google Cloud Visionには及ばず

PaddleOCRv2.6.0(PP-OCRv3)


PaddleOCRv2....]]></description><link>https://zenn.dev/piment/articles/f4bc4d95310234</link><guid isPermaLink="true">https://zenn.dev/piment/articles/f4bc4d95310234</guid><pubDate>Sat, 11 May 2024 16:31:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rBI-lhBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぴーまん</dc:creator></item><item><title><![CDATA[デコレータは「関数名を引数にできる」ことが分かれば簡単]]></title><description><![CDATA[
 関数名の引数
def start_end(f):
  def plus_st_en(x):
    print("----")
    f(x)
    print("----")
  return plus_st_en

def f(x):
  print(x)

x = 987
start_end(f)(x)
#----
#987
#----

 同じコードがデコレータを使って簡潔に書ける
def start_end(f):
  def plus_st_en(x):
    print("----")
    f(x)
    print("----")
  return plu...]]></description><link>https://zenn.dev/nacht/articles/236b133ab5164d</link><guid isPermaLink="true">https://zenn.dev/nacht/articles/236b133ab5164d</guid><pubDate>Sat, 11 May 2024 16:06:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pxFLhRq8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AF%25E3%2580%258C%25E9%2596%25A2%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%258D%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E5%2588%2586%25E3%2581%258B%25E3%2582%258C%25E3%2581%25B0%25E7%25B0%25A1%25E5%258D%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nacht%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWQ2ZGNjZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nacht</dc:creator></item><item><title><![CDATA[Class with Python]]></title><description><![CDATA[
 Class with Python

 定義と呼び出し
class Person:
  a = 9   # クラス変数
  def __init__(self,name):
    self.namename = name

  def __call__(self,name):
    self.namename = name

  @classmethod
  def NANASI_generato(cls):
    return cls("Ano")

class SSS(Person):
  b = 7
  def __init__(self,name,strength):
...]]></description><link>https://zenn.dev/nacht/articles/ea9239a04b585c</link><guid isPermaLink="true">https://zenn.dev/nacht/articles/ea9239a04b585c</guid><pubDate>Sat, 11 May 2024 14:19:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3mzXAasm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Class%2520with%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nacht%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWQ2ZGNjZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nacht</dc:creator></item><item><title><![CDATA[GIS × Python Tutorial Session7 ~ DTMの作成 ~]]></title><description><![CDATA[この記事は「GIS × Python Tutorial」の関連記事です。

 はじめに

前回の記事ではLidarで取得した、点群データの読み書きや外れ値処理を、"PDAL" というライブラリーで行いました。環境構築に関しても前回の記事を参照してください。
https://zenn.dev/daidai_daitai/articles/4071f5aa17cd4b
この記事では、点群データから "DTM" の作成を行いますが、その為に必要な関連知識についてもまとめています。


今回使用するデータ


Raster


DTM（Digital Terrain Model）とは


CSF...]]></description><link>https://zenn.dev/daidai_daitai/articles/597bd52ed96dfd</link><guid isPermaLink="true">https://zenn.dev/daidai_daitai/articles/597bd52ed96dfd</guid><pubDate>Sat, 11 May 2024 12:50:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xi6qLAPP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session7%2520%7E%2520DTM%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>橙。</dc:creator></item><item><title><![CDATA[YouTube動画へのコメントをワードクラウドを使って表示する]]></title><description><![CDATA[noteに掲載したこちらの取り組みの中で、ワードクラウドを作成しました。
https://note.com/yebi_crab/n/n4866e35703cd
本記事では、ワードクラウドの使い方やコード、作成における注意点についてまとめています。
対象の動画コメントについては、YouTube Data APIを利用してSixTONESというアイドルグループのYouTubeチャンネルの動画から収集しました。YouTube Data APIについてはこちらの記事に記載しています。

 ワードクラウドについて

 概要
文章内の単語の出現頻度にあわせ、文字の大きさを変えて表示した図のことです。...]]></description><link>https://zenn.dev/yebi_crab/articles/7e54c74fae120a</link><guid isPermaLink="true">https://zenn.dev/yebi_crab/articles/7e54c74fae120a</guid><pubDate>Sat, 11 May 2024 08:33:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hw08ACg_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25B8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yebi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMWE5NDFhMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yebi</dc:creator></item><item><title><![CDATA[Claude3先生によるChatGPTクローンアプリのハンズオン作成を通したStreamlit入門講義]]></title><description><![CDATA[
 はじめに
おれの名前は樋口恭介。昨日の記事に引き続き、ChatGPT先生を招いてPython講義をしてもらおうと思ったのだが、業務時間中にChatGPTを使いすぎたのか、GPT4の利用回数制限に引っかかってしまった……。

そのため今日は、ChatGPT先生の代わりに急遽Claude3先生に登壇してもらうことにした。Claude3先生はChatGPT先生と同等かそれ以上にPythonにも詳しく、またもしかしたらChatGPT先生よりもChatGPTのことを知っている。
そういうわけで、Claude3先生、本日はよろしくお願いします！

 本日の講義の流れと講師・Claude3先生の自...]]></description><link>https://zenn.dev/acntechjp/articles/a5d598903e6582</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/a5d598903e6582</guid><pubDate>Fri, 10 May 2024 12:24:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fJtVi32l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude3%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BChatGPT%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E4%25BD%259C%25E6%2588%2590%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%259FStreamlit%25E5%2585%25A5%25E9%2596%2580%25E8%25AC%259B%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kyosukehiguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTC1HS3NENWd4Y3BKMzR2cmhUNWJXcmstSk5uZEc1WFpPNThHTnFkQTF1TkVzbGtLcUk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyosukehiguchi</dc:creator></item><item><title><![CDATA[Pythonのエコシステム環境調査]]></title><description><![CDATA[
 初めに
近頃余り Python を使っていなかったので、最近の潮流を知るため各種オープンソースのソースコードを読んだので、Python のエコシステムについて解析してみるテスト。

 パッケージマネージャー
Ryeが人気と言われてますが、オープンソースのコードを読む限り採用しているケースはそれほどない様子。プロジェクトごとにまちまちという印象。
使われているケースと言えばOpenAI SDKが有名どころ。
例えば FastAPI だとHatchからPDMに鞍替えしてますが、Rye にはしてません。
現状 Rust の Cargo みたいな決定版はなさそう。
結局のところ、Readme...]]></description><link>https://zenn.dev/yareyare/articles/30e240eff436a1</link><guid isPermaLink="true">https://zenn.dev/yareyare/articles/30e240eff436a1</guid><pubDate>Fri, 10 May 2024 09:26:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TGY4GMYb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E7%2592%25B0%25E5%25A2%2583%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%25B0%25E4%25B8%25AD%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjZWcVBoWEgwaXVsS05VYlRVOElzXzVQbGVvWV9DVk5VZVZnbjhDRWkwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>田中太郎</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-334｜C - Socks 2]]></title><description><![CDATA[
 設問ページ

🔗ABC-334 C - Socks 2



 提出結果
import itertools


def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    n, k = getIntMap()
    a = getIntList()

    if k % 2 == 0:
        d = 0
        for i in range(0, k, 2...]]></description><link>https://zenn.dev/hyperdb/articles/e08d22c3b4401a</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/e08d22c3b4401a</guid><pubDate>Fri, 10 May 2024 07:42:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OiD2pRMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-334%25EF%25BD%259CC%2520-%2520Socks%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[高速な埋め込み: Spark* NLP と OpenVINO™ を使用して大規模で高速な BERT 推論を実現]]></title><description><![CDATA[この記事は、Medium に公開されている「Supercharged Embeddings: Unlocking Faster BERT Inference at Scale with Spark NLP and OpenVINO™」の日本語参考訳です。原文は更新される可能性があります。原文と翻訳文の内容が異なる場合は原文を優先してください。
https://medium.com/openvino-toolkit/supercharged-embeddings-unlocking-faster-bert-inference-at-scale-with-spark-nlp-and-open...]]></description><link>https://zenn.dev/intel_developer/articles/0d5c3dd0ac7a28</link><guid isPermaLink="true">https://zenn.dev/intel_developer/articles/0d5c3dd0ac7a28</guid><pubDate>Fri, 10 May 2024 02:22:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X5miJdEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AA%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%253A%2520Spark%252A%2520NLP%2520%25E3%2581%25A8%2520OpenVINO%2520%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AA%2520BERT%2520%25E6%258E%25A8%25E8%25AB%2596%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2599%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiZThlMTc0MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>インテルデベロッパーゾーン</dc:creator></item><item><title><![CDATA[asdf でグローバルランタイムを利用する (macOS)]]></title><description><![CDATA[asdf を利用している環境下で、個々のプロジェクトでは特定のバージョンのランタイムを使用しつつ、プロジェクトの外ではグローバルにインストールされたランタイムを使用するための設定について記す。特に、 Homebrew で Python をインストールした際、 asdf の設定のみではグローバルのランタイムにパスが通らないので、その対処法について記す。

 背景
突然だが、自分はエディタとして Neovim を利用している。 Neovim 上で LSP による自動補完を実現する際、 npm や pip などのパッケージ管理ツールを通して、関連するライブラリをインストールしなければならない場...]]></description><link>https://zenn.dev/hamakou108/articles/aba48b3f5fec4e</link><guid isPermaLink="true">https://zenn.dev/hamakou108/articles/aba48b3f5fec4e</guid><pubDate>Fri, 10 May 2024 00:35:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1pmtdWt1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%2520%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2520%2528macOS%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hamakou108%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyNTlhYzY3ZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hamakou108</dc:creator></item><item><title><![CDATA[PythonでXML文字列を整形する]]></title><description><![CDATA[
 概要
PythonでXML文字列を整形するプログラムの備忘録です。

 プログラム1
以下を参考にしました。
https://hawk-tech-blog.com/python-learn-prettyprint-xml/
不要な空行を削除する処理などを加えています。
from xml.dom import minidom
import re
def prettify(rough_string):
    reparsed = minidom.parseString(rough_string)
    pretty = re.sub(r"[\t ]+\n", "", reparsed...]]></description><link>https://zenn.dev/nakamura196/articles/7afad09f56d1db</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/7afad09f56d1db</guid><pubDate>Thu, 09 May 2024 13:26:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kNrgWCRA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7XML%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item></channel></rss>