<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 22 Aug 2024 12:03:51 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【備忘録】TypeScript - 型推論]]></title><description><![CDATA[
 Extractをジェネリックな関数で使った時の型推論のプロセス

 背景
ジェネリック型の引数を持つ関数でExtractを使用した時のTypeScriptの型推論のプロセスを理解するのに苦労した。
特に以下のgetValues関数のUがどのように型推論されるのか理解が難しかったため、型推論プロセスを備忘録に残しておく。

 例に使うgetValues関数について
第一引数にobject型のobj、第二引数にobjが持つキーの一部を格納したstring型の配列keysを持ち、keysの要素に一致するキーの値を格納したU型の配列を返す。
function getValues&lt;T, ...]]></description><link>https://zenn.dev/hiro8_hiro8/articles/ac79812165f589</link><guid isPermaLink="true">https://zenn.dev/hiro8_hiro8/articles/ac79812165f589</guid><pubDate>Thu, 22 Aug 2024 07:59:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jadzxzNJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591TypeScript%2520-%2520%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjVRSzFnQVpjV2cwTFJHUXlDcFMtU19uVm5HTlVzNlgwMEN2U2dYTUFmODVMMnFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiro</dc:creator></item><item><title><![CDATA[TypeScriptで型安全かつ可変長引数に対応したzip関数を実装する]]></title><description><![CDATA[type UnwrapTupleArray&lt;T extends any[][]&gt; = {
  [Index in keyof T]: T[Index][number]
}

function zip&lt;T extends any[][]&gt;(...tupleArray: T): UnwrapTupleArray&lt;T&gt;[] {
  // 最も短いlengthを取得
  const length = Math.min(...tupleArray.map(array =&gt; array.length))

  // 各配列の対応する要素をまとめて配列にする
...]]></description><link>https://zenn.dev/k_u_0615/articles/ef0dec7b5d6e9f</link><guid isPermaLink="true">https://zenn.dev/k_u_0615/articles/ef0dec7b5d6e9f</guid><pubDate>Wed, 21 Aug 2024 23:45:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9HtsFQdw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%258B%25E3%2581%25A4%25E5%258F%25AF%25E5%25A4%2589%25E9%2595%25B7%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259Fzip%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kagurazaka%2520%25E7%25A5%259E%25E6%25A5%25BD%25E5%259D%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNDhjYjZhOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kagurazaka 神楽坂</dc:creator></item><item><title><![CDATA[最近作ったBun向けの小さいツール(+alpha)たちの紹介 [自己満記事]]]></title><description><![CDATA[最近いくつか Bun 向けに小さいツールをいくつか作ったので紹介します。
!
これは完全に自己満足の記事です


 bun-plugin-isolated-decl
https://github.com/ryoppippi/bun-plugin-isolated-decl
Bun には Bun.build という Bundler 備わっています。
https://bun.sh/docs/bundler
とても速くて、プラグインを書くのも簡単なので、個人的にも気に入ってよく使ってます(ただし、tree-shaking が甘いという問題がある)。
しかし、Bun.build には現在のところ...]]></description><link>https://zenn.dev/ryoppippi/articles/2a8bf54c206659</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/2a8bf54c206659</guid><pubDate>Wed, 21 Aug 2024 19:07:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1VXYEZhE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E8%25BF%2591%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FBun%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E5%25B0%258F%25E3%2581%2595%25E3%2581%2584%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2528%252Balpha%2529%25E3%2581%259F%25E3%2581%25A1%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2520%255B%25E8%2587%25AA%25E5%25B7%25B1%25E6%25BA%2580%25E8%25A8%2598%25E4%25BA%258B%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[useEventは事前にsetupしよう]]></title><description><![CDATA[reactコンポーネントのユニットテストを書く際にTesting Libraryを利用していましたがv13からv14へのアップデートでuserEventの使い方が変わっていました。
ドキュメントはこちら
https://testing-library.com/docs/user-event/intro

 使い方
v13まではこうでしたが

MyComponent.spec.ts
import {render, screen} from '@testing-library/react'
import userEvent from '@testing-library/user-event'...]]></description><link>https://zenn.dev/mamuno/articles/91ebeaf445a49b</link><guid isPermaLink="true">https://zenn.dev/mamuno/articles/91ebeaf445a49b</guid><pubDate>Wed, 21 Aug 2024 15:42:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5WohBwsR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useEvent%25E3%2581%25AF%25E4%25BA%258B%25E5%2589%258D%25E3%2581%25ABsetup%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4M2IzMzZjMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkr</dc:creator></item><item><title><![CDATA[ReactとDjangoで登録フォームとモーダル画面作ってみた]]></title><description><![CDATA[
 元美容師のDjangoポートフォリオリニューアル日記 Part.4：コンポーネント分割とモーダルフォーム編(material-UIも少しだけ)
こんにちは、やぎです！
前回の記事では、DjangoとReactを連携させ、データベースに登録されているサロンデータの取得と表示を実装しました。
今回は、フロントエンドでサロンの登録機能を追加していきます！

 今回の実装内容
1.サロン登録機能の追加(単一ファイルで実装)
まずは前回作成したapp.jsに追加をしてサロン登録機能を作成します。
2.コンポーネントの分割
単一ファイルで作成していた機能を、部品ごとに分けてコンポーネント思考で作...]]></description><link>https://zenn.dev/jenny/articles/9a3595f37b6a0b</link><guid isPermaLink="true">https://zenn.dev/jenny/articles/9a3595f37b6a0b</guid><pubDate>Wed, 21 Aug 2024 14:12:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5rqyjN7q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8Django%25E3%2581%25A7%25E7%2599%25BB%25E9%258C%25B2%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A8%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E7%2594%25BB%25E9%259D%25A2%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0Y2NlYzgwYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やぎ</dc:creator></item><item><title><![CDATA[今後のnodejsのtypescript依存について思ったこと。]]></title><description><![CDATA[ざっと目を通して思った現時点の所感
流し読みなのでissueや他に答えあるかも知らん。

typescriptには参照実装はあるけど、仕様はないというのがまあまあ不安ですなぁ。
nodejsはpython(ビルド時依存)かつ、typescript(ランタイム依存)にも依存することになる不思議な不思議な言語になりそう。
coreに入れるということはnodejsから見るとtypescriptがランタイム依存なのにtypescriptのサポート期間1年考えるとnodejsのサポート期間2年なので、typescriptのサポート期間が短過ぎる気がしますが、大丈夫なんかねぇ?
typescript...]]></description><link>https://zenn.dev/oto/articles/e42c4d536b3900</link><guid isPermaLink="true">https://zenn.dev/oto/articles/e42c4d536b3900</guid><pubDate>Wed, 21 Aug 2024 11:06:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XuowawNu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E5%25BE%258C%25E3%2581%25AEnodejs%25E3%2581%25AEtypescript%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otogawa%2520Katsutoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiZTMxMWQ2YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otogawa Katsutoshi(oto)</dc:creator></item><item><title><![CDATA[社内でTypeScript大会しました（競プロ）]]></title><description><![CDATA[
 はじめに
皆さんは普段、コーディングをするときにCopilotを使っているでしょうか？
私はがっつり使ってます。
「どういったコードを書きたいか」をコメントするだけでコードの自動生成をしてくれたり、次に書くべきコードの提案を受けることができるので、非常に便利ですよね。
一方で、自分で考えてコードを書く機会が減るため、「自分でプログラミングを書けなくなるのでは？」という懸念があります...
自分で考えてコードを書く機会を作ることと、他の人がどんなコードを書いているのか勉強のために社内でTypeScript大会を開催しました。学びがありましたし、結構盛り上がって楽しかったです！
本記事で...]]></description><link>https://zenn.dev/takafumi2775/articles/21fa215be2d607</link><guid isPermaLink="true">https://zenn.dev/takafumi2775/articles/21fa215be2d607</guid><pubDate>Wed, 21 Aug 2024 09:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CsWQNfSH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A4%25BE%25E5%2586%2585%25E3%2581%25A7TypeScript%25E5%25A4%25A7%25E4%25BC%259A%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takamu</dc:creator></item><item><title><![CDATA[type-challengesのextremeレベルを解いてみた]]></title><description><![CDATA[
 まえがき
チーム内でTypeScriptの学習法について話題に上がった際にこちらの問題集をメンバーからご共有頂きました。
type-challenges
普段はよく使うライブラリのソースコードを読んだり、OSSに参加したりしながら実践的にTypeScript力を鍛えているのですが、こういう問題集に挑戦するのも面白そう。
ということで、一番難しいレベルの「extreme」に記載されている問題について自分なりの解法と回答を記してみます。
あくまでも僕が個人的に考えたものなので最適な回答ではない可能性が高いです。
参考程度にお読みください。

 5 - Get Readonly Keys
...]]></description><link>https://zenn.dev/8times12/articles/20a27923bdefca</link><guid isPermaLink="true">https://zenn.dev/8times12/articles/20a27923bdefca</guid><pubDate>Wed, 21 Aug 2024 07:19:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--82PZxZC6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type-challenges%25E3%2581%25AEextreme%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryusei%2520Abe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NTk2MzRmMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryusei Abe</dc:creator></item><item><title><![CDATA[Full-Stack TypeScript という名称に統一しませんか？]]></title><description><![CDATA[

 みなさん、Full-Stack TypeScript と呼びませんか！
みなさん、こんにちは！
アセンド株式会社で取締役CTOを務めている丹羽（@niwa_takeru）です。「物流の真価を開き、あらゆる産業を支える」をミッションに、運送会社向けSaaSの開発・提供をしています。また、個人としては今年５月に開催された TSKaigi の運営理事も務めております。
https://tskaigi.org/
この記事で、みなさんにお伝えしたいことはただ１つ。↓↓↓
「Full-Stack TypeScript という名称に統一しませんか？」
最近、フロントエンドやバックエンド、その他の...]]></description><link>https://zenn.dev/ascend/articles/full-stack-typescript</link><guid isPermaLink="true">https://zenn.dev/ascend/articles/full-stack-typescript</guid><pubDate>Wed, 21 Aug 2024 04:42:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nsMtoPLh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Full-Stack%2520TypeScript%2520%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E5%2590%258D%25E7%25A7%25B0%25E3%2581%25AB%25E7%25B5%25B1%25E4%25B8%2580%25E3%2581%2597%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Niwa%2520Takeru%2520%2540ASCEN...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMmExYmM4OTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2582%25BB%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyM2UzNTU0YjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niwa Takeru @ASCEND CTO</dc:creator></item><item><title><![CDATA[＃36　クイックソートをCanvasを用いて可視化してみた]]></title><description><![CDATA[
 概要
普段からよくソートを使っているので動きを理解するためにHTML+Canvasを用いて可視化をしてみました

 クイックソートの実装

 クイックソートの概要
クイックソートとは、とある基準値よりも大きい値の配列と小さい値の配列に分割してそれを再帰的に適用することで並び替えを行うアルゴリズムです。高速なソートアルゴリズムとして知られています

適当な基準値を決めます(※1)
配列を基準値より小さい値の配列と大きい値の配列に分割します(※2)
分割できなくなるまで1～2を繰り返します
分割できなくなったら配列を結合します


※1 中央値を基準値として扱えると効率の面で最適ですが、...]]></description><link>https://zenn.dev/nxted_sapporo/articles/d55763bd0d84ab</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/d55763bd0d84ab</guid><pubDate>Wed, 21 Aug 2024 02:21:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--atropRUU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%258336%25E3%2580%2580%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Canvas%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[TypeScriptの高度な型システムとReact Hooksの利用]]></title><description><![CDATA[
 TypeScriptの高度な型システムとReact Hooksの利用 :beginner:
TypeScriptは、JavaScriptに強力な型システムを追加することで、コードの品質と可読性を向上させることができます。このガイドでは、TypeScriptのいくつかの高度な型システムとReact Hooksを使用する際の具体的な方法について説明します。

 Intersection Types（交差型）
Intersection Typesとは
交差型（Intersection Types）は、複数の型を組み合わせて1つの型にすることができます。これにより、オブジェクトが複数の型のす...]]></description><link>https://zenn.dev/jk447/articles/03ad0c9caf4420</link><guid isPermaLink="true">https://zenn.dev/jk447/articles/03ad0c9caf4420</guid><pubDate>Wed, 21 Aug 2024 00:55:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AOPKoTxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E9%25AB%2598%25E5%25BA%25A6%25E3%2581%25AA%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25A8React%2520Hooks%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JK447%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YTQ1YzQwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JK447</dc:creator></item><item><title><![CDATA[Waku v0.21.0をリリースしました！Server Actionsも完全サポートのRSCフレームワーク]]></title><description><![CDATA[v0.21に向けたアイデアはv0.20を開発中からありました。v0.20.0をリリースしたのが2024年3月なので、もう5ヶ月も経過してしまいました。これは想定外で当初は6月末頃のリリースを目指していました。遅れた原因は大きく二つあって、一つはServer Actionsのサポートがかなり大きなものであること、もう一つはそれに加えてさまざまなリファクタリングを実施し、それに伴い不具合対応が発生しました。以前から存在していた不具合も多くありそれらも対応したため、全体的な改善度合いは高いです。チーム開発をする中で、メンバーの忙しさにも左右される場面もありました。やっとv0.21.0のリリース...]]></description><link>https://zenn.dev/dai_shi/articles/0fdfec9a3bf075</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/0fdfec9a3bf075</guid><pubDate>Tue, 20 Aug 2024 14:56:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sYEXRTJM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Waku%2520v0.21.0%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581Server%2520Actions%25E3%2582%2582%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AERSC%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[flatMapという概念を理解してみる]]></title><description><![CDATA[JSのArrayメソッドでよく見かけるflatMapですが、正直よくわかりません。
実際に使われているコードを見ても、結局flatMapの結果がどのデータ型で返ってくるかなどを読み解けませんでした。
よって、まとめてみながら徐々に理解していきます。

 公式ドキュメント

 flatMap

flatMap() は Array インスタンスのメソッドで、最初にマッピング関数を使用してそれぞれの要素をマップした後、結果を新しい配列内に平坦化します。これは、 map() の後に深さ 1 の flat() を行うのと同じですが (arr.map(...args).flat())、これら 2 つ...]]></description><link>https://zenn.dev/shunsuke108m/articles/769abb0f6762d2</link><guid isPermaLink="true">https://zenn.dev/shunsuke108m/articles/769abb0f6762d2</guid><pubDate>Tue, 20 Aug 2024 13:18:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rNuWNSOp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flatMap%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E6%25A6%2582%25E5%25BF%25B5%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%25AE%25E7%2594%25B0%25E5%25B3%25BB%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG9Jdy1QSHNvSW1WVGpKTmxFbkhnZkRyZ0pBVlRSQzhIaWMweDVJUmZLS3hlUjZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宮田峻輔</dc:creator></item><item><title><![CDATA[React(TS)のユニオン×リテラル型を用いて単一コンポーネントから複数のCSSを出し分ける]]></title><description><![CDATA[
 まえがき
ReactやTypeScriptでの開発において、コンポーネントのスタイリングを効率的に管理することは重要です。特に、テーマカラーやバリエーションを持つコンポーネントの場合、スタイルの一貫性を保ちながら柔軟にカスタマイズできる仕組みが求められます。今回の記事では、TypeScriptのユニオン×リテラル型を活用して、単一コンポーネントからCSSのクラスをPropsで出し分ける実装について解説します。(tailwindを使用)
ユニオン×リテラル型の関連記事↓
https://zenn.dev/gamuprog/articles/61a43181d43bd7

 コードの概要...]]></description><link>https://zenn.dev/gamuprog/articles/8edda19d0e1954</link><guid isPermaLink="true">https://zenn.dev/gamuprog/articles/8edda19d0e1954</guid><pubDate>Tue, 20 Aug 2024 08:32:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---bOYvEKT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2528TS%2529%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25AA%25E3%2583%25B3%25C3%2597%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25AB%25E5%259E%258B%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%258D%2598%25E4%25B8%2580%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AECSS%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E5%2588%2586%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmYTNjODM0OTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>がむ</dc:creator></item><item><title><![CDATA[【TS】satisfiesじゃないとできないこと。~無駄な変数を撲滅する~。]]></title><description><![CDATA[こんにちは!
satisfies大好きな筆者です。
https://zenn.dev/gemcook/articles/c1916975cf6ce6
この記事に引き続いてsatisfiesにしかできないことをもう一つ紹介したいと思います。satisfiesのお気に入りの使い方その２。です！

 無駄な変数宣言せずに型をつける
型注釈は変数の宣言時に行うことでその変数に対し型をつけることができます。その性質上、どうしても変数は宣言する必要があります、しかしsatisfiesはそんなことありません。いつだって使えるのです。
さて「変数宣言せずに型をつける」とはどういうことでしょうか。実際の使...]]></description><link>https://zenn.dev/gemcook/articles/17f7a25dc88cb9</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/17f7a25dc88cb9</guid><pubDate>Tue, 20 Aug 2024 03:32:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jgeYZNTN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TS%25E3%2580%2591satisfies%25E3%2581%2598%25E3%2582%2583%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%25E3%2580%2582%7E%25E7%2584%25A1%25E9%25A7%2584%25E3%2581%25AA%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E6%2592%25B2%25E6%25BB%2585%25E3%2581%2599%25E3%2582%258B%7E%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B2%25E3%2582%2587%25E3%2581%25B7%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MmQ2ODA0Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひょぷて</dc:creator></item><item><title><![CDATA[[TypeScript] Awaited<T>を知っていますか？]]></title><description><![CDATA[先日チームメンバーのコードレビューをしていた際、Awaitedを使ったコードを見つけました。
個人的にはなんとなく最近追加されたTypeScriptの型ユーティリティだな〜くらいの認識で実務で使ったことがなかったので、せっかくの機会なので調べてみました。

 ユーティリティ Awaited&lt;T&gt;型とは？
Awaited は、TypeScript 4.5 で導入された型ユーティリティです。Promise の結果を型として抽出するのに役立ちます。つまり、Promise が解決されたときに返される値の型を取得するために使用できます。
この型は再帰的に定義されており、Promise ...]]></description><link>https://zenn.dev/funteractiveinc/articles/9b30b65871a1b8</link><guid isPermaLink="true">https://zenn.dev/funteractiveinc/articles/9b30b65871a1b8</guid><pubDate>Tue, 20 Aug 2024 02:07:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dQ_v1xdY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520Awaited%253CT%253E%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:SHIRO%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmI2YjY4NDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p2ZDR0SDNrY3NQOEliejdSdUgtajJZVDNoLThLOTN4aGd1U2s9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SHIRO</dc:creator></item><item><title><![CDATA[lodash-esよりも軽量かつ高速なes-toolkitに移行してみる]]></title><description><![CDATA[
 es-toolkitとは
es-toolkitは配列・数値計算・オブジェクトや文字列操作などの機能を提供するJavaScriptのユーティリティです。公式の紹介文によると、lodashなどの代替品と比較して最大97%のバンドルサイズの削減、実行時パフォーマンスの2～3倍高速化、シンプルかつ堅牢なTypeScriptのサポートを特徴としています。バージョンv1.0.0が2024年5月末と新しいライブラリに関わらず（現在はv1.16.0）、GitHub Starは4.6kと期待のライブラリです。

 検証内容/前提条件
今回はlodash（正確にはlodash-es）をあまり利用していな...]]></description><link>https://zenn.dev/est/articles/9aef523ba88fa1</link><guid isPermaLink="true">https://zenn.dev/est/articles/9aef523ba88fa1</guid><pubDate>Mon, 19 Aug 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vPaSUbqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lodash-es%25E3%2582%2588%25E3%2582%258A%25E3%2582%2582%25E8%25BB%25BD%25E9%2587%258F%25E3%2581%258B%25E3%2581%25A4%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AAes-toolkit%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:est%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZTU2ZGFiZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>est</dc:creator></item><item><title><![CDATA[Vue.js 3とComposition API：状態管理の新しいアプローチ]]></title><description><![CDATA[
 Vue.js 3とComposition API：状態管理の新しいアプローチ

 はじめに
Vue.jsは、シンプルで柔軟なフロントエンドフレームワークとして広く利用されています。特に、Vue.js 3では、Composition APIという新しいアプローチが導入され、状態管理やコンポーネントの設計において大きな変革をもたらしました。本記事では、Vue.js 3のComposition APIを中心に、状態管理の新しいアプローチについて詳しく解説します。

 Vue.js 3の概要
Vue.js 3は、Vue.jsの最新バージョンであり、パフォーマンスの向上、TypeScriptの...]]></description><link>https://zenn.dev/llm_robot/articles/20240820-vuejs3-compositionapi-state</link><guid isPermaLink="true">https://zenn.dev/llm_robot/articles/20240820-vuejs3-compositionapi-state</guid><pubDate>Mon, 19 Aug 2024 22:08:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--boW_dnf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue.js%25203%25E3%2581%25A8Composition%2520API%25EF%25BC%259A%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIZAWA%2520version%253A0.0.2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTE3MGM1NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIZAWA version:0.0.2</dc:creator></item><item><title><![CDATA[React + TypeScript よく使うコマンドまとめ]]></title><description><![CDATA[プロジェクトのセットアップ
npx create-react-app my-app --template typescript
開発サーバーの起動
npm start
ビルド
npm run build
型チェック
tsc --noEmit
テスト
npm test
パッケージのインストール
npm install package-name
npm install package-name --save-dev
ESLintの実行
npx eslint . --ext .ts,.tsx
Prettierの実行
npx prettier --write .
Storybookのセットアップ...]]></description><link>https://zenn.dev/royta/articles/df7e613d5b95c5</link><guid isPermaLink="true">https://zenn.dev/royta/articles/df7e613d5b95c5</guid><pubDate>Mon, 19 Aug 2024 20:41:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qh0bBl2d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520TypeScript%2520%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AD%25E3%2582%25A4%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMTM2YTY5YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ロイタ</dc:creator></item><item><title><![CDATA[JavaScriptでネストしたオブジェクトから、キーワード検索]]></title><description><![CDATA[
 ネストしたオブジェクトから値を取得するにはどうするのか？
仕事で配列を操作して値を取得するロジックを実装する場面があった。意外と難しかった。入れ子構造になってるオブジェクトから値をキーワード検索で取得する。
let companies = [
    {
        id: 1,
        name: '株式会社A',
        member: {
            age: 20,
            count: 500,
        },
        place: 'TOKYO'
    },
    {
        id: 2,
    ...]]></description><link>https://zenn.dev/joo_hashi/articles/b768de4d3bb9ec</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/b768de4d3bb9ec</guid><pubDate>Mon, 19 Aug 2024 14:03:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fiEjLLhh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E6%25A4%259C%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item></channel></rss>