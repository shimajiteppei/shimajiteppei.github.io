<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 03 Jun 2024 11:03:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Viteのビルドで単一htmlを出力する「vite-plugin-singlefile」の紹介！あと、fileプロトコルやCORS等について]]></title><description><![CDATA[初投稿です。初心者です。Viteのプラグインに良さげなやつがあった＋日本語で検索しても単品での紹介記事が無かったので書いてみました。
書いてある内容や用語の使い方に誤りがあれば、ガンガン指摘して頂けると幸いです。CORS関係の部分があまり自信ないです。

対象読者：Viteを使ってJavaScriptのWebアプリを作っている人。
記事概要：Viteのビルドで単一htmlの出力を可能にする「vite-plugin-singlefile」の紹介。Vite標準のビルドで出力したhtmlをブラウザから直接開く(fileプロトコルでアクセス)するとエラーが出る理由(CORS関係)。


 「vi...]]></description><link>https://zenn.dev/tweeteafox300/articles/a39a0626afa627</link><guid isPermaLink="true">https://zenn.dev/tweeteafox300/articles/a39a0626afa627</guid><pubDate>Mon, 03 Jun 2024 02:36:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t6UYaNIj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A7%25E5%258D%2598%25E4%25B8%2580html%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cvite-plugin-singlefile%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2581%25E3%2581%2582%25E3%2581%25A8%25E3%2580%2581file%25E3%2583%2597%25E3%2583%25AD...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25B6%25E3%2583%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3YzM1OWY2YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ツイーティ・ザ・フォックス</dc:creator></item><item><title><![CDATA[[leetCode] 1961. Check If String Is a Prefix of Array]]></title><description><![CDATA[https://leetcode.com/problems/check-if-string-is-a-prefix-of-array/description/

 問題

文字列sと、複数の単語を格納した配列wordsが与えられる

wordsを頭からひとつずつ繋げたとき、sと同じ文字列になるタイミングがあるかを返す


 解法
単にひとつひとつ結合し、sと比較するとよい。
/**
 * @param {string} s
 * @param {string[]} words
 * @return {boolean}
 */
var isPrefixString = function(s...]]></description><link>https://zenn.dev/ulxsth/articles/f517755c6beffd</link><guid isPermaLink="true">https://zenn.dev/ulxsth/articles/f517755c6beffd</guid><pubDate>Sun, 02 Jun 2024 23:16:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FktkIN7g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BleetCode%255D%25201961.%2520Check%2520If%2520String%2520Is%2520a%2520Prefix%2520of%2520Array%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiOGNiMGY2NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よつ</dc:creator></item><item><title><![CDATA[View Transitions API でカードをｼｭｯと動かす]]></title><description><![CDATA[View Transitions API を使ってトランプゲームっぽく手札からカードを出して移動させるアニメーションを実装しました！
工夫した点や、詰まったところなどをまとめます。
全体的な実装と挙動は CodePen のサンプルを参照ください。

GIF アニメ：


 View Transitions API とは
異なる DOM でのアニメーションを実装するための仕組みです。
概要は MDN のドキュメントや以下に紹介する記事がわかりやすいです。
https://developer.mozilla.org/ja/docs/Web/API/View_Transitions_API
h...]]></description><link>https://zenn.dev/kagan/articles/view-transitions-api</link><guid isPermaLink="true">https://zenn.dev/kagan/articles/view-transitions-api</guid><pubDate>Sun, 02 Jun 2024 17:53:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gC6OkK4c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:View%2520Transitions%2520API%2520%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25EF%25BD%25BC%25EF%25BD%25AD%25EF%25BD%25AF%25E3%2581%25A8%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pxRzhkLXVXenp5SlJteDF3NU9tcE9KZjdkNHFHUXo5ZFowNy0wNmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かがん</dc:creator></item><item><title><![CDATA[PixiJS v8 + GSAP + Spine2D のテンプレートです]]></title><description><![CDATA[表題の通り、Vite をベースにして PixiJS v8 + GSAP + Spine2D のテンプレートを作成してみました。
誰のためというわけもなく、ほぼ自分用ですね。

 リポジトリ・サンプルページ
&gt; リポジトリ:t-tonyo-maru/pub_template_web_pixijs-gsap-spine
&gt; サンプルページ

サンプルページ スクリーンショット

 開発環境



開発環境
バージョン




node
&gt;=20




 主なパッケージ



パッケージ
バージョン




dotenv
^16.4.5


typescript
^5.2....]]></description><link>https://zenn.dev/t_tonyo_maru/articles/b5d96768a38368</link><guid isPermaLink="true">https://zenn.dev/t_tonyo_maru/articles/b5d96768a38368</guid><pubDate>Sun, 02 Jun 2024 14:57:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---_WHKowh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PixiJS%2520v8%2520%252B%2520GSAP%2520%252B%2520Spine2D%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2582%2588%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNjVjZjg3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんよー。</dc:creator></item><item><title><![CDATA[JavaScriptの配列抽出]]></title><description><![CDATA[配列の中から条件を満たしたモノから必要な要素のみを取る。
そんな方法を調べたのでメモ。

 古の方法
取得元配列をループしてifで取り出して抽出結果配列にPush。
const newArray = [];
for (let elm of objArray) {
  if (elm.id % 2 === 1) {
    newArray.push({"name":elm.name, "value":elm.value});
  }
}

 filterとmapを使う方法
スッキリした表記（諸説あります）になる。

要素1つのみ取得して配列にする場合
const newArray = o...]]></description><link>https://zenn.dev/modokisealsky/articles/bccbf07bd1b204</link><guid isPermaLink="true">https://zenn.dev/modokisealsky/articles/bccbf07bd1b204</guid><pubDate>Sun, 02 Jun 2024 13:24:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fz408fo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E6%258A%25BD%25E5%2587%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2582%2582%25E3%2581%25A9%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkMDI1ZDRiMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>開発者もどき</dc:creator></item><item><title><![CDATA[【TypeScript】ローカルストレージにデータを保持するカスタムフックの設計]]></title><description><![CDATA[
 概要
本記事では、TypeScriptを用いてデータの保存方法を抽象化し、SessionStorage、LocalStorage、Cookieの3つの異なるストレージに対応可能なStore Managerの実装方法について紹介します。また、Reactのカスタムフックを使って、これらのストレージと連携する方法も説明します。

 Store Managerの実装
データの管理方法が変更されても対応できるように、共通のインターフェースStoreManagerを定義し、それぞれのストレージに対する具体的な実装を行います。

 インターフェースとファクトリ関数の定義
// 共通のインターフェー...]]></description><link>https://zenn.dev/kubo_programmer/articles/eddfe50ed191a2</link><guid isPermaLink="true">https://zenn.dev/kubo_programmer/articles/eddfe50ed191a2</guid><pubDate>Sun, 02 Jun 2024 08:50:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T9z5qZ7R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E6%258C%2581%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%259C%25E5%25A4%25AA%25E9%2583%258E%2520%257C%2520%25E7%25AA%25AA%25E7%2594%25B0%25E7%25A7%2580%25E5%2593%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwNzFmOWEyZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クボ太郎 | 窪田秀哉</dc:creator></item><item><title><![CDATA[LangChain で Fallbacks（Node.js）]]></title><description><![CDATA[
 はじめに
LLM を利用する場合、レートリミット、API のダウンタイムなど API の利用にまつわる問題が発生します。この記事では、問題が発生した際に対処する方法を記述します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/fallbacks/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
 
https://github.com/hayato94087/langchain-fallbacks...]]></description><link>https://zenn.dev/hayato94087/articles/688f78c6b3ead6</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/688f78c6b3ead6</guid><pubDate>Sun, 02 Jun 2024 06:48:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w59ENCve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A7%2520Fallbacks%25EF%25BC%2588Node.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[TypeScriptの学習で学生エンジニアがやったこと]]></title><description><![CDATA[!
この記事は6月から学習し始めているため、現在も更新中です。

!
筆者は、プログラミングを学習するのは初めてです。

「JavaScriptとは」「TypeScriptとは」については、ふんわり知っている前提で書いています

 Lv0: JavaScriptの基礎を学んでみよう
JavaScriptの記述等の学習をしてみます。
友人から「このサイトは、練習問題が豊富でやってて楽しいんじゃない？」とオススメして頂いたので、こちらの学習を進めてみます！
https://ja.javascript.info
学びながら「おもしろいな」と思ったもののみを
スクラップでアウトプットしてみました...]]></description><link>https://zenn.dev/nka21/articles/f278800b37193d</link><guid isPermaLink="true">https://zenn.dev/nka21/articles/f278800b37193d</guid><pubDate>Sun, 02 Jun 2024 05:25:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--awFXObnP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naoki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmOGM3MWM5YTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>naoki</dc:creator></item><item><title><![CDATA[LangChain で外部からデータを参照 後編（Node.js）]]></title><description><![CDATA[
 はじめに
この記事では、公式のドキュメントを使いながら LangChain で外部から入力された情報を参照する方法を紹介します。こちらが記事です。チャットモデル以外に知識をあたえるために外部データを読み込ませて応答を拡張できます。本記事ではその方法について記述します。
https://js.langchain.com/v0.2/docs/how_to/chatbots_retrieval/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com...]]></description><link>https://zenn.dev/hayato94087/articles/bb858a6dabb286</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/bb858a6dabb286</guid><pubDate>Sun, 02 Jun 2024 02:58:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zfh-4ewd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%2520%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2588Node.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[LangChain で外部からデータを参照 前編（Node.js）]]></title><description><![CDATA[
 はじめに
この記事では、公式のドキュメントを使いながら LangChain で外部から入力された情報を参照する方法を紹介します。こちらが記事です。チャットモデル以外に知識をあたえるために外部データを読み込ませて応答を拡張できます。本記事ではその方法について記述します。
https://js.langchain.com/v0.2/docs/how_to/chatbots_retrieval/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com...]]></description><link>https://zenn.dev/hayato94087/articles/3026b7ba9aa1c2</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/3026b7ba9aa1c2</guid><pubDate>Sun, 02 Jun 2024 02:57:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZjKUGoiv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%2520%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2588Node.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[迷路アルゴリズムであっさりダンジョン3種類!!]]></title><description><![CDATA[
 定番迷路アルゴリズム
いかにもゲーム制作に使えそうな、定番の迷路アルゴリズム3種類をまとめてみます。
(迷路アルゴリズム御三家)

壁倒し法
穴掘り法
壁伸ばし法

ここでは、迷路の描画にOpenProcessingを利用します。
使い方に関しては、p5.jsをかじる本を参考にして頂けると幸いです。

 壁倒し法
最初に紹介するのは最もシンプルな"壁倒し法"です。
この手法は、その名の通り"壁を倒す"アルゴリズムです。

壁倒し法
壁倒し法の手順は次の通りです。

迷路の周囲に外壁を作る
外壁より内部のスペースに"柱"を1マスおきに並べる
並べた"柱"それぞれを起点に"上下左右"いず...]]></description><link>https://zenn.dev/sdkfz181tiger/articles/208681ce5a4d87</link><guid isPermaLink="true">https://zenn.dev/sdkfz181tiger/articles/208681ce5a4d87</guid><pubDate>Sun, 02 Jun 2024 01:49:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IDXU7wzX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25BF%25B7%25E8%25B7%25AF%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25A7%25E3%2581%2582%25E3%2581%25A3%25E3%2581%2595%25E3%2582%258A%25E3%2583%2580%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B33%25E7%25A8%25AE%25E9%25A1%259E%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2598%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxM2MwMGU4MGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かじる</dc:creator></item><item><title><![CDATA[JavaScriptのDOMについて（DOM操作の基礎から簡単なアプリ制作まで）]]></title><description><![CDATA[DOMとはJavaScriptとHTMLを繋げる仕組み・概念のことで、
特に、HTMLコーディングによるWebサイト制作などでJavaScriptで動きをつける、といった際にDOMの操作は必須の知識になると思います。
この記事では、備忘録を兼ねてJavaScriptのDOM操作に関して簡単に紹介し、最後には簡単なアプリを作成しようと思います。

 DOMとは
正式にはDocument Object Modelといい、一言で言えばJavaScriptからHTML等のマークアップ言語で書かれたドキュメントにアクセスするための仕組みのことです。
HTMLでコーディングされたWebサイトでボタン...]]></description><link>https://zenn.dev/ryo_hajime/articles/9dc46678289f09</link><guid isPermaLink="true">https://zenn.dev/ryo_hajime/articles/9dc46678289f09</guid><pubDate>Sun, 02 Jun 2024 01:24:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--skqzB54B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEDOM%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25EF%25BC%2588DOM%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryoichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxYTIyODY2YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryoichi</dc:creator></item><item><title><![CDATA[Wasm Type Reflection JS APIのPolyfillを書いた]]></title><description><![CDATA[WebAssembly Type Reflection JS APIと呼ばれるAPIのPolyfillを書いたので、その紹介です。WebAssemblyでスレッドを扱う際に少し便利になります。
https://github.com/swiftwasm/wasm-imports-parser

 WebAssembly Type Reflection JS APIとは
WebAssembly Type Reflection JS APIは、WebAssemblyモジュールからimport/exportされる関数のシグネチャやメモリサイズの情報を取得するためのJavaScript APIです...]]></description><link>https://zenn.dev/katei/articles/wasm-js-types-polyfill</link><guid isPermaLink="true">https://zenn.dev/katei/articles/wasm-js-types-polyfill</guid><pubDate>Sat, 01 Jun 2024 11:14:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gwLhe3ji--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wasm%2520Type%2520Reflection%2520JS%2520API%25E3%2581%25AEPolyfill%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kateinoigakukun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1MGZhOTJhOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kateinoigakukun</dc:creator></item><item><title><![CDATA[Safari 通知権限チェック処理エラー解消メモ]]></title><description><![CDATA[
 エラーの内容
 Notification prompting can only be done from a user gesture.


 問題のあるコード
'use client';

import { useEffect, useState } from 'react';

const useNotificationPermissionStatus = () =&gt; {
  const [notificationPermissionStatus, setNotificationPermissionStatus] =
    useState('');

  useEffe...]]></description><link>https://zenn.dev/chenmiaochaonp/articles/16417bd5498a76</link><guid isPermaLink="true">https://zenn.dev/chenmiaochaonp/articles/16417bd5498a76</guid><pubDate>Sat, 01 Jun 2024 10:13:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FcUuf2qs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Safari%2520%25E9%2580%259A%25E7%259F%25A5%25E6%25A8%25A9%25E9%2599%2590%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E5%2587%25A6%25E7%2590%2586%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E8%25A7%25A3%25E6%25B6%2588%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%2584%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMzYyMjVkY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えいこ</dc:creator></item><item><title><![CDATA[dynalist→Markdown→Typoraでプロットを整形して爆速で書き始める]]></title><description><![CDATA[https://dynalist.io/
私はCoCシナリオのプロットをDynalistで書いている。
これがまた楽で、これだけでCoCシナリオを書くときもある。
だが大体はTyporaと併用している。
そんなときに、Dynalistで書いたプロットをそのままTyporaに貼り付けて、シナリオを書く煩わしさを少し軽減できないかと考えた。
https://typora.io/
!
ちなみにTypora以外だと多分できない。VScodeも試したが、できなかった。
どちらでも使えるいい方法を見つけたらまた記事をかきたい。

https://bloglab.naenote.net/entry/d...]]></description><link>https://zenn.dev/bokudesu/articles/ea036a07646577</link><guid isPermaLink="true">https://zenn.dev/bokudesu/articles/ea036a07646577</guid><pubDate>Sat, 01 Jun 2024 06:26:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zLQphlAa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dynalist%25E2%2586%2592Markdown%25E2%2586%2592Typora%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2597%25E3%2581%25A6%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25A4%25E3%2581%25AF%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2pFcW5CUXZ2Snc1SVlTVERLUmQtYS1NeFpZTkFmR003bXQxSjdDekhDVml0Rj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たつはら</dc:creator></item><item><title><![CDATA[TextAliveAppApiで歌詞・コード・ビートをリアルタイムに取得する。]]></title><description><![CDATA[この記事ではTextAliveAppAPIを使って、楽曲から歌詞・コード・ビートを取得するシンプルな実装を紹介します。

 デモ


 実装

 環境構築
TextAliveAppAPIの事前準備
TextAliveAppApiを使用するには、開発者登録をしてTextAliveアプリを作成し、アプリトークンを取得する必要があります。

viteプロジェクトの作成、npmパッケージのインストール
npm create vite@latest プロジェクト名 -- --template vanilla-ts
npm i
npm i textalive-app-api

 歌詞・コード・ビート...]]></description><link>https://zenn.dev/makimura3329/articles/textalive-app-basic-20240527</link><guid isPermaLink="true">https://zenn.dev/makimura3329/articles/textalive-app-basic-20240527</guid><pubDate>Sat, 01 Jun 2024 04:40:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U3-4sftv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TextAliveAppApi%25E3%2581%25A7%25E6%25AD%258C%25E8%25A9%259E%25E3%2583%25BB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2593%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2520Makimura%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3ZTE1MjMxZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>🧟Makimura🧟</dc:creator></item><item><title><![CDATA[actions/github-scriptの型補完でJob Summariesの開発をラクにしよう]]></title><description><![CDATA[
 Job Summariesの自前実装が辛い
GitHub Actionsのワークフローで自前のJob Summariesを実装する際に、簡単なサマリーであればワークフローのyamlにインラインでスクリプトを記述すればいいのですが、複雑になってくると実装が辛い。。。
- name: Generate list using Markdown
  run: |
    echo "This is the lead in sentence for the list" &gt;&gt; $GITHUB_STEP_SUMMARY
    echo "" &gt;&gt; $GITHUB_STEP...]]></description><link>https://zenn.dev/ikoamu/articles/5b4c646376b60e</link><guid isPermaLink="true">https://zenn.dev/ikoamu/articles/5b4c646376b60e</guid><pubDate>Sat, 01 Jun 2024 03:07:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w2yDVgKp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:actions%252Fgithub-script%25E3%2581%25AE%25E5%259E%258B%25E8%25A3%259C%25E5%25AE%258C%25E3%2581%25A7Job%2520Summaries%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25AF%25E3%2581%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikoamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNDYwNWY1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikoamu</dc:creator></item><item><title><![CDATA[JavaScriptに出てくる「.then」ってなんだっけ？]]></title><description><![CDATA[
 .then
簡単にいうとJavaScriptで非同期処理を扱う際に使う表現でpromiseという仕組みに関連します。
巷でよく聞くAPIとはまさにこの非同期処理の取ってくる対象として扱われます。
promiseは「将来的に起こる結果を返す」ことを約束する仕組みです。
と、言われても頭に「？」が浮かぶと思います。
例えばネットワークを通じて東京の天気予報を取得するとします。
その天気予報の情報が返ってくるまで多少の時間がかかるので、その間に他の処理をしてしまおう！それを「非同期処理」と言います。
タイトルに戻りますが、.thenを使うと何がいいかというとpromiseが「完了したら、次...]]></description><link>https://zenn.dev/circlerc/articles/548542ffb13467</link><guid isPermaLink="true">https://zenn.dev/circlerc/articles/548542ffb13467</guid><pubDate>Sat, 01 Jun 2024 00:32:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fR-0CU-y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B%25E3%2580%258C.then%25E3%2580%258D%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2591%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%259F%25E3%2581%259F%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzYTg4OGU5NGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>生たら</dc:creator></item><item><title><![CDATA[Cheerp 3.0： Web用の最も先進的な C++ コンパイラ、 ライセンス提供開始]]></title><description><![CDATA[
本日 (March 14, 2023)、Web用C++コンパイラの最新メジャーリリースであるCheerp 3.0を発表できることを大変誇りに思います。
Cheerpの前リリース(Cheerp 2.7 )から1年以上が経過し、この新しいバージョンは、Webアプリケーションやゲームのためのプログラミング言語としてC++を使用することの最先端をもう一度動かすような新機能や最適化機能が満載です。
最も重要なことは、今回のリリースで、Cheerpのライセンスモデルに大きな変更を加えるということです。Cheerp 3.0から、すべてのコンパイラのコアコンポーネントとライブラリは、Apache 2....]]></description><link>https://zenn.dev/leaning_tech_jp/articles/d916e9c9818fa4</link><guid isPermaLink="true">https://zenn.dev/leaning_tech_jp/articles/d916e9c9818fa4</guid><pubDate>Fri, 31 May 2024 18:21:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ADXcTpj_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cheerp%25203.0%25EF%25BC%259A%2520Web%25E7%2594%25A8%25E3%2581%25AE%25E6%259C%2580%25E3%2582%2582%25E5%2585%2588%25E9%2580%25B2%25E7%259A%2584%25E3%2581%25AA%2520C%252B%252B%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2580%2581%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B9%25E6%258F%2590%25E4%25BE%259B%25E9%2596%258B%25E5%25A7%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leaning%2520Technologi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MmNjYWUyNWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leaning Technologies Japan (リーニングテクノロジー)</dc:creator></item><item><title><![CDATA[【Java script】基礎編：オブジェクト/メソッド/イベント/パラメータ/引数/イベントハンドラーとは]]></title><description><![CDATA[
 Java scriptとは
動的なWebページを作成する事のできるプログラミング言語


 java scriptの基本構文
!

 【基本構文】

基本構文（１）
// window（オブジェクト）のalert(メソッド)を用いて
// `Hello world`（パラメータ）を画面（ウィンドウ）に出す。
&lt;script&gt;
  window.alert('Hello World');
&lt;/script&gt;



基本構文（２）
// button（オブジェクト）のaddEventListener(メソッド)を用いて'click'(イベント）が実行されたら
//...]]></description><link>https://zenn.dev/code_journey_ys/articles/392e35adf180a2</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/392e35adf180a2</guid><pubDate>Fri, 31 May 2024 14:47:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pjo0DGJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%2520script%25E3%2580%2591%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%252F%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%252F%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%252F%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%252F%25E5%25BC%2595%25E6%2595%25B0%252F%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item></channel></rss>