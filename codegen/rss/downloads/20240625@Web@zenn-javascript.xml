<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 25 Jun 2024 12:03:51 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[設計手順、考え方]]></title><description><![CDATA[使う側を書いていく

要件定義の洗い出し

要件がきまってきたあたりで、
使われる側(ライブラリ側)を書いていく。
ライブラリ側は汎用的に書かないといけないので、
使う側の要件の変更をする場合がある
この繰り返し

 React Model

グローバルに(user, mine, usersなどの)ルートモデルを置きたい
それを各コンポーネントが自由に更新、読み込みしたい。
setXxxxがない。あってもルートのsetXxxxを更新するのは高負荷な気がする。
Thumbnail.tsなどクラスファイルをmodel/配下におきたい。


 fetch問題

子孫データをfetchするタイミ...]]></description><link>https://zenn.dev/llc_starhacks/articles/5410d900d7b7fa</link><guid isPermaLink="true">https://zenn.dev/llc_starhacks/articles/5410d900d7b7fa</guid><pubDate>Tue, 25 Jun 2024 11:02:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xm_e07RL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%25AD%25E8%25A8%2588%25E6%2589%258B%25E9%25A0%2586%25E3%2580%2581%25E8%2580%2583%25E3%2581%2588%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:llc_starhacks%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2QxODAxZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>llc_starhacks</dc:creator></item><item><title><![CDATA[AstroのContent CollectionsでMarkdown内のリンクをいい感じに表示する方法]]></title><description><![CDATA[
 やりたいこと
自分のサイトでは、ブログのコンテンツ管理に、Astro.jsのContent Collectionsという機能を使っています。
デフォルトでは、リンクをMarkdownに書いたときに、リンクカードが表示されません。
↓ こういうやつ

これをいい感じに表示できる方法を見つけたので残しておきます。

 unified.jsについて
Astoでは、Markdownをhtmlに変換するために、unified.jsというユーティリティが使われています。
https://unifiedjs.com/
これは、

Markdownをパースして木構造(mdast)に変換
Markdo...]]></description><link>https://zenn.dev/laddge/articles/bb7686a5371b5c</link><guid isPermaLink="true">https://zenn.dev/laddge/articles/bb7686a5371b5c</guid><pubDate>Tue, 25 Jun 2024 07:43:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tSbR2Ss5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E3%2581%25AEContent%2520Collections%25E3%2581%25A7Markdown%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Laddge%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lRZVVYcEw2NEJsUHpHZDV6aXlYWUZKOHFqNzVQcUczbjBEbjVCPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Laddge</dc:creator></item><item><title><![CDATA[Node.js]]></title><description><![CDATA[node.jsは、JavaScript（ブラウザ上でしか動作出来なかったプログラミング言語）をパソコン（OS）上で動作出来るようにしてくれる開発環境。
##パッケージ
package.jsonによって記述されるファイル、またはディレクトリのこと。
##モジュール
require機能で呼び出せるnode_modules内のファイルのこと。
reqiure機能で呼び出すには、以下の条件が必要です。
１．package.jsonを含むフォルダ。
２．index.jsがあるフォルダ内。
３．JavaScriptファイルであること。
]]></description><link>https://zenn.dev/denki/articles/c605e26af68fb6</link><guid isPermaLink="true">https://zenn.dev/denki/articles/c605e26af68fb6</guid><pubDate>Tue, 25 Jun 2024 07:28:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V0yvjO8H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Node.js%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259B%25BB%25E6%25B0%2597%25E5%25B7%25A5%25E4%25BA%258B%25E5%25A3%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2VGcGxjVWxDek5ENGxDR05zUENCSExsbm91Y1liRks0SEYwekVkUGZuS09PR2U5OD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>電気工事士からエンジニアへ</dc:creator></item><item><title><![CDATA[Temporalの近況(主にScopeを狭める話)]]></title><description><![CDATA[
 Temporal についておさらい
Temporal は新しく JavaScript の仕様として提案されている「日時を操作するための新しいグローバルオブジェクト」です。現在は Stage3 のプロポーザルとして細かい API などの形が協議されています。
https://github.com/tc39/proposal-temporal
Temporal は既存の Date オブジェクトにある次のような課題を解決するべく提案されました。

ユーザーの現地時間と UTC 以外のタイムゾーンはサポートされない
パーサーの動作の信頼性が低い
日付オブジェクトが何を指しているのかわかりづら...]]></description><link>https://zenn.dev/cybozu_frontend/articles/temporal-reduces-scope</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/temporal-reduces-scope</guid><pubDate>Tue, 25 Jun 2024 04:20:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zZaRr5ce--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Temporal%25E3%2581%25AE%25E8%25BF%2591%25E6%25B3%2581%2528%25E4%25B8%25BB%25E3%2581%25ABScope%25E3%2582%2592%25E7%258B%25AD%25E3%2582%2581%25E3%2582%258B%25E8%25A9%25B1%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Saji%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZGQ0NmY0YTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Saji</dc:creator></item><item><title><![CDATA[Typescript や分割代入を使った複雑な引数を解読する]]></title><description><![CDATA[分割代入はJavaScriptの機能で、オブジェクトのプロパティを個別の変数として取り出すことができる機能です。例えば
const user = { name: 'Bob', age: 20 };
// これを name = 'Bob', age = 20 という変数として取り出したい場合以下のようにして取ることができる

const name = user.name
const age = user.age

// これを分割代入を使うことで、以下のように変数を定義できる
const { name, age } = user;
console.log(name); // 'Bob'
c...]]></description><link>https://zenn.dev/surume3/articles/679e6f90511ffc</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/679e6f90511ffc</guid><pubDate>Tue, 25 Jun 2024 00:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cw0mpAU_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%2520%25E3%2582%2584%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[ユニバーサルクロスサイトスクリプティングとはなんぞや]]></title><description><![CDATA[どうもこんにちは、今回はユニバーサルクロスサイトスクリプティングという脆弱性について解説をしていきます。

最近LINEで以下の脆弱性が報告されたようで、iframe内から攻撃可能なXSSとはどういうことか?という相談が舞い込んできたためです。
https://jvn.jp/vu/JVNVU91384468/
スマホアプリ診断は更新が早いので実施していて楽しい反面、技術を追うのが大変ですね🥲
毎年API仕様がアップデートされるため、みなさまはスマホアプリは面倒くさがらず常に最新版にしておくことを推奨します。
この記事は普段脆弱性診断をしているような経験者を対象にしています。そのため、クロ...]]></description><link>https://zenn.dev/halkichisec/articles/20aeaac1101928</link><guid isPermaLink="true">https://zenn.dev/halkichisec/articles/20aeaac1101928</guid><pubDate>Mon, 24 Jun 2024 14:20:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T1JSH5Rb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B5%25E3%2583%25AB%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25AA%25E3%2582%2593%25E3%2581%259E%25E3%2582%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%258B%25E3%2581%258D%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwNmNiZGVhMTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はるきち</dc:creator></item><item><title><![CDATA[Mapbox Newsletter WEEKLY TIPSの解説 -「ズーム・レベルに応じて建物の色を変更」]]></title><description><![CDATA[
 はじめに
この記事は、先日配信されたMapbox NewsletterのWEEKLY TIPSで紹介されていた「ズーム・レベルに応じて建物の色を変更」についての解説です。このサンプルではMap#setPaintPropertyとExpressionsの使い方について例示しています。また、Newsletterの購読はこちらからお申し込みいただけます。
以下が本サンプルのデモです。


 コードを確認
まずExamplesのコードを見に行きましょう。
日本語サイト

英語サイト

基本的に同じコードですが、英語版はスタイルがMapbox Streets v12にアップグレードされているの...]]></description><link>https://zenn.dev/mapbox_japan/articles/e2203c6f1976d4</link><guid isPermaLink="true">https://zenn.dev/mapbox_japan/articles/e2203c6f1976d4</guid><pubDate>Mon, 24 Jun 2024 13:59:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DDYyIydc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mapbox%2520Newsletter%2520WEEKLY%2520TIPS%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%2520-%25E3%2580%258C%25E3%2582%25BA%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25BB%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2581%25AB%25E5%25BF%259C%25E3%2581%2598%25E3%2581%25A6%25E5%25BB%25BA%25E7%2589%25A9%25E3%2581%25AE%25E8%2589%25B2%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:OttyLab%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZWNmNDhhMWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhMGJmZWJmZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OttyLab</dc:creator></item><item><title><![CDATA[JavaアプリケーションをHTML5やWebAssembly/JavaScriptに変換できますか？]]></title><description><![CDATA[
一般的に信じられていることとは異なり、Javaはまだ完全に終わったわけではなく、特にソフトウェア業界では、全体で2番目に人気のあるプログラミング言語です。
非常に活発なコミュニティ、豊富なツールのエコシステム、膨大な数のライブラリとフレームワークがあり、後方互換性を保ちながら適応と進化が可能で（ほとんどの場合）、今でも業界で広く使われています。

 最新のエンタープライズ・アプリケーション
Javaはサーバーサイドやネイティブ・アプリケーションに最適な環境を提供しますが、最近のエンタープライズ・アプリケーション・クライアントはHTML5標準への移行が進んでいます。これは、ユーザーの要求...]]></description><link>https://zenn.dev/leaning_tech_jp/articles/c2a6ddf431364c</link><guid isPermaLink="true">https://zenn.dev/leaning_tech_jp/articles/c2a6ddf431364c</guid><pubDate>Mon, 24 Jun 2024 12:31:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bd_vkFgj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592HTML5%25E3%2582%2584WebAssembly%252FJavaScript%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leaning%2520Technologi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MmNjYWUyNWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leaning Technologies Japan (リーニングテクノロジー)</dc:creator></item><item><title><![CDATA[useMemoをなんとなくで使っていたので、ざっくりまとめてみました]]></title><description><![CDATA[
 useMemoとは

 概要

ReactHooksのひとつ
関数の計算結果を保持するためのフック
何回行っても結果が同じ値を保存して再取得します
パフォーマンス向上のために使用されます

const cachedValue = useMemo(calculateValue, dependencies)

 引数


calculateValue :キャッシュしたい値を計算する関数。純関数[1]である必要があります。

dependencies :calculateValue 内で参照されるすべてのリアクティブ値の配列。これが変わると再計算されます。

const result = ...]]></description><link>https://zenn.dev/vertz/articles/a10418f4d236d7</link><guid isPermaLink="true">https://zenn.dev/vertz/articles/a10418f4d236d7</guid><pubDate>Mon, 24 Jun 2024 06:28:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fWQhckZI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useMemo%25E3%2582%2592%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2590%25E3%2583%25BC%25E3%2583%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODQ3MmM1MjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>バーツ</dc:creator></item><item><title><![CDATA[Prismaで実行されるSQLを確認する]]></title><description><![CDATA[export const prisma = new PrismaClient({
  log: ["query"],
});
参考
https://www.prisma.io/docs/orm/prisma-client/observability-and-logging/logging
https://www.prisma.io/docs/orm/reference/prisma-client-reference#log-levels
]]></description><link>https://zenn.dev/purratto/articles/011e0392a746d4</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/011e0392a746d4</guid><pubDate>Mon, 24 Jun 2024 03:09:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xGSnXQtZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258BSQL%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[Uint8ArrayやArraryBufferやBufferとか]]></title><description><![CDATA[JavaScriptでbinaryを表現するものとしてUint8Array / ArraryBuffer / Bufferとか色々あってそれぞれどう違うんだ？と思ったので改めて調べてみました。

 それぞれの概念について
まずは、それぞれの概念について軽く調べていきます

 ArrayBuffer
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer
ArrayBufferはNode.js環境でもブラウザ環境でもどちらでも使用することが可能で、生のバイナリーデータ...]]></description><link>https://zenn.dev/porokyu32/articles/79b81a46cbba2e</link><guid isPermaLink="true">https://zenn.dev/porokyu32/articles/79b81a46cbba2e</guid><pubDate>Sun, 23 Jun 2024 15:33:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--icgpfzoe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Uint8Array%25E3%2582%2584ArraryBuffer%25E3%2582%2584Buffer%25E3%2581%25A8%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:porokyu32%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M1c4QWNfYzdFblBBak1hNEFmWUIxNkdyTHI5N1cyS3A1NHVwTEI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>porokyu32</dc:creator></item><item><title><![CDATA[XRPLのペイメントチャネルについて知っておくべきこと3選]]></title><description><![CDATA[今回は私がペイメントチャネル（Payment Channel）を触る中で気がついたことについてまとめてみました。

 ペイメントチャネルとは
ペイメントチャネルは、送金者と受領者がオフチェーンで取引を行うための手段です。
概念としてはチェーンを問わず存在するものとなりますが、XRPLでは、ネイティブ機能としてメインネットで使用できる「高度な支払い機能」のひとつで、アプリケーション開発においては、様々なアイデアを実現できる強力な機能だと思います。
また、XRPL界隈では、略して「ペイチャン」と呼ばれています。

 SettleDelay フィールド
SettleDelayフィールドは資金が...]]></description><link>https://zenn.dev/nabe3/articles/d8f99bf4bb4399</link><guid isPermaLink="true">https://zenn.dev/nabe3/articles/d8f99bf4bb4399</guid><pubDate>Sun, 23 Jun 2024 14:23:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DRztzbt8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XRPL%25E3%2581%25AE%25E3%2583%259A%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2581%25E3%2583%25A3%25E3%2583%258D%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2581%2593%25E3%2581%25A83%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nabe3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjM2ZDU5MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nabe3</dc:creator></item><item><title><![CDATA[HTMX入門【はじめからそうやって教えてくれればいいのに！】]]></title><description><![CDATA[
 はじめに
この記事の内容は、以下の動画でも解説しています。アニメーションでわかりやすくなっているので、ぜひ見てみてください。他にもWebに関する解説動画を投稿しているので、気になる人はチャンネル登録よろしくお願いします！
https://youtu.be/B4X7Pyj4sQY?si=_rOISbwyatYOP52f

 HTMXとは？
HTMX とは、一言で言うと、JavaScriptを書かずに動的なページを簡単に作成できるライブラリのことです。

htmx is a library that allows you to access modern browser features...]]></description><link>https://zenn.dev/ak/articles/735e05d2ba8da0</link><guid isPermaLink="true">https://zenn.dev/ak/articles/735e05d2ba8da0</guid><pubDate>Sun, 23 Jun 2024 13:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W7YCFvKJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTMX%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%258B%25E3%2582%2589%25E3%2581%259D%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258C%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AB%25EF%25BC%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YTNhNmZhNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki</dc:creator></item><item><title><![CDATA[Try catch文の意味について簡単に説明]]></title><description><![CDATA[
 導入
try catch文って何のためにあるのだろうと思ったことはありませんか？
手短に説明します。

 使用場面
try catchで予期しないエラーが発生する可能性があるコードに使う
下記のような場合(絶対ではないが)



使用場面
データベースからデータをとってくるとき
server側の処理




 コードで考える
平均を求めるプログラムを考えます
y:得点
x:人数
try{
if(x===0){
throw new Error('0が入っている');
}
let avg:number=y/x;
console.log('平均点'+avg);
}catch(e){
con...]]></description><link>https://zenn.dev/maiamitorio/articles/fcee42472410af</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/fcee42472410af</guid><pubDate>Sun, 23 Jun 2024 12:32:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uyjeIEwt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Try%2520catch%25E6%2596%2587%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[【JS】スクロール量に応じて矢印が進む]]></title><description><![CDATA[
 スクロール量に応じて進むバーを実装してみました。
https://codepen.io/mdvlzqqm-the-lessful/pen/ExzXmVa

 JSの実装

スクロールされたらcontainerの高さを取得
containerの高さからビューポートの高さを引いて最大のスクロール量を取得
スクロール量が最大のスクロール量の何％かを計算して、その値を矢印のtopに設定する。
footerの直前で止めたいので、スクロール量の割合が100％を超えたら100を設定するようにする。

]]></description><link>https://zenn.dev/nami_06063/articles/d9a6919b7be690</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/d9a6919b7be690</guid><pubDate>Sun, 23 Jun 2024 12:32:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1fPBl6xQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E9%2587%258F%25E3%2581%25AB%25E5%25BF%259C%25E3%2581%2598%25E3%2581%25A6%25E7%259F%25A2%25E5%258D%25B0%25E3%2581%258C%25E9%2580%25B2%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[【JavaScript】if文を条件演算子(三項演算子)で書いてみよう]]></title><description><![CDATA[
 条件演算子とは
条件演算子とは条件分岐を記述するための演算子で、次のような構文で書けます。
条件式 ? 条件式が真の時の式 : 条件式が偽の時の式
このように3つのオペランド(被演算子)を持つことから、三項演算子とも呼ばれます。

 条件演算子とif文の違い
条件分岐といえば、まずif文が思い浮かびますよね。
では、条件演算子とif文は何が違うのでしょうか？
１つ目の違いは、書き方です。
例として、テストの点数が80点未満の場合"不合格"、80点以上の場合"合格"と出力する関数を2つの書き方で書いてみます。
// if文 -------------------------------...]]></description><link>https://zenn.dev/ys37799665/articles/js-conditional-operator</link><guid isPermaLink="true">https://zenn.dev/ys37799665/articles/js-conditional-operator</guid><pubDate>Sun, 23 Jun 2024 12:29:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--00tJUXf_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591if%25E6%2596%2587%25E3%2582%2592%25E6%259D%25A1%25E4%25BB%25B6%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2528%25E4%25B8%2589%25E9%25A0%2585%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2529%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4NTVhNTk3NzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YS</dc:creator></item><item><title><![CDATA[ReactNativeでGPTからのレスポンスをストリーミングで受け取る方法]]></title><description><![CDATA[
 ストリーミングを正式にサポートしているライブラリや方法がない...
メジャーな二つの方法はどちらも使えませんでした。

Axiosはクライアント側でのストリーミング形式をサポートしていない
fetchだと可能だが、出来るのはWebだけでReactNativeでは出来ない模様（普通のReact.jsと使われているJSのエンジンの違いによるものとのこと）

実際に試してみましたがエラーになりました。


他に方法はないのか探してみたところ一つだけありました。
react-native-communityから出しているreact-native-fetch-apiを使うことでストリーミングで...]]></description><link>https://zenn.dev/headwaters/articles/cc110e5b6866e8</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/cc110e5b6866e8</guid><pubDate>Sun, 23 Jun 2024 11:41:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aMuKgKSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReactNative%25E3%2581%25A7GPT%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ikebowsan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNTM1ZTc4OGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikebowsan</dc:creator></item><item><title><![CDATA[Mac OSでファイル名の濁点が一文字として扱われる場合の対処法（JavaScript編）]]></title><description><![CDATA[
 はじめに
先日、JavaScriptでファイルアップロード処理を実装していたところ、ファイル名が以下のように表示されてしまいました。
アッフ゜ ロート゛ したファイル.csv
元のファイル名は「アップロードしたファイル.csv」だったのですが、濁点、半濁点が一文字として扱われている状態です。今回はこちらをJavaScript(TypeScript)で解消する方法をまとめました。

 前提条件
・Mac OSのPCを使っている
・アップロードしたファイルはuploadedFileで保持している

 解消方法
uploadedFile.name.normalize('NFC');

//...]]></description><link>https://zenn.dev/hrtr/articles/6a238878bfd08e</link><guid isPermaLink="true">https://zenn.dev/hrtr/articles/6a238878bfd08e</guid><pubDate>Sun, 23 Jun 2024 05:15:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nNNpC7pf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%2520OS%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2581%25AE%25E6%25BF%2581%25E7%2582%25B9%25E3%2581%258C%25E4%25B8%2580%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%2589%25B1%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%25EF%25BC%2588JavaScript%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HRTR-86%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MzMxZGQyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HRTR-86</dc:creator></item><item><title><![CDATA[JavaScriptエコシステムに関するワードについて調べてまとめてみた]]></title><description><![CDATA[JavaScriptの文法は一通り学んだので、JavaScriptがブラウザで動く裏側の世界に目を向けてみます。

 パッケージ管理

 モジュール


説明: モジュールとは、独立した機能を持つコードの集合体。コードを論理的に分割し、再利用を容易にする。

背景: 昔のJavaScriptは、名前空間（変数のようなもの）が分けられていなかったため、複数人で大きなファイルで作業する際に、変数名や関数名が衝突しやすく、バグの温床になっていた。

代表例:

ES Modules (import/export)
CommonJS (require/module.exports)




 パ...]]></description><link>https://zenn.dev/surume3/articles/17d44d42c8b4fb</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/17d44d42c8b4fb</guid><pubDate>Sun, 23 Jun 2024 01:22:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u4v6CJfJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[オブジェクトについて]]></title><description><![CDATA[
 オブジェクトについて知らないことがあったのでまとめました

 オブジェクトのメソッドを設定する方法
const object={
method:()=&gt;{
console.log('Hello World');
}
}

object.method    // Hello World

 省略可能なプロパティを設定
const object={
name:string,
password?:string
method?:()=&gt;{
console.log('hello')
}
}
const information:object={
name:"Apple"
}

 オブ...]]></description><link>https://zenn.dev/maiamitorio/articles/f270605bdaf4e1</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/f270605bdaf4e1</guid><pubDate>Sun, 23 Jun 2024 01:03:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ov1vcuai--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item></channel></rss>