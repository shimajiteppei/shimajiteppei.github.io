<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 01 Jun 2024 12:03:12 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[VSCodeでSpringBoot+Kotlinの環境を整えてみる]]></title><description><![CDATA[
 はじめに
VSCode で SpringBoot + Kotlin の開発が可能なのか調べるために簡単なログイン機能と WebAPI を実装し確かめてみた結果をまとめます。
結論としてはゴリゴリ開発するのは難しいと思いました。
確かめるために作ったプロジェクト
https://github.com/openriceworks/spring-kotlin-demo
ちなみに... IntelliJ を使わない理由
Kotlin を書く際に一番いいツールは間違いなく IntelliJ だと思います。開発元が同じですし。
IntelliJ の無料版では Kotlin/Java はサポートさ...]]></description><link>https://zenn.dev/t_k/articles/c946e5fc71a47e</link><guid isPermaLink="true">https://zenn.dev/t_k/articles/c946e5fc71a47e</guid><pubDate>Sat, 01 Jun 2024 10:41:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Jc6YYU61--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7SpringBoot%252BKotlin%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk_or%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEVIc2lmbTRQY1BDXzA0NHVSRi0tMkhKbW1QSXVKZEZpQUEtUkU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk_or</dc:creator></item><item><title><![CDATA[VSCodeでKotlinの開発環境構築手順]]></title><description><![CDATA[
 前提条件

言語はKotlinを使用すること
Gradleを利用すること
brewが使用できること

brewが入っていない方はこちらを参照使用できる状態にしてください




 拡張機能のインストール
VScodeで拡張機能（以下の項目）をインストールしていきます。

Kotlin
Kotlin Language
Kotlin Formatter




 KotlinコンパイラとGradleインストール

// TODO brewのアップデートは必要であれば行う
$ brew update
$ brew install kotlin
$ brew install gradle
※...]]></description><link>https://zenn.dev/yt_hsgw/articles/ca77fb7be734a5</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/ca77fb7be734a5</guid><pubDate>Sat, 01 Jun 2024 06:49:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0B_jxH6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7Kotlin%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item><item><title><![CDATA[共通Activityを作ってみた]]></title><description><![CDATA[
 どういうものか
AppCompatActivityを拡張したActivity

 何ができるか
キーボード表示/非表示、ダイアログ、ナビゲーションバー表示/非表示などをまとめたActivity。

 詳細

 実装
open class UICommonActivity : AppCompatActivity() {
    companion object{
        /** ログタグ */
        private val LOG_TAG = "UICommonActivity"
        /** ヘッダー上部の余白 */
        private val...]]></description><link>https://zenn.dev/yt_hsgw/articles/da6eaa572a8ed6</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/da6eaa572a8ed6</guid><pubDate>Sat, 01 Jun 2024 06:45:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GFdZ3Cnp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25B1%25E9%2580%259AActivity%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item><item><title><![CDATA[Kotlin × Spring Bootでサーバー実装するための環境構築]]></title><description><![CDATA[
 参考文献

Kotlin × Spring Boot × gRPC による RPC サーバの実装
Quick start


 環境



タイトル
内容




macOS
Sonoma 14.4.1(M1)




 手順

 1. Spring Initializrの設定


 2. build.gradleの実装
plugins {
    id("org.springframework.boot") version "2.1.6.RELEASE"
    id("org.jetbrains.kotlin.jvm") version "1.3.21"
    id("org....]]></description><link>https://zenn.dev/yt_hsgw/articles/a4d9582733c367</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/a4d9582733c367</guid><pubDate>Sat, 01 Jun 2024 06:01:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uAMmbhXv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520%25C3%2597%2520Spring%2520Boot%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item><item><title><![CDATA[Ktor のハンドラーを書くときに runBlocking するな]]></title><description><![CDATA[
 TL;DR

Ktor で、リクエストを受け付けたら postgres につないで pg_sleep(3) するだけのアプリを作った

pg_sleep(3) を runBlocking で囲うか withContext で囲うかによって、大量リクエストをした場合の実行時間に差が出る

withContext を使え


 確認方法
以下のような Ktor のハンドラーを用意してアプリを動かす。
※ Ktor 2.3.11
※ Exposed 0.51.0
これで http://localhost:8080/runblocking/3 と http://localhost:8080/...]]></description><link>https://zenn.dev/m_takehara/articles/7e3c60a56b5912</link><guid isPermaLink="true">https://zenn.dev/m_takehara/articles/7e3c60a56b5912</guid><pubDate>Sat, 01 Jun 2024 04:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x4AMPWlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ktor%2520%25E3%2581%25AE%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%2520runBlocking%2520%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m_takehara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMZ2djVjJ2UGVpNGlNY2tvbVBTRzNzZm45Q3M2UGY2SkVza1Z4bFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>m_takehara</dc:creator></item><item><title><![CDATA[KotlinとSwiftで日付をいじってみる]]></title><description><![CDATA[株式会社バニッシュ・スタンダードで提供している「STAFF START」というサービスのアプリ開発を担当している中本です。私事ですが、岩手県からフルリモートで参加してます。ちょっと前までは鶯一辺倒だったのですが、時鳥の鳴き声も聞こえはじめ、そろそろ梅雨かと憂鬱になっているところです。
私、普段はAndroidの開発を担当していますが、前社でiOS開発も行ったことがありました。前々から「AndroidだけでなくiOSもきちんと開発できるエンジニアになりたい！」と思っていたのですが、新機能の実装時、iOS開発を担当させてもらえることになりました。その際、日付を操作する必要があったのですが、S...]]></description><link>https://zenn.dev/vs_blog/articles/39541701b4bb47</link><guid isPermaLink="true">https://zenn.dev/vs_blog/articles/39541701b4bb47</guid><pubDate>Wed, 29 May 2024 01:31:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ed3qcI2C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25A8Swift%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E3%2581%2584%25E3%2581%2598%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25B8%25AD%25E6%259C%25AC%25E5%2581%25A5%25E5%25A4%25AA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOTFhMjZiZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2590%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSldHVWczZUV1SnhNbnlQVS1ycHhvR3JINkxHR3NmZVRDN3c4bzEtUWZXX1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>中本健太</dc:creator></item><item><title><![CDATA[Jetpack compose で constraint layout]]></title><description><![CDATA[前回の記事はこちら
https://zenn.dev/heartrails/articles/6d2dae5157436c
前回はレイアウト組むところでカードの高さを固定にしてちょっとズルをしてたので、色々な端末フォントサイズなどに対応できるようにもう少し工夫しました。

 前回のレイアウトからの改善したいところ

フォントサイズや表示サイズを大きくした場合に、途中でレイアウトが見切れないようにしたい
カードの高さをフォントサイズに合わせて可変にするので、上に被さってくる AnimatedVisibility 部分をカード高さピッタリに合わせたい


 Constraintlayout
...]]></description><link>https://zenn.dev/heartrails/articles/205a8867561963</link><guid isPermaLink="true">https://zenn.dev/heartrails/articles/205a8867561963</guid><pubDate>Tue, 28 May 2024 11:17:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZoJygyyS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520compose%2520%25E3%2581%25A7%2520constraint%2520layout%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:maripiyo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0ODIyMDRiZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258F%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25BA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2plcElLTG9ZR1NIcnBUOEFyVkkxS2w5R2tkZFkxMEpBYWNjTWo5Qmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maripiyo</dc:creator></item><item><title><![CDATA[KotlinでUnion Typeを使いこなそう]]></title><description><![CDATA[!
この記事は毎週必ず記事がでるテックブログ "Loglass Tech Blog Sprint"の41週目の記事です！ 1年間連続達成まで 残り 12 週 となりました！


 はじめに
こんにちは、株式会社ログラスでエンジニアをしています、Kyosukeです。
私は前職では主にTypescriptでフロントエンド・バックエンドのどちらも開発を行っていたのですが、ログラスではフロントエンドにTypescript、バックエンドにKotlinを使用しています。
そしてKotlinを書いていると、定期的にTypeScriptで言う、Union Typeを使いたくなることがあります。
そこで、...]]></description><link>https://zenn.dev/loglass/articles/46be7f140a60bd</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/46be7f140a60bd</guid><pubDate>Mon, 27 May 2024 00:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c_yWO4WT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25A7Union%2520Type%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kyosuke%2520Awata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzYmYxMDc5MDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kyosuke Awata</dc:creator></item><item><title><![CDATA[KotlinConf 2024　個人的まとめ]]></title><description><![CDATA[2024年5月22日~24日にデンマークのコペンハーゲンでKotlinコミュニティーのカンファレンス、KotlinConf 2024が行われました。
この記事は、ライブストリームのアーカイブを視聴し、内容について気になった部分をピックアップし、個人的にまとめたものです。
(内容は精査していますが解釈のミスで誤っている部分があるかもしれません。もし、内容に誤りがあった場合はコメントでご指摘頂けると幸いです)

 Opening Keynote
https://www.youtube.com/live/Ar73Axsz2YA?si=rP-dG8eWuqER7S11

 Opening Tal...]]></description><link>https://zenn.dev/og1/articles/a5adad5774f7c1</link><guid isPermaLink="true">https://zenn.dev/og1/articles/a5adad5774f7c1</guid><pubDate>Sat, 25 May 2024 07:15:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xnbPnsBN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:KotlinConf%25202024%25E3%2580%2580%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OGI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjZDMzOWJmYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OGI</dc:creator></item><item><title><![CDATA[Androidで環境変数を使用する]]></title><description><![CDATA[
 はじめに
今回アプリを作成するにあたり環境変数をいつものように.envファイルで管理しようとした際に他の方法でいいものがあったためまとめておきます。

 実装

 環境変数の用意
Androidにはデフォルトでlocal.propertiesというファイルが用意されています。
こちらが.envの代わりとして使用することができます。

↑ここにあります
その中に.envファイルと同じように記述します。

local.properties
~~元からあるコード~~
USERNAME=user
PASSWORD=pass


 ビルド時に生成されるように
次にGradleを編集していきます...]]></description><link>https://zenn.dev/nenfa/articles/67e4112bfc9665</link><guid isPermaLink="true">https://zenn.dev/nenfa/articles/67e4112bfc9665</guid><pubDate>Fri, 24 May 2024 08:08:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NO4QxqWC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B4%25E6%2599%25AE%2540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDc2ZDJmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>年普@</dc:creator></item><item><title><![CDATA[ログラスの非同期処理基盤の設計と導入]]></title><description><![CDATA[!
この記事は毎週必ず記事がでるテックブログ "Loglass Tech Blog Sprint" の  40週目の記事です！
1年間連続達成まで 残り 13 週 となりました！


こんにちは、ログラスでエンジニアをしております南部です。
唐突ですが、みなさんは「非同期処理」の実装を行っていますか？
非同期処理とは、プログラムの処理を他の処理と並行して行う方法です。これにより、ユーザーの操作がブロックされることなく、バックグラウンドで時間のかかる処理を実行することができます。
Loglassではユーザーの大量のデータを取り扱うこともあり、非同期処理を多く利用しています。
今までは単一の...]]></description><link>https://zenn.dev/loglass/articles/51447768d35958</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/51447768d35958</guid><pubDate>Thu, 23 May 2024 02:57:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tAc-fuGE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E5%259F%25BA%25E7%259B%25A4%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2598%25E3%2583%25BC%25E3%2581%258A%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2IwODYzNzYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じーおー</dc:creator></item><item><title><![CDATA[ChromeCustomTabsってなんすか？]]></title><description><![CDATA[
 ChromeCustomTabsってなんなの？

アプリ開発者がカスタマイズされたブラウザ エクスペリエンスをアプリ内に直接追加できるようにする Android ブラウザーの機能
アプリ内の画面としてウェブコンテンツを表示する機能
Webコンテンツを表示する画面のUIを触れる機能
Chromeのセキュリティ機能とプライバシー保護を継承しているためWebViewよりも安全
2015年くらいに登場したけどあまり流行ってない機能
正式名称はCustomTabsIntent
（ここではChromeCustomTabsで基本書きます）
WebViewの改良版というより、異なる目的で使用されるも...]]></description><link>https://zenn.dev/tsumire_mirise/articles/8eac7690dc3bbc</link><guid isPermaLink="true">https://zenn.dev/tsumire_mirise/articles/8eac7690dc3bbc</guid><pubDate>Tue, 21 May 2024 08:50:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gDdSVmzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChromeCustomTabs%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%25BF%25E3%2582%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwNDA1MzdjYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つみれ</dc:creator></item><item><title><![CDATA[KMP Jetpack Compose で animation]]></title><description><![CDATA[LazyList で並べた Card にアニメーションを入れる。
Card 上に配置されたボタンをタップすると、アニメーション実行。
出来上がり画面


 AnimatedVisibility を使います
https://developer.android.com/develop/ui/compose/animation/composables-modifiers
の記載通り

 コード

 カード全体

ボタンのところ onClick で visible のステートを変更する

LaunchedEffect で enter -&gt; exit するように調整。（これがないと1回タップ...]]></description><link>https://zenn.dev/heartrails/articles/6d2dae5157436c</link><guid isPermaLink="true">https://zenn.dev/heartrails/articles/6d2dae5157436c</guid><pubDate>Thu, 16 May 2024 10:23:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DZP2hiOx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:KMP%2520Jetpack%2520Compose%2520%25E3%2581%25A7%2520animation%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:maripiyo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0ODIyMDRiZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258F%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25BA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2plcElLTG9ZR1NIcnBUOEFyVkkxS2w5R2tkZFkxMEpBYWNjTWo5Qmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maripiyo</dc:creator></item><item><title><![CDATA[AndroidでBLEを取得する]]></title><description><![CDATA[
 はじめに
BLEの仕様や取得がややこしかったのでまとめておきます。

 1.BLEについて

 1.1概要
Bluetooth Low Energyの略で、低電力で通信が可能なものです。
BLE機器は

セントラル機器
ペリフェラル機器

に分かれます。
セントラル機器はスマホ等のBluetooth機器に接続する側の機器(親機)
ペリフェラル機器はイヤホン等の接続される側の機器です。(子機)
セントラル機器はスキャンという動作を行いペリフェラル機器が発しているアドバタイズ信号を検出することにより周囲にあるBluetooth機器を検出しています。
検出しただけでは通信は確立しておらずG...]]></description><link>https://zenn.dev/nenfa/articles/a721d0bd211257</link><guid isPermaLink="true">https://zenn.dev/nenfa/articles/a721d0bd211257</guid><pubDate>Tue, 14 May 2024 08:29:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GYIG9YKx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7BLE%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B4%25E6%2599%25AE%2540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDc2ZDJmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>年普@</dc:creator></item><item><title><![CDATA[Kotlinのout/inを整理してみた]]></title><description><![CDATA[
 モチベーション
そもそも整理してみようと思ったきっかけは、下記のようなケースでコンパイルエラーが出るな・・、あまりGenericsを理解できていなさそうだったので色々調べてみようと思いました。

 コンパイルエラーのケース

もともとやりたかったこと（コンパイルエラー）
fun xEvent (flow: MutableSharedFlow&lt;Any&gt;) {
    // emitしたい
}

val stringFlow = MutableSharedFlow&lt;String&gt;()
xEvent(flow = stringFlow) // コンパイルエラーになる...]]></description><link>https://zenn.dev/matsumaru/articles/fe81dd2d9039b5</link><guid isPermaLink="true">https://zenn.dev/matsumaru/articles/fe81dd2d9039b5</guid><pubDate>Tue, 14 May 2024 01:03:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yNbsN-6F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25AEout%252Fin%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%25A4%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p0cy1OSHdmSkxkLVlXbkh5VGFNWHdtUTV0NUdsWlVtUXZvWmNwTmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まつまる</dc:creator></item><item><title><![CDATA[Compose Multiplatformを日本一レベルで使い込んだかもしれないので知見共有]]></title><description><![CDATA[こんにちは！sugitaniと申します。
Black Cat Carnival という新型SNSを開発中です。
リリースはまだ先なのですがティザーサイトを先日公開しました
Black Cat CarnivalはiOS/Androidアプリで、Compose Multiplatformを使って開発をしています。ティザーサイトではWasmを使い、サービスを体験できるBlack Cat Carnival Simulatorも公開しています。是非お試しください

https://bcc.cc/ja/simulator
このシミュレーターはシミュレーターとして作ったものではなく、一人で開発してる都...]]></description><link>https://zenn.dev/bcc/articles/2784001f75c0e2</link><guid isPermaLink="true">https://zenn.dev/bcc/articles/2784001f75c0e2</guid><pubDate>Mon, 13 May 2024 04:59:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D8r2OfGo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Compose%2520Multiplatform%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E4%25B8%2580%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A0%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E7%259F%25A5%25E8%25A6%258B%25E5%2585%25B1%25E6%259C%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sugitani%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwYmM4NTk3YjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Black%2520Cat%2520Carnival%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYzFhYWI0MGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sugitani</dc:creator></item><item><title><![CDATA[MVVMとMVIの違いを一度で理解する]]></title><description><![CDATA[
 オリジナル記事の作成者へのクレジット
この記事はPhill Lackner氏のビデオを参考にして作成しました。オリジナルビデオは以下のリンクからご覧いただけます:
https://www.youtube.com/watch?v=b2z1jvD4VMQ


 はじめに
ネイティブAndroid開発を学ぶ際には、MVVMとMVIという用語が避けて通れないですね。一部の人々はMVVMを使うことを絶対に主張し、他の人々はMVIがどんな種類のアプリにも最適だと言います。そして、ほとんどの人々が実際の違いを理解していないように感じますし、単に他の開発者からのイデオロギーを盲目的に追っているように...]]></description><link>https://zenn.dev/galapagos/articles/342c3a815222cb</link><guid isPermaLink="true">https://zenn.dev/galapagos/articles/342c3a815222cb</guid><pubDate>Thu, 09 May 2024 01:48:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h0TehPqJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MVVM%25E3%2581%25A8MVI%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E4%25B8%2580%25E5%25BA%25A6%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:volod.one%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMWFiMTkxYzQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AC%25E3%2583%25A9%25E3%2583%2591%25E3%2582%25B4%25E3%2582%25B9%25EF%25BC%2588%25E6%259C%2589%25E5%25BF%2597%25EF%25BC%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwMGMwYjc2YzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>volod.one</dc:creator></item><item><title><![CDATA[Spring Framework 6.2 になると @Transactionalで検査例外もロールバックするための設定が増える (予定)]]></title><description><![CDATA[Spring Frameworkの @Transactional は、デフォルトで
「非検査例外(RuntimeExceptionおよびそのサブクラス)ならロールバックする」
という挙動です。(2024/05現在)
Spring Framework 6.2からは設定項目が増え、アプリ全体での設定として「全ての例外でロールバックする」と指定できるようになる見込みなので、現行の挙動の整理とあわせて紹介します。

 対象読者

Spring Frameworkの @Transactional でトランザクション制御をしてDBアクセスしている
次のいずれかにあてはまる

Kotlinを使っている...]]></description><link>https://zenn.dev/wkwkhautbois/articles/55290f65d92c89</link><guid isPermaLink="true">https://zenn.dev/wkwkhautbois/articles/55290f65d92c89</guid><pubDate>Mon, 06 May 2024 12:15:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UyAi48FF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Framework%25206.2%2520%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%2520%2540Transactional%25E3%2581%25A7%25E6%25A4%259C%25E6%259F%25BB%25E4%25BE%258B%25E5%25A4%2596%25E3%2582%2582%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%258F%25E3%2582%258F%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhYTM1ODdlOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わくわく</dc:creator></item><item><title><![CDATA[手動で Kotlin Multiplatform を利用した Kotlin の multi project を作成した]]></title><description><![CDATA[
 概要
本記事では、Kotlin で multi project を作成する際に、Kotlin Multiplatform（KMP）を利用した構成で作成しました。
うまく、Intellij IDEA を利用して作成できなかったため、備忘録としてまとめます。
作成したリポジトリは以下です。
https://github.com/Msksgm/sample-of-kotlin-multi-project-by-hand

 手順
以下の手順で実装できました。

プロジェクトの新規作成
version catalog で Kotlin Multiplatform を導入
settings.g...]]></description><link>https://zenn.dev/msksgm/articles/20240506-kotlin-multi-project-by-hand</link><guid isPermaLink="true">https://zenn.dev/msksgm/articles/20240506-kotlin-multi-project-by-hand</guid><pubDate>Mon, 06 May 2024 08:29:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xxbub16t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2589%258B%25E5%258B%2595%25E3%2581%25A7%2520Kotlin%2520Multiplatform%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%2520Kotlin%2520%25E3%2581%25AE%2520multi%2520project%2520%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:msk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmYTlhMzFhNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>msk</dc:creator></item><item><title><![CDATA[Kotlin のプロジェクトに version catalog を導入する]]></title><description><![CDATA[
 概要
本記事では、Kotlin のプロジェクトに version catalog を導入する方法を記載します。
https://docs.gradle.org/current/userguide/platforms.html

 version catalog について
version catalog は gradle の機能の 1 つです。
build.gradle.kts に記載する package やバージョンを ./gradle/libs.versions.toml に記載し、参照するようにします。
導入することで以下のメリットがあります。

IDE サポートが受けられる
マ...]]></description><link>https://zenn.dev/msksgm/articles/20240505-kotlin-version-catalog</link><guid isPermaLink="true">https://zenn.dev/msksgm/articles/20240505-kotlin-version-catalog</guid><pubDate>Sun, 05 May 2024 00:33:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YjLFeeLr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%2520version%2520catalog%2520%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:msk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmYTlhMzFhNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>msk</dc:creator></item></channel></rss>