<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 19 Sep 2024 09:28:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Spring Boot + KotestでTestcontainersを活用する方法：@ServiceConnectionを使ったテスト構築]]></title><description><![CDATA[以下の記事を読み、Spring Bootのv3.1.0から@ServiceConnectionが導入されたというのを知り、Kotestでも使えないかと試したので記事にします。
https://www.docker.com/blog/spring-boot-application-testing-and-development-with-testcontainers/
公式のTestcontainersの章ではJUnit 5用の@Testcontainersの使用例が多く、Kotestでは使えないかもと過去の自分と同じように感じている方の助けになれば幸いです。
https://docs.s...]]></description><link>https://zenn.dev/yamachoo/articles/spring-testcontainers-kotest</link><guid isPermaLink="true">https://zenn.dev/yamachoo/articles/spring-testcontainers-kotest</guid><pubDate>Tue, 17 Sep 2024 07:45:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ggAKHy8d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%2520%252B%2520Kotest%25E3%2581%25A7Testcontainers%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%259A%2540ServiceConnec...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZmVjZGFjYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヤマチュー</dc:creator></item><item><title><![CDATA[WearOSで心拍数を取る]]></title><description><![CDATA[
 はじめに
WearOSで取ることができる心拍数を取得していく

 コード本体
長いので折りたたみ
MainActivity.kt
MainActivity.kt
package com.nenfuat.getheartrateapplication.presentation

import android.Manifest
import android.content.Context
import android.content.pm.PackageManager
import android.hardware.Sensor
import android.hardware.Senso...]]></description><link>https://zenn.dev/nenfa/articles/b5595d6e6a608c</link><guid isPermaLink="true">https://zenn.dev/nenfa/articles/b5595d6e6a608c</guid><pubDate>Sat, 14 Sep 2024 09:13:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y5SVWCp0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WearOS%25E3%2581%25A7%25E5%25BF%2583%25E6%258B%258D%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B4%25E6%2599%25AE%2540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDc2ZDJmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>年普@</dc:creator></item><item><title><![CDATA[Jetpack Compose × UiAutomator で詰まった時の備忘録]]></title><description><![CDATA[
 TestTag が見つからない

 事象
UI テストを記述していて testTag() を Modifier にセットしているのにも関わらず、UiAutomator の By.res() で見つからなかった。

 解決策
上位の階層で testTagsAsResourceId を有効にすることで UiAutomator に testTag() を伝播させることができるとのこと。
Scaffold(
    // Enables for all composables in the hierarchy.
    modifier = Modifier.semantics {
    ...]]></description><link>https://zenn.dev/u_chan/articles/f1a35391ec3a2f</link><guid isPermaLink="true">https://zenn.dev/u_chan/articles/f1a35391ec3a2f</guid><pubDate>Sat, 14 Sep 2024 08:43:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eSnUeLiF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520Compose%2520%25C3%2597%2520UiAutomator%2520%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYTk3ODY3ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーちゃん</dc:creator></item><item><title><![CDATA[Dagger Hilt でスマートにモックに差し替える]]></title><description><![CDATA[よくやりたくなるのが、モック用の product flavor の時のみに、通信をモックした UseCase や Repository を利用したいというもの。且つ、モック用のクラスはプロダクションのコードに含めたくない。
flavor 毎に Dagger のモジュールを作って当該クラスのインスタンスを @Provides で定義しつつ、モック用の flavor だけモックのレスポンスを返すようにすればよいが、一つのクラスをモックするのに全 flavor のモジュールに @Provides の定義を記載してメンテしていかないとといけないので煩雑である。
その解決として、次のような inl...]]></description><link>https://zenn.dev/yumemi_inc/articles/e3050976878503</link><guid isPermaLink="true">https://zenn.dev/yumemi_inc/articles/e3050976878503</guid><pubDate>Tue, 10 Sep 2024 12:23:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5_piHHOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dagger%2520Hilt%2520%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E5%25B7%25AE%25E3%2581%2597%25E6%259B%25BF%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hkusu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d3b3ZhZFBoRm53Ump5NFBMN0MyU3d6UkYxSmRId0ZoZDRLQU1ab0E9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hkusu</dc:creator></item><item><title><![CDATA[UnityでAndroidのCameraX APIを利用して動画撮影する]]></title><description><![CDATA[

 はじめに
今回は Android の CameraX API を用いて、Unity アプリにカメラ撮影機能を実装する方法について書きたいと思います。
これを実装した背景は、Google が主催する Gemini を利用したコンペに応募するためのアプリ開発に必要だったからです。
実際に動かしてみた動画は以下です。Unity アプリが起動し、画面にはカメラのプレビューが表示されていませんが、実際に動画撮影が出来ていることが分かります。
https://x.com/edo_m18/status/1820597679388525032
Android Studio を利用した通常の And...]]></description><link>https://zenn.dev/meson/articles/android-camerax-library-for-unity</link><guid isPermaLink="true">https://zenn.dev/meson/articles/android-camerax-library-for-unity</guid><pubDate>Tue, 10 Sep 2024 02:34:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v_T7YVVv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unity%25E3%2581%25A7Android%25E3%2581%25AECameraX%2520API%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%258B%2595%25E7%2594%25BB%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MESON%2520Tech%2520Blog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NWFhYzQzZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MESON Tech Blog</dc:creator></item><item><title><![CDATA[Androidでカスタムフォントを使いたい]]></title><description><![CDATA[アプリ開発する時大抵デフォルトのフォントのまま開発すると思う
しかし、アプリにアクセントをつけたい時にフォントを変えたい時もあると思うのでメモ
デフォルトだと
端末デフォルトのフォント
指定できるのはsans-serif, serif, monospace, cursive
その他のフォントが使いたい時は下記のgoogle fontsから好きなを選びダウンロードする
https://fonts.google.com/
Android Studioでresディレクトリでfontディレクトリを新規追加しダウンロードしたファイルを入れる
アプリ内でフォントを指定できるようにする
object ...]]></description><link>https://zenn.dev/giglancer/articles/229f95efdab556</link><guid isPermaLink="true">https://zenn.dev/giglancer/articles/229f95efdab556</guid><pubDate>Sun, 08 Sep 2024 15:09:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XvFhE4VK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmZlZTVlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo</dc:creator></item><item><title><![CDATA[【完全版】3ヶ月でAndroidエンジニアを目指すためのロードマップ]]></title><description><![CDATA[
 はじめに
ご覧いただきありがとうございます。Gonです！
Androidアプリ開発の世界へようこそ！
今回は、友人がAndroidエンジニアを目指すと聞いて実践的なロードマップを作ってみることにしました。
僕自身、Javaのレガシーなシステム開発からキャリアをスタートしましたが、働き方の自由度や仕事の楽しさを求めて、独学でKotlinを学び、Androidアプリ開発へとスキルチェンジしました。
フリーランスのAndroidエンジニアとしては3年以上働いていますが、基本的にフルリモートで働けるためすごく自由度が高いですし、単価も上がりやすく、何より楽しんで仕事できてます。
「どこから始...]]></description><link>https://zenn.dev/masashiii/articles/1b5598a089bac5</link><guid isPermaLink="true">https://zenn.dev/masashiii/articles/1b5598a089bac5</guid><pubDate>Sun, 08 Sep 2024 04:07:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bfEn9ASK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E7%2589%2588%25E3%2580%25913%25E3%2583%25B6%25E6%259C%2588%25E3%2581%25A7Android%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgyM2JjZmIzMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gon</dc:creator></item><item><title><![CDATA[Kotlin OKHttp]]></title><description><![CDATA[
 👤対象者

androidで、HTTP通信をやってみたい人
OKHttpなるものを試したい人

Android開発でAPI通信するライブラリといえば、Retrofitが有名なパッケージですがOKHttpなるものあるようです。
気になるので試したみた👩‍⚕️
(offical)[https://square.github.io/okhttp/]
HTTP is the way modern applications network. It’s how we exchange data &amp; media. Doing HTTP efficiently makes your stuf...]]></description><link>https://zenn.dev/joo_hashi/articles/046b6831386826</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/046b6831386826</guid><pubDate>Fri, 06 Sep 2024 22:27:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hb5KHarP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Kotlin%2520OKHttp%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[LLMを試してみる]]></title><description><![CDATA[
 どんなものか？
LLM（Large Language Model）とは、大規模言語モデルのことを指します。以下にLLMの主要な特徴と重要性についてまとめます：


定義：
LLMは膨大な量のテキストデータを学習し、人間の言語を理解・生成できる人工知能モデルです。


特徴：

大量のデータで学習：インターネット上の文章や書籍など、膨大なテキストデータを使用
自然言語処理：人間の言語を高度に理解し、生成できる
多機能：翻訳、要約、質問応答、文章生成など多様なタスクをこなせる



代表的なモデル：

GPT（Generative Pre-trained Transformer）シリーズ...]]></description><link>https://zenn.dev/joo_hashi/articles/c60ed65e04f1ae</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/c60ed65e04f1ae</guid><pubDate>Thu, 05 Sep 2024 21:51:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--957f1cQM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[Flutterは魔法じゃなかった]]></title><description><![CDATA[
 人気あるけど？
最近は、アプリ開発といえば、クロップラットフォームのFlutterでやるもんだと思ってた。しかし以前から、ネットで見る話題に自分も当たってしまいFlutter好きなんですけど、限界かと思うようになってきました😭
本業で、Swift, Kotlin使う可能性が出てきた💦

 個人的に思ったこと

クロップラットフォームは、Swift, Kotlinができる人が使うもの
xcode, gradle, IPA, aab, apkの知識などが必要
未経験の人が転職のために使う手段として流行ったがそれは違う。現場入ったら、AWSもバックエンドもやるので、IT知らない人が現場入っ...]]></description><link>https://zenn.dev/joo_hashi/articles/75c0e7d08dbe5f</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/75c0e7d08dbe5f</guid><pubDate>Tue, 03 Sep 2024 22:28:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tM35HYYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flutter%25E3%2581%25AF%25E9%25AD%2594%25E6%25B3%2595%25E3%2581%2598%25E3%2582%2583%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[リファクタリング - 不要なコードを一掃し、美しく保つためのガイド]]></title><description><![CDATA[ソフトウェア開発者が日常のプログラミング作業で遭遇する多くの課題に対処するためのツールキットです。リファクタリングとは、ソフトウェアの内部構造を改善しながら、外部の振る舞いを変えないようにコードをリライトするプロセスのこと。この本では、リファクタリングの目的やその重要性、そしてそれを効果的に実施するための実践的な方法について、豊富な例を交えて解説します。]]></description><link>https://zenn.dev/ishtos/books/61ddab3df91102</link><guid isPermaLink="true">https://zenn.dev/ishtos/books/61ddab3df91102</guid><pubDate>Tue, 03 Sep 2024 12:36:50 GMT</pubDate><dc:creator>janitor</dc:creator></item><item><title><![CDATA[【iOS / Android】端末の回線キャリア名を取得する方法]]></title><description><![CDATA[
 概要
iOS・Android端末のキャリア名を取得する方法

 きっかけ
アプリにてユーザーの使用端末のメインキャリア名を取得したいという要望があったため、iOS・Androidでキャリア名を取得する方法を調べました。

 取得方法

 iOS
iOSアプリでキャリア名を取得するには、SwiftでCTTelephonyNetworkInfoというクラスを拡張して取得します。
import CoreTelephony

extension CTTelephonyNetworkInfo {

/// 端末のメイン回線キャリア
var carrierName: String {
    l...]]></description><link>https://zenn.dev/kobaya4/articles/ef79d13579c89b</link><guid isPermaLink="true">https://zenn.dev/kobaya4/articles/ef79d13579c89b</guid><pubDate>Tue, 03 Sep 2024 02:33:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2cSrsDs9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590iOS%2520%252F%2520Android%25E3%2580%2591%25E7%25AB%25AF%25E6%259C%25AB%25E3%2581%25AE%25E5%259B%259E%25E7%25B7%259A%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25AA%25E3%2582%25A2%25E5%2590%258D%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kobaya4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZmY0ZTI1MWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kobaya4</dc:creator></item><item><title><![CDATA[Android カスタム クイック設定タイルにアプリを追加]]></title><description><![CDATA[カスタムクイック設定タイルにアプリを追加して、押下時にシステム音量表示をする実装。

カスタム クイック設定タイル公式

TileServiceを起動すれば基本的にはOKなので継承した任意のクラスを定義。
class QuickTileService : TileService() {
    override fun onTileAdded() {
        super.onTileAdded()

        qsTile.state = Tile.STATE_ACTIVE
        qsTile.subtitle = "Tap Here"
        qsTil...]]></description><link>https://zenn.dev/tarobu/articles/6e01b4bb74e242</link><guid isPermaLink="true">https://zenn.dev/tarobu/articles/6e01b4bb74e242</guid><pubDate>Fri, 30 Aug 2024 14:49:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pEQptPSt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%2520%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%2520%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%25B6%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjZGU4Y2MwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たろぶー</dc:creator></item><item><title><![CDATA[Kotlinの委譲クラスでドメイン固有コレクション型を３分クッキングしよう]]></title><description><![CDATA[
 従来的な方法論
ファーストクラスコレクション
ThoughtWorksアンソロジーにて紹介された実装パターンです。
一つのコレクションをラップしたドメイン固有型を作るパターンです。

example.kt
class BulkBuyingOrder(private val list: List&lt;Item&gt;) {
    init {
        require(original.size &gt; 5)
    }
}

上記のようなドメイン固有型を用意し関数引数の型をそれとすることで事前条件の担保された引数を関数に渡すことができるようになります。関数の全域性を型（静...]]></description><link>https://zenn.dev/umi_ushi/articles/3cebe9912a510c</link><guid isPermaLink="true">https://zenn.dev/umi_ushi/articles/3cebe9912a510c</guid><pubDate>Tue, 27 Aug 2024 16:00:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aD8_2Gqq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25AE%25E5%25A7%2594%25E8%25AD%25B2%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E5%259B%25BA%25E6%259C%2589%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%259E%258B%25E3%2582%2592%25EF%25BC%2593%25E5%2588%2586%25E3%2582%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:umiushi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzNmZiNTA1MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>umiushi</dc:creator></item><item><title><![CDATA[AndroidアプリのWebソケットクライアントで送受信するメッセージを、プロキシーで改ざん＆遅延させてみる]]></title><description><![CDATA[
再現困難なバグの原因を特定するために習得した方法について、紹介してみます。
以下のように、Android アプリの Web ソケットクライアントで受信するメッセージを、プロキシーで改ざんし、遅延させる方法を紹介します。

サーバーからクライアントに送信されるメッセージを監視し、特定の条件を満たす場合はメッセージをドロップする
ドロップしたメッセージは、一定時間経った後に再送信する


紹介するスクリプトの内容を変更することで、クライアントからサーバーに送信するメッセージを改ざん対象にしたり、その他様々な応用的な処理が可能です。

 手順
手順は以下の通りです。

mitmproxy を...]]></description><link>https://zenn.dev/sun_asterisk/articles/delay-websocket-message-to-android</link><guid isPermaLink="true">https://zenn.dev/sun_asterisk/articles/delay-websocket-message-to-android</guid><pubDate>Tue, 27 Aug 2024 02:10:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6_6Hjgsx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEWeb%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A7%25E9%2580%2581%25E5%258F%2597%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2580%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2583%25BC%25E3%2581%25A7%25E6%2594%25B9%25E3%2581%2596%25E3%2582%2593%25EF%25BC%2586%25E9%2581%2585%25E5%25BB%25B6%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2593%25E3%2582%258D%25E3%2582%2580%25E3%2581%25AB%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YTU0ZjZiM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sun%252A%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2NmY0MzY4MzUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ころむにー</dc:creator></item><item><title><![CDATA[Kotlinでリソースの後処理はuseでシンプルに書こう]]></title><description><![CDATA[
 Kotlinでclose処理を必要とするリソースを使う場合はuseで!!
https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.io/use.html

Executes the given block function on this resource and then closes it down correctly whether an exception is thrown or not.

Closeableインターフェースへの拡張関数として定義されており、
引数に渡したblock処理を行いリソースを例外発生、正常終了問わず...]]></description><link>https://zenn.dev/umi_ushi/articles/258bb1190084d4</link><guid isPermaLink="true">https://zenn.dev/umi_ushi/articles/258bb1190084d4</guid><pubDate>Thu, 22 Aug 2024 14:13:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S50sPMSD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E5%25BE%258C%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AFuse%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%2593%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:umiushi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzNmZiNTA1MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>umiushi</dc:creator></item><item><title><![CDATA[Androidで位置情報を取得する]]></title><description><![CDATA[
 はじめに
今回はAndroidで位置情報を取得できるAndroidのLocation APIを使用します。
LocationManager等もありますが現在非推奨らしいのでLocation APIを使用していきます。

 位置情報を取得する
位置情報を取得するためにパーミッションが必要なのであらかじめ記述しておきましょう
AndroidManifest.xmlに以下の権限をを追加しておきます。

AndroidManifest.xml
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" ...]]></description><link>https://zenn.dev/nenfa/articles/d9258d1f92573a</link><guid isPermaLink="true">https://zenn.dev/nenfa/articles/d9258d1f92573a</guid><pubDate>Wed, 21 Aug 2024 08:29:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LMQHnHAi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B4%25E6%2599%25AE%2540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDc2ZDJmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>年普@</dc:creator></item><item><title><![CDATA[ディシジョン系の仕様をエンコードする「アクティブパターン」]]></title><description><![CDATA[!
この記事は毎週必ず記事がでるテックブログ "Loglass Tech Blog Sprint" の 53 週目の記事です！
🎉🎉🎉 これにて1年間（53週）連続投稿達成となりました！！ 🎉🎉🎉

ログラスでは、型によるドメインモデリングや関数型由来のエッセンスを取り入れて、プロダクトコードの偶有的複雑性を抑えようとする取り組みが盛んです。
その中でも大いに参考にしている、みんな大好き（？）関数型ドメインモデリングにて「アクティブパターン」というF#の機能がちらっと紹介されていました。
これは代数的データ型（a.k.a. ADTs、タグ付きユニオン、判別共用体...）によるドメインモデ...]]></description><link>https://zenn.dev/loglass/articles/9682d2264f13c7</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/9682d2264f13c7</guid><pubDate>Mon, 19 Aug 2024 04:53:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MsAJ4Uk8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B7%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25B3%25BB%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%25E3%2582%2592%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E3%2580%258C%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yoda%2520keisuke%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMbDFoTHhNc2NiTlh6cjBPMUxVWmNmV3JleGk2NTFJWWRRNkVJPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoda keisuke</dc:creator></item><item><title><![CDATA[Komapper v2.2.0で導入されたCommand機能の紹介]]></title><description><![CDATA[サーバーサイドKotlin向けのORMであるKomapper v2.2.0では、「Command」という新しい概念が導入されました。この機能により、SQLテンプレートを用いたクエリの作成がより便利になりました。

 Commandの概要
Commandは、SQLテンプレート、パラメータ、SQLの実行結果のハンドラーを1つにまとめたものです。例えば、複数件を取得するコマンドは次のように記述できます。
@KomapperCommand("""
    select * from ADDRESS where street = /*street*/'test'
""")
class ListAd...]]></description><link>https://zenn.dev/nakamura_to/articles/68d2488ed2b9e1</link><guid isPermaLink="true">https://zenn.dev/nakamura_to/articles/68d2488ed2b9e1</guid><pubDate>Sat, 17 Aug 2024 04:08:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eAVyLe_a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Komapper%2520v2.2.0%25E3%2581%25A7%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FCommand%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura_to%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lSWkNjYVdwdlhnTTRldkc0QmM1QjhlZVFGbTUxYm1FZjhXbERLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura_to</dc:creator></item><item><title><![CDATA[いいユニットテストってなに...？！]]></title><description><![CDATA[
 ユニットテストを考える
少し前に、テスト関連の記事として、以下を作成しました。
https://zenn.dev/airiswim/articles/5696dfe3b6dbb6
今現在、仕事の中でも自分の個人開発のプロジェクトでも、
ユニットテストを書いているのでこのタイミングで、、、、
"ユニットテストを書くことが目的になっていないか？"
ユニットテストのそもそもの目的だったり、大事なことを今回はまとめていきたいと思います！

 ユニットテストとは
と言う最初の部分から入るが、簡単にいうならば、
プログラムを構成するちいさな単位(関数やメソッド,クラス,モジュールのこと =コンポ...]]></description><link>https://zenn.dev/airiswim/articles/5f003645e31581</link><guid isPermaLink="true">https://zenn.dev/airiswim/articles/5f003645e31581</guid><pubDate>Fri, 16 Aug 2024 06:52:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MXFj3KAE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%2584%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB...%25EF%25BC%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Airichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0NGFlNmMyNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Airichan</dc:creator></item></channel></rss>