<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 07 Jul 2024 11:47:34 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Java Silver】SE 11とSE17の違いをまとめてみる]]></title><description><![CDATA[Java Silverの受験を思い立ち、いざ調べてみると、主要な試験にはSE11とSE17があるようで、何が違うのか気になったので、違いをまとめてみたいと思います。
それぞれの試験はJavaのバージョンに合わせて作られており、日本国内でSE11は2019年、SE17は2023年から始まった新しい試験です。

 SE11とSE17の違い

 試験概要
まずは、試験概要の違いについてまとめます。
SE17はSE11と比べ、主に試験時間が90分短くなり、問題数も20問少なくなっています。なお、どちらも自宅またはテストセンターで受験できるようです。




SE11
SE17




試験名
J...]]></description><link>https://zenn.dev/netmullet/articles/b65b03523311eb</link><guid isPermaLink="true">https://zenn.dev/netmullet/articles/b65b03523311eb</guid><pubDate>Sun, 07 Jul 2024 04:40:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cXwcC7pe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%2520Silver%25E3%2580%2591SE%252011%25E3%2581%25A8SE17%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:netmullet%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNWMyNGM1NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>netmullet</dc:creator></item><item><title><![CDATA[山崎令恩流プログラミング言語学習法]]></title><description><![CDATA[とりあえず山崎令恩しろ
山崎令恩最強
山崎令恩 プログラミング言語
山崎令恩 宮崎大宮高校
]]></description><link>https://zenn.dev/yamazakireon/articles/e620a50f626e25</link><guid isPermaLink="true">https://zenn.dev/yamazakireon/articles/e620a50f626e25</guid><pubDate>Sun, 07 Jul 2024 04:26:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xfuiakAA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B1%25B1%25E5%25B4%258E%25E4%25BB%25A4%25E6%2581%25A9%25E6%25B5%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B1%25B1%25E5%25B4%258E%25E4%25BB%25A4%25E6%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyY2Q5Y2ZmNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山崎令恩</dc:creator></item><item><title><![CDATA[Java8 + Windowsにおける文字化け対策の設定のまとめ]]></title><description><![CDATA[Java8 + Windowsにおける文字化け対策の設定について、いつも分からなくなるのでまとめました。
Java21についても整理中(コンソール表示が文字化けしがち)。
以下のリポジトリに作成したMarkdownからの抜粋です。
https://github.com/leoninja256/java-garbled-verification

 前提条件

ソースコード、コンパイル時のエンコーディングはUTF-8とする
実行時のfile.encodingはUTF-8とする


 ソフトウェアバージョン



ソフトウェア
バージョン




Oracle JDK
1.8.0_411-b...]]></description><link>https://zenn.dev/leoninja/articles/b1a9cadccca7e5</link><guid isPermaLink="true">https://zenn.dev/leoninja/articles/b1a9cadccca7e5</guid><pubDate>Wed, 03 Jul 2024 17:16:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yk0q82a3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java8%2520%252B%2520Windows%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%258C%2596%25E3%2581%2591%25E5%25AF%25BE%25E7%25AD%2596%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leoninja%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dCdXV5SmNKbTFaZWRXWGNha3gxVllBOU1wQmhjeTE5TnBCUUV6PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leoninja</dc:creator></item><item><title><![CDATA[Javaのequalsと==について]]></title><description><![CDATA[今更ながら、きちんと説明できるだけ深堀したことなかったのでまとめ。

 そもそも==演算子とは？
基本データ型（プリミティブ型）に対して使う場合、その値を比較する。
参照型（オブジェクト型）に対して使う場合、そのオブジェクトの参照:メモリアドレスを比較します。

Main.java
//プリミティブ型の比較
int a = 5;
int b = 5;
System.out.println(a == b); // true（プリミティブかつ値が同じだから）

//オブジェクト型の比較
String str1 = new String("Hello");
String str2 = new ...]]></description><link>https://zenn.dev/zenn_rr/articles/6fe59e2f99e7fd</link><guid isPermaLink="true">https://zenn.dev/zenn_rr/articles/6fe59e2f99e7fd</guid><pubDate>Wed, 03 Jul 2024 12:37:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3uY29iKl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AEequals%25E3%2581%25A8%253D%253D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NWNhMDI0NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sto</dc:creator></item><item><title><![CDATA[【Spring Boot】Spring for GraphQLで関数ごとに認証の有無を設定できるようにする]]></title><description><![CDATA[
 概要
Spring for GraphQLではチュートリアルにある通り、リクエストのUTLのパスは基本的に単一であり、関数ごとに認証をかけたい場合は少し工夫が必要です。
取れる対応案としては複数あると思いますが、今回はGraphQL backend — authorization &amp; authenticationの記事で紹介されているような方法で実装してみたので、その紹介です。

 前提

上記記事ではKotlinでの実装ですが、この記事ではJavaで実装します。
使用したspring-boot-starter-graphqlのバージョンは3.3.0です。


 実装
まずは...]]></description><link>https://zenn.dev/someone7140/articles/f761463bf3a2d7</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/f761463bf3a2d7</guid><pubDate>Wed, 03 Jul 2024 11:45:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aHqxngX3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%25E3%2580%2591Spring%2520for%2520GraphQL%25E3%2581%25A7%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E6%259C%2589%25E7%2584%25A1%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[名著「Javaによる関数型プログラミング」のStrategyパターンをTypeScriptで表現してみた。]]></title><description><![CDATA[
 初めに
Strategyパターンは英語で"戦略"を意味する言葉になります。
事前に"戦略"を定義して状況に応じて既存のコードを変更することなく
"戦略"を切り替えることができるデザインパターンになります。
※Strategyパターンの基本は こちらの記事 をご参照ください。
通常のオブジェクト指向デザインパターンではインターフェースを定義して
継承先の具象クラスで戦略を定義するのが一般的ですが、
関数型プログラムを利用するとわざわざインターフェースや
具象クラスを定義せずにすっきり書くことができます。
本項は　名著「Javaによる関数型プログラミング」で紹介されている
Strateg...]]></description><link>https://zenn.dev/xxhotaruxx19/articles/b3c684ec3b3208</link><guid isPermaLink="true">https://zenn.dev/xxhotaruxx19/articles/b3c684ec3b3208</guid><pubDate>Wed, 03 Jul 2024 08:45:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--reBf0qz0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258D%25E8%2591%2597%25E3%2580%258CJava%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258D%25E3%2581%25AEStrategy%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592TypeScript%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2582%2583%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWdDdld1N0I2UFpYdkthdVJCTEZCanpJRExsc2h5ZWdoWlJOTUFYazcwcjRpZU02bz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>にゃし</dc:creator></item><item><title><![CDATA[[Kotlin/JVM] SQLを書くのが好きな人のための Kuery Client の紹介]]></title><description><![CDATA[
 はじめに

repository

https://github.com/be-hase/kuery-client


ドキュメント

https://kuery-client.hsbrysk.dev/




 どんなふうに書けるの？
前置きから書きたいところですが、まずは雰囲気だけ紹介します。
suspend fun search(status: String, vip: Boolean?): List&lt;User&gt; = kueryClient
    .sql {
        +"""
        SELECT * FROM users
        WHE...]]></description><link>https://zenn.dev/be_hase/articles/7bce96932de079</link><guid isPermaLink="true">https://zenn.dev/be_hase/articles/7bce96932de079</guid><pubDate>Tue, 02 Jul 2024 03:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eR3bQzGl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKotlin%252FJVM%255D%2520SQL%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258C%25E5%25A5%25BD%25E3%2581%258D%25E3%2581%25AA%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Kuery%2520Client%2520%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:be-hase%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dNaVhNZnFBWE9yTXdHZVdBMEpmaE5OX3FJRVExUWQzRUw2MVJtM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>be-hase</dc:creator></item><item><title><![CDATA[DevContainer + VSCode で始める Spring Boot]]></title><description><![CDATA[
 はじめに
Spring Boot を VSCode + DevContainer で始める手順の紹介です。事前に以下前提を満たしているか確認してください。

WSL2 をインストール済み  (Windows の場合)
Docker Desktop をインストール済み
VSCode と 拡張機能「Dev Containers」をインストール済み


 Spring Boot 導入手順

 ファイルの作成
VSCode で WSL に接続し、リモート側に拡張機能「Spring Initializr」をインストール。

Ctrl + Shift + P でコマンドパレットを開き「Creat...]]></description><link>https://zenn.dev/teradatky/articles/springboot-with-devcontainer-20240701</link><guid isPermaLink="true">https://zenn.dev/teradatky/articles/springboot-with-devcontainer-20240701</guid><pubDate>Sun, 30 Jun 2024 17:32:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s2NkkLC3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DevContainer%2520%252B%2520VSCode%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2520Spring%2520Boot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuya%2520Terada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUJHdEJIQ2hzYXVjbWNMWFdaYlpBNG1LSmFrbGhSOF84WGttc0Rkb0E1eVZrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takuya Terada</dc:creator></item><item><title><![CDATA[[Kotlin]data classとclassの違い＆Javaの何に当たるのか]]></title><description><![CDATA[
 data classとclassについて
今回はテーマの通り、
Kotlinのdata classと通常のclassの違いについてと、
Javaにはdata classが存在しなかったのに、なぜKotlinにはdata classがあるのか
(data classはjavaの何に当たるのか)
について書いていきたいと思います！

 data classとclassはどう違うのか
最初にそれぞれを一言で言ってしまえば、
通常のクラスは、オブジェクトの状態と振る舞いをカプセル化するために使用され、
データクラスは、主にデータの保持と転送を目的としているもので、Kotlin特有の仕様だ。
...]]></description><link>https://zenn.dev/airiswim/articles/3af3ec0564b315</link><guid isPermaLink="true">https://zenn.dev/airiswim/articles/3af3ec0564b315</guid><pubDate>Sun, 30 Jun 2024 15:21:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W2srnIcv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKotlin%255Ddata%2520class%25E3%2581%25A8class%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25EF%25BC%2586Java%25E3%2581%25AE%25E4%25BD%2595%25E3%2581%25AB%25E5%25BD%2593%25E3%2581%259F%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Airichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0NGFlNmMyNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Airichan</dc:creator></item><item><title><![CDATA[【Spring Boot】素のSpring Bootでできること]]></title><description><![CDATA[なにも追加しない Spring Boot プロジェクトでも使える基本的な機能をまとめました。

 1. 動作環境

macOS 14.5
Java 21
Gradle 8.8
Spring Boot 3.3.1


 2. DI コンテナの利用
Spring Boot は Bean と呼ばれるオブジェクトを管理し、それらの Bean 間の依存関係を注入して任意の場所で参照できます。

 2.1. Bean の定義方法
Bean の定義には以下の方法があります[1]。Bean は一意の名前で管理されます。

アノテーションベースの設定
Java ベースの設定
XML ベースの設定


 2...]]></description><link>https://zenn.dev/iwazou/articles/spring-boot-memo-8fcf348b857781</link><guid isPermaLink="true">https://zenn.dev/iwazou/articles/spring-boot-memo-8fcf348b857781</guid><pubDate>Fri, 28 Jun 2024 15:00:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nAHa-YX1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%25E3%2580%2591%25E7%25B4%25A0%25E3%2581%25AESpring%2520Boot%25E3%2581%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258F%25E3%2581%259E%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUlKUmg4NHc5a2k5Y3p0YmtZN0dqd2hwd1V3Yk1vbTFFYUJkaTBsNC1hPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いわぞう</dc:creator></item><item><title><![CDATA[めんどくさいと思う気持ちが大事]]></title><description><![CDATA[
 はじめに
皆さんはプログラマーにとって大切な精神ってなんだと思いますか？
主体性？根性？そうですね。それも重要ですね。
しかし、それらと併せて大事な事があります。
それは、何事にも面倒臭い、と思える気持ちです。
当たり前ですが、面倒臭いから何もしないのが大事ってことではありません。
面倒臭い・・もっと簡単な方法や速度アップする方法はないのか？と考えるってことです。
そのためには例えば以下のような事を念頭において進めることが大切になりますね。
・作業効率を上げること。
・作業の自動化を目指すこと。
・書類やソースコードを整理すること。
・手順書（手順書と言えるほど立派なものでなく、トラ...]]></description><link>https://zenn.dev/k_tabuchi/articles/5eebe74a673618</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/5eebe74a673618</guid><pubDate>Fri, 28 Jun 2024 12:10:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vpbSJgj7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2581%25E3%2582%2593%25E3%2581%25A9%25E3%2581%258F%25E3%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%2586%25E6%25B0%2597%25E6%258C%2581%25E3%2581%25A1%25E3%2581%258C%25E5%25A4%25A7%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[【Spring Boot】素のSpring BootでHello, world!]]></title><description><![CDATA[なにも追加しない Spring Boot プロジェクトで Hello, world! します。

 1. 動作環境

macOS 14.5
Java 21
Gradle 8.8
Spring Boot 3.3.1


 2. 雛形作成
Spring Initializrでプロジェクトの雛形を作成します。入力値はデフォルトのままです。（以下参照）



項目名
入力値




Project
Gradle - Groovy


Language
Java


Spring Boot
3.3.1


Project Metadata
Group: com.example  Artifact:...]]></description><link>https://zenn.dev/iwazou/articles/spring-boot-helloworld-b6c7cbb5204a6f</link><guid isPermaLink="true">https://zenn.dev/iwazou/articles/spring-boot-helloworld-b6c7cbb5204a6f</guid><pubDate>Fri, 28 Jun 2024 12:07:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_GNt0dTL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%25E3%2580%2591%25E7%25B4%25A0%25E3%2581%25AESpring%2520Boot%25E3%2581%25A7Hello%252C%2520world%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258F%25E3%2581%259E%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUlKUmg4NHc5a2k5Y3p0YmtZN0dqd2hwd1V3Yk1vbTFFYUJkaTBsNC1hPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いわぞう</dc:creator></item><item><title><![CDATA[Spring BootでGraphQLの始め方]]></title><description><![CDATA[
 1. 必要な依存関係の追加
build.gradleまたはpom.xmlに以下の依存関係を追加します。
Gradleの場合:
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:12.0.0'
    implementation 'com.graphql-java-kickstart:graphql-java-tool...]]></description><link>https://zenn.dev/akabana/articles/e90ed56f6a84c0</link><guid isPermaLink="true">https://zenn.dev/akabana/articles/e90ed56f6a84c0</guid><pubDate>Fri, 28 Jun 2024 08:17:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hJzJxlEk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25A7GraphQL%25E3%2581%25AE%25E5%25A7%258B%25E3%2582%2581%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AKABANA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMDYwZDMxYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AKABANA</dc:creator></item><item><title><![CDATA[Rubyでオウム返しプログラミングの練習(i/oプログラミング)]]></title><description><![CDATA[お久しぶりです。Javaの勉強し直してます。
Javaでオウム返ししろと言われましたが、手癖でRuby…
※注意事項。
→が、実行結果です。
cat oumu.rb
→puts gets.to_s

ruby oumu.rb
→1
→1
]]></description><link>https://zenn.dev/drqyuto/articles/cfb76af644d8af</link><guid isPermaLink="true">https://zenn.dev/drqyuto/articles/cfb76af644d8af</guid><pubDate>Thu, 27 Jun 2024 05:52:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Zao0Vjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruby%25E3%2581%25A7%25E3%2582%25AA%25E3%2582%25A6%25E3%2583%25A0%25E8%25BF%2594%25E3%2581%2597%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E7%25B7%25B4%25E7%25BF%2592%2528i%252Fo%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%25A8%2540Prolog%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dkWUxaeFNFWHhTQWozVUtQTGdFRVFEU1QzZ2RXUkQyVHBaYXh2Rnc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みなと@Prologにハマってます！</dc:creator></item><item><title><![CDATA[Java 基礎編]]></title><description><![CDATA[Java 21対応]]></description><link>https://zenn.dev/shinichif/books/b8cc4c62c49d39</link><guid isPermaLink="true">https://zenn.dev/shinichif/books/b8cc4c62c49d39</guid><pubDate>Tue, 25 Jun 2024 07:54:53 GMT</pubDate><dc:creator>藤丸晋一</dc:creator></item><item><title><![CDATA[【初心者】VSCodeでSpring Boot を動かしてみる]]></title><description><![CDATA[
 はじめに

駆け出しペンギン、最初の投稿です。この記事をやってくることが会社の研修課題なのですが、やるついでに手順を記事にメモしていきたいなと思います（VSCode + SpringBoot(Gradle)でWebアプリの開発環境を構築する）。
ところどころ、「これなに？」って思ったところには調べた形跡を載せていくので、初心者の方の助けになればと思います。では、初めていきます。わかるよ、って方は読み飛ばしてください。
間違っているところ、わかりにくいところ、直した方がいいところがあればご指摘お願いいたします！


 手順

 作業環境

MacBook Air(M1,2020)
ma...]]></description><link>https://zenn.dev/penguin_z/articles/9ac655983f8eda</link><guid isPermaLink="true">https://zenn.dev/penguin_z/articles/9ac655983f8eda</guid><pubDate>Tue, 25 Jun 2024 01:27:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b_cDLTPe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2580%2591VSCode%25E3%2581%25A7Spring%2520Boot%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2593%25E3%2581%258E%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllOWVhMzNhYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺんぎん</dc:creator></item><item><title><![CDATA[JavaアプリケーションをHTML5やWebAssembly/JavaScriptに変換できますか？]]></title><description><![CDATA[
一般的に信じられていることとは異なり、Javaはまだ完全に終わったわけではなく、特にソフトウェア業界では、全体で2番目に人気のあるプログラミング言語です。
非常に活発なコミュニティ、豊富なツールのエコシステム、膨大な数のライブラリとフレームワークがあり、後方互換性を保ちながら適応と進化が可能で（ほとんどの場合）、今でも業界で広く使われています。

 最新のエンタープライズ・アプリケーション
Javaはサーバーサイドやネイティブ・アプリケーションに最適な環境を提供しますが、最近のエンタープライズ・アプリケーション・クライアントはHTML5標準への移行が進んでいます。これは、ユーザーの要求...]]></description><link>https://zenn.dev/leaning_tech_jp/articles/c2a6ddf431364c</link><guid isPermaLink="true">https://zenn.dev/leaning_tech_jp/articles/c2a6ddf431364c</guid><pubDate>Mon, 24 Jun 2024 12:31:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bd_vkFgj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592HTML5%25E3%2582%2584WebAssembly%252FJavaScript%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leaning%2520Technologi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MmNjYWUyNWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leaning Technologies Japan (リーニングテクノロジー)</dc:creator></item><item><title><![CDATA[Java/Go/Node.js/Pythonのタスクランナー]]></title><description><![CDATA[
 概要
Zennで記事を1回書いてみようと思い、筆者がこれまでに使ったことがあるタスクランナーを整理した記事になります。各ツールの比較をする記事ではありません。

 タスクランナーとは
この記事ではソースコードのビルド、静的解析、Unit Testの実行など、開発時に必要となる処理をコマンドラインから実行するソフトウェアを指しています。

 各言語のタスクランナー

 Java

 Apache Maven
https://maven.apache.org/
mvnコマンドでビルドしたり、pom.xmlファイルで依存性を管理するJava向けのツール。
最近はGradleばかりを使うよう...]]></description><link>https://zenn.dev/glavis/articles/0062f5a9e926a4</link><guid isPermaLink="true">https://zenn.dev/glavis/articles/0062f5a9e926a4</guid><pubDate>Mon, 24 Jun 2024 09:08:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u5GOLmRV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%252FGo%252FNode.js%252FPython%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Glavis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWpkSFU2WHVTX0o1cGE1X3JQdTNJSUphMm1ZdlJ2LXByWTA0ZUNEQzNLdkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Glavis</dc:creator></item><item><title><![CDATA[Kotlinを扱う際の心構え]]></title><description><![CDATA[!
⚠当記事は、銀の弾丸ではありません。各自の目的や状況などを総合的に判断して、自分で責任を持って検討してください。

!
⚠当記事は、銀の弾丸ではありません。各自の目的や状況などを総合的に判断して、自分で責任を持って検討してください。

※大事なことなので２回書きました

 様々な分離がしやすい
様々な分離をすることで、どこでデータが変更されているかがわかりやすくなり、デバッグしやすくなります。

 イミュータブルとミュータブル、再代入可能の明示化
変数宣言に関しては、varとvalで簡潔に再代入可能かを明示化することができます。
Javaではfinal修飾子を付与しないといけません。...]]></description><link>https://zenn.dev/momosetkn/articles/50f65c8ccbba16</link><guid isPermaLink="true">https://zenn.dev/momosetkn/articles/50f65c8ccbba16</guid><pubDate>Sat, 22 Jun 2024 01:16:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GFpBTarT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E5%25BF%2583%25E6%25A7%258B%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momosetkn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3YzAxY2Q0MTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>momosetkn</dc:creator></item><item><title><![CDATA[プロキシ認証を突破してApache Spark(pyspark)のconfigでjarを指定して追加する]]></title><description><![CDATA[昔Qiitaで
https://qiita.com/junkor-1011/items/b12ec62f2615d068c1a5
みたいな記事を書いたことがあるが、
プロキシ認証が必要な環境だと追加設定をしないと同じことが出来ないので、それについて調べてメモをしたもの。
すなわち、
from pyspark.sql import SparkSession

# 例としてApache Iceberg:
# https://mvnrepository.com/artifact/org.apache.iceberg/iceberg-spark-runtime-3.4
# のjarファイルを取得...]]></description><link>https://zenn.dev/junkor/articles/f2cd0eb267db0c</link><guid isPermaLink="true">https://zenn.dev/junkor/articles/f2cd0eb267db0c</guid><pubDate>Wed, 19 Jun 2024 15:30:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yIrOMlXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E7%25AA%2581%25E7%25A0%25B4%25E3%2581%2597%25E3%2581%25A6Apache%2520Spark%2528pyspark%2529%25E3%2581%25AEconfig%25E3%2581%25A7jar%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7e%252B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>7e+8</dc:creator></item></channel></rss>