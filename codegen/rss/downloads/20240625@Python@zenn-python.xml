<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 25 Jun 2024 12:03:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Diffusers で使える便利なクラス・関数]]></title><description><![CDATA[
あまり知名度はありませんが、Diffusers には Diffusion Model を使うにあたって開発体験を向上させるための便利なクラスや関数がいくつか実装されています。
この記事では、それらの中でも特に便利だと感じるものを紹介します。以下の内容は Diffusers v0.29.1 時点のものです。
公式のドキュメントはこちらのサイトから見ることができます。

 Utilities

 複数画像を一つの画像にする - make_image_grid()

複数の画像に対して行数と列数を指定して一枚の画像にします。
Parameters

images: List[PIL.Imag...]]></description><link>https://zenn.dev/prgckwb/articles/abf13e83c1b496</link><guid isPermaLink="true">https://zenn.dev/prgckwb/articles/abf13e83c1b496</guid><pubDate>Tue, 25 Jun 2024 11:04:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HBEHiL1T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Diffusers%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%25BB%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1MWU5MTZhMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item><item><title><![CDATA[進化計算ライブラリDEAPで高次方程式を解く]]></title><description><![CDATA[
 はじめに
こんにちは。株式会社コズムの開発部でインターンをしています、鈴木です。
前回に引き続き、遺伝的アルゴリズム第２弾！
ということで今回は、強力な進化計算ライブラリであるDEAPを使って数学の難問にチャレンジします。
遺伝的アルゴリズムの基礎については、前回の記事で「０から実装」を通して説明していますので、ぜひご一読ください。

 前回記事はこちら
https://zenn.dev/cosmcorp/articles/2e01cd279f5e63

 本題
今回は、以下の五次方程式の解を遺伝的アルゴリズム（GA）で求めます。あえて適当に作ったため、私は左辺の関数の振る舞いについ...]]></description><link>https://zenn.dev/cosmcorp/articles/8ef4fa263dea39</link><guid isPermaLink="true">https://zenn.dev/cosmcorp/articles/8ef4fa263dea39</guid><pubDate>Tue, 25 Jun 2024 11:03:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R9y7kQwk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2580%25B2%25E5%258C%2596%25E8%25A8%2588%25E7%25AE%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AADEAP%25E3%2581%25A7%25E9%25AB%2598%25E6%25AC%25A1%25E6%2596%25B9%25E7%25A8%258B%25E5%25BC%258F%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:j_suzuki29%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2MWZmNjBmZjUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B3%25E3%2582%25BA%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3NjViMDVhMTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>j_suzuki29</dc:creator></item><item><title><![CDATA[fizzbuzzはどこまで短く書けるか【python】]]></title><description><![CDATA[
 はじめに
こんにちは。
fizzbuzzには様々な書き方があります。
この記事では、そのfizzbuzzがどこまで短く書けるかということについて解説します。
※この記事ではpythonを使っています。

 普通のfizzbuzz
まず、普通のfizzbuzzを見てみましょう。
for i in range(1, 101):
    if i % 3 == 0 and i % 5 == 0:
        print("fizzbuzz")
    elif i % 3 == 0:
        print("fizz")
    elif i % 5 == 0:
        ...]]></description><link>https://zenn.dev/free_eerf/articles/be0114cea64255</link><guid isPermaLink="true">https://zenn.dev/free_eerf/articles/be0114cea64255</guid><pubDate>Tue, 25 Jun 2024 10:08:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qq8tAF9q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fizzbuzz%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25BE%25E3%2581%25A7%25E7%259F%25AD%25E3%2581%258F%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%25E3%2581%258B%25E3%2580%2590python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:free%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OTZjMzI3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>free</dc:creator></item><item><title><![CDATA[BigQueryを利用したアプリケーションのローカルテスト]]></title><description><![CDATA[BigQueryを利用するアプリケーションの開発時に、データベースの操作をどのようにテストするかが課題となります。その際の主な選択肢は下記となります。

BigQueryのモックを作成してローカルでテストする
テスト用のBigQuery環境を用意してGCP上でテストする

bigquery-emulatorを利用してローカルでテストする


 1. BigQueryのモックを作成してローカルでテストする

 概要
BigQueryの操作をモック化し、テスト時に実際のBigQueryに接続せずにテストを行う方法です。

 メリット

テストの実行が高速
外部サービスに依存しないため、安定し...]]></description><link>https://zenn.dev/carenet/articles/eeb5600b17c7d0</link><guid isPermaLink="true">https://zenn.dev/carenet/articles/eeb5600b17c7d0</guid><pubDate>Tue, 25 Jun 2024 08:59:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eexIul5w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BigQuery%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kaz%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJGOGFDT3NiNW5JTGRDSkVSUC1tNTJZZF9qNzRqUWJTemlGR0s9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kaz</dc:creator></item><item><title><![CDATA[Zedエディターが参照するPython環境を指定する]]></title><description><![CDATA[
 Python環境を指定する
VSCodeだと右下でエディターが参照するPython環境を指定できるがZedだとGUIからは指定できず、設定ファイルをプロジェクトに追加する必要がある。ファイル名はpyproject.toml（よくあるやつ）。
[tool.pyright]
venvPath = "/Users/user.name/micromamba/envs"
venv = "/Users/user.name/micromamba/envs/dev-env"
設定項目は

venvpath: 仮想環境が存在するパス。上記の例ではmicromambaというcondaのバリエーションを使...]]></description><link>https://zenn.dev/local/articles/c011a8d8f638c3</link><guid isPermaLink="true">https://zenn.dev/local/articles/c011a8d8f638c3</guid><pubDate>Tue, 25 Jun 2024 08:18:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vKmadoqu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zed%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%258C%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2599%25E3%2582%258BPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Catfish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzOGQ5MDdiN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Catfish</dc:creator></item><item><title><![CDATA[DockerComposeでNginx+Django+MySQL環境の構築]]></title><description><![CDATA[
 概要
Ubuntu(20.04 LTS)でDjangoの開発環境をDocker-composeを利用して構築したのでその備忘録です。

Ubuntu:20.04LTS
Docker:26.1.4
Docker Compose:2.24.1
Nginx:1.27.0
MySQL:8.0
Python:3.12


 ディレクトリ構成
今回のディレクトリ構成は下記になります。
.
├── .gitignore
├── .env
├── docker-compose.yml
|
├── django/
|   ├── .env
|   ├── Dockerfile
|   └── requ...]]></description><link>https://zenn.dev/jinzzzz/articles/4e452fc5587e6a</link><guid isPermaLink="true">https://zenn.dev/jinzzzz/articles/4e452fc5587e6a</guid><pubDate>Tue, 25 Jun 2024 08:16:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1YeLJ8Yh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DockerCompose%25E3%2581%25A7Nginx%252BDjango%252BMySQL%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmZDljYmRkMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jin</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-357｜A - Sanitize Hands]]></title><description><![CDATA[
 設問ページ

🔗ABC-357 A - Sanitize Hands



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    N, M = getIntMap()
    H = getIntList()

    t = [i for i in range(N) if sum(H[: i + 1]) &lt;= M]

    print(len(t))...]]></description><link>https://zenn.dev/hyperdb/articles/fac156c1225b74</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/fac156c1225b74</guid><pubDate>Tue, 25 Jun 2024 05:28:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wvFatdyz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-357%25EF%25BD%259CA%2520-%2520Sanitize%2520Hands%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-357｜B - Uppercase and Lowercase]]></title><description><![CDATA[
 設問ページ

🔗ABC-357 B - Uppercase and Lowercase



 提出結果
def getString():
    return input()


def main():
    S = getString()

    up = 0
    low = 0
    for x in list(S):
        if "a" &lt;= x &lt;= "z":
            low += 1
        else:
            up += 1

    print(S.upper() if up &gt; low e...]]></description><link>https://zenn.dev/hyperdb/articles/98491c0182a37f</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/98491c0182a37f</guid><pubDate>Tue, 25 Jun 2024 05:28:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pubrMAcR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-357%25EF%25BD%259CB%2520-%2520Uppercase%2520and%2520Lowercase%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-358｜A - Welcome to AtCoder Land]]></title><description><![CDATA[
 設問ページ

🔗ABC-358 A - Welcome to AtCoder Land



 提出結果
def getStringMap():
    return input().split()


def main():
    S, T = getStringMap()

    print('Yes' if S == 'AtCoder' and T == 'Land' else 'No')


if __name__ == "__main__":
    main()

]]></description><link>https://zenn.dev/hyperdb/articles/5fcb20120d0216</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/5fcb20120d0216</guid><pubDate>Tue, 25 Jun 2024 05:28:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hgrofxXT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-358%25EF%25BD%259CA%2520-%2520Welcome%2520to%2520AtCoder%2520Land%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-358｜B - Ticket Counter]]></title><description><![CDATA[
 設問ページ

🔗ABC-358 B - Ticket Counter



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    N, A = getIntMap()
    T = getIntList()

    r = []

    p = T[0] + A
    r.append(p)
    for i in range(1, N):
    ...]]></description><link>https://zenn.dev/hyperdb/articles/410f1be20f02df</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/410f1be20f02df</guid><pubDate>Tue, 25 Jun 2024 05:28:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fs0tfuCF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-358%25EF%25BD%259CB%2520-%2520Ticket%2520Counter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[Segment Anything のゼロショット学習による画像全体のセグメンテーション]]></title><description><![CDATA[こんにちは、HACARUS でインターンをしている朱です。
前回の記事で Segment-Anything Model (SAM) の初歩的な使い方について解説しました。本記事ではその応用として、ゼロショットで画像全体のセグメンテーションを実施する方法を紹介します。本記事で紹介する方法は、https://github.com/segments-ai/panoptic-segment-anything で紹介されている手法なので、実装の詳細について知りたい方は、そちらをご覧ください。

 ゼロショット学習とは

ゼロショット学習は、タスクの具体例を与えることなく、タスクを実行できるようにモ...]]></description><link>https://zenn.dev/hacarus_blog/articles/be4b0199cb312e</link><guid isPermaLink="true">https://zenn.dev/hacarus_blog/articles/be4b0199cb312e</guid><pubDate>Tue, 25 Jun 2024 02:38:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UW3IU1-T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Segment%2520Anything%2520%25E3%2581%25AE%25E3%2582%25BC%25E3%2583%25AD%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E5%2585%25A8%25E4%25BD%2593%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:guangxianzhu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4ZGQyMTJjYjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:HACARUS%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRDalhlNjlYZWUzYWRUcldxRmd2Z2hTSFJKV1Jpd2dxMVctY2NDVjJ1ZkV4RnVBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>guangxianzhu</dc:creator></item><item><title><![CDATA[AtCoder Beginner Contest 201~300 解説【Python】]]></title><description><![CDATA[AtCoder Beginner Contest 201~300までをPythonで解説した本です。記事が不完全でも公開し、代わりに頻繁に更新していく予定です。]]></description><link>https://zenn.dev/meg_zenn/books/abc_python_201-300</link><guid isPermaLink="true">https://zenn.dev/meg_zenn/books/abc_python_201-300</guid><pubDate>Mon, 24 Jun 2024 14:20:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4YVKond0--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mZGFiNzA5NWU0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Meg</dc:creator></item><item><title><![CDATA[AtCoder Beginner Contest 101~200 解説【Python】]]></title><description><![CDATA[AtCoder Beginner Contest 101~200までをPythonで解説した本です。記事が不完全でも公開し、代わりに頻繁に更新していく予定です。]]></description><link>https://zenn.dev/meg_zenn/books/abc_python_101-200</link><guid isPermaLink="true">https://zenn.dev/meg_zenn/books/abc_python_101-200</guid><pubDate>Mon, 24 Jun 2024 14:20:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YlNRuwhA--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xMjA5NWQzNTRiLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Meg</dc:creator></item><item><title><![CDATA[CodeCatalyst開発環境にcfn-lintを入れようとして躓いたけど何とかなった話]]></title><description><![CDATA[Python環境わからん。

 TL;DR
python3 がポイント。
python3 -m pip install cfn-lint

 あったこと
CodeCatalyst開発環境、便利ですよね。
CloudFormation開発するときにはCloudFormation Linter（cfn-lint）があるともっと便利になるためインストールしましょう！
$ which python
alias python='python3.9'
        /usr/local/bin/python3.9
$ which python3
/usr/bin/python3
$ python ...]]></description><link>https://zenn.dev/dannykitadani/articles/22394767060d40</link><guid isPermaLink="true">https://zenn.dev/dannykitadani/articles/22394767060d40</guid><pubDate>Mon, 24 Jun 2024 14:12:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zRev1Fix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeCatalyst%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABcfn-lint%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E8%25BA%2593%25E3%2581%2584%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A9%25E4%25BD%2595%25E3%2581%25A8%25E3%2581%258B%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Danny%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZmU0MzM2NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Danny</dc:creator></item><item><title><![CDATA[プロンプトエンジニアリングを革新する「SAMMO」、生成AIのアウトプットの精度を向上]]></title><description><![CDATA[生成AIは非常に便利なツールですが、指示をする際のプロンプトによって生成結果が異なるため
プロンプトエンジニアリングが重要視されています。
これまでは生成AIに対して問い合わせる→生成結果を見て再度プロンプトを修正するといった対応をしなければなりませんでした。
SAMMOを使用することで試行錯誤から解放され、プロンプトを修正する必要が無くなります。
https://github.com/microsoft/sammo

 SAMMO(Structure-Aware Multi-objective Metaprompt Optimization)とは？
「SAMMO」は、プロンプトエンジニ...]]></description><link>https://zenn.dev/minedia/articles/af9a73d115d1e3</link><guid isPermaLink="true">https://zenn.dev/minedia/articles/af9a73d115d1e3</guid><pubDate>Mon, 24 Jun 2024 10:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--djllsp_S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E9%259D%25A9%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%258CSAMMO%25E3%2580%258D%25E3%2580%2581%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2582%2592%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ShintaroAmaike%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5ODUyZjZkYzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmNWYzMmE0MWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ShintaroAmaike</dc:creator></item><item><title><![CDATA[Java/Go/Node.js/Pythonのタスクランナー]]></title><description><![CDATA[
 概要
Zennで記事を1回書いてみようと思い、筆者がこれまでに使ったことがあるタスクランナーを整理した記事になります。各ツールの比較をする記事ではありません。

 タスクランナーとは
この記事ではソースコードのビルド、静的解析、Unit Testの実行など、開発時に必要となる処理をコマンドラインから実行するソフトウェアを指しています。

 各言語のタスクランナー

 Java

 Apache Maven
https://maven.apache.org/
mvnコマンドでビルドしたり、pom.xmlファイルで依存性を管理するJava向けのツール。
最近はGradleばかりを使うよう...]]></description><link>https://zenn.dev/glavis/articles/0062f5a9e926a4</link><guid isPermaLink="true">https://zenn.dev/glavis/articles/0062f5a9e926a4</guid><pubDate>Mon, 24 Jun 2024 09:08:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u5GOLmRV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%252FGo%252FNode.js%252FPython%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Glavis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWpkSFU2WHVTX0o1cGE1X3JQdTNJSUphMm1ZdlJ2LXByWTA0ZUNEQzNLdkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Glavis</dc:creator></item><item><title><![CDATA[WSL2上のDockerコンテナから`plt.show()`でグラフを表示するための設定]]></title><description><![CDATA[
 これはなに
WSL2（Ubuntu）上のDockerコンテナから、matplotlibで作成したグラフをshow()メソッドで表示するための設定のメモ。

 前提
Dockerコンテナからplt.show()でグラフを表示しようとすると、下記のようなエラーが発生して、グラフが表示されない。

error
$ /usr/local/bin/python /home/user/workspaces/src/main.py
/home/user/workspaces/src/main.py:9: UserWarning: FigureCanvasAgg is non-interactive...]]></description><link>https://zenn.dev/nakurei/articles/display-graph-from-within-docker-container-on-wsl2</link><guid isPermaLink="true">https://zenn.dev/nakurei/articles/display-graph-from-within-docker-container-on-wsl2</guid><pubDate>Sun, 23 Jun 2024 22:55:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b5PcgTXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E4%25B8%258A%25E3%2581%25AEDocker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%258B%25E3%2582%2589%2560plt.show%2528%2529%2560%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NakuRei</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3匿名関数（lambda）]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
Pythonにおける匿名関数（anonymous function）は、名前を持たない関数のことです。通常の関数定義と異なり、lambdaキーワードを使って一行で定義されます。

 匿名関数の基本構文
lambda 引数1, 引数2, ... : 式
この構文では、lambdaの後に引数を指定し、コロンの後に式を記述します。式の結果が匿名関数の戻り値となります。

 匿名関数の特徴

名前を持たない: ...]]></description><link>https://zenn.dev/datasciencekun/articles/410b6e5b3c39c7</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/410b6e5b3c39c7</guid><pubDate>Sun, 23 Jun 2024 10:52:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SPkzBjCR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E5%258C%25BF%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%25EF%25BC%2588lambda%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[初心者のPython3レッスンーーPython3の関数]]></title><description><![CDATA[
 シーリズの目次
初心者のPython3レッスンをここにまとめています。
https://zenn.dev/datasciencekun/articles/319e0f4b4021c5
関数は組織化され、再使用可能であり、単一または関連する機能のコード・セグメントを実装することです。
関数はアプリケーションのモジュール性とコードの重複利用を向上させます。Pythonにはprint()のような多くの内蔵関数がありますが、自分で関数を作成することもできます。これはカスタム関数と呼ばれます。

 関数の定義と呼び出し
Pythonで関数を定義するには、defキーワードを使用します。
関数の呼...]]></description><link>https://zenn.dev/datasciencekun/articles/31a1ff7202c3ed</link><guid isPermaLink="true">https://zenn.dev/datasciencekun/articles/31a1ff7202c3ed</guid><pubDate>Sun, 23 Jun 2024 10:33:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ob_r8gm1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AEPython3%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2583%25BC%25E3%2583%25BCPython3%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1MTEwODMxZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>データサイエンス君</dc:creator></item><item><title><![CDATA[開発環境管理はとりあえずmiseで]]></title><description><![CDATA[Mac限定です(Windowsサポート外)
開発しているとpython, nodejs, ruby, perl, golang...といろいろな言語の実行環境が必要になると思います。
それぞれの言語環境に閉じて見れば、pyenvとかrbenvとか、色々な管理ツールがありますが、それぞれ当然別個のものなのでだんだん混乱してきます。
そしてそれすら使っていない場合は brew install で乱暴にインストールしてもはやカオスなローカル環境ができがちでした...
半年前くらいにasdfという開発環境管理ツールを見つけて適当に使っていたのですが、最近ではさらにasdfの課題も解消したmise...]]></description><link>https://zenn.dev/knziiy/articles/fa32a6e6a3aa63</link><guid isPermaLink="true">https://zenn.dev/knziiy/articles/fa32a6e6a3aa63</guid><pubDate>Sun, 23 Jun 2024 08:37:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UR5aScJL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AF%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259Amise%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knziiy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTFkYzlkZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knziiy</dc:creator></item></channel></rss>