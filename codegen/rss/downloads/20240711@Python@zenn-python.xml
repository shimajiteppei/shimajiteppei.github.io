<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 11 Jul 2024 10:46:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[DeprecationWarning: pkg_resources is deprecated as an API に対応する]]></title><description><![CDATA[
 背景
Python のライブラリを実装している時にコード内でライブラリに含まれている画像データを参照したい時などに今まで pkg_resources.resource_filename を用いていました。
import pkg_resources

image_path = pkg_resources.resource_filename('my_package', 'data/image.png')

with open(image_path, 'rb') as f:
    image_data = f.read()
しかしこのコードを実行時に以下のエラーが表示されます。
Depr...]]></description><link>https://zenn.dev/cykinso/articles/b07d905b97931c</link><guid isPermaLink="true">https://zenn.dev/cykinso/articles/b07d905b97931c</guid><pubDate>Thu, 11 Jul 2024 07:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yp1NDPGr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeprecationWarning%253A%2520pkg_resources%2520is%2520deprecated%2520as%2520an%2520API...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yamasaKit%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmNTQzYzVhYjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Cykinso%2527s%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZDc4NDNmZDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamasaKit</dc:creator></item><item><title><![CDATA[Cursor (VSCode) の拡張機能、 Black formatter が突然動かなくなったので直す]]></title><description><![CDATA[タイトルの通り。何もしてないのにある日突然動かなくなった（ファイルを保存してもフォーマットされない。コマンドパレットから Format Document (Force) してもだめ）
困るので直す

 結論
Black formatterをプレスリリースバージョンに変更したら直った

 やり方
拡張機能 &gt; Black Formatter で検索 &gt; リリースバージョンへの切り替え

]]></description><link>https://zenn.dev/keit0728/articles/0ac37389e45894</link><guid isPermaLink="true">https://zenn.dev/keit0728/articles/0ac37389e45894</guid><pubDate>Thu, 11 Jul 2024 07:35:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CQEpg8gp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cursor%2520%2528VSCode%2529%2520%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%2581%2520Black%2520formatter%2520%25E3%2581%258C%25E7%25AA%2581%25E7%2584%25B6%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E7%259B%25B4%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keit%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOTZlMjAyNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keit</dc:creator></item><item><title><![CDATA[GCPで有効期限を短くした認証トークンをPythonで発行する]]></title><description><![CDATA[
 はじめに
Google Cloud Platform (GCP)を使用する際、APIリクエストの認証に使用するトークンの有効期限は、デフォルトで1時間に設定されています。しかし、セキュリティを強化するために、より短い有効期限のトークンを使用したいケースがあります。
基本的には、公式ドキュメントにやり方が書いてあります。
https://cloud.google.com/iam/docs/create-short-lived-credentials-direct?hl=ja#console

 権限借用による解決策
OAuth 2.0のアクセストークンを発行する場合は、権限借用を利用す...]]></description><link>https://zenn.dev/t_yng/articles/8c2a5e35cf9eb4</link><guid isPermaLink="true">https://zenn.dev/t_yng/articles/8c2a5e35cf9eb4</guid><pubDate>Thu, 11 Jul 2024 06:57:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z1KMpU85--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%25E3%2581%25A7%25E6%259C%2589%25E5%258A%25B9%25E6%259C%259F%25E9%2599%2590%25E3%2582%2592%25E7%259F%25AD%25E3%2581%258F%25E3%2581%2597%25E3%2581%259F%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592Python%25E3%2581%25A7%25E7%2599%25BA%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-yng%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwNmY2ZWExYmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-yng</dc:creator></item><item><title><![CDATA[【MotionBuilder】Python スクリプトテンプレート]]></title><description><![CDATA[
 基本のテンプレート
# -*- coding: utf-8 -*-

from pyfbsdk import*
from pyfbsdk_additions import*

def main():
    somefunction()

def somefunction():

if __name__ in ("__main__", "builtins"):
    main()  


 ソースエンコーディングの宣言
# -*- coding: utf-8 -*- を宣言することでソースコード内でUTF-8エンコーディングを使用できるようになり、例えば日本語をコード内で扱えるよう...]]></description><link>https://zenn.dev/nadegata_memo/articles/898e5eb49f82a8</link><guid isPermaLink="true">https://zenn.dev/nadegata_memo/articles/898e5eb49f82a8</guid><pubDate>Thu, 11 Jul 2024 06:54:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--clzQmnX0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590MotionBuilder%25E3%2580%2591Python%2520%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nadegata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1NWMyYWI1ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nadegata</dc:creator></item><item><title><![CDATA[中央・地方競馬 どちらも予想できる競馬AIを作ろう！(ChatGPTも利用) - 2024年 夏号 (β版)]]></title><description><![CDATA[本書は、競馬データサイエンスを駆使して、競馬AIを作成する方法を解説するものです。初心者でも理解しやすいよう、解説を行います。中央競馬のデータだけではなく、地方競馬のデータを用いた場合のパフォーマンスについても実験結果を掲載、解説しています。

＊補足
・技術書典16の内容とかなり似ている内容となっています。異なる点はnetkeibaの情報を使って実験と検証を行なっている点です。
・2024/7/8 本書はまだβ版となっていて荒削りな記載となっていまして、そのため値段を大幅に小さくしています。ただ、今後値段をあげることを予定しています (技術書典16では1,600円で販売)
直近はこちらの情報を更新していき、本のクオリティを高めていく予定ですので、早めにご購入いただけるとお安く情報が閲覧できます。 ]]></description><link>https://zenn.dev/keivacance/books/4671943e5e6280</link><guid isPermaLink="true">https://zenn.dev/keivacance/books/4671943e5e6280</guid><pubDate>Thu, 11 Jul 2024 00:49:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FAJvYGQj--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84ODVjY2Y3MDJhLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ケイバカンス</dc:creator></item><item><title><![CDATA[Pythonを初めて触る高校生が作った新作ラノベ自動取得コード解説]]></title><description><![CDATA[
 Pythonを初めて触る高校生が作った新作ラノベ自動取得コード解説

 はじめに
この記事を見てくれてくださりありがとうございます。
プログラマー志望の高校生、白深やよいです。
Node.jsをメインに勉強していたのですが、Pythonも使えると色々と便利だよな、、、と思い、Pythonの強みであるwebスプレイピングに挑戦してみました。
開発してみて思ったのは、小さいことを積み重ねることが本当に大切だと学びました。
そんなことはさておき、今回のコードを自分なりに解説してみました。
参考になると幸いです。

 解説

 全体
全体はこちらになります。
from google.oaut...]]></description><link>https://zenn.dev/shirafukayayoi/articles/3d89539bf26c3d</link><guid isPermaLink="true">https://zenn.dev/shirafukayayoi/articles/3d89539bf26c3d</guid><pubDate>Wed, 10 Jul 2024 15:50:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ps229wZn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E8%25A7%25A6%25E3%2582%258B%25E9%25AB%2598%25E6%25A0%25A1%25E7%2594%259F%25E3%2581%258C%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E6%2596%25B0%25E4%25BD%259C%25E3%2583%25A9%25E3%2583%258E%25E3%2583%2599%25E8%2587%25AA%25E5%258B%2595%25E5%258F%2596%25E5%25BE%2597%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2599%25BD%25E6%25B7%25B1%25E3%2582%2584%25E3%2582%2588%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFhUWk8zMUlYc2VnQjdyNC1DbXl4TklET3gyM1RhckhpQjROSmV5X1h3TlNXbjBHOTBYdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>白深やよい</dc:creator></item><item><title><![CDATA[【Python】aioh2 で HTTP/2 クライアントをつくる]]></title><description><![CDATA[aioh2 は h2 を asyncio に対応させたモジュールである。

client.py
import asyncio
import aioh2

async def example():
    client = await aioh2.open_connection('127.0.0.1', 8000)

    stream_id = await client.start_request([
        (':scheme', 'h2c'),
        (':authority', 'localhost'),
        (':method', 'GET'),
...]]></description><link>https://zenn.dev/masakielastic/articles/81a83dff055d97</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/81a83dff055d97</guid><pubDate>Wed, 10 Jul 2024 15:08:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YhQM7A64--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591aioh2%2520%25E3%2581%25A7%2520HTTP%252F2%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[GIS × Python Tutorial 5.2 ~ geopandasでの空間検索メソッド ~]]></title><description><![CDATA[
 はじめに

この記事は「GIS × Python Tutorial」の関連記事です。
今回はgeopandas.GeoDataFrameでの空間検索メソッドの使い方を解説します。このメソッドは shapely の geometry オブジェクトが使用されているので、shapely のドキュメントを見た方が分かりやすいかもしれません。GeoDataFrameの基本がわからない方は前回の記事もどうぞ。
この記事を作成する際に使用したNotebookやConda環境設定ファイルはGitHubで公開しています。
https://github.com/shingo405nagano/Write...]]></description><link>https://zenn.dev/daidai_daitai/articles/88df0cc3bc935b</link><guid isPermaLink="true">https://zenn.dev/daidai_daitai/articles/88df0cc3bc935b</guid><pubDate>Wed, 10 Jul 2024 14:50:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vPxQff8---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%25205.2%2520%7E%2520geopandas%25E3%2581%25A7%25E3%2581%25AE%25E7%25A9%25BA%25E9%2596%2593%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>橙。</dc:creator></item><item><title><![CDATA[Streamlit in Snowflake (SiS) で自然言語によるデータ分析をしてみる　]]></title><description><![CDATA[
 はじめに
Snowflake では Snowflake Copilot という LLM アシスタント機能がプレビュー機能として公開されています。この Snowflake Copilot を用いることで自然言語を用いてテーブルデータの分析を行うことが可能です。
一方で Streamlit in Snowflake (SiS) では簡単に生成 AI を組み込んだり、テーブルデータにセキュアにアクセスすることができるため、もっとお節介な自然言語データ分析ができるのではないか？と思い、自然言語で分析したり可視化したりできるアプリを作ってみました。
※ 本記事は私個人の発信となります。Snow...]]></description><link>https://zenn.dev/tsubasa_tech/articles/2608c820294860</link><guid isPermaLink="true">https://zenn.dev/tsubasa_tech/articles/2608c820294860</guid><pubDate>Wed, 10 Jul 2024 14:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dF8FFJKB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%2520in%2520Snowflake%2520%2528SiS%2529%2520%25E3%2581%25A7%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsubasa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyYmI4NWM0ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsubasa</dc:creator></item><item><title><![CDATA[【Python】h2.connection とプレーンな socketを使って HTTP/2 リクエストを送信する]]></title><description><![CDATA[h2.connection の使い方を学ぶためにプレーンな socket で HTTP/2 リクエストを送信するクライアントコードの例を試してみた。
サーバーからのレスポンスをまとめて取得し、レスポンスデータを解析して生成することで生成されたイベントオブジェクトをもとにレスポンスヘッダーやボディを取得したり、ループの終了を行っている。
h2 モジュールのインストール
pip install h2
HTTP/2 クライアントのコード

client.py
# https://github.com/python-hyper/h2/blob/master/examples/plain_sock...]]></description><link>https://zenn.dev/masakielastic/articles/8ede0224474bff</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/8ede0224474bff</guid><pubDate>Wed, 10 Jul 2024 12:35:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xja1v2kF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591h2.connection%2520%25E3%2581%25A8%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AA%2520socket%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520HTTP%252F2%2520%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[LangGraphでグラフから別のグラフを呼び出す]]></title><description><![CDATA[
 この記事の概要
こんにちは。PharmaX でエンジニアをしている諸岡（@hakoten）です。
この記事では、大規模言語モデル（LLM）を活用したアプリケーションの開発を支援するフレームワークであるLangChain内にあるツールの一つ、LangGraphを使ってグラフからグラフを呼び出すネスト構造を作る方法についてご紹介します。
LangGraphの基本的な使い方については、以下の記事もぜひご覧ください。
https://zenn.dev/pharmax/articles/8796b892eed183

 環境
この記事執筆時点では、以下のバージョンで実施しています。
とくにLa...]]></description><link>https://zenn.dev/pharmax/articles/148bc9497d68dd</link><guid isPermaLink="true">https://zenn.dev/pharmax/articles/148bc9497d68dd</guid><pubDate>Wed, 10 Jul 2024 08:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1fphhp0T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangGraph%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%258B%25E3%2582%2589%25E5%2588%25A5%25E3%2581%25AE%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hakotensan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxNTUyMTlkOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PharmaX%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNGM1MmE4MWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hakotensan</dc:creator></item><item><title><![CDATA[FastAPIのFormでNone(null)を許可すると良くない]]></title><description><![CDATA[FastAPIでフォームデータを受け取る際、パスオペレーション関数の引数に以下のように設定します。
username: str = Form()
このように定義した場合、このusernameは必須項目となります。この使い方は、公式サイトに則った正しい方法です。
では、入力が任意の項目は、どうすればいいでしょうか？Formには第一引数にdefault値が設定できます。それをNoneに設定することにします。
この時、Formも返値は、データが入力された場合とされなかった場合で、型が変わります。例えばフォームデータから文字列を受け取る場合は、返値の型は、str | Noneとなるので、以下のよ...]]></description><link>https://zenn.dev/noknmgc/articles/fastapi-form-null</link><guid isPermaLink="true">https://zenn.dev/noknmgc/articles/fastapi-form-null</guid><pubDate>Wed, 10 Jul 2024 07:53:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H3MmJ5-S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25AEForm%25E3%2581%25A7None%2528null%2529%25E3%2582%2592%25E8%25A8%25B1%25E5%258F%25AF%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E8%2589%25AF%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmZGMwNGUwYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ノック</dc:creator></item><item><title><![CDATA[【Android】Chaquopyを使ったAndroidアプリ開発]]></title><description><![CDATA[
 はじめに
Chaquopyを使えばローカルのPythonスクリプトをAndroidアプリに簡単に組み込んで試すことができる
Chaquopyを使ってAndroidアプリ上でpythonコードを動かすところまでをやってみた
Android Studio : Flamingo 2022

 各種設定ファイルへの追記
まずは、各種設定ファイルへの追記を行う
Androidプロジェクトを作成すると2種類のbuild.gradleが作成される
上側がプロジェクトレベルのbuild.gradle
下側がアプリレベルのbuild.gradle


プロジェクトレベルのbuild.gradleに下記...]]></description><link>https://zenn.dev/hajime9109/articles/f8703bc4c98258</link><guid isPermaLink="true">https://zenn.dev/hajime9109/articles/f8703bc4c98258</guid><pubDate>Wed, 10 Jul 2024 07:04:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m9bloSvN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Android%25E3%2580%2591Chaquopy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FAndroid%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HajimeTahara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkOTNhZjAyYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HajimeTahara</dc:creator></item><item><title><![CDATA[CDKを使ってPrefect を ECS にデプロイしてみた]]></title><description><![CDATA[
 はじめに
こんにちは！Septeni Japan 株式会社でデータエンジニアをしている大志万といいます。
実務では IaC は Terraform、ワークフローオーケストレーションツールは Digdag を使用して ETL を構築しています。
勉強の一環として、以前から気になっていた CDK（IaC） と Prefect（オーケストレーションツール） に触るために、CDK で Prefect サーバーを デプロイしてみました。
今回はその備忘録となります。

 前提
簡単に CDK と Prefect について紹介します。

 CDK とは
CDK は AWS のリソースをプログラム...]]></description><link>https://zenn.dev/septeni_japan/articles/2024-06_prefect</link><guid isPermaLink="true">https://zenn.dev/septeni_japan/articles/2024-06_prefect</guid><pubDate>Wed, 10 Jul 2024 06:32:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9AsZnwHy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDK%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Prefect%2520%25E3%2582%2592%2520ECS%2520%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:oshiman%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlMzQ3Njk1ZjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Septeni%2520Japan%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMjBlMzNmNDcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oshiman</dc:creator></item><item><title><![CDATA[自動売買ロジックの正しい「パラメータの最適化」とは具体的にどういうことか？]]></title><description><![CDATA[!
botter初心者の記事なので、誤りがあるかもしれません。

はじめまして、botter初心者のmakioと申します。
最近自己流に検証して放流したbotって本当に大丈夫なんだっけ？っていうのが気になって一般的なパラメータ最適化の方法を調べてみた。
結論から言うと良くないやり方で作成していることがわかり、見直しが必要なことがわかった。
この記事では調べた内容をまとめておく。

 自動売買におけるパラメータ、最適化とは
例えばある値段で買ったあとn%価格が上昇したら売るという売買戦略があるとする。
この売買戦略におけるパラメータとはnのことで、パラメータの最適化とは未来(未知)のデータ...]]></description><link>https://zenn.dev/afk2777/articles/zenn-bot-strategy-param-zation</link><guid isPermaLink="true">https://zenn.dev/afk2777/articles/zenn-bot-strategy-param-zation</guid><pubDate>Tue, 09 Jul 2024 13:45:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MG3WWxJ9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNzVlY2U1ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>makio</dc:creator></item><item><title><![CDATA[Streamlit in Snowflake (SiS) でトークン数チェックアプリを作ってみた]]></title><description><![CDATA[
 はじめに
はじめまして。Snowflake でセールスエンジニアをしています。日頃試してみたことを皆様にお裾分けできればと思い色々と投稿していければと思います。今回は Streamlit in Snowflake で Cortex LLM のトークン数をチェックしてコスト試算ができるアプリを作ってみたいと思います。
※ 本記事は私個人の発信となります。Snowflake を代表しての発言では無いためご理解いただければ幸いです。

 Streamlit in Snowflake (SiS) とは？
まず Stremlit は Python のライブラリです。Streamlit を使うと...]]></description><link>https://zenn.dev/tsubasa_tech/articles/4dd80c91508ec4</link><guid isPermaLink="true">https://zenn.dev/tsubasa_tech/articles/4dd80c91508ec4</guid><pubDate>Tue, 09 Jul 2024 10:15:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wqZfNxzb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%2520in%2520Snowflake%2520%2528SiS%2529%2520%25E3%2581%25A7%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%2595%25B0%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsubasa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyYmI4NWM0ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsubasa</dc:creator></item><item><title><![CDATA[Metabase のクエリを GitHub にバックアップしていく]]></title><description><![CDATA[!

 学べること

Metabase のクエリを GitHub にバックアップしていく方法
GitHub Actions でコミットマージする方法
Metabase API からjsonファイルの取得
jsonファイルの中に記述されているクエリとフォルダ分けする方法




 はじめに
ほとんどのBIツールには、GUIを使用して構築する性質上、コード管理機能がありません。MetabaseはAPIを通じてさまざまなデータを取得できるため、GUIで構築されたダッシュボードのデザインなどの項目以外の部分でコード管理が可能です。
今回は、GitHub Actionsを用いて、データ取得のコード...]]></description><link>https://zenn.dev/yuichi_dev/articles/c9189739b960f6</link><guid isPermaLink="true">https://zenn.dev/yuichi_dev/articles/c9189739b960f6</guid><pubDate>Tue, 09 Jul 2024 04:47:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MFs6Z8Cv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Metabase%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%2592%2520GitHub%2520%25E3%2581%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmI0ZGExMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuichi</dc:creator></item><item><title><![CDATA[PyTorchでDQNをやってみた]]></title><description><![CDATA[
 ミニゲームをAIに攻略させてみましょうか

 ごあいさつ
ﾀﾞｳﾞﾉｰ ﾆ ｳﾞｨｰｼﾞｪﾘｼ!(お久しぶりです！)ミ・ズターニャ・ソヴィエツカです！
今回はPythonの基本的な使い方がわかり、AIに興味がある人向けとして、ミニゲームを攻略するAIを作ってみようと思います！
今回は降ってくるアイテムを左右に移動して回収するゲームを作り、プレイさせてみようと思います！
一緒に頑張りましょう！
AI開発に興味がある方は、是非参考にしてくださると嬉しいです！
また、ふんわりと雰囲気でやっていくので、数学的な話や高度な話はできるだけしません！
ここどういうことなのだろう？とか、何をしている...]]></description><link>https://zenn.dev/viceinc/articles/e78fee3a0c73e1</link><guid isPermaLink="true">https://zenn.dev/viceinc/articles/e78fee3a0c73e1</guid><pubDate>Tue, 09 Jul 2024 01:32:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g_hgnskT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25A7DQN%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%259F%25E3%2583%25BB%25E3%2582%25BA%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25A3%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MjExMTk2MTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25B4%25E3%2582%25A1%25E3%2582%25A4%25E3%2582%25B9%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXJkb2hvb1hwTGRGbGt1ZGMxNUMzV1BXM2VvQU5pc2VsOFpHWERBYXJjPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミ・ズターニャ</dc:creator></item><item><title><![CDATA[How to install pyenv on Debian]]></title><description><![CDATA[
 概要
Debianにpyenvをインストールする手順について備忘録としてまとめた．

 対象読者
Debianを使用し，複数のPythonバージョンを簡単に管理したい人を対象としている．

 pyenvのインストール方法

 1. 必要なパッケージのインストール
sudo apt install build-essential curl wget zip git libssl-dev libbz2-dev libffi-dev liblzma-dev libreadline-dev libsqlite3-dev tk-dev

 2. pyenvのリポジトリをクローン
git clo...]]></description><link>https://zenn.dev/tomokis/articles/76b1946e94d886</link><guid isPermaLink="true">https://zenn.dev/tomokis/articles/76b1946e94d886</guid><pubDate>Mon, 08 Jul 2024 14:05:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hz9snq1a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:How%2520to%2520install%2520pyenv%2520on%2520Debian%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomoki%2520sugiura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1FNeFZ3OFVfbUVZNks0aDRPWGZYUGEtZXhJUDBDZk9XUUxoOFBpSFBJV0FubD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomoki sugiura</dc:creator></item><item><title><![CDATA[【Microsoft Fabric】Microsoft  Fabricでcondaを使い、ライブラリーのバージョンを設定する]]></title><description><![CDATA[
 参考資料
https://learn.microsoft.com/en-us/fabric/data-engineering/library-management

 前提

Microsoft FabricのNotebookが使える状態であること

https://zenn.dev/headwaters/articles/6c08f8ba1f8e47

 手順

Notebook上で以下のコードを実行する

pip list
出力結果
Package                       Version

absl-py                       2.0.0...]]></description><link>https://zenn.dev/headwaters/articles/78852af925fcb2</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/78852af925fcb2</guid><pubDate>Sun, 07 Jul 2024 23:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JLWujgqR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Microsoft%2520Fabric%25E3%2580%2591Microsoft%2520%2520Fabric%25E3%2581%25A7conda%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2580%2581%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODg5YTRhYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item></channel></rss>