<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 13 Sep 2024 06:15:54 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[DockerでBunを使ってサーバーを立ててみた]]></title><description><![CDATA[
 はじめに
この記事では、JavaScriptランタイムであるBunをDockerコンテナ内で使う方法を紹介します。
その際、DockerからBunでサーバーを立ち上げ、ホストPCからアクセスするというのをやってみました。
!
筆者はDocker初心者なので、必ずしも記事の内容が正しいわけではありません。
他のサイトや記事も参考にすることをお勧めします。

!
この記事はQiitaとのマルチポストです。ご了承ください。

Bunのホームページはこちら。
https://bun.sh

 環境

Docker 25.0.3
VSCode 1.93.0
Mac M1


 やり方
やり方は...]]></description><link>https://zenn.dev/nanasi_1/articles/6375c0fbaa3b8d</link><guid isPermaLink="true">https://zenn.dev/nanasi_1/articles/6375c0fbaa3b8d</guid><pubDate>Fri, 13 Sep 2024 06:15:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Le9ZymQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Bun%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nanasi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MDFiNWU4NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nanasi</dc:creator></item><item><title><![CDATA[インテグレーションテスト導入時のエラーと対応]]></title><description><![CDATA[
 はじめに
初めまして、株式会社Rehab for JAPAN でデイサービス向け介護請求ソフト レセプトの開発を担当している辻です。
レセプトのフロントエンドチームではテストコードが少なく、コード変更に伴うバグの懸念や、その修正作業への心理的負荷が大きいことが課題となっていました。
この課題に対する対応としてTesting Trophyにおけるインテグレーションテストを導入しました。
以下に、テスト導入時に発生したエラーとその対応内容を列挙します。

 前提
構成は、Next.js + Jest + React Testing Library + MSW です。
Jest によるユニ...]]></description><link>https://zenn.dev/rehabforjapan/articles/59e637194104b6</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/59e637194104b6</guid><pubDate>Fri, 13 Sep 2024 02:01:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NVI17b2z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E5%25B0%258E%25E5%2585%25A5%25E6%2599%2582%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tsuji%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFhvTkRraFRKbTd2QzVlRHl3QXBlN0dzaGlpSGpWUUVBamUxeEhnYzBld21ZaGhsWT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsuji</dc:creator></item><item><title><![CDATA[【初心者向け】Reactのレンダリングについて学んでみよう！]]></title><description><![CDATA[
 はじめに
Reactのレンダリングそのものについての記事は意外と少ないと感じたため、執筆しました！
Reactのレンダリングメカニズムを理解することは、効率的な開発とパフォーマンス最適化に直結します。
この記事では、Reactのレンダリングの基本的な概念をお届けし、React開発をよりスムーズにするお手伝いができればと思っています！

 問題
以下に、姓と名の入力フィールドで構成されたシンプルなコンポーネントがあります。
あなたは、このコンポーネントの姓のフィールドに「react」、名のフィールドに「test」と入力しました。
ここで、次の問いに答えてください。

合計で何回レンダリ...]]></description><link>https://zenn.dev/kiman/articles/30f6d604e95847</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/30f6d604e95847</guid><pubDate>Thu, 12 Sep 2024 05:03:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E6syrhU1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591React%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[broadcast-channel 日本語訳]]></title><description><![CDATA[以下の broadcast-channel の日本語訳です。
https://github.com/pubkey/broadcast-channel

メモ
- Deepl による機械翻訳です]]></description><link>https://zenn.dev/hsato_workman/books/fd2b3463f9b069</link><guid isPermaLink="true">https://zenn.dev/hsato_workman/books/fd2b3463f9b069</guid><pubDate>Wed, 11 Sep 2024 18:08:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wT2VKQpu--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82MmY0NThlZTM2LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hiroki-sato-workman</dc:creator></item><item><title><![CDATA[特定の商品のカートページでチェックボックスを出す【Shopify】]]></title><description><![CDATA[
 はじめに
特定の商品（今回はDEMI DO）がカートにある場合、チェックボックスを出現させて、クリックしたら次へ進める実装をしようと思ったのですが、結構つまずいたので備忘録がてら記事にしました。


 ループ処理
今回編集するのはmain-cart-footer.liquidです。
まずはforで商品をループさせ、DEMI DOコレクションの商品が入っていたらif文で、チェックボックスを表示させるコードを書きます。
            {% for item in cart.items %}
                {% for collection in item.pr...]]></description><link>https://zenn.dev/hatopoppo0606/articles/b3ea544ea9fc90</link><guid isPermaLink="true">https://zenn.dev/hatopoppo0606/articles/b3ea544ea9fc90</guid><pubDate>Wed, 11 Sep 2024 16:32:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WGcK3uS0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E5%2595%2586%25E5%2593%2581%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2599%25E3%2580%2590Shopify%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25BA%25E3%2582%25AD%2520%252F%2520Shopify%25E5%25AD%25A6%25E7%25BF%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjZjhhYjU1NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カズキ / Shopify学習</dc:creator></item><item><title><![CDATA[生成AI(ChatGPT4o mini)を使ってフロントエンドを作って見えた問題点3選]]></title><description><![CDATA[
 記事の概要
最近、生成AIがよく話題に上がります。そこで、私も生成AIを活用してフロントエンドの開発に挑戦してみました。具体的には、ゲームのガチャをシミュレートするサイトを作成してみたのですが、その過程でいくつかの問題が見えてきました。以下に、その問題点を3つ紹介します。

 問題点


データ処理の漏れ
生成AIに100行程度のデータを処理させたところ、漏れが発生しました。GPT曰く、AIの処理能力には限界があり、大量のデータを一度に処理すると、意図した通りの結果が得られないことがあるのとことです。そのため、この部分はAIに依頼できず、自分でデータを処理する必要がありました。


...]]></description><link>https://zenn.dev/nnnto/articles/eda52f5c2d208c</link><guid isPermaLink="true">https://zenn.dev/nnnto/articles/eda52f5c2d208c</guid><pubDate>Wed, 11 Sep 2024 13:09:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YNYrIgML--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590AI%2528ChatGPT4o%2520mini%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E8%25A6%258B%25E3%2581%2588%25E3%2581%259F%25E5%2595%258F%25E9%25A1%258C%25E7%2582%25B93%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2593%25E3%2583%25BC%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMTQ3MGVmYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>んーと</dc:creator></item><item><title><![CDATA[有限オートマトン (FSM) JavaScriptで実装]]></title><description><![CDATA[有限オートマトン（Finite State Machine, FSM）は、コンピュータサイエンスの基本概念であり、限られた数の状態とそれらの状態間の遷移を持つシステムをモデル化するための構造化された方法です。FSMは、ユーザーインターフェイスの管理、ゲームのメカニクス、フォーム送信の処理などで特に有用です。このブログでは、FSMの基本、JavaScriptでの実装方法、そして状態遷移時にロジックを実行するためのアクションをどのように追加するかを探っていきます。

 有限オートマトン（FSM）とは？
FSMは次の要素で構成される計算モデルです：


状態: システムが存在できる異なる条件や...]]></description><link>https://zenn.dev/socialplus/articles/54463835f3153a</link><guid isPermaLink="true">https://zenn.dev/socialplus/articles/54463835f3153a</guid><pubDate>Wed, 11 Sep 2024 09:49:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CzAjRbnt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2589%25E9%2599%2590%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259E%25E3%2583%2588%25E3%2583%25B3%2520%2528FSM%2529%2520JavaScript%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kailma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4Mjg2YmNjMDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SocialPLUS%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXNXRVZFaTBmMDM2VUhvckNoRzF4UkotZzdtaFpJek8xUkdWcDRjcTBlPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kailma</dc:creator></item><item><title><![CDATA[[Next.js]Next.js のRouting処理 Dynamic Parallel and Intercepted Routesについ]]></title><description><![CDATA[
 前書き

 なぜこの記事を書いたのか
最近、Next.js(14+)を学びながらデモプロジェクトを作成しています。ファイルシステムベースのルーターは私にとって新しいものです。基本的な概念は簡単に理解できましたが、Parallel RoutesやIntercepting Routesなどの高度な機能を理解するのに少し時間がかかりました。同じような疑問を持つ人がいるかもしれないと思い、みんなの助けになればと思ってこの記事を書きました。
Next.jsがファイスシステムベースのルーターを使用していることすでに知っていると仮定して、基本的な部分は省略し、Dynamic Routesのセクショ...]]></description><link>https://zenn.dev/tubring/articles/212240e54b5e21</link><guid isPermaLink="true">https://zenn.dev/tubring/articles/212240e54b5e21</guid><pubDate>Wed, 11 Sep 2024 08:24:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OoFxSt49--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNext.js%255DNext.js%2520%25E3%2581%25AERouting%25E5%2587%25A6%25E7%2590%2586%2520Dynamic%2520Parallel%2520and%2520Intercep...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Qian%2520Yu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzNThhODU3NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Qian Yu</dc:creator></item><item><title><![CDATA[HTMLInputElementについて調べてみた]]></title><description><![CDATA[https://zenn.dev/unkeleven/articles/ad0e43b0179519
この記事を書いた時に、HTMLInputElementなるものに出会い、この周辺の知識が曖昧だと感じたので調べてみた。
MDN - HTMLInputElementは、DOMの一部ですが、DOM自体のの記事はたくさんあるので、HTMLInputElement特にvalueプロパティにフォーカスして以下書いていきます。
具体的には以下の内容に触れながらHTMLInputについて調べていきます。

プロトタイプ(prototype)
アクセサプロパティ(ゲッターとセッター)
Object.g...]]></description><link>https://zenn.dev/unkeleven/articles/37cb54bb4b3154</link><guid isPermaLink="true">https://zenn.dev/unkeleven/articles/37cb54bb4b3154</guid><pubDate>Wed, 11 Sep 2024 05:49:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ah7ufwrU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTMLInputElement%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unk%2520eleven%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlNWI0NGI3MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>unk eleven</dc:creator></item><item><title><![CDATA[yubinbango.jsで自動入力が行われたら別の処理を実行する方法(Object.defineProperty()を使って)]]></title><description><![CDATA[
 課題の確認
yubinbango.js は郵便番号を入力すると対応する住所のinputのテキストボックスに自動入力を行ってくれる、大変便利なライブラリです。
最近このライブラリを利用したのですが、要件としては、自動入力のみならず「自動入力が行われたら、それをトリガーに別の処理を行う」というものでした。
要件を満たす処理を行う上での課題としては、以下のようなものでした。

addEventListenerのinputイベントでは自動挿入を検知してくれない
MutationObserverでも自動挿入を検知してくれない

調べるとこの課題に関する記事が見つかりました。
Qiita - H...]]></description><link>https://zenn.dev/unkeleven/articles/ad0e43b0179519</link><guid isPermaLink="true">https://zenn.dev/unkeleven/articles/ad0e43b0179519</guid><pubDate>Wed, 11 Sep 2024 05:35:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nim5qljX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:yubinbango.js%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E5%2585%25A5%25E5%258A%259B%25E3%2581%258C%25E8%25A1%258C%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E3%2582%2589%25E5%2588%25A5%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2528Object.defineProperty...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:unk%2520eleven%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlNWI0NGI3MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>unk eleven</dc:creator></item><item><title><![CDATA[縦にタブを表示するリストChrome拡張をつくりました]]></title><description><![CDATA[初心者の私が最近初めてつくった「縦にタブ一覧を表示するChrome拡張」についてのお話です。


 つくった理由
私は普段、リビングに設置したPCを使って作業をしています。ワイヤレスタッチパッド付きキーボードで少し離れて操作すること自体は問題ないのですが、ディスプレイから離れた位置で作業をしているため、いくつか課題がありました：

Chromeのタブが小さく見づらい
たくさんのタブを開くとさらに見づらくなる
タブの一覧を縦表示で見やすくしたい
タブの一覧から直接タブに移動したり、閉じたりしたい


 つくった経緯
まず、生成AIに相談したところ、Chrome拡張機能で実現可能だとアドバイ...]]></description><link>https://zenn.dev/white/articles/0d60e125b5aa54</link><guid isPermaLink="true">https://zenn.dev/white/articles/0d60e125b5aa54</guid><pubDate>Wed, 11 Sep 2024 02:20:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6EX8z01u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B8%25A6%25E3%2581%25AB%25E3%2582%25BF%25E3%2583%2596%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588Chrome%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25AD%25E3%2582%25A6%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvdy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ドシロウト</dc:creator></item><item><title><![CDATA[ブラウザで画像圧縮が出来るbrowser-image-compressionとその内部実装についてと他ライブラリとの比較]]></title><description><![CDATA[会社名を出して記事を発信するのは初めてとなります、RUN.EDGE株式会社のフロントエンドエンジニアの猪野浩子と申します。
今回RUN.EDGEのテックブログをZennのPublicationで始めまして、一発目の記事になります。
これから各メンバーが記事を書いていきますので、よろしくお願いします！
今回は普段の実装で使ったライブラリについての記事になります。
!
ライブラリの仕様やソースコードの内部実装について触れていますが、2024/08時点のものとなります。


 本題
今回要件として、ユーザーがブラウザ上で動作するアプリからアップロードする画像ファイル(jpg, png)を、アッ...]]></description><link>https://zenn.dev/run_edge/articles/image-compress-libraries</link><guid isPermaLink="true">https://zenn.dev/run_edge/articles/image-compress-libraries</guid><pubDate>Wed, 11 Sep 2024 01:33:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xuNEyHb9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%258C%25E5%2587%25BA%25E6%259D%25A5%25E3%2582%258Bbrowser-image-compression%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%2586%2585%25E9%2583%25A8%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25A8%25E4%25BB%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A8%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiroko_ino%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkNjVlOTZjYjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:RUN.EDGE%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljMGEzYTE4MjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiroko_ino</dc:creator></item><item><title><![CDATA[TypeScriptで文字列のdeflate&base64エンコード]]></title><description><![CDATA[
TypeScript(JavaScript)でJSONを文字列エンコードしたくなったので実装した備忘メモです。

 base64エンコード,デコード

 実装
codeclass Base64Codec {
  #encoder: TextEncoder | undefined;
  #decoder: TextDecoder | undefined;

  constructor(encode: boolean = false, decode: boolean = false) {
    if (encode === decode) { [encode, decode] = [tr...]]></description><link>https://zenn.dev/scirexs/articles/2e11e2c347d71c</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/2e11e2c347d71c</guid><pubDate>Tue, 10 Sep 2024 21:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YPwegnTc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AEdeflate%2526base64%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[TypeScriptの数値がIEEE 754倍精度浮動小数点数であることを組み込みオブジェクトから確かめる]]></title><description><![CDATA[TypeScript（JavaScript）の数値は、IEEE 754 倍精度浮動小数点数（64 ビット）で表現されます。MDN の Number のページには以下のように記載されています。

JavaScript の数値 (Number) 型は IEEE 754 の倍精度 64 ビットバイナリー形式であり、 Java や C# の double のようなものです。つまり、小数値を表しますが、格納される数値の大きさと精度には制限があります。とても簡単に説明すると、IEEE 754 の倍精度数は、3 つの部分を表すのに 64 ビットを使用します。

この計算誤差の有名な例として、TypeS...]]></description><link>https://zenn.dev/nekonado/articles/typescript-number-double</link><guid isPermaLink="true">https://zenn.dev/nekonado/articles/typescript-number-double</guid><pubDate>Tue, 10 Sep 2024 16:35:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x9nfdpfI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E6%2595%25B0%25E5%2580%25A4%25E3%2581%258CIEEE%2520754%25E5%2580%258D%25E7%25B2%25BE%25E5%25BA%25A6%25E6%25B5%25AE%25E5%258B%2595%25E5%25B0%258F%25E6%2595%25B0%25E7%2582%25B9%25E6%2595%25B0%25E3%2581%25A7%25E3%2581%2582%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E7%25A2%25BA%25E3%2581%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nekonado%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYzgzNGQ1MDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nekonado</dc:creator></item><item><title><![CDATA[HTMLとNodejsの両対応のjsファイルのexportの書き方]]></title><description><![CDATA[
 jsファイル側でのexport

util.js
class Util {
  do() {}
}

// HTML用のエクスポート
if (typeof window !== "undefined" &amp;&amp; window) {
  window.Util = Util
}
// Nodejs用のエクスポート
if (typeof module !== "undefined" &amp;&amp; module.exports) {
  module.exports = Util
}


 HTML側で読み込む場合
&lt;!DOCTYPE html&gt;
&lt;h...]]></description><link>https://zenn.dev/sion/articles/81d15e42f0b20f</link><guid isPermaLink="true">https://zenn.dev/sion/articles/81d15e42f0b20f</guid><pubDate>Tue, 10 Sep 2024 14:41:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0HE7vj9b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%25E3%2581%25A8Nodejs%25E3%2581%25AE%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AEjs%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AEexport%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sion%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMWIxMzQzNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sion</dc:creator></item><item><title><![CDATA[[VSCode]2024年9月(ver1.93)のアップデート情報]]></title><description><![CDATA[
 今回の主な改善内容
2024年9月にリリースされたVSCode ver1.93では、ノートブック、エディタ、デバッグなどが改良されました。

 主な更新情報

JavaScriptとTypeScriptのコーディングを強化
GitHub Copilotの改良
GitHub Copilotの提案の精度が向上し、コードの生成速度が改善されました。バージョンアップによってより直感的な支援が受けられるようになっています。
Notebooksの機能拡張
ノートブックの編集がさらに効率化され、セルのドラッグ＆ドロップが容易になり、セル間の操作がスムーズになりました。
Python環境の統合強化
...]]></description><link>https://zenn.dev/ma_me/articles/35501bfcd4ad9a</link><guid isPermaLink="true">https://zenn.dev/ma_me/articles/35501bfcd4ad9a</guid><pubDate>Tue, 10 Sep 2024 11:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G6nPw-9_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BVSCode%255D2024%25E5%25B9%25B49%25E6%259C%2588%2528ver1.93%2529%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E6%2583%2585%25E5%25A0%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ma_me%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzZjVkODUyNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ma_me</dc:creator></item><item><title><![CDATA[setInterval に沿える visibilitychange]]></title><description><![CDATA[
 まえがき
setIntervalで処理を書いたのさ。でさ別タブひらきっぱにして戻ってきたら、setIntervalが火を噴いたのさ🔥🔥🔥

 visibilitychange とは
visibilitychange イベントは、タブのコンテンツが表示状態または非表示状態になったときに document に発生します。つまり、稼働やお休み中を判定するスクリプトさ！SDGsだね。
https://developer.mozilla.org/ja/docs/Web/API/Document/visibilitychange_event

 例
$(function(){
    chg_s...]]></description><link>https://zenn.dev/dokokade/articles/6c03f0a63f8a9e</link><guid isPermaLink="true">https://zenn.dev/dokokade/articles/6c03f0a63f8a9e</guid><pubDate>Tue, 10 Sep 2024 03:06:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wrFMzeX7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:setInterval%2520%25E3%2581%25AB%25E6%25B2%25BF%25E3%2581%2588%25E3%2582%258B%2520visibilitychange%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dokokade%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmOTJkNWI2ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dokokade</dc:creator></item><item><title><![CDATA[TypeScriptの簡易ランダム英数文字列生成]]></title><description><![CDATA[
TypeScript(JavaScript)でHTMLタグのid属性に使用できる簡易的なユニークな英数ランダム文字列生成機が欲しくなり実装した備忘メモです。

 前提

英数文字列で構成される任意長の文字列を生成する

ただし最初の文字は数字にしない


大文字と小文字は区別する
実装の簡単化のためz|Zは含まない
文字列長は指定可能にする
必要に応じてユニーク保証回数の制限を設定可能にする


 実装
codeclass HtmlIds {
  #limit = Number.POSITIVE_INFINITY;
  #length;
  #store = new Set&lt;st...]]></description><link>https://zenn.dev/scirexs/articles/aef93447b35fda</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/aef93447b35fda</guid><pubDate>Mon, 09 Sep 2024 21:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iYcum3q9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E8%258B%25B1%25E6%2595%25B0%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[Vercel AI SDK Core + Gemma 2を使って記事のカテゴリ分類タスクを開発する]]></title><description><![CDATA[Vercel AI SDKはLLMを活用したアプリケーションを構築できるように設計されたTypeScript製のツールキットです。チャットボットの構築に伴う定型的なコードを排除して、本質的な部分の開発に集中することを可能にします。
しかしVercel AI SDKは何もチャットボット開発だけに使えるわけではありません。たとえばLangChainのように様々なモデルとツールを組み合わせて、複雑なタスクを解決するデータパイプラインを構築することも可能です（Pythonの豊富なライブラリと比べるとまだまだ実現できることは限定的ですが）。
Vercel AI SDKは、主に次の3つのコンポーネン...]]></description><link>https://zenn.dev/laiso/articles/a6a7b4864a713f</link><guid isPermaLink="true">https://zenn.dev/laiso/articles/a6a7b4864a713f</guid><pubDate>Mon, 09 Sep 2024 11:47:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gXf3uhvC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520AI%2520SDK%2520Core%2520%252B%2520Gemma%25202%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2588%2586%25E9%25A1%259E%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>laiso</dc:creator></item><item><title><![CDATA[useSelectorを使った効率的なState参照方法（分割代入の活用）]]></title><description><![CDATA[React ReduxのuseSelectorを使ってStateを参照する際、以下のようにState全体から特定のプロパティを参照することが一般的なのかなと思っていました。
const broadcastState = useSelector(state =&gt; state.broadcast);
ただ、この場合、broadcastStateに格納されたオブジェクトのプロパティを使うたびに、常にbroadcastState.をつけて参照しなければなりません。
例えば、broadcastsやnextを参照する場合は次のようになります。
if (broadcastState.broadc...]]></description><link>https://zenn.dev/kingdom0927/articles/5b84a9742efcde</link><guid isPermaLink="true">https://zenn.dev/kingdom0927/articles/5b84a9742efcde</guid><pubDate>Mon, 09 Sep 2024 10:36:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qmkDRtyv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useSelector%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AAState%25E5%258F%2582%25E7%2585%25A7%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parapone1005%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWZlYWI5M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>parapone1005</dc:creator></item></channel></rss>