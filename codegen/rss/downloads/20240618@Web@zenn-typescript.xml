<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 18 Jun 2024 06:28:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[React19のuseActionsStateをTypeScriptで書く]]></title><description><![CDATA[
 注意！！
2024/06/18現在、まだRC版なので使い方が変わる可能性があることを留意してください。

 公式サンプル（JavaScript版）
元記事
https://react.dev/blog/2024/04/25/react-19
// Using &lt;form&gt; Actions and useActionState
function ChangeName({ name, setName }) {
  const [error, submitAction, isPending] = useActionState(
    async (previousState,...]]></description><link>https://zenn.dev/daijinload/articles/7fbe73e040c0a2</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/7fbe73e040c0a2</guid><pubDate>Tue, 18 Jun 2024 04:39:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AvakqBdM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25AEuseActionsState%25E3%2582%2592TypeScript%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item><item><title><![CDATA[Next Auth（v4）を導入しようとしているあなたに届けたい仕様と使い所]]></title><description><![CDATA[NextAuthについて色々検証する機会があったので備忘録としてここに残します。
NextAuthの導入を考えている方に少しでも参考になれば嬉しいです！
NextAuthはとても便利ですが、表面的に使うと仕様が暗黙的で戸惑う部分が多かったので仕様を探り解説していきます！

 概要

そもそもNextAuthとは何かについて軽くおさらいしましょう。

 NextAuthの概要
NextAuthは、Next.jsアプリケーションのためのオープンソースの認証ライブラリです。
Next.jsアプリケーションに簡単に認証機能を追加するためのライブラリであり、対応プロバイダーはOAuth (Goog...]]></description><link>https://zenn.dev/bosushi/articles/cff6ac4071f6c6</link><guid isPermaLink="true">https://zenn.dev/bosushi/articles/cff6ac4071f6c6</guid><pubDate>Mon, 17 Jun 2024 07:33:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1gR55yl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next%2520Auth%25EF%25BC%2588v4%25EF%25BC%2589%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25AB%25E5%25B1%258A%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%25E4%25BB%2595%25E6%25A7%2598%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2589%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BC%25E5%25AF%25BF%25E5%258F%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHdDlwT2JkbDlIcktHWmI0Wlc5V09FS3N1RnVYR3pmQ2dJcUJKYlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぼ寿司</dc:creator></item><item><title><![CDATA[TypeScriptの型定義をざっくり理解する]]></title><description><![CDATA[
 はじめに
TypeScript にはさまざまな型定義があります。
私は業務で TypeScript を使う中で、コンパイルエラーに度々苦労しています。
苦手意識を払拭するため、名著のブルーベリー本で型定義について学習しました。
非常にわかりやすい本でおすすめです。
今回は TypeScript の型定義がざっくり理解できるように紹介していきます。
※サンプルコードは自作しています

 変数の型
変数の型定義は、特定の値の種類を表します。この例では、Name 型が文字列型 (string) を示しています。

 構文
type 型名 = 型;

 例
type Name = strin...]]></description><link>https://zenn.dev/irsc/articles/105b554659ce41</link><guid isPermaLink="true">https://zenn.dev/irsc/articles/105b554659ce41</guid><pubDate>Mon, 17 Jun 2024 03:59:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y_bWBfox--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KH%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlYzg5ZmZiMGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEInner%2520Resource%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjZDVjYWJhMmUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KH</dc:creator></item><item><title><![CDATA[satisfies で exhaustiveness check]]></title><description><![CDATA[
 TL;DR
type A = "a" | "b" | "c";

function exhaustive(v: A) {
  switch (v) {
    case "a":
      return "A";
    case "b":
      return "B";
    case "c":
      return "C";
    default:
      return v satisfies never; // check exhaustiveness
  }
}

 はじめに
TypeScriptにsatisfies文が追加されて久しいですね。
satisf...]]></description><link>https://zenn.dev/ryoppippi/articles/ac1c2b46dcc0ed</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/ac1c2b46dcc0ed</guid><pubDate>Sun, 16 Jun 2024 17:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WgQe9P6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:satisfies%2520%25E3%2581%25A7%2520exhaustiveness%2520check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[Tauriで型安全なクライアントを生成する]]></title><description><![CDATA[
 A
tauri-spectaを使う
https://github.com/oscartbeaumont/tauri-specta/blob/main/docs/v1.md
※Tauri v1での使い方を書きますが、v2でも問題なくできると思います。

 使い方(既存のtauriプロジェクトに追加)

 1. tauri-spectaの追加
cargo add specta@1
cargo add tauri-specta@1 --features javascript,typescript

 2. #[specta::specta]を適応する
#[tauri::command]
+...]]></description><link>https://zenn.dev/cou_kamiya/articles/4c21204fe97452</link><guid isPermaLink="true">https://zenn.dev/cou_kamiya/articles/4c21204fe97452</guid><pubDate>Sun, 16 Jun 2024 16:13:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B5TWRrxB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2586%25EF%25BC%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NGIzNWU1YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こう？</dc:creator></item><item><title><![CDATA[TypeScriptの基本概念だけを学習してみた]]></title><description><![CDATA[
 はじめに
TypeScript は JavaScript に型システムを追加した言語で、静的型付けや強力なツールサポートを提供します。この記事では、TypeScript の基本的な概念について学び、そのメリットを探ります。

 型システム
TypeScript の型システムは、コンパイル時にエラーを検出し、コードの品質を向上させます。

 型アノテーション
let message: string = "Hello, TypeScript";
console.log(message);
このコードでは、message 変数に対して string 型を指定しています。

 型システムのメ...]]></description><link>https://zenn.dev/tonbi_attack/articles/485d6ec1b07992</link><guid isPermaLink="true">https://zenn.dev/tonbi_attack/articles/485d6ec1b07992</guid><pubDate>Sun, 16 Jun 2024 13:12:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7sm0ahGP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2592%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tonbiattack%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGQ4MThjYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tonbiattack</dc:creator></item><item><title><![CDATA[typescript の基本的な Utility type についてまとめてみる]]></title><description><![CDATA[
 Partial と Required
プロパティを 任意にしたり、必須にしたりする型。Partial  (部分的)と Required(必須) という意味
type User = {
id: number;
name: string;
age: number;
};

type PartialUser =  Partial&lt;User&gt;
// 型は以下のようになる
type PartialUser = {
    id?: number | undefined;
    name?: string | undefined;
    age?: number | undefi...]]></description><link>https://zenn.dev/surume3/articles/2d34b576a1bfae</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/2d34b576a1bfae</guid><pubDate>Sun, 16 Jun 2024 10:31:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DGphc7-u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:typescript%2520%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%2520Utility%2520type%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[【Next.js×Firebase】Authenticationで爆速Googleログイン実装]]></title><description><![CDATA[
 はじめに
前回はfirebaseのサービスfirestoreを使ってDB構築を行いました。今回は同じくfirebaseのサービスのAuthenticationを使ってGoogleログインを導入します。

 Firebaseセットアップ
前回の記事で紹介したので省略します。

 Authenticationセットアップ
Authenticationを選択＞始める

プロバイダーを選択（今回はGoogleを選択）

有効にする＞メールアドレス入力＞保存

以上で完了です。簡単...

 Firebase＋Authentication初期化処理
Next.jsの記述に移ります。
confi...]]></description><link>https://zenn.dev/kiwichan101kg/articles/b38dd43d04622e</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/b38dd43d04622e</guid><pubDate>Sun, 16 Jun 2024 10:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CjnldEfl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25C3%2597Firebase%25E3%2580%2591Authentication%25E3%2581%25A7%25E7%2588%2586%25E9%2580%259FGoogle%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[type と interface の違いがよくわからない]]></title><description><![CDATA[タイトルの通り、違いがよくわからなかったので調べました。
結論、どちらもできることはほとんど同じで、使うシーンや拡張の方法や少し異なるだけでした。

 基本的な使い方
// 基本的な型エイリアス
type ID = number | string;

// オブジェクト型のエイリアス
type User = {
name: string;
age: number;
};

// 関数型のエイリアス
type Greet = (name: string) =&gt; string;

// オブジェクトのインターフェース
interface User {
name: string;
age...]]></description><link>https://zenn.dev/surume3/articles/33cfb159119a84</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/33cfb159119a84</guid><pubDate>Sun, 16 Jun 2024 09:34:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fO4pi6oX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type%2520%25E3%2581%25A8%2520interface%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[! (Non-null assertion )や ?.  (Optional chaining)についてまとめてみる]]></title><description><![CDATA[Javascript や typescript の学習を進めていると、 !  や ? といった演算子がちょくちょく登場するのですが、理解が曖昧のため使い方を整理して理解を深めたいと思います。

 ! (Non-null assertion operator / 非null アサーション)
これは、型チェックをする際に、null また undefined の可能性を無視することをコンパイラに伝えるものです。
使い方
let foo: string | undefined;
foo = "Hello";
console.log(foo!.length);  // ! を入れることで、コンパイ...]]></description><link>https://zenn.dev/surume3/articles/70d435329ac363</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/70d435329ac363</guid><pubDate>Sun, 16 Jun 2024 09:00:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i8KJH_Cd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2521%2520%2528Non-null%2520assertion%2520%2529%25E3%2582%2584%2520%253F.%2520%2520%2528Optional%2520chaining%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[rechartsの円グラフ入門（TypeScript）]]></title><description><![CDATA[
 はじめに
React でグラフを描画するライブラリの１つにrechartsがあります。
今回、業務で recharts を使って円グラフを作成する機会があったので、公式サイトのサンプルコードの読み解きと自分なりのカスタマイズを行いました。
下記で記載するコードはすべて github 上にアップしています。
（recharts や React, TypeScript のバージョンなども github のコードを見てください）

 TwoLevelPieChart

公式のサンプルコード：https://recharts.org/en-US/examples/TwoLevelPieCha...]]></description><link>https://zenn.dev/ksk_17090k1/articles/d428042dc42ff8</link><guid isPermaLink="true">https://zenn.dev/ksk_17090k1/articles/d428042dc42ff8</guid><pubDate>Sun, 16 Jun 2024 07:46:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rNwaxsUM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:recharts%25E3%2581%25AE%25E5%2586%2586%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2588TypeScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksk_17090k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGhlS0k3RVlTOUFGUXYyaFJPM21vOUFJXzZsWHY4WmVCbWc5TmxkajQ5bUlLUEROYXY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksk_17090k1</dc:creator></item><item><title><![CDATA[TypeScriptユーザーに贈るGleam入門]]></title><description><![CDATA[スマホの人向け目次

Erlangについて
GleamとTypeScriptは何が違うのか
インストール方法
GleamとJavaScript
実行方法
エントリポイント
標準出力
変数
定数
プリミティブ型
コレクション型
その他の型
型変換(キャスト)
カスタム型
四則演算
比較
パターンマッチ
例外処理
use
関数
パイプライン
関数キャプチャ
ジェネリクス
モジュール
外部関数
パッケージ
Gleamパッケージの探し方
寄付について
参考文献


最近v1に到達したGleamという静的型付けな関数型言語があります。
https://gleam.run/
GleamはErlang...]]></description><link>https://zenn.dev/comamoca/articles/gleam-tour-for-typescript-user</link><guid isPermaLink="true">https://zenn.dev/comamoca/articles/gleam-tour-for-typescript-user</guid><pubDate>Sun, 16 Jun 2024 04:46:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rdiG8WJm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%25AB%25E8%25B4%2588%25E3%2582%258BGleam%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%25BE%25E3%2582%2582%25E3%2581%258B%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3NGU0NmZkYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こまもか🦊</dc:creator></item><item><title><![CDATA[[React]クリックしたらメニューがすぐ側に出現するUXを汎用的なコンポーネントに落とし込んでみた]]></title><description><![CDATA[
 はじめに
しばしば見かける以下のようなUXを、誰でも扱えるコンポーネントとして実装してみたので解説します。


 完成系

以下にて、ソースコードを公開しております。

https://github.com/yu-ta-9/yuta9-storybook-v2/tree/main/src/components/tools/MenuModalPortal

 解説

以下、該当のコンポーネントをMenuModalPortalと呼称します。


 Props設計
&lt;MenuModalPortal
    buttonElement={
        &lt;button type...]]></description><link>https://zenn.dev/yu_ta_9/articles/a9e5dce4ca21bd</link><guid isPermaLink="true">https://zenn.dev/yu_ta_9/articles/a9e5dce4ca21bd</guid><pubDate>Sun, 16 Jun 2024 01:44:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9O2R-96i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%255D%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%258C%25E3%2581%2599%25E3%2581%2590%25E5%2581%25B4%25E3%2581%25AB%25E5%2587%25BA%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BUX%25E3%2582%2592%25E6%25B1%258E%25E7%2594%25A8%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YU-TA-9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNzU2NmM5MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YU-TA-9</dc:creator></item><item><title><![CDATA[TypeScriptで設定しておきたいオプションを逆引きで紹介する]]></title><description><![CDATA[タイトルの通りです。
この記事ではTypeScriptでプロジェクトを開始する際に自分が基本的に有効にするオプションを逆引きで紹介します。

 暗黙のanyを禁止する
strictが有効であれば必然的に有効。個別に設定する場合はnoImplicitAnyで設定が可能。
例えば以下のように引数の型注釈を省略した場合anyと評価されますが、それを禁止します。


 非null型や非undefined型の変数にそれらの代入を禁止する
strictが有効であれば必然的に有効。個別に設定する場合はstrictNullChecksで設定が可能。
例えば非string型にも関わらず、nullを代入する...]]></description><link>https://zenn.dev/bs_kansai/articles/24949538d493e3</link><guid isPermaLink="true">https://zenn.dev/bs_kansai/articles/24949538d493e3</guid><pubDate>Sat, 15 Jun 2024 13:41:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sFYff2hM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E9%2580%2586%25E5%25BC%2595%25E3%2581%258D%25E3%2581%25A7%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMDEzZTI2ODYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kobe.ts%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQ5MmViYmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[手を動かして理解しようとするDI（依存性の注入）]]></title><description><![CDATA[
 はじめに
依存性の注入という単語をよく見るが、読んでもよく分からなかったので手を動かしながら理解する

 やること

DIとはなにかを手を動かして理解する
実装を通じてﾅﾝﾓﾜｶﾗﾝからﾁｮｯﾄﾜｶｯﾀｶﾓになる


 そもそもDIとはなに
振り返りとして簡単に概要を掲載します。

 概要
依存性の注入（Dependency Injection, DI）とは、オブジェクトの依存関係を外部から注入するデザインパターンのことです。
オブジェクト間の依存関係を明示的に管理しやすくなり、コードの保守性やテストのしやすさが向上します。

 メリット


モジュールの独立性向上: オブジェクトが...]]></description><link>https://zenn.dev/sui_water/articles/36d0f9bc0f17c0</link><guid isPermaLink="true">https://zenn.dev/sui_water/articles/36d0f9bc0f17c0</guid><pubDate>Sat, 15 Jun 2024 13:22:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ckIPG_cp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2589%258B%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258BDI%25EF%25BC%2588%25E4%25BE%259D%25E5%25AD%2598%25E6%2580%25A7%25E3%2581%25AE%25E6%25B3%25A8%25E5%2585%25A5%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MGQ1MWNkOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スイ</dc:creator></item><item><title><![CDATA[cloud functionでurlを押した際にscrapboxのページを開いて時刻をbodyに追加して分報を書けるようにするtips]]></title><description><![CDATA[
 解説
scrapboxはurlにtitleをつけると新規ページが作成できます。これを利用してcloud functionでリンクを踏むと当日の時刻の記録がされてメモが取れる分報ツールを作成しました。リンクを踏むと、Dateから現在時刻を取得してscrapboxの適切なページへリダイレクトする形になります。メモや記録を取りたいタイミングでリンクを踏むことによって打刻することができ便利です。
h\ttps://scrapbox.io/{projectName}/{title}?body={content}`
実装方法としてはcloud functionの他に静的サーバーにhtmlとjsを...]]></description><link>https://zenn.dev/tosa/articles/f83a25f6f59857</link><guid isPermaLink="true">https://zenn.dev/tosa/articles/f83a25f6f59857</guid><pubDate>Sat, 15 Jun 2024 08:09:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pUYvUbhP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cloud%2520function%25E3%2581%25A7url%25E3%2582%2592%25E6%258A%25BC%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25ABscrapbox%25E3%2581%25AE%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E9%2596%258B%25E3%2581%2584%25E3%2581%25A6%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592body%25E3%2581%25AB%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E5%2588%2586%25E5%25A0%25B1%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2591...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%2595%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjM2M1MjdhZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とさ</dc:creator></item><item><title><![CDATA[Drizzleの relations() と references() の使い分け]]></title><description><![CDATA[こんにちは、合同会社Stegの keigo です。今回は、Drrizleでテーブルの関係性を定義する方法を紹介します。
Drizzle ORMは、テーブル間の関係性を定義するために、 relations()とreferences()という2つの関数を提供しています。
これらの関数は役割が異なるため、注意が必要です。
今回のソースコードは、一部Drizzle公式ドキュメントから引用しています。
https://orm.drizzle.team/docs/rqb#declaring-relations

 relations()とreferences()の違い
Drizzle ORMにおいて...]]></description><link>https://zenn.dev/steg/articles/a6299112c1f1fd</link><guid isPermaLink="true">https://zenn.dev/steg/articles/a6299112c1f1fd</guid><pubDate>Sat, 15 Jun 2024 04:49:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IckX2cq---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drizzle%25E3%2581%25AE%2520relations%2528%2529%2520%25E3%2581%25A8%2520references%2528%2529%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:keigo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyYmZhZDczZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Steg%2520Inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmYTJhNGYyZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keigo</dc:creator></item><item><title><![CDATA[型安全性を高めるTypeScriptのリテラル型の活用例]]></title><description><![CDATA[
 はじめに
Webエンジニアとして働きはじめて約1ヶ月が経ちました。その中でフロントエンドを担当している際に、TypeScriptのリテラル型を使用したタイプセーフな実装方法を行なっているのを見て、とても便利だと思ったため活用例を用いて簡単にまとめてみようと思います。
!
間違っている説明・解釈などあればご指摘いただけると幸いです。


 型安全の重要性
「型安全」とは、プログラムが型に関するエラーを防ぐための仕組みのことを指します。JavaScriptは動的言語であり、コードが実行されてからエラーが発生するのに対して、静的言語のTypeScriptはコンパイル時にエラーを検出すること...]]></description><link>https://zenn.dev/ippe/articles/84ceb9c3c3c6a0</link><guid isPermaLink="true">https://zenn.dev/ippe/articles/84ceb9c3c3c6a0</guid><pubDate>Sat, 15 Jun 2024 03:32:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Dp7IOJlB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258BTypeScript%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25AB%25E5%259E%258B%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ippei%2520Shimizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ODUyMDJjY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ippei Shimizu</dc:creator></item><item><title><![CDATA[集合で理解する Typescript]]></title><description><![CDATA[
 🌼 はじめに
私は高校の数学時間に初めて集合について教わりましたが、その時は全然知らなかったです。まさか Typescript に集合の知識を活かす日が来るとは、、
ということで今回は集合の観点で理解する Typescript について語ります。

 1. 型は値の集合
変数には色んな種類の値を割り当てることができ、Typescript なので型を持ちます。
const A: number = 42
const B: null = null
const C: undefined = undefined
const D: string = 'Canada'
const E: boole...]]></description><link>https://zenn.dev/luvmini511/articles/008915362779e5</link><guid isPermaLink="true">https://zenn.dev/luvmini511/articles/008915362779e5</guid><pubDate>Sat, 15 Jun 2024 01:25:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6FkBn3kN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259B%2586%25E5%2590%2588%25E3%2581%25A6%25E3%2582%2599%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520Typescript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3YTQwNzFlZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みんちゃん</dc:creator></item><item><title><![CDATA[【必見】discord-interactions-js が 4.0.0 にアップデート！変更点を追ってみたらすぐ解決できた話]]></title><description><![CDATA[皆さんこんにちは！駆け出しエンジニアです。今回は、僕が最近直面したパッケージのアップデートについてシェアしたいと思います。
先日、discord-interactions-jsのバージョンが4.0.0にアップデートされました。気になる変更点を追ってみたので、詳しくお伝えしますね。
大きな変更点 (breaking change) はNode.jsのサポートバージョンが変更されたことです。でも、これだけなら特に問題なくアップデートできるのでご安心を！
詳しくはこちら:

chore: require node.js 18.x and up #66

Node.js 18.x以降が必要という...]]></description><link>https://zenn.dev/melwey/articles/bc26e7cf6ceecd</link><guid isPermaLink="true">https://zenn.dev/melwey/articles/bc26e7cf6ceecd</guid><pubDate>Fri, 14 Jun 2024 15:28:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--se9ts-fg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25BF%2585%25E8%25A6%258B%25E3%2580%2591discord-interactions-js%2520%25E3%2581%258C%25204.0.0%2520%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2581%25E5%25A4%2589%25E6%259B%25B4%25E7%2582%25B9%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2582%2589%25E3%2581%2599%25E3%2581%2590%25E8%25A7%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%25E3%2582%258B%25E3%2581%2586%25E3%2581%2587%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnQ2WmZjNnNTOTgzY0o4UVpwR3BBWk1LTGZ0WDFYRjhFYTVkNy1VcVJRamZzYml3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>めるうぇい</dc:creator></item></channel></rss>