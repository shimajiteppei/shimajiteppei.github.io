<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 06 Jun 2024 01:47:57 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AIに仕事を奪ってもらう 〜システムにおけるAIの使い所〜]]></title><description><![CDATA[最近、マーモットも気になっているかずうぉんばっとです。「AIに仕事を奪われる…」と言われて久しいですが、実際に「仕事を奪われた〜」という方は、まだまだ少ないのではないでしょうか。
そこで、本記事ではAIに積極的に仕事を奪ってもらった実例をご紹介します。その上で、これまでの筆者の経験で分かった、システムにおけるAIの使い所について私見を述べます。


 奪ってもらう仕事
今回、奪ってもらう仕事は、「ユーザーの事業内容によるメーリングリストへの仕分け」です。
先日、弊社が運営する日程調整ツールの「Nitte」から、人材紹介業向けの新サービス「Nitte人材紹介」をリリースしました。
そこで、...]]></description><link>https://zenn.dev/kazuwombat/articles/2415ad29784519</link><guid isPermaLink="true">https://zenn.dev/kazuwombat/articles/2415ad29784519</guid><pubDate>Wed, 05 Jun 2024 22:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w6CZDBlE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25AB%25E4%25BB%2595%25E4%25BA%258B%25E3%2582%2592%25E5%25A5%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2520%25E3%2580%259C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BAI%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2589%2580%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%2586%25E3%2581%2589%25E3%2582%2593%25E3%2581%25B0%25E3%2581%25A3%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhMWQwZTBkMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かずうぉんばっと</dc:creator></item><item><title><![CDATA[そろそろリリースされそうなReact 19、6/21までに出てしまうのか？]]></title><description><![CDATA[このツイートによるとしばらくしたら出てもおかしくありませんね。
https://x.com/acdlite/status/1797668537349328923
6/12の交流会より前になるのか後になるのか少し気になるところです。
https://meteor-fan.connpass.com/event/308237/
イベントにはまだ空きがあります（執筆時点）ので、興味ある方はぜひ。ビールとピザが出るかもしれません。
]]></description><link>https://zenn.dev/dai_shi/articles/bcdae1427c2ea7</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/bcdae1427c2ea7</guid><pubDate>Wed, 05 Jun 2024 14:30:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L6RugAas--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%258D%25E3%2581%259D%25E3%2582%258D%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AAReact%252019%25E3%2580%25816%252F21%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[AWS CDK で作成する Lambda に Lambda Insights を対応させる【TypeScript】]]></title><description><![CDATA[ラブグラフでエンジニアをしています横江( @yokoe24 )です！
ラブグラフでは AWS Lambda を活用していて、
そのコードは AWS CDK を使って管理しております。
その中で Lambda Insights の対応で少し手間取りましたので、ここに方法を残しておきます。

 Lambda Insights とは？

『Lambda Insights』 は、
上の画像のように Lambda の実行結果をモニターしてくれる機能です。
メモリ負荷や所要時間を見られますので、
現在のパフォーマンスを見て Lambda の設定や、実行しているコードの改善に役立てられます。

AWS...]]></description><link>https://zenn.dev/lovegraph/articles/06e2ce073431b5</link><guid isPermaLink="true">https://zenn.dev/lovegraph/articles/06e2ce073431b5</guid><pubDate>Wed, 05 Jun 2024 04:38:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UhSNBvxv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520Lambda%2520%25E3%2581%25AB%2520Lambda%2520Insights%2520%25E3%2582%2592%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2580%2590TypeScript%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25A8%25AA%25E6%25B1%259F%25EF%25BC%25A0%25E3%2583%25A9%25E3%2583%2596%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNWYxYmUwYzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A9%25E3%2583%2596%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMjA2NjYzODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>横江＠ラブグラフ</dc:creator></item><item><title><![CDATA[LangChain で会話履歴を追加（Node.js）]]></title><description><![CDATA[
 はじめに
LLM に過去の会話履歴を覚えさせておくことで、記憶した情報を利用して、より自然な会話を実現できます。
https://js.langchain.com/v0.2/docs/how_to/message_history/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-message_history-sample
LangChain x TypeScript での実装例を以下の記事で...]]></description><link>https://zenn.dev/hayato94087/articles/8d24070fda80c8</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/8d24070fda80c8</guid><pubDate>Wed, 05 Jun 2024 00:27:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b0qYC7GM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25EF%25BC%2588Node.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[typescriptの型定義ファイルでMixinを定義したかった]]></title><description><![CDATA[
 はじめに
typescript/javascript万年初心者です。
これはタイトルの通りで、うまいやり方がわからなかったという内容です。
（ご存知の方がいれば教えていただきたい。）

 型定義したい理由
jsを使用しているプロジェクトを開発している中で、ts-checkを使用して解析してもらいたいと思いました。(最近存在を知ったので使いたいだけ)
外部のライブラリを使用しているが，そのライブラリの型定義やソースは非公開でドキュメントだけ存在するのでその仕様をd.tsの型定義ファイルとして用意したいのです。

 問題設定
jsでは以下のような実装をしている。
class AAA ex...]]></description><link>https://zenn.dev/soyukke/articles/8433e143459d05</link><guid isPermaLink="true">https://zenn.dev/soyukke/articles/8433e143459d05</guid><pubDate>Tue, 04 Jun 2024 18:59:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3moQfW1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:typescript%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7Mixin%25E3%2582%2592%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2582%2586%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5MDU4YzBkM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そゆっけ</dc:creator></item><item><title><![CDATA[bunを使用したAPI  proxy（考案レベル）]]></title><description><![CDATA[
 はじめに
現職でバックエンドで簡易的にコーディングできる環境かつバージョン管理を気にしなくても良い環境が欲しいとのことで、基本的にはHTML/CSS/JavaScriptでやることを考えたのですが、開発サーバーを持たせる必要もあったためせっかくなので最近のパッケージマネージャー「bun」を使用してみました。その際の別dockerコンテナのAPIへリクエストする必要があっためproxyをbun内部で完結させたかったためどのようにやったかをメモレベルで記載しておきます。

 やり方

 HTTPサーバー部分でproxy
bunのエントリーポイントであるindex.tsで以下の記述を追加
...]]></description><link>https://zenn.dev/tmo_taka/articles/093574c5c4fbc1</link><guid isPermaLink="true">https://zenn.dev/tmo_taka/articles/093574c5c4fbc1</guid><pubDate>Tue, 04 Jun 2024 14:51:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XaKXwz15--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:bun%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAPI%2520%2520proxy%25EF%25BC%2588%25E8%2580%2583%25E6%25A1%2588%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmo-taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODU2NDc0M2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tmo-taka</dc:creator></item><item><title><![CDATA[CI で `--if-present` は絶対に使うな というお話]]></title><description><![CDATA[タイトルの通りです

 はじめに「CI で --if-present は絶対に使うな」

 事前知識
--if-present は npm script の実行時につけられるオプション。
もし npm script が無くても exit 0 扱いにしてエラーにしない。
https://docs.npmjs.com/cli/v6/commands/npm-run-script

You can use the --if-present flag to avoid exiting with a non-zero exit code when the script is undefined. ...]]></description><link>https://zenn.dev/takashiaihara/articles/62df154fc8a560</link><guid isPermaLink="true">https://zenn.dev/takashiaihara/articles/62df154fc8a560</guid><pubDate>Tue, 04 Jun 2024 10:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pu59ia5a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CI%2520%25E3%2581%25A7%2520%2560--if-present%2560%2520%25E3%2581%25AF%25E7%25B5%25B6%25E5%25AF%25BE%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%2520%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TakashiAihara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZmFkZDAxMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TakashiAihara</dc:creator></item><item><title><![CDATA[TypeScriptは26以上のメンバーを絞り込めない！]]></title><description><![CDATA[この記事で扱うコードは全てTypeScript Playgroundにまとめていますので、
もし実際にコードを確認したい場合はそちらでご確認ください。

 26以上のメンバーを持つMappedTypeで型の絞り込みができない
表題の通りですが、実際にコードを見てもらうのがわかりやすいでしょう。
const maxMap = {
    one: {a: 1},
    two: {b: 2},
    three: {c: 3},
    four: {d: 4},
    ...
    twentyThree: {w:23},
    twentyFour: {x:24},
    ...]]></description><link>https://zenn.dev/cybozu_frontend/articles/fd16d9f427e335</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/fd16d9f427e335</guid><pubDate>Tue, 04 Jun 2024 10:08:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZU_jv4YZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AF26%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2581%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:irico%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZTk4ZmY5ZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>irico</dc:creator></item><item><title><![CDATA[React Hooksもりもり構成のチャット機能を考える[React 19 / Next.js 15]]]></title><description><![CDATA[
 はじめに 🚩
この記事では、Tanstack Query や SWR などのライブラリに頼らずに、React 標準の Hooks をふんだんに活用してチャット機能を実装する方法を紹介します。
RC（Release Candidate）段階ではありますが、React 19 で追加された useActionState と useOptimistic を使うことで、よりインタラクティブで快適な UI/UX を実現する方法を探っていきます。
また筆者の過去の記事ではそれぞれの Hooks に焦点を当てた記事を書いているので、そちらもあわせて参照してください。
https://zenn.dev...]]></description><link>https://zenn.dev/chot/articles/3d9fb562a2fe95</link><guid isPermaLink="true">https://zenn.dev/chot/articles/3d9fb562a2fe95</guid><pubDate>Tue, 04 Jun 2024 07:18:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QPcmpnBP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hooks%25E3%2582%2582%25E3%2582%258A%25E3%2582%2582%25E3%2582%258A%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%255BReact%252019%2520%252F%2520Next.js%252015%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tsuboi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMmU3Zjg2MTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsuboi</dc:creator></item><item><title><![CDATA[[JS]isNaN()ではなくNumver.isNaN()を使う]]></title><description><![CDATA[isNaN()は型変換した結果がNaNであるかを判定する。Numver.isNaN()は型変換せずに値がNaNであるかを判定する。意図しない結果になることを避けるため、Numver.isNaN()を使った方が堅牢なコードになる。
参考
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
]]></description><link>https://zenn.dev/purratto/articles/df0e3d263320eb</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/df0e3d263320eb</guid><pubDate>Tue, 04 Jun 2024 04:44:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TOS0v3wI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJS%255DisNaN%2528%2529%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%258FNumver.isNaN%2528%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[vuejs/core のソースコードを探検する楽しさ]]></title><description><![CDATA[
 はじめに
フロントエンドエンジニアのhiroです。
エンジニアになって半年が過ぎました。
表題にあるとおり、この記事では vuejs/core のソースコードを探検してみたいと思います。
ソースコードの探検が目的のため、実装の詳しい解説自体は行いません。あらかじめご了承ください。

 目的
本記事はubugeeeiさんの素晴らしい本であるchibivueに出会い、ubugeeeiさんご本人にVueについて直接教えて頂き、Vueのソースコードに興味を持ったことがきっかけで執筆しています。chibivueはVueの基本的な機能を自分で実装することで、Vueについての理解を深め、vuejs...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/413285d321e495</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/413285d321e495</guid><pubDate>Tue, 04 Jun 2024 03:36:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8XzHp0fb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vuejs%252Fcore%2520%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%258E%25A2%25E6%25A4%259C%25E3%2581%2599%25E3%2582%258B%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwOTUyYzVkNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiro</dc:creator></item><item><title><![CDATA[Array Grouping methodのパフォーマンスを検証してみた]]></title><description><![CDATA[https://speakerdeck.com/jiko21/array-grouping-will-soon-be-arriving-at-typescript
を掘り下げたものです。

 Array Grouping methodとは
配列やObject内の要素をgroupingするために追加されたmethodです。
2023年にtc39にてstage 4になり、現在最新版のブラウザ等では対応がされています。

 どのような挙動をするか？
MDNにて簡単な例が紹介されています。
以下はMDNの例を参考に機能を網羅するために複雑なcallback関数を用いた例です。
const fie...]]></description><link>https://zenn.dev/appbrew/articles/b580438956453a</link><guid isPermaLink="true">https://zenn.dev/appbrew/articles/b580438956453a</guid><pubDate>Mon, 03 Jun 2024 12:28:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xEBxJ_Tx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Array%2520Grouping%2520method%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:jiko21%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmNzI1ZDNiZjQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AppBrew%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3Y0Ml9kVTY0VWNfWUYyM1hMWnNsVjFYbDZVdW1ZYWp5cGpyMktuUmJOU0E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jiko21</dc:creator></item><item><title><![CDATA[判別可能なユニオン型を試してみる]]></title><description><![CDATA[TypeScriptにおける判別可能なユニオン型（Discriminated Union Types）は、異なるデータのバリエーションを安全かつ効率的に管理するための強力な抽象化を提供します。
この記事では、判別可能なユニオン型とは何か、そして React &amp; Next.js の環境でそれをどのように使用するかについて試してみます。具体的な例も提供します。

 判別可能なユニオン型（Discriminated Union Types）とは？
TypeScriptにおける判別可能なユニオン型（Discriminated Union Types）とは、複数のバリエーションの値を表現で...]]></description><link>https://zenn.dev/andmorefine/articles/8d55e13f9fc843</link><guid isPermaLink="true">https://zenn.dev/andmorefine/articles/8d55e13f9fc843</guid><pubDate>Sun, 02 Jun 2024 23:57:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JkbYGkFm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%25A4%25E5%2588%25A5%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25AA%25E3%2583%25B3%25E5%259E%258B%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:andmorefine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d4SWhtd3ZlckNiV1hqRkRZWk9xOEJJSGsyMHFYN3ZqN3lrS0NQd1QwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>andmorefine</dc:creator></item><item><title><![CDATA[【OSS】こんな私でもOSSに貢献できた！？]]></title><description><![CDATA[
 はじめに
どうも、へっぽこミジンコエンジニアのてるし〜です🤪
エンジニアになって約8ヶ月でOSS(オープンソース)に出会い初めてコミットをしました。
そこからたま〜〜〜にissueを拾ってコミットをするようになりました。
どのような経緯でOSS(オープンソース)に手を出し始めたのか、OSSに手を出して何が良かったのかを話していこうかと思います。
!
今回は技術というより、日記みたいなものです。
ちなみにできるエンジニアさんへ
叩かないでください😢
叩くなら見ないでください😡

それでは今回もゆっくりしていってください🥰

 貢献したOSS
2024/6現在貢献したOSSは2つです。
...]]></description><link>https://zenn.dev/terusi/articles/773fbbb466f027</link><guid isPermaLink="true">https://zenn.dev/terusi/articles/773fbbb466f027</guid><pubDate>Sun, 02 Jun 2024 16:24:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qM8a_YSS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OSS%25E3%2580%2591%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E7%25A7%2581%25E3%2581%25A7%25E3%2582%2582OSS%25E3%2581%25AB%25E8%25B2%25A2%25E7%258C%25AE%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25EF%25BC%2581%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2M5MzkyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるし〜</dc:creator></item><item><title><![CDATA[かわいい犬がタスクを食べてくれるWebアプリを作った話]]></title><description><![CDATA[
 ご紹介
「タスクを記録すると、片っ端からかわいい犬が食べてしまうWebアプリ」を思いついたので、Next.js + Tailwind CSS の練習を兼ねて形にしてみました。
公開したWebアプリはこちら
https://faveo-systema.net/to-dog-list
Githubリポジトリはこちらです
https://github.com/Daiius/to-dog-list

スクリーンショット

 思い入れのあるポイント

 1.ダークモード対応
next-themesを用いた切り替え機能、意外とちゃんと実装するのは結構難しいのですね
（まだコンソールにエラーが出ま...]]></description><link>https://zenn.dev/daiius/articles/14e62bd0770de3</link><guid isPermaLink="true">https://zenn.dev/daiius/articles/14e62bd0770de3</guid><pubDate>Sun, 02 Jun 2024 15:29:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qvzceMDU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%258B%25E3%2582%258F%25E3%2581%2584%25E3%2581%2584%25E7%258A%25AC%25E3%2581%258C%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E9%25A3%259F%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daiius%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDJQMDBUcmhBR01Wa3RvMENTY2hJT0o2T1NBQkJqUkVQT0JPQnJjT2REeDRqbW81RFc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daiius</dc:creator></item><item><title><![CDATA[keyof typeof を使って型を生成する]]></title><description><![CDATA[
 typeof 型演算子とは
typeof は変数から型を抽出する型演算子です。
例として以下のようなオブジェクトがあったとします。
const person = {
  name: "John",
  age: 26,
};
上記オブジェクトに対して typeof を使った型は次のような型になります。
type Person = typeof person;
type Person = {
  name: string;
  age: number;
};

 keyof 型演算子とは
keyof はオブジェクトの型からプロパティ名を型として返す型演算子です。
例として以下のようなオ...]]></description><link>https://zenn.dev/eitaro1230/articles/typescript-keyof-typeof</link><guid isPermaLink="true">https://zenn.dev/eitaro1230/articles/typescript-keyof-typeof</guid><pubDate>Sun, 02 Jun 2024 15:01:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F3UrnRaY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:keyof%2520typeof%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%259E%258B%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:eitaro1230%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhODEzZWZhM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>eitaro1230</dc:creator></item><item><title><![CDATA[PixiJS v8 + GSAP + Spine2D のテンプレートです]]></title><description><![CDATA[表題の通り、Vite をベースにして PixiJS v8 + GSAP + Spine2D のテンプレートを作成してみました。
誰のためというわけもなく、ほぼ自分用ですね。

 リポジトリ・サンプルページ
&gt; リポジトリ:t-tonyo-maru/pub_template_web_pixijs-gsap-spine
&gt; サンプルページ

サンプルページ スクリーンショット

 開発環境



開発環境
バージョン




node
&gt;=20




 主なパッケージ



パッケージ
バージョン




dotenv
^16.4.5


typescript
^5.2....]]></description><link>https://zenn.dev/t_tonyo_maru/articles/b5d96768a38368</link><guid isPermaLink="true">https://zenn.dev/t_tonyo_maru/articles/b5d96768a38368</guid><pubDate>Sun, 02 Jun 2024 14:57:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---_WHKowh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PixiJS%2520v8%2520%252B%2520GSAP%2520%252B%2520Spine2D%2520%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2582%2588%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNjVjZjg3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんよー。</dc:creator></item><item><title><![CDATA[【TypeScript】ローカルストレージにデータを保持するカスタムフックの設計]]></title><description><![CDATA[
 概要
本記事では、TypeScriptを用いてデータの保存方法を抽象化し、SessionStorage、LocalStorage、Cookieの3つの異なるストレージに対応可能なStore Managerの実装方法について紹介します。また、Reactのカスタムフックを使って、これらのストレージと連携する方法も説明します。

 Store Managerの実装
データの管理方法が変更されても対応できるように、共通のインターフェースStoreManagerを定義し、それぞれのストレージに対する具体的な実装を行います。

 インターフェースとファクトリ関数の定義
// 共通のインターフェー...]]></description><link>https://zenn.dev/kubo_programmer/articles/eddfe50ed191a2</link><guid isPermaLink="true">https://zenn.dev/kubo_programmer/articles/eddfe50ed191a2</guid><pubDate>Sun, 02 Jun 2024 08:50:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T9z5qZ7R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E6%258C%2581%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%259C%25E5%25A4%25AA%25E9%2583%258E%2520%257C%2520%25E7%25AA%25AA%25E7%2594%25B0%25E7%25A7%2580%25E5%2593%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwNzFmOWEyZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クボ太郎 | 窪田秀哉</dc:creator></item><item><title><![CDATA[LangChain で Fallbacks（Node.js）]]></title><description><![CDATA[
 はじめに
LLM を利用する場合、レートリミット、API のダウンタイムなど API の利用にまつわる問題が発生します。この記事では、問題が発生した際に対処する方法を記述します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/fallbacks/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
 
https://github.com/hayato94087/langchain-fallbacks...]]></description><link>https://zenn.dev/hayato94087/articles/688f78c6b3ead6</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/688f78c6b3ead6</guid><pubDate>Sun, 02 Jun 2024 06:48:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w59ENCve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A7%2520Fallbacks%25EF%25BC%2588Node.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[TypeScriptの学習で学生エンジニアがやったこと]]></title><description><![CDATA[!
この記事は6月から学習し始めているため、現在も更新中です。

!
筆者は、プログラミングを学習するのは初めてです。

「JavaScriptとは」「TypeScriptとは」については、ふんわり知っている前提で書いています

 Lv0: JavaScriptの基礎を学んでみよう
JavaScriptの記述等の学習をしてみます。
友人から「このサイトは、練習問題が豊富でやってて楽しいんじゃない？」とオススメして頂いたので、こちらの学習を進めてみます！
https://ja.javascript.info
学びながら「おもしろいな」と思ったもののみを
スクラップでアウトプットしてみました...]]></description><link>https://zenn.dev/nka21/articles/f278800b37193d</link><guid isPermaLink="true">https://zenn.dev/nka21/articles/f278800b37193d</guid><pubDate>Sun, 02 Jun 2024 05:25:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--awFXObnP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naoki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmOGM3MWM5YTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>naoki</dc:creator></item></channel></rss>