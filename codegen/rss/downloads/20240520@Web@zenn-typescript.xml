<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 20 May 2024 04:58:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Deploy Next.js Monorepo using Nx on AWS Amplify Gen 2.]]></title><description><![CDATA[AWS Amplify Gen 2 (Amplify) について

GA になったため、使い方を学んでいく
https://aws.amazon.com/jp/about-aws/whats-new/2024/05/aws-amplify-gen-2-available/
進めるにあたり、前提は以下の通り

TypeScript の Monorepo
Managed Service を使う。極力

Code はこれ
https://github.com/danny-yamamoto/candy

 Configure Monorepo
https://nx.dev/

Nx[1] を使用...]]></description><link>https://zenn.dev/dannya/articles/2268d393707d60</link><guid isPermaLink="true">https://zenn.dev/dannya/articles/2268d393707d60</guid><pubDate>Mon, 20 May 2024 01:57:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BROshoPB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deploy%2520Next.js%2520Monorepo%2520using%2520Nx%2520on%2520AWS%2520Amplify%2520Gen%25202.%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNDY0NzBmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke Yamamoto</dc:creator></item><item><title><![CDATA[Kysely + Cloudflare D1 でトランザクションを実行するヘルパー関数を書いた話]]></title><description><![CDATA[!
この記事は株式会社HIKKY 開発者ブログの一部です。HIKKYでは CDN を Cloudflare R2 に移行[1] したほか、社内の細かいツールを新しく作る際に Cloudflare Workers を部分的に採用していっています。


 TL;DR

D1 の batch はトランザクション[2]

kysely-d1 を改造してヘルパー関数を作ると batch を型付きで呼べてよい
batch と beginTransaction/commit/rollback では、できることに差がある


 前提条件

Cloudflare Workers + D1 + Kysely...]]></description><link>https://zenn.dev/hikky_co_ltd/articles/d1-batch-with-kysely</link><guid isPermaLink="true">https://zenn.dev/hikky_co_ltd/articles/d1-batch-with-kysely</guid><pubDate>Mon, 20 May 2024 01:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qu4ycyul--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kysely%2520%252B%2520Cloudflare%2520D1%2520%25E3%2581%25A7%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%2598%25E3%2583%25AB%25E3%2583%2591%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:called_D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0NjdhMTlkYmEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEHIKKY%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lqLTVUZHRnbDhvOHVYZWV3M3RudlZRa2VhY1V1bzBHbGtPVmFMPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>called_D</dc:creator></item><item><title><![CDATA[ElectronでWindows/Linux向けアプリの習作開発を通して感じた注意点・感想]]></title><description><![CDATA[
 はじめに

TypeScript + Electronで「PDF Shift」というWindows, Linux向けのデスクトップアプリを個人の習作で作成しました。
内容としてはPDFのページ入れ替えなどが出来るツールで、アプリとしては他に機能がずっと良いものが沢山あります（何よりMac OSではデフォルトのビューアで同様の操作が手軽に出来た！笑）。
が、今回「マルチプラットフォームでデスクトップアプリを作ることに挑戦したい！」って気持ちがあり、かつ過去にもElectronを学んでいたことから、トライしてみました。
後半ちょっと詰まってしまいましたが、大体1週間ちょっとくらいかけて作...]]></description><link>https://zenn.dev/shimarisu_121/articles/ab9e3dfe565b2c</link><guid isPermaLink="true">https://zenn.dev/shimarisu_121/articles/ab9e3dfe565b2c</guid><pubDate>Sun, 19 May 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UaNSs3U8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Electron%25E3%2581%25A7Windows%252FLinux%25E5%2590%2591%25E3%2581%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E7%25BF%2592%25E4%25BD%259C%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%25A6%25E6%2584%259F%25E3%2581%2598%25E3%2581%259F%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2583%25BB%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimarisu_121%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyYTA5YjFmMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimarisu_121</dc:creator></item><item><title><![CDATA[wxtで全てのページでchrome extensionを動作させる方法]]></title><description><![CDATA[
 matchesの値を'&lt;all_urls&gt;'にする
export default defineContentScript({
  matches: ['&lt;all_urls&gt;'],
  main() {
    console.log('Hello content.');
  },
});
]]></description><link>https://zenn.dev/tosa/articles/014252e97c4b0c</link><guid isPermaLink="true">https://zenn.dev/tosa/articles/014252e97c4b0c</guid><pubDate>Sun, 19 May 2024 11:56:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--67WQZq59--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:wxt%25E3%2581%25A7%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7chrome%2520extension%25E3%2582%2592%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%2595%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjM2M1MjdhZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とさ</dc:creator></item><item><title><![CDATA[ChatGPT (GPT4o) と TDD ライクなペアプロするとどうなるか試した]]></title><description><![CDATA[
 はじめに
以前 GPT4 で試したのでどうなるか試してみたくなった。
https://zenn.dev/sterashima78/articles/7876bd00aa2115

 やりとり
こちらからの質問は前回と同じになるようにしている。
（時間が経ってライブラリのバージョンが上がったのもあり記述が適当っぽくないのもあるがあえてそのままにしている）
https://chatgpt.com/share/bebbd705-b1ed-4b40-a8df-471c2353d4ac

 実装したコード
https://stackblitz.com/edit/vitejs-vite-nnlr...]]></description><link>https://zenn.dev/sterashima78/articles/8bca47a054fabd</link><guid isPermaLink="true">https://zenn.dev/sterashima78/articles/8bca47a054fabd</guid><pubDate>Sun, 19 May 2024 11:46:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vQXUQ2Is--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520%2528GPT4o%2529%2520%25E3%2581%25A8%2520TDD%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%25AA%25E3%2583%259A%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sterashima78%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZTM3ODhmMTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sterashima78</dc:creator></item><item><title><![CDATA[React + TypeScriptでテストコードの基礎を固める]]></title><description><![CDATA[
 はじめに
テストコードを書く機会が増える中で、より多様なテスト手法やベストプラクティスを身につけたいと感じるようになりました。特に、複雑なロジックやエッジケースを効果的にカバーするためには、より多くのテスト手法の引き出しを持つことが重要と考えます。これまでの知識に不足していた部分を補い、より深い知見を得たいと思います。
そこで、今回はReact + TypeScriptを使ったプロジェクトに焦点を当て、単体テストと結合テストの基本を学び直し、その記録を記事として残すことにしました。JavaやPHPのテストコードやSeleniumのエンドツーエンドテストには今回は触れず、主にVites...]]></description><link>https://zenn.dev/kou_kawa/articles/37-react-unit-test</link><guid isPermaLink="true">https://zenn.dev/kou_kawa/articles/37-react-unit-test</guid><pubDate>Sun, 19 May 2024 11:27:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UW0I5ZU7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520TypeScript%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2582%2592%25E5%259B%25BA%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kou</dc:creator></item><item><title><![CDATA[NestJSアプリケーションから複数のAzure Cosmos DBへ接続する]]></title><description><![CDATA[
 はじめに
NestJSアプリケーションから複数のAzure Cosmos DB NoSQL API（以下 Cosmos DB）へ接続する方法を実装したので紹介したいと思います。
NestJSからCosmos DBへ接続する場合、基本的にはazure-databaseというライブラリを使用して実装をしていくことになると思います。
その上で、１つのNestJSアプリケーションから複数のCosmos DBへ接続するパターンを構築する必要があり、azure-databaseのUsageでは実装方法が見当たらなかったため（（2024年05月19日時点））、検討をして実装を実現しました。
今回は...]]></description><link>https://zenn.dev/logbuild/articles/138820629db049</link><guid isPermaLink="true">https://zenn.dev/logbuild/articles/138820629db049</guid><pubDate>Sun, 19 May 2024 08:06:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ywu0WM2y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258B%25E3%2582%2589%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEAzure%2520Cosmos%2520DB%25E3%2581%25B8%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Ryo%2520Kainuma%2528log%2520bu...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NWZmMzJiMTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BElog%2520build%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5YjA1OTBhNjUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryo Kainuma(log build)</dc:creator></item><item><title><![CDATA[依存関係のあるタスクの実行]]></title><description><![CDATA[import {Subject, combineLatest} from 'rxjs';
import {map} from 'rxjs/operators';

// シグナルを表すSubjectを作成
const signal1 = new Subject&lt;boolean&gt;();
const signal2 = new Subject&lt;boolean&gt;();
const signal3 = new Subject&lt;boolean&gt;();

// combineLatestを使用して、すべてのシグナルの最新の値を組み合わせる
const allSig...]]></description><link>https://zenn.dev/itouh2/articles/97a6a6542c28fc</link><guid isPermaLink="true">https://zenn.dev/itouh2/articles/97a6a6542c28fc</guid><pubDate>Sun, 19 May 2024 06:03:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wlopAB56--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itouh2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNEdMNkNfWGVhSl90NFlXd2JlU01oWU9lYmotdXVnbUk4OTdlbXFrUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>itouh2</dc:creator></item><item><title><![CDATA[【ReactNative,Expo,ハリーポッタAPI】久しぶりReactNative ！とりあえずハリーポッタ図鑑作ってみるか〜🤪]]></title><description><![CDATA[
 はじめに
こんにちは！
てるし〜です！
本日はReactNativeの記事になります。
社会人になって初めてアサインされた案件がReactNativeでそこから約一年が経ちました(現在2024/5)。
案件終了後触ることがなくずっとNext.jsを触っていました。
しかし、React conf 2024を見てかなりReactNativeの発表が多く「久々に触って遊ぶか〜」と思ったので触ってみたら色々変わってて目が飛び出ました🤯
作ったものとしてはハリーポッタ図鑑です。
ReactNativeとExpoを使って作りました。
以前、Next.jsで作った記事があるのでそちらも是非ご覧くだ...]]></description><link>https://zenn.dev/terusi/articles/9cfca3c1a131c4</link><guid isPermaLink="true">https://zenn.dev/terusi/articles/9cfca3c1a131c4</guid><pubDate>Sun, 19 May 2024 06:02:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--98k9MeoA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ReactNative%252CExpo%252C%25E3%2583%258F%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259D%25E3%2583%2583%25E3%2582%25BFAPI%25E3%2580%2591%25E4%25B9%2585%25E3%2581%2597%25E3%2581%25B6%25E3%2582%258AReactNative%2520%25EF%25BC%2581%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E3%2583%258F%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259D%25E3%2583%2583%25E3%2582%25BF%25E5%259B%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2M5MzkyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるし〜</dc:creator></item><item><title><![CDATA[Cloud9(linux2023)をTypeScriptが実行できる環境にする]]></title><description><![CDATA[
 やること
Cloud9を、TypeScriptが実行できる環境にするセットアップ手順です。

 環境
用意したCloud9の情報です。



項目
設定値




プラットフォーム
Amazon Linux 2023


インスタンスタイプ
t3.small



パブリックサブネットに構築しました。

 セットアップ手順
セットアップは簡単。以下のコマンドを実行するだけです。
nvm install node
nvm use node
npm install -g typescript
セットアップコマンド実行後の各モジュールのバージョンはこれでした。
$ npm --versio...]]></description><link>https://zenn.dev/zgw426/articles/321bbc2f4640c3</link><guid isPermaLink="true">https://zenn.dev/zgw426/articles/321bbc2f4640c3</guid><pubDate>Sun, 19 May 2024 02:38:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w0q8w29v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud9%2528linux2023%2529%25E3%2582%2592TypeScript%25E3%2581%258C%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5OWNjMjMzNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suo</dc:creator></item><item><title><![CDATA[ボタンコンポーネントは難しいよ]]></title><description><![CDATA[
 見た目はボタン、中身は〇〇
ボタンコンポーネントと一言で言っても「見た目はボタン、中身は〇〇」のような見た目と中身が一致しないケースがしばしば見受けられます。
例えば、次のケースは日常的に特に遭遇することが多いです。

ボタンに見えて button タグ
ボタンに見えて a タグ

上記に加え、Nuxt や Next.js を使用する場合、次のようなパターンも想定することができます。

ボタンに見えて NuxtLink コンポーネント
ボタンに見えて Link コンポーネント

他にも様々なケースを考慮することができます。

ボタンに見えて input タグ
ボタンに見えて summ...]]></description><link>https://zenn.dev/splendente/articles/6d9f404163f259</link><guid isPermaLink="true">https://zenn.dev/splendente/articles/6d9f404163f259</guid><pubDate>Sun, 19 May 2024 01:17:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C2uxNV9i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AF%25E9%259B%25A3%25E3%2581%2597%25E3%2581%2584%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hikaru%2520Kobayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2YWIxZGQ2ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hikaru Kobayashi</dc:creator></item><item><title><![CDATA[Reactでwindow.confirmのように使用できるリーダブルな確認ダイアログを作る]]></title><description><![CDATA[
 はじめに
ブラウザ標準のwindow.confirmを使ったことはありますか？

最もシンプルな確認ダイアログを表示する方法です。
戻り値がboolean型であり、OKボタンが押された場合はtrue、キャンセルボタンが押された場合はfalseを返します。
カスタムフックで表現するとこんな感じ。

use-confirm.ts
const useConfirm = (message: string, onConfirm:() =&gt; void) =&gt; useCallback(() =&gt; {
  const result = window.confirm(message)...]]></description><link>https://zenn.dev/bmth/articles/react-confirm-dialog</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/react-confirm-dialog</guid><pubDate>Sat, 18 May 2024 17:49:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PoCMHoa4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7window.confirm%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AA%25E7%25A2%25BA%25E8%25AA%258D%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTVpY3FhSGVfOXQyWjc3YjBWV1RfWlM0MFF3MExBbS1zclhIRWtydDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[【Nestjs】Nestjsにおける推奨のtsconfig設定]]></title><description><![CDATA[
 概要
Nestjsのtsconfigを厳格にするために以下のことを行います。

nest cliでprojectを作成する時は--strictオプションをつけてnewする。
上記で作成したtsconfig.jsonに以下の項目を追加。

strictFunctionTypes
strictPropertyInitialization
noImplicitThis
alwaysStrict
forceConsistentCasingInFileNames
noFallthroughCasesInSwitch
noUnusedLocals
noUnusedParameters
exact...]]></description><link>https://zenn.dev/tomona/articles/cace7d81ca897a</link><guid isPermaLink="true">https://zenn.dev/tomona/articles/cace7d81ca897a</guid><pubDate>Sat, 18 May 2024 11:00:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o9D7S-4m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Nestjs%25E3%2580%2591Nestjs%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%258E%25A8%25E5%25A5%25A8%25E3%2581%25AEtsconfig%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomona%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUdaUUt6VlE0R21haS03c0FiSENlTjFkVnc2ZzUyY19zMUtxbTlJdzdmPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomona</dc:creator></item><item><title><![CDATA[【セキュアな個人開発のお供に!!】 Honoで作ったMPAに、Cloudflare Accessを使って簡単に認証をかける]]></title><description><![CDATA[
 背景
個人開発者の中には、
簡単なWebアプリを作ったけど、一般公開したくない、、、でもそれなりのアクセス制限をかけるのは面倒、、、
といった場面に遭遇したことはないでしょうか？
今回はCloudflare Accessを使って、なるべく手間をかけずWebアプリにGitHub認証を実装します。
その記録をメモ。
!
CloudflareダッシュボードのUIは記事執筆時点から変更されている場合があります。


 前提
Cloudflare WorkersにWebアプリ(今回はHonoのMPA)がデプロイされていること。
https://zenn.dev/y640/articles/dd...]]></description><link>https://zenn.dev/y640/articles/20240517-cloudflare-workers-with-cloudflare-access</link><guid isPermaLink="true">https://zenn.dev/y640/articles/20240517-cloudflare-workers-with-cloudflare-access</guid><pubDate>Sat, 18 May 2024 09:14:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LS_Cn0Jd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2582%25A2%25E3%2581%25AA%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%258A%25E4%25BE%259B%25E3%2581%25AB%2521%2521%25E3%2580%2591%2520Hono%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FMPA%25E3%2581%25AB%25E3%2580%2581Cloudflare%2520Access%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E8%25AA%258D%25E8%25A8%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yasuaki640%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhYmViMTI4MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yasuaki640</dc:creator></item><item><title><![CDATA[Three.js T-pose モデルにアニメーションを適用する。]]></title><description><![CDATA[Three.js を使って、T-pose モデルにアニメーションをブレンドして再生する方法です。
初歩的な内容なのに、なかなか情報が見つからなかったので、メモとして残しておきます。
※フレームワークにNext.js AppRouterを使用しています。

 DEMO


 モデルとアニメーションの配布場所 Mixamo

Vangurad By T.Choonyung
DOWNLOAD SETTING

Format: FBX
Pose: T-Pose
保存名：Vanguard.fbx

Sitting Animation
DOWNLOAD SETTING

Format: FBX
Sk...]]></description><link>https://zenn.dev/masterak/articles/zenn_article_06</link><guid isPermaLink="true">https://zenn.dev/masterak/articles/zenn_article_06</guid><pubDate>Sat, 18 May 2024 06:35:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sfj7JsMI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Three.js%2520T-pose%2520%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masterak%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5Njk4ZjY0NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masterak</dc:creator></item><item><title><![CDATA[Pulumi コマンド を GitHub Actions で実行する]]></title><description><![CDATA[
 背景
副業で Pulumi を使っています。
プロバイダーなどのパッケージのバージョン更新をサボっていたのですが、対応しようと思い Renovate で更新するようにしました。しかし、PR が来た時点では Pulumi の差分が分かりません。ローカルで pulumi preview を実行して差分がないことを毎回確認するのは面倒なので GitHub Actions で pulumi preview を実行して PR のコメントで差分を表示してもらうことにしました。

 環境
Pulumi + TypeScript
Google Cloud

 実装していく
複数環境（Stack）で ...]]></description><link>https://zenn.dev/z63d/articles/0d6b3ee4e9a44e</link><guid isPermaLink="true">https://zenn.dev/z63d/articles/0d6b3ee4e9a44e</guid><pubDate>Sat, 18 May 2024 05:30:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B18V1Kbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pulumi%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2520%25E3%2582%2592%2520GitHub%2520Actions%2520%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:z63d%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMTEyYTA4OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>z63d</dc:creator></item><item><title><![CDATA[GraphQLエンドポイントが複数ある時のフロントエンド]]></title><description><![CDATA[最近GraphQLについて触る機会があったのでその過程で調査したことについてのメモです。
GraphQLエンドポイントが複数あり、それぞれに個別のSchemaが定義されている場合、以下の点についてまとめています

そもそもサーバー側でどういうことができそうか
クラインアント側でどういう対応を行うことができるのか


 GraphQLマイクロサービス
GraphQLマイクロサービスとは、GraphQLサーバーがマイクロサービスとして稼働している状態を指します。
それぞれのマイクロサービスが独自のスキーマを持ち、個別にサーバーが起動しています。
これらのサーバーに対して、フロントエンドが直接...]]></description><link>https://zenn.dev/yamakenji24/articles/graphql-with-environments</link><guid isPermaLink="true">https://zenn.dev/yamakenji24/articles/graphql-with-environments</guid><pubDate>Sat, 18 May 2024 03:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2LZVisiO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GraphQL%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%2582%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamakenji24%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwMWYwNmMzMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamakenji24</dc:creator></item><item><title><![CDATA[Prismaのデータ取得で不要な列を除く]]></title><description><![CDATA[Prismaでデータを取得する際に、不要な列が含まれてしまう場合があります。セキュリティ上、意図しない列が含まれるのは避けたいところです。
Prismaのデータ取得で不要な列を除く方法を紹介します。
検証バージョンは prisma 5.14.0 です。

 使用するスキーマ
Userテーブルを例に説明します。

schema.prisma
model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String
}


 データ取得
javascriptでデータ取得します。

 対策なし...]]></description><link>https://zenn.dev/k_log24/articles/8857eea5a8a0b6</link><guid isPermaLink="true">https://zenn.dev/k_log24/articles/8857eea5a8a0b6</guid><pubDate>Sat, 18 May 2024 02:49:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jw-hXJGV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E3%2581%25A7%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AA%25E5%2588%2597%25E3%2582%2592%25E9%2599%25A4%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kohei.com%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYTBhMmFjNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kohei.com</dc:creator></item><item><title><![CDATA[AWS SDKでよく使う記述についてまとめてみた]]></title><description><![CDATA[
 はじめに
使用例ではNext.js、TypeScriptの場合によく使用する記述をまとめています。
S3とDynamoDBについて記述していますが、今後他のサービスについても追記する予定です。

 AWSの認証情報を安全に管理する
AWSの認証情報、特にアクセスキーの安全を確保するためには、SDKの使用は必ずサーバーサイドで行ってください。
もしクライアントサイドでSDKを利用したい場合は、Next.jsのAPIルートを通じて操作を行うようにしてください。クライアントサイドで直接SDKを使用してしまうと、ブラウザのネットワークタブから認証情報が確認されてしまい、情報が漏洩するリスクが...]]></description><link>https://zenn.dev/nenenemo/articles/9f534b1d523ea4</link><guid isPermaLink="true">https://zenn.dev/nenenemo/articles/9f534b1d523ea4</guid><pubDate>Fri, 17 May 2024 09:32:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IoSkZp3b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520SDK%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E8%25A8%2598%25E8%25BF%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258D%25E3%2583%25A2%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JqODQzWnc5aTdpNll5Z3dqX005LURkLWpYaHVoaFBSOWp5d3ZONXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ネモさん</dc:creator></item><item><title><![CDATA[TwoGate - エンタメ×テクノロジーの現場から]]></title><description><![CDATA[こんにちは。初めまして、TwoGateのチャン[1]です。RubyKaigi 2024が迫ってきている中[2]、TwoGateという会社を知ってもらいたいということで記事を書いています。TwoGateで行っていることは技術的に特色があって書けることには困らないし、書きたいこともたくさんあるので今まで書こうと思い続けていましたが、仕事にもまた困らない会社なので、書けずじまいでした。今回は張り切って各プロダクトのエンジニアで座談会を開いて、横断的にプロダクトの特長と技術的特色などを書こうと思っています！

 技術スタック
まずはTwoGateについて基本的な技術スタックの紹介をしましょう。R...]]></description><link>https://zenn.dev/twogate/articles/a269d157e7b0b0</link><guid isPermaLink="true">https://zenn.dev/twogate/articles/a269d157e7b0b0</guid><pubDate>Fri, 17 May 2024 06:50:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZCSY2Dn9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TwoGate%2520-%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A1%25C3%2597%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2581%25AE%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%258B%25E3%2582%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:chang%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjA4MGZkMTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TwoGate%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUtrZzg1T01Vb2NQSnFfM25KNzBpX2JybnhHTDhFN2hRMWhfamctY1p6SmdXYkpRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chang</dc:creator></item></channel></rss>