<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 11 Oct 2024 01:01:10 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[施策実行支援でデータアナリストが考えていること]]></title><description><![CDATA[
 はじめに
データアナリストとして仕事を始めて3年が経ちました。この3年間で、施策の立案やテストの設計、効果測定といったデータを活用とした施策実行支援のプロセスを数多く経験させていただいた中で、自分がデータアナリストとして気をつけていることをまとめてみました。自分の考えていることをほぼ全て書き起こしたので、少し冗長かもしれません。
想定読者はデータアナリスト1年目と施策立案や企画を行うビジネスマンを想定しています。
また、これは筆者の働くWeb系企業の自社プロダクト改善における話になりますので、予めご了承ください。

 まとめ
思いのほか長文になってしまったので、時間のない人向けに先に...]]></description><link>https://zenn.dev/dmmdata/articles/71bf581a19dae3</link><guid isPermaLink="true">https://zenn.dev/dmmdata/articles/71bf581a19dae3</guid><pubDate>Fri, 11 Oct 2024 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--34xLxQWI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25BD%25E7%25AD%2596%25E5%25AE%259F%25E8%25A1%258C%25E6%2594%25AF%25E6%258F%25B4%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25A2%25E3%2583%258A%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hanata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4MjQ4ZWRhNzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DMM%2520Data%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ZWRhZjgwZGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hanata</dc:creator></item><item><title><![CDATA[Azure OpenAI ServiceのGPT-4o Realtime Audioを使ってみよう]]></title><description><![CDATA[2024年10月1日に新しいモデルが登場しましたので、早速使ってみました。

 GPT-4o Realtime Audioとは
GPT-4oモデルの一つであり、音声入力→音声出力を実現する新しいモデルです。
低遅延でリアルタイムな会話を実現するように設計されており、AIアシスタントやリアルタイム翻訳などに活用されることが予測されています。
今まではAzure Speech to TeztやWhisperを使って一度音声を文字化、GPTが生成したテキストをAzure Text to Speechを使って音声合成する必要がありました。
少なからずタイムラグが発生していたので、音声だけでやり取...]]></description><link>https://zenn.dev/headwaters/articles/44d4152b85cac1</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/44d4152b85cac1</guid><pubDate>Thu, 10 Oct 2024 15:51:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M82EXZtd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520Service%25E3%2581%25AEGPT-4o%2520Realtime%2520Audio%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ikebowsan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNTM1ZTc4OGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikebowsan</dc:creator></item><item><title><![CDATA[図書館システムで学ぶ "責任の分離"]]></title><description><![CDATA[今回は、ソフトウェア設計の重要な原則の一つ「責任の分離」について、図書館システムの例を用いてまとめてみようと思います。

 「責任の分離」って何？
「責任の分離」とは、プログラムの各部分（クラスやモジュール）が特定の役割（責任）だけを持つようにする設計原則です。
「一つのことは一つの場所で行う」ということですね。

 具体例：図書館システム
図書館システムを例に考えてみましょう。
このシステムは本の貸し出し、返却、検索などの機能を持っています。

 改善前のコード
はじめは、こんな感じでコードを書いていたとしましょう：

library_router.py
class LibraryRo...]]></description><link>https://zenn.dev/n_haru2/articles/7778a677319dba</link><guid isPermaLink="true">https://zenn.dev/n_haru2/articles/7778a677319dba</guid><pubDate>Thu, 10 Oct 2024 15:38:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dCIoD9z4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%25B3%25E6%259B%25B8%25E9%25A4%25A8%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%2520%2522%25E8%25B2%25AC%25E4%25BB%25BB%25E3%2581%25AE%25E5%2588%2586%25E9%259B%25A2%2522%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pen2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzYzA2OTVkMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pen2</dc:creator></item><item><title><![CDATA[サーバレスGPUにModalがいいぞ！]]></title><description><![CDATA[GPUを使いたいこと、あると思います。
ただしご家庭に強いGPUはないこともあるでしょうし、かといってGPU搭載したインスタンスを立て続けているととてつもないお金がかかります。
そんなあなたにサーバレスGPU、使った秒数分だけ課金が発生するので、いきなりすごい金額がかかることにはならず手軽にGPUを使ったプログラミングが始められます。
私は今の所ModalとRunPodを試したのですが、ModalのDXが良すぎるため今回イントロ記事を書く筆を取りました。
https://modal.com/
始めにざっくりいいところを述べると

一つのファイルで完結する。

RunPodとの比較だと「R...]]></description><link>https://zenn.dev/seya/articles/6ba2d58d01306f</link><guid isPermaLink="true">https://zenn.dev/seya/articles/6ba2d58d01306f</guid><pubDate>Thu, 10 Oct 2024 13:29:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bc2xSfbP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AC%25E3%2582%25B9GPU%25E3%2581%25ABModal%25E3%2581%258C%25E3%2581%2584%25E3%2581%2584%25E3%2581%259E%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzODg4YjM0MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>seya</dc:creator></item><item><title><![CDATA[【Python】return文 try-except構文 使い方ガイド]]></title><description><![CDATA[Pythonにおいて、return文、try-except構文は重要な制御フロー要素です。
この記事では、Pythonを学び始めの方向けにreturn文とtry-except構文、それぞれの役割と基本的な使い方を解説します。

 1. return文
return文は関数の中で使います。関数の実行を終わらせて、結果を返すためのものです。

 どんな時に使う？

計算結果を返したいとき
関数の途中で終了させたいとき


 例1
def 挨拶(名前):
    return f"こんにちは、{名前}さん！"

メッセージ = 挨拶("太郎")
print(メッセージ)  # 出力: こんにち...]]></description><link>https://zenn.dev/n_haru2/articles/2fd6238c51312d</link><guid isPermaLink="true">https://zenn.dev/n_haru2/articles/2fd6238c51312d</guid><pubDate>Thu, 10 Oct 2024 11:13:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2fHur_-V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591return%25E6%2596%2587%2520try-except%25E6%25A7%258B%25E6%2596%2587%2520%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pen2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzYzA2OTVkMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pen2</dc:creator></item><item><title><![CDATA[【Python】浮動小数点の計算による誤差とnumpy.allcloseを用いた誤差を考慮した配列比較]]></title><description><![CDATA[
 はじめに
浮動小数点の計算では誤差が生じることがあります．
そのため，同じ値だと考えられるものでも，プログラム上では等しくないものとして扱われることがあります．
具体的な例は以下です
import numpy as np

array1 = np.array([0.1 + 0.2, 0.3 + 0.3])
array2 = np.array([0.3, 0.6])

print(array1 == array2)
## 出力
# [False  True]
どちらのarrayも1つ目の要素が0.3, 2つ目の要素が0.6であり，それぞれ等しいように見えます．しかし，計算時に誤差が生じ...]]></description><link>https://zenn.dev/enken/articles/enken-python-floating-point-array-comparison</link><guid isPermaLink="true">https://zenn.dev/enken/articles/enken-python-floating-point-array-comparison</guid><pubDate>Thu, 10 Oct 2024 10:48:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v9yFFoID--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%25B5%25AE%25E5%258B%2595%25E5%25B0%258F%25E6%2595%25B0%25E7%2582%25B9%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E8%25AA%25A4%25E5%25B7%25AE%25E3%2581%25A8numpy.allclose%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25AA%25A4%25E5%25B7%25AE%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E9%2585%258D%25E5%2588%2597%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUZUUk1GUjNZZS1Mb2lhQWg4TFo4SXVCV2laWGNxZmo2NEpzdjh5S3poR0k5VXMyaz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enken</dc:creator></item><item><title><![CDATA[【LangChain】チャットボットの会話履歴をRedisで管理する]]></title><description><![CDATA[以前、LangChainのMemory機能を使って、チャットボットの会話履歴を管理する機能について記事を投稿しました。
https://zenn.dev/khisa/articles/7f56f4e66cae43
このときは、LangChainの会話履歴を管理するクラスChatMessageHistoryのインスタンスをグローバル変数として管理していました。
ところが、実際にAIチャットボットのバックエンドとして実装し、APIを経由してアクセスするような現実的な構成を考慮すると、プロセスが保持するグローバル変数で会話履歴を管理するわけにもいきません。規模がそれなりになれば、当然のことなが...]]></description><link>https://zenn.dev/khisa/articles/fbfed2f10c1ad7</link><guid isPermaLink="true">https://zenn.dev/khisa/articles/fbfed2f10c1ad7</guid><pubDate>Thu, 10 Oct 2024 10:00:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--czr0Low4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590LangChain%25E3%2580%2591%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E4%25BC%259A%25E8%25A9%25B1%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592Redis%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2581%2595%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHFKaUVHa1VQMkc5WGpIeHlTa3p4bld3Z3JNcHFhT19hUFVKcWEyQ2YxWUZFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひさ</dc:creator></item><item><title><![CDATA[pythonのvenvの使い方]]></title><description><![CDATA[
新しい環境の作成

cd [project dir]
python3 -m venv [newenvname]


activate

source [newenvname]/bin/activate

パッケージのインストール

([newenvname])$ pip install [package name]

deactivate

([newenvname])$ deactivate
]]></description><link>https://zenn.dev/nonononoka/articles/a63ed0b7c99261</link><guid isPermaLink="true">https://zenn.dev/nonononoka/articles/a63ed0b7c99261</guid><pubDate>Thu, 10 Oct 2024 07:24:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_PnalSq2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AEvenv%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momomomoko%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>momomomoko</dc:creator></item><item><title><![CDATA[プログラミングの基礎を習得（python）]]></title><description><![CDATA[
 python基礎

 【実行環境】
https://paiza.io/ja/projects/new

 【データの型】
文字型：ダブルクォーテーション(“”)もしくはシングルクォーテーション(‘’)で囲まれたもの
print("hello")
# 出力：hello
print("123")
# 出力：123
整数型：ただの数字
print(123)
# 出力：123
# 見た目は同じだけどこっちは数字
りスト型：[]の中にカンマ区切りで文字や数字を入れられる
print(["りんご","みかん","ぶどう"])
# 出力：["りんご", "みかん", "ぶどう"]

 (算術演算子...]]></description><link>https://zenn.dev/kate0418/articles/71571900d9b751</link><guid isPermaLink="true">https://zenn.dev/kate0418/articles/71571900d9b751</guid><pubDate>Thu, 10 Oct 2024 06:38:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u0nzirtu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2582%2592%25E7%25BF%2592%25E5%25BE%2597%25EF%25BC%2588python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%2583%25E3%2581%25A8%25EF%25BE%2583%25EF%25BE%259E%25EF%25BD%25BD%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OWNhMjkxZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けぃとﾃﾞｽ。</dc:creator></item><item><title><![CDATA[Pandasでは実はlistもDataFrameの要素にできる(+explode)]]></title><description><![CDATA[こんにちは、沙代です。
DataFrameで1行を複数行に展開しようとした時に、実はpandasは文字列数値だけでなく、listも要素にできることに気づきました。
環境
MacOS Montery 12.6.2 (M1 Pro)
Python 3.9.1
pandas 2.2.3

 確認用コード

example1.py
import pandas as pd
df = pd.DataFrame({"A": [[1,2,3],"hello", [4,5]], "B": [1,2,3]})
print(df)
print(df.dtypes)
print()
print(df["A"][...]]></description><link>https://zenn.dev/syitsk/articles/d64336a9db8890</link><guid isPermaLink="true">https://zenn.dev/syitsk/articles/d64336a9db8890</guid><pubDate>Thu, 10 Oct 2024 06:08:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lm1vYk28--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2581%25A7%25E3%2581%25AF%25E5%25AE%259F%25E3%2581%25AFlist%25E3%2582%2582DataFrame%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2528%252Bexplode%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sayo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndiUTdqNDNzempPRWU3aWQ1SjVPRlNTUzV0SnhqLWZIZEVNTUFIRnNHSE14Z0RBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sayo</dc:creator></item><item><title><![CDATA[Pythonでgroup_byしたいならdefaultdictを使う]]></title><description><![CDATA[
 始めに
Pythonでデータをグループ化する際、defaultdictを使用すると簡単かつ効率的に実装できます。この記事では、defaultdictを使ったgroup_byの実装方法と、itertools.groupbyとの違いについて解説します。

 環境

Python 3.12.6


 実装
defaultdictを使用すればシンプルに実装できます。
from collections import defaultdict

class TestGroupBy:
    class _Test:
        def __init__(self, user_id, group...]]></description><link>https://zenn.dev/kirimaru/articles/fc4797313c3ab5</link><guid isPermaLink="true">https://zenn.dev/kirimaru/articles/fc4797313c3ab5</guid><pubDate>Thu, 10 Oct 2024 03:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f_z_-q4---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7group_by%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2589defaultdict%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E4%25B8%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きり丸</dc:creator></item><item><title><![CDATA[LeetCode  #100 Same Tree]]></title><description><![CDATA[
 問題概要
入力値：p(binary tree), q(binary tree)
出力値：boolean
return whether p and q are same
問題のリンク

 入力例
arr1: [1,2,3]
arr2: [1,2,3]
result: true

 解答例1
計算量：O(n)
Python
class Solution(object):
    def isSameTree(self, p, q):
        """
        :type p: TreeNode
        :type q: TreeNode
        :rtype...]]></description><link>https://zenn.dev/pirika/articles/5b22fda517f57c</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/5b22fda517f57c</guid><pubDate>Wed, 09 Oct 2024 23:50:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hSConFHH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:LeetCode%2520%2520%2523100%2520Same%2520Tree%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[[pycgi] PHPのように、PythonをHTMLに埋め込む]]></title><description><![CDATA[自分用に開発していましたが、あまりにも便利だったので、公開しようと思います。
https://github.com/nnnnnnn0090/pycgi
リリースページからビルド済みバイナリをダウンロードしてください。
pythonのインストールは不要です。
実行すると、そのディレクトリに
./docs
./.sys // 隠しフォルダ
が自動で作成されます。
./docsフォルダがhtdocsのことです。
詳しくはReadmeをお読みください。

 基本的な使い方
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&...]]></description><link>https://zenn.dev/nnnnnnn0090/articles/662ba082d54b31</link><guid isPermaLink="true">https://zenn.dev/nnnnnnn0090/articles/662ba082d54b31</guid><pubDate>Wed, 09 Oct 2024 22:09:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rwfA4uvf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bpycgi%255D%2520PHP%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2580%2581Python%25E3%2582%2592HTML%25E3%2581%25AB%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zzzz%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2OTViOGNlZWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zzzz</dc:creator></item><item><title><![CDATA[LeetCode  #1385 Find the Distance Value Between Two Arrays]]></title><description><![CDATA[
 問題概要
入力値：arr1(int aray), arr2(int array), d(int)
出力値：int
問題のリンク

 入力例
arr1: [4,5,8]
arr2: [10,9,1,8]
d:2
result: 2

 解答例1
計算量：O(n*m)
Brute force
Python
class Solution(object):
    def findTheDistanceValue(self, arr1, arr2, d):
        """
        :type arr1: List[int]
        :type arr2: List[i...]]></description><link>https://zenn.dev/pirika/articles/d09ffa031f0552</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/d09ffa031f0552</guid><pubDate>Wed, 09 Oct 2024 13:54:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AYMe3M5Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520%2520%25231385%2520Find%2520the%2520Distance%2520Value%2520Between%2520Two%2520Arrays%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[生成AIを活用したアバターの可能性: HeyGenで未来のインタラクティブ体験を試す]]></title><description><![CDATA[

 はじめに
最近では、生成AIを活用したさまざまなサービスが続々と登場し、これらを組み合わせることで、今は想像もつかないような革新的なアイデアが生まれる可能性を感じています。今回はその中でも、HeyGenというサービスを試してみたので、ご紹介します。
HeyGenは、撮影した動画や音声データをもとに、AIがアバターを通じて発話したり、インタラクティブな対話が可能になるプラットフォームです。私は特に、将来的にコールセンター業務などをアバターを使ったチャット形式に置き換えることで、コスト削減が実現できるのではないかと期待しています。
今回は、自分の動画と音声を基にHeyGenを使い、私が...]]></description><link>https://zenn.dev/ogiki/articles/2ac9c071015b2f</link><guid isPermaLink="true">https://zenn.dev/ogiki/articles/2ac9c071015b2f</guid><pubDate>Wed, 09 Oct 2024 13:43:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TVGV6DnP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2590%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%253A%2520HeyGen%25E3%2581%25A7%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E4%25BD%2593%25E9%25A8%2593%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjNiYWMwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村たろう</dc:creator></item><item><title><![CDATA[秒数から時間、分、秒数を綺麗に得る(Python)]]></title><description><![CDATA[こんにちは、沙代です。
だいぶ秋っぽくなってきましたね。でも、昔ってこれが夏じゃありませんでしたっけ？
tqdmのテストコードを読んでいたら、Pythonicに時間、分、秒数を得る方法があったので、備忘のためメモしておきたいと思います。
（コーダーの方感謝です）

 TL;DR
mins, s = divmod(int(seconds), 60)
h, m = divmod(mins, 60)
print(f"{h:d}:{m:02d}:{s:02d}")

 今まで
divmodを知らなかったので、毎回%,//を使ってやっていました。

こんな感じ
h = int(seconds) /...]]></description><link>https://zenn.dev/syitsk/articles/511bea70b80c00</link><guid isPermaLink="true">https://zenn.dev/syitsk/articles/511bea70b80c00</guid><pubDate>Wed, 09 Oct 2024 11:39:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KT67Jh_v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%2592%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E6%2599%2582%25E9%2596%2593%25E3%2580%2581%25E5%2588%2586%25E3%2580%2581%25E7%25A7%2592%25E6%2595%25B0%25E3%2582%2592%25E7%25B6%25BA%25E9%25BA%2597%25E3%2581%25AB%25E5%25BE%2597%25E3%2582%258B%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sayo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndiUTdqNDNzempPRWU3aWQ1SjVPRlNTUzV0SnhqLWZIZEVNTUFIRnNHSE14Z0RBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sayo</dc:creator></item><item><title><![CDATA[pyproject.tomlでPoetryを使わず自作パッケージを作成する]]></title><description><![CDATA[
 前提

setup.pyではなくpyproject.tomlを使用する
poetryは使わない


 パッケージの元となるフォルダを準備
以下のようにパッケージの元となるフォルダを準備する。
project_root_directory
└── src
    └── mypkg
        ├── __init__.py
        ├── main.py
        ├── mod.py
        └── subdir
            └── submod.py

main.py
from mypkg.mod import modfunc
from my...]]></description><link>https://zenn.dev/tsujino/articles/2d894ef54c99cb</link><guid isPermaLink="true">https://zenn.dev/tsujino/articles/2d894ef54c99cb</guid><pubDate>Wed, 09 Oct 2024 09:48:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X49F-GQN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyproject.toml%25E3%2581%25A7Poetry%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsujino%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZHZUVUljOTBPY1lGa3l0ZDVKa2QyRkdPVGVMYmtQdl9GVG94bEVGSkhLYWNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsujino</dc:creator></item><item><title><![CDATA[VSCodeでシンボル検索が重い場合の対処]]></title><description><![CDATA[ここ2,3ヶ月、VSCodeでのシンボル検索がやたら重くなり検索出来ない状態になっていました。
バージョンアップのバグでもなさそうですし、他のプロジェクトでは動くためpython.analysis関連の設定を疑って確認したところ・・・
おや？


pyrightconfig.json または pyproject.toml が使用されている場合は、 'python.analysis.exclude' を設定できません。


 Answer
結果的には以下の設定をpyproject.tomlに追記することで負荷が軽くなり、シンボル検索がまともに動くようになりました。

pyproject.t...]]></description><link>https://zenn.dev/tektek/articles/cda219ec7dc16f</link><guid isPermaLink="true">https://zenn.dev/tektek/articles/cda219ec7dc16f</guid><pubDate>Wed, 09 Oct 2024 09:08:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wPVL1lrX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%258C%25E9%2587%258D%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tektek%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tektek</dc:creator></item><item><title><![CDATA[Zenn本をKindle本に変換する方法]]></title><description><![CDATA[
 概要
この記事では、Zennで執筆した本をKindle出版に適した形式に変換する方法を紹介します。Zennの書籍をMarkdownで執筆している場合、pandocを使うことで簡単にEPUB形式の電子書籍に変換できます。また、カバー画像のリサイズなど、Kindleの要件に合わせた調整も行います。

 前提
この記事で紹介する手順を進める前に、以下の条件が満たされていることを確認してください。


GitHub連携でZennの本を執筆している
本のカバー画像がcover.pngとして保存されている

pandocがインストールされている

Python環境が整備されている


 必要なパ...]]></description><link>https://zenn.dev/enaiya/articles/zenn-to-kindle</link><guid isPermaLink="true">https://zenn.dev/enaiya/articles/zenn-to-kindle</guid><pubDate>Wed, 09 Oct 2024 05:31:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rAVoKWQz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E6%259C%25AC%25E3%2582%2592Kindle%25E6%259C%25AC%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%2597%258D%25E5%25B1%258B%25E3%2581%2588%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXR4dHpsR3VhaWRzc3ZxZGM3R1lJUFpvZkZJbW9fb1MwWUFVbWpTdjNONVhPVGhRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>藍屋えん</dc:creator></item><item><title><![CDATA[【因果推論】層化無作為化実験(Stratified RCT)をPythonで実装してみた]]></title><description><![CDATA[無作為化実験(RCT)は、因果推論の基本的な手法として実証分析で多く活用されているのみならず、「A/Bテスト」という名前でビジネスにおける効果検証手法としても活用されていることは周知の事実だと思います。
そんなRCTの一種に、層化無作為化実験（Stratified RCT/層化A/Bテスト） があります。この手法は、共変量の値をもとに個体を層に分け、層ごとにRCTを実施し、各層の推定量を重みづけして全体の平均処置効果の推定量を得る手法です。共変量の偏りを小さくするRCT手法である層化RCTは、2024年話題の川口、澤田（2024）「因果推論の計量経済学」、及び安井、伊藤、金子（2024）...]]></description><link>https://zenn.dev/ka_ichi/articles/d9f025f6a47d79</link><guid isPermaLink="true">https://zenn.dev/ka_ichi/articles/d9f025f6a47d79</guid><pubDate>Wed, 09 Oct 2024 04:32:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zBebunmz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A8%25E8%25AB%2596%25E3%2580%2591%25E5%25B1%25A4%25E5%258C%2596%25E7%2584%25A1%25E4%25BD%259C%25E7%2582%25BA%25E5%258C%2596%25E5%25AE%259F%25E9%25A8%2593%2528Stratified%2520RCT%2529%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ka_ichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG51OU9CcTdWcElqcmxTSnZvUFZuOVdCamoxN3B2dTVKWFI2eTFiY2w2Y1h6NGVrTTc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ka_ichi</dc:creator></item></channel></rss>