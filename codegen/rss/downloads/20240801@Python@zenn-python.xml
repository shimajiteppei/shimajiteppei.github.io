<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 01 Aug 2024 06:28:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Pythonで便利なファイル選択関数を作る]]></title><description><![CDATA[
 目的
ファイルパスを定義する手間を省きたい。
データを扱う仕事をしていて、大量のファイルと向き合うことが増えてきました。中間データが山ほど生まれますし、元データもバージョンがどんどん増えていき、名称の長いファイルがフォルダにあふれることになります。そしてファイルが増えるたびに、ハードコードしたファイルパスを書き換えていたのですが、次第に面倒を覚えるようになりました。
そこでファイルを特定のディレクトリに突っ込んでおけば、コードを書き換えなくともコンソール上で簡単に選択できるような仕組みを作ることにしました。

 関数
from pathlib import Path

def sel...]]></description><link>https://zenn.dev/crandim_r_and_d/articles/58022460d25a2b</link><guid isPermaLink="true">https://zenn.dev/crandim_r_and_d/articles/58022460d25a2b</guid><pubDate>Thu, 01 Aug 2024 03:12:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RJp8LqZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E9%2581%25B8%25E6%258A%259E%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nambaaa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MDU4Y2FiMmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nambaaa</dc:creator></item><item><title><![CDATA[PythonによるNaCl型結晶のマーデルング定数の実装]]></title><description><![CDATA[固体化学の授業の課題で計算面倒くさかったので、NaCl型結晶のマーデルング定数(Madelung constant)をPythonで実装してみました。

 マーデルング定数とは
マーデルング定数
イオン結晶におけるあるイオン(原子)の周りにあるイオン達の静電エネルギーの和

M =  \frac{d}{Z_i Z_j}\sum_{j \neq i} \frac{Z_i Z_j}{r_{ij}}

参考：　初歩から学ぶ固体物理学(KS物理専門書) p.89
何の変数かはまた今度更新します。

 アルゴリズム

一対のイオン-イオン間のマーデルング定数を計算する
上の計算を全てのイオン-イオ...]]></description><link>https://zenn.dev/reggae_punch/articles/e7ea4732426f63</link><guid isPermaLink="true">https://zenn.dev/reggae_punch/articles/e7ea4732426f63</guid><pubDate>Wed, 31 Jul 2024 19:24:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kB5LXZlb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BNaCl%25E5%259E%258B%25E7%25B5%2590%25E6%2599%25B6%25E3%2581%25AE%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2587%25E3%2583%25AB%25E3%2583%25B3%25E3%2582%25B0%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AC%25E3%2582%25B2%25E3%2582%25A8%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGh5aDRRZU9nSk9XWU1uMU9ONGxSUkFqd29JbjUtYWFkSFZvMHlfZHd1blVnZlhQOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>レゲエパンチ</dc:creator></item><item><title><![CDATA[PythonでBM25のスコアを算出してみる]]></title><description><![CDATA[
 やること
フルテキスト検索で使われるBM25のスコアをPythonで求める

 背景
AI Searchには様々なドキュメント検索の手法があり、代表的なものとしてフルテキスト検索があります。フルテキスト検索ではtf-idfを発展させたBM25というアルゴリズムが使われています。

 参考記事
マイクロソフトの公式に説明があります。
https://learn.microsoft.com/ja-jp/azure/search/index-ranking-similarity

 理論
BM25の数式は一見難解ですが以下の記事がわかりやすかったです。
https://qiita.com/...]]></description><link>https://zenn.dev/headwaters/articles/7db94f0fb46a69</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/7db94f0fb46a69</guid><pubDate>Wed, 31 Jul 2024 14:50:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UEBKxmxc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7BM25%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E3%2582%2592%25E7%25AE%2597%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:akihiro%2520nakamura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MjU4ZWEwY2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akihiro nakamura</dc:creator></item><item><title><![CDATA[numpy.cov(X.T) 分散共分散行列について]]></title><description><![CDATA[
 背景
dataframeをndarrayへと変換した後、分散教分散行列を求める方法が調べても見つからなかったため、以下に方法を示す。
（見つからなかっただけで、絶対にどこかの記事に書いてあると思う...）

 分散共分散行列
import numpy as np
x = np.array([1,2,3,4,5,6,7,8,9])
y = np.array([9,8,7,6,5,4,3,2,1])
上記のデータxおよびyの分散共分散行列はどのように求めることができるだろうか。
np.cov(x,y)

上記の通り書くことで分散共分散行列を求めることができる。
では、一方で以下のようなデ...]]></description><link>https://zenn.dev/kry_river/articles/c5a7a422bb37a2</link><guid isPermaLink="true">https://zenn.dev/kry_river/articles/c5a7a422bb37a2</guid><pubDate>Wed, 31 Jul 2024 13:06:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zu3aDJyV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:numpy.cov%2528X.T%2529%2520%25E5%2588%2586%25E6%2595%25A3%25E5%2585%25B1%25E5%2588%2586%25E6%2595%25A3%25E8%25A1%258C%25E5%2588%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kry_river%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0ZjFjMjdjNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kry_river</dc:creator></item><item><title><![CDATA[【MotionBuilder】Python SDK 入門 第7回 『UI・ツール開発-基礎編』]]></title><description><![CDATA[この記事は、Python SDK 入門の第7回目の記事です。
今回から、MotionBuilderでのUI・ツール開発について解説していきます。第1回でも書いた通り、今回から3回に分けて『UI・ツール開発』をテーマに、SDKのみで完結する方法、Qt(PySide)を利用する方法、PySideの使用例の3つを解説します。

 UIの概説
MotionBuilderのUIがどんな構成で、各部がどんな名称をもつのか解説します。

 MainWindow
パソコンで開く一つ一つのアプリケーションの”窓”としてのウィンドウと同じ。

MainWindow。赤枠で囲った部分

 Window
Mai...]]></description><link>https://zenn.dev/nadegata_memo/articles/da64bcc16f8cfd</link><guid isPermaLink="true">https://zenn.dev/nadegata_memo/articles/da64bcc16f8cfd</guid><pubDate>Wed, 31 Jul 2024 11:07:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n24Ve5f---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590MotionBuilder%25E3%2580%2591Python%2520SDK%2520%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC7%25E5%259B%259E%2520%25E3%2580%258EUI%25E3%2583%25BB%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA-%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ndgt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3ZmZmZWFmYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ndgt</dc:creator></item><item><title><![CDATA[【Python】ファイルの冒頭に書くべき内容とその構成]]></title><description><![CDATA[
 1. はじめに
Pythonファイルの冒頭には、コードの可読性と保守性を高めるためにいくつかの重要な情報を記述することが推奨されます。この記事では、Pythonファイルの冒頭に書くべき内容とその書き方について、具体的な例を交えて説明します。

 2. エンコーディング指定
非ASCII文字を含む場合、ファイルの先頭にエンコーディング指定を記述します。これはPython 3ではほとんど必要ありませんが、Python 2との互換性を考慮する場合や、特定のエディタでの表示を考慮する場合に使用します。
# -*- coding: utf-8 -*-

 3. ドキュメンテーション文字列（do...]]></description><link>https://zenn.dev/nuinui/articles/fe942394d8b305</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/fe942394d8b305</guid><pubDate>Wed, 31 Jul 2024 08:48:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OTw0eiv9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%2592%25E9%25A0%25AD%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[踏み台サーバーから jupyter lab を立ち上げる方法]]></title><description><![CDATA[
 前提条件
client ↔ middle server ↔ target server
のように middle server を経由して target server にアクセスする場合の設定方法について解説する。

 ssh の設定

ssh の key を登録する。


~/.ssh/middle と ~/.ssh/target は手元に置いておく



~/.ssh/config を設定する


~/.ssh/config
Host MiddleServer
        HostName        middle-address
        User          ...]]></description><link>https://zenn.dev/genf740/articles/573ffa39-c0d5-45c4-ad39-b1afbfefbbfb</link><guid isPermaLink="true">https://zenn.dev/genf740/articles/573ffa39-c0d5-45c4-ad39-b1afbfefbbfb</guid><pubDate>Wed, 31 Jul 2024 05:57:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AzivWopg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B8%258F%25E3%2581%25BF%25E5%258F%25B0%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%258B%25E3%2582%2589%2520jupyter%2520lab%2520%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gen740%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNOGJfSGVlRHJhclh6YllqWnBrQjBWUVZtcExib3ZzRE42WEFoYjdVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gen740</dc:creator></item><item><title><![CDATA[ローカルLLMにRAGASの評価させてみた]]></title><description><![CDATA[
 はじめに
RAGASの評価はローカルLLMで可能なのか検証してみたいと思います。
各メトリクスで、質問、回答、コンテキスト、GroundTruthのいずれかをインプットに
LLMに評価させる仕組みとなっているため、インプットが長文だとトークン代がかかります。
私はGPTに評価させているのですが、データセット(質問、回答、コンテキスト、GroundTruth)だけでも何千トークンもあって、さらに何十件もあるため、コストが痛くないわけではないです。
そこでローカルLLMに評価させることで、節約できないかと考えたのが背景です。
即結果を出すことは求められてはいないため、速度はある程度は許容...]]></description><link>https://zenn.dev/headwaters/articles/74e23c1dae2da5</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/74e23c1dae2da5</guid><pubDate>Wed, 31 Jul 2024 05:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eyato9SH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E3%2581%25ABRAGAS%25E3%2581%25AE%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mshiba%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNGI2ZTQ2MzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mshiba</dc:creator></item><item><title><![CDATA[[Python] オリジナルコマンドを実装する]]></title><description><![CDATA[
 はじめに
Pythonで書いた処理を自分のマシン専用でCLIツールとして利用したい
例として、引数にhelloという文字列を返すコマンドを実装する

 hello.py
#! /usr/bin/env python3

import sys
arg=sys.argv[1]

print(hello+arg)


 手順

実行権限を付与する
パスを通す


 実行権限を付与する
% chmod u+x hello.py

 パスを通す
% echo export PATH="$PATH:$HOME/hello.py/" &gt;&gt; ~/.zshrc
% source ~/.zs...]]></description><link>https://zenn.dev/kotopasi/articles/33f648f3e99482</link><guid isPermaLink="true">https://zenn.dev/kotopasi/articles/33f648f3e99482</guid><pubDate>Tue, 30 Jul 2024 17:26:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aiJnCp2a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520%25E3%2582%25AA%25E3%2583%25AA%25E3%2582%25B8%25E3%2583%258A%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あまたつ</dc:creator></item><item><title><![CDATA[[Python] OGPっぽい画像を作る]]></title><description><![CDATA[
 はじめに
% cogp OGPっぽい画像を作りたい ogp
とすると、下のような画像がzennのimages配下にogp.pngとして保存するコマンドを作成する

こういうやつを作りたい

 動作環境




バージョン




macOS
macOS14.4 (23E214)


Python
3.12.3




 概要

 引数



引数
概要




第1引数
画像内の文字


第2引数
出力画像ファイル名




 特徴
% cogp test1\\ntest2 test


入力文字列内に\\nを含めると、そこで改行される
右下に作成日を付ける


 手順

figma...]]></description><link>https://zenn.dev/kotopasi/articles/001decd9945f83</link><guid isPermaLink="true">https://zenn.dev/kotopasi/articles/001decd9945f83</guid><pubDate>Tue, 30 Jul 2024 17:11:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z8nl3VkA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520OGP%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOWU0NjBmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あまたつ</dc:creator></item><item><title><![CDATA[ラベルエンコーディングについて]]></title><description><![CDATA[
 紹介文
本記事はPython初心者かつ機械学習初心者による備忘録的内容である。
また、機械学習を勉強し始めた人を対象とした記事である。
マークダウン記法なども何もわからない状態からの記事投稿のため、
今後内容や記載方法なども精査していきたい。

 エンコーディング
変数は以下の二種類に分けることができる。

数値変数
カテゴリー変数（文字変数）

さらにカテゴリー変数は以下の二種類に分けることができる。

順序変数（ordinal）
名義変数（nominal）

順序変数は並び順に意味のある文字、名義変数は並び順に特に意味はないもの。
たとえば、評価S,A,B,Cにはその並び順に意味...]]></description><link>https://zenn.dev/kry_river/articles/2881fcb5200f15</link><guid isPermaLink="true">https://zenn.dev/kry_river/articles/2881fcb5200f15</guid><pubDate>Tue, 30 Jul 2024 10:26:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6WUsDNZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AB%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kry_river%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0ZjFjMjdjNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kry_river</dc:creator></item><item><title><![CDATA[【RAG】LangChainでHyDEを試す]]></title><description><![CDATA[RAGを構成する要素のうち、Retrieverの性能改善に資する方式として、HyDE(Hypothetical Document Embeddings)という手法があります。HyDEは入力されたクエリに対して、LLMで仮の回答を生成し、その仮の回答を元にナレッジを検索する方式です。この記事では、LangChainのRePhraseQueryを用いてHyDEを実装して、その効果を試してみます。

 HyDE(Hypothetical Document Embeddings)とは？
HyDE(Hypothetical Document Embeddings)は、RAGのRetrieverの性...]]></description><link>https://zenn.dev/khisa/articles/cc2ff969d4f2b8</link><guid isPermaLink="true">https://zenn.dev/khisa/articles/cc2ff969d4f2b8</guid><pubDate>Tue, 30 Jul 2024 09:53:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hx3K1U9C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RAG%25E3%2580%2591LangChain%25E3%2581%25A7HyDE%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2581%2595%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHFKaUVHa1VQMkc5WGpIeHlTa3p4bld3Z3JNcHFhT19hUFVKcWEyQ2YxWUZFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひさ</dc:creator></item><item><title><![CDATA[Python - 例外処理はなぜ必要ですか？]]></title><description><![CDATA[
 そもそも例外とは何ですか？
Pythonで発生するエラーは、大きく２種類に大別されます。

構文エラー（syntax error）
例外（exception）


 構文エラー

概要: 文法の間違い（を知らせるための通知）
検出タイミング: プログラムの実行前
レベル: 致命的。そもそもプログラムが実行できない


 例外

概要: ある処理をしようとして、できなかったこと（を知らせるための通知）
検出タイミング: プログラムの実行後
レベル: ピンキリ


 例外処理とは何をすることですか？
例外が発生した際、送られてくるのは単なる通知なので、必要に応じて何かしらの処理を書いたり...]]></description><link>https://zenn.dev/kyashy/articles/exception-handling-21cf23ada2de8f</link><guid isPermaLink="true">https://zenn.dev/kyashy/articles/exception-handling-21cf23ada2de8f</guid><pubDate>Tue, 30 Jul 2024 09:20:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---1GARQNy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520-%2520%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%259C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25A7%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyashy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjZDdjZGNiOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyashy</dc:creator></item><item><title><![CDATA[究極のプログラミングリソース：無料のプログラミングチートシート集]]></title><description><![CDATA[プログラミングの世界では、チートシートはすべての開発者の秘密兵器です。初心者から経験豊富なプログラマーまで、これらのチートシートは必要な情報を迅速に見つけ、生産性を向上させるのに役立ちます。今日は、PythonからDockerまでのさまざまなプログラミング言語とツールをカバーする究極のプログラミングチートシート集をまとめました。ぜひブックマークしてください！

 1. Python
Pythonは、さまざまなアプリケーションに適した広く使用されている高級プログラミング言語です。このチートシートには、Pythonの基本構文、データ構造、および一般的なライブラリが含まれています。
Pytho...]]></description><link>https://zenn.dev/randy80001/articles/b0d0365751798c</link><guid isPermaLink="true">https://zenn.dev/randy80001/articles/b0d0365751798c</guid><pubDate>Tue, 30 Jul 2024 06:31:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ofrRCUlM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A9%25B6%25E6%25A5%25B5%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Randy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyOWVlODc5MjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Randy</dc:creator></item><item><title><![CDATA[【MotionBuilder】Python SDK 入門 第6回 『VScode拡張機能の活用』]]></title><description><![CDATA[この記事は、Python SDK 入門の第6回目の記事です。
今回はMotionBuilderのVScode拡張機能について書きます。

 MotionBuilder Utilsの概要
MotionBuilder Utilsは、Nils Söderman氏が開発されたVisual Studio Codeの拡張機能です。公式の拡張機能ではありませんが、非常に使い勝手がよく、スクリプト・ツール開発に役立ちます。
下記の機能が実装されています（market placeより）。



機能
内容




Execute Code
VScodeのEditorから直接コードを実行


Code Co...]]></description><link>https://zenn.dev/nadegata_memo/articles/88804345399f7a</link><guid isPermaLink="true">https://zenn.dev/nadegata_memo/articles/88804345399f7a</guid><pubDate>Tue, 30 Jul 2024 06:05:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8ULMnk5E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590MotionBuilder%25E3%2580%2591Python%2520SDK%2520%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC6%25E5%259B%259E%2520%25E3%2580%258EVScode%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E3%2580%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ndgt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3ZmZmZWFmYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ndgt</dc:creator></item><item><title><![CDATA[pythonでログを取る方法]]></title><description><![CDATA[
 pythonでログを取る方法
簡素な方法からリッチな順番に並べていく。

 print()
これでいいなら。

 使用例
```python
print("Hello, World!")
```



メリット: かんたん

デメリット: 出力先がコンソールのみ。ログレベルの制御ができない。


 io
ファイルに書き込む。
これをやるくらいなら、loggingモジュールを使ったほうがいいかもしれない。


メリット: コンソール以外にもお手軽に出力できる。

デメリット: ログレベルの制御ができない。


 使用例
```python
with open("log.txt", "w...]]></description><link>https://zenn.dev/hph/articles/44a07a8bfeddf1</link><guid isPermaLink="true">https://zenn.dev/hph/articles/44a07a8bfeddf1</guid><pubDate>Tue, 30 Jul 2024 03:53:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JxJ5-Gbq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%258F%2596%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wef%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0OWM2NjQ2YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wef</dc:creator></item><item><title><![CDATA[Azure OpenAI で Function Calling を使う]]></title><description><![CDATA[
 執筆日
2024/07/30

 概要
Function Calling(関数呼び出し)を使うことでプレーンなテキスト生成以外にも、多様な機能を統合し対話型アプリケーションをより実用的で動的なものにすることが可能です。特に複雑な要求に対する出力フォーマットの安定化や、外部リソースとの連携の必要がある場合に有用だと思っています。単純にJSON形式で回答を出力したいというだけでも、Azure OpenAIではresponse_formatに対応しているモデルが少ないため、使い方を知っておいて損はありません。
自由に設定できる項目が多く、応用できる範囲も広大な機能なため一度自分で使ってみな...]]></description><link>https://zenn.dev/headwaters/articles/13316d641c9555</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/13316d641c9555</guid><pubDate>Mon, 29 Jul 2024 23:04:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CVTGLqp---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520%25E3%2581%25A7%2520Function%2520Calling%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[【Python】コードスタイルガイドのPEP 8について解説]]></title><description><![CDATA[
 1. PEP 8とは
PEP 8（Python Enhancement Proposal 8）は、Pythonコードの書き方に関する標準的なスタイルガイドです。Pythonコミュニティで広く採用されており、可読性の高い一貫したコードを書くための指針を提供しています。

 2. 歴史と成り立ち

2001年7月5日：Guido van Rossum（Pythonの創始者）とBarry Warsaw によって最初のバージョンが提案されました。
その後、数回の改訂を経て、Pythonコミュニティの標準的なスタイルガイドとして確立されました。
PEP 8は、Pythonの哲学である「読みやす...]]></description><link>https://zenn.dev/nuinui/articles/4df5101e76b652</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/4df5101e76b652</guid><pubDate>Mon, 29 Jul 2024 21:11:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q-JaxKHf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AEPEP%25208%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[freezegun で timezone を設定すると時刻がずれる問題と回避策]]></title><description><![CDATA[次で報告済の内容の解説です:
[Bug] tz_offset shifts datetime which is instantiated with tz argument · Issue #553 · spulec/freezegun

 正しい Python の仕様
本来は datetime.now() で生成した時刻は、引数: tz が違っても同じ時刻になります:
from datetime import datetime, timedelta, timezone
from freezegun import freeze_time
from dateutil.tz import tz...]]></description><link>https://zenn.dev/y_shinoda/articles/freezegun-issues-553</link><guid isPermaLink="true">https://zenn.dev/y_shinoda/articles/freezegun-issues-553</guid><pubDate>Mon, 29 Jul 2024 13:10:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_-pnD0Uz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:freezegun%2520%25E3%2581%25A7%2520timezone%2520%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E6%2599%2582%25E5%2588%25BB%25E3%2581%258C%25E3%2581%259A%25E3%2582%258C%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E5%259B%259E%25E9%2581%25BF%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25AF%25A0%25E7%2594%25B0%2520%25E5%25B0%2586%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWtoTi1MMk9aSmVZVWVzN1NBazM3eDZjOVpzTlJYX01EaWdmS21ReHRPcWhjaVpBTHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>篠田 将彦</dc:creator></item><item><title><![CDATA[【VSCode】Flake8で文字制限を緩和する方法と設定エラーの解決]]></title><description><![CDATA[
 1. はじめに
Pythonの開発において、コードスタイルの一貫性は非常に重要です。Flake8は広く使用されているリンティングツールですが、デフォルトの設定では1行の最大文字数が79文字に制限されています。この記事では、VSCode環境でFlake8の文字制限を緩和する方法と、設定時に発生する可能性のあるエラーの解決方法を詳しく解説します。

 2. Flake8の設定ファイルを作成する
まず、プロジェクトのルートディレクトリに .flake8 という名前の設定ファイルを作成します。

VSCodeでプロジェクトを開きます。
新しいファイルを作成し、.flake8 という名前で保存...]]></description><link>https://zenn.dev/nuinui/articles/31fe5ff78339ab</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/31fe5ff78339ab</guid><pubDate>Mon, 29 Jul 2024 07:57:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--naG1AyiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590VSCode%25E3%2580%2591Flake8%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%25B6%25E9%2599%2590%25E3%2582%2592%25E7%25B7%25A9%25E5%2592%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item></channel></rss>