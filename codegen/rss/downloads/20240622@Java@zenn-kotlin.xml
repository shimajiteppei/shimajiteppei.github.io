<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 22 Jun 2024 12:03:23 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Kotlinを扱う際の心構え]]></title><description><![CDATA[!
⚠当記事は、銀の弾丸ではありません。各自の目的や状況などを総合的に判断して、自分で責任を持って検討してください。

!
⚠当記事は、銀の弾丸ではありません。各自の目的や状況などを総合的に判断して、自分で責任を持って検討してください。

※大事なことなので２回書きました

 様々な分離がしやすい
様々な分離をすることで、どこでデータが変更されているかがわかりやすくなり、デバッグしやすくなります。

 イミュータブルとミュータブル、再代入可能の明示化
変数宣言に関しては、varとvalで簡潔に再代入可能かを明示化することができます。
Javaではfinal修飾子を付与しないといけません。...]]></description><link>https://zenn.dev/momosetkn/articles/50f65c8ccbba16</link><guid isPermaLink="true">https://zenn.dev/momosetkn/articles/50f65c8ccbba16</guid><pubDate>Sat, 22 Jun 2024 01:16:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GFpBTarT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E5%25BF%2583%25E6%25A7%258B%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momosetkn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3YzAxY2Q0MTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>momosetkn</dc:creator></item><item><title><![CDATA[Kotlin脳内ランタイムクイズ]]></title><description><![CDATA[
 Kotlin 問題集
この記事は Kotlin Fest 2024 のログラスブースでのクイズ企画です！
https://www.kotlinfest.dev/

 ルール

皆さんの脳内で Kotlin のコードを実行し、結果を回答してください！
PC で実行してはいけません


 回答方法
全問回答できたらブースにお越しください！
https://x.com/LoglassPrdTeam/status/1804316646691213516
全問正解者には Anker の充電器や技術書などの景品をご用意しております。
※ 数に限りがあるため、先着順のお渡しになります

 お願い
...]]></description><link>https://zenn.dev/loglass/articles/kotlin-question</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/kotlin-question</guid><pubDate>Sat, 22 Jun 2024 00:54:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MMWPH8JH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E8%2584%25B3%25E5%2586%2585%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25AF%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Makoto%2520Kobayashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kyVXd4UEtqVnpsTXV0NklidWhVZ2lmQWlSemJsdGJDQ2NMNVg2YVE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Makoto Kobayashi</dc:creator></item><item><title><![CDATA[DDDにおける認可の扱いとKotlinでの実装パターン]]></title><description><![CDATA[
 はじめに
アドベントカレンダーで書いた認可のベストプラクティスの記事が結構反応を頂けたのですが、最終的な結論が ユースケースによる という投げやりなまとめになってしまっていたのが少し気になっていました。
https://zenn.dev/loglass/articles/76e559f1a13776
そこで、ユースケース別の実装パターンをより詳しく解説しようと思い、Kotlin Fest 2024にプロポーザルを出しました。
が、力及ばずお見送りとなってしまいました。
https://fortee.jp/kotlin-fest-2024/proposal/f388bc44-95c9-...]]></description><link>https://zenn.dev/loglass/articles/05f59c0957f0b3</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/05f59c0957f0b3</guid><pubDate>Fri, 21 Jun 2024 05:08:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rl0znkYB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DDD%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E8%25AA%258D%25E5%258F%25AF%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25A8Kotlin%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:urmot%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBUWxiNEN2ZDZBQU1CZklac3p4UnpBNFpsVVRDbE1ONFBaSXBCaHc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>urmot</dc:creator></item><item><title><![CDATA[検査例外にさよなら！KotlinのRailway Oriented Programming by kotlin-result]]></title><description><![CDATA[
 はじめに
惜しくも(?) Kotlin Fest 2024で採択とならなかったセッションの供養を行います。とはいえ、全ての内容を網羅することはせず、かいつまんで話したかった内容を書いていきます。
https://fortee.jp/kotlin-fest-2024

 Railway Oriented Programmingとは？
Railway Oriented ProgrammingとはScott Wlaschin氏によって提唱された設計です。
詳細は全て無料でこちらから見れるのでぜひチェックしてみてください。
https://fsharpforfunandprofit.com/...]]></description><link>https://zenn.dev/loglass/articles/77e1496ed9bb68</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/77e1496ed9bb68</guid><pubDate>Fri, 21 Jun 2024 05:02:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GDYG2_j3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A4%259C%25E6%259F%25BB%25E4%25BE%258B%25E5%25A4%2596%25E3%2581%25AB%25E3%2581%2595%25E3%2582%2588%25E3%2581%25AA%25E3%2582%2589%25EF%25BC%2581Kotlin%25E3%2581%25AERailway%2520Oriented%2520Programming%2520by%2520kotlin-r...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuito%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NTA0YzQyMGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuito Sato</dc:creator></item><item><title><![CDATA[新しいSonatype Central Portal APIに対応したKotlin Multiplatformライブラリテンプレートを作った]]></title><description><![CDATA[明日6/22に開催されるKotlinFest '24で「2024年に公開するに相応しいKotlin Multiplatformライブラリを構築する」というタイトルでセッションを担当するので、いろいろ下準備をしているところです。「みんなカジュアルにKMPライブラリを作って公開しよう」というメッセージが主な内容です。
このセッションの1/3くらいで、Maven Centralにパッケージを公開する方法を説明する予定なのですが、ここ数ヶ月でSonatype Nexusがややこしい変更をいろいろ加えていて、これが現状思いのほかややこしい事態をもたらしていて、不本意ながらこの関係の話に重点を置くこ...]]></description><link>https://zenn.dev/atsushieno/articles/d066e757c9640f</link><guid isPermaLink="true">https://zenn.dev/atsushieno/articles/d066e757c9640f</guid><pubDate>Thu, 20 Jun 2024 17:39:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z_BF6lHH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584Sonatype%2520Central%2520Portal%2520API%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259FKotlin%2520Multiplatform%25E3%2583%25A9%25E3%2582%25A4...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsushi%2520Eno%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptVkFPck1hOUFQQ3pGaTR0VUtqMHZXSHZHaWpJQVVvZWRtM3JZVUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Atsushi Eno</dc:creator></item><item><title><![CDATA[Android ProjectでKotlin2.0にアップデートするには]]></title><description><![CDATA[
 はじめに
個人のAndroid Projectでkotlin2.0に上げたときにやった作業のメモです。
前提として、上げる前の環境は

kotlin 1.9.24
AGP 8.5
compose compier 1.5.14
ksp導入済み

あたりでしょうか。
比較的新しいバージョンだと思うので、これらのバージョンではない場合は、この記事以外にも作業が必要かもしれません。

 kotlin 2.0にアップデートする

 kotlinを2.0.0にする
--- a/gradle/libs.versions.toml
+++ b/gradle/libs.versions.toml
@@...]]></description><link>https://zenn.dev/yasi/articles/how-to-update-kotlin2-on-android-project</link><guid isPermaLink="true">https://zenn.dev/yasi/articles/how-to-update-kotlin2-on-android-project</guid><pubDate>Tue, 18 Jun 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1YB-5-Ni--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%2520Project%25E3%2581%25A7Kotlin2.0%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yasi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEd1cFBMTS1wcXlaYVlPcE5Uek9QemJpcXNCU3pMRHlJTlhaMTlTRnQ2RnVVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yasi</dc:creator></item><item><title><![CDATA[[kotlin][android]secrets-gradle-plugin: APIキーなどの秘匿情報をgit管理から外す]]></title><description><![CDATA[
 はじめに
API keyのようにgit管理したくないものをどうやって扱えばいいか悩んだ。
いつもなら何も考えず.envを作って管理するのだが
ふと思い立って公式を見ると以下の記載があった。

プロジェクトで API キーを操作するには、代わりに secrets-gradle-plugin などの Gradle プラグインを使用してください。

参考
ということで今回はsecrets-gradle-pluginの使い方を見ていこう。

 secrets-gradle-plugin
まずは概要から
APIキーなどの情報をgit管理から外しつつ、プロジェクト内で使うためのプラグインです。
...]]></description><link>https://zenn.dev/shun1997/articles/how-to-invoke-properties-in-ktx</link><guid isPermaLink="true">https://zenn.dev/shun1997/articles/how-to-invoke-properties-in-ktx</guid><pubDate>Tue, 18 Jun 2024 08:51:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xr2oU8K0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bkotlin%255D%255Bandroid%255Dsecrets-gradle-plugin%253A%2520API%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AE%25E7%25A7%2598%25E5%258C%25BF%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592git%25E7%25AE%25A1...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOGJkNTdmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジニア</dc:creator></item><item><title><![CDATA[javaとkotlinの文法比較]]></title><description><![CDATA[想定読者

javaを普段使っている
kotlinをこれから使いたい or 使う予定がある

本記事では、javaとkotlinの文法上の相違点をまとめます。本記事に記載されている以外にも様々な相違点があるので、雰囲気だけでもお伝えできればと思います。
kotlinは2011年にJetBrain社が開発した静的型付けのオブジェクト指向言語です。Javaをもっと簡潔・安全になるように改良しておりJVM上で動作します。
変数宣言
kotlinでは末尾のセミコロンが必要ありません。
varは再代入可能、valは再代入不可となります。
java
String str = "abc";
int n...]]></description><link>https://zenn.dev/tnakano/articles/467be3d5e607e2</link><guid isPermaLink="true">https://zenn.dev/tnakano/articles/467be3d5e607e2</guid><pubDate>Tue, 18 Jun 2024 08:46:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2n-flvCV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:java%25E3%2581%25A8kotlin%25E3%2581%25AE%25E6%2596%2587%25E6%25B3%2595%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZmI5YmE5NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taiki</dc:creator></item><item><title><![CDATA[Android Test Junit4 入門]]></title><description><![CDATA[2024年6月現在いまだに現役なJunit4さん
使い方がわからなかったのでメモ

 基本の使い方
Androidフレームワークを使用しない単体テスト
class Junit4Test {
    @Before
    fun setUp() {
        println("setup")
    }

    @After
    fun tearDown() {
        println("tearDown")
    }

    @Test
    fun do1plus1Return_2() {
        val actual = 1 + 1
       ...]]></description><link>https://zenn.dev/giglancer/articles/c750a0fce29326</link><guid isPermaLink="true">https://zenn.dev/giglancer/articles/c750a0fce29326</guid><pubDate>Tue, 11 Jun 2024 07:23:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MS4CK6g5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Android%2520Test%2520Junit4%2520%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmZlZTVlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo</dc:creator></item><item><title><![CDATA[これで迷わない！Modal、Dialog、Drawerの違い]]></title><description><![CDATA[
 はじめに
Web やモバイルアプリを開発をしていると様々な UI コンポーネントを使いますが、どのコンポーネントを選択すべきかは悩むことは多いですよね。
特に 「Modal（モーダル）」 「Dialog（ダイアログ）」「Drawer（ドロワー）」 は、UI ライブラリによって呼び方が異なり混乱します。
例えば、最近伸びているshadcn/uiでは Dialog と呼んでいたり、Chakra UI ではModalと呼んでいます。MUI(Material UI) に至っては Modal と Dialog の両方が存在します 🤯
本記事では、Modal、Dialog、Drawer それぞれ...]]></description><link>https://zenn.dev/miravy/articles/33b97d94bb7ea7</link><guid isPermaLink="true">https://zenn.dev/miravy/articles/33b97d94bb7ea7</guid><pubDate>Sun, 09 Jun 2024 10:39:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yT0-LGlc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A7%25E8%25BF%25B7%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581Modal%25E3%2580%2581Dialog%25E3%2580%2581Drawer%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuuumin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjNGE1OTM0ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuuumin</dc:creator></item><item><title><![CDATA[【個人開発】Compose Multiplatform で iOS アプリをリリースしました]]></title><description><![CDATA[
 はじめに
KotlinConf 2024 で Compose Multiplatform for iOS が晴れてベータ版となったことが発表されました。
https://twitter.com/kotlin/status/1793610157475184798
ベータ版になったことで注目度が高まっている？と思われますが、Android エンジニアが Compose Multiplatform（以下 CMP）を使って iOS アプリをリリースしてみたので、技術的なことや思ったことなどを記事にしたいと思います。

 どんなアプリか
こちらです👇
https://apps.apple.co...]]></description><link>https://zenn.dev/tsumuchan/articles/d92d2057c97b4c</link><guid isPermaLink="true">https://zenn.dev/tsumuchan/articles/d92d2057c97b4c</guid><pubDate>Fri, 07 Jun 2024 21:34:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ojITyBS2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591Compose%2520Multiplatform%2520%25E3%2581%25A7%2520iOS%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2582%2580%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0YjE2NTk2NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つむちゃん</dc:creator></item><item><title><![CDATA[Kover を使って PR にシンプルなテストカバレッジレポートをつけたい]]></title><description><![CDATA[こんにちは！アルダグラムでエンジニアをしている内倉です🦐
ユニットテストのカバレッジを出したいけれど「ちょっと見たいだけで Codecov とか使うほどではないんだよな」というようなこと、たまにありませんか？
今まで Rails のプロジェクトでは、テストカバレッジを GitHub の PR にコメントとして追加してみたことがあるのですが、Android + Kotlin ではやったことなかったので、少し調べてみました。
Android でカバレッジ取るなら、JaCoCo 一択なのかな？と思っていましたが、Kotlin だったら Kover というのが良さそうだったので導入してみたところ...]]></description><link>https://zenn.dev/aldagram_tech/articles/9b25b73bbb3f00</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/9b25b73bbb3f00</guid><pubDate>Thu, 06 Jun 2024 09:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U-nxtHMd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kover%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520PR%2520%25E3%2581%25AB%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:31o3%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4OTI3NzM0ZWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>31o3</dc:creator></item><item><title><![CDATA[[Android] 公開したくないAPI Keyを管理する方法]]></title><description><![CDATA[
 課題
API Keyをハードコーディングした状態でGitHubにあげてしまうと、API Keyが公開されてしまって良くない。
他の人に見られないようにAPI Keyを管理したい。
(自分はSupabaseのURLとAPI Keyを管理したかった。)

 解決策
local.propertiesにAPI Keyを保存する。

 詳細

 手順1：local.propertiesに記載
local.propertiesに以下のように管理したいURLとAPI Keyを記載する。
SUPABASE_URL=https://xxxxxxxxx
SUPABASE_KEY=xxxxxxxxxxxx...]]></description><link>https://zenn.dev/hayaharu/articles/ceb05c6beb6e92</link><guid isPermaLink="true">https://zenn.dev/hayaharu/articles/ceb05c6beb6e92</guid><pubDate>Wed, 05 Jun 2024 15:08:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0s32_6Ew--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAndroid%255D%2520%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584API%2520Key%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%2584%25E3%2581%25AF%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZjgyODg4NzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はやはる</dc:creator></item><item><title><![CDATA[detektをCLIで使用する]]></title><description><![CDATA[
 はじめに
detektとはKotlinにおける静的解析ツールです。detektは知っている前提で進めるため、詳しくは公式ドキュメントや既出の記事を参照して下さい。
https://detekt.dev/
detektの実行方法は主に以下2パターンがあります。

gradle/mavenタスクとして実行
CLIで実行

本記事は表題の通り、CLIで実行する場合のポイントをまとめた記事になります。公式にも設定方法があるのですが、いざ導入しようとするとつまりポイントが多かったため、記事として残しておきます。
!
CLIで実行したいモチベーションは、pre-commitフックでステージされた...]]></description><link>https://zenn.dev/kerokerotur/articles/83d303ac2e91b0</link><guid isPermaLink="true">https://zenn.dev/kerokerotur/articles/83d303ac2e91b0</guid><pubDate>Sun, 02 Jun 2024 14:32:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HzjVIfzU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:detekt%25E3%2582%2592CLI%25E3%2581%25A7%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kerokerotur%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmZWExZjBhMGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kerokerotur</dc:creator></item><item><title><![CDATA[Androidアプリにミニゲームを組み込む！Goでミニゲーム開発　Ebitengine]]></title><description><![CDATA[既にネイティブでアプリ開発をしていて、なんかミニゲーム入れたくなっちゃった時。
どんな選択肢があるのか調べていて、これやっぱ Ebitengine じゃないの！と思って楽しくなってしまった話です。
!
追記 : Ebitengine で書き出したモジュールをロードするActivityを別のActivityから呼び出す場合、初回の読み込み以外はエラーが発生して読み込めないようです。
現状はマルチアクティビティで切り替えるような挙動はテストされていない、とのことでした。
なので、現状ではこの記事の当初の目的であった、「既存のAndroidネイティブアプリにゲームを組み込む」という用途では使用...]]></description><link>https://zenn.dev/heartrails/articles/f404bb9c988547</link><guid isPermaLink="true">https://zenn.dev/heartrails/articles/f404bb9c988547</guid><pubDate>Sat, 01 Jun 2024 12:16:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N0vsDzbR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AB%25E3%2583%259F%25E3%2583%258B%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25EF%25BC%2581Go%25E3%2581%25A7%25E3%2583%259F%25E3%2583%258B%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2580Ebitengine%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:maripiyo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0ODIyMDRiZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258F%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25BA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2plcElLTG9ZR1NIcnBUOEFyVkkxS2w5R2tkZFkxMEpBYWNjTWo5Qmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maripiyo</dc:creator></item><item><title><![CDATA[VSCodeでSpringBoot+Kotlinの環境を整えてみる]]></title><description><![CDATA[
 はじめに
VSCode で SpringBoot + Kotlin の開発が可能なのか調べるために簡単なログイン機能と WebAPI を実装し確かめてみた結果をまとめます。
結論としてはゴリゴリ開発するのは難しいと思いました。
確かめるために作ったプロジェクト
https://github.com/openriceworks/spring-kotlin-demo
ちなみに... IntelliJ を使わない理由
Kotlin を書く際に一番いいツールは間違いなく IntelliJ だと思います。開発元が同じですし。
IntelliJ の無料版では Kotlin/Java はサポートさ...]]></description><link>https://zenn.dev/t_k/articles/c946e5fc71a47e</link><guid isPermaLink="true">https://zenn.dev/t_k/articles/c946e5fc71a47e</guid><pubDate>Sat, 01 Jun 2024 10:41:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Jc6YYU61--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7SpringBoot%252BKotlin%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk_or%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEVIc2lmbTRQY1BDXzA0NHVSRi0tMkhKbW1QSXVKZEZpQUEtUkU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk_or</dc:creator></item><item><title><![CDATA[VSCodeでKotlinの開発環境構築手順]]></title><description><![CDATA[
 前提条件

言語はKotlinを使用すること
Gradleを利用すること
brewが使用できること

brewが入っていない方はこちらを参照使用できる状態にしてください




 拡張機能のインストール
VScodeで拡張機能（以下の項目）をインストールしていきます。

Kotlin
Kotlin Language
Kotlin Formatter




 KotlinコンパイラとGradleインストール

// TODO brewのアップデートは必要であれば行う
$ brew update
$ brew install kotlin
$ brew install gradle
※...]]></description><link>https://zenn.dev/yt_hsgw/articles/ca77fb7be734a5</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/ca77fb7be734a5</guid><pubDate>Sat, 01 Jun 2024 06:49:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0B_jxH6T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7Kotlin%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item><item><title><![CDATA[共通Activityを作ってみた]]></title><description><![CDATA[
 どういうものか
AppCompatActivityを拡張したActivity

 何ができるか
キーボード表示/非表示、ダイアログ、ナビゲーションバー表示/非表示などをまとめたActivity。

 詳細

 実装
open class UICommonActivity : AppCompatActivity() {
    companion object{
        /** ログタグ */
        private val LOG_TAG = "UICommonActivity"
        /** ヘッダー上部の余白 */
        private val...]]></description><link>https://zenn.dev/yt_hsgw/articles/da6eaa572a8ed6</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/da6eaa572a8ed6</guid><pubDate>Sat, 01 Jun 2024 06:45:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GFdZ3Cnp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25B1%25E9%2580%259AActivity%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item><item><title><![CDATA[Kotlin × Spring Bootでサーバー実装するための環境構築]]></title><description><![CDATA[
 参考文献

Kotlin × Spring Boot × gRPC による RPC サーバの実装
Quick start


 環境



タイトル
内容




macOS
Sonoma 14.4.1(M1)




 手順

 1. Spring Initializrの設定


 2. build.gradleの実装
plugins {
    id("org.springframework.boot") version "2.1.6.RELEASE"
    id("org.jetbrains.kotlin.jvm") version "1.3.21"
    id("org....]]></description><link>https://zenn.dev/yt_hsgw/articles/a4d9582733c367</link><guid isPermaLink="true">https://zenn.dev/yt_hsgw/articles/a4d9582733c367</guid><pubDate>Sat, 01 Jun 2024 06:01:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uAMmbhXv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520%25C3%2597%2520Spring%2520Boot%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yt_hsgw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMDI2NGQ0NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yt_hsgw</dc:creator></item><item><title><![CDATA[Ktor のハンドラーを書くときに runBlocking するな]]></title><description><![CDATA[
 TL;DR

Ktor で、リクエストを受け付けたら postgres につないで pg_sleep(3) するだけのアプリを作った

pg_sleep(3) を runBlocking で囲うか withContext で囲うかによって、大量リクエストをした場合の実行時間に差が出る

withContext を使え


 確認方法
以下のような Ktor のハンドラーを用意してアプリを動かす。
※ Ktor 2.3.11
※ Exposed 0.51.0
これで http://localhost:8080/runblocking/3 と http://localhost:8080/...]]></description><link>https://zenn.dev/m_takehara/articles/7e3c60a56b5912</link><guid isPermaLink="true">https://zenn.dev/m_takehara/articles/7e3c60a56b5912</guid><pubDate>Sat, 01 Jun 2024 04:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x4AMPWlS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ktor%2520%25E3%2581%25AE%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%2520runBlocking%2520%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m_takehara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMZ2djVjJ2UGVpNGlNY2tvbVBTRzNzZm45Q3M2UGY2SkVza1Z4bFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>m_takehara</dc:creator></item></channel></rss>