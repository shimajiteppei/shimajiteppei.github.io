<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 30 May 2024 10:37:56 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Snowflake Notebooks がパブリックプレビューされたので触ってみる]]></title><description><![CDATA[Snowflakeでjupyter notebookのように使える機能
Notebooksが5/25にリリースされました。
サンプルプロジェクトがgithubにアップロードされていました。
https://github.com/Snowflake-Labs/snowflake-demo-notebooks


 Notebookの作成
Snowflake -&gt; Projects -&gt; Notebooks
右上の+ Notebookで作成できます。


 権限の付与
Contact Your admin to get access to a database and schem...]]></description><link>https://zenn.dev/shintaroamaike/articles/7d1a0ca81d4ef1</link><guid isPermaLink="true">https://zenn.dev/shintaroamaike/articles/7d1a0ca81d4ef1</guid><pubDate>Thu, 30 May 2024 07:36:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EJvQ0hkc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowflake%2520Notebooks%2520%25E3%2581%258C%25E3%2583%2591%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShintaroAmaike%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmNWYzMmE0MWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ShintaroAmaike</dc:creator></item><item><title><![CDATA[「Prompty を読み込んで LangChain と Semantic Kernel で実行するのを試してみた」のコードを書きなおしてみた]]></title><description><![CDATA[1 つ前の記事で「Prompty を読み込んで LangChain と Semantic Kernel で実行するのを試してみた」という記事を書きました。
https://zenn.dev/microsoft/articles/lets-start-prompty
今回は、その時に書いた Prompty を読み込んで実行するコードをちょっと書きなおしてみました。
書きなおしたポイントは以下の通りです。

その言語の命名規約の流儀に従う

癖で Python の変数名を camelCase にしてしまっていたので snake_case に修正


非同期処理を使うように変更
LangCha...]]></description><link>https://zenn.dev/microsoft/articles/lets-start-prompty2</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/lets-start-prompty2</guid><pubDate>Thu, 30 May 2024 05:54:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i64-JzqI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CPrompty%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%2520LangChain%2520%25E3%2581%25A8%2520Semantic%2520Kernel%2520%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%258D...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuki%2520Ota%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmNzg3NDJjNDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuki Ota</dc:creator></item><item><title><![CDATA[Pythonの Linter Formatter は、もうRuff一択。最短5分でプロジェクトに導入]]></title><description><![CDATA[
 概要
Python の Linter、Formatter は今まで black, flake8, isort など複数のライブラリを組み合わせて使用することが一般的でしたが、すべてをオールインワン統合した Ruff の登場により、状況が一変しました。
Ruff は Rust 製の高速な Linter、Formatter で、Python のコードをチェックする際には、もう Ruff 一択と言っても過言ではありません。
本記事では、基本的な Ruff の導入方法(pre-commit を使用)と、VSCODE での設定方法を紹介します。

 リポジトリ
本記事の説明に使用しているサンプ...]]></description><link>https://zenn.dev/tk_resilie/articles/python_ruff_setup</link><guid isPermaLink="true">https://zenn.dev/tk_resilie/articles/python_ruff_setup</guid><pubDate>Wed, 29 May 2024 22:46:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BqJyDb-w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%2520Linter%2520Formatter%2520%25E3%2581%25AF%25E3%2580%2581%25E3%2582%2582%25E3%2581%2586Ruff%25E4%25B8%2580%25E6%258A%259E%25E3%2580%2582%25E6%259C%2580%25E7%259F%25AD5%25E5%2588%2586%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E8%25B0%25B7%2520%25E6%2598%2582%2528Python%252FFastAP...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMzNhYjJkZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>米谷 昂(Python/FastAPIプロフェッショナル)</dc:creator></item><item><title><![CDATA[【Signal Processing】Butter Filter Exlpained]]></title><description><![CDATA[
 1. What is butter filter?
The Butterworth filter is a type of signal processing filter that is designed to have as flat a frequency response as possible in the passband. It works as a bandpass(or high pass, low pass) filter, and also known as a maximally flat magnitude filter.
The filter is nam...]]></description><link>https://zenn.dev/yuto_mo/articles/01f4a7efc292ad</link><guid isPermaLink="true">https://zenn.dev/yuto_mo/articles/01f4a7efc292ad</guid><pubDate>Wed, 29 May 2024 15:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b8iJpbeN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Signal%2520Processing%25E3%2580%2591Butter%2520Filter%2520Exlpained%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu</dc:creator></item><item><title><![CDATA[音楽生成AIをM1 MBAで動かす話]]></title><description><![CDATA[どうもえいやです
（こちらの記事は 2024年05月18日に Note に投稿したものを改変・転載したものです）

 なんのお話？
今回は音楽生成AIとして有名な Facebook の MusicGen を非対応環境であるApple Silicon マシン（M1 Macbook Air）で動くようにしてみた話です
早い話が、Intel マシンエミュレータのLLVMを介してビルドしたら動きますよという話ですので、どうやってか知りたいだけの方はここまで読めば結構です

 どうして音楽生成を？
先ごろ作ったサービスの一部として投稿している Youtube の動画に音楽を使いたいからです

 な...]]></description><link>https://zenn.dev/aya_eiya/articles/63e51eebb04f8b</link><guid isPermaLink="true">https://zenn.dev/aya_eiya/articles/63e51eebb04f8b</guid><pubDate>Wed, 29 May 2024 15:26:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JZi3quyv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E6%25A5%25BD%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%2592M1%2520MBA%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aya_eiya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aya_eiya</dc:creator></item><item><title><![CDATA[[AtCoder Daily Training ALL 2024/05/29 16:00start] 参加記録]]></title><description><![CDATA[AtCoder Daily Training ALL 2024/05/29 16:00start に参加しました。
A ~ F の6完でした。
残り10分ありましたが、さすがに D 問題を速解きはまだできないので、断念しました。

 A - Edge Checker

もしくは こちら

 考え方
a と b の差が 1 ならば少なくとも直接結ばれています。
注意点として、 1 と 10 が直接結ばれている点です。
これは差が 9 になるのでそれも判定に含める必要があります。
実装例(Python)
def solve(a: int, b: int) -&gt; bool:
    di...]]></description><link>https://zenn.dev/shizukakokoro/articles/95e09af0543cfa</link><guid isPermaLink="true">https://zenn.dev/shizukakokoro/articles/95e09af0543cfa</guid><pubDate>Wed, 29 May 2024 08:24:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FGsQgekR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAtCoder%2520Daily%2520Training%2520ALL%25202024%252F05%252F29%252016%253A00start%255D%2520%25E5%258F%2582%25E5%258A%25A0%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>静心</dc:creator></item><item><title><![CDATA[Prompty を読み込んで LangChain と Semantic Kernel で実行するのを試してみた]]></title><description><![CDATA[Microsoft Build 2024 で発表された Prompty について試してみたのでメモです。
Visual Studio Code の Prompty 拡張機能 をインストールすることで簡単に使用できます。
Prompty は プロンプトとプロンプトの概要、パラメーターなどを定義することが出来るファイルです。以下のような感じになっています。
---
name: ExamplePrompt
description: This is an example prompty file for the Python QA.
authors:
  - Kazuki Ota
model:
...]]></description><link>https://zenn.dev/microsoft/articles/lets-start-prompty</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/lets-start-prompty</guid><pubDate>Wed, 29 May 2024 05:32:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wFXlKZ8C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prompty%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%2520LangChain%2520%25E3%2581%25A8%2520Semantic%2520Kernel%2520%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuki%2520Ota%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmNzg3NDJjNDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuki Ota</dc:creator></item><item><title><![CDATA[新しいディレクトリでpoetryのセットアップでどうやんだっけ?]]></title><description><![CDATA[
 毎回忘れるからメモ
新しいディレクトリでPoetryをセットアップする手順は以下の通りです。


新しいディレクトリの作成
mkdir my_new_project
cd my_new_project



Poetryの初期化
poetry init

このコマンドを実行すると、Poetryが対話形式でプロジェクトの設定を行います。以下のような質問に答えることになります：
This command will guide you through creating your pyproject.toml config.

Package name [my-new-project]: 
...]]></description><link>https://zenn.dev/ytksato/articles/67fb9add146f5a</link><guid isPermaLink="true">https://zenn.dev/ytksato/articles/67fb9add146f5a</guid><pubDate>Wed, 29 May 2024 05:04:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i7B_xNGu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25A7poetry%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25A7%25E3%2581%25A9%25E3%2581%2586%25E3%2582%2584%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2591%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yutaka%2520Sato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViZmI0N2E0M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yutaka Sato</dc:creator></item><item><title><![CDATA[書評：「Python FlaskによるWebアプリ開発入門」]]></title><description><![CDATA[
 先に結論

公式で報告されているもの以外の大小さまざまな誤植が多い
Flaskについて日本語でがっつりまとまっている本は多くないので勉強になる


 読んだ本について
今回読んだ本は表題の通り「Python FlaskによるWebアプリ開発入門　物体検知アプリ＆機械学習APIの作り方」です。
https://www.shoeisha.co.jp/book/detail/9784798175164
本題に移る前に上記のページにある正誤表をまず確認しておくことをおすすめします。

 筆者についての事前情報

Pythonは3年以上は使っている（はず）
データサイエンスが好きでそれ系の仕事...]]></description><link>https://zenn.dev/argus1/articles/508901d4797015</link><guid isPermaLink="true">https://zenn.dev/argus1/articles/508901d4797015</guid><pubDate>Tue, 28 May 2024 23:15:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_PjuqTdw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259B%25B8%25E8%25A9%2595%25EF%25BC%259A%25E3%2580%258CPython%2520Flask%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BF%25AE%25E8%25A1%258C%25E5%2583%25A7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ZGRiMDlhNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>修行僧</dc:creator></item><item><title><![CDATA[Djangoにおけるmodel,viewの役割]]></title><description><![CDATA[
 はじめに
仕事でC#を使って開発をしていることもあり、DjangoにおけるMVC（実際にはMVT）はどのような構造となっていて、どのようにデータがクライアントに返されるかについて触れた記事になります。
また、記事で触れているコードは以下の記事で作成したAPIのものを使用しています。
https://zenn.dev/nihiru/articles/47bb11c1282ab5
様々な言語を扱う上でこの考えは非常に大事だと思いますし、言語モデルを体系的に理解することで本質を理解することにも繋がると思うので、記事にしてみました。

 全体の構造
通常、Djangoプロジェクトは以下の構造...]]></description><link>https://zenn.dev/nihiru/articles/7f59e52a6a645e</link><guid isPermaLink="true">https://zenn.dev/nihiru/articles/7f59e52a6a645e</guid><pubDate>Tue, 28 May 2024 22:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AqUh7e2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bmodel%252Cview%25E3%2581%25AE%25E5%25BD%25B9%25E5%2589%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nihiru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEtPVVgwOTdDdGF4S2d1MDdYUnFzNkJrM29VS2xmZmNydXROVFA0RVNwNnE0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nihiru</dc:creator></item><item><title><![CDATA[[AtCoder Daily Training ALL 2024/05/28 17:30start] 参加記録]]></title><description><![CDATA[AtCoder Daily Training ALL 2024/05/28 17:30start に参加しました。
初の ALL です。
D に引っかかったのもあって 4完でした。

 A - 3.14

もしくは こちら

 考え方
文字列のまま扱えばよいです。
実装例(Python)
def solve(n: int) -&gt; str:
    pi: str = (
        "3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117...]]></description><link>https://zenn.dev/shizukakokoro/articles/d40459466eb7ac</link><guid isPermaLink="true">https://zenn.dev/shizukakokoro/articles/d40459466eb7ac</guid><pubDate>Tue, 28 May 2024 11:03:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--70oAAJzK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAtCoder%2520Daily%2520Training%2520ALL%25202024%252F05%252F28%252017%253A30start%255D%2520%25E5%258F%2582%25E5%258A%25A0%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>静心</dc:creator></item><item><title><![CDATA[DALL-E 3のAPIの使い方-【python】]]></title><description><![CDATA[
 やること
DALL-E 3のAPIの使い方をさくっと書きます。

 前提

Azure open AI上にDALL-E 3をdeploy済みであること
python:3.10.12
openai:1.30.3


 Azure Open AI Serviceのキーとエンドポイントを取得

構築済みのAzure Open AI Serviceを開く
「キーとエンドポイント」をクリック


キーとエンドポイントを取得




 コード

以下のコードを実行

from openai import AzureOpenAI
import os
import requests
from PIL...]]></description><link>https://zenn.dev/headwaters/articles/e8dce38c7b4521</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/e8dce38c7b4521</guid><pubDate>Tue, 28 May 2024 08:39:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CSJNPdv9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DALL-E%25203%25E3%2581%25AEAPI%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9-%25E3%2580%2590python%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODg5YTRhYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item><item><title><![CDATA[ハッカソンでAI×おすすめレシピ提案のアプリを開発した]]></title><description><![CDATA[
 はじめに
私は情報系学科に所属する大学生です。
今回は私が所属している、京大プログラミングサークル5スキップ のメンバー3名で(もう1名の先輩もメンターとしてサポートしてくださいました)2024年4月の技育ハッカソンに出場しました。



 作ったアプリ



 開発背景
私以外のメンバー2名が1人暮らしをしているという会話になり、2人が「毎日ごはんのレシピを決めるのに結構悩む」ということを言っていました。私は実家暮らしですが、たまに料理をしようと思い立つ時があります。ただ、パッと作りたいレシピが決まらずに結局作らずに終わってしまうことがよくあったので、2人の意見には共感ができました...]]></description><link>https://zenn.dev/hato_72/articles/4f58ab54f20b31</link><guid isPermaLink="true">https://zenn.dev/hato_72/articles/4f58ab54f20b31</guid><pubDate>Tue, 28 May 2024 03:07:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nTzzOMHL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AB%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25A7AI%25C3%2597%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%2594%25E6%258F%2590%25E6%25A1%2588%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNDJiZDJiNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hato</dc:creator></item><item><title><![CDATA[ショートカットでJupyterマスターに！最高の作業効率を手に入れよう]]></title><description><![CDATA[Jupyterを使う際にはショートカットコマンドを有効活用できるかどうかで、作業の効率性にかなりの差が生じます。ここでは、使う際に必須となるショートカットをまとめてみます。
これらのコマンドを駆使することで、最終的にはRun All以外はほぼマウスを使わずに作業ができるようになります。

 必須コマンド

 コマンド、編集モード切り替え
Enterで編集モードに、Escでコマンドモードに切り替えられます。

 移動、コピー&amp;ペースト
基本的な移動コマンドはjとkです。viエディタと同様の移動方法を採用しており、覚えておくと便利です。
Shiftキーを押しながらjやkを押すと、セル...]]></description><link>https://zenn.dev/yareyare/articles/3af2a7afe14d39</link><guid isPermaLink="true">https://zenn.dev/yareyare/articles/3af2a7afe14d39</guid><pubDate>Mon, 27 May 2024 17:28:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xDGuWXuk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25A7Jupyter%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AB%25EF%25BC%2581%25E6%259C%2580%25E9%25AB%2598%25E3%2581%25AE%25E4%25BD%259C%25E6%25A5%25AD%25E5%258A%25B9%25E7%258E%2587%25E3%2582%2592%25E6%2589%258B%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%25B0%25E4%25B8%25AD%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjZWcVBoWEgwaXVsS05VYlRVOElzXzVQbGVvWV9DVk5VZVZnbjhDRWkwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>田中太郎</dc:creator></item><item><title><![CDATA[M2 MacでGiNZAのja-ginza-bert-largeを使ってみた]]></title><description><![CDATA[
 はじめに
自身のspaCy + GiNZAで構文解析してみるで、ja-ginzaモデルを使用していましたが、解析精度がより高いモデルであるja-ginza-bert-large(β版)を使用してみたいと思い、イントールを試みたところ、インストールに失敗したことがあったため、メモしておきます。

 環境構築
開発環境は以下になります。

MacBook Pro
チップ：Apple M2
メモリ：16GB

Pythonのバージョンとライブラリ管理には、Ryeを使用しました。Pythonライブラリ管理ツール決定版！Ryeを導入してみたの記事を参考に導入しました。
spaCyについては、G...]]></description><link>https://zenn.dev/ncdc/articles/824c6c9bbbf93a</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/824c6c9bbbf93a</guid><pubDate>Mon, 27 May 2024 15:26:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hb3qnLmZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M2%2520Mac%25E3%2581%25A7GiNZA%25E3%2581%25AEja-ginza-bert-large%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:T-KND%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExZDU1ZTkzMDAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>T-KND</dc:creator></item><item><title><![CDATA[[OpenAI API] ストリーミングレスポンスの構造を理解してトークン数を取得する]]></title><description><![CDATA[
 はじめに
OpenAI APIで出力をストリーミングさせたときのtoken数取得についての記事を書きます。
OpenAI APIは従量課金なのでリクエストごとに使用するtoken数が気になりますが、ストリーミング時は長らくtoken数が表示されない状態となっていました。
しかし2024年5月、ようやくストリーミングでも使用token数が表示されるように機能追加されました。
https://cookbook.openai.com/examples/how_to_stream_completions#4-how-to-get-token-usage-data-for-streamed-c...]]></description><link>https://zenn.dev/tomodo_ysys/articles/openai-streaming-token-count</link><guid isPermaLink="true">https://zenn.dev/tomodo_ysys/articles/openai-streaming-token-count</guid><pubDate>Mon, 27 May 2024 13:51:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--crGvHeU2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BOpenAI%2520API%255D%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2582%25E3%2581%25A9%2540SIer%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkY2Y4OTVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ともど@SIerエンジニア</dc:creator></item><item><title><![CDATA[Robustel R1520でGPSデータをとってみた]]></title><description><![CDATA[!
「一般消費者が事業者の表示であることを判別することが困難である表示」の運用基準に基づく開示: この記事は記載の日付時点で株式会社ソラコムに所属する社員が執筆しました。ただし、個人としての投稿であり、株式会社ソラコムとしての正式な発言や見解ではありません。


 やりたいこと
IoTデバイスからクラウドにデータを送信する際にGPSなどのGNSSによる測位データを載せたいことがあります。
やり方はいくつかありますが、今回は以下のようなシチュエーションを想定した構成で考えてみます。

ちなみにこの構成が最適解とならない場合もあるため、他の選択肢を挙げておきますので比較検討したうえでこの構成...]]></description><link>https://zenn.dev/takao2704/articles/6b2f68a43c1cec</link><guid isPermaLink="true">https://zenn.dev/takao2704/articles/6b2f68a43c1cec</guid><pubDate>Mon, 27 May 2024 12:33:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QMlJNn3l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Robustel%2520R1520%25E3%2581%25A7GPS%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2581%25A8%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takao2704%2540SORACOM%252CSA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3ZjVkZGZjYjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takao2704@SORACOM,SA</dc:creator></item><item><title><![CDATA[【Cognito】ユーザープール作ったはいいけどどうやって操作するんや【AWS Amplify / Boto3】]]></title><description><![CDATA[Cognito でユーザープールを作成したものの、その先のすべてが分からず詰まってしまったのでまとめました。
同じく悩まれている方の参考になれば幸いです。

 そもそも Cognito / AWS Amplify / Boto3 ってなんだ
Cognito とは、 AWS が提供する、ユーザー情報を保管・管理するサービスです。
React からは AWS Amplify （以下、Amplify）を用いて、Python からは Boto3 を用いてアクセスすることができます。

Cognito の操作に関して、 Boto3 にできることは Amplify にもできます。そのため、簡易的な開...]]></description><link>https://zenn.dev/poetrainy/articles/d5029c52d4aa47</link><guid isPermaLink="true">https://zenn.dev/poetrainy/articles/d5029c52d4aa47</guid><pubDate>Mon, 27 May 2024 12:27:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EXnkJ9O5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Cognito%25E3%2580%2591%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2584%25E3%2581%2591%25E3%2581%25A9%25E3%2581%25A9%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2582%2593%25E3%2582%2584%25E3%2580%2590AWS%2520Amplify%2520%252F%2520Boto3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:poetrainy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0JET29VN3NHZmVUZWxUR1ZQRXV4NUdpRmZ4NFVNYVlzbkxaalh0R2s1NWMwbkhjcTI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>poetrainy</dc:creator></item><item><title><![CDATA[気が付いたら自作ライブラリが世界中で使われていた件]]></title><description><![CDATA[
 OSS文化良く分からん
こんにちは、北神です。
なんかこの頃、国内OSSは海外で見向きもされないって話が出てたので、なんか知らんが世界中で使われた事例も乗っけて置こうかと思いました。
北神について
https://github.com/nonNoise/HelloWorld/tree/master
基本的には、電子機器や組込み開発を多くやってます。

 どのライブラリの話？
自分はGithub文化が好きで、何でもGithubで公開すると言った形で、クソソースも沢山上げてます。
空プロジェクトだって色々あったりします。日記だってあります。
一番流行ったライブラリはこちら
https:/...]]></description><link>https://zenn.dev/nonnoise/articles/ea354496ad7136</link><guid isPermaLink="true">https://zenn.dev/nonnoise/articles/ea354496ad7136</guid><pubDate>Mon, 27 May 2024 09:26:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xXjFK5TQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25B0%2597%25E3%2581%258C%25E4%25BB%2598%25E3%2581%2584%25E3%2581%259F%25E3%2582%2589%25E8%2587%25AA%25E4%25BD%259C%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258C%25E4%25B8%2596%25E7%2595%258C%25E4%25B8%25AD%25E3%2581%25A7%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258C%2597%25E7%25A5%259E%25E9%259B%2584%25E5%25A4%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0YTYxODY1YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>北神雄太</dc:creator></item><item><title><![CDATA[asdf でPythonのバージョン管理]]></title><description><![CDATA[
 asdf とは
asdf は、複数の言語やツールのバージョン管理を一括で管理できるツールです。
https://asdf-vm.com/

 インストール
Homebrew でインストールします。
$ brew install asdf

 シェルの組み込み
こちらを参考にシェルへ組み込みます。シェル起動時に asdf を読み込むように設定します。 exec $SHELL -l でシェルを再起動します。
$ echo -e "\n. $(brew --prefix asdf)/libexec/asdf.sh" &gt;&gt; ${ZDOTDIR:-~}/.zshrc
$ exec ...]]></description><link>https://zenn.dev/hayato94087/articles/41a21fe7ed1282</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/41a21fe7ed1282</guid><pubDate>Mon, 27 May 2024 09:23:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OCmJ_hRk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%2520%25E3%2581%25A7Python%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item></channel></rss>