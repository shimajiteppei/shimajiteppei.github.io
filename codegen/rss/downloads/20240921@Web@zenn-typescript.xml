<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 21 Sep 2024 02:37:19 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[演算子 '>=' は、型 'boolean' および 'number' には適用できません。typescript(2365)]]></title><description><![CDATA[
 perator '&gt;=' cannot be applied to types 'boolean' and 'number'.typescript(2365)って言われた。
function getClass(width:number): string{
    ・・・中略
    else if(992 &gt; screenWidth &gt;= 768) return "sm"; 　⬅️ここ
    else if(1200 &gt; screenWidth &gt;= 992) return "xs";　⬅️ここ
    ・・・中略
}

 解決
複合比較演算子（チェー...]]></description><link>https://zenn.dev/milbon/articles/fba1ad13ff4a22</link><guid isPermaLink="true">https://zenn.dev/milbon/articles/fba1ad13ff4a22</guid><pubDate>Sat, 21 Sep 2024 02:30:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sgy01BE8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2520%2527%253E%253D%2527%2520%25E3%2581%25AF%25E3%2580%2581%25E5%259E%258B%2520%2527boolean%2527%2520%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%2520%2527number%2527%2520%25E3%2581%25AB%25E3%2581%25AF%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2580%2582typescript%2528...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMjg1Mjc4ZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くみ</dc:creator></item><item><title><![CDATA[[Next.js] Root layoutファイルでheaderタグとfooterタグを共通化する]]></title><description><![CDATA[
 はじめに
Next.jsの学習の為に、下記書籍を読みました。
下記書籍のRoot layoutファイルについて学びがあったので、記事として記録します。


 Root layoutファイルとは

「app」ディレクトリー直下に配置したlayout.tsxのことで
複数の画面間で共有されるUIを実装するファイルです。

src
└── app
    ├── sample
    │   └── page.tsx
    ├── favicon.ico
    ├── globals.css
    ├── layout.tsx  &lt;- Root layoutファイル
    └...]]></description><link>https://zenn.dev/aew2sbee/articles/nextjs-root-layout-file</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/nextjs-root-layout-file</guid><pubDate>Sat, 21 Sep 2024 01:38:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N4csB0M7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNext.js%255D%2520Root%2520layout%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7header%25E3%2582%25BF%25E3%2582%25B0%25E3%2581%25A8footer%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E5%2585%25B1%25E9%2580%259A%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[Ginco One Platformを使ってスマコンをデプロイしてみよう！]]></title><description><![CDATA[

 はじめに
みなさん、こんにちは！
今回は、Ginco 社が提供しているブロックチェーン用の API エンドポイントサービスを使ってスマコンをデプロイしてみましたのでその内容を共有したいと思います！
制限がありますが、今は無料で使えるようになっています！

 Ginco 社について
Ginco 社はウォレットやインデクサーなど Web3 アプリ開発に必須となる Web3 インフラ機能を提供している会社です。
https://ginco.co.jp/company/
先日国際的なセキュリティ認証の証として知られる SOC2 Type-Ⅱ を取得されたことが発表されてたりしています。
h...]]></description><link>https://zenn.dev/mashharuki/articles/5155a02ce0e763</link><guid isPermaLink="true">https://zenn.dev/mashharuki/articles/5155a02ce0e763</guid><pubDate>Sat, 21 Sep 2024 00:50:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ESVLDJzc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ginco%2520One%2520Platform%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B9%25E3%2583%259E%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Haruki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dIaXowNy12WWVodmV1RVRrNGZoU25LaldfYTVFdmJlYnprWG1XPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Haruki</dc:creator></item><item><title><![CDATA[PostgreSQLクライアント自作した.ts]]></title><description><![CDATA[
 役に立ちません
このチュートリアルをやってもあなたの生涯収入は１円も上がりません。
鼻毛でも抜いてた方が鼻毛一本分ぐらいは儲かるんじゃないでしょうか。
AI に生成させたコードをいじりながら雰囲気を味わってみて、ついでにチュートリアル形式の記事にしてみました。
人に読んでもらうためというより自分の日記感覚で書いている。
前回と違いすかしっぺのような内容なのであまり期待しないでください。まあ前回はデカすぎて引火して大変なことになったが。
twitterやってます。
https://x.com/uncode_jp

 準備
nodejs18 以上入れとけばいいんじゃないですか。(適当)
...]]></description><link>https://zenn.dev/uncode_jp/articles/81c554f8d48f97</link><guid isPermaLink="true">https://zenn.dev/uncode_jp/articles/81c554f8d48f97</guid><pubDate>Fri, 20 Sep 2024 16:42:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tpmLOBay--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259F.ts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YadaYadaKonnanYada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTRJWE95cllDY2szU2RtNHktZk45QlhBNDNBeVkzMm5IY1FVWC03WnZxbElOSD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YadaYadaKonnanYada</dc:creator></item><item><title><![CDATA[持続可能なReactを書くための簡易チェックリスト✅]]></title><description><![CDATA[
 どんな人が読むと良い記事か？
Reactで実装はできるけど、もう一段階良いコードを書きたいと思っている方向けです。

 扱わない内容

フックについて
ESLintの設定で概ねルール化できるかつ、React公式でわかりやすく解説されているので、チェックリストには入れませんでした。

https://ja.react.dev/reference/rules/rules-of-hooks

useMemo、useCallback、memoなどのメモ化について
メモ化することによってのパフォーマンス上の影響はそこまで大きくなく、優先的に実施するものではないと思ったので、チェックリストには入...]]></description><link>https://zenn.dev/x_point_1/articles/632bbe3ac9b105</link><guid isPermaLink="true">https://zenn.dev/x_point_1/articles/632bbe3ac9b105</guid><pubDate>Fri, 20 Sep 2024 15:30:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jXktzf6D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258C%2581%25E7%25B6%259A%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAReact%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshiyuki%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWdCU1IzQ2hSdzBrcU5QLXRjSEJzYmh4Qm9iZUtBZnBLdkpfTW84aWkzcWVTb1EtZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Sato</dc:creator></item><item><title><![CDATA[ZustandとValtioの夢の共演、Zustand-ValtioはImmerの代わりになれるのか]]></title><description><![CDATA[Zustand-Valtioはライブラリ名の名前としてはイマイチと言われてもいるんですが、ひとまずそれはおいておいて、
https://github.com/zustandjs/zustand-valtio
がそのライブラリです。これは、Zustandのライブラリの位置付けなのでzustandjs配下にあります。
そもそも、私の中では、Zustandはimmutable state用のライブラリで、Valtioはmutable state用のライブラリです。なので、Zustandでimmerを使うのは心理的に合いませんし、そもそも使う必要もないと思っています。ただ、Zustandでimm...]]></description><link>https://zenn.dev/dai_shi/articles/055a8a5a6e22ba</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/055a8a5a6e22ba</guid><pubDate>Fri, 20 Sep 2024 05:40:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TYW8AqOE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zustand%25E3%2581%25A8Valtio%25E3%2581%25AE%25E5%25A4%25A2%25E3%2581%25AE%25E5%2585%25B1%25E6%25BC%2594%25E3%2580%2581Zustand-Valtio%25E3%2581%25AFImmer%25E3%2581%25AE%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[Vite + Createjs + TypeScriptの環境構築]]></title><description><![CDATA[
 結論

createjs-moduleを使う


 vite
$ npm create vite@latest

vannilaを選択
typescriptを選択
https://ja.vitejs.dev/guide/#最初の-vite-プロジェクトを生成する



 createjs
npm install createjs-module --save
https://www.npmjs.com/package/createjs-module
!
npm install --save @types/createjs

https://www.npmjs.com/package...]]></description><link>https://zenn.dev/teba_eleven/articles/2035020cda8a5c</link><guid isPermaLink="true">https://zenn.dev/teba_eleven/articles/2035020cda8a5c</guid><pubDate>Fri, 20 Sep 2024 05:00:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xZ-zFzWb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%2520%252B%2520Createjs%2520%252B%2520TypeScript%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2589%258B%25E7%25BE%25BD%25E5%2585%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjRmMWJiZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>手羽先</dc:creator></item><item><title><![CDATA[ReactとDjangoで認証機能作ってみた(1.サインアップ機能編)]]></title><description><![CDATA[
 元美容師のDjangoポートフォリオリニューアル日記Part.7：認証機能(サインアップ機能編)
こんにちは、やぎです！前回の記事では、サロン情報に画像の登録ができるような実装をしました。
今回は認証機能の第一回目としてまずはサインアップ機能の追加をしてみます！
本当はログインやアクセス権限なども一気にやりたいのですが記事のボリュームが大きくなりすぎてしまう為、分けることにしました。
気長にお待ちください。。。
それでは今回も頑張ります！実装開始！！

 既存のApp.jsのコードを別のコンポーネントに移植
※この部分は前回までの記事での実装内容の変更についてですので、本題とは少しず...]]></description><link>https://zenn.dev/jenny/articles/3b48e993d5c987</link><guid isPermaLink="true">https://zenn.dev/jenny/articles/3b48e993d5c987</guid><pubDate>Fri, 20 Sep 2024 00:01:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---fMmG3So--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8Django%25E3%2581%25A7%25E8%25AA%258D%25E8%25A8%25BC%25E6%25A9%259F%25E8%2583%25BD%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25281.%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%25A9%259F%25E8%2583%25BD%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0Y2NlYzgwYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やぎ</dc:creator></item><item><title><![CDATA[AWS CDK で CloudFront + S3 を使った Web サイト配信環境をサクッと構築する方法]]></title><description><![CDATA[
 これは何

AWS CDK で CloudFront + S3 構成で Web サイトを配信する環境を構築するメモ
構成

S3 Bucket 自体の Web Site Hosting は利用しない
CloudFront から S3 へのアクセスは OAC を利用して制御する




 CDK App のプロジェクトを用意
mkdir my-project &amp;&amp; cd my-project
npx aws-cdk init app --language typescript ./

 ホストする html ファイルとディレクトリを作成
mkdir website-di...]]></description><link>https://zenn.dev/noid11/articles/143d4c79fced54</link><guid isPermaLink="true">https://zenn.dev/noid11/articles/143d4c79fced54</guid><pubDate>Thu, 19 Sep 2024 10:41:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QoESHx5d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520%25E3%2581%25A7%2520CloudFront%2520%252B%2520S3%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%2520Web%2520%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E9%2585%258D%25E4%25BF%25A1%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noid11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlOWYzOTk2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noid11</dc:creator></item><item><title><![CDATA[言語情報を Redux で管理する]]></title><description><![CDATA[
 環境

Next.js
TypeScript
App Router
Redux
Redux Toolkit


 準備

 1. Redux Toolkit と React-Redux をインストールする | Install Redux Toolkit and React-Redux
npm install @reduxjs/toolkit react-redux

 2. Redux Store を作成する | Create a Redux Store
以下が、空の Redux Store を作成した状態。

app/store/store.ts
import { configur...]]></description><link>https://zenn.dev/helmikuusininen/articles/d9b3479aa5d980</link><guid isPermaLink="true">https://zenn.dev/helmikuusininen/articles/d9b3479aa5d980</guid><pubDate>Thu, 19 Sep 2024 10:13:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6b_VjYl7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%2580%25E8%25AA%259E%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%2520Redux%2520%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:helmikuusininen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYWU3ZTM1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>helmikuusininen</dc:creator></item><item><title><![CDATA[Next.js + App Router  + TypeScript での多言語対応]]></title><description><![CDATA[
 環境 | Environment

Next.js
TypeScript
App Router
i18n
日・英の言語対応（デフォルトは日）


 準備

 1. negotiator と @formatjs/intl-localematcher をインストールする | Install negotiator and @formatjs/intl-localematcher
npm install negotiator @formatjs/intl-localematcher 

💡negotiator の型定義ファイル@types/negotiatorも入れておく。

型定義は開発中...]]></description><link>https://zenn.dev/helmikuusininen/articles/78dba159a6e181</link><guid isPermaLink="true">https://zenn.dev/helmikuusininen/articles/78dba159a6e181</guid><pubDate>Thu, 19 Sep 2024 09:07:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UKRlLIf9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%252B%2520App%2520Router%2520%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E3%2581%25AE%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:helmikuusininen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYWU3ZTM1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>helmikuusininen</dc:creator></item><item><title><![CDATA[引数の型をジェネリクスで定義した関数の中では引数の型の絞り込みはできない（TypeScript）]]></title><description><![CDATA[
 はじめに
TypeScript で融通が利く型を定義するのにジェネリクス（Generics）をよく利用すると思います。しかし、ジェネリクスで定義した引数を使った関数内で型を絞り込んでも引数の型が更新されず、期待通りに型が絞られないことがあります。この記事ではその例と、タプル型を用いて解決する方法を紹介します。

 型引数が更新されない例
まず、問題となるコードを見てみましょう。
type XDirection = "left" | "right";
type YDirection = "top" | "bottom";

function f&lt;T extends "x" | "...]]></description><link>https://zenn.dev/mssknd/articles/9dcc00c1222b95</link><guid isPermaLink="true">https://zenn.dev/mssknd/articles/9dcc00c1222b95</guid><pubDate>Thu, 19 Sep 2024 07:47:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OfF9fWd2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25A7%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%259F%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7%25E3%2581%25AF%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AE%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AF%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2588TypeScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masashi%2520Kondo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNDUwZjZjZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masashi Kondo</dc:creator></item><item><title><![CDATA[Prismaのincrementが正しく動作しなかった原因]]></title><description><![CDATA[
 はじめに
筆者が関わっているプロジェクトでは、 TypeScript + MySQL + Prismaを利用しているものがあります。
その実装においてPrismaを使用してデータベースの操作を行う際、increment 操作が予想通りに動作しない事象に遭遇したため、本記事ではその原因と対処法について記録していきます。

 コードと挙動のイメージ
incrementと言っているのは以下のような動作をイメージしています。
当初の筆者の頭の中ではSampleのcountを 1 にしようとしているのに null になっておかしいと誤解してしまいました。

prisma.schema
mode...]]></description><link>https://zenn.dev/funteractiveinc/articles/7ad69a2a15445d</link><guid isPermaLink="true">https://zenn.dev/funteractiveinc/articles/7ad69a2a15445d</guid><pubDate>Thu, 19 Sep 2024 06:15:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mf3u4Tun--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25AEincrement%25E3%2581%258C%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%258F%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E5%258E%259F%25E5%259B%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:SHIRO%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4YmI2YjY4NDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p2ZDR0SDNrY3NQOEliejdSdUgtajJZVDNoLThLOTN4aGd1U2s9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SHIRO</dc:creator></item><item><title><![CDATA[#59　OpenAIのAPIを使用してアシスタントをDiscord上に作成してみる]]></title><description><![CDATA[
 概要
OpenAIのAPIを使用して個人用のアシスタントをDiscord上に作成してみます

 事前準備


Discord Developer PortalからApplicationを作成して、トークンを取得します

OpenAI APIからシークレットキーを作成します
.envファイルに以下のように記載しますDISCORD_TOKEN="1で取得したトークン"
OPEN_AI_TOKEN="2で取得したシークレットキー"


必要なライブラリをインストールします$ npm install discord.js dotenv log4js openai




 受け取ったメッセー...]]></description><link>https://zenn.dev/nxted_sapporo/articles/3c1dfa47420f02</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/3c1dfa47420f02</guid><pubDate>Thu, 19 Sep 2024 03:37:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kuIwBqjR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252359%25E3%2580%2580OpenAI%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592Discord%25E4%25B8%258A%25E3%2581%25AB%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[Webでユーザーの書いたカスタムコードを実行したい？AiScriptなんてどうよ]]></title><description><![CDATA[
 AiScript、知ってる？
おそらくこの記事をMisskey以外から見つけた方は「なんだよそれ」って感じだと思います。AiScriptは、Misskeyの開発者であるしゅいろ氏などを中心に開発されている、Javascript上で動作するスクリプト言語です。
https://github.com/aiscript-dev/aiscript
この言語は、現在Misskey上の以下のような機能の実装に使用されています：


プラグイン機能（Misskeyの機能を拡張するプラグインをユーザーが書ける）

Play機能（ユーザーがAiScriptを使ってミニゲームを作ることができる）

ただ...]]></description><link>https://zenn.dev/kakkokari_gtyih/articles/d0e5d674c3299b</link><guid isPermaLink="true">https://zenn.dev/kakkokari_gtyih/articles/d0e5d674c3299b</guid><pubDate>Wed, 18 Sep 2024 15:01:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vxw-12Lv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%259FAiScript%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A6%25E3%2581%25A9%25E3%2581%2586%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25EF%25BC%2588%25E4%25BB%25AE%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWViNWU2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>（仮）</dc:creator></item><item><title><![CDATA[[TypeScript] それぞれで型定義ではなく、呼び出しシグネチャを使う]]></title><description><![CDATA[
 はじめに
TypeScriptをより深く理解したく下記書籍を読みました。
それぞれで型定義ではなく、呼び出しシグネチャを使うについて情報を整理したかったので、執筆します。


 結論
!interface 呼び出しシグネチャ名 {
  (引数名1: データ型, 引数名2: データ型): データ型;
}


 1. 型を使わない
const add = (x, y) =&gt; x + y;

 2. 引数と戻り値のそれぞれに型定義
!
型定義により安全性が向上しましたが、
「引数」「戻り値」に型定義をするとのは、手間であり
可読性はそんなに高くない

const add = (x: ...]]></description><link>https://zenn.dev/aew2sbee/articles/typescript-call-signature</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/typescript-call-signature</guid><pubDate>Wed, 18 Sep 2024 12:12:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MRfYvGyj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520%25E3%2581%259D%25E3%2582%258C%25E3%2581%259E%25E3%2582%258C%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%258F%25E3%2580%2581%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[[Next.js] LinkコンポーネントとuseRouterの違い]]></title><description><![CDATA[
 はじめに
Next.jsの学習の為に、下記書籍を読みました。
下記書籍のLinkコンポーネントとuseRouterの違いについて情報を整理したかったので、執筆します。


 結論
!


useRouterは、
プログラムによるページ遷移や現在のルート情報の取得に使用する。
動的なナビゲーションや、特定のイベント後にページ遷移を行いたい場合に適する


Linkコンポーネントは、
ユーザーがクリックする静的なリンクを作成するために使用する。
主に文書内のナビゲーションや、アプリケーション内の他のページへのリンクに適する




 Linkコンポーネントについて

ユーザーがクリックす...]]></description><link>https://zenn.dev/aew2sbee/articles/nextjs-link-userouter</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/nextjs-link-userouter</guid><pubDate>Wed, 18 Sep 2024 12:11:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m6lMqJ0N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNext.js%255D%2520Link%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A8useRouter%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[#56　任意精度で√2の近似値を二分法で計算してみた]]></title><description><![CDATA[
 概要
この記事は前回の続きです
前回、二分法で√2の近似値を計算してみましたが、倍精度浮動小数の精度の限界で16桁程度までしか計算できませんでしたので、今回は任意精度での計算をします

 任意精度の実現
JavaScript/TypeScriptにはBigIntという任意精度の整数を表現する方法があり、BigIntを利用して実数を表現します
具体的には、仮数部と指数部をBigIntで表現し、仮数部 * 2 ^ 指数部 = 表現したい値とすることで表現します
※この方法の場合、循環小数や無理数などは厳密に表現できませんが今回のテーマでは登場しないので考慮しないものとします

 実装

...]]></description><link>https://zenn.dev/nxted_sapporo/articles/627e65ee0b2005</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/627e65ee0b2005</guid><pubDate>Wed, 18 Sep 2024 09:21:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FKsVhPDH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252356%25E3%2580%2580%25E4%25BB%25BB%25E6%2584%258F%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2581%25A7%25E2%2588%259A2%25E3%2581%25AE%25E8%25BF%2591%25E4%25BC%25BC%25E5%2580%25A4%25E3%2582%2592%25E4%25BA%258C%25E5%2588%2586%25E6%25B3%2595%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[[TypeScript] 非常に大きな整数はbigint型を使う]]></title><description><![CDATA[
 はじめに
TypeScriptをより深く理解したく下記書籍を読みました。
下記書籍のbigint型について学びがあったので、記事として記録します。


 結論
!
この範囲内の整数は、正確に表現され、計算も正確に行われます
※安全な整数の最小値(-9007199254740991=-2の53乗+1) 安全な整数の最大値(9007199254740991=2の53乗-1)
const num:bigint = 2 ** 53


!
※この範囲を超える整数は正確に表現されず、計算結果も信頼できません
安全な整数の最小値(-9007199254740991=-2の53乗+1) 安全な整数...]]></description><link>https://zenn.dev/aew2sbee/articles/typescript-bigint-type</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/typescript-bigint-type</guid><pubDate>Wed, 18 Sep 2024 08:25:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i6K-iY7p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520%25E9%259D%259E%25E5%25B8%25B8%25E3%2581%25AB%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%25AA%25E6%2595%25B4%25E6%2595%25B0%25E3%2581%25AFbigint%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[[TypeScript] エラー処理/例外処理の3つの方法]]></title><description><![CDATA[
 はじめに
TypeScriptをより深く理解したく下記書籍を読みました。
下記書籍のError処理/例外処理について学びがあったので、記事として記録します。


 結論
!

単純にErrorを知らせる事を求めるなら = nullを返す

なぜ失敗したのかについてより多くの情報を求めるなら = 例外をスローする/例外を返す

起こり得るすべての例外情報を強く望むなら = 例外を返す

少ない記述で例外処理を求めるなら = 例外をスローする




 1. nullを返す
!
型安全な方法でエラーを処理するために最も軽量な方法

!
複数の操作を組み立てが困難になる
エラーの有無しかわ...]]></description><link>https://zenn.dev/aew2sbee/articles/typescript-error-handling</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/typescript-error-handling</guid><pubDate>Wed, 18 Sep 2024 07:17:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_Pbyt3qn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%2587%25A6%25E7%2590%2586%252F%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE3%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item></channel></rss>