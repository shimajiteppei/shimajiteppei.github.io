<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 31 May 2024 09:51:01 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[LangChain x TypeScript で Runnable を並列実行]]></title><description><![CDATA[
 はじめに
この記事では、LangChain で複数の Runnable を並列して事項する方法を紹介します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/parallel/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-runnable-parallel-sample
LangChain x TypeScript...]]></description><link>https://zenn.dev/hayato94087/articles/bee49672a883c2</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/bee49672a883c2</guid><pubDate>Fri, 31 May 2024 07:36:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C_uutO0N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520x%2520TypeScript%2520%25E3%2581%25A7%2520Runnable%2520%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Next.jsのディレクトリ構成：2024年の最新ベストプラクティス]]></title><description><![CDATA[数年前に「Next.jsのディレクトリ構成：現在の個人的ベストプラクティス」という記事を書かせていただきました。
https://zenn.dev/yutabeee/articles/5e32a99a3cab97
あれから時が経ち、Next.jsは目まぐるしい進化を遂げています。特に、Next.js 13で導入されたappディレクトリは、ディレクトリ構成に大きな変化をもたらしました。
そこで今回は、2024年現在のNext.jsのベストプラクティスに基づいた、新しいディレクトリ構成をご紹介したいと思います。

 2024年版のディレクトリ構成
my-next-app/
├── app/
...]]></description><link>https://zenn.dev/yutabeee/articles/0f7e8e2fa03946</link><guid isPermaLink="true">https://zenn.dev/yutabeee/articles/0f7e8e2fa03946</guid><pubDate>Fri, 31 May 2024 03:52:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KnNxWQT6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25EF%25BC%259A2024%25E5%25B9%25B4%25E3%2581%25AE%25E6%259C%2580%25E6%2596%25B0%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2580%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5YzFjYWRjOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ダーマン</dc:creator></item><item><title><![CDATA[ユーザー操作のイベントかそうでないかを判定できるevent. isTrustedプロパティで意図しない動作を防ぐ]]></title><description><![CDATA[イベントの伝播を防ぐのはstopPropagation()ですが、伝播するはずのない要素でイベントが走ってしまい動作不良が起きてしまうことがありました。
そのときに問題の解消方法として採用したisTrustedプロパティを紹介します。

 ユーザー操作かスクリプトで作成・変更されたかを返してくれるevent.isTrusted

MDNには次のような説明があります。

isTrusted は Event インターフェイスの読み取り専用プロパティで、このイベントがユーザー操作によって生成された場合は true、このイベントがスクリプトで作成または変更されたり、 EventTarget.di...]]></description><link>https://zenn.dev/chot/articles/c22cb8cc161af2</link><guid isPermaLink="true">https://zenn.dev/chot/articles/c22cb8cc161af2</guid><pubDate>Fri, 31 May 2024 01:37:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7RQWfbF4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25E3%2582%2592%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bevent.%2520isTrusted%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25A7%25E6%2584%258F%25E5%259B%25B3%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%258B%2595%25E4%25BD%259C%25E3%2582%2592%25E9%2598%25B2%25E3%2581%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25AE%2589%25E7%2594%25B0%25E5%25AD%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMTk1Nzk4ODEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>安田学</dc:creator></item><item><title><![CDATA[LangChain x TypeScript で Runnable をシクエンシャルに実行]]></title><description><![CDATA[
 はじめに
この記事では、LangChain で複数の LangChain のコンポーネントを結合し、シクエンシャルに処理する方法を紹介します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/sequence
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-chain-runnable-application
Lang...]]></description><link>https://zenn.dev/hayato94087/articles/d913b9d3e8dfe4</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/d913b9d3e8dfe4</guid><pubDate>Thu, 30 May 2024 19:40:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oo8ppOej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520x%2520TypeScript%2520%25E3%2581%25A7%2520Runnable%2520%25E3%2582%2592%25E3%2582%25B7%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AB%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Slack-Azure OpenAI GPT-4ボットを画像入力対応にバージョンアップしました[全コードあり]]]></title><description><![CDATA[株式会社ジェイテックジャパン CTOの高丘 @tomohisaです。社内では昨年の3月より1年くらいChatGPT BotがSlackのBotとして運用しています。
Copilotも使っているのですが、社内で言葉の定義や概念の概要を話している時や、新たな機能を追加する時の調査などで皆が活用していました。もちろん、ChatGPTのWebでできるような、おおきなpdfの解析やGPTs、ベクターデータベースなどは使っていないため、機能は限られたものとなります。それでもChatGPTに馴染みのないメンバーも簡単にSlackから使うことができ、DMにも開放しているので、結構使われています。
htt...]]></description><link>https://zenn.dev/jtechjapan_pub/articles/44329d672780fb</link><guid isPermaLink="true">https://zenn.dev/jtechjapan_pub/articles/44329d672780fb</guid><pubDate>Thu, 30 May 2024 04:26:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wWVhu4ba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack-Azure%2520OpenAI%2520GPT-4%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E5%2585%25A5%25E5%258A%259B%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AB%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%255B%25E5%2585%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2582%25E3%2582%258A%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tomohisa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YzA4MzFkMDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUY1NlSXBBM09KME83a1ZzWG1WUjhvYWpqN3RHVVV2QTJDZ2hKS2c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomohisa</dc:creator></item><item><title><![CDATA[GASのテストについて]]></title><description><![CDATA[
 初めに
今回のタスクは、kintoneアプリからスプレットシートに情報を渡す
というタスクでした。
修正自体は簡単でしたが、テストをどうやるかで時間を使ってしまいましたので
共有します。
以下の2つの方法を試しましたが、GASのみでテストパラメーターを作成して、実行
を行った方が簡単でデバッグしやすかった！

 愚直にkintone→GASを動かす
kintoneのアプリから愚直に指定したパラメーターを入力し、GASに対してpostする方法
//kintone側
const misocaEvents = ['app.record.edit.submit'];
  kintone.ev...]]></description><link>https://zenn.dev/bizlink/articles/2596fefc75b471</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/2596fefc75b471</guid><pubDate>Thu, 30 May 2024 01:31:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rQoOG8VK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item><item><title><![CDATA[CommonJS とESModulesについて・歴史]]></title><description><![CDATA[
 CommonJS
CommonJSとは、サーバーサイドなどのウェブブラウザ環境外におけるJavaScriptの各種仕様を定めることを目標としたプロジェクトである。
// インポート
const moduleName = require('./module.js');

// エクスポート
module.exports = {
  myFunction: () =&gt; {
    // ...
  }
};

 モジュール
ある特定の機能を持ったプログラムの塊
初期のJSにはモジュールという概念がなかった。

 歴史


1995 年　JavaScript爆誕　２８歳
ちょっとした...]]></description><link>https://zenn.dev/bizlink/articles/56b2eb309ba394</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/56b2eb309ba394</guid><pubDate>Thu, 30 May 2024 01:26:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UjW6B64O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CommonJS%2520%25E3%2581%25A8ESModules%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25BB%25E6%25AD%25B4%25E5%258F%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item><item><title><![CDATA[kintoneで、E2Eテストをやってみた]]></title><description><![CDATA[kintoneでE2Eテストをしてみる
弊社では、kintoneのアプリが30個以上を超えてきてまた
カスタムJSもかなり複雑になってきていて何かを変更した時に
うまくレコードが作成されないなど品質的な部分での悩みが増えてきました。
まだ、テストが一切なく手動で確認しているので、E2Eテストをちょっと触ってみました。

 何ができるのか
kintoneの自動ログイン、kitoneのアプリ画面でフィールド入力、レコード保存、編集、画面確認など
ユーザが操作することは基本的にできます！！
「E2Eテスト」とは？
E2Eテストとは、1つのアプリケーションに対し「複数のユーザーワークフローでシミ...]]></description><link>https://zenn.dev/bizlink/articles/a478b309fdbda4</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/a478b309fdbda4</guid><pubDate>Thu, 30 May 2024 01:08:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YucNFvsr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kintone%25E3%2581%25A7%25E3%2580%2581E2E%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item><item><title><![CDATA[CodeRabbit お試ししたくて面談管理ツールを作ってみる（その20：質問回答画面作成）]]></title><description><![CDATA[
 本日の内容

質問回答テーブル作成
質問回答登録フォーム作成
質問回答内容表示（未遂）


 簡単な要約
質問テンプレートを前回作成したので質問回答をできるようにしました。
回答した内容は後から確認できます、と言いたいですが残念ながらまだ未遂です。

 質問回答窓


 質問回答内容の反映


 プルリク
https://github.com/WdknWdkn/oneonone/pull/25

 CodeRabbitのコメント
なんと今回もシーケンス図を作成してくれて太っ腹なうさぎ先生。
でもよく見たらこのシーケンス図あってるようなそうでもないような、ということでご愛嬌。
コメント...]]></description><link>https://zenn.dev/wdknwdkn/articles/a211c66600c1bd</link><guid isPermaLink="true">https://zenn.dev/wdknwdkn/articles/a211c66600c1bd</guid><pubDate>Wed, 29 May 2024 14:36:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yeX-7wYE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeRabbit%2520%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25A6%25E9%259D%25A2%25E8%25AB%2587%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE20%25EF%25BC%259A%25E8%25B3%25AA%25E5%2595%258F%25E5%259B%259E%25E7%25AD%2594%25E7%2594%25BB%25E9%259D%25A2%25E4%25BD%259C%25E6%2588%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2593%25EF%25BC%25A0%25E9%25A7%2586%25E3%2581%2591%25E5%2587%25BA%25E3%2581%2597%25E8%2582%25B2%25E3%2581%25A6%25E3%2582%258BEM%25E5%259F%25B7%25E8%25A1%258C%25E5%25BD%25B9%25E5%2593%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JISkF3QXNGeGxMY29sdEpjUHRpN0IwRWpTdlZ0MzFkWnluQ2tmUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わだけん＠駆け出し育てるEM執行役員</dc:creator></item><item><title><![CDATA[再帰処理とL-Systemであっさりフラクタル]]></title><description><![CDATA[
 フラクタルとは!?
"フラクタル"とは、図形の部分と全体が自己相似になっているものです。(Wikipediaありざます)
今回は、再帰処理を使った有名なフラクタルアート3種類をまとめてみます。
(シェルピンスキー3兄弟)

シェルピンスキーのギャスケット
シェルピンスキーのカーペット
シェルピンスキーの曲線

ここでは、図形の描画にOpenProcessingを利用します。
使い方に関しては、p5.jsをかじる本を参考にして頂けると幸いです。

 シェルピンスキーのギャスケット
"フラクタル"を検索すると、結果としてほぼ間違いなくこの図形と出会う事になります。
三角形の中に三角形があ...]]></description><link>https://zenn.dev/sdkfz181tiger/articles/d33b7527ca2c89</link><guid isPermaLink="true">https://zenn.dev/sdkfz181tiger/articles/d33b7527ca2c89</guid><pubDate>Wed, 29 May 2024 14:10:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zbxZkAqM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2586%258D%25E5%25B8%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8L-System%25E3%2581%25A7%25E3%2581%2582%25E3%2581%25A3%25E3%2581%2595%25E3%2582%258A%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2598%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxM2MwMGU4MGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かじるプログラミング</dc:creator></item><item><title><![CDATA[【Next.js】環境変数にNEXT_PUBLICが必要か不要か]]></title><description><![CDATA[
 はじめに
Next.jsで環境変数を設定した時、読み込まれなかったり、読み込まれなかったり、NEXT_PUBLIC_がついたりついていなかったりして混乱したので調べてみました。

 環境変数の設定
ルート配下に.envファイルを設置し、環境変数を記載します。
NEXT_PUBLIC_USERNAME=test1234
USERNAME=test1234

 環境変数の使用
環境変数を参照する場合は以下のように記載します。
console.log(process.env.NEXT_PUBLIC_USERNAME);
console.log(process.env.USERNAME);
...]]></description><link>https://zenn.dev/kiwichan101kg/articles/fd6a94b5edc91a</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/fd6a94b5edc91a</guid><pubDate>Wed, 29 May 2024 14:06:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uMFLSdCw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25ABNEXT_PUBLIC%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%258B%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzNDBjOGU1ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[最速でXRPLのクロスカレンシー送金をJavaScriptで試す方法]]></title><description><![CDATA[私が作成しているXRPL道場でクロスカレンシー送金の講座を作成しましたので、合わせてこちらでも「最速でXRPLのクロスカレンシー送金をJavaScriptで試す方法」としてテストフローをご紹介したいと思います。

 前提
最終的に、以下の条件をクリアできるように進めていきます。

チャーリーからボブに、発行者AのA.USDが届くこと
チャーリーが発行者BのB.EURで支払いを行えること


 1.プロジェクトのセットアップ
// ディレクトリの作成・移動
mkdir xrpl-cross-currency
cd xrpl-cross-currency

// プロジェクト作成
npm i...]]></description><link>https://zenn.dev/nabe3/articles/f96cb8f006763b</link><guid isPermaLink="true">https://zenn.dev/nabe3/articles/f96cb8f006763b</guid><pubDate>Wed, 29 May 2024 00:24:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZVlDHATI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%2580%259F%25E3%2581%25A7XRPL%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25BC%25E9%2580%2581%25E9%2587%2591%25E3%2582%2592JavaScript%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nabe3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjM2ZDU5MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nabe3</dc:creator></item><item><title><![CDATA[JavaScriptの正規表現でgフラグを使う際は気をつけた方が良い]]></title><description><![CDATA[
 はじめに
先日こちらのツイートが流れてきました。
https://x.com/jjenzz/status/1794891346643497418
動画内では次のことをやっていました。
何が起きているのか、まったくわからなかったので気になってこの挙動について調べて備忘録として残します。
&gt; const r = /boop/g
undefined
&gt; r.test("boop")
true
&gt; r.test("boop")
false
&gt; r.test("boop")
true
&gt; r.test("boop")
false
&gt; 

 gフラグとは
Ja...]]></description><link>https://zenn.dev/skanehira/articles/2024-05-29-js-regexp-g-flag</link><guid isPermaLink="true">https://zenn.dev/skanehira/articles/2024-05-29-js-regexp-g-flag</guid><pubDate>Wed, 29 May 2024 00:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r0vJ8wMW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7g%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AF%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%259F%25E6%2596%25B9%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B4%25E3%2583%25AA%25E3%2583%25A9%2540%25E5%25AE%258C%25E5%2585%25A8%25E9%2580%25B1%25E4%25BC%25917%25E6%2597%25A5%25E3%2581%25AE%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%258F%25E3%2581%25A0%25E3%2581%2595%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNGE3Zjg2ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゴリラ@完全週休7日の仕事ください</dc:creator></item><item><title><![CDATA[バグギルド第1回！ CVE-2024-4367 – Arbitrary JavaScript execution in PDF.js]]></title><description><![CDATA[

 茶番
来たな新米バグハンター！ようこそバグギルドへ！
俺たちの業界(バグハント業界)では、世界中の脆弱性に飢えたハンター達が日夜脆弱性を見つけてはレポートとして報告し、その脆弱性にかけられた懸賞金をかっさらっていっている...
腕のたつハンターともなれば稼ぎまくりだ！
そんな夢のようなハンターという職業だが、伝説級のハンター、すなわちレジェンドハンターになるのはもちろん楽じゃあねえ...
このバグギルドは、お前ら新米ハンターが将来伝説級のハンターになれるように、腕利きのハンターたちが報告した脆弱性レポートを解説&amp;読み込んでいきながらレジェンドハンターを目指すことを目的とした...]]></description><link>https://zenn.dev/cyber_mamba/articles/ca5b2b25bb4df2</link><guid isPermaLink="true">https://zenn.dev/cyber_mamba/articles/ca5b2b25bb4df2</guid><pubDate>Tue, 28 May 2024 23:13:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hVLVROnc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2582%25B0%25E3%2582%25AE%25E3%2583%25AB%25E3%2583%2589%25E7%25AC%25AC1%25E5%259B%259E%25EF%25BC%2581%2520CVE-2024-4367%2520%25E2%2580%2593%2520Arbitrary%2520JavaScript%2520execution%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:namake_hebi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NGY5OWNlMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>namake_hebi</dc:creator></item><item><title><![CDATA[LangChain x TypeScript で Tools 呼び出す]]></title><description><![CDATA[
 はじめに
この記事では、LangChain で Tools を呼び出す方法を紹介します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/tool_calling/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-calling-tools-demo
LangChain x TypeScript での実装例を以下の記事...]]></description><link>https://zenn.dev/hayato94087/articles/4f31c689ac3ae4</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/4f31c689ac3ae4</guid><pubDate>Tue, 28 May 2024 20:54:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SDHoVMpq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520x%2520TypeScript%2520%25E3%2581%25A7%2520Tools%2520%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Mobx とは]]></title><description><![CDATA[
 MobX とは
MobX は JavaScript の状態管理ライブラリで、React などのフレームワークと組み合わせて使用することが多く、特徴は状態管理をシンプルで直感的に行うことができる点である。以下の 3 つの主要な概念に基づいている。

State
アプリケーションを動かすデータのこと。スプレッドシートのセルのように扱うことで、その変更を追跡する。
Actions
State を変更するコード。ユーザーイベント、バックエンドデータへの送信、スケジュールされたイベントなどが該当します。
Derivations
State から相互作用なしに導き出すことができるもの。ユーザーイ...]]></description><link>https://zenn.dev/eitaro1230/articles/mobx-description</link><guid isPermaLink="true">https://zenn.dev/eitaro1230/articles/mobx-description</guid><pubDate>Tue, 28 May 2024 17:04:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H1RCzBDA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Mobx%2520%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:eitaro1230%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDNOT1g3UzNIZUhYNW9RVnBOQWE4bjFHazNScEdUWE9HU3pOREE0SFRFS3RIelBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>eitaro1230</dc:creator></item><item><title><![CDATA[【JS】javascriptのvar , let ,constの違い]]></title><description><![CDATA[
 調べたきっかけ
varは確かいま非推奨で、constが定数...？
というような曖昧な理解で使ってしまっていたので、どういう時にどれをつかうべきなのかきちんと理解したく調べてまとめました

 そもそもvar,let,constってなに？
変数の宣言方法。どれを変数の前につけて宣言するかによって変数の扱いが変わる！

 3つの違い

 ①varは再宣言ができる。let、constはできない。
var test;
var test;//エラーでない
let test;
let test;// エラー
const test1;
const test1;// エラー

 ②var、letは再...]]></description><link>https://zenn.dev/nami_06063/articles/dc363ce8d232e3</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/dc363ce8d232e3</guid><pubDate>Tue, 28 May 2024 11:46:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MqNjyKb_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591javascript%25E3%2581%25AEvar%2520%252C%2520let%2520%252Cconst%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[jsでQRコードを生成してSVGとして保存する]]></title><description><![CDATA[タイトルの通り、QRコードを生成してSVGで保存できる仕組みが必要になったので作成しました。
※自分用のメモです

 使用したライブラリ
https://www.npmjs.com/package/qrcode-generator

 ライブラリの追加
npm install qrcode-generator
or
yarn add qrcode-generator

 記述方法
HTML
...省略...
&lt;div id="qr_place_holder"&gt;&lt;/div&gt;
&lt;button id="generate_button"&gt;生成&lt;/butt...]]></description><link>https://zenn.dev/a_saya_108/articles/09b52118745c0a</link><guid isPermaLink="true">https://zenn.dev/a_saya_108/articles/09b52118745c0a</guid><pubDate>Tue, 28 May 2024 10:35:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rkjb-EMa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:js%25E3%2581%25A7QR%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6SVG%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:adachi%2520saya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2ZGYyZTcxZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>adachi saya</dc:creator></item><item><title><![CDATA[JavaScriptでエンコードを学ぶ]]></title><description><![CDATA[
 これはなに
今更ながらエンコードってなに??ってなったのでJavaScriptで試しながら学んでみた。
これはその時のメモを備忘録的にまとめたもの。

 エンコードとは
データを他の形式へ変換すること。
ポイントは、意味を変えずに形式を変換する点。
参考: エンコードとは

 身近なエンコード例
Google 検索で日本語を打ち込んで検索するとエンコードされる。
これは URL はアルファベットのみが許可されおり、日本語を含めることができないからである。
そのため日本語を入れると、アルファベットの組み合わせに変換（URL エンコード）される。
参考: URL エンコードとは

 Ja...]]></description><link>https://zenn.dev/s_h_i_o_n/articles/6cf009f65adf0e</link><guid isPermaLink="true">https://zenn.dev/s_h_i_o_n/articles/6cf009f65adf0e</guid><pubDate>Tue, 28 May 2024 07:49:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4yO6hEne--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shion%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzNmRkZTRmNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shion</dc:creator></item><item><title><![CDATA[React + ViteでGoogle Chromeの拡張機能を作成する]]></title><description><![CDATA[
 作成するもの
chrome上でaを2回押した時、ブックマークが階層状に表示されるポップアップを作成していきます。


 プロジェクトのセットアップ
 % pnpm create vite@latest
✔ Project name: … bookmark-extension
✔ Select a framework: › React
✔ Select a variant: › JavaScript
プロジェクト直下に移動して以下のコマンドを実行します。
 % pnpm add -D @crxjs/vite-plugin@beta
vite.config.jsを編集します。

vite...]]></description><link>https://zenn.dev/monjara/articles/3b200fa041fbdf</link><guid isPermaLink="true">https://zenn.dev/monjara/articles/3b200fa041fbdf</guid><pubDate>Tue, 28 May 2024 00:42:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a3DH4AEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520Vite%25E3%2581%25A7Google%2520Chrome%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:monjara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwZTlkOTQwZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>monjara</dc:creator></item></channel></rss>