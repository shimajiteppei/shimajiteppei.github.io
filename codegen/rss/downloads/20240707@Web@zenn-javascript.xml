<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 07 Jul 2024 11:38:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Kindleのハイライトを一括で消すスクリプトを作った]]></title><description><![CDATA[
 背景
https://read.amazon.co.jp/notebook
で自身のKindleのメモとハイライトを確認できるのですが、ハイライトを一括で消すような機能は見当たらず、一つ一つポチポチ削除していく必要がありそうでした。
あまりに面倒なので一括でKindleハイライトを消すためのスクリプトを書いてみました。

 手順
https://read.amazon.co.jp/notebook
でハイライトを一括削除したい本を指定した状態で、


.a-popover-triggerを持つ全てのDOM要素を取得する


各トリガー要素に対して、以下の操作を順番に実行する：

トリ...]]></description><link>https://zenn.dev/danimal141/articles/1a6ea2373cdee2</link><guid isPermaLink="true">https://zenn.dev/danimal141/articles/1a6ea2373cdee2</guid><pubDate>Sun, 07 Jul 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5eKP4ZsX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kindle%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E3%2581%25A7%25E6%25B6%2588%25E3%2581%2599%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:danimal141%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMzc0YjE0N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>danimal141</dc:creator></item><item><title><![CDATA[Supabaseで多対多を取得する]]></title><description><![CDATA[今回はSupabaseで多対多のテーブルを取得する方法を紹介します。
!
JavaScript libraryを使用しています。バージョンは ^2.42.7 になります。


 ER図
今回は投稿記事のテーブルposts、タグテーブルtags、中間テーブルposts_tagsを作成している前提で進めます。
※投稿でタグは任意であるため、0ないし多数になる想定です。
投稿に関連するタグを取得するためにはどのような記述ができるでしょうか。

 中間テーブルを明示して取得
posts_tagsをそのまま明示的に記述すると取得できます。
しかし、posts_tagsを挟むことでプロパティの扱いが...]]></description><link>https://zenn.dev/k_log24/articles/380a2047a3bdee</link><guid isPermaLink="true">https://zenn.dev/k_log24/articles/380a2047a3bdee</guid><pubDate>Sun, 07 Jul 2024 06:00:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RCZwIBtp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%25E3%2581%25A7%25E5%25A4%259A%25E5%25AF%25BE%25E5%25A4%259A%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kohei.com%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYTBhMmFjNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kohei.com</dc:creator></item><item><title><![CDATA[JSX で map関数を使うときに return を省略できる条件]]></title><description><![CDATA[
 はじめに
Javascript のmap関数で関数内のコールバック関数を書く際に、return を省略できるケースについて、理解が曖昧でしたので調べてみました。

 本題
アロー関数の省略形として次の挙動については学習済みでした。
// 1行の場合、returnと{}を省略可能
todos.map((todo) =&gt; todo.id === id )
// 引数が1つの場合、returnと () を省略可能
todos.map(todo =&gt; todo.id ===id )

一方で、React でJSX内に書くケースで考えてみます。
function TodoPage(...]]></description><link>https://zenn.dev/surume3/articles/51cc2e88661209</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/51cc2e88661209</guid><pubDate>Sun, 07 Jul 2024 05:00:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4PLWaYLp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSX%2520%25E3%2581%25A7%2520map%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%2520return%2520%25E3%2582%2592%25E7%259C%2581%25E7%2595%25A5%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E6%259D%25A1%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Syumai3</dc:creator></item><item><title><![CDATA[山崎令恩流プログラミング言語学習法]]></title><description><![CDATA[とりあえず山崎令恩しろ
山崎令恩最強
山崎令恩 プログラミング言語
山崎令恩 宮崎大宮高校
]]></description><link>https://zenn.dev/yamazakireon/articles/e620a50f626e25</link><guid isPermaLink="true">https://zenn.dev/yamazakireon/articles/e620a50f626e25</guid><pubDate>Sun, 07 Jul 2024 04:26:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xfuiakAA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B1%25B1%25E5%25B4%258E%25E4%25BB%25A4%25E6%2581%25A9%25E6%25B5%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B1%25B1%25E5%25B4%258E%25E4%25BB%25A4%25E6%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyY2Q5Y2ZmNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山崎令恩</dc:creator></item><item><title><![CDATA[jsでオブジェクトを比較する]]></title><description><![CDATA[ふと、オブジェクトを比較した時に、同じはずなのに違うと言われたのでその内容を改めて確認してみた。
今回何をしていたかというと、元々Dateオブジェクトを利用している箇所を改めて、dayjsに置き換えるというタスクに取り掛かる時にデグレが発生していないかを担保する必要があった。
その際に前のdateオブジェクトで作成したものと今回利用するdayjs.toDateしたオブジェクトを単純に===で比較すればいいやと思ってそうしてみるとうまく行かない。。

、=== 演算子を使用して日付オブジェクトを比較していることが問題です。JavaScript では、オブジェクト（Date オブジェクトを含...]]></description><link>https://zenn.dev/yukiyuki1126/articles/0eac5c00088099</link><guid isPermaLink="true">https://zenn.dev/yukiyuki1126/articles/0eac5c00088099</guid><pubDate>Sat, 06 Jul 2024 12:27:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wu6ntHFH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:js%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukiyuki1126%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeFhfcjVVM3JqUjJ0WHRwTndZM20wM2J0ejdCSXc0dGcxMUFOcXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yukiyuki1126</dc:creator></item><item><title><![CDATA[【Next.js】メモ]]></title><description><![CDATA[
 Shell
# ----&lt; 作成 &gt;----
# "https://ja.next-community-docs.dev/docs/app-router/api-reference/create-next-app"

## pt.1 デフォルト (非対話：オプション指定)（"your-project-name"は適宜変更する）
npx create-next-app@latest your-project-name \
--ts --tailwind --eslint --src-dir --app --import-alias '@/*'

## pt.2 対話的（"y...]]></description><link>https://zenn.dev/blc/articles/dbfff5bb88d99d</link><guid isPermaLink="true">https://zenn.dev/blc/articles/dbfff5bb88d99d</guid><pubDate>Sat, 06 Jul 2024 11:16:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q7cZNkss--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2580%2590Next.js%25E3%2580%2591%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yota%2520Suzuki%2520%252F%2520BLC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JJQkRZakpBMlJsc2JzUWtCRDhXak9zOGc1cnpoUk5hSXlMcDJpMTkzTk5NamZjaz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yota Suzuki / BLC</dc:creator></item><item><title><![CDATA[Reactでオブジェクト指向やってみる #状態管理ライブラリ一切不要]]></title><description><![CDATA[
 オブジェクト指向を取り入れると


『可読性』『拡張性』『汎用性(=保守性)』 の三大柱(自称)が担保され、現場でドヤれる

メソッド名やメンバ変数名が1~2単語で済む #ポリモーフィズム


主語.動詞(補語 | 目的語) S+V+C、S+V+O の形になる

例1: $(A).appendTo(B)

例2: comment.createdBy: User

例3: comment.getCreatedBy(): User

例4: user.medias[n].comments.create({ title, body }: Comment)

例5: user.medias[...]]></description><link>https://zenn.dev/llc_starhacks/articles/929e58b503d6ce</link><guid isPermaLink="true">https://zenn.dev/llc_starhacks/articles/929e58b503d6ce</guid><pubDate>Sat, 06 Jul 2024 09:23:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RU0LEX7c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2523%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E5%2588%2587%25E4%25B8%258D%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:llc_starhacks%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2QxODAxZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>llc_starhacks</dc:creator></item><item><title><![CDATA[【JavaScript】defer属性（メモ）]]></title><description><![CDATA[スクール時代からあまり触れてこなかったJavaScript。
基本的なことから学び吸収するための個人メモです。

 defer属性とは
defer属性はHTMLの&lt;script&gt;タグに使用され、スクリプトの実行をページの読み込みと表示が完了した後に遅らせることができる属性です。
簡単にいうと1つの処理の終了を待たずに次の処理を行う非同期化で、Webページの読み込みを速くすることができます。

 defer属性の仕組み

 &lt;head&gt;タグ内でJavaScriptファイルを読み込ませる場合
通常の流れとしては、HTMLのコードを上から下へ順番に解析する中で、&lt;...]]></description><link>https://zenn.dev/sudoukky/articles/65268af8ff5c51</link><guid isPermaLink="true">https://zenn.dev/sudoukky/articles/65268af8ff5c51</guid><pubDate>Sat, 06 Jul 2024 01:43:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vxyom5z_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591defer%25E5%25B1%259E%25E6%2580%25A7%25EF%25BC%2588%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2581%2585%25E3%2583%25BC%25E3%2581%2599%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlOTZlN2FjZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どぅーすー</dc:creator></item><item><title><![CDATA[【Ruby on Rails】marked.jsを使用して、リアルプレビュー画面を実装する]]></title><description><![CDATA[
 はじめに
今回は、marked.jsを使用しリアルプレビュー画面を実装しましたので、こちら備忘録として書き留めたいと思います。マークダウン記法での出力は、GitHubのstar数/コードのわかりやすさ/マークダウン出力の対応の広さから、gem 'kramdown'とgem 'kramdown-parser-gfm'を使用しています。
Google検索で「rails プレビュー実装」と検索した中で、こちらの記事が大変わかりやすかったので、こちら参考にしながら実装を進めました。
（今回、マークダウン記法出力の実装方法は割愛させていただきます。）
完成イメージは下記となります。


 実装...]]></description><link>https://zenn.dev/s17w09/articles/4ec10c492b64db</link><guid isPermaLink="true">https://zenn.dev/s17w09/articles/4ec10c492b64db</guid><pubDate>Fri, 05 Jul 2024 09:34:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A1sXDihH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ruby%2520on%2520Rails%25E3%2580%2591marked.js%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:asay%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNGY1Y2Q0NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asay</dc:creator></item><item><title><![CDATA[自身で作成した ESLint Config をスナップショットテストする]]></title><description><![CDATA[
 これはなに
作成した ESLint Config が期待値通りかどうかをテストする方法についてまとめたものです。
ESLint は非常に多くのルールを提供しており、これにプラグインも加えるとその数は膨大なものになります。全てのルール設定を自身で記述するには多大なコストを要するため、各種プラグインが提供する configs （≒ プリセット）を取り入れつつ、必要に応じてルール設定を追加するのが一般的です。さらに特定のファイル形式やディレクトリー配下に限定して異なる設定を適用する場合もあるでしょう。こうなると設定の全体像が極めて複雑となり、期待値通りになっているかを目視で確認するのは非常...]]></description><link>https://zenn.dev/wakamsha/articles/test-eslint-config</link><guid isPermaLink="true">https://zenn.dev/wakamsha/articles/test-eslint-config</guid><pubDate>Fri, 05 Jul 2024 01:46:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qf8VzH4U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E8%25BA%25AB%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2520ESLint%2520Config%2520%25E3%2582%2592%25E3%2582%25B9%25E3%2583%258A%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakamsha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2psYURiOW50NGN1UTUweE54dmxHcW50Rkxsbkg1VThSWUFZOUtBakE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakamsha</dc:creator></item><item><title><![CDATA[JavaScript入門]]></title><description><![CDATA[
 はじめに

このJavaScript入門はエンジニア向けではなく、社内の新卒マーケターや新卒データアナリスト向けに最低限身に着けてほしいJavaScriptの知識に絞ってまとめています
エンジニアの観点だと物足りない情報も多々あると思いますのでご留意ください
HTML/JS/CSSは「実際に触ってみる」と覚えが早いと思うので後述のjsFiddleなどのサービスを活用しながら実際に手を動かしながらこの記事を読み進めることをお勧めします。


 JavaScriptとは
JavaScriptとはブラウザを「動かす」ためのプログラム言語です。Web上の処理の動きを行うことができます。
《例...]]></description><link>https://zenn.dev/jujubkitakd/articles/5b69939aea7b63</link><guid isPermaLink="true">https://zenn.dev/jujubkitakd/articles/5b69939aea7b63</guid><pubDate>Thu, 04 Jul 2024 12:53:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2ETSt1zE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:JavaScript%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%2599%25E3%2581%25B5%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlh1aXdvZlR4d3NMOWZvUVJBekVCMGxxLURyT0ZmVTBpSi1fd2s1SHM1dUVrWmlKMF92QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やすふく</dc:creator></item><item><title><![CDATA[【cluster】CICrafterとかで使いやすいスクリプト置き場]]></title><description><![CDATA[Unityを使わず、動く床アイテムを作成
の記事みたいな感じで、CICrafterで使えるスクリプトをただポンポン置いていきます。
（別にCICrafterでなくても、普通にクラフトアイテムとかで使えますが）

 01くるくる回転

SubNodeを使う必要があります（SubNodeの入れ方は上記記事参照）。
hayasaとjikuは変更可能。
const froce = 30;
const hayasa = 72.0;
const jiku = new Vector3(0.0, 1.0, 0.0);

const node = $.subNode("SubNode000");

$.o...]]></description><link>https://zenn.dev/vins/articles/21a1d94ed4b746</link><guid isPermaLink="true">https://zenn.dev/vins/articles/21a1d94ed4b746</guid><pubDate>Thu, 04 Jul 2024 09:30:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mUodUSAd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cluster%25E3%2580%2591CICrafter%25E3%2581%25A8%25E3%2581%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E7%25BD%25AE%25E3%2581%258D%25E5%25A0%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:vins%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c0ZERlaWVTamtQcDFmTDYwS1FhTlpYMkpMeTJOOGtfeWRha1F6PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>vins</dc:creator></item><item><title><![CDATA[vue.jsでYouTubeIFramePlayerAPIを使うならVueYoutubeがおすすめ]]></title><description><![CDATA[
 YIPA（YouTubeIFramePlayerAPI）の使用目的
複数の動画を読み込み、それぞれに対して用意したボタンから音量操作・再生・停止を行いたい。

 開発環境
Vue3のComposition API形式です。
  "dependencies": {
    "@vue-youtube/component": "^0.0.6",
    "@vue-youtube/core": "^0.0.6",
    "pixi.js": "^8.1.1",
    "vue": "^3.4.21",
    "vue-router": "^4.3.0"
  },
  "devDep...]]></description><link>https://zenn.dev/210neon/articles/aa294c7ef8f71c</link><guid isPermaLink="true">https://zenn.dev/210neon/articles/aa294c7ef8f71c</guid><pubDate>Wed, 03 Jul 2024 17:54:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4gqPBQhg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vue.js%25E3%2581%25A7YouTubeIFramePlayerAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589VueYoutube%25E3%2581%258C%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NettoNeon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlNGZhNmYxMjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NettoNeon</dc:creator></item><item><title><![CDATA[TypeScriptのswitch文におけるcaseで複数条件を扱う方法]]></title><description><![CDATA[
 はじめに
TypeScriptやJavaScriptのswitch文で複数の条件を一つのcaseで扱いたい場合があります。
この記事では、その正しい方法と、よくある間違いについて解説します。

 背景
APIのあるレスポンスがstringでありつつ、想定する中身はほぼ定まっている(=ほぼenumやん)が、あくまでもstringではあるので例外対応も考慮しないといけないような実装をする必要があったとき。
テストを先に書いてから実装進めてたら、想定する結果にならず。
なんでだーと思ったら、間違った方法の後者の方で記載して、実装問題ないよなーと思いつつ、vscodeでもテスト実行時のコンパ...]]></description><link>https://zenn.dev/91works/articles/afe51e4e177daf</link><guid isPermaLink="true">https://zenn.dev/91works/articles/afe51e4e177daf</guid><pubDate>Wed, 03 Jul 2024 15:36:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZhInlKNU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AEswitch%25E6%2596%2587%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bcase%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E6%259D%25A1%25E4%25BB%25B6%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:YoshikiAgatsuma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5ZDA5N2JmNjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:91works%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzIwNDk2ZTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YoshikiAgatsuma</dc:creator></item><item><title><![CDATA[電卓の作り方]]></title><description><![CDATA[本書は、簡易的な電卓を作成した際のメモを整理したものです。
本書で説明する簡易電卓（以降は 電卓 と呼びます）は、下記サイトにて動作を確認することができます。

https://nonaka101.github.io/jig-a/


本書は大きく分けて「概要」「設計」「作成」「応用」の４つで構成されており、それぞれ下記のような役割を持ちます。

概要：全体に関する概要です。また参考文献やライセンス等も扱っています。
設計：コーディングする前段階として、どのような仕組みになるかを考えていきます。
作成：上記の設計を基に、電卓のコア機能をコードとして起こしていきます。
応用：コア機能ではない、拡張的な部分の実装を行っていきます。

※ コードは JavaScript を使ってますが、設計に関する部分は他の言語でも使えると思います。]]></description><link>https://zenn.dev/nonaka101/books/howto-create-calculator</link><guid isPermaLink="true">https://zenn.dev/nonaka101/books/howto-create-calculator</guid><pubDate>Wed, 03 Jul 2024 13:58:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sn1Bv7iV--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wMTQ1OWZlNmZmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Nonaka</dc:creator></item><item><title><![CDATA[ブックマークレットを使ってAmazonのアフィリエイト用のHTMLを生成する]]></title><description><![CDATA[Scraps に雑に書いた 【2024−07-01】Amazon アフィ用に商品名・商品サムネイル・価格を含んだ HTML をブックマークレットを使って作成する を記事にしてみた。

 背景
React と Tailwind CSS で Markdown を使った記事の投稿画面を作成中、記事の中に Amazon のアフィリンクを入れたくなった。
ということで、Amazon の商品リンク、サムネイル画像、価格を含んだ HTML を簡単に作成したい。

 この記事で説明すること
Bookmarklet を用いて Amazon の商品リンク、サムネイル画像、価格を含んだ以下のような見た目の H...]]></description><link>https://zenn.dev/saneatsu/articles/generate-amazon-affiliate-html-by-bookmarklet</link><guid isPermaLink="true">https://zenn.dev/saneatsu/articles/generate-amazon-affiliate-html-by-bookmarklet</guid><pubDate>Wed, 03 Jul 2024 09:33:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nI7FMA9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Amazon%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AA%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2588%25E7%2594%25A8%25E3%2581%25AEHTML%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saneatsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjZTY2YzgyYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saneatsu</dc:creator></item><item><title><![CDATA[SortableJS でドラッグアンドドロップする時にマウスカーソルを変更する]]></title><description><![CDATA[
 状況


SortableJS を使用して DOM の入れ替え機能を実装した．


ドラッグ時にマウスカーソルを grabbing （掴んでる感じのやつ）にしてドラッグしている感を出したい．


TailwindCSS を使用しているが，active:cursor-grabbing を使用してもドラッグ中のカーソルが変更されなかった．



 解決策
調べた結果，気合いで解決するしかなかった．
まず css でクラスを作成しておく．
.draggable-cursor * {
  cursor: move !important;
  cursor: -webkit-grabbing ...]]></description><link>https://zenn.dev/taroosg/articles/20240703152113-1c9e4cd5811b67</link><guid isPermaLink="true">https://zenn.dev/taroosg/articles/20240703152113-1c9e4cd5811b67</guid><pubDate>Wed, 03 Jul 2024 06:31:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kPLtlfnq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SortableJS%2520%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2589%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AB%25E3%2583%259E%25E3%2582%25A6%25E3%2582%25B9%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOGZiYzgwODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taro</dc:creator></item><item><title><![CDATA[CSS が 原因で Google Charts の Tooltips が表示されなかった件]]></title><description><![CDATA[
 状況


Google Charts でグラフを作成し，表示された．


カーソルを当てたときに表示される Tooltips が表示されない．


コンソール見てもエラーは出ていない．



 原因
下記の CSS を書いていたのが原因．他のページで svg 要素にクリックイベントを設定するために記述していた．
svg {
  pointer-events: none;
}

 解決策
上記 CSS を削除したら解決．別ページのクリックイベント設定部分は別にクラス名を追加して対応すれば OK．

 感想
JS の挙動を疑って時間溶かした．最終的に下記の手順で解決．いつもの総当り力技．...]]></description><link>https://zenn.dev/taroosg/articles/20240703151957-057886293343be</link><guid isPermaLink="true">https://zenn.dev/taroosg/articles/20240703151957-057886293343be</guid><pubDate>Wed, 03 Jul 2024 06:31:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ErD0RKXe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%2520%25E3%2581%258C%2520%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A7%2520Google%2520Charts%2520%25E3%2581%25AE%2520Tooltips%2520%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOGZiYzgwODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taro</dc:creator></item><item><title><![CDATA[JavaScript で正規表現に変数を用いる方法]]></title><description><![CDATA[
 状況


配列の中から特定の文字列が含まれた要素を抽出したい．


「特定の文字列」は複数あるので，変数や配列を用いて定義したものを使用したい．


そもそも複数条件の文字列で抽出するのはどうすればよいのか．．．



 データ例（適当）
const array = [
  {
    name: "hoge",
    message: "aaaaa",
  },
  {
    name: "fuga",
    message: "bbbbb",
  },
  {
    name: "hoge",
    message: "ccccc",
  },
  {
    name...]]></description><link>https://zenn.dev/taroosg/articles/20240703151517-2a4c038170328c</link><guid isPermaLink="true">https://zenn.dev/taroosg/articles/20240703151517-2a4c038170328c</guid><pubDate>Wed, 03 Jul 2024 06:31:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4WkTIiIM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2581%25A7%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AB%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOGZiYzgwODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taro</dc:creator></item><item><title><![CDATA[【cluster】Unityを使わず、動く床アイテムを作成]]></title><description><![CDATA[かおもさんのCICrafterというツールは、Unityなしでクラフトアイテムをアップロードすることができます（Windows PC用）。

そしてワールドクラフトでは、ついに「動く床の上に乗るとアバターも一緒に動く」設定ができるようになりました。アスレチックワールドやエレベーター機能などに使える「動く床」を作ってみましょう！
!
なお独自アイテムをアップロードするにはclusterで「トラベラーミッション」を終わらせて「ビギナー」になっている必要があります。


 ダウンロード・解凍・起動
https://vkao.booth.pm/items/5807825
まずは↑こちらからCIC...]]></description><link>https://zenn.dev/vins/articles/a58f8717267502</link><guid isPermaLink="true">https://zenn.dev/vins/articles/a58f8717267502</guid><pubDate>Wed, 03 Jul 2024 03:52:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8kD-7h0---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cluster%25E3%2580%2591Unity%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2580%2581%25E5%258B%2595%25E3%2581%258F%25E5%25BA%258A%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:vins%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c0ZERlaWVTamtQcDFmTDYwS1FhTlpYMkpMeTJOOGtfeWRha1F6PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>vins</dc:creator></item></channel></rss>