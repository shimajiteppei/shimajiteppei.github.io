<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 27 Jul 2024 11:35:57 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[僕の好みを一方的に決めつける審議用Botに物申すための機能追加をしました]]></title><description><![CDATA[こんにちは。ダイの大冒険ガチ勢のbun913と申します。
私は前回の記事で「同僚から勧められるアニメ作品を私が視聴するべきかどうか」を判定するChatBotを作成しました。
https://zenn.dev/moneyforward/articles/3eadb58169f235
ただし音楽性の違いでこのBot:審議マンとはうまくやっていけそうにないことがわかったので、以下のような構成に変更し、彼には対話の重要性を覚えてもらうことにしました。

なお、今回の記事は以下の記事の構成やコードを大いに参考にさせていただいておりますが、構成を App Runner から Lambda + API...]]></description><link>https://zenn.dev/moneyforward/articles/2bb1a314d04063</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/2bb1a314d04063</guid><pubDate>Sat, 27 Jul 2024 09:18:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9xXa5Qf4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2583%2595%25E3%2581%25AE%25E5%25A5%25BD%25E3%2581%25BF%25E3%2582%2592%25E4%25B8%2580%25E6%2596%25B9%25E7%259A%2584%25E3%2581%25AB%25E6%25B1%25BA%25E3%2582%2581%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E5%25AF%25A9%25E8%25AD%25B0%25E7%2594%25A8Bot%25E3%2581%25AB%25E7%2589%25A9%25E7%2594%25B3%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E8%25BF%25BD%25E5%258A%25A0%25E3%2582%2592%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bun913%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNGVhMDEyMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bun913</dc:creator></item><item><title><![CDATA[[初心者歓迎] npmに自分のパッケージを登録する方法]]></title><description><![CDATA[はじめまして、初心者向けにnpmに自分が作成したプログラムを登録し公開するまでの手順を教えます。]]></description><link>https://zenn.dev/arucraft2022/books/3ea743672b25a1</link><guid isPermaLink="true">https://zenn.dev/arucraft2022/books/3ea743672b25a1</guid><pubDate>Fri, 26 Jul 2024 23:19:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ELhoG3sQ--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xOTRmOWI3YWUyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>アルク</dc:creator></item><item><title><![CDATA[【index.tsx】そのVSCodeタブ名、わかりづらくない？【page.tsx】]]></title><description><![CDATA[
 はじめに
VSCodeで、index.tsやpage.tsxなど、同名のファイルを複数同時に開いてしまい、わからなくなってしまったことはありませんか？

実はよく見ると右側にディレクトリ名が表示されているのですが、薄い文字かつ、目線移動のコストが発生するため分かりづらいです。
この記事では、VSCodeの設定を変更することで、ファイル名にディレクトリ名を含めて表示する方法を紹介します。

 設定方法
VSCodeの設定ファイルsettings.jsonに以下の設定を追加します。
{
      "workbench.editor.customLabels.patterns": {
 ...]]></description><link>https://zenn.dev/bmth/articles/vscode-tab-display-name-alias</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/vscode-tab-display-name-alias</guid><pubDate>Fri, 26 Jul 2024 17:23:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fDy_RXo8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590index.tsx%25E3%2580%2591%25E3%2581%259D%25E3%2581%25AEVSCode%25E3%2582%25BF%25E3%2583%2596%25E5%2590%258D%25E3%2580%2581%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2581%25A5%25E3%2582%2589%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25E3%2580%2590page.tsx%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTVpY3FhSGVfOXQyWjc3YjBWV1RfWlM0MFF3MExBbS1zclhIRWtydDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[Property-Based Testing with TypeScript & fast-check]]></title><description><![CDATA[Originally published at here .
Have you ever heard about Property-Based Testing (PBT)? Before diving into PBT, let’s take a moment to recall our usual approach to testing.

 Overview: What is PBT? Why PBT?
When developers write test code, they typically think of specific input values and the expe...]]></description><link>https://zenn.dev/samuraikun/articles/property-based-testing-in-typescript</link><guid isPermaLink="true">https://zenn.dev/samuraikun/articles/property-based-testing-in-typescript</guid><pubDate>Fri, 26 Jul 2024 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4njcKCI9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Property-Based%2520Testing%2520with%2520TypeScript%2520%2526%2520fast-check%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:samuraikun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjOGVjZGQ2NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>samuraikun</dc:creator></item><item><title><![CDATA[オブジェクトのデストラクチャリングに型を追加する方法]]></title><description><![CDATA[フォームコンポーネントを作成しているとします。ユーザーに名前とメールアドレスを入力させ、その値をサーバーに送信してニュースレターに登録するような機能を持たせる場合を考えます。
では、フォームの値をデストラクチャリングする際に型を付けたい場合はどうするでしょうか？
通常のTypeScriptの構文は、ES6のデストラクチャリングとリネーム機能と競合します。
const { firstName: string, email: string } = formValues;
これは動作しません。

 デストラクチャリングされたオブジェクトに型を付ける
デストラクチャリングされた個々の値に型を付け...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-add-types-to-an-object-destructuring</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-add-types-to-an-object-destructuring</guid><pubDate>Fri, 26 Jul 2024 13:34:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PwPDHUSB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E5%259E%258B%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[【Angular】Materialのmat-inputを共通化してみる]]></title><description><![CDATA[オッス、俺泉（@izumin_0401）！！

 Angular Materialのinputコンポーネントを共通化したい
mat-inputをとにかく共通化したいお年頃。

 ソースコード

 共通inputコンポーネント

input.component.ts
import { CommonModule } from '@angular/common';
import { Component, Input } from '@angular/core';
import { FormControl, ReactiveFormsModule } from '@angular/forms';...]]></description><link>https://zenn.dev/izumin_0401/articles/6c66f07665b631</link><guid isPermaLink="true">https://zenn.dev/izumin_0401/articles/6c66f07665b631</guid><pubDate>Fri, 26 Jul 2024 12:02:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--639-vB95--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Angular%25E3%2580%2591Material%25E3%2581%25AEmat-input%25E3%2582%2592%25E5%2585%25B1%25E9%2580%259A%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B3%2589%25E6%25B5%25A9%25E5%2585%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTljYmRlNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>泉浩兵</dc:creator></item><item><title><![CDATA[引数が参照渡しの関数は注意(?)]]></title><description><![CDATA[
 記事の概要
先日、引数が参照(参照渡し)になっている関数はバグを生み出しやすいため注意が必要という話を聞いたので、備忘のために本記事を作成しました。

 サンプルコードと解説
以下に、ポケモンのレベルをMaxまで上げる関数を書き、レベルアップ前後のポケモンの状態を出力する処理を書いています。

 注意したいパターン（処理1）
boostUpLevelFunction1はbeforePokémon1の参照を受け取り、参照先のオブジェクトを直接更新する処理となっているため、'beforePokémon1'もレベルアップしてしまっています。
type pokémon = { name: s...]]></description><link>https://zenn.dev/souemon/articles/d2456a3485cb1a</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/d2456a3485cb1a</guid><pubDate>Fri, 26 Jul 2024 10:24:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AauYa8vh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%258C%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AF%25E6%25B3%25A8%25E6%2584%258F%2528%253F%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[ESLintをより強力に！eslint-plugin-unicornとeslint-plugin-perfectionistの活用法]]></title><description><![CDATA[
 はじめに
ESLintはJavaScriptやTypeScriptのコード品質を向上させるためのツールですが設定に悩むことも多いです
本記事ではESLintの設定をシンプルかつ強力にするための2つのプラグインeslint-plugin-perfectionistとeslint-plugin-unicornを紹介します
これらのプラグインを使うことで、手間をかけずに厳格なコードチェックを実現できます！

 eslint-plugin-perfectionistとは
eslint-plugin-perfectionistはオブジェクト、インポート、型、列挙型、JSXプロパティなどのデータ...]]></description><link>https://zenn.dev/chot/articles/23c39e18282687</link><guid isPermaLink="true">https://zenn.dev/chot/articles/23c39e18282687</guid><pubDate>Fri, 26 Jul 2024 09:12:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wfb6IJlf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%25BC%25B7%25E5%258A%259B%25E3%2581%25AB%25EF%25BC%2581eslint-plugin-unicorn%25E3%2581%25A8eslint-plugin-perfecti...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hisho%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYzE1NTZkZWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hisho</dc:creator></item><item><title><![CDATA[次世代のコミュニケーション!?AIパートナーアプリを作ってみた話]]></title><description><![CDATA[こんにちは、クラウディアです！
今日は、うちが作ってるAIパートナー
っちアプリについてみんなに紹介するよ。
このアプリは、なんと3Dアバターが自分から話しかけてくれるAIチャットアプリなんよ！
気になる人はぜひこの後も読んでみてね！


 このアプリ、何がすごいの？

 超便利！会話のスタートと再開はAIから
このアプリは、会話が始まる時も止まった時も、AIが自動的に話しかけてくれるとよ。
だから、いつでも自然な会話が楽しめるっちゃん。
例えば、何も言わなくてもAIが「今日の天気はどう？」とか聞いてくれるんよ。
これって、話題が尽きなくて楽しいと思わん？
最近話した内容もある程度覚えて...]]></description><link>https://zenn.dev/cloudia/articles/78894fdf2cb4e6</link><guid isPermaLink="true">https://zenn.dev/cloudia/articles/78894fdf2cb4e6</guid><pubDate>Fri, 26 Jul 2024 08:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GvxT70Ax--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2521%253FAI%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2588%25E3%2583%258A%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%2587%25E5%25AE%2599%25E9%2587%258E%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxYTE2ODZjM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宇宙野クラウディア</dc:creator></item><item><title><![CDATA[【Next.js】Intercepting Routesって何やねん]]></title><description><![CDATA[
 はじめに
本記事では、Next.jsのIntercepting Routesの基本についてまとめます。
Parallel Routesと合わせて用いられることが多く、便利な機能なのですが、意外と基本的なことを知っていないと使いこなせないかつ意図した挙動にならないということでハマりやすかったりするので、まとめておこうと思います
https://nextjs.org/docs/app/building-your-application/routing/intercepting-routes
https://nextjs.org/docs/app/building-your-applica...]]></description><link>https://zenn.dev/sc30gsw/articles/b6f72009fe7ddf</link><guid isPermaLink="true">https://zenn.dev/sc30gsw/articles/b6f72009fe7ddf</guid><pubDate>Thu, 25 Jul 2024 21:18:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IDBy9p8E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591Intercepting%2520Routes%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25E3%2582%2584%25E3%2581%25AD%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3OWI0YWMwMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaito</dc:creator></item><item><title><![CDATA[VSCodeでtsconfig.jsonに「グローバル型 'Boolean' が見つかりません。」とエラーが出る場合の対処法]]></title><description><![CDATA[VSCodeにtypescriptのバージョンを正しく教えてあげましょう。
VSCodeで「Ctrl + Shift + P」を押下し、「TypeScriptのバージョンを選択」から、ワークスペースのバージョンを使用を選べばOK
node16でtypescriptを使おうして1時間くらい悩んだので備忘録
]]></description><link>https://zenn.dev/omtkz/articles/15f27a41a7f015</link><guid isPermaLink="true">https://zenn.dev/omtkz/articles/15f27a41a7f015</guid><pubDate>Thu, 25 Jul 2024 12:21:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tNbopdYg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25A7tsconfig.json%25E3%2581%25AB%25E3%2580%258C%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E5%259E%258B%2520%2527Boolean%2527%2520%25E3%2581%258C%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%258A%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2580%2582%25E3%2580%258D%25E3%2581%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%25E5%25A0%25B4...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazan%2520Omata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTc3OTBjZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazan Omata</dc:creator></item><item><title><![CDATA[TypeScriptコンパイラによる未使用パラメータと変数のチェック]]></title><description><![CDATA[TypeScriptコンパイラには、コードをチェックする際にリンターのような機能を持つオプションがあります。その中には、パラメータや変数が未使用のままになっていることを防ぐものがあります。

 noUnusedLocalsオプション
noUnusedLocalsは、デフォルトではfalseに設定されていますが、これをtrueに設定すると、未使用のローカル変数がある場合にコンパイラがエラーを出すようになります。以下のコード例を見てみましょう。
function printItem(item: any, index: number) {
  const indexedItem = `${in...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-compiler-checks-for-unused-params</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-compiler-checks-for-unused-params</guid><pubDate>Thu, 25 Jul 2024 11:00:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--53w_8IQk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[GPT-4o mini API を使って言語学習アプリを作ってみた]]></title><description><![CDATA[先日、OpenAI が新しい大規模言語モデル（LLM）である GPT-4o mini を発表しました。
週末に軽く触っていて「これくらいの返答速度、品質、コストならオンデマンドで学習コンテンツを生成してもある程度機能するのでは？」とふと思い立ったので、サクッと動くものを作ってみました。こんな感じのアプリです。

まだ開発を始めて数日ですが、ある程度使えそうなレベルで形になったので LingoNuance という名前でSlack ワークスペース内で動作する連携アプリとして公開しています。ライブデモをこちらからインストールすることができます：
https://bit.ly/get-lingo...]]></description><link>https://zenn.dev/seratch/articles/a0d4ee66688d27</link><guid isPermaLink="true">https://zenn.dev/seratch/articles/a0d4ee66688d27</guid><pubDate>Thu, 25 Jul 2024 06:52:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P6OBpwca--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT-4o%2520mini%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25A8%2580%25E8%25AA%259E%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuhiro%2520Sera%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjZmEzMWFiM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuhiro Sera</dc:creator></item><item><title><![CDATA[TanStack Routerをつかってみた]]></title><description><![CDATA[Vite、React、TypeScript、TanStack Routerの構成でファイルベースルーティングを実装しました。ここでは、TanStack Routerによるファイルベースルーティングの基本的なルールや、今回利用した機能を紹介します。

 TanStack Routerでのファイルベースルーティングとは
ファイルベースルーティングは、ファイルシステムの構造に基づいてアプリケーションのルーティングを自動的に生成する手法です。ルーティング設定を明示的に書く必要がなく、ファイルとフォルダの構造だけでアプリケーションの構造を定義できます。
例：src/routes/about.tsx...]]></description><link>https://zenn.dev/x_point_1/articles/b9603c42570c7f</link><guid isPermaLink="true">https://zenn.dev/x_point_1/articles/b9603c42570c7f</guid><pubDate>Thu, 25 Jul 2024 05:19:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7bkqpvFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TanStack%2520Router%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ren%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTY1NmFObW5Td25ZeTBUeFFuUFlicUNGNXVEeEhkelpLZndIVWdTZHV6WUREaW1nPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ren</dc:creator></item><item><title><![CDATA[Github CopilotみたいなAIアシスト日記エディターを作る]]></title><description><![CDATA[
 はじめに
Github Copilotって便利ですよね。コードを一部分だけ打っても、内容を予測して続きを予測して補完してくれます。
マークダウンファイル内では文字列についても使えます。
VScode + Github Copilotっぽいエディタを自分でも作成してみました。
技術的な学びについて解説を加えていきます。
なお、Claudeを使いながら作成しているため不自然なコードが含まれている可能性があります。ご注意ください。

 作ったもの
文字を入力すると、予測した続きの文章がグレーで表示されます。Tabキーを押すと確定します。


 解説している技術的要素

useRef
日本語...]]></description><link>https://zenn.dev/k_zumi_dev/articles/37aa04f584d7df</link><guid isPermaLink="true">https://zenn.dev/k_zumi_dev/articles/37aa04f584d7df</guid><pubDate>Thu, 25 Jul 2024 03:08:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uFXjQUDH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Github%2520Copilot%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AAAI%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2588%25E6%2597%25A5%25E8%25A8%2598%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k_zumi_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiMTRjZTg1MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k_zumi_dev</dc:creator></item><item><title><![CDATA[事実、LLM の API は違いすぎる！ | CrossLM]]></title><description><![CDATA[事実、LLM の API は違いすぎる！
どういうことかというと、LLM のプロバイダ間で API の互換性がないということです。
そう思いませんか？

 CrossLM
私は作っている PoC のライブラリです。
さまざまな LLM API のプロバイダの API の差異を吸収してくれるラッパーです。
deno add @pnsk-lab/crosslm # Deno
bunx jsr add @pnsk-lab/crosslm # Bun
pnpm dlx jsr add @pnsk-lab/crosslm # pnpm
でインストールし、
import { CrossLM } fr...]]></description><link>https://zenn.dev/nakasyou/articles/llm_api_merge</link><guid isPermaLink="true">https://zenn.dev/nakasyou/articles/llm_api_merge</guid><pubDate>Thu, 25 Jul 2024 03:00:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rL4ipSx5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BA%258B%25E5%25AE%259F%25E3%2580%2581LLM%2520%25E3%2581%25AE%2520API%2520%25E3%2581%25AF%25E9%2581%2595%25E3%2581%2584%25E3%2581%2599%25E3%2581%258E%25E3%2582%258B%25EF%25BC%2581%2520%257C%2520CrossLM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakasyou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NTAyNDNlNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakasyou</dc:creator></item><item><title><![CDATA[無名関数にジェネリック型を追加する方法]]></title><description><![CDATA[
 ジェネリック型の必要性
特にデータのコレクション（配列など）を扱う場合、任意のタイプのデータを変換できる関数を持つことが一般的です。この種の関数を汎用的に保ち、型を維持するためには、ジェネリック型を使用する必要があります。

 ジェネリック型を持つ無名関数の書き方
無名関数がジェネリック型で動作するためには、ジェネリック型のシグネチャで始める必要があります。
&lt;T&gt;() =&gt; {}
これを踏まえて、型Tの配列を受け取り、そのコレクションに対して何らかの操作を行い、型Tの配列を返す関数を書くことができます。

 ジェネリック型を使用した例
例えば、配列から最初のn要素...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-add-generic-type-to-function</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-add-generic-type-to-function</guid><pubDate>Wed, 24 Jul 2024 23:17:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2RVEFsSl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259E%258B%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[FirestoreでGROUP BYを実現するObject.groupBy]]></title><description><![CDATA[
 状況
firestoreからのデータ取得時はGROUP BY句と同等の機能が存在しません。
Remixとfirebaseを使ってtodoリストを作成していて、firestoreからのデータ読み出し時にtodoをグループに分類して管理したいと思った時の話です。
データ取得後にfilterメソッドなどを使ってグループごとにまとめ直すしかないのか、と思って探していたら、JavaScriptのObject.groupByを見つけました。
しかし、TypeScriptを使っていたのでVSCode上でTypeScriptの型エラーが出て困ったり、出力方法を悩んだり勉強になったので備忘録です。

...]]></description><link>https://zenn.dev/nofi/articles/3983b1aabdc1ab</link><guid isPermaLink="true">https://zenn.dev/nofi/articles/3983b1aabdc1ab</guid><pubDate>Wed, 24 Jul 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OsV-4e3S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firestore%25E3%2581%25A7GROUP%2520BY%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BObject.groupBy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzYTc3YjFlMmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nofi</dc:creator></item><item><title><![CDATA[Svelte5で可変複数個のSnippetを受取るTabsコンポーネント作成メモ]]></title><description><![CDATA[
Svelte5で学習用Webアプリを作成している中でTabsコンポーネントが欲しくなったので作成しました。基礎ライブラリとしての各コンポーネントはできるだけ他のコンポーネントファイルに依存してほしくない事と、HTMLライクで直感的な構造記述の両立が悩ましかったです。まだ妥協できるラインのものができたので、スタイリング等を除いた基本機能部分を備忘メモとして残しておきます。

 作成したコンポーネント

 REPL
https://svelte-5-preview.vercel.app/#H4sIAAAAAAAACq1UTW_bMAz9K4Q2DDFg2Gt7S21jO2_YinXDDlE...]]></description><link>https://zenn.dev/scirexs/articles/e6062fc318ab55</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/e6062fc318ab55</guid><pubDate>Wed, 24 Jul 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H6w4DFjp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte5%25E3%2581%25A7%25E5%258F%25AF%25E5%25A4%2589%25E8%25A4%2587%25E6%2595%25B0%25E5%2580%258B%25E3%2581%25AESnippet%25E3%2582%2592%25E5%258F%2597%25E5%258F%2596%25E3%2582%258BTabs%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[TSの条件型の条件部に型パラメータが突っ込まれたときの挙動]]></title><description><![CDATA[TypeScriptの条件型は、このような見た目をした型です。
type IsString&lt;T&gt; = T extends string ? string : never;
この型は、型パラメータTがstring型に割り当て可能な型であればstring型を返し、そうでなければnever型を返します。では、Tの位置に与えられた型がまた型パラメータを含む場合はどうなるのでしょうか？
そもそものシチュエーションが想像しにくいと思うので、具体例を見ながら説明していきましょう。
type Conditional&lt;T&gt; = T extends Record&lt;string,...]]></description><link>https://zenn.dev/mshaka/articles/6eb705821c7c32</link><guid isPermaLink="true">https://zenn.dev/mshaka/articles/6eb705821c7c32</guid><pubDate>Wed, 24 Jul 2024 12:33:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3uXpsvj_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E5%259E%258B%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E9%2583%25A8%25E3%2581%25AB%25E5%259E%258B%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258C%25E7%25AA%2581%25E3%2581%25A3%25E8%25BE%25BC%25E3%2581%25BE%25E3%2582%258C%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A8%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MGMxZmFkMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほとけ</dc:creator></item></channel></rss>