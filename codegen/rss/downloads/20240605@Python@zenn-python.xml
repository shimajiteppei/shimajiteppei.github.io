<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 05 Jun 2024 11:42:14 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【AWS/Python】EC2 を起動/停止する Lambda Function をつくる]]></title><description><![CDATA[Rails で API を構築しています。
普段は Docker で開発環境を構築していますが、モバイルのクライアントから呼び出せるように検証用 API サーバーを EC2 で構築しました。
https://zenn.dev/ndjndj/articles/9ab0f2ff5756aa
https://zenn.dev/ndjndj/articles/acd0060dcc4d03
ローカル PC での開発と違ってサーバーを立てているわけですからお金がかかります。
節約したいので、サーバーを使うときだけ起動して使わないときは停止しておきたいです。
マネジメントコンソールから操作することがで...]]></description><link>https://zenn.dev/ndjndj/articles/e323a35115a8f8</link><guid isPermaLink="true">https://zenn.dev/ndjndj/articles/e323a35115a8f8</guid><pubDate>Wed, 05 Jun 2024 07:47:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I24tHuYH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%252FPython%25E3%2580%2591EC2%2520%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%252F%25E5%2581%259C%25E6%25AD%25A2%25E3%2581%2599%25E3%2582%258B%2520Lambda%2520Function%2520%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ndj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOGFkYjRiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ndj</dc:creator></item><item><title><![CDATA[langchainを活用してAzureAISearch×GeminiでRAGをつくる]]></title><description><![CDATA[
 はじめに
Microsoft build 2024でOpenAIはGPTs、Assistants APIにAzure AI Searchを利用していることが明らかになりました。
私もAzureを嗜む一員として、自分もAzure AI SearchでRAGを作らねば！と思いコードを書いてみることにしました。
せっかくなので今回はlangchain-commyunityのAzureSearchモジュールをはじめ、langchainベースのコードで実装してみます。
langchainのコードを見ながら試行錯誤する部分もあり、個人的にはけっこう詰まったので誰かの役に立てば幸いです。

 Az...]]></description><link>https://zenn.dev/tomodo_ysys/articles/azure-ai-search-langchain-rag</link><guid isPermaLink="true">https://zenn.dev/tomodo_ysys/articles/azure-ai-search-langchain-rag</guid><pubDate>Wed, 05 Jun 2024 07:44:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4-ejSv6s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:langchain%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6AzureAISearch%25C3%2597Gemini%25E3%2581%25A7RAG%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2582%25E3%2581%25A9%2540SIer%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkY2Y4OTVkMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ともど@SIerエンジニア</dc:creator></item><item><title><![CDATA[ChatGPT/LangChainによるチャットシステム構築[実践]入門のプログラムを試す]]></title><description><![CDATA[

 はじめに
現在私は「LangChain」のプログラムに沼っており（若い人が使う言葉ですね）、今回は「ChatGPT/LangChainによるチャットシステム構築[実践]入門」を読んで、いろいろプログラミングをして楽しむことにしました。
　今まで私は「製造業の生産管理システム」や「プログラム言語の構文解析システム」など、いろいろなプログラミングをしてきたのですが、生成AI分野のように完全な正解が無く、常にアップデートしていくスタンスのものは初めてで、とても興味深いです。
この書籍通りにプログラミングを進めてみたのですが、何度も失敗を繰り返し、何度も心が折れそうになりました。。。これか...]]></description><link>https://zenn.dev/ogiki/articles/5e854d0a241c26</link><guid isPermaLink="true">https://zenn.dev/ogiki/articles/5e854d0a241c26</guid><pubDate>Wed, 05 Jun 2024 02:35:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AGpquX28--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%252FLangChain%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E7%25AF%2589%255B%25E5%25AE%259F%25E8%25B7%25B5%255D%25E5%2585%25A5%25E9%2596%2580%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjNiYWMwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村たろう</dc:creator></item><item><title><![CDATA[Transformerを理解するため！今からでもAttention入門 ~ イメージ・仕組み・コードの３面で理解する ~]]></title><description><![CDATA[
 はじめに
どうもどうも、やまぐちです。
今回はTransformerアーキテクチャの中核をなすAttentionについて重点的に解説したいと思います。
Attentionのイメージ・仕組み・コードの三つの側面から解説することでAttentionの理解につながるかと思います。
記事全体を通して、Attentionの説明にはTransformerの文脈を交えながら解説するように心がけましたのでAttention自体の理解は進むはずです！
解説はできる限り理解しやすいイメージに落とし込んでいます。できる限り正確に解説することを心掛けていますが、もし不正確な点があればご指摘いただけると幸いで...]]></description><link>https://zenn.dev/yamada_quantum/articles/6264faed5ff1f4</link><guid isPermaLink="true">https://zenn.dev/yamada_quantum/articles/6264faed5ff1f4</guid><pubDate>Tue, 04 Jun 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DR8omdMB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Transformer%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25EF%25BC%2581%25E4%25BB%258A%25E3%2581%258B%25E3%2582%2589%25E3%2581%25A7%25E3%2582%2582Attention%25E5%2585%25A5%25E9%2596%2580%2520%7E%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25BB%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2583%25BB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25EF%25BC%2593%25E9%259D%25A2%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%2590%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4YTFkMDliZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまぐち</dc:creator></item><item><title><![CDATA[ImageNet について考える (3) — Tiny ImageNet の分類の説明可能性とモデル圧縮]]></title><description><![CDATA[
 目的
ImageNet について考える (2) — Tiny ImageNet の分類 で Tiny ImageNet の分類モデルを訓練して、検証精度 52% 程度の分類器を得た。特に嬉しいのはモデルの全体を固定解除した上でのファインチューニングによって、ImageNet というよりは全体的に Tiny ImageNet 用のモデルに特化していることである。畳み込み層も Tiny ImageNet の特徴をとらえていることであろう。
今度はこのモデルに対して、


ニューラルネットの説明可能性について考える (1) — Grad-CAM でやって Grad-CAM を用いて、この分...]]></description><link>https://zenn.dev/derwind/articles/dwd-imagenet03</link><guid isPermaLink="true">https://zenn.dev/derwind/articles/dwd-imagenet03</guid><pubDate>Tue, 04 Jun 2024 17:58:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pn_TM9-U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ImageNet%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2520%25283%2529%2520%25E2%2580%2594%2520Tiny%2520ImageNet%2520%25E3%2581%25AE%25E5%2588%2586%25E9%25A1%259E%25E3%2581%25AE%25E8%25AA%25AC%25E6%2598%258E%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25A8%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>derwind</dc:creator></item><item><title><![CDATA[LIVE_STREAMモードでのPoseLandmarkerのサンプル2024]]></title><description><![CDATA[
 はじめに
新しいMediapipeのPoseLandmarkerの、Webカメラを使用してリアルタイムで処理を行うサンプルコードが見つからなかったので書いてみました。

 環境
Python: 3.11.9
mediapipe: 0.10.14

 コード
import math
import time

import cv2
import mediapipe as mp
from mediapipe.tasks.python import BaseOptions
from mediapipe.tasks.python.vision import (
    PoseLandmark...]]></description><link>https://zenn.dev/hotari/articles/aba93db612b1e4</link><guid isPermaLink="true">https://zenn.dev/hotari/articles/aba93db612b1e4</guid><pubDate>Tue, 04 Jun 2024 15:43:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y3-KNHiq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LIVE_STREAM%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2581%25AEPoseLandmarker%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB2024%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hotari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxMjlmZGI3YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hotari</dc:creator></item><item><title><![CDATA[ImageNet について考える (2) — Tiny ImageNet の分類]]></title><description><![CDATA[
 目的
ImageNet について考える (1) — Tiny ImageNet で Tiny ImageNet を調べたので、実際に分類モデルを訓練してみたい。

 やること
VGG16 の転移学習ベースで訓練する。ImageNet について考える (1) — Tiny ImageNet でも触れた ImageClassificationProject-IITK が分かりやすいので、これをベースとする。また VGGNet and Tiny ImageNet という記事も参考になる部分が多かったので、一部適用している。
実装には PyTorch を用いて、val acc=0.5 程度で...]]></description><link>https://zenn.dev/derwind/articles/dwd-imagenet02</link><guid isPermaLink="true">https://zenn.dev/derwind/articles/dwd-imagenet02</guid><pubDate>Tue, 04 Jun 2024 14:35:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--suAaniwg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ImageNet%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2520%25282%2529%2520%25E2%2580%2594%2520Tiny%2520ImageNet%2520%25E3%2581%25AE%25E5%2588%2586%25E9%25A1%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:derwind%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNjBiZDcwMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>derwind</dc:creator></item><item><title><![CDATA[PyInstallerがうまく動かないときの回避策]]></title><description><![CDATA[本記事は、 https://dev.to/kazto/pyinstaller-failed-1ph0 の日本語訳です。
2024/6/4 現在、PyInstallerを実行すると、以下のようなエラーが発生します。
&gt; pyinstaller -F .\main.py
Traceback (most recent call last):
  File "&lt;frozen runpy&gt;", line 198, in _run_module_as_main
  File "&lt;frozen runpy&gt;", line 88, in _run_code
  File "...]]></description><link>https://zenn.dev/kazto/articles/8c6906474fafa7</link><guid isPermaLink="true">https://zenn.dev/kazto/articles/8c6906474fafa7</guid><pubDate>Tue, 04 Jun 2024 13:28:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cydtj8jl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyInstaller%25E3%2581%258C%25E3%2581%2586%25E3%2581%25BE%25E3%2581%258F%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%259B%259E%25E9%2581%25BF%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGX0RIblBJbW5aM2x5dWN5czZMR3dfRjZfZnpjc0dpbnZaRDllVnc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazto</dc:creator></item><item><title><![CDATA[StreamlitでマルチモーダルなChatアプリを作る]]></title><description><![CDATA[
 やること
前回、Streamlitで簡単なWebアプリを作成した。
今回は、StreamlitでマルチモーダルなChatアプリを作る。

 参考資料
https://zenn.dev/headwaters/articles/c8e785ac4193d0
https://zenn.dev/headwaters/articles/9d4410846fd6b9

 前提


Azure Open AI Service上にGPT-4oをデプロイ済みであること


Keyとendpointを取得済みであること



 環境

python:3.10.12
openai:1.30.3


 手順...]]></description><link>https://zenn.dev/headwaters/articles/a3f87b54c25743</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/a3f87b54c25743</guid><pubDate>Tue, 04 Jun 2024 13:27:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8oBBtGs5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2581%25AAChat%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODg5YTRhYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item><item><title><![CDATA[実務で役立つAPI設計と実装: FastAPIによる効率的な開発]]></title><description><![CDATA[『実務で役立つAPI設計と実装: FastAPIによる効率的な開発』は、Pythonの軽量で高速なWebフレームワークであるFastAPIを使用して、実務に役立つAPIの設計と実装方法を解説する実践的なガイドブックです。本書は、プログラミング初心者から中級者、さらに現役の開発者まで、幅広い読者を対象としています。特に、効率的な開発環境の構築や、データベースとの連携、テスト手法に関心のある方に最適です。

『実務で役立つAPI設計と実装: FastAPIによる効率的な開発』は、実務で直面するさまざまな課題に対処するための実践的な知識と技術を提供し、読者がより効率的で生産的な開発者となるための強力なサポートを行います。

技術書展16にも出店しています。

techbookfest.org/product/mfREdNjHqEJdYbGc83Kp6X?productVariantID=fRVn2n27e6dq4Ag6wJ93CP



]]></description><link>https://zenn.dev/egg_glass/books/fastapi-for-starters</link><guid isPermaLink="true">https://zenn.dev/egg_glass/books/fastapi-for-starters</guid><pubDate>Tue, 04 Jun 2024 12:52:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ByMxgx6l--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zOGFmMTc0MmU3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>エッグテック</dc:creator></item><item><title><![CDATA[[AtCoder Daily Training ALL 2024/06/04 17:30start] 参加記録]]></title><description><![CDATA[AtCoder Daily Training ALL 2024/06/04 17:30start に参加しました。
A ~ G の7完でした。
H 問題に24分残しておけましたが、方向性は合っていたものの、違うところを同じ方向に進んでいたため、解けませんでした。
H 問題についてはこの記事にはありません。
残り時間的に、「自分も成長したなあ」と思いましたが、難易度が低いだけだったので精進します。

 A - A Recursive Function

もしくは こちら

 考え方
再帰的に定義された階上関数です。
定義通りに実装します。
実装例(Python)
def solve(n: ...]]></description><link>https://zenn.dev/shizukakokoro/articles/bc21cdd3636f9a</link><guid isPermaLink="true">https://zenn.dev/shizukakokoro/articles/bc21cdd3636f9a</guid><pubDate>Tue, 04 Jun 2024 12:23:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w8JxV5Im--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAtCoder%2520Daily%2520Training%2520ALL%25202024%252F06%252F04%252017%253A30start%255D%2520%25E5%258F%2582%25E5%258A%25A0%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>静心</dc:creator></item><item><title><![CDATA[Django +  Inertia + Vite + React で作る Web アプリの新たな選択肢]]></title><description><![CDATA[
 はじめに
みなさん、マイクロサービスに疲れていませんか？

バックエンドにDjango, Laravelをたてているのに、フロントエンドで別途Next.js(Node.js)をたてているのが意味わからん
モダンにWebサービスをたてたいだけなのに、なぜAPIを解放しないといけないのか
[Django React アプリ構築] [検索]

単純にバックエンドはDjango, フロントエンドにReactを使いたい、それだけなのに、こんな複雑な構成にしないといけないの...？



今回ご紹介するモジュラモノリスなアーキテクチャでは、以下のようにサクッとWebサービスを構築できます。

v...]]></description><link>https://zenn.dev/bony_chops/articles/5c10ffabf8af7c</link><guid isPermaLink="true">https://zenn.dev/bony_chops/articles/5c10ffabf8af7c</guid><pubDate>Tue, 04 Jun 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IeymnByp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520%252B%2520%2520Inertia%2520%252B%2520Vite%2520%252B%2520React%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520Web%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AA%25E9%2581%25B8%25E6%258A%259E%25E8%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:BonyChops%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dNWi1hWUlKNUwtVExQUlVfeU5jQkNnYUQ5OXl3OTBrY25ZTmdtPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>BonyChops</dc:creator></item><item><title><![CDATA[uvでPython仮想環境を作ってみた]]></title><description><![CDATA[
 uvとは
私が少し触った感想は めっちゃ早くて高機能なvenv + pip(pip-tools) です。
https://astral.sh/blog/uv
公式の説明を翻訳に投げた結果です。


Rust製のPythonパッケージインストーラとリゾルバー（依存関係を解決するもの）


従来のpipやpip-toolsのワークフローを置き換えることを目的としてる


下記にuvの特徴もいくつか示します。

⚡️ Rustで開発されており、高速かつ信頼性が高い、さらに使いやすい


pipおよびpip-tools（pip-compileやpip-syncなど）よりも10〜100倍早い)...]]></description><link>https://zenn.dev/kazu0429/articles/ed5011178d4b85</link><guid isPermaLink="true">https://zenn.dev/kazu0429/articles/ed5011178d4b85</guid><pubDate>Tue, 04 Jun 2024 09:02:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iqh2oBCG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%25E3%2581%25A7Python%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNDI0ZGI0MjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuki</dc:creator></item><item><title><![CDATA[FlaskのBasic認証HTTPBasicAuthで401ページをカスタマイズする]]></title><description><![CDATA[
 TL;DR
HTTPBasicAuth.error_handler()の引数にwerkzeug.exceptions.Unauthorized.get_body()の文字列を返すメソッドを渡す。

 背景
flask_httpauthのBasic認証HTTPBasicAuthをFlaskに適用する際、デフォルトだとUnauthorized(認証失敗)のページは以下のように表示される。

他の404等のエラーページではもう少しリッチな表示になっている一方で、401の時のみただの1行テキストでかなり質素な表示となり味気ない。

 対策
HTTPBasicAuth.error_handle...]]></description><link>https://zenn.dev/nondescript/articles/bf0d776e7f4d2a</link><guid isPermaLink="true">https://zenn.dev/nondescript/articles/bf0d776e7f4d2a</guid><pubDate>Tue, 04 Jun 2024 08:38:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kK1kUiVm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25AEBasic%25E8%25AA%258D%25E8%25A8%25BCHTTPBasicAuth%25E3%2581%25A7401%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25A0%25E4%25BA%25BA%25E3%2581%25AE%25E6%2588%25AF%25E8%25A8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTVmOTBhM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>素人の戯言</dc:creator></item><item><title><![CDATA[Python + VSCode の環境構築 20240604]]></title><description><![CDATA[作業メモ。モダン Python 速習。
AI 周りのツールを動かしていたら TypeScript だけでやるには無理が出てきたので、久しぶりに Python の環境構築をする。
具体的には TestGen LLM を動かしたい。
https://www.freecodecamp.org/news/automated-unit-testing-with-testgen-llm-and-cover-agent
Python はたまに触るけど、基本 2.x 時代の知識しかない。
基本的にこの記事を読みながら、細かいアレンジをしている。
https://zenn.dev/koki_algebra...]]></description><link>https://zenn.dev/mizchi/articles/setup-python-20240604</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/setup-python-20240604</guid><pubDate>Tue, 04 Jun 2024 07:57:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o7BVZ8Ez--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%252B%2520VSCode%2520%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%252020240604%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[【PyCharm】GCPのTPU/GPU VMにPythonコードをデプロイする方法]]></title><description><![CDATA[
 GCPのTPU/GPU VMにPythonコードをデプロイする
ローカルPCで開発中のPythonコードを実際にTPU/GPU VM側で実行したい場合、何らかの方法で、VM側にPythonコードをコピーする必要が出てきます。リリース済みのPythonコードの場合、gitのcloneコマンドでVM側にPythonコードをクローンすることが可能ですが、開発中のコードの場合そうも行きません。gcloud CLIのscpコマンドを使う方法もありますが、今回はPyCharmのデプロイ機能とSSHトンネルを使ってコードをデプロイする一番手間のかからない方法を紹介します。
!
PyCharmのデプ...]]></description><link>https://zenn.dev/fukugawa/articles/04d4a4fca04da5</link><guid isPermaLink="true">https://zenn.dev/fukugawa/articles/04d4a4fca04da5</guid><pubDate>Tue, 04 Jun 2024 07:56:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6wd9nLgP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PyCharm%25E3%2580%2591GCP%25E3%2581%25AETPU%252FGPU%2520VM%25E3%2581%25ABPython%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fukugawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczMDE5MDk4MWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fukugawa</dc:creator></item><item><title><![CDATA[Strawberry GraphQLでキャッチした例外・エラーを Rollbar にスタックトレース付きでレポートする]]></title><description><![CDATA[Strawberry GraphQL を使ったQuery, Mutation のエラーや例外が Rollbar にレポートされなかったので調べた。公式ドキュメントと、以下のQiitaの記事を参考にしてカスタムスキーマを実装し、オーバライドしたメソッドで rollbar.report_exc_info を実行することでうまくいった。

Strawberry (GraphQL)で特定のエラーのみをエラーログ出力する
Schema | Strawberry GraphQL


 コード
class CustomSchema(Schema):
    def __init__(self, *ar...]]></description><link>https://zenn.dev/killinsun/articles/15b1bbece43337</link><guid isPermaLink="true">https://zenn.dev/killinsun/articles/15b1bbece43337</guid><pubDate>Tue, 04 Jun 2024 07:16:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xPL51_-0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Strawberry%2520GraphQL%25E3%2581%25A7%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2581%2597%25E3%2581%259F%25E4%25BE%258B%25E5%25A4%2596%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%2520Rollbar%2520%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25A7%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A6%2596%25E7%2584%25A1%25E3%2581%2597%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYTM3MDU1NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>首無しキリン</dc:creator></item><item><title><![CDATA[Slack ペイロードに含まれる response_url を完全に理解する]]></title><description><![CDATA[
 response_url を理解しよう
この記事では、Slack アプリを作ったことがある人でもあまり馴染みがないかもしれない response_url という仕組みについて網羅的に説明してみたいと思います [1]。
response_url は、スラッシュコマンドやショートカットのようなユーザーと Slack アプリの間で直接的なインタラクションが発生する機能のペイロードに含まれるものです。Incoming Webhooks や chat.postMessageで Slack に通知を送るだけの連携からもう一歩進んで、よりインタラクティブな Slack アプリを作るとき、この機能を...]]></description><link>https://zenn.dev/slack/articles/256c916f71b343</link><guid isPermaLink="true">https://zenn.dev/slack/articles/256c916f71b343</guid><pubDate>Mon, 03 Jun 2024 23:00:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OTXUWkUc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%2520%25E3%2583%259A%25E3%2582%25A4%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2582%258B%2520response_url%2520%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuhiro%2520Sera%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmOWE2NjUyZWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Slack%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjZmEzMWFiM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuhiro Sera</dc:creator></item><item><title><![CDATA[Slack API のトークンローテーション完全ガイド]]></title><description><![CDATA[こんにちは、Slack で公式 SDK 開発と日本の DevRel を担当しております @seratch と申します。
こちらの記事では、Slack アプリのトークンローテーションに関する詳細な説明を日本語でチュートリアル形式でやっていきたいと思います。

 トークンローテーションとは
Slack の OAuth アクセストークンは、長らく refresh token がなく、一度発行した access token は明に無効化（auth.revoke API やワークスペースのアプリ管理画面から revoke できます）しない限り、無期限で使える仕様でした。
しかし、2021 年に r...]]></description><link>https://zenn.dev/slack/articles/558ff03de094be</link><guid isPermaLink="true">https://zenn.dev/slack/articles/558ff03de094be</guid><pubDate>Mon, 03 Jun 2024 22:52:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5FD-xdEX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%2520API%2520%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuhiro%2520Sera%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmOWE2NjUyZWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Slack%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjZmEzMWFiM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuhiro Sera</dc:creator></item><item><title><![CDATA[Slack アプリでのモーダルの使い方完全ガイド]]></title><description><![CDATA[こんにちは、Slack の公式 SDK 開発と日本の Developer Relations を担当している瀬良 (@seratch) と申します 👋
この記事では、Slack アプリでエンドユーザーからの情報送信を受け付けたり、インタラクティブなインタフェースを提供するために利用できる「モーダル」について知っておくべきことを可能な限り全て網羅していきます。

 この記事で網羅しているトピック
もし、以下のようなことを疑問に思って Google 検索をしてこの記事にたどり着いたようでしたら、この（長い）記事のどこかにきっと必要な情報があるはずです。該当の箇所を読んでみてください。

モー...]]></description><link>https://zenn.dev/slack/articles/0be424bfec31d9</link><guid isPermaLink="true">https://zenn.dev/slack/articles/0be424bfec31d9</guid><pubDate>Mon, 03 Jun 2024 22:48:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qBFat-PV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuhiro%2520Sera%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmOWE2NjUyZWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Slack%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjZmEzMWFiM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuhiro Sera</dc:creator></item></channel></rss>