<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/linux/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/linux/feed"/>
  <title>Linuxタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでLinuxタグが付けられた新着記事</description>
  <updated>2024-05-22T18:13:33+09:00</updated>
  <link>https://qiita.com/tags/linux</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1862260</id>
    <published>2024-05-22T18:13:33+09:00</published>
    <updated>2024-05-22T18:13:33+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/masatom86650860/items/62ffe77c70c7fe3fe338"/>
    <url>https://qiita.com/masatom86650860/items/62ffe77c70c7fe3fe338</url>
    <title>排他制御</title>
    <content type="html">排他制御
あるリソースに同時に１つの処理しかアクセスできなくする排他制御という仕組みがあります。
気づき
データベースの共有ロックや専有ロックとかあったな。
排他制御の大切さを知る
root@***…</content>
    <author>
      <name>masatom86650860</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1862242</id>
    <published>2024-05-22T17:15:26+09:00</published>
    <updated>2024-05-22T17:15:26+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/masatom86650860/items/438d6b55c55f437e53d4"/>
    <url>https://qiita.com/masatom86650860/items/438d6b55c55f437e53d4</url>
    <title>プロセス間の通信</title>
    <content type="html">複数のプログラムを強調動作させるときには、各プロセスがデータの共有したり、あるいはお互いの処理をタイミングよく合わせる（同期させる）必要があります。このためにosが提供する機能のことを「プロセス通信…</content>
    <author>
      <name>masatom86650860</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1862228</id>
    <published>2024-05-22T16:22:17+09:00</published>
    <updated>2024-05-22T16:22:17+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/masatom86650860/items/7e07085128f1aedfcac8"/>
    <url>https://qiita.com/masatom86650860/items/7e07085128f1aedfcac8</url>
    <title>コピーオンライト</title>
    <content type="html">fork()関数の高速化
fork()関数発行時には、親プロセスのメモリを子プロセスにすべてコピーするのではなく、ページテーブルだけをコピーします。
....
その後にメモリを読むと、親子ともに共有…</content>
    <author>
      <name>masatom86650860</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1862073</id>
    <published>2024-05-22T07:11:50+09:00</published>
    <updated>2024-05-22T07:11:50+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/ken-yossy/items/443d5c8768347ca7488f"/>
    <url>https://qiita.com/ken-yossy/items/443d5c8768347ca7488f</url>
    <title>nvmeコマンド逆引きマニュアル(2/2)</title>
    <content type="html">はじめに
　前回の記事に引き続き、NVMe SSDに対してLinux用のNVMe SSD操作ツール（コマンド）を使用して所望の操作を行う方法、いわゆる「逆引きマニュアル」をまとめます。
記載する内容

この記事に記載している内容…</content>
    <author>
      <name>ken-yossy</name>
    </author>
  </entry>
</feed>
