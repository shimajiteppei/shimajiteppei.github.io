<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 24 Jul 2024 09:28:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Gemini APIをPythonから実行するまで]]></title><description><![CDATA[ChatGPTのAPIを勉強で使いたかったのですが無料枠が終わっていました。
そこで無料枠のあるGemini APIを今回使うことにしました。

 Gemini Flashの無料枠でできること
https://ai.google.dev/pricing?hl=ja

 15RPM(Request Per Minute)（1分あたりのリクエスト数）
1分間に15回までのリクエスト。

 100万TPM(Token Per Minute)（1分あたりのトークン数）
こちらどのくらいのことができるのかイメージがつかなかったのでgeminiに聞いてみました。
100万トークンは、約750,000...]]></description><link>https://zenn.dev/kojimaro/articles/c25523bf0529be</link><guid isPermaLink="true">https://zenn.dev/kojimaro/articles/c25523bf0529be</guid><pubDate>Wed, 24 Jul 2024 04:04:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2BMkkeHk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemini%2520API%25E3%2582%2592Python%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kojimaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiODMyYWI2ZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kojimaro</dc:creator></item><item><title><![CDATA[社内ロボット開発企画の紹介]]></title><description><![CDATA[
 はじめに
はじめまして。データアナリティクスラボ株式会社 データソリューション事業部の力岡と申します。普段はデータサイエンティストとして、データ分析や機械学習モデルの構築、生成AIアプリの開発などを行っています。
今回は、社内で進めているロボット開発企画についてご紹介します。本記事では、技術的内容というよりも、社内の取り組みに焦点を当てて、紹介していきたいと思います。

 ロボット開発企画とは
一言でいうと、最近話題の生成AI技術をロボットに組み込み、実際に勉強してみようという企画です。
通常、生成AIはChatGPTのように画面上で文字を入力して使用することが多いですが、現在はマル...]]></description><link>https://zenn.dev/dalab/articles/839d85f303035f</link><guid isPermaLink="true">https://zenn.dev/dalab/articles/839d85f303035f</guid><pubDate>Wed, 24 Jul 2024 04:01:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XkKUNd6H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A4%25BE%25E5%2586%2585%25E3%2583%25AD%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E9%2596%258B%25E7%2599%25BA%25E4%25BC%2581%25E7%2594%25BB%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tomokazu%2520Rikioka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4MmEwNzVhNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DAL%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YjY1MjNkYWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomokazu Rikioka</dc:creator></item><item><title><![CDATA[【Python】openpyxlのフォルダ構成とそれぞれの役割]]></title><description><![CDATA[
 1. はじめに
openpyxlは、PythonでExcelファイルを操作するための強力なライブラリです。本記事では、openpyxlの詳細なフォルダ構成とそれぞれの役割、さらに各フォルダ内の主要なメソッドの使われ方とオプションについて解説します。

 2. openpyxlの詳細なフォルダ構成
openpyxlの詳細なフォルダ構成は以下の通りです：
openpyxl/
├── __init__.py
├── cell/
│   ├── __init__.py
│   ├── cell.py
│   ├── read_only.py
│   └── text.py
├── chart...]]></description><link>https://zenn.dev/nuinui/articles/29e9e6880eb50e</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/29e9e6880eb50e</guid><pubDate>Tue, 23 Jul 2024 21:34:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ck33XshL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591openpyxl%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A8%25E3%2581%259D%25E3%2582%258C%25E3%2581%259E%25E3%2582%258C%25E3%2581%25AE%25E5%25BD%25B9%25E5%2589%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[英語でのプレゼンのための発音アクセント&質疑対策アプリを作った話]]></title><description><![CDATA[
 アプリの概要

今回は，英語でのプレゼン準備のためのアプリを作成しました．
作成したアプリの機能は2つです．

パワーポイントをuploadすることで，スピーカーメモを音声化してくれる機能
プレゼン資料のpdfをuploadすることで，GPT-4oによる質疑対策ができる機能

これらの機能で，プレゼンの発音やアクセントを確認することができます．さらに，質疑対策も行うことができ，スムーズな発表に繋げることを目的としています．
ソースコード
https://github.com/kokist/presentation_checker
デモ
https://presentation-che...]]></description><link>https://zenn.dev/kokist/articles/dccf1782ab8c97</link><guid isPermaLink="true">https://zenn.dev/kokist/articles/dccf1782ab8c97</guid><pubDate>Tue, 23 Jul 2024 15:52:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vi7MLXnv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25BC%25E3%2583%25B3%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2599%25BA%25E9%259F%25B3%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25B3%25E3%2583%2588%2526%25E8%25B3%25AA%25E7%2596%2591%25E5%25AF%25BE%25E7%25AD%2596%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kokist%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMmJjOTY2ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kokist</dc:creator></item><item><title><![CDATA[Python ファイル操作]]></title><description><![CDATA[
 os.scandir(path)
with os.scandir("sub") as it:     # 引数が空の場合、カレントディレクトリ
    files = [a.name for a in it]  # ディレクトリも含む
]]></description><link>https://zenn.dev/nacht/articles/f8399de326b741</link><guid isPermaLink="true">https://zenn.dev/nacht/articles/f8399de326b741</guid><pubDate>Tue, 23 Jul 2024 15:37:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v2xrMEX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nacht%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWQ2ZGNjZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nacht</dc:creator></item><item><title><![CDATA[[Python]SAMでLambdaをデプロイしてみた]]></title><description><![CDATA[
 

 記事を書く経緯

業務で特定のWAFルールの削除、再作成を自動化するというタスクがあり自身のメモとしての記事です。
GithubActionsでの対応も検討していますが、一旦以下のようにSAMを用いたAWS Lambdaで対応しようと考えています。
コード自体もまだまだ改善の余地があるのですが、途中経過で備忘録として残すために公開しているため適宜修正します。


 前提

SAM CLIをインストール済みであること。
Pythonの基本的な文法を押さえていること。
IAMロールの作成を行うので、AWS CLI or Terraformを扱える状態にあること。
(本記事ではTer...]]></description><link>https://zenn.dev/takesaya/articles/sam_python_waf</link><guid isPermaLink="true">https://zenn.dev/takesaya/articles/sam_python_waf</guid><pubDate>Tue, 23 Jul 2024 15:27:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rvyp-nUZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DSAM%25E3%2581%25A7Lambda%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyOTExOTY4MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[DynamoDBのLocal環境を整える。理解する。]]></title><description><![CDATA[
 ゴールの絵


LocalでDynamoDBを動かす環境を整えます。GUI環境も合わせて作ります。
Localで動かしてみます。GUI、CLI、Pythonの3種類で。


 docker-compose.yaml

docker-compose.yaml
services:
  # DynamoDB Local is a client-side database that supports the complete DynamoDB API, but doesn't manipulate any tables or data in DynamoDB itself.
  dynamo...]]></description><link>https://zenn.dev/icck/articles/5707ef0dbff544</link><guid isPermaLink="true">https://zenn.dev/icck/articles/5707ef0dbff544</guid><pubDate>Tue, 23 Jul 2024 14:33:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VP9F7_aL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DynamoDB%25E3%2581%25AELocal%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:icck%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmYTRiZDQ3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>icck</dc:creator></item><item><title><![CDATA[Mac上にvenvでpythonの仮想環境を作成するまで]]></title><description><![CDATA[「AITuberを作ってみたら生成AIプログラミングがよくわかった件」の本ではAITuberの作成にpythonの環境が必要です。
本書はWindows向けに書かれているため、仮想環境の作り方の部分は少しだけMac用のやり方に修正する必要がありました。
Pythonの勉強ということでやったことを備忘録として書いていきます。

 pyenvのインストール
venvを利用するためにはまずpythonをインストールする必要があります。
ここではpyenvという色んなバージョンのpythonを管理することができるツールを使ってpythonをインストールします。
Homebrewを使ってまずはpy...]]></description><link>https://zenn.dev/kojimaro/articles/ac362a3e690bd9</link><guid isPermaLink="true">https://zenn.dev/kojimaro/articles/ac362a3e690bd9</guid><pubDate>Tue, 23 Jul 2024 11:43:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T9AMwWfq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E4%25B8%258A%25E3%2581%25ABvenv%25E3%2581%25A7python%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kojimaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiODMyYWI2ZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kojimaro</dc:creator></item><item><title><![CDATA[シンボリックリンクとは？Pythonでの活用例]]></title><description><![CDATA[
 1. はじめに
シンボリックリンク（symbolic link、シンリンク）は、ファイルシステム内で他のファイルやディレクトリへの参照を提供する特殊なファイルです。この記事では、シンボリックリンクの基本的な概念、使用方法、そしてPythonでの具体的な活用例について詳しく解説します。

 2. シンボリックリンクとは？
シンボリックリンクは、他のファイルやディレクトリへのポインタ（参照）です。これにより、異なる場所にあるファイルやディレクトリに対して、あたかも同じ場所にあるかのようにアクセスすることができます。

 2.1 ハードリンクとの違い


シンボリックリンク:

別のファイ...]]></description><link>https://zenn.dev/nuinui/articles/3f805e6bbf6a42</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/3f805e6bbf6a42</guid><pubDate>Tue, 23 Jul 2024 10:17:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qdub4n3B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%259C%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FPython%25E3%2581%25A7%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[【Python】Ryeの完全アンインストールの仕方]]></title><description><![CDATA[
 1. はじめに
Ryeは、Pythonのパッケージ管理とプロジェクト管理を簡単にするツールです。しかし、時には完全にアンインストールする必要が出てくることもあります。この記事では、Ryeを完全にアンインストールする方法を詳しく解説します。

 2. Ryeのアンインストール手順

 2.1 Ryeのアンインストールコマンド
まず、以下のコマンドを実行してRyeをアンインストールします。
rye self uninstall
このコマンドは、Ryeの主要なコンポーネントを削除します。

 2.2 Ryeの設定ファイルの削除
Ryeの設定ファイルは通常、ホームディレクトリに保存されていま...]]></description><link>https://zenn.dev/nuinui/articles/e510c3dad34493</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/e510c3dad34493</guid><pubDate>Tue, 23 Jul 2024 10:00:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cFHpaHhU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Rye%25E3%2581%25AE%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E4%25BB%2595%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[PythonのGraphQLサーバーの紹介]]></title><description><![CDATA[國忠です。
Sprocketは一部のAPIサーバーにGraphQLを利用しております。
最近業務にてPythonでGraphQLサーバーを構築する案件が発生しました。
本記事では、その際に採用するライブラリを比較検討した記録を残します。
比較検討に際し、今回注目したGraphQLに関する2つの概念について解説し、その後にライブラリごとの違いを紹介します。

 Apollo Federation
Apollo Federationは、複数のSubGraphと呼ばれるバックエンドサービスを連携させて、1つのSuperGraphと呼ばれるエンドポイントを作成できる機能です。
Apollo Fe...]]></description><link>https://zenn.dev/sprocket/articles/d910e2aade9050</link><guid isPermaLink="true">https://zenn.dev/sprocket/articles/d910e2aade9050</guid><pubDate>Tue, 23 Jul 2024 00:22:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AwpvIttY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEGraphQL%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Sprocket%2520Zenn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1ZWQxMjFmN2UuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sprocket%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyY2UxY2ZlNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sprocket Zenn</dc:creator></item><item><title><![CDATA[pandasのquery()で指定できる@ローカル変数名の謎を追う]]></title><description><![CDATA[(この記事は下記の再掲です)
https://peperon-brain.hatenablog.com/entry/2023/11/05/234708
仕事でpandasを使っていて、こんな書き方ができることを知った。
bar = 123
df_filtered = df.query('foo == @bar')
ローカル変数を参照させている。上の例ではfoo列の値が123であるデータをフィルタできる。
公式ドキュメントにもはっきり書かれている。
https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataF...]]></description><link>https://zenn.dev/poppycocker/articles/20240723-pandas-query-atmark</link><guid isPermaLink="true">https://zenn.dev/poppycocker/articles/20240723-pandas-query-atmark</guid><pubDate>Mon, 22 Jul 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2ZkSoKDL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AEquery%2528%2529%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2540%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E3%2581%25AE%25E8%25AC%258E%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:poppycocker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lma2F5NzVBV1ZYenR3SUhxdlhkOUFZN2ZmN3ZCYXJKTVJHOU42Ync9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>poppycocker</dc:creator></item><item><title><![CDATA[【Python】python3コマンドのすべてを調べてみた]]></title><description><![CDATA[
 1. はじめに
Pythonは、シンプルで強力なプログラミング言語であり、多くの開発者に利用されています。Pythonには様々なコマンドがあり、その中でも「python3」コマンドは頻繁に使用されます。この記事では、Python3コマンドの全てを詳しく調べてみました。

 2. 基本的なコマンド



コマンド
説明
使用例




python3
Python 3のインタプリタを起動します。
python3


python3 script.py
指定したPythonスクリプトを実行します。
python3 my_script.py




 3. インタプリタ関連



コマンド...]]></description><link>https://zenn.dev/nuinui/articles/0a957f2aaf01c9</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/0a957f2aaf01c9</guid><pubDate>Mon, 22 Jul 2024 21:40:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZF06NfrL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591python3%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2581%2599%25E3%2581%25B9%25E3%2581%25A6%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[【Python】pandasで、行列番号指定してエクセルのセルの値を取得する方法]]></title><description><![CDATA[
 1. はじめに
pandasは、データ操作や解析に非常に強力なPythonライブラリです。本記事では、pandasを使用してExcelファイルから特定の行番号と列番号を指定してセルの値を取得する方法について解説します。

 2. 事前準備
まず、必要なライブラリをインストールします。
pip install pandas xlrd

 3. Excelファイルの読み込み
pandasを使用してExcelファイルを読み込みます。
import pandas as pd

# Excelファイルの読み込み
df = pd.read_excel('example.xlsx')
read_e...]]></description><link>https://zenn.dev/nuinui/articles/9e5dccb71859c6</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/9e5dccb71859c6</guid><pubDate>Mon, 22 Jul 2024 21:33:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lD6ulUND--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%25E3%2581%25A7%25E3%2580%2581%25E8%25A1%258C%25E5%2588%2597%25E7%2595%25AA%25E5%258F%25B7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[Pythonのデバッグ方法]]></title><description><![CDATA[

1.1. ステップ 1: プリントステートメントを使う

1.1.1. 例



1.2. ステップ 2: Python の組み込みデバッガ（pdb）を使う

1.2.1. 基本的な使い方
1.2.2. 例


1.3. pdb の基本コマンド

1.4. ステップ 3: 外部デバッガツールの使用

1.4.1. Visual Studio Code（VSCode）のデバッガ
1.4.2. PyCharm のデバッガ



1.5. ステップ 4: ロギングを使う

1.5.1. 例



1.6. ステップ 5: ユニットテストを活用する

1.6.1. 例



1.7. プロフ...]]></description><link>https://zenn.dev/gakkie555/articles/2210f80445f823</link><guid isPermaLink="true">https://zenn.dev/gakkie555/articles/2210f80445f823</guid><pubDate>Mon, 22 Jul 2024 15:06:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xPFqlZO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gakkie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNzdkYzg2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gakkie</dc:creator></item><item><title><![CDATA[Pythonの命名規則とルール]]></title><description><![CDATA[
1.1. インデント
1.2. 行の長さ
1.3. 空白の使い方
1.4. コメント
1.5. 変数名と関数名
1.6. クラス名
1.7. 定数
1.8. インポート
1.9. ドキュメンテーション文字列（Docstrings）
1.10. 複合文（Compound Statements）
1.11. 複数のインポートを同じ行に書かない
1.12. エンプティ行（空行）
1.13. テキストのデコレータ
1.14. 一貫した戻り値の使用
1.15. アノテーション
1.16. 例外処理
1.17. パッケージとモジュールの命名
1.18. 文字列の引用符
1.19. ファイルのエンコ...]]></description><link>https://zenn.dev/gakkie555/articles/b7d89442365943</link><guid isPermaLink="true">https://zenn.dev/gakkie555/articles/b7d89442365943</guid><pubDate>Mon, 22 Jul 2024 14:23:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tMjblOB1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2581%25A8%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gakkie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNzdkYzg2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gakkie</dc:creator></item><item><title><![CDATA[Next.js を Babelで可視化したら花火みたいになった。]]></title><description><![CDATA[何年ぶりだろう。ぐらい久々にブログを書きます。
元々量子やAIが専門だったところから生成AIに振り切り、生成AIの受託や情報収集に勤しむ毎日でしたが、そろそろClaudeの力も借りながら開発領域に久々に戻りつつあるので、勉強ブログもかねて記していきます。

これが自分の作っている{マルチ並列AIエージェント, システム生成AI, 空間コンピューティング, グラフィカルAI}エディタのBabelで可視化したものです。
（本リリースではないですが、関心ある方は以下より）
https://github.com/dai-motoki/babel-v1
もともとは.gitignoreしたはずのno...]]></description><link>https://zenn.dev/daimotoki/articles/fea99d9d949330</link><guid isPermaLink="true">https://zenn.dev/daimotoki/articles/fea99d9d949330</guid><pubDate>Mon, 22 Jul 2024 13:26:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pXPKeeHw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25E3%2582%2592%2520Babel%25E3%2581%25A7%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E8%258A%25B1%25E7%2581%25AB%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%2583%25E6%259C%25A8%25E5%25A4%25A7%25E4%25BB%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2d0LU1oeUVSTkpyQXNMME5ObXNSdHIzNDEwYzVDM3dOOHFfVjlqQm0yM01yaWxBQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>元木大介</dc:creator></item><item><title><![CDATA[Semantic Kernel でバックエンドは Python & フロントエンドは C# を動かしてみる]]></title><description><![CDATA[私のポストでは何度か記載している Semantic Kernel ですが、似た用途で使われる LangChain との大きな差の一つとして C#, Python, Java で SDK を提供している点にあります。ここで試したくなったポイントが「フロントエンドは C# 側の Semantic Kernel で処理し、バックエンド側は Python 側で処理する」というユースケースです。現場での案件を見る限り、様々な形式のドキュメントを抽出・加工したうえで格納するまでの処理は Python で記載している例が多い一方、フロントエンド側は通常の業務アプリとして C# や Java で記載した...]]></description><link>https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01</guid><pubDate>Mon, 22 Jul 2024 13:01:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qD12eN7m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520%25E3%2581%25A7%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AF%2520Python%2520%2526%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AF%2520C%2523%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Daichi%2520Isami%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGF2NkRDRXVKdXRUN2VRRmI0ZDdKcmJycURONXBQNmdxNVI1NGdkZFhoY0o2Mj1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daichi Isami</dc:creator></item><item><title><![CDATA[【Python】pandasを用いて、エクセルの特定文字が入ったセルの行番号を取得する方法]]></title><description><![CDATA[
 はじめに
pandasはデータ解析に強力なライブラリであり、Excelファイルの操作にも広く利用されています。今回は、pandasを用いて、Excelファイルの特定文字が入ったセルの行番号を取得する方法について解説します。

 1. 事前準備
まず、pandasライブラリをインストールしていない場合は、以下のコマンドでインストールします。
pip install pandas

 2. Excelファイルの読み込み
まず、pandasを使用してExcelファイルを読み込みます。以下の例では、example.xlsxというファイルを使用します。
import pandas as pd
...]]></description><link>https://zenn.dev/nuinui/articles/0ebf2e73329dd9</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/0ebf2e73329dd9</guid><pubDate>Mon, 22 Jul 2024 11:07:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pVIHKlV3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E8%25A1%258C%25E7%2595%25AA%25E5%258F%25B7%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[【Python】pandasを用いて、エクセルの特定文字が入ったセルの列番号を取得する方法]]></title><description><![CDATA[
 1. はじめに
pandasはデータ解析に強力なライブラリですが、Excelファイルの操作にも利用できます。今回は、pandasを用いて、Excelファイルの特定文字が入ったセルの列番号を取得する方法について解説します。
pandasを使用してExcelファイルを操作する際、特定の文字列を含むセルを検索することができます。本記事では、セルの値が固定値で、行番号も決まっているという前提条件のもとに、この操作を実現する方法を示します。

 2. 事前準備
まず、pandasライブラリをインストールしていない場合は、以下のコマンドでインストールします。
pip install pandas...]]></description><link>https://zenn.dev/nuinui/articles/c520961db5cd39</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/c520961db5cd39</guid><pubDate>Mon, 22 Jul 2024 11:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CFrqJg2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E5%2588%2597%25E7%2595%25AA%25E5%258F%25B7%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item></channel></rss>