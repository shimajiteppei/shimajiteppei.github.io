<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 25 Jun 2024 12:03:50 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Next.jsとHono RPCで快適な開発をする]]></title><description><![CDATA[AV検索データベース（以下AVベース）というサイトを作っています。
https://www.avbase.net/
!
リンク先はNSFW

AVベースはNext.js（Pages Router）のモノリスで作っています。画面から呼び出すAPIには Next.js の API Routes を使っています。API RoutesはHTTPメソッドを自分でハンドルする必要があったり、エラーハンドリングを各ファイルごとに行う必要があったりと、そのまま使うにはあまり便利ではありません。
そこでAPI RoutesでHonoを使うことにしました。Honoは高速かつ様々なランタイムで動作することで人...]]></description><link>https://zenn.dev/eronghii/articles/9e1f0c73001f56</link><guid isPermaLink="true">https://zenn.dev/eronghii/articles/9e1f0c73001f56</guid><pubDate>Tue, 25 Jun 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_489tB7P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A8Hono%2520RPC%25E3%2581%25A7%25E5%25BF%25AB%25E9%2581%25A9%25E3%2581%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:eronghii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjODFiNmFhYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>eronghii</dc:creator></item><item><title><![CDATA[解決！AWS App RunnerとCloudFrontの404エラー問題]]></title><description><![CDATA[
 はじめに
AWSのApp RunnerをCloudFront経由で使用する際に、オリジンリクエストポリシーのOriginRequestHeaderBehaviorをallに設定すると、CloudFront経由のアクセスが全て404エラーになる問題に直面することがあります。この問題の原因と解決策について説明します。

 問題の概要
App RunnerをCloudFront経由で使用する際に、App Runnerにそのままリクエスト情報を渡すためのオリジンリクエストポリシーを設定すると、全てのリクエストが404エラーになります。
const originRequestPolicy = ...]]></description><link>https://zenn.dev/carenet/articles/69b0265479ac8c</link><guid isPermaLink="true">https://zenn.dev/carenet/articles/69b0265479ac8c</guid><pubDate>Tue, 25 Jun 2024 09:20:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--05FJsCrR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A7%25A3%25E6%25B1%25BA%25EF%25BC%2581AWS%2520App%2520Runner%25E3%2581%25A8CloudFront%25E3%2581%25AE404%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:toshihide%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNzNRMUp6WTk2Vlk1YmR4R2RyVVFETEhrSVpBN1h1c250Zkp5SFI9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toshihide</dc:creator></item><item><title><![CDATA[AWS App RunnerをCloudFront経由で安全に使用する方法]]></title><description><![CDATA[
 はじめに
AWSのApp RunnerをCloudFront経由で使用する際に、CloudFrontからのアクセスのみを許可したい場合があります。これを実現するためには、CloudFrontからのアクセスに含まれる特定のヘッダーキーに合致する場合のみ許可するWAF（Web Application Firewall）をApp Runnerに適用することが効果的です。

 手順

 1. WAFの作成
以下のようなルールを設定します。この例では、X-Custom-Headerというヘッダーの値がxxx-yyy-zzzとなっているかどうかをチェックしています。実際に設定するヘッダーの値は複...]]></description><link>https://zenn.dev/carenet/articles/7b643a563b15f1</link><guid isPermaLink="true">https://zenn.dev/carenet/articles/7b643a563b15f1</guid><pubDate>Tue, 25 Jun 2024 09:20:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9UEVOhkE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520App%2520Runner%25E3%2582%2592CloudFront%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:toshihide%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNzNRMUp6WTk2Vlk1YmR4R2RyVVFETEhrSVpBN1h1c250Zkp5SFI9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toshihide</dc:creator></item><item><title><![CDATA[react-hook-formのuseWatchまわりでハマった際の記録]]></title><description><![CDATA[
 概要
先日react-hook-formのuseWatch周りで試行錯誤するケースがあったため、備忘録がてら記録に残しておこうと思います。

 useWatchとは
公式Documentは下記になります。
https://react-hook-form.com/docs/usewatch
Formの変更内容を検知するためのカスタムフックです。useFormの戻り値として得られるwatchという関数も似たような用途に使えますが、useWatchの方がレンダリングの範囲を狭められるためパフォーマンス的に優れているようです。

 使用例
※公式Documentより抜粋

example
i...]]></description><link>https://zenn.dev/cureapp/articles/0decac3ea3e597</link><guid isPermaLink="true">https://zenn.dev/cureapp/articles/0decac3ea3e597</guid><pubDate>Tue, 25 Jun 2024 07:35:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--736HrjyP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react-hook-form%25E3%2581%25AEuseWatch%25E3%2581%25BE%25E3%2582%258F%25E3%2582%258A%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Maeda%252C%2520Kazuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MThkMWZlMzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CureApp%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pLV2lSOFptZFhyZXFqNkFjMUJFZUJub2FIUU40Ukh6RFZkWElkN0hRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maeda, Kazuya</dc:creator></item><item><title><![CDATA[MapLibre GL JSでVue3コンポーネントをポップアップに表示する]]></title><description><![CDATA[MapLibreで地図上にポップアップを表示する場合、setHTML内でDOMを文字列として与えるとポップアップ内容として表示することができます。

（MapLibre 公式による例）

このDOM内容をVueコンポーネントで置き換えるための方法です。

 概要

Vue3のcreateAppでVueアプリケーションを作成
MapLibreのsetDOMContentでポップアップに追加


 全体のコード
地図上をクリックするとその座標をポップアップ表示するコードです。

 MapLibreMap.vue - MapLibreを表示するコンポーネント

MapLibreMap.vue
...]]></description><link>https://zenn.dev/sk0540/articles/10feacdb488887</link><guid isPermaLink="true">https://zenn.dev/sk0540/articles/10feacdb488887</guid><pubDate>Tue, 25 Jun 2024 05:29:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3MXxPLev--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MapLibre%2520GL%2520JS%25E3%2581%25A7Vue3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2583%259D%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sk0540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNGFjZTYxNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sk0540</dc:creator></item><item><title><![CDATA[Expo AVで音を鳴らしますよ！]]></title><description><![CDATA[
 はじめに
こんにちは！
今回社内プロダクトで、音を鳴らす仕様を僕が担当することになったので、ライブラリの選定基準や実装方法についてまとめました。 (今後も新しくReact Nativeで学んだことは記事にしていければなと思っています👀)
まずコード見たい！！って方はこちら

 使用するライブラリを決めよう！
「音の鳴らし方ってどうすんねやろ??」　って思った時に、最初はライブラリを使わなくても、React Native標準で音を鳴らすための機能があるのではないかと思っていましたが、標準では機能がなかったのでライブラリを探すことにしました！

まずは音が鳴らせるライブラリを３種類ピック...]]></description><link>https://zenn.dev/gemcook/articles/ab959ebe7b5500</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/ab959ebe7b5500</guid><pubDate>Tue, 25 Jun 2024 03:39:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wuEbflWr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Expo%2520AV%25E3%2581%25A7%25E9%259F%25B3%25E3%2582%2592%25E9%25B3%25B4%25E3%2582%2589%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25E3%2582%2588%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A6%25E3%2582%2593%25E3%2582%2580%25E3%2581%2599%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDOVl3NGNrMndZZXFVWWE1eWZrdkpHUURmNFJCNGFwN1FIUGVLPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てんむす</dc:creator></item><item><title><![CDATA[Typescript や分割代入を使った複雑な引数を解読する]]></title><description><![CDATA[分割代入はJavaScriptの機能で、オブジェクトのプロパティを個別の変数として取り出すことができる機能です。例えば
const user = { name: 'Bob', age: 20 };
// これを name = 'Bob', age = 20 という変数として取り出したい場合以下のようにして取ることができる

const name = user.name
const age = user.age

// これを分割代入を使うことで、以下のように変数を定義できる
const { name, age } = user;
console.log(name); // 'Bob'
c...]]></description><link>https://zenn.dev/surume3/articles/679e6f90511ffc</link><guid isPermaLink="true">https://zenn.dev/surume3/articles/679e6f90511ffc</guid><pubDate>Tue, 25 Jun 2024 00:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cw0mpAU_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%2520%25E3%2582%2584%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E5%25BC%2595%25E6%2595%25B0%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syumai3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MzZlZGI2OWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syumai3</dc:creator></item><item><title><![CDATA[router.refresh() が何をしているのか理解する]]></title><description><![CDATA[
 公式によると...
https://arc.net/l/quote/jxtudbaj

router.refresh(): 現在のルートを更新します。サーバーに新しいリクエストを行い、データリクエストを再取得し、Server Component を再レンダリングします。クライアントは、更新された React Server Component のペイロードを、影響を受けないクライアント側の React（useState など）やブラウザの状態（スクロール位置など）を保持したままマージします。

上記内容を箇条書きでまとめると以下の通りになります。

現在のルートを更新する
サーバーに新...]]></description><link>https://zenn.dev/yuu104/articles/nextjs-router-refresh</link><guid isPermaLink="true">https://zenn.dev/yuu104/articles/nextjs-router-refresh</guid><pubDate>Mon, 24 Jun 2024 23:58:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3rHKnBwK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:router.refresh%2528%2529%2520%25E3%2581%258C%25E4%25BD%2595%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjMGVjMzFlNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu</dc:creator></item><item><title><![CDATA[TypeScriptでのフィルタとマップのネストによるパフォーマンス問題と最適化]]></title><description><![CDATA[
 TypeScriptでのフィルタとマップのネストによるパフォーマンス問題と最適化

 はじめに
TypeScriptでのデータ操作において、filterやmapを使用することは一般的ですが、これらをネストして使用するとパフォーマンスに影響を及ぼすことがあります。特に、大規模なデータセットを扱う場合は、不要なループが増えることで処理速度が低下することがあります。本記事では、ネストされたfilterとmapの使用を避ける方法について解説します。

 フィルタとマップのネストが重たい理由
filterやmapをネストすると、それぞれの関数呼び出しごとに配列全体を再度走査するため、処理が重く...]]></description><link>https://zenn.dev/aipics/articles/940bc572d688fa</link><guid isPermaLink="true">https://zenn.dev/aipics/articles/940bc572d688fa</guid><pubDate>Mon, 24 Jun 2024 13:32:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hyg9lk4t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2581%25A8%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nakatsuka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNTU3NTQyNzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aipictors%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDNBRkJWT3p2VERZeVpfbkNLOXE1QmRidk5ySUNEUjIwZmhUNUJVLVc0eGc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakatsuka</dc:creator></item><item><title><![CDATA[Next.jsのvideoの埋め込みについて]]></title><description><![CDATA[
 経緯
Next.jsで動画配信サービスを遊び程度に作成しようと思って、調べていたらNext.jsの公式ドキュメントにvideo optimization(ビデオ最適化:ビデオの表示の仕方などについて)に関する記事があったので、誰かの役に立てばと思い記事にしました。

 videoタグ
個人的にとった動画など、mp4形式に使う
&lt;video src="/path/to/video.mp4" width="320" height="240" autoPlay /&gt;

 ビデオプレーヤー属性



属性名
説明
例




src
ビデオファイルのソースを指定します
&lt;v...]]></description><link>https://zenn.dev/maiamitorio/articles/d01bcde2f84879</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/d01bcde2f84879</guid><pubDate>Mon, 24 Jun 2024 06:44:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7hEm0Gwn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AEvideo%25E3%2581%25AE%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[【実践】React 100本ノック No.2：Counter]]></title><description><![CDATA[
 はじめに
こんにちは！@haganenoubik（アライ リョータ）です。
現在、ReactとTypeScriptを学習中です。
今回は、シンプルなカウンターアプリを作成することで、Reactの基本的な使い方を学びます。
前回に引き続き、アウトプット主体でReactへの理解度を深めるために、下記のQiita記事シリーズを参考に、課題のミニアプリを作成していきます。
https://qiita.com/Sicut_study/items/3c5cd798313854a471a0
前回はこちら ↓
https://zenn.dev/haganenoubik/articles/a7d896...]]></description><link>https://zenn.dev/haganenoubik/articles/99a27828c807cf</link><guid isPermaLink="true">https://zenn.dev/haganenoubik/articles/99a27828c807cf</guid><pubDate>Mon, 24 Jun 2024 05:44:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kvqvdLgc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%259F%25E8%25B7%25B5%25E3%2580%2591React%2520100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%2520No.2%25EF%25BC%259ACounter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%2520%25E3%2583%25AA%25E3%2583%25A7%25E3%2583%25BC%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjN2FiMjdlODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アライ リョータ</dc:creator></item><item><title><![CDATA[神戸でKobe.tsというTypeScriptコミュニティを立ち上げた話]]></title><description><![CDATA[
 Kobe.tsとは
TypeScriptとその周辺知識についての勉強会を開催していくコミュニティです。
なので、フロントエンドに限らず、node.js, Deno, Nest,js, Freshなどのバックエンドや、Firebase,CloudflareなどのSaaS、npm,pnpm,Biome,tailwindCSS,Figmaなども取り扱うトピックの範囲です。
記事執筆時点でですが、立ち上げから3週間で既にメンバーが75人になりました。

 神戸在住な方に限らず、ぜひメンバーになるボタンだけでも押していってください！！！
https://kobets.connpass.com/...]]></description><link>https://zenn.dev/bs_kansai/articles/98cd4a69c34db6</link><guid isPermaLink="true">https://zenn.dev/bs_kansai/articles/98cd4a69c34db6</guid><pubDate>Mon, 24 Jun 2024 05:40:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R-4g0I3F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A5%259E%25E6%2588%25B8%25E3%2581%25A7Kobe.ts%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586TypeScript%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMDEzZTI2ODYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kobe.ts%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQ5MmViYmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[StrapiのRich text (Block)を呼び出す]]></title><description><![CDATA[
 目的
Strapiの詳細ページで記事のコンテンツを表示する際に詰まったので、共有できたらと思い記事を書きました！
ベースのサンプルなので、スタイリングなどはしていないです。
少しでも参考になったら嬉しいです🙌🏼

 Strapiとは
https://strapi.io/

オープンソースのHeadless CMS
カスタマイズ性が高いのが特徴
自社サーバーでセルフホスティングできれば無料
SaaSのcloudサービスもある


 Rich text (Block)とは

Rich textは、見出しタグ、テキスト、リンク、画像、リストなど様々な要素が入ってくる
Rich text (...]]></description><link>https://zenn.dev/m_suzuki/articles/259f4f3a90b3e3</link><guid isPermaLink="true">https://zenn.dev/m_suzuki/articles/259f4f3a90b3e3</guid><pubDate>Mon, 24 Jun 2024 04:20:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6dAPaU0f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Strapi%25E3%2581%25AERich%2520text%2520%2528Block%2529%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:max%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeVVZaUN2Y3J4QWVTc3dIb2xQeDJFTE03NFlUeENhMlNZYUJjSTU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>max</dc:creator></item><item><title><![CDATA[Prismaで実行されるSQLを確認する]]></title><description><![CDATA[export const prisma = new PrismaClient({
  log: ["query"],
});
参考
https://www.prisma.io/docs/orm/prisma-client/observability-and-logging/logging
https://www.prisma.io/docs/orm/reference/prisma-client-reference#log-levels
]]></description><link>https://zenn.dev/purratto/articles/011e0392a746d4</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/011e0392a746d4</guid><pubDate>Mon, 24 Jun 2024 03:09:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xGSnXQtZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258BSQL%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[CDKTFのTerraform StateをCloudflare R2で管理する]]></title><description><![CDATA[こんにちは。
元々は AWS メインで使っていたのですが、最近何かと Cloudflare を使う機会が増えてきた筆者です。
Cloudflare のリソースを作成する途中で CDKTF の Terraform State （以下 tfstate）を Cloudflare R2 で管理するために色々調べたので、調査結果を紹介します。
元々は S3 バケットに tfstate を置いていたのですが、そのためだけに AWS 環境を間借りするのももったいないので R2 に移行したいなーと考えていました。
CDKTF や Terraform の解説は公式ドキュメントを参照してください。
Clou...]]></description><link>https://zenn.dev/gemcook/articles/49ea5334d57249</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/49ea5334d57249</guid><pubDate>Mon, 24 Jun 2024 03:06:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a1Rl-r1T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDKTF%25E3%2581%25AETerraform%2520State%25E3%2582%2592Cloudflare%2520R2%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:soso%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmODE2ZDZkNWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soso</dc:creator></item><item><title><![CDATA[TypeScriptにおける変性、変性アノテーションてなんすか？]]></title><description><![CDATA[最近OSSのコードを見ていた時に、
👀 「これなんすか？」
↓
class A&lt;in out T&gt;{...} 
となったので、これ について調べてみました。
※ これ は今回の記事のテーマでもある、変性アノテーション です。
ドキュメントとリリースノートをちゃんと読んでいる人からしたら何でもない内容かもしれないですが、せっかく調べたので記事にしました。
TypeScriptにおける変性、変性アノテーションについて学びたい人の役に立てば嬉しいです（？）

 想定読者

変性ってなんすか？てなった人
TypeScriptの in（in演算子ではない）, outってなんすか？てなっ...]]></description><link>https://zenn.dev/chillnn_tech/articles/ts-variance-annotations</link><guid isPermaLink="true">https://zenn.dev/chillnn_tech/articles/ts-variance-annotations</guid><pubDate>Mon, 24 Jun 2024 00:29:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bfBeHVSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E5%25A4%2589%25E6%2580%25A7%25E3%2580%2581%25E5%25A4%2589%25E6%2580%25A7%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KIO%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmODdhZGU3ZjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CHILLNN%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MzZhYWU5MzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KIO</dc:creator></item><item><title><![CDATA[OpenAPIで異なるレスポンスを返せるoneOfが便利]]></title><description><![CDATA[OpenAPI初心者の @zaru です、こんにちは。この記事ではOpenAPIのoneOfという便利な機能を紹介します。ぼくはOpenAPI歴数ヶ月ですが、今まで知らなかったのを悔やむレベルです。
!
oneOfはOpenAPI v3.0から提供されています


 oneOfとは
簡単に言うと、同じEndpointでも異なるフォーマットのレスポンスが返せる・あるいはリクエストデータを受け付けることができる機能です。別の言い方をすると XOR 排他的論理和 です。
例えば、ユーザ情報を取得するEndpointで、対象リソースが「個人ユーザ」もしくは「法人ユーザ」の2通りどちらかが返ってく...]]></description><link>https://zenn.dev/moozaru/articles/c60b53826aa3bf</link><guid isPermaLink="true">https://zenn.dev/moozaru/articles/c60b53826aa3bf</guid><pubDate>Sun, 23 Jun 2024 22:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wm5tLsZL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAPI%25E3%2581%25A7%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258B%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E8%25BF%2594%25E3%2581%259B%25E3%2582%258BoneOf%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:zaru%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiNDkwNTdmZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25AB%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25AD%25E3%2582%258B%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hTeWVOcHN2TEdOdTdPeUFlU1JEbDhUNkNOX1p3NHBXSHpIRHN2NlBFPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zaru</dc:creator></item><item><title><![CDATA[大量のコードを TypeScript の AST で一気に置き換えよう]]></title><description><![CDATA[
 はじめに
最近数百ファイルに同内容の変更を加える必要があったのですが、ファイルに応じて動的に変わる部分があることから、単純な置換では対応できずどうしようかと悩んでいました。
そんな時 TSKaigi の以下の発表を思い出し、TypeScript の AST を使って一気に置き換える方法を試してみました。
https://speakerdeck.com/yanaemon/typescript-nochou-xiang-gou-wen-mu-woyong-ita-shu-bai-wochao-eru-api-noda-gui-mo-rihuakutaringuzhan-lue

 変換対...]]></description><link>https://zenn.dev/hakshu/articles/replace-ts-code-by-ast</link><guid isPermaLink="true">https://zenn.dev/hakshu/articles/replace-ts-code-by-ast</guid><pubDate>Sun, 23 Jun 2024 15:24:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Af7GHBG3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E9%2587%258F%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%2520TypeScript%2520%25E3%2581%25AE%2520AST%2520%25E3%2581%25A7%25E4%25B8%2580%25E6%25B0%2597%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hakshu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZThmM2M3NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hakshu</dc:creator></item><item><title><![CDATA[【Mac】VScode 厳選ショートカット集]]></title><description><![CDATA[こんにちは。zenn初めましてのなかじです。
昨年末、会社の先輩のアウトプットしてみよう！という啓発に触れ、何かアウトプットをしてみたいとは思ったものの、でも何すればいいんだろ？と悶々として半年が経ってしまいました。
あまり悩まないでサクサク書いた方がいいのだろうとふと思いたち、
とりあえずいつも忘れるVSCodeのショートカットをまとめておいて、自分で使いたいものだけ確認できる場所を作っておこう！となりました。
下記、Mac＋US配列でのショートカット集となります。

 ジャンプ系
カーソルジャンプ系をまとめています。

 行頭・行末へジャンプ
Cmd + ← | →

 単語の先頭へ...]]></description><link>https://zenn.dev/penguinpanda/articles/4f560f289df1a9</link><guid isPermaLink="true">https://zenn.dev/penguinpanda/articles/4f560f289df1a9</guid><pubDate>Sun, 23 Jun 2024 13:55:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kb2U_PaH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Mac%25E3%2580%2591VScode%25C2%25A0%25E5%258E%25B3%25E9%2581%25B8%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kajieeeee%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMzkzMWFmZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kajieeeee</dc:creator></item><item><title><![CDATA[Try catch文の意味について簡単に説明]]></title><description><![CDATA[
 導入
try catch文って何のためにあるのだろうと思ったことはありませんか？
手短に説明します。

 使用場面
try catchで予期しないエラーが発生する可能性があるコードに使う
下記のような場合(絶対ではないが)



使用場面
データベースからデータをとってくるとき
server側の処理




 コードで考える
平均を求めるプログラムを考えます
y:得点
x:人数
try{
if(x===0){
throw new Error('0が入っている');
}
let avg:number=y/x;
console.log('平均点'+avg);
}catch(e){
con...]]></description><link>https://zenn.dev/maiamitorio/articles/fcee42472410af</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/fcee42472410af</guid><pubDate>Sun, 23 Jun 2024 12:32:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uyjeIEwt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Try%2520catch%25E6%2596%2587%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item></channel></rss>