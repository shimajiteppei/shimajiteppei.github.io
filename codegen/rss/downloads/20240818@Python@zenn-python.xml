<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 18 Aug 2024 04:14:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Python】仮想環境で「No module named 'XXX'」が出たら再アクティブ化を試す]]></title><description><![CDATA[Pythonで仮想環境でpip install XXXを行ったときに、ModuleNotFoundError: No module namedが出てしまうことがありました。
今回はその時の対処法メモです。

 今回の問題: Pythonで仮想環境でNo moduleエラーが出る
下記のように正しくインストールしているにも関わらずエラーが出てしまう場合がありました。

仮想環境もアクティブになっている
正しい名称でインストールしている

No module named 'XXX'

 解決法: 仮想環境に入り直す
仮想環境がインストール済みのモジュールを正しく認識していない可能性があり、仮...]]></description><link>https://zenn.dev/buenotheebiten/articles/ce4b00f6acf087</link><guid isPermaLink="true">https://zenn.dev/buenotheebiten/articles/ce4b00f6acf087</guid><pubDate>Sun, 18 Aug 2024 02:06:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7sZMuz1q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%258CNo%2520module%2520named%2520%2527XXX%2527%25E3%2580%258D%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259F%25E3%2582%2589%25E5%2586%258D%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E5%258C%2596%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えびてん</dc:creator></item><item><title><![CDATA[Python 基礎文法の教科書]]></title><description><![CDATA[本書はPythonチュートリアル（公式のドキュメント）記載の内容を踏まえ、文法において理解必須の部分をなるべく分かりやすくまとめました。

この本の対象者はPythonを学びたい初学者の方となります。
無料で公開しているチャプターもありますので、ぜひ一度内容をご確認いただければと思います。]]></description><link>https://zenn.dev/python_academia/books/6df147d8b82939</link><guid isPermaLink="true">https://zenn.dev/python_academia/books/6df147d8b82939</guid><pubDate>Sun, 18 Aug 2024 00:18:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q4gLJDGp--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wZTliNjcyODc5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Pythonアカデミア</dc:creator></item><item><title><![CDATA[Slack Bot を Lambda に移行してみる]]></title><description><![CDATA[Zenn 読者の皆さん、こんにちは。
今回は Slack Bot を Lambda への移行したときの話を紹介したいと思います。

 本記事のサマリ

ローカルPC上で動いていた Slack Bot を Lambda(Sererless Framework) に移行した
Slack Bolt を使ってサクッと移行できたものの、Slack の3秒ルールへの考慮が必要となり、結局 Python で作り直した
Lambda 化や Python 化に至るまでに発生したいくつかのトラブルを紹介


今回実現した Chatbot の構成です。

 はじめに
弊社では、Slack 上で利用できる Op...]]></description><link>https://zenn.dev/dotdtech_blog/articles/237a99f6f92449</link><guid isPermaLink="true">https://zenn.dev/dotdtech_blog/articles/237a99f6f92449</guid><pubDate>Sun, 18 Aug 2024 00:11:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L-vtyuv---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%2520Bot%2520%25E3%2582%2592%2520Lambda%2520%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:a2-ito%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNTMxNmU4NDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:dotDTechBlog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3ODkyNmJlMDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>a2-ito</dc:creator></item><item><title><![CDATA[Pythonのproduct関数で全数列パターン列挙できる【AtCoder Beginner Contest 367 振り返り（茶）】]]></title><description><![CDATA[こんにちは。ダイの大冒険ガチ勢のbun913と申します。
皆さんはAtCoderという競技プログラミングに気軽に参加できるサービスをご存知でしょうか？
https://atcoder.jp/
競プロと聞くと一見とっつきにくいですが、普段プログラミングができない方でも「このくらいのデータ量なら素直にデータを全列挙すれば2秒以内にプログラムは終わるはず」と浸れるので、とてもおすすめです。
まったく参加したことのない方でも、以下のような記事を見るだけで簡単な問題を解けるようになりますので、興味があればぜひ見てください。
https://qiita.com/drken/items/fd4e5e3...]]></description><link>https://zenn.dev/moneyforward/articles/4fd3baaaa381b8</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/4fd3baaaa381b8</guid><pubDate>Sat, 17 Aug 2024 14:33:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O4JNYbhT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEproduct%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A7%25E5%2585%25A8%25E6%2595%25B0%25E5%2588%2597%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%2588%2597%25E6%258C%2599%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2590AtCoder%2520Beginner%2520Contest%252036...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bun913%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNGVhMDEyMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bun913</dc:creator></item><item><title><![CDATA[PandasからPolarsへ移行する時困ったこと(Excelでのヘッダー指定編)]]></title><description><![CDATA[Excelのファイルからデータを読みデータフレームを格納する際にPandasとPolarsではヘッダーの指定の仕方が異なり、詰まったので記録しておこうと思う。
[経緯]
polarsの公式ドキュメントの方法(has_header)でヘッダー指定すると、行が消え列名に指定したい行も消えてしまうため解決策を探した。英語記事で該当記事を見つけたが日本語記事が見当たらなかった(多分)ので対処法を書きました。
[結論]
◻︎Pandasだと
df = pd.read_excel("excel.xlsx", header=9)
だが、
◻︎Polarsだと
df = pl.read.excel("e...]]></description><link>https://zenn.dev/amana/articles/54b74bc1e70cac</link><guid isPermaLink="true">https://zenn.dev/amana/articles/54b74bc1e70cac</guid><pubDate>Sat, 17 Aug 2024 12:32:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--__oBliCM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2581%258B%25E3%2582%2589Polars%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2528Excel%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2598%25E3%2583%2583%25E3%2583%2580%25E3%2583%25BC%25E6%258C%2587%25E5%25AE%259A%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXl5YnE2MF9NVW5SaXNqUm15RGs2YVpFcmxQM1pKYlhQOER3aWI4NXdqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[【Python】Ollama 向けにAI Chat UIを作成してみた]]></title><description><![CDATA[
 はじめに
ローカルLLMでは主にOllamaを使っていますが、gemma2などのモデルを試す時に自作のチャットUIがあったらいいなと思って、AIと一緒に作成してみました。このアプリはPythonでLangChainを使用し、UIはcustomtkinterを使っています。

モデル選択はollama listで取得したものが選択できます。

 環境

Mac mini M2 16GB
python 3.11.6
LangChain 0.2.14


 インストール
venv で環境作成してからインストール
pip install langchain langchain-communi...]]></description><link>https://zenn.dev/nari007/articles/f081d56631c879</link><guid isPermaLink="true">https://zenn.dev/nari007/articles/f081d56631c879</guid><pubDate>Sat, 17 Aug 2024 11:41:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OqvryJDO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Ollama%2520%25E5%2590%2591%25E3%2581%2591%25E3%2581%25ABAI%2520Chat%2520UI%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjZGExNTUwODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YP</dc:creator></item><item><title><![CDATA[ローカルからGemini APIのファインチューニングを行う]]></title><description><![CDATA[ローカルから「Gemini API」のファインチューニングを行うための備忘録です。
google colabとさほど変わらないですが、補足情報を追加しています。

 準備
「Gemini API」のファインチューニングを行うために、以下の準備を行います。

 1. client_secret.jsonの取得
Gemini APIのファインチューニングを行うにはOAuth認証が必要です。そのため、Google Cloud Platformの認証情報を取得します。
以下公式より引用＋一部修正


 1. API を有効にする
Google API を使用する前に、Google Cloud プ...]]></description><link>https://zenn.dev/gunjo/articles/6d0f8d52a58d57</link><guid isPermaLink="true">https://zenn.dev/gunjo/articles/6d0f8d52a58d57</guid><pubDate>Sat, 17 Aug 2024 10:07:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EDM0pIMz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589Gemini%2520API%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2595%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjMTllMGFhYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むさし</dc:creator></item><item><title><![CDATA[StreamlitでEDINETから有価証券報告書をダウンロードして分析するWEBアプリをサクっとつくろう]]></title><description><![CDATA[Pythonで簡単にWEBアプリケーションが作成できるStreamlitを使ってEDINETから有価証券報告書などをダウンロードしてグラフ化するWEBアプリケーションを作成してみました。

 作ったアプリ


 仕組みの解説


 技術要素
今回のアプリはEDINET APIを主に使用するのですが以下の組み合わせでアプリを作成します



取得対象
取得方法
解説




EDINETコードリスト(会社リスト)
APIなし　直接ダウンロード ※1
中身はEdinetcodeDlInfo.csv


書類一覧
書類一覧API ※2
会社指定が不可能なので日付を指定してダウンロード


有価...]]></description><link>https://zenn.dev/akb428/articles/7c1c05d3cc1e21</link><guid isPermaLink="true">https://zenn.dev/akb428/articles/7c1c05d3cc1e21</guid><pubDate>Sat, 17 Aug 2024 06:35:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w0L36CNc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7EDINET%25E3%2581%258B%25E3%2582%2589%25E6%259C%2589%25E4%25BE%25A1%25E8%25A8%25BC%25E5%2588%25B8%25E5%25A0%25B1%25E5%2591%258A%25E6%259B%25B8%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258BWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AKB428%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhYTU4NTU4NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AKB428</dc:creator></item><item><title><![CDATA[SwitchBot Color BulbをPython × BLEで制御するよ]]></title><description><![CDATA[
 💭 ふりかえり
https://zenn.dev/gaimo_ch/articles/45ea37e1b281d3
以前、Python × SwitchBot API 1.1でColor Bulbを制御できるようにしました。
その後、日常で運用していましたが、問題点が浮き彫りになってきました。
・遅延が5秒程度ある。
・反応しない(エラーが発生する)場合がある。
・インターネットに接続されていないと制御できない。
どうしても一旦はWebを経由するため、この運用方法では不安定になりがちでした。

 📡 SwitchBotAPI BLE
https://github.com/OpenWo...]]></description><link>https://zenn.dev/gaimo_ch/articles/3d5d2ad7ef5e91</link><guid isPermaLink="true">https://zenn.dev/gaimo_ch/articles/3d5d2ad7ef5e91</guid><pubDate>Fri, 16 Aug 2024 15:57:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8VbRkT6M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SwitchBot%2520Color%2520Bulb%25E3%2582%2592Python%2520%25C3%2597%2520BLE%25E3%2581%25A7%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2581%2584%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2M2JhZjk2MjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>がいも</dc:creator></item><item><title><![CDATA[【Python】ラムダの書き方、使用例(AWSのLambda関数ではない)]]></title><description><![CDATA[

 Pythonの書き方におけるラムダとは？

一行で短い関数を定義できるような書き方。
特に関数を一度しか使わない場合や、非常に単純な処理を行う場合にコードを簡潔に保てる。


 基本的なコード例

 ラムダを使用しない場合

関数を無駄に書いてしまうので、コード量が多くなり可読性が落ちる。

l = ["Mon","tue","wed","Thu","fri","Sat","sun"]

def basic(list_args,context):
    for list_arg in list_args:
        print(context(list_arg))

# 複...]]></description><link>https://zenn.dev/takesaya/articles/python_lambda</link><guid isPermaLink="true">https://zenn.dev/takesaya/articles/python_lambda</guid><pubDate>Fri, 16 Aug 2024 15:05:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gnC1bDhz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2580%2581%25E4%25BD%25BF%25E7%2594%25A8%25E4%25BE%258B%2528AWS%25E3%2581%25AELambda%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyOTExOTY4MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[ReDoS対策（re2の紹介）]]></title><description><![CDATA[
 導入
正規表現に対する攻撃として、ReDoSというものがあります。これは正規表現にマッチングさせる入力文字列によって、バックトラッキング[1]が大量に発生したり、量指定子が入れ子になることで組み合わせ爆発を起こしたりすることにより計算量が爆発する脆弱性を突いた攻撃です。
Webアプリケーションにおいては、外部からの入力に対して正規表現をマッチングさせる場合に問題になり得ます。

 対策
メモ化によってマッチングを高速化するなど、自前で実装するのも一つの手段だと思います[2]。
https://techlife.cookpad.com/entry/2022/12/12/162023
他...]]></description><link>https://zenn.dev/optimind/articles/avoid-redos-google-re2</link><guid isPermaLink="true">https://zenn.dev/optimind/articles/avoid-redos-google-re2</guid><pubDate>Fri, 16 Aug 2024 15:04:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c3rtmvnK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReDoS%25E5%25AF%25BE%25E7%25AD%2596%25EF%25BC%2588re2%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_shunsuke%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjY2ZmM2Q5YzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OPTIMIND%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxM2YzZjlhMjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_shunsuke</dc:creator></item><item><title><![CDATA[【EDA】How to plot correlation of DataFrame columns]]></title><description><![CDATA[
 Plot correlation
This time, introduce how to plot the correlation of columns of dataframe.

It's so useful. Try it to visualization and data analysis.
def plot_target_correlation(
    df: pd.DataFrame,
    target_col: str = 'target',
    n_top_features: int = 30,
    color_sequence: list[str] |...]]></description><link>https://zenn.dev/yuto_mo/articles/e2b408f245aa5d</link><guid isPermaLink="true">https://zenn.dev/yuto_mo/articles/e2b408f245aa5d</guid><pubDate>Fri, 16 Aug 2024 14:45:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2mdXdAIG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590EDA%25E3%2580%2591How%2520to%2520plot%2520correlation%2520of%2520DataFrame%2520columns%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu</dc:creator></item><item><title><![CDATA[【Python】クロージャーの挙動]]></title><description><![CDATA[

 1.クロージャーとは？

関数内で定義された内部関数が、外部関数のスコープにある変数にアクセスできる性質を持つ関数のこと。
外部にある変数をクロージャー内に「閉じ込めて」保持することで、外部関数が終了した後でも、その変数を使うことができる。
 


 2.基礎編コード
# 以下の場合、「inner_function()」がクロージャーになる。
# outer_function()が終了していても、「inner_function()」の中で`msg`の値は保持される。
def outer_function(msg):
    def inner_function(): 
      ...]]></description><link>https://zenn.dev/takesaya/articles/python_kuroja</link><guid isPermaLink="true">https://zenn.dev/takesaya/articles/python_kuroja</guid><pubDate>Fri, 16 Aug 2024 10:29:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4Bg9MDda--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyOTExOTY4MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[Amazon CodeCatalystのCI/CDでpytestを実行する]]></title><description><![CDATA[
 １．はじめに
今回はCodeCatalystのCI/CD機能を使ってPythonの単体テスト（pytest）を実行してみました。
CodeCatalystの概要や利用までの初期設定は以下参考にしてもらえればと思います。
https://zenn.dev/is0383kk/articles/b2996a842397b4

 ２．CodeCatalystのワークフローの作成
はじめに、CodeCatalystの画面を操作しワークフローを作成していきます。

 ■ CodeCatalystでの画面操作
「CI/CD」→「Workflow」画面に遷移し、「Create workflow」をク...]]></description><link>https://zenn.dev/is0383kk/articles/81b321c790cade</link><guid isPermaLink="true">https://zenn.dev/is0383kk/articles/81b321c790cade</guid><pubDate>Fri, 16 Aug 2024 09:48:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jCyfkDlB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520CodeCatalyst%25E3%2581%25AECI%252FCD%25E3%2581%25A7pytest%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZDIwMDdjOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨ</dc:creator></item><item><title><![CDATA[【Python】デコレーターの挙動]]></title><description><![CDATA[

 デコレーターの使い方

 デコレーターとは?

関数の中で別の関数を呼び出す際に前後に処理を追加したり呼び出す側で定義自体を変更することなく、関数を呼び出せることで関数の動作を拡張できる機能。


 @を使用せず手動で適用する場合
def my_decorator(func):
    def wrapper():
      print("start")
      func()
      print("stop")
    return wrapper

def say_hello():
    print("Hello!")

# 手動でデコレーターを適用
say_hell...]]></description><link>https://zenn.dev/takesaya/articles/python_decorator_kuroja</link><guid isPermaLink="true">https://zenn.dev/takesaya/articles/python_decorator_kuroja</guid><pubDate>Fri, 16 Aug 2024 01:36:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Kj9IDyM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyOTExOTY4MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[GoogleCalendarのイベントをGoogleAPIを使って取得する]]></title><description><![CDATA[

 はじめに
■モチベーション

自前のWebアプリケーションから、GoogleCalendarに登録しているイベント情報を取得したい。

→この記事では、PythonコードでGoogleCalendarAPIを使って、検証目的でGoogleCalendarに登録しているイベント情報を取得する方法を解説します。

 前提

実行環境：VSCode
Python：3.11


 GoogleAPIの設定
まず、GoogleAPIを使うためにGoogleCloudコンソールでプロジェクトを作成し、GoogleCalendarAPIを有効化し認証周りを設定します。

 プロジェクト作成
Go...]]></description><link>https://zenn.dev/nomhiro/articles/google-calendar-api</link><guid isPermaLink="true">https://zenn.dev/nomhiro/articles/google-calendar-api</guid><pubDate>Fri, 16 Aug 2024 01:14:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--upyez42---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleCalendar%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592GoogleAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0YmFmOGY4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくま</dc:creator></item><item><title><![CDATA[ChartBoost/ruff-action で ruff v0.5.0 以降を利用する場合のTIPS]]></title><description><![CDATA[
 背景
ruff v0.5.0 で　ruff &lt;path&gt; コマンドが deprecated となったため、ChartBoost/ruff-action を利用している場合、error: ruff &lt;path&gt; has been removed. Use ruff check &lt;path&gt; instead. といったエラーが発生し、正常に動作しない
https://github.com/astral-sh/ruff/releases/tag/0.5.0

 応急対処
以下のように workflow を記述することで、応急的に動かすことができる (本当...]]></description><link>https://zenn.dev/kiakiraki/articles/15e6e2dfc0180c</link><guid isPermaLink="true">https://zenn.dev/kiakiraki/articles/15e6e2dfc0180c</guid><pubDate>Fri, 16 Aug 2024 00:19:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pz8PSHf6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChartBoost%252Fruff-action%2520%25E3%2581%25A7%2520ruff%2520v0.5.0%2520%25E4%25BB%25A5%25E9%2599%258D%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AETIPS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258D%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pvY05zYzZlS0hBQ1Y4aHlqVE9SWlpNWlBldnNSQjN3eXYxRjZQYUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あきらき</dc:creator></item><item><title><![CDATA[FXのデータをリアルタイムに非同期で受け取る方法]]></title><description><![CDATA[記事にするか迷ったがGMO FX普及活動のため書き溜めておく
必要なライブラリはpybottersです.
リンク先に導入方法があります.
通貨ペアはドル円です
"symbol": "USD_JPY"を変えることで他の通貨も可能
詳しくはGMO ドキュメントにて
コメントアウトしてます
ご自身でカスタマイズして使ってください
!
この記事を書くのに15分も掛かってないのでどこか不備があるかも

import os
import pybotters
import asyncio

class FX:
    def __init__(self) -&gt; None:
        sel...]]></description><link>https://zenn.dev/ashitahonkidasu/articles/5c5e3f9c8ce1d5</link><guid isPermaLink="true">https://zenn.dev/ashitahonkidasu/articles/5c5e3f9c8ce1d5</guid><pubDate>Thu, 15 Aug 2024 13:57:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SMIRua4O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FX%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2581%25A7%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1OThjYTZmNTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shiba</dc:creator></item><item><title><![CDATA[366B]]></title><description><![CDATA[N = int(input())
S = [input() for _ in range(N)]
M = max(map(len, S))
T = [["*"] * N for _ in range(M)]
for i in range(N):
    for j in range(len(S[i])):
        #ココ
        T[j][N - i - 1] = S[i][j]
for i in range(M):
    while T[i][-1] == "*":
        T[i].pop()
    print("".join(T[i]))
どこを置換する...]]></description><link>https://zenn.dev/5151/articles/5b9b70048ecd57</link><guid isPermaLink="true">https://zenn.dev/5151/articles/5b9b70048ecd57</guid><pubDate>Thu, 15 Aug 2024 09:07:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3pqrkkJZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:366B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miChill%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2N2EzZjRmNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miChill</dc:creator></item><item><title><![CDATA[【Streamlit】簡単Pythonアプリを作る｜ページ表示までの簡単な手順メモ]]></title><description><![CDATA[簡単にPythonのアプリが作成できる「Streamlit」が気になったので、ページを表示できるまでのステップを簡単に調べてみました。
今回は、Streamlitで「サクッとページを表示するまで」の工程メモです。

 Streamlitでページ表示までの簡単な始め方

 1）アプリのフォルダを作る
my_streamlit_app/

 2）仮想環境を作る（※省略も可）
$ python3 -m venv .venv      # 仮想環境を作成するコマンド
$ source .venv/bin/activate  # 仮想環境を有効化するコマンド
解説# 1. 仮想環境を作成するコマン...]]></description><link>https://zenn.dev/buenotheebiten/articles/5a23bbef7fd786</link><guid isPermaLink="true">https://zenn.dev/buenotheebiten/articles/5a23bbef7fd786</guid><pubDate>Thu, 15 Aug 2024 05:10:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--409N0ImD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Streamlit%25E3%2580%2591%25E7%25B0%25A1%25E5%258D%2598Python%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BD%259C%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えびてん</dc:creator></item></channel></rss>