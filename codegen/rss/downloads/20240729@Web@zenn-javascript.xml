<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 29 Jul 2024 11:25:13 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[パンダと戦う画像圧縮サイトを開発した話]]></title><description><![CDATA[先日、Joke Jobというサイトを作成したという記事を書いたyosiです。
https://zenn.dev/yosipy/articles/e42bb21ce2f6bf
そして7月25日にまた新しいサービスをリリースしたので、今回はその話をしようと思います。
ちなみに開発を始めたのが22日ごろからなので3日くらいで作ったことになります。

 作ったサービス
「ImgRoller」という画像を圧縮したり、リサイズを行うサイトです。
https://yosidev.com/tools/imgroller/ja/
機能の紹介記事も書いてますので良ければどうぞ。
https://note.c...]]></description><link>https://zenn.dev/yosipy/articles/817c07f267ddde</link><guid isPermaLink="true">https://zenn.dev/yosipy/articles/817c07f267ddde</guid><pubDate>Mon, 29 Jul 2024 08:41:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jBl9PMHN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%25E3%2581%25A8%25E6%2588%25A6%25E3%2581%2586%25E7%2594%25BB%25E5%2583%258F%25E5%259C%25A7%25E7%25B8%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yosi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlM2Q3MTk0MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yosi</dc:creator></item><item><title><![CDATA[コーディング規約]]></title><description><![CDATA[xxx]]></description><link>https://zenn.dev/llc_starhacks/books/a5d3716659f73b</link><guid isPermaLink="true">https://zenn.dev/llc_starhacks/books/a5d3716659f73b</guid><pubDate>Mon, 29 Jul 2024 05:01:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q9hohdqy--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci83YzI3YmVkZmY0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>llc_starhacks</dc:creator></item><item><title><![CDATA[SharePoint サイトのタイムゾーンを取得する方法]]></title><description><![CDATA[SharePoint サイトのタイムゾーンを確認するには、「サイトの設定」にアクセスする方法がありますが、もしあなたに「サイトの設定」にアクセスする権限がない場合は、 JavaScript を使って確認することができます。

 JavaScript コードとその使い方
タイムゾーンを確認したい SharePoint Online サイトにアクセスし、そのサイトにあるなにかしらのリストにアクセスします。
そして、ブラウザの DevTools を開き、以下のスクリプトを実行します。
(async function(){
  let response = await fetch(
    _s...]]></description><link>https://zenn.dev/koichiakamine/articles/dc17a6a0f6cc00</link><guid isPermaLink="true">https://zenn.dev/koichiakamine/articles/dc17a6a0f6cc00</guid><pubDate>Mon, 29 Jul 2024 04:05:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tV_nLqOf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SharePoint%2520%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koichi%2520Akamine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dhcUpSbEEtUkhXUmh6MWI2bmc2RW5NcWVKN2tfRElNYTRrRkhwUWNRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Koichi Akamine</dc:creator></item><item><title><![CDATA[[NextJS]Core Web Vitalsを理解してNextJSで改善する機能を調べる]]></title><description><![CDATA[
 概要
Core Web Vitalsがそれぞれどういった指標であるかが曖昧で、それをNextJsの機能を使ってどのように改善できるのかが気になったので、軽く調べた際のメモになります。

 Core Web Vitalsとは
Web Vitalsは、Googleが提供するウェブサイトのユーザーエクスペリエンスを評価するための一連の指標のことであり、Core Web Vitals は、その中でも特に重要なLargest Contentful Paint（LCP）、First Input Delay（FID）、Cumulative Layout Shift（CLS）からなる3つの指標のこと...]]></description><link>https://zenn.dev/reds/articles/19523e24cf5c53</link><guid isPermaLink="true">https://zenn.dev/reds/articles/19523e24cf5c53</guid><pubDate>Sun, 28 Jul 2024 15:31:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JtY1Kb43--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNextJS%255DCore%2520Web%2520Vitals%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6NextJS%25E3%2581%25A7%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%258A%25E3%2581%2598%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OWM4YzQwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーとおじさん</dc:creator></item><item><title><![CDATA[Next.jsでフォーマットした日付を表示させたい]]></title><description><![CDATA[Next.jsで2023年5月5日（金）のように表示させたかったので、その時の実装メモ。

 フォーマットした日付をNext.jsで実装する
以下のようにコードを書くと、2023年5月5日（金）のように表示できる
export const formatDate = () =&gt; {
  const now = new Date();
　　　　const year = now.getFullYear();
  const month = now.getMonth() + 1;
  const date = now.getDate();
  const day = now.getDay(...]]></description><link>https://zenn.dev/tomoyuki_kato/articles/551d0798a43106</link><guid isPermaLink="true">https://zenn.dev/tomoyuki_kato/articles/551d0798a43106</guid><pubDate>Sun, 28 Jul 2024 08:41:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SxSYd0wE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoyuki%2520Kato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyOTU0YTUzNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoyuki Kato</dc:creator></item><item><title><![CDATA[なんか数字を選んでくれるやつを作った]]></title><description><![CDATA[
 記事概要
MAXの数値を指定すると1からMAXの中からランダムに数字を選んでくれる、非常に簡素なツールをJavaScriptの勉強がてらに作りました。

 想定される使用場面
・何か数字を選ばざるを得ない状況に直面した時
・あとひとつ数字を選ぶとしたら何がいいかを機械的に選びたい時

 筆者のスキル
HTML/CSS
10年ほどの業務経験。課題点について自分で調査&amp;実装することができる。
JavaScript
10年ほど見ている。見ているだけ。本格的な開発では他の人のヘルプが必要。

 GitHubページ
なんか数字を選んでくれるやつは、下記のGitHubページにて公開してい...]]></description><link>https://zenn.dev/shomi_nijo/articles/e3a9d4d29e4d18</link><guid isPermaLink="true">https://zenn.dev/shomi_nijo/articles/e3a9d4d29e4d18</guid><pubDate>Sun, 28 Jul 2024 06:03:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--63melj3---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2582%2593%25E3%2581%258B%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E9%2581%25B8%25E3%2582%2593%25E3%2581%25A7%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%2584%25E3%2581%25A4%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BA%258C%25E6%259D%25A1%25E6%25AD%25A3%25E5%25AE%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwNDczODgwMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>二条正実</dc:creator></item><item><title><![CDATA[<Outlet>の使い方]]></title><description><![CDATA[
 &lt;Outlet&gt;の機能説明
&lt;Outlet&gt;は、React Routerを使用する際に、親コンポーネント内で子コンポーネントを表示するためのプレースホルダー（占有位置）として機能します。具体的には、親ルートが一致したときに、その場所に対応する子ルートがレンダリングされます。

 詳細な説明

親コンポーネント内に&lt;Outlet&gt;を配置することで、その場所に子コンポーネントがレンダリングされるようにします。
例えば、/aboutパスにアクセスすると、&lt;Outlet&gt;はAboutコンポーネントを表示します。


 イメージ
具体的なコードは...]]></description><link>https://zenn.dev/atusi/articles/406fb9e3486f2b</link><guid isPermaLink="true">https://zenn.dev/atusi/articles/406fb9e3486f2b</guid><pubDate>Sat, 27 Jul 2024 17:37:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E8_jK62D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%253COutlet%253E%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsushi%2520hatakeyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjYWE3ODNjN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Atsushi hatakeyama</dc:creator></item><item><title><![CDATA[Javascriptで作るドロワーメニュー(1)]]></title><description><![CDATA[
 ドロワーメニュー
この記事ではwebサイトでよく使われているドロワーメニューの簡単な作り方について書いていきます。
サンプルコードや画像でわかりやすくまとめていますのでぜひ参考にしてください。

 今回作るドロワーメニューのイメージ
開閉前

開閉後

上の画像のように、＜ボタンを押すと左側にあるメニューが開かれるといったものになります。

 実際に作ってみる
プログラムを書く前にどのような動作をしているのかを説明をします。
1.buttonが押されるとjavascriptのclickイベントが呼び出される。
2.javascriptにclassにtoggle関数でclassを追加し...]]></description><link>https://zenn.dev/leitul/articles/252658dfd5167f</link><guid isPermaLink="true">https://zenn.dev/leitul/articles/252658dfd5167f</guid><pubDate>Sat, 27 Jul 2024 04:11:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lUDMdwCx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2589%25E3%2583%25AD%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25281%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AC%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwMGE0M2Q1NjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>レイ</dc:creator></item><item><title><![CDATA[【index.ts】そのVSCodeタブ名、わかりづらくない？【page.tsx】]]></title><description><![CDATA[
 はじめに
VSCodeで、index.tsやpage.tsxなど、同名のファイルを複数同時に開いてしまい、わからなくなってしまったことはありませんか？

実はよく見ると同一名称のファイルを開いているときには右側にディレクトリ名も表示されているのですが、薄い文字かつ、目線移動が必要で分かりづらいです。
この記事では、VSCodeの設定を変更することで、タブ表示名にディレクトリ名を含めて表示する方法を紹介します。

 設定方法
VSCodeの設定ファイルsettings.jsonに以下の設定を追加します。
  "workbench.editor.customLabels.patterns...]]></description><link>https://zenn.dev/bmth/articles/vscode-tab-display-name-alias</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/vscode-tab-display-name-alias</guid><pubDate>Fri, 26 Jul 2024 17:23:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bQJeWRE5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590index.ts%25E3%2580%2591%25E3%2581%259D%25E3%2581%25AEVSCode%25E3%2582%25BF%25E3%2583%2596%25E5%2590%258D%25E3%2580%2581%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2581%25A5%25E3%2582%2589%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25E3%2580%2590page.tsx%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTVpY3FhSGVfOXQyWjc3YjBWV1RfWlM0MFF3MExBbS1zclhIRWtydDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[引数が参照渡しの関数は注意(?)]]></title><description><![CDATA[
 記事の概要
先日、引数が参照(参照渡し)になっている関数はバグを生み出しやすいため注意が必要という話を聞いたので、備忘のために本記事を作成しました。

 サンプルコードと解説
以下に、ポケモンのレベルをMaxまで上げる関数を書き、レベルアップ前後のポケモンの状態を出力する処理を書いています。

 注意したいパターン（処理1）
boostUpLevelFunction1はbeforePokémon1の参照を受け取り、参照先のオブジェクトを直接更新する処理となっているため、'beforePokémon1'もレベルアップしてしまっています。
type pokémon = { name: s...]]></description><link>https://zenn.dev/souemon/articles/d2456a3485cb1a</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/d2456a3485cb1a</guid><pubDate>Fri, 26 Jul 2024 10:24:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AauYa8vh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%258C%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AF%25E6%25B3%25A8%25E6%2584%258F%2528%253F%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[配列内のオブジェクトに変更を加えたのに反映されない]]></title><description><![CDATA[
 記事の概要
先日「ループ処理で配列内のオブジェクトに対して変更を加える」ような処理を書いていたのですが、配列内オブジェクトに変更を加えたはずなのになぜかその変更が反映されないという問題に遭遇し、原因を突き止めるのに時間がかかったので、調べたことを忘れないようにこの記事を書きました。
参照渡しについての理解が浅かったことが原因でして恐らく基本の内容かと思われますが、同問題で困っている方にはもしかしたら参考になるかもしれないです。（配列の参照渡し周りについてざっくり書いています）

 問題と解決方法の概要（サンプルコードあり）

 問題コード(処理1)
今回遭遇した問題を簡単にしたもので...]]></description><link>https://zenn.dev/souemon/articles/eb424992afadb1</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/eb424992afadb1</guid><pubDate>Fri, 26 Jul 2024 05:54:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_EGvraVP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E5%2586%2585%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2582%2592%25E5%258A%25A0%25E3%2581%2588%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25AB%25E5%258F%258D%25E6%2598%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[Module FederationをNext.jsでやってみた]]></title><description><![CDATA[
 はじめに
アプリケーションを一個の大きなプロジェクトで開発するのではなく、それぞれドメインごとに切り分け、各々が独立して動くようにするマイクロサービスが様々な場所で導入されています。
主観で恐縮ですが、マイクロサービスはバックエンドを各ドメインで分割している場面が多い気がします。
ただ、それぞれのドメインで分割したいのはバックエンドだけではありません。
フロントエンドでもドメイン単位で分割し、それぞれ独立して開発したいケースはあると思います。
そういった時に使えるのがマイクロフロントエンドという考えです。
そこで、今回はマイクロフロントエンドの一手法である Module Federa...]]></description><link>https://zenn.dev/maronn/articles/module-federation-nextjs</link><guid isPermaLink="true">https://zenn.dev/maronn/articles/module-federation-nextjs</guid><pubDate>Fri, 26 Jul 2024 03:24:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zSpwsOn6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Module%2520Federation%25E3%2582%2592Next.js%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25AD%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYzVlMmFlYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マロン</dc:creator></item><item><title><![CDATA[[javascript] "Math.round()" or "Number.prototype.toFixed()"]]></title><description><![CDATA[
note: updated at 7/26
I noticed that, when debugging, we shouldn't format the number or string.
I wrote more details in the "Bug Fix" part in this post.


 Intro.
When I rounded a negative number by "Math.round()" or "Number.prototype.toFixed()", I noticed a little difference.
"Math.round()" con...]]></description><link>https://zenn.dev/shunyana/articles/43690755f20068</link><guid isPermaLink="true">https://zenn.dev/shunyana/articles/43690755f20068</guid><pubDate>Thu, 25 Jul 2024 19:46:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SNtaP1T8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bjavascript%255D%2520%2522Math.round%2528%2529%2522%2520or%2520%2522Number.prototype.toFixed%2528%2529%2522%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shunyana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeGFCOWlNLTJsTkt5MklhdFdpQ1l3WnJyNl85a200WG83U2RINXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shunyana</dc:creator></item><item><title><![CDATA[TypeScriptコンパイラによる未使用パラメータと変数のチェック]]></title><description><![CDATA[TypeScriptコンパイラには、コードをチェックする際にリンターのような機能を持つオプションがあります。その中には、パラメータや変数が未使用のままになっていることを防ぐものがあります。

 noUnusedLocalsオプション
noUnusedLocalsは、デフォルトではfalseに設定されていますが、これをtrueに設定すると、未使用のローカル変数がある場合にコンパイラがエラーを出すようになります。以下のコード例を見てみましょう。
function printItem(item: any, index: number) {
  const indexedItem = `${in...]]></description><link>https://zenn.dev/nomikazu_x/articles/typescript-compiler-checks-for-unused-params</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/typescript-compiler-checks-for-unused-params</guid><pubDate>Thu, 25 Jul 2024 11:00:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--53w_8IQk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[WFC Tiles]]></title><description><![CDATA[
 WFC Tiles
A Simple Example
March 17, 2023 - Tommy Dräger
https://fenixfox-studios.com/content/wfc_simple_tiles/
"Wave Function Control" (abbr. WFC) is a rabbit hole! It is defenitly one of the algortihms that will drasticly change procedual generation in the future. The priniciple of WFC and su...]]></description><link>https://zenn.dev/mlsprwr/articles/0fa415161960d5</link><guid isPermaLink="true">https://zenn.dev/mlsprwr/articles/0fa415161960d5</guid><pubDate>Thu, 25 Jul 2024 10:44:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zINr_Y4b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:WFC%2520Tiles%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tommy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWtXeGF2bmNsX1VoWW5KS2pPU1JvUjV4YkVPRGpHUDBnNkRpMzF5UjBHOW96b1g0ND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tommy</dc:creator></item><item><title><![CDATA[javascriptとbootstrapで簡単バーコード生成]]></title><description><![CDATA[需要があるか微妙ですがバーコードコード生成アプリを作りました。
フォーマットがCODE128なので数値以外のアルファベットもいけます。なので、在庫管理などの業務用のバーコードなんかに使えるかもしれません、わかんないですが。。。
動作も軽量です。
SVG、PNG、GIFでそれぞれダウンロード可能になっています。

 作成

Barcode.html
    &lt;!DOCTYPE html&gt;
    &lt;html lang="en"&gt;
    &lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="...]]></description><link>https://zenn.dev/dsr/articles/ef84aa45a85502</link><guid isPermaLink="true">https://zenn.dev/dsr/articles/ef84aa45a85502</guid><pubDate>Thu, 25 Jul 2024 00:55:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EB4amwwy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:javascript%25E3%2581%25A8bootstrap%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dsr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmI4ZjQwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dsr</dc:creator></item><item><title><![CDATA[イベントハンドラ名はonClick？handleClick？]]></title><description><![CDATA[
 はじめに
JavaScript やそのフレームワークを使用して Web アプリケーションを開発する際、イベントハンドラの命名規則について悩むことはありませんか？私は、onClick、handleClick、onSubmit、handleSubmit など、イベントハンドラ名について悩むことが多々ありました。
React の公式ドキュメントで、どのようにイベントハンドラ名を命名するべきかについて記載がありましたので、共有します。

 結論：イベントハンドラ名は handle[Event]とする
React の公式ドキュメントには、下記のように記載があります。

慣習的に、イベントハンド...]]></description><link>https://zenn.dev/torakm/articles/7e90cb039157e7</link><guid isPermaLink="true">https://zenn.dev/torakm/articles/7e90cb039157e7</guid><pubDate>Wed, 24 Jul 2024 23:04:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qByoY8yg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E5%2590%258D%25E3%2581%25AFonClick%25EF%25BC%259FhandleClick%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:torakm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWpwb3BqampCamdqSmw3MFRFcnZKNWZGZncwVUdBNGJxdGpJQXpadDU3N3FnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>torakm</dc:creator></item><item><title><![CDATA[FirestoreでGROUP BYを実現するObject.groupBy]]></title><description><![CDATA[
 状況
firestoreからのデータ取得時はGROUP BY句と同等の機能が存在しません。
Remixとfirebaseを使ってtodoリストを作成していて、firestoreからのデータ読み出し時にtodoをグループに分類して管理したいと思った時の話です。
データ取得後にfilterメソッドなどを使ってグループごとにまとめ直すしかないのか、と思って探していたら、JavaScriptのObject.groupByを見つけました。
しかし、TypeScriptを使っていたのでVSCode上でTypeScriptの型エラーが出て困ったり、出力方法を悩んだり勉強になったので備忘録です。

...]]></description><link>https://zenn.dev/nofi/articles/3983b1aabdc1ab</link><guid isPermaLink="true">https://zenn.dev/nofi/articles/3983b1aabdc1ab</guid><pubDate>Wed, 24 Jul 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OsV-4e3S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firestore%25E3%2581%25A7GROUP%2520BY%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BObject.groupBy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nofi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzYTc3YjFlMmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nofi</dc:creator></item><item><title><![CDATA[【たったの100行で実装できる】javascript、bootstrapで作るQRコード生成アプリ（コピペOK）]]></title><description><![CDATA[シンプルなQRコード生成アプリです。
QRコード読み取りアプリはあるんですが、QRコード生成はあまりなかったので作ってみました。
自前のアプリや管理画面上に設置など、URLやお店用のクーポン発行などに使えるかなと。
動作も軽量です。
SVG、PNG、GIFでそれぞれダウンロード可能になっています。

 作成

QR.html
    &lt;!DOCTYPE html&gt;
    &lt;html lang="ja"&gt;
    &lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" c...]]></description><link>https://zenn.dev/dsr/articles/cbc9ebc2600e38</link><guid isPermaLink="true">https://zenn.dev/dsr/articles/cbc9ebc2600e38</guid><pubDate>Wed, 24 Jul 2024 22:20:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hNWzlWy5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE100%25E8%25A1%258C%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2591javascript%25E3%2580%2581bootstrap%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BQR%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2594%259F%25E6%2588%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%2588%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259AOK%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dsr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmI4ZjQwMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dsr</dc:creator></item><item><title><![CDATA[フロントエンド開発者のためのパッケージマネージャー比較：npm vs yarn vs pnpm]]></title><description><![CDATA[
 フロントエンド開発者のためのパッケージマネージャー比較：npm、yarn、pnpm
フロントエンド開発において、パッケージマネージャーは欠かせないツールです。本記事では、主要な3つのパッケージマネージャー（npm、yarn、pnpm）について解説し、それぞれの特徴や利点を紹介します。また、よく使用するコマンドの対比表も提供します。最後に、パッケージマネージャーではありませんが、関連するツールであるnpxについても触れます。

 1. npm (Node Package Manager)
npmは、Node.jsのデフォルトパッケージマネージャーであり、最も広く使用されています。

 ...]]></description><link>https://zenn.dev/crebo/articles/article-0001-20240724</link><guid isPermaLink="true">https://zenn.dev/crebo/articles/article-0001-20240724</guid><pubDate>Wed, 24 Jul 2024 12:54:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v4eEp2BA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259Anpm%2520vs%2520yarn%2520vs%2520pnpm%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BC%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxNzlhZTFjZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社くりぼー</dc:creator></item></channel></rss>