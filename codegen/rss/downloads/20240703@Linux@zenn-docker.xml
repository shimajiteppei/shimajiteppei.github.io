<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 03 Jul 2024 08:47:23 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[WSL2で急にdockerが起動しなくなった]]></title><description><![CDATA[
 開発環境

windows 10 Enterprice
docker
ubuntu


 WSL2で急にdockerが起動しなくなった
ある日windowsをアップデートした際にdokcerk起動しようとしたが、起動しなくなった
$ sudo service docker start
Job for docker.service failed because the control process exited with error code.
See "systemctl status docker.service" and "journalctl -xeu docker.serv...]]></description><link>https://zenn.dev/shirokumakun/articles/3ba7c1e172dc39</link><guid isPermaLink="true">https://zenn.dev/shirokumakun/articles/3ba7c1e172dc39</guid><pubDate>Wed, 03 Jul 2024 08:39:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1QIkKc6m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25A7%25E6%2580%25A5%25E3%2581%25ABdocker%25E3%2581%258C%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjNjFhZmQ5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくまくん</dc:creator></item><item><title><![CDATA[Dockerで通信の流れを学んだ]]></title><description><![CDATA[Dockerの仕組みを学ぼうと思い、以下のサイトを参考にしてシンプルなプロジェクトにとりくんだ
https://zenn.dev/k41531/articles/054a0e30d49f19

 学んだこと

Dockerの構成
３つの間での通信方法

WebページとWebサーバー間
WebサーバーとバックエンドAPI間
バックエンドサーバーとAPI間




 今回のスタック

Docker - バックエンドとフロントエンドのネットワークを共有する
Express.js - Webサーバーとして、バックエンドAPIとの通信を可能にする
Flask - Flask APIを使用して、AP...]]></description><link>https://zenn.dev/akinko0915/articles/2f09a9b37ee149</link><guid isPermaLink="true">https://zenn.dev/akinko0915/articles/2f09a9b37ee149</guid><pubDate>Wed, 03 Jul 2024 02:26:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mmxWZjwS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%25E3%2582%2592%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akinko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSy13cHdwSE5jYThHWWJKMHBCb0NRU3A3WFlZd3Q0Wjc5SFY3clVhWENIUmFpSTlXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akinko</dc:creator></item><item><title><![CDATA[Dev Containers メモ]]></title><description><![CDATA[Visual Studio Code の Dev Containers に関するメモです。
(記事にするまでもない細かいのを追記していく)

 パフォーマンス改善

Dev Containers のパフォーマンス改善


 プロキシとの闘い

プロキシが必要な環境で、WSL2にDockerをインストールしてDevContainerを利用する


 デフォルトで拡張機能を入れる
常にDevContainerに入れる拡張を設定できる。
これはプロジェクトには必須ではないが、個人として必要な拡張機能(たとえばキーバインド)を入れるときに役に立つ。
remote.containers.defau...]]></description><link>https://zenn.dev/onozaty/articles/devcontainer-memo</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/devcontainer-memo</guid><pubDate>Tue, 02 Jul 2024 14:18:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0-epWEE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Dev%2520Containers%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[dockerのphp.iniを編集する方法]]></title><description><![CDATA[
 結論


dockerコンテナに入る。(入り方はコンテナの構成などによると思うので各自で調べてください。)


php -i | grep php.ini
下記のようなパスが表示される。


Configuration File (php.ini) Path =&gt; /usr/local/etc/php/5.6
Loaded Configuration File =&gt; /usr/local/etc/php/5.6/php.ini  //こっち//

vi + 先ほど取得したパス

vi /usr/local/etc/php/5.6/php.ini 

必要な箇所を編集し保存...]]></description><link>https://zenn.dev/babyen/articles/a8708c960a6c78</link><guid isPermaLink="true">https://zenn.dev/babyen/articles/a8708c960a6c78</guid><pubDate>Tue, 02 Jul 2024 08:49:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lXSZvxfB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%25E3%2581%25AEphp.ini%25E3%2582%2592%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LaughingFlame219%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMDVjOTRmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>LaughingFlame219</dc:creator></item><item><title><![CDATA[Docker版のOmeka SでCORS対応を行う]]></title><description><![CDATA[
 概要
Docker版のOmeka Sで、以下の記事のようにCORS対応を実施した際、サーバエラーが発生しました。その備忘録を記載します。
https://zenn.dev/nakamura196/articles/b8971f470f983f

 Dockerfile
以下のようなDockerfileを対象とします。
FROM php:apache

LABEL maintainer="Satoru Nakamura &lt;na.kamura.1263@gmail.com&gt;"

RUN a2enmod rewrite

ENV DEBIAN_FRONTEND noninter...]]></description><link>https://zenn.dev/nakamura196/articles/0c24dfc194f37e</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/0c24dfc194f37e</guid><pubDate>Tue, 02 Jul 2024 08:27:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g9tW0Hz8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2589%2588%25E3%2581%25AEOmeka%2520S%25E3%2581%25A7CORS%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[Dockerで発生する"error response from daemon network [ネットワーク名]"の解決方法]]></title><description><![CDATA[
 エラーの概要

 エラーメッセージの内容
「error response from daemon: network」とは、Dockerデーモンがネットワークに関する問題に直面した際に表示されるエラーメッセージです。
具体的には、Docker Composeを使ってプロジェクトを立ち上げる際に発生することが多いエラーです。

 エラーの発生状況
このエラーは、以下のような状況で発生することがあります。

新しいコンテナを立ち上げる際に、既存のネットワークと名前が重複している場合

ネットワーク設定に誤りがある場合

Dockerのネットワークリソースが競合している場合


 原因の解説...]]></description><link>https://zenn.dev/nomikazu_x/articles/docker-error-response-from-daemon-network</link><guid isPermaLink="true">https://zenn.dev/nomikazu_x/articles/docker-error-response-from-daemon-network</guid><pubDate>Tue, 02 Jul 2024 03:22:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--utdhm6Ra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%2522error%2520response%2520from%2520daemon%2520network%2520%255B%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%2590%258D%255D%2522...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomikazu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5Zjg3ZDg5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomikazu</dc:creator></item><item><title><![CDATA[mattermostをdockerでローカルPCに構築]]></title><description><![CDATA[
 はじめに
mattermostをローカル環境で気軽に構築する方法をまとめてみます。

 mattermostとは
https://mattermost.com/
slackのようなOSSのコミュニケーションツールです。
使用感はslackに非常に似ています。

 構築
https://docs.mattermost.com/install/install-docker.html
上記の公式ドキュメントに沿って実施してみます。
※dockerのインストールは割愛します。

 リポジトリをクローン
ターミナル ウィンドウで、リポジトリをクローンし、ディレクトリに入ります。
git clo...]]></description><link>https://zenn.dev/chameleonmeme/articles/0988ac069dc269</link><guid isPermaLink="true">https://zenn.dev/chameleonmeme/articles/0988ac069dc269</guid><pubDate>Mon, 01 Jul 2024 06:08:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5FnSdnGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:mattermost%25E3%2582%2592docker%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABPC%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2597%25E3%2581%2597%25E3%2581%25BE%25E3%2582%258B%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5MjZkZjgyNDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25AC%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%259F%25E3%2583%25BC%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyZmZlNmRjZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ししまる</dc:creator></item><item><title><![CDATA[Nginx on Dockerでリバースプロキシが動かない時のチェックリスト]]></title><description><![CDATA[Dockerでアプリケーションサーバー（Node.js）のコンテナを立てて、Nginxのコンテナからリバースプロキシしようとして、かなりハマったので、その時の体験と解決方法を共有します。

 何をやりたかったのか


DockerでNginxとNode.js（アプリケーションサーバー）のコンテナを建てていた。

Node.jsへのリクエスト前にNginxを置き、リクエストをリバースプロキシさせたい。



 発生していたエラー

Nginxから指定しているホスト（アプリケーションサーバー）に接続できないというエラー

no live upstreams while connecting ...]]></description><link>https://zenn.dev/eju_labs/articles/2bd651b74abe3b</link><guid isPermaLink="true">https://zenn.dev/eju_labs/articles/2bd651b74abe3b</guid><pubDate>Mon, 01 Jul 2024 02:17:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PVv6MVgt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nginx%2520on%2520Docker%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hanzzo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ejuLabs%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1OWY1NDcxZDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hanzzo</dc:creator></item><item><title><![CDATA[WSL2 2.2.x正式版がこっそリリース]]></title><description><![CDATA[
 バージョンは2.2.4
!
関連記事:

WSL2.2.x で DNS tunnelingがデフォルトに
WSL2 2.0.0がこっそリリース
WSLのアップデートでメモリ開放？
WSL2でvmmem確保メモリを開放する方法


WSLのバージョンチェックをしていると最新版がリリースされていた。

https://github.com/microsoft/WSL/releases/tag/2.2.4
(´･ω･)こっそリリースが常態化してるなぁ
WSL2 2.0でパラメータが増えたが、
実験的機能(Experimental)状態だったのを徐々に正式化していて
今回もその内容になってい...]]></description><link>https://zenn.dev/dozo/articles/763f33aff6778f</link><guid isPermaLink="true">https://zenn.dev/dozo/articles/763f33aff6778f</guid><pubDate>Sun, 30 Jun 2024 23:48:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kx6VTe5l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25202.2.x%25E6%25AD%25A3%25E5%25BC%258F%25E7%2589%2588%25E3%2581%258C%25E3%2581%2593%25E3%2581%25A3%25E3%2581%259D%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dozo</dc:creator></item><item><title><![CDATA[【Python】Dockerコマンドを使用して特定のコンテナでDjangoのマイグレーションを実行]]></title><description><![CDATA[
 はじめに

docker-compose exec &lt;service-name&gt; python manage.py makemigrations
!
&lt;service-name&gt;でmakemigrationsを実行しようとすると上記図のようにコンテナ毎度起動してしまうため、コンテナを指定してマイグレーションコマンドを実行する方法をまとめている。


 makemigrations

execの後に&lt;container-name&gt;または&lt;container-id&gt;を入力して実行する
docker exec &lt;container-na...]]></description><link>https://zenn.dev/code_journey_ys/articles/d208d124a4c852</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/d208d124a4c852</guid><pubDate>Sun, 30 Jun 2024 14:08:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z3qlCydL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Docker%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7Django%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[会社の先輩にDockerって分かる？と聞かれた時はこう答えろ]]></title><description><![CDATA[
 本記事の対象者

DockerのDも知らない方
Dockerを聞いたことはあるけど、上手く説明できない方


 前置き
本記事ではDockerの細部まで踏み込んで解説はせず、Dockerの概念を理解することにフォーカスして執筆しました。よって、物足りないと思う方もおられるかと思います。Dockerの概念を理解できたと言う方は、追加で本やハンズオン学習を通して勉強してみてください。（※本記事最後に筆者おすすめの参考書を記載しております。）

 結論
会社の先輩に「Dockerって技術知ってる？」って聞かれた時はこう答えましょう。
『データやプログラムを隔離できる仕組みです！使い方は分か...]]></description><link>https://zenn.dev/shige99/articles/8ebd5ec204b6a9</link><guid isPermaLink="true">https://zenn.dev/shige99/articles/8ebd5ec204b6a9</guid><pubDate>Sun, 30 Jun 2024 13:54:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KbNx4Hhv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E5%2585%2588%25E8%25BC%25A9%25E3%2581%25ABDocker%25E3%2581%25A3%25E3%2581%25A6%25E5%2588%2586%25E3%2581%258B%25E3%2582%258B%25EF%25BC%259F%25E3%2581%25A8%25E8%2581%259E%25E3%2581%258B%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AF%25E3%2581%2593%25E3%2581%2586%25E7%25AD%2594%25E3%2581%2588%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shige%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwNjQ5Nzk2OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shige</dc:creator></item><item><title><![CDATA[Debian系開発コンテナ用ユーザー切り替えスタートスクリプト書いた]]></title><description><![CDATA[
 はじめに
以下の記事で Jupyter 公式のユーザー切り替え機能だけ抜き出した。
https://zenn.dev/wsuzume/articles/1be3aee84d1cb2
しかし以下のような点が使いにくかった。

マルチステージのうちひとつのステージだけをリポジトリとして抜き出しても配置やビルドがけっこう面倒臭い[1]。
既存のユーザーを削除して作り直したり、グループを無理やり重複させたりとけっこう破壊的な操作をしている。

これらの欠点を解消するために、以下のような改良を施したスタートアップスクリプトを書き直した。

コンテナに対する変更は /usr/local/bin ...]]></description><link>https://zenn.dev/wsuzume/articles/d390844c8a2ae9</link><guid isPermaLink="true">https://zenn.dev/wsuzume/articles/d390844c8a2ae9</guid><pubDate>Sun, 30 Jun 2024 13:23:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--puLa3tgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Debian%25E7%25B3%25BB%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E7%2594%25A8%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjZDAzYjNkNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Josh Nobus</dc:creator></item><item><title><![CDATA[プロキシが必要な環境で、WSL2にDockerをインストールしてDevContainerを利用する]]></title><description><![CDATA[インターネットに出るのにプロキシが必要な環境で、WSL2にDockerをインストールしてDevContainerとして利用しようとしたのですが、嵌りどころが多かったので本記事に残します。
なお、Docker Desktopだと、Windowsのプロキシ設定を見てよきに計らってくれているのか、特に気にすること無く使えました。
このメモは、なんらかの理由でDocker Desktopが使えない＆Rancher Desktopもプロキシ周りがよくわからんといった人向けのものになります。

 WSL2へのDockerのインストール
WSL2でデフォルトでインストールされるUbuntuで試しました...]]></description><link>https://zenn.dev/onozaty/articles/docker-wsl-proxy</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/docker-wsl-proxy</guid><pubDate>Sun, 30 Jun 2024 13:18:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MvlxrX1w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581WSL2%25E3%2581%25ABDocker%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6DevContainer%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[ECSのビルドを高速化したい]]></title><description><![CDATA[ECSのビルドを高速化したい。
そう思ってbuildspec.ymlを修正しました。
結論、2回に1回高速化が成功するという中途半端な状態で沼っているのが現状です。。。

 試したこと
以下の記事を参考にしました。
https://zenn.dev/paiza/articles/improve-codebuild-performance-2
やったことはシンプルで、インラインキャッシュを有効化しました
version: 0.2
env:
  variables:
    DOCKER_BUILDKIT: 1
phases:
  pre_build:
    on-failure: ABO...]]></description><link>https://zenn.dev/dsakai07/articles/57b10c39a4cc01</link><guid isPermaLink="true">https://zenn.dev/dsakai07/articles/57b10c39a4cc01</guid><pubDate>Sun, 30 Jun 2024 12:08:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gWaBLNkD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECS%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dsakai07%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmMDE2M2NjNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dsakai07</dc:creator></item><item><title><![CDATA[Docker リバースプロキシでhosts追加をやめる]]></title><description><![CDATA[複数プロジェクトをdocker composeで動かす場合、それぞれにバーチャルホストを割り当てて、リバースプロキシを置く、ということがあると思います。
docker-compose.ymlは大体こんな感じ。
version: '3'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always

  dns:
    i...]]></description><link>https://zenn.dev/tkydev/articles/303462bcbef45d</link><guid isPermaLink="true">https://zenn.dev/tkydev/articles/303462bcbef45d</guid><pubDate>Sun, 30 Jun 2024 01:58:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kCJ9Naob--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2581%25A7hosts%25E8%25BF%25BD%25E5%258A%25A0%25E3%2582%2592%25E3%2582%2584%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tokiya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3NzI1ZTJjMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tokiya</dc:creator></item><item><title><![CDATA[pants でスマートな docker build をしよう!]]></title><description><![CDATA[
 TL;DR

pants は docker をネイティブサポートしている monorepotool の1つであり、git と連携して docker イメージの差分ビルドや、docker イメージ同士の依存性（参照順）を考慮した並列ビルドが可能
pants のビルド設定ファイルから、docker buildで外部から変数を与えることの可能な--build-argのパラメータや multi-satge build の対象ステージ指定をする--target、イメージのタグ--tagを渡すことができるため、Dockerfile の処理とデータを分離を促進し、柔軟な docker イメージビル...]]></description><link>https://zenn.dev/numagotatu/articles/2024-06-23-pants-build-docker-build</link><guid isPermaLink="true">https://zenn.dev/numagotatu/articles/2024-06-23-pants-build-docker-build</guid><pubDate>Sat, 29 Jun 2024 17:48:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---uxoYBx3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pants%2520%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AA%2520docker%2520build%2520%25E3%2582%2592%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ut%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NjkyZjZjMzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25AC%25E3%2581%25BE%25E3%2581%2594%25E3%2581%259F%25E3%2581%25A4%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1ZTZiYzAwNjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ut</dc:creator></item><item><title><![CDATA[Docker Desktop の 4.31.1 で、DevContainer上でViteを動かすと、ポートフォワードが動作しない]]></title><description><![CDATA[Docker Desktop for Windows の 4.31.1 (2024年6月29日現在の最新) にて、DevContainer上でViteのサーバーを起動した際に、ポートフォワードがうまく動きません。
コンテナの外からブラウザでアクセスしようとしたところ、アクセスできない(読み込み中のまま反応なし)状態になりました。
実際試したDevContainerは下記になります。(Remix のチュートリアルをDevContainerにしたもの)

https://github.com/onozaty/node-sandbox/tree/main/remix-tutorial


 問...]]></description><link>https://zenn.dev/onozaty/articles/docker-desktop-portforward-not-working</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/docker-desktop-portforward-not-working</guid><pubDate>Sat, 29 Jun 2024 13:20:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a1dN8g0l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%2520%25E3%2581%25AE%25204.31.1%2520%25E3%2581%25A7%25E3%2580%2581DevContainer%25E4%25B8%258A%25E3%2581%25A7Vite%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25A8%25E3%2580%2581%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AF%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[Getting Started Qwik]]></title><description><![CDATA[
 はじめに
Qwikのドキュメント Getting Started Qwiklyにある チュートリアルのQwik Joke Appを進めながらジョークアプリを作っていきます。

 前提条件
QwikをDocker環境で構築する で構築した環境を使ってやります。
デモアプリがすでに入っている場合は、src/routes/layout.tsxを修正してスタイルを初期状態します

src/routes/layout.tsx
  import { component$, Slot, useStyles$ } from "@builder.io/qwik";
  import { routeLo...]]></description><link>https://zenn.dev/merume/articles/26d1c5f26b1fad</link><guid isPermaLink="true">https://zenn.dev/merume/articles/26d1c5f26b1fad</guid><pubDate>Sat, 29 Jun 2024 10:56:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---sKi5OVA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Getting%2520Started%2520Qwik%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sato%2520masaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzIyZDY2NmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sato masaki</dc:creator></item><item><title><![CDATA[モノレポでのDocker運用注意点！]]></title><description><![CDATA[
 はじめに
こんにちは畑田です。
最近のプロジェクトの開発において、Djangoのstatic file群のみをHTTPサーバ(今回はnginx)から配信する方針を選択しました。
ECRにDjangoとnginxのimageを置いておいて、container生成を行っています。
このとき、nginxのimageの中にDjangoのstatic file群を配置しなければならないのですが、Djangoのstatic file群はnginxのDockerfile以下に無いため、Dockerfile内での記述方法がわからず困ってしまいました。
基本を勉強し直すことで解決できたので記録に残しま...]]></description><link>https://zenn.dev/randd_inc/articles/114cc248e147a4</link><guid isPermaLink="true">https://zenn.dev/randd_inc/articles/114cc248e147a4</guid><pubDate>Sat, 29 Jun 2024 09:55:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M3lYQsdx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E3%2581%25A7%25E3%2581%25AEDocker%25E9%2581%258B%25E7%2594%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Daiki-Hatada%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxZTNhMjllZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:R%2526D%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lKYURnclJlemVSd3hTZmNsOUlSMFBaZFpYSlVIRlhyNUhjT1FpNFE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daiki-Hatada</dc:creator></item><item><title><![CDATA[Workspace 単位で Remote-SSH 先のサーバーに VSCode 拡張を自動インストールしたい]]></title><description><![CDATA[
 TL;DR

問題: Remote-SSH 先のサーバーにVSCode 拡張を自動インストールしたいけど、ワークスペースまたはサーバー単位でやる方法がない
解決策: インストールしたい VSCode 拡張のリストを bashの.bashrcと.profile に書いたスクリプトでインストール

VSCode 拡張の自動インストール処理




 はじめに

This settings has an application scope and onlyin the user settings file.

Remote-SSH 先のサーバーで利用したい VSCode 拡張を一括自動イン...]]></description><link>https://zenn.dev/numagotatu/articles/2024-04-13-init-vscode-extension</link><guid isPermaLink="true">https://zenn.dev/numagotatu/articles/2024-04-13-init-vscode-extension</guid><pubDate>Thu, 27 Jun 2024 18:05:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tLHv-DwW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Workspace%2520%25E5%258D%2598%25E4%25BD%258D%25E3%2581%25A7%2520Remote-SSH%2520%25E5%2585%2588%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%2520VSCode%2520%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ut%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NjkyZjZjMzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25AC%25E3%2581%25BE%25E3%2581%2594%25E3%2581%259F%25E3%2581%25A4%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1ZTZiYzAwNjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ut</dc:creator></item></channel></rss>