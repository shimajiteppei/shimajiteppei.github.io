<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 14 May 2024 11:40:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[AtCoder Daily Training HARD 2024/05/14 17:30start] 参加記録]]></title><description><![CDATA[AtCoder Daily Training HARD 2024/05/14 17:30start に参加しました。
0冠です。
ひどいもんだ。

 E - Robot Takahashi

もしくは こちら

 考え方
体重の小さい順に並べ、順にボーダーラインをチェックして、f(X) の増減を確認します。
基本的に公式解説通りです。
注意するべきは、体重が同じ場合の処理です。
体重が同じ場合、その間にボーダーを置くことができず、まとめて処理する必要があります。
if i != n - 1 and weight == sw[i + 1][0]: で体重が同じ場合を判定しています。
実装例...]]></description><link>https://zenn.dev/shizukakokoro/articles/f1c86ea37d614e</link><guid isPermaLink="true">https://zenn.dev/shizukakokoro/articles/f1c86ea37d614e</guid><pubDate>Tue, 14 May 2024 09:48:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dkVcJz3i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAtCoder%2520Daily%2520Training%2520HARD%25202024%252F05%252F14%252017%253A30start%255D%2520%25E5%258F%2582%25E5%258A%25A0%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2599%25E5%25BF%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTJiOTM3MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>静心</dc:creator></item><item><title><![CDATA[GPT4o を OpenAI API + Gradio で使う]]></title><description><![CDATA[
 GPT4o を OpenAI API + Gradio で使う
ただのメモです。公式以上の情報はないです。.env ファイルに API_KEY を設定している前提です。

 環境構築 (Anacondaの場合)
$ conda create -n finetuning python=3.12
$ conda activate finetuning
$ pip install openai python-dotenv

 コード
GPT4o がマークダウン形式で出力してくる場合に一応対応したつもり。
import os
from dotenv import load_dotenv
fr...]]></description><link>https://zenn.dev/bbled/articles/7116c555f10959</link><guid isPermaLink="true">https://zenn.dev/bbled/articles/7116c555f10959</guid><pubDate>Tue, 14 May 2024 07:05:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BZezoRK7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT4o%2520%25E3%2582%2592%2520OpenAI%2520API%2520%252B%2520Gradio%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B6%2585%25EF%25BC%25AC%25E3%2583%2581%25E3%2582%25AB%25E5%259B%25A3%25E7%25B7%25A8%25E9%259B%2586%25E5%25B1%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZjA2enFDc2wzSWtPcXhWX0c2UEtBZFFtYUpJYnlZY3QzZGVTUEItbHRnZnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>超Ｌチカ団編集局</dc:creator></item><item><title><![CDATA[YAML Templating Tool の概要と使い方]]></title><description><![CDATA[
 ytt とは
ytt（YAML Templating Tool）は、Carvelによって開発された強力なテンプレートツールで、YAMLファイルの管理を簡易化します。このツールは特にKubernetesの設定ファイルを含む複雑なYAML構成を扱う際に有効です。yttは、データの挿入、構成の変更、コードの再利用を容易にするために、プログラム可能なロジックを利用してYAMLファイルを動的に生成することができます。

 1. ytt のインストール方法
さまざまなオペレーティングシステムで ytt を簡単にインストールできます。
macOS（Homebrewを使用）:
brew instal...]]></description><link>https://zenn.dev/bonsai_engineer/articles/ed11eb909d41d8</link><guid isPermaLink="true">https://zenn.dev/bonsai_engineer/articles/ed11eb909d41d8</guid><pubDate>Tue, 14 May 2024 00:30:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yGIQUUX---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YAML%2520Templating%2520Tool%2520%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%259B%2586%25E6%25A0%25BD%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NDI2MGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>盆栽エンジニア</dc:creator></item><item><title><![CDATA[OpenAI の API を使って python で ChagGPT の Fine-Tuning 機能を使う]]></title><description><![CDATA[
 主旨
2024/05 時点での python を使って Fine-Tuning する手順のメモです。基本、公式の通りやればできます。なお、手順や方法は頻繁に変更されるため、公式を参照するほうが確実です。また、Fine-Tuning 自体は python を使わなくても可能です。詳しくは下記を参照してください。

OpenAI API Fine-Tuning


 実行環境の準備
$ conda create -n finetuning python=3.12
$ conda activate finetuning
$ pip install openai python-dotenv
...]]></description><link>https://zenn.dev/bbled/articles/dd8ed61aac20ba</link><guid isPermaLink="true">https://zenn.dev/bbled/articles/dd8ed61aac20ba</guid><pubDate>Mon, 13 May 2024 19:05:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cOgHWWp3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E3%2581%25AE%2520API%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520python%2520%25E3%2581%25A7%2520ChagGPT%2520%25E3%2581%25AE%2520Fine-Tuning%2520%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B6%2585%25EF%25BC%25AC%25E3%2583%2581%25E3%2582%25AB%25E5%259B%25A3%25E7%25B7%25A8%25E9%259B%2586%25E5%25B1%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZjA2enFDc2wzSWtPcXhWX0c2UEtBZFFtYUpJYnlZY3QzZGVTUEItbHRnZnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>超Ｌチカ団編集局</dc:creator></item><item><title><![CDATA[Django Debug Toolbarでパフォーマンスチューニング]]></title><description><![CDATA[
 はじめに
現在、Djangoで開発を行っている学生です。
就活を行うにあたって開発の意識を変えている最中です。
そこで、パフォーマンスチューニングを行いたいと考えこの記事を書いて行きます。
もし、おかしな点などあれば教えていただけると幸いです。
対象者は、すでにDjangoでアプリケーションを開発したことある方です。

 Django Debug Toolbarとは
公式ドキュメントは以下です。
https://django-debug-toolbar.readthedocs.io/en/latest/installation.html
Django Debug Toolbarは、D...]]></description><link>https://zenn.dev/koupro0204/articles/94b08f82530bef</link><guid isPermaLink="true">https://zenn.dev/koupro0204/articles/94b08f82530bef</guid><pubDate>Mon, 13 May 2024 14:07:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J1HIS787--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520Debug%2520Toolbar%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>い。</dc:creator></item><item><title><![CDATA[Docker上でPoetryをインストールしようとしたらはまった話]]></title><description><![CDATA[よく読めばすぐわかる問題だったけど、こういう時遠回りしちゃうんだよなー
後々考えた適切と思われる解析のやり方と一緒に、備忘録として残しておく

 前提

 対象のDockerfile

Dockerfile
FROM python:3.11.9
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# poetryのインストール
RUN curl -sSL https://install.python-poetry.org | python3
COPY pyproject.toml* poetry.lock* ./

RUN poetry config virtua...]]></description><link>https://zenn.dev/zaspa/articles/f01ac26f77f884</link><guid isPermaLink="true">https://zenn.dev/zaspa/articles/f01ac26f77f884</guid><pubDate>Mon, 13 May 2024 13:54:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sat6DN9E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E4%25B8%258A%25E3%2581%25A7Poetry%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2581%25AF%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zaspa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmYTIxOTA2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zaspa</dc:creator></item><item><title><![CDATA[Blueskyのモデレーションリストにユーザーを追加する（Python）]]></title><description><![CDATA[
 更新履歴
2024/05/14 完全一致検索の調査を追加

 はじめに
APIで投稿するサンプルはいくつか見つかるものの、検索やモデレーションリストの追加等のサンプルが無かったので作りました。
実際に使う場合は、後述の注意点等を読んで適宜修正してください。

 事前準備

 Blueskyでの作業
サンプルプログラムの書き換えに必要な情報の取得と、モデレーションリストの作成を行います。

プロフィール画面等から自分のID（例：example.bsky.social）を取得する
アプリパスワードを発行し、取得する

「設定」－「アプリパスワード」画面を開き、「アプリパスワードを追加」ボ...]]></description><link>https://zenn.dev/siwon_g/articles/95af6f85fa7e5b</link><guid isPermaLink="true">https://zenn.dev/siwon_g/articles/95af6f85fa7e5b</guid><pubDate>Mon, 13 May 2024 11:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aYfBVjCj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bluesky%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%258A%25E3%2581%2598%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhZGM4ZjRlMDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しおじい</dc:creator></item><item><title><![CDATA[環境構築すら不要なllamafileでローカルLLM(phi-3)]]></title><description><![CDATA[いままでローカルのLLM構築(特にGPUを積んでいないマシン用)にはllama.cppを使っていました。
llama.cpp自体はコンパイル環境を整える必要がありますが、pythonバインドのllama-cpp-pythonを使うのであれば、pipでインストールすることができます。
ここらへんは、過去にllama.cppおよび、llama-cpp-pythonの構築記事を上げています。
https://zenn.dev/emoclew/articles/b896d9f04df519
https://zenn.dev/emoclew/articles/9dfa7fd948a18b
上記の記...]]></description><link>https://zenn.dev/emoclew/articles/42386452c1b37b</link><guid isPermaLink="true">https://zenn.dev/emoclew/articles/42386452c1b37b</guid><pubDate>Mon, 13 May 2024 09:12:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0odVhJC0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%2589%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AAllamafile%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%2528phi-3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:emoclew%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXVmTzdVbGY4Tl9uV3hlamh0ZHpxSmtMVGpfWTlhNG1vZ0dOWDQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>emoclew</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-333｜C - Repunit Trio]]></title><description><![CDATA[
 設問ページ

🔗ABC-333 C - Repunit Trio



 提出結果
def getInt():
    return int(input())


def main():
    n = getInt()

    mx = 13
    a = set()
    for i in range(1, mx):
        si = int('1' * i)
        for j in range(1, mx):
            sj = int('1' * j)
            for k in range(1, mx):
        ...]]></description><link>https://zenn.dev/hyperdb/articles/dc5c0ad5e53759</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/dc5c0ad5e53759</guid><pubDate>Mon, 13 May 2024 07:27:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U0yPj6Qu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-333%25EF%25BD%259CC%2520-%2520Repunit%2520Trio%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[AtCoder ABC 002 A-正直者 Pythonでの解き方を初心者向けに解説！【競プロ】]]></title><description><![CDATA[https://youtube.com/shorts/1_hj0ZD-uKE?feature=share

 問題
いま、神の恵みで高橋くんにお金が与えられます。
神は高橋くんに 2 つの金額を提示します。
正直者の高橋くんは、常に大きな金額を選択します。
そこで、与えられた 2 つの整数のうち、大きい方の値を出力するプログラムを書いてください。

 制約
0≦X≦10^9
0≦Y≦10^9
お互いに異なることが保証されている。

 入力形式
X Y

 解説
↓こちらが正解例です。

ABC002-A.py
X,Y=map(int,input().split())
ans=max(X,...]]></description><link>https://zenn.dev/yuya_t/articles/0e5181f98021fc</link><guid isPermaLink="true">https://zenn.dev/yuya_t/articles/0e5181f98021fc</guid><pubDate>Mon, 13 May 2024 04:58:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xfZLWVwQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%2520ABC%2520002%2520A-%25E6%25AD%25A3%25E7%259B%25B4%25E8%2580%2585%2520Python%25E3%2581%25A7%25E3%2581%25AE%25E8%25A7%25A3%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E3%2580%2590%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%2590%25E3%2582%25BC%25E3%2583%25AD%25E3%2583%2597%25E3%2583%25AD%25E3%2580%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlYjQyYTY1OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゼロから始めるプログラミング【ゼロプロ】</dc:creator></item><item><title><![CDATA[PythonのTips集]]></title><description><![CDATA[
 はじめに
Pythonを書く際に、よく使うテクニックやツールについてまとめました。特に、自分が今まで困ってきた内容を中心に取り上げており、自分のためのメモとしても活用しています。

 Seaborn
SeabornはPythonで利用可能なデータ可視化ライブラリです。Matplotlibのラッパーライブラリであるため、Matplotlibの機能を利用することができます。Seabornは、データの可視化を行う際に、Matplotlibよりも簡単に利用できるため、データの可視化を行う際には、Seabornをよく利用しています。

 データの読み込み
seabornは、sns.load_d...]]></description><link>https://zenn.dev/naoki0103/articles/python-tips-collection</link><guid isPermaLink="true">https://zenn.dev/naoki0103/articles/python-tips-collection</guid><pubDate>Sun, 12 May 2024 22:39:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4brHy_zp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Python%25E3%2581%25AETips%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWxCWERuLXJiTnA3UzRCb0gzQldFTGh6RlNWQkxhcTIyelQzYW89czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoki</dc:creator></item><item><title><![CDATA[【Blender×Python】Pythonチュートリアル（Blender 4.1）]]></title><description><![CDATA[ 〇内容
 「Blender」の「Python API」に関連する情報をまとめております。
 
 〇更新情報
 2024/05/13 新規作成
 ]]></description><link>https://zenn.dev/yuni50314/books/blender_python_api_ver41</link><guid isPermaLink="true">https://zenn.dev/yuni50314/books/blender_python_api_ver41</guid><pubDate>Sun, 12 May 2024 15:47:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TeIvPTvO--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mNmU2Y2ZhMWE3LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>yuni50314</dc:creator></item><item><title><![CDATA[購買データ分析の基礎]]></title><description><![CDATA[購買データの分析方法についての基礎を学習します。
購買データ分析の重要性や、必要な作業手順について説明していきます。

実際に、KaggleのデータとPython, SQLを用いて無償で分析を行うことができるプログラムもセットしています。]]></description><link>https://zenn.dev/paxdare_labo/books/c1750ffbd59e8b</link><guid isPermaLink="true">https://zenn.dev/paxdare_labo/books/c1750ffbd59e8b</guid><pubDate>Sun, 12 May 2024 13:36:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5XEgWsWe--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mYzEyNzAwM2JjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Pd Labo</dc:creator></item><item><title><![CDATA[Linux pyenv 環境構築]]></title><description><![CDATA[参考
zenn
qiita
apt install
sudo apt install build-essential libffi-dev libssl-dev zlib1g-dev liblzma-dev libbz2-dev libreadline-dev libsqlite3-dev libopencv-dev tk-dev git
pyenvのclone
git clone https://github.com/pyenv/pyenv.git ~/.pyenv
bashに書き込み、再起動
echo '' &gt;&gt; ~/.bashrc
echo 'export PYENV_...]]></description><link>https://zenn.dev/greenbottle/articles/de32bed8a7e6f6</link><guid isPermaLink="true">https://zenn.dev/greenbottle/articles/de32bed8a7e6f6</guid><pubDate>Sun, 12 May 2024 12:27:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4Yieq-q5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%2520pyenv%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:greenbottle%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZjJhZDhjZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>greenbottle</dc:creator></item><item><title><![CDATA[PythonからPDFファイルをテキスト化する(pypdfium2/pypdf編)]]></title><description><![CDATA[Pythonを使いPDFファイルをテキスト抽出する機会があったので、pypdfium2とpypdfの使い方をメモ。
現時点では、比較できるほど使い込んではいない。

 要件

言語は日本語
複数ページのPDFファイル
レイアウトは1段
Pythonから使いたい
スピードは不要


 選定
GitHub 上にPythonのPDFライブラリを様々な観点から比較しているベンチマークレポジトリがある
https://github.com/py-pdf/benchmarks/blob/main/
具体的には、テキスト抽出(Text Extraction Quality)の上位は以下の通り

上位3...]]></description><link>https://zenn.dev/quiver/articles/21c2978cf869db</link><guid isPermaLink="true">https://zenn.dev/quiver/articles/21c2978cf869db</guid><pubDate>Sun, 12 May 2024 05:30:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lzuRsFRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%258B%25E3%2582%2589PDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528pypdfium2%252Fpypdf%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:quiver%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZTA5M2I2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>quiver</dc:creator></item><item><title><![CDATA[今更GymRetroを動かす]]></title><description><![CDATA[
 概要
OpenAIが以前開発を進めていた Gym Retro を動かします。
こちらは、2020年で更新が止まっており、こちらが参照している Gym も
2022年で更新が終了しています。
なので、普通にセットアップを進めてもまともに動かなかったので、
動かすまでに行った事を記載します。

 関連サイト
https://github.com/openai/retro
https://github.com/openai/gym

 環境
OS: Windows11
Anaconda: conda 24.3.0

 手続き

 専用環境の作成
古いバージョンのものを多く利用するので、
普...]]></description><link>https://zenn.dev/rhythmcan/articles/5486522984016f</link><guid isPermaLink="true">https://zenn.dev/rhythmcan/articles/5486522984016f</guid><pubDate>Sun, 12 May 2024 05:08:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OtrHcvfl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E6%259B%25B4GymRetro%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:becky%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkMzBmMjcxNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>becky</dc:creator></item><item><title><![CDATA[conda-forgeに登録したパッケージのバージョンアップ]]></title><description><![CDATA[
 はじめに
こちらの記事で記載しているパッケージ（仮想高分子ライブラリ発生器 SMiPoly）をバージョンアップし、PyPIとconda-forgeに反映したので、次回に備え、conda-forgeの部分をメモ。
素人がなんとかマニュアルを読み解き、みたいなところがあるので、参考程度にご覧ください。

 概要
PyPIでバージョンアップすると、 regro-cf-autotick-botがversion updateを自動作成してくれ、このpull request (PR) をmergeするだけでよかった。

 内容

 1. マニュアル参照
conda-forgeのpackageメン...]]></description><link>https://zenn.dev/pejpo/articles/9f767fa1bf031e</link><guid isPermaLink="true">https://zenn.dev/pejpo/articles/9f767fa1bf031e</guid><pubDate>Sun, 12 May 2024 02:23:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8veA5lhG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:conda-forge%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2597%25E3%2581%259F%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dr_O</dc:creator></item><item><title><![CDATA[NumPy配列を作成する方法3選]]></title><description><![CDATA[
 はじめに
NumPy配列(ndarray)を作成する方法を3つまとめます。

 1.np.array()
最も知られている手法であり、配列をndarrayにして返します。
l = [1,2]
arr = np.array(l)
引数と返り値は別オブジェクトです。
arr[0] = 2
l[0],arr[0]
(1, 2)

 2.np.asarray()
np.asarray()でもNumPy配列を作成できます。
l = [1,2]
arr = np.asarray(l)
ただしnp.asarray()はnp.array()とは異なり、引数にndarrayが入力された場合は参照オブジ...]]></description><link>https://zenn.dev/sergicalsix/articles/d12592d5b750af</link><guid isPermaLink="true">https://zenn.dev/sergicalsix/articles/d12592d5b750af</guid><pubDate>Sat, 11 May 2024 16:33:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HsL5Abbb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPy%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%25953%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlNzliZWZhNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sergicalsix</dc:creator></item><item><title><![CDATA[日本語対応オープンソースOCRの比較 その２]]></title><description><![CDATA[以前の比較からそれぞれバージョンが上がっていましたので、再度比較しました。
・Tesseract
・PaddleOCR
・EasyOCR
それぞれの実行
といっても、モデルファイルの更新は、paddleOCRだけのようでしたので、軽く比較して、paddleOCRを少し試してみます。
実行方法は、前回Colabと同じ[1][2]です。



 結果
Tesseract, EasyOCRは、変化なし
PaddleOCRは、ほとんど変わらず。わずかによくなった？
Google Cloud Visionには及ばず

PaddleOCRv2.6.0(PP-OCRv3)


PaddleOCRv2....]]></description><link>https://zenn.dev/piment/articles/f4bc4d95310234</link><guid isPermaLink="true">https://zenn.dev/piment/articles/f4bc4d95310234</guid><pubDate>Sat, 11 May 2024 16:31:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rBI-lhBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぴーまん</dc:creator></item><item><title><![CDATA[デコレータは「関数名を引数にできる」ことが分かれば簡単]]></title><description><![CDATA[
 関数名の引数
def start_end(f):
  def plus_st_en(x):
    print("----")
    f(x)
    print("----")
  return plus_st_en

def f(x):
  print(x)

x = 987
start_end(f)(x)
#----
#987
#----

 同じコードがデコレータを使って簡潔に書ける
def start_end(f):
  def plus_st_en(x):
    print("----")
    f(x)
    print("----")
  return plu...]]></description><link>https://zenn.dev/nacht/articles/236b133ab5164d</link><guid isPermaLink="true">https://zenn.dev/nacht/articles/236b133ab5164d</guid><pubDate>Sat, 11 May 2024 16:06:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pxFLhRq8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AF%25E3%2580%258C%25E9%2596%25A2%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%258D%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E5%2588%2586%25E3%2581%258B%25E3%2582%258C%25E3%2581%25B0%25E7%25B0%25A1%25E5%258D%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nacht%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWQ2ZGNjZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nacht</dc:creator></item></channel></rss>