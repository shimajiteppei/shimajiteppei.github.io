<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 29 Aug 2024 12:03:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Nuxt3環境の単体テスト方法を確立させた]]></title><description><![CDATA[
 はじめに
私は普段、Nuxt3でフロントエンド開発をすることが多いのですが、単体テストの方法が確立しておりませんでした。
最近、自分なりの方法が確立したので、紹介します。
今回紹介する技術を使ってテストの準備をしていけば、Nuxt3で、効率的かつ継続が辛くないテストコードが書けますので、是非読んで実行してください！

 できること

Nuxt3 × vitestでの単体テストの方法をすることができる。
テストファイルで、毎回お決まりの設定を書かないで済むようになる。
Nuxt環境での単体テストは、オートインポートやuseStateなどのモックが辛いが、それをほぼしないで良くなる。
A...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/bf98c7af78c4d7</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/bf98c7af78c4d7</guid><pubDate>Thu, 29 Aug 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Nu08yAo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E7%25A2%25BA%25E7%25AB%258B%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu_aoringo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[[WIP]Amplify and Custom Resources]]></title><description><![CDATA[Amplify Gen 2 を 5 ヶ月ほど使用した感想と現在地について。
https://docs.amplify.aws/react/

 tl;dr

Custom Resources で全て構成するのは難易度が高い。


 Dry run が欲しい

Terraform でいう terraform plan、AWS CDK でいう cdk diff [1] が存在しない。
deploy はいつも一か八か。
本番運用を諦めた原因の 1 つ。


 CloudFormation が壊れがち。

ご共有いただきましたログに記録されている「current_account-current_...]]></description><link>https://zenn.dev/dannya/articles/ab35c16b660aa4</link><guid isPermaLink="true">https://zenn.dev/dannya/articles/ab35c16b660aa4</guid><pubDate>Thu, 29 Aug 2024 11:40:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1bXCe190--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%255BWIP%255DAmplify%2520and%2520Custom%2520Resources%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNDY0NzBmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke Yamamoto</dc:creator></item><item><title><![CDATA[VSCode の TypeScript のインポート部分をフォーマットする機能]]></title><description><![CDATA[
 概要
VSCode には、TypeScript での以下のフォーマット機能があります。

未使用のインポートの削除
インポートの並び替え（昇順）

以下、該当コマンドです。
削除: TypeScript: Remove Unused Imports
並び替え: TypeScript: Sort Imports
削除&amp;並び替え： Organize Imports
なお、入力先（コマンドパレット）は以下のショートカットで開けます。
Mac: Cmd + Shift + P
Win: Ctrl + Shift + P
VSCode: 1.84.2

 コマンドを使用してみる
コマン...]]></description><link>https://zenn.dev/masani/articles/eac69a28d2779a</link><guid isPermaLink="true">https://zenn.dev/masani/articles/eac69a28d2779a</guid><pubDate>Thu, 29 Aug 2024 11:21:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TojC78j5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E3%2581%25AE%2520TypeScript%2520%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E9%2583%25A8%25E5%2588%2586%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkIzN29iSFVFazgteDh1eEJVTG1JWmtCOHItb3htWGY0ZkNtaUJVcXRTPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masani</dc:creator></item><item><title><![CDATA[Prisma TypedSQL をクエリビルダとしてのみ運用する]]></title><description><![CDATA[タイトルのこともできることを検証した。（ORM で文句ない人は ORM として使えばいい）
Prisma は TypeScript の優秀な ORM / QueryBuilder だが、Prisma 以外で運用されていると途中から投入するのが（一応可能ではあるが）面倒だったりする。
だが Typed SQL によって、既に存在するDBに対して、副作用なくクエリビルダとしてのみ導入することができるのでは、と思いついて試したところ、できた。
https://www.prisma.io/docs/orm/prisma-client/using-raw-sql/typedsql
今回はリモートの...]]></description><link>https://zenn.dev/mizchi/articles/prisma-as-query-builder-only</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/prisma-as-query-builder-only</guid><pubDate>Thu, 29 Aug 2024 08:46:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5iYrK-I_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%2520TypedSQL%2520%25E3%2582%2592%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AE%25E3%2581%25BF%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[VueとReactの設計思想の違い]]></title><description><![CDATA[
 VueとReactの設計思想の違い

 1. アプローチの哲学



フレームワーク
アプローチ
説明




Vue.js
漸進的フレームワーク
小規模な部分的導入から始めて徐々に機能を拡張。テンプレートベースでHTMLやCSSに慣れた開発者に直感的。ビュー層の強化に特化。


React
UIライブラリ
コンポーネントベースで複雑なUIを構築。宣言的UI設計と再利用可能なコンポーネントに重きを置き、UIの状態管理を予測可能に。




 2. テンプレート vs. JSX

 Vue.jsのテンプレートシンタックス

VueはHTMLベースのテンプレートシンタックスを使用。
宣言...]]></description><link>https://zenn.dev/kibe/articles/1a7da71a36ea21</link><guid isPermaLink="true">https://zenn.dev/kibe/articles/1a7da71a36ea21</guid><pubDate>Thu, 29 Aug 2024 08:30:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t7TlpVx9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25A8React%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E6%2580%259D%25E6%2583%25B3%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k1b3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwOTYwY2IzNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k1b3</dc:creator></item><item><title><![CDATA[SvelteKit で OGP 画像を自動生成する]]></title><description><![CDATA[
 SvelteKit で OGP 画像を自動生成する


 はじめに
最近、ビジネスアイデアラボ というアプリを作りました。このアプリでは、AI がアイデアを評価したり、市場調査・競合調査をしてくれます。各ポストにはユニークな URL が振られており、内容も異なります。これらのポストを Facebook や X などの外部サイトに公開する際に、内容に基づいた OGP（Open Graph Protocol）画像があれば理想的です。
しかし、ポスト毎に静的な画像を作成するのは手間がかかります。そこで、自動で OGP 画像を生成する方法を探りました。この記事では、SvelteKit で O...]]></description><link>https://zenn.dev/shapieron/articles/svelte_kit_ssr</link><guid isPermaLink="true">https://zenn.dev/shapieron/articles/svelte_kit_ssr</guid><pubDate>Thu, 29 Aug 2024 04:51:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3fMwE7oJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SvelteKit%2520%25E3%2581%25A7%2520OGP%2520%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ekusiadadus%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwMzdhMzY3MGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BreakAI%2520%25E9%2596%258B%25E7%2599%25BA%25E9%2583%25A8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owQTdHV3Q0eUx2U1dIamZ5eVhhSjNMSWpaUVJ4MlNxTFNvMzExPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ekusiadadus</dc:creator></item><item><title><![CDATA[VueUseのcomputedAsyncについて調べてみた。]]></title><description><![CDATA[実務でVueUseを使う機会があり、これを期に気になっていたcomputedAsyncについて自分なりの知見をまとめようと思います。
コードベースはほとんど、[ICS MEDIA様]https://ics.media/entry/230606/ のを活用させていただいています。

 computedAsyncとは
https://vueuse.org/core/computedAsync/#computedasync
説明

Computed for async functions

公式の英語で書かれている通り、computedでasync関数が使用できますよって事ですね。
Vueの標...]]></description><link>https://zenn.dev/tamon_kondo/articles/951fc2e58cce17</link><guid isPermaLink="true">https://zenn.dev/tamon_kondo/articles/951fc2e58cce17</guid><pubDate>Thu, 29 Aug 2024 02:45:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q4dpNzBl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VueUse%25E3%2581%25AEcomputedAsync%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t.k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1WWoxNXZlTDl0VE9pd0p0VHVZSXUyNENJMkJuOG1MYkhNcjFvN2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.k</dc:creator></item><item><title><![CDATA[Supabase サードパーティ認証を試してみる 【Supabase + Amazon Cognito】]]></title><description><![CDATA[
 はじめに
こんにちは！
「愛犬との毎日を楽しく便利にするアプリ オトとりっぷ」でエンジニアしています、足立です！
この記事では、先日の Supabase Launch Week で発表されたサードパーティ認証（Amazon Cognito）を試してみたいと思います。
https://supabase.com/blog/third-party-auth-mfa-phone-send-hooks
Supabase + Amazon Cognito の使用感の参考になれば幸いです。

 準備作業
公式のドキュメントは以下の通りです。
https://supabase.com/docs/gu...]]></description><link>https://zenn.dev/ototrip/articles/tech-supabase-cognito-1</link><guid isPermaLink="true">https://zenn.dev/ototrip/articles/tech-supabase-cognito-1</guid><pubDate>Thu, 29 Aug 2024 01:26:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5qNXwSwU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%25E3%2580%2590Supabase%2520%252B%2520Amazon%2520Cognito%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2580%2590%25E5%2585%25AC%25E5%25BC%258F%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2588%25E3%2581%25A8%25E3%2582%258A%25E3%2581%25A3%25E3%2581%25B7%2520-%2520%25E7%258A%25AC%25E5%25B0%2582%25E7%2594%25A8%25E3%2581%25AE%25E9%259F%25B3...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3NGU5ZTJkYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>【公式】オトとりっぷ - 犬専用の音楽アプリ</dc:creator></item><item><title><![CDATA[TypeScript意外と忘れがちな機能]]></title><description><![CDATA[こんにちは。FEチームのMapleです。私たちのチームは、現在のシステムアーキテクチャを見直し、Reactを用いた新しいアーキテクチャへの移行を検討しています。今回は先日TypeScriptの型について解説を行ったので、意外と忘れがちな機能について解説出来たらなと思います。

 はじめに

私が思った意外と忘れがちな機能なので、人によるかもしれません
今回はコードを長めに実際に導入されそうな感じで記述出来たらなと思います


 Conditional Typesの応用
TypeScriptの条件付き型（Conditional Types）は、型を柔軟に操作する強力なツールです。T ext...]]></description><link>https://zenn.dev/team_soda/articles/6433c26c4b3bad</link><guid isPermaLink="true">https://zenn.dev/team_soda/articles/6433c26c4b3bad</guid><pubDate>Thu, 29 Aug 2024 01:18:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sQh1jRsB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E6%2584%258F%25E5%25A4%2596%25E3%2581%25A8%25E5%25BF%2598%25E3%2582%258C%25E3%2581%258C%25E3%2581%25A1%25E3%2581%25AA%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%2599%25BD%25E8%2589%25B2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYTM5ODQ3MWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SODA%2520Engineering%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyM2Y1N2EwYTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>白色</dc:creator></item><item><title><![CDATA[Momento Topics でマイクロサービス間の状態管理を行い、React アプリケーションで処理状態をプログレスバーで表示する]]></title><description><![CDATA[
 マイクロサービス間の状態管理
ユーザーの一括 CSV インポートといったような時間がかかる重たい処理を非同期的に実行するために、マイクロサービスに切り離したとします。
次の図でいうと、フロントエンドである React アプリケーションからリクエストが送信され、
最終的に Lambda が重たい処理を非同期で実行します。

この場合、フロントエンドで処理の状態を把握するにはどうするか...
いくつか方法が考えられると思います。
例えば、フロントエンドから数秒ごとに定期的にリクエストを送り、
処理状況を確認し続けるというポーリングする仕組みでも実現できるかと思います。
ただ、今回は Mo...]]></description><link>https://zenn.dev/collabostyle/articles/8b022480126828</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/8b022480126828</guid><pubDate>Wed, 28 Aug 2024 23:55:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NpHu0GV1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Momento%2520Topics%2520%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E9%2596%2593%25E3%2581%25AE%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2584%25E3%2580%2581React%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E7%258A%25B6%25E6%2585%258B%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGU2OTJiOTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山とコード</dc:creator></item><item><title><![CDATA[neverthrowのsafeTryのすゝめ]]></title><description><![CDATA[
 はじめに
neverthrowはJavaScript/TypeScriptのResult実装を提供するライブラリです。筆者は2024年6月頃からこのライブラリのメンテナとして活動しています。
neverthrowでは複数のResultを直列に扱うとき、andThenで繋いだり一度エラーハンドリングをするのが基本のスタイルでしたが、v6.1.0から入ったsafeTryを使うとasync関数やHaskellのdo構文のようなノリで書けるようになります。さらに、執筆時点での最新版であるv7.0.1で型定義が改善され、使いやすさが格段に向上しました。safeTry自体があまり知られていないよ...]]></description><link>https://zenn.dev/mshaka/articles/4fd5873a3fc90f</link><guid isPermaLink="true">https://zenn.dev/mshaka/articles/4fd5873a3fc90f</guid><pubDate>Wed, 28 Aug 2024 15:55:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ItjFzb3M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:neverthrow%25E3%2581%25AEsafeTry%25E3%2581%25AE%25E3%2581%2599%25E3%2582%259D%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A8%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MGMxZmFkMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほとけ</dc:creator></item><item><title><![CDATA[Reactの多言語対応を効率化するための辞書管理ベストプラクティス]]></title><description><![CDATA[※言語ごとのオブジェクト(json)のことをこの記事では辞書と呼びます。

 はじめに
Reactでreact-i18nextを使用して多言語対応をしています。
そこで使用している辞書運用のベストプラクティスを模索しました。
導入時の初期設定などは省きます🙇‍♂

 よくある実装(工夫前)
例えば、日本語と英語対応したいと思ったときに、以下のような実装がよくあると思います。

 ja.json 日本語の辞書
{
  "profile": {
    "name": "名前",
    "email": "メールアドレス",
    "password": "パスワード"
  },
  "...]]></description><link>https://zenn.dev/x_point_1/articles/2a4046d0ca514e</link><guid isPermaLink="true">https://zenn.dev/x_point_1/articles/2a4046d0ca514e</guid><pubDate>Wed, 28 Aug 2024 12:47:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lCJ8eHpL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshiyuki%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWdCU1IzQ2hSdzBrcU5QLXRjSEJzYmh4Qm9iZUtBZnBLdkpfTW84aWkzcWVTb1EtZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Sato</dc:creator></item><item><title><![CDATA[DataTables extensionのデバッグ]]></title><description><![CDATA[最終的にはDataTableSrcをチェックアウトして、テストランナーが揃った環境を揃えることになる。
本体のテストは DataTableSrc の README に書いてある通り。実は extension のセットアップも本体でできる。
build/make.sh が多機能で、extension を checkout するところから実行できる。標準では git: scheme になっているので、必要に応じて https: scheme に書き換えておく。extension は extensions ディレクトリ下に clone される。
bash build/make.sh all
u...]]></description><link>https://zenn.dev/kwi/articles/91da1068fb5655</link><guid isPermaLink="true">https://zenn.dev/kwi/articles/91da1068fb5655</guid><pubDate>Wed, 28 Aug 2024 01:50:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ohuo4kwk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DataTables%2520extension%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kwi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kwi</dc:creator></item><item><title><![CDATA[50行でGo風味のDeno用のHTTPルーターを作る]]></title><description><![CDATA[
 はじめに
!
GoはHello World程度のプログラムしか書いたことがないので、Goについては誤った説明が含まれている可能性があります。

Goの標準ライブラリのnet/httpパッケージを見ていたら、パスにHTTPメソッドを指定できる機能が1.22から追加されていました。
mux := http.NewServeMux()
// GETを指定したハンドラの登録
mux.HandleFunc("GET /hello", func(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World")
})
...]]></description><link>https://zenn.dev/ryuapp/articles/deno-50-lines-router</link><guid isPermaLink="true">https://zenn.dev/ryuapp/articles/deno-50-lines-router</guid><pubDate>Tue, 27 Aug 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XSwdalXm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:50%25E8%25A1%258C%25E3%2581%25A7Go%25E9%25A2%25A8%25E5%2591%25B3%25E3%2581%25AEDeno%25E7%2594%25A8%25E3%2581%25AEHTTP%25E3%2583%25AB%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0NzUzMTZkNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryu</dc:creator></item><item><title><![CDATA[生SQLに型を手書きする時代は終わり？Prismaの新機能「TypedSQL」]]></title><description><![CDATA[
 生SQLを扱う $queryRaw

TypeScript向けのORMライブラリとしてPrismaがあります。Prismaは直感的で型安全なAPIを提供し、TypeScript向けのORMとしては第一に名前が上がることが多いライブラリです。
しかしそんな人気なPrismaでも、裏側では少しクセのあるSQLが発行されていたり、欲しいSQLがPrismaのAPIでは実現できない場合があります。
そういった場合のために $queryRaw というメソッドが用意されており、これを使うことで生SQLを書いてその結果を受け取ることができました。他のORMにもよくある機能です。
例えば以下のように...]]></description><link>https://zenn.dev/tockn/articles/0e6eac6220e072</link><guid isPermaLink="true">https://zenn.dev/tockn/articles/0e6eac6220e072</guid><pubDate>Tue, 27 Aug 2024 18:36:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SJodKuel--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259FSQL%25E3%2581%25AB%25E5%259E%258B%25E3%2582%2592%25E6%2589%258B%25E6%259B%25B8%25E3%2581%258D%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AF%25E7%25B5%2582%25E3%2582%258F%25E3%2582%258A%25EF%25BC%259FPrisma%25E3%2581%25AE%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%258CTypedSQL%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tockn%2520%257C%2520Cloudbase%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMzc2NjgwYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tockn | Cloudbase</dc:creator></item><item><title><![CDATA[【Next.js × tRPC】tRPCを用いたRSCでのデータフェッチ]]></title><description><![CDATA[
 はじめに
昨今のWeb開発において、TypeScriptを用いたフロントエンドやバックエンドでの型安全なアプリケーション開発がますます求められています。その中で、注目を集めているのが「T3 Stack」という技術スタックです。
効率的に型安全なアプリケーションを構築できることから、T3 Stackでの開発を推進しています。
T3 Stackとは
T3 Stackとはsimplicity（簡潔さ）、modularity（モジュール性）、full-stack type safety（フルスタックの型安全）を追求した思想に焦点を当てています。
そしてそれらを実現するために以下6つの技術スタ...]]></description><link>https://zenn.dev/kiwichan101kg/articles/1d79197bf4eb4a</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/1d79197bf4eb4a</guid><pubDate>Tue, 27 Aug 2024 13:26:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4uRNvCCb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%2520%25C3%2597%2520tRPC%25E3%2580%2591tRPC%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FRSC%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[AWS SDK V3 (TypeScript)  で S3 に格納した Shift-JIS の CSV を取得・パースする]]></title><description><![CDATA[
 S3 の Shift-JIS ファイルに注意
S3 に格納したテキストファイルを扱う際、エンコードに注意する必要があります。
Shift-JIS など、エンコードが UTF-8 でない場合はパース処理が必要です！

 Shift-JIS の CSV を取得・パースする

 プロジェクトの準備
Shift-JIS の CSV を扱うために使用する npm パッケージは以下です。

iconv-lite
csv-parse - npm

TypeScript の実行環境を準備します。
mkdir s3-encode-sandbox
cd s3-encode-sandbox
npm ini...]]></description><link>https://zenn.dev/collabostyle/articles/ef669f8a375903</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/ef669f8a375903</guid><pubDate>Tue, 27 Aug 2024 12:35:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FaAtMcPG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520SDK%2520V3%2520%2528TypeScript%2529%2520%2520%25E3%2581%25A7%2520S3%2520%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2597%25E3%2581%259F%2520Shift-JIS%2520%25E3%2581%25AE%2520CSV%2520%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2583%25BB%25E3%2583%2591...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGU2OTJiOTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山とコード</dc:creator></item><item><title><![CDATA[【zod】「なくてもいいけど、あるならちゃんと」な、バリデーション]]></title><description><![CDATA[こんばんは！
今回は、最近ドツボにハマってしまって時間をかけてしまった実装についての記事です。
紹介したいのはz.optional()でもなく、z.nullish()でもなく、z.nullable（）でもなく、あくまでもタイトルにあるように　「なくてもいいけど、あるならちゃんと」　なバリデーションです...👼

 「なくてもいいけど、あるならちゃんと」なバリデーション
さて...。「なくてもいいけど、あるならちゃんと」なバリデーション...何をいうとるんでしょうか？
これ以外の呼び名が思いつかず、こんな表現になってしまいましたが今回はこれで通させていただきます。(もし一般的な呼び名を知っ...]]></description><link>https://zenn.dev/gemcook/articles/4ad8a57bcb76e2</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/4ad8a57bcb76e2</guid><pubDate>Tue, 27 Aug 2024 09:35:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GVTSmXwU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590zod%25E3%2580%2591%25E3%2580%258C%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E3%2582%2582%25E3%2581%2584%25E3%2581%2584%25E3%2581%2591%25E3%2581%25A9%25E3%2580%2581%25E3%2581%2582%25E3%2582%258B%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E3%2580%258D%25E3%2581%25AA%25E3%2580%2581%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B2%25E3%2582%2587%25E3%2581%25B7%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MmQ2ODA0Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひょぷて</dc:creator></item><item><title><![CDATA[Supabase ミートアップ in 東京にLT枠で参加しました]]></title><description><![CDATA[こんにちは、株式会社Berryの浅沼です。
今回は、8月22日に行われたSupabaseのミートアップイベントに、LT枠で参加してきましたので、LTした内容を紹介したいと思います。
https://supabase.connpass.com/event/326347/

 Supabase ミートアップ in 東京
Supabaseのコミュニティミートアップであり、今回は、Supabaseローンチウィーク１２の開催を記念しての開催になりました。Supabaseローンチウィークでは、様々な新機能などが次々と公開・紹介されていきます。今回も、In-browser Postgresとなるpos...]]></description><link>https://zenn.dev/berry_blog/articles/ae64879b424a06</link><guid isPermaLink="true">https://zenn.dev/berry_blog/articles/ae64879b424a06</guid><pubDate>Tue, 27 Aug 2024 07:44:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--63FDnkVk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%2520%25E3%2583%259F%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2520in%2520%25E6%259D%25B1%25E4%25BA%25AC%25E3%2581%25ABLT%25E6%259E%25A0%25E3%2581%25A7%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25B5%2585%25E6%25B2%25BC%25E3%2580%2580%25E6%2595%25AC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiMWVhYjdiNDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEBerry%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0ODZkOTY4NWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>浅沼　敬</dc:creator></item><item><title><![CDATA[Cloudflare Turnstileの導入 と CAPTCHA回避対策]]></title><description><![CDATA[!
Cloudflare Turnstileの導入は既にできてて、「2captcha」などのCAPTCHA回避サービスで回避されるのを対策する方法だけを知りたいって人は、こちら


 Cloudflare Turnstileとは
簡単に説明するなら
Cloudflareが提供するCAPTCHA代替ツールで、reCAPTCHAなどのCAPTCHAとは異なり、ユーザーが画像を選択したり文字を入力したりする必要がない代わりに、ユーザーの行動や環境情報を基にリスク評価を行い、人間かボットかを判断する。

 導入
Cloudflare Turnstileを導入するための基本的な手順は以下の通りです...]]></description><link>https://zenn.dev/localer/articles/335602817265d3</link><guid isPermaLink="true">https://zenn.dev/localer/articles/335602817265d3</guid><pubDate>Tue, 27 Aug 2024 04:31:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7kkENbbw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Turnstile%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%2520%25E3%2581%25A8%2520CAPTCHA%25E5%259B%259E%25E9%2581%25BF%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%2582%25E3%2582%258A%25E3%2581%25AB%25E3%2581%258F%25E3%2582%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9lo...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjZWUxZjI0ZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くもりにくもったクラウドサービスlocaler</dc:creator></item></channel></rss>