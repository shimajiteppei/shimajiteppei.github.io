<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 24 Aug 2024 04:00:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Vitest公式になったeslint-plugin-vitestを導入して、適切なVitestのお作法を学んでみる]]></title><description><![CDATA[https://x.com/vitest_dev/status/1823317887051759787
このポストを見て「vitestに対するLinterがあるのか〜」となり、導入してみることにした。

 導入
簡単で、リポジトリのREADMEのとおりそのままやればOK
https://github.com/vitest-dev/eslint-plugin-vitest?tab=readme-ov-file
eslintは入っている前提で、
npm install @vitest/eslint-plugin --save-dev
して、eslint.config.js(eslint 9系...]]></description><link>https://zenn.dev/bs_kansai/articles/8ff70404804f60</link><guid isPermaLink="true">https://zenn.dev/bs_kansai/articles/8ff70404804f60</guid><pubDate>Sat, 24 Aug 2024 01:22:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YJ_hT6b0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vitest%25E5%2585%25AC%25E5%25BC%258F%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259Feslint-plugin-vitest%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E9%2581%25A9%25E5%2588%2587%25E3%2581%25AAVitest%25E3%2581%25AE%25E3%2581%258A%25E4%25BD%259C%25E6%25B3%2595%25E3%2582%2592%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMDEzZTI2ODYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kobe.ts%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMzk2NTJkZmEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[JavaScript配列]]></title><description><![CDATA[
 はじめに
配列が保持するメソッドにはコールバック関数を引数に取るものがある。コールバック関数を引数に取ることにより配列の要素に対する繰り返しの処理の記述の簡略化ができる。ここではforEach、filter、sortについて説明をする。

 forEach
forEachメソッドは配列の要素に他する繰り返し処理をコールバック関数を利用して書くことができる。
以下のようにコールバック関数の引数として値、添字、配列が渡される。
例１）
const arry = [1, 2, 3, 4, 5];
arry.forEach(function(value, index,arry) {
   c...]]></description><link>https://zenn.dev/kasai/articles/07ec98afeff690</link><guid isPermaLink="true">https://zenn.dev/kasai/articles/07ec98afeff690</guid><pubDate>Fri, 23 Aug 2024 14:09:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9jpkw__i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:JavaScript%25E9%2585%258D%25E5%2588%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasai%2520Ukyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3F2dWdUMTdiRFNiQ0NDZ3NJNUNMa190ZUV4S25rWktMcDNiNVZlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasai Ukyo</dc:creator></item><item><title><![CDATA[Cloudflare Workers 入門【はじめからそうやって教えてくれればいいのに！】]]></title><description><![CDATA[
 はじめに
この記事の内容は、以下の動画でも解説しています。アニメーションでわかりやすくなっているので、ぜひ見てみてください。他にも Web に関する解説動画を投稿しているので、気になる人はチャンネル登録よろしくお願いします！
https://www.youtube.com/watch?v=ijjNvTKl5eg

 Cloudflare Workers とは？
Cloudflare Workers とは、一言で言うと、Cloudflare のエッジで動くサーバーレスの JavaScript 実行環境のことです。
...と言っても、これだけだとよくわからないですよね。だから、今回は初め...]]></description><link>https://zenn.dev/ak/articles/a2bd28a258b615</link><guid isPermaLink="true">https://zenn.dev/ak/articles/a2bd28a258b615</guid><pubDate>Fri, 23 Aug 2024 11:35:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mCHl5Nb---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%2520%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%258B%25E3%2582%2589%25E3%2581%259D%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258C%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AB%25EF%25BC%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YTNhNmZhNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki</dc:creator></item><item><title><![CDATA[Kintoneプラグインの作り方]]></title><description><![CDATA[
 Kintoneプラグインの作り方
こんにちは、株式会社Bizlinkの開発エンジニアZihanです。今回Kintoneで一つの看板プラグインを作ったので、Kintoneプラグインの作り方を共有します。

 1. プラグインの設定画面を作る(React)


設定画面のHTML(config.html), React用の入り口
&lt;section&gt;
  &lt;div id="react-root"&gt;&lt;/div&gt;
&lt;/section&gt;



設定画面のjs (plugin_config.js, PluginConfigApp.jsx)
const...]]></description><link>https://zenn.dev/zihan/articles/f65f08c71eca00</link><guid isPermaLink="true">https://zenn.dev/zihan/articles/f65f08c71eca00</guid><pubDate>Fri, 23 Aug 2024 09:06:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7ohSvREf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kintone%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zihan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3FkanozUlBlUFFMRGl1RmtEZDFlUHNlTWdVcmwwUTZPd2NqdVdXRHBZTDFvRER3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zihan</dc:creator></item><item><title><![CDATA[Waku v0.21リリース反響まとめ]]></title><description><![CDATA[https://x.com/dai_shi/status/1825907642654666973
から、いくつかのサイトで取り上げられましたのでまとめておきます。

 This Week In React
https://thisweekinreact.com/newsletter/197

 React Status
https://react.statuscode.com/issues/396

 Bytes
https://bytes.dev/archives/316
]]></description><link>https://zenn.dev/dai_shi/articles/10c5821b22b72a</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/10c5821b22b72a</guid><pubDate>Fri, 23 Aug 2024 03:17:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TCozokHa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Waku%2520v0.21%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E5%258F%258D%25E9%259F%25BF%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[「void 0」とは]]></title><description><![CDATA[
 経緯
aws-sdk-client-mock-jestのコードを見ていた時にvoid 0という表現が出てきて、初めてその書き方を知ったので忘備録として本記事を作成しました。

 サンプル・まとめ
以下の通りvoid 0はundefinedを返す演算子になります。
const test = void 0;
console.log(test); // undefined

 参考
JavaScript の undefined と void 0 と
]]></description><link>https://zenn.dev/souemon/articles/190a9931220279</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/190a9931220279</guid><pubDate>Thu, 22 Aug 2024 10:30:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3NGo5BAu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2580%258Cvoid%25200%25E3%2580%258D%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[Masonry Layoutの進展とCSS Gridとの関係 ー ライブラリの変遷と今後の展望]]></title><description><![CDATA[アルダグラムでソフトウェアエンジニアとして活動している松田です。
プロダクト開発において、大きさの異なるUI要素を2次元で配置するデザイン要件が発生しました。
そのためのソリューションを検討する中で、Masonry Layoutに関する技術の変遷を知りました。
今回は、その調査をもとに、今後の開発におけるMasonry Layoutの取り扱いについて考えてみました。


 Masonry Layout とは
Masonry Layoutは、異なるサイズの要素を隙間なく配置するレイアウト手法で、建築の組積造（Masonry）に由来しています。
画像や記事のギャラリー表示に多く用いられ、代表...]]></description><link>https://zenn.dev/aldagram_tech/articles/5f33d0c925c0ff</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/5f33d0c925c0ff</guid><pubDate>Thu, 22 Aug 2024 02:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UF-qsEnU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Masonry%2520Layout%25E3%2581%25AE%25E9%2580%25B2%25E5%25B1%2595%25E3%2581%25A8CSS%2520Grid%25E3%2581%25A8%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%2520%25E3%2583%25BC%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E5%25A4%2589%25E9%2581%25B7%25E3%2581%25A8%25E4%25BB%258A%25E5%25BE%258C%25E3%2581%25AE%25E5%25B1%2595%25E6%259C%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kento%2520matsuda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYThhMjRhMDcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kento matsuda</dc:creator></item><item><title><![CDATA[Webview APIを使ったVSCode拡張機能の開発方法をハンズオンっぽく解説]]></title><description><![CDATA[
 はじめに
先日初めてVSCodeの拡張機能を作って公開しました。
https://marketplace.visualstudio.com/items?itemName=ikoamu.side-clipboard
VSCodeの拡張機能の開発した際に得た知見を記事にしようと思っていたのですが、作ったものがよくある「ハンズオンで作るTodoアプリ」っぽいものになったので、雛形の作成からの実装過程をハンズオンっぽく書いていみました。

!
公開した拡張と本記事で作るものは機能的にはほぼ同じですが、CSSの実装部分の説明がめんどくさくなったので見た目が少し異なります。公開した拡張機能のソー...]]></description><link>https://zenn.dev/ikoamu/articles/f10441bab57efc</link><guid isPermaLink="true">https://zenn.dev/ikoamu/articles/f10441bab57efc</guid><pubDate>Wed, 21 Aug 2024 16:06:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HcIlMmQ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Webview%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FVSCode%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikoamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiZGM5Y2E2MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikoamu</dc:creator></item><item><title><![CDATA[hasOwnProperty()でプロパティの有無を判定する：JavaScript]]></title><description><![CDATA[
 概要
hasOwnProperty()でプロパティの有無を判定し、テキストを返すJavaScriptのサンプルコードを作りました。

 サンプルコード
const greet = {
  ja: 'こんにちは',
  en: 'Hello',
  cn: '你好'
}

// 指定された言語コードに対応する挨拶文を取得する関数
function getLocalizedText(obj, lang) {
  if (obj.hasOwnProperty(lang)) {
    return obj[lang]
  } else {
    throw new Error(`Erro...]]></description><link>https://zenn.dev/hossy000/articles/aa7269f4a9e5fd</link><guid isPermaLink="true">https://zenn.dev/hossy000/articles/aa7269f4a9e5fd</guid><pubDate>Wed, 21 Aug 2024 12:46:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j7OzmS2A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:hasOwnProperty%2528%2529%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AE%25E6%259C%2589%25E7%2584%25A1%25E3%2582%2592%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259AJavaScript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZWYwNjZlNGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hossy</dc:creator></item><item><title><![CDATA[ObjectのKeyに変数を使う（ブラケット表記法[]）]]></title><description><![CDATA[
 ObjectのKeyに変数を使う方法
ObjectのKeyに変数を使いたい場合、以下のようにブラケット表記法を使用します。

ケース1
const variableKey = "age";
const obj = {
  [variableKey]: 20,
};
console.log(obj[variableKey]); // 20
console.log(obj); // { age: 20 }


 ObjectのKeyにテンプレートリテラルを使いたい場合
ObjectのKeyにテンプレートリテラルを使いたい場合も同様に、以下のようにブラケット表記法を使用します。

ケース2...]]></description><link>https://zenn.dev/souemon/articles/e5ab42d392237e</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/e5ab42d392237e</guid><pubDate>Wed, 21 Aug 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Ti7a_Nj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Object%25E3%2581%25AEKey%25E3%2581%25AB%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%2588%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E8%25A1%25A8%25E8%25A8%2598%25E6%25B3%2595%255B%255D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[今後のnodejsのtypescript依存について思ったこと。]]></title><description><![CDATA[ざっと目を通して思った現時点の所感
流し読みなのでissueや他に答えあるかも知らん。

typescriptには参照実装はあるけど、仕様はないというのがまあまあ不安ですなぁ。
nodejsはpython(ビルド時依存)かつ、typescript(ランタイム依存)にも依存することになる不思議な不思議な言語になりそう。
coreに入れるということはnodejsから見るとtypescriptがランタイム依存なのにtypescriptのサポート期間1年考えるとnodejsのサポート期間2年なので、typescriptのサポート期間が短過ぎる気がしますが、大丈夫なんかねぇ?
typescript...]]></description><link>https://zenn.dev/oto/articles/e42c4d536b3900</link><guid isPermaLink="true">https://zenn.dev/oto/articles/e42c4d536b3900</guid><pubDate>Wed, 21 Aug 2024 11:06:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XuowawNu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E5%25BE%258C%25E3%2581%25AEnodejs%25E3%2581%25AEtypescript%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otogawa%2520Katsutoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiZTMxMWQ2YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otogawa Katsutoshi(oto)</dc:creator></item><item><title><![CDATA[社内でTypeScript大会しました（競プロ）]]></title><description><![CDATA[
 はじめに
皆さんは普段、コーディングをするときにCopilotを使っているでしょうか？
私はがっつり使ってます。
「どういったコードを書きたいか」をコメントするだけでコードの自動生成をしてくれたり、次に書くべきコードの提案を受けることができるので、非常に便利ですよね。
一方で、自分で考えてコードを書く機会が減るため、「自分でプログラミングを書けなくなるのでは？」という懸念があります...
自分で考えてコードを書く機会を作ることと、他の人がどんなコードを書いているのか勉強のために社内でTypeScript大会を開催しました。学びがありましたし、結構盛り上がって楽しかったです！
本記事で...]]></description><link>https://zenn.dev/takafumi2775/articles/21fa215be2d607</link><guid isPermaLink="true">https://zenn.dev/takafumi2775/articles/21fa215be2d607</guid><pubDate>Wed, 21 Aug 2024 09:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CsWQNfSH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A4%25BE%25E5%2586%2585%25E3%2581%25A7TypeScript%25E5%25A4%25A7%25E4%25BC%259A%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takamu</dc:creator></item><item><title><![CDATA[【入門】DOM操作]]></title><description><![CDATA[普段はバックエンドの開発を担当しており、フロントエンドのことも多少知識として入れておきたいので、今回はDOM操作周りで勉強した内容をまとめる。jQuery（DOM操作を簡潔に記述できるJavaScriptライブラリ）は触れない。

 対象読者

JavaScript初心者

DOM操作の概念を初めて学ぶ方
Web開発に興味があり、JavaScriptを学習し始めた方


Webページに動的な要素を追加したい方

静的なHTMLページに動きをつけたい方
ユーザーインタラクティブな機能を実装したい方




 DOMとは
DOMは、ブラウザがHTML文書を解析して生成するツリー状の構造。この...]]></description><link>https://zenn.dev/takafumi2775/articles/df03f0b43ddd42</link><guid isPermaLink="true">https://zenn.dev/takafumi2775/articles/df03f0b43ddd42</guid><pubDate>Wed, 21 Aug 2024 09:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HmkSOYDM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591DOM%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takamu</dc:creator></item><item><title><![CDATA[package by feature なファイルの依存関係をルールで守る（eslint-plugin-boundaries）]]></title><description><![CDATA[package by feature と呼ばれるディレクトリ構成が一般的になってきました。[1]
キカガクでも、新規に作成するプロジェクトでは package by feature なディレクトリ構成を採用したり、既存のプロジェクトを段階的に移行させたりしています。
今回は、この package by feature のディレクトリ分割を ESLint でルール化する方法を紹介します。

 package by feature とは
詳しい説明は他の記事に譲りますが、ざっくり言うと、ファイルの種別ではなく機能を基準にディレクトリを分けていくようなディレクトリ構成の方法です。
これにより、...]]></description><link>https://zenn.dev/kikagaku/articles/eslint-package-by-feature</link><guid isPermaLink="true">https://zenn.dev/kikagaku/articles/eslint-package-by-feature</guid><pubDate>Wed, 21 Aug 2024 07:53:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jLRFCvre--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:package%2520by%2520feature%2520%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%2588%25E3%2582%258B%25EF%25BC%2588eslint-plugin-bounda...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2581%258C%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiY2ZkM2FkNDQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AD%25E3%2582%25AB%25E3%2582%25AC%25E3%2582%25AF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pxRzhkLXVXenp5SlJteDF3NU9tcE9KZjdkNHFHUXo5ZFowNy0wNmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かがん</dc:creator></item><item><title><![CDATA[Firebase JavaScript SDKがconsoleをheartbeatsで埋めてしまう]]></title><description><![CDATA[Firebase JavaScript SDKの最新版v10.13.0を使うと、ブラウザのconsoleにこういうのが大量に出力されます。

Chromeを更新した時に気付いたので、何かブラウザの新しい機能でデバッグ出力でもされてるのかと思ったらライブラリの問題でした。
https://github.com/firebase/firebase-js-sdk/issues/8436
既に修正作業は完了しているようですが、次のリリース予定が8/29とのことなのでまだ一週間ぐらいはこの問題が残った状態になります。
ひとつ前のv10.12.5では問題は起きないので、しばらくは最新版を避けるように...]]></description><link>https://zenn.dev/nekoya/articles/0566cbaaf79173</link><guid isPermaLink="true">https://zenn.dev/nekoya/articles/0566cbaaf79173</guid><pubDate>Wed, 21 Aug 2024 02:27:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cTSfZ9zU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520JavaScript%2520SDK%25E3%2581%258Cconsole%25E3%2582%2592heartbeats%25E3%2581%25A7%25E5%259F%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nekoya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZmU4ZWVmN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nekoya</dc:creator></item><item><title><![CDATA[＃36　クイックソートをCanvasを用いて可視化してみた]]></title><description><![CDATA[
 概要
普段からよくソートを使っているので動きを理解するためにHTML+Canvasを用いて可視化をしてみました

 クイックソートの実装

 クイックソートの概要
クイックソートとは、とある基準値よりも大きい値の配列と小さい値の配列に分割してそれを再帰的に適用することで並び替えを行うアルゴリズムです。高速なソートアルゴリズムとして知られています

適当な基準値を決めます(※1)
配列を基準値より小さい値の配列と大きい値の配列に分割します(※2)
分割できなくなるまで1～2を繰り返します
分割できなくなったら配列を結合します


※1 中央値を基準値として扱えると効率の面で最適ですが、...]]></description><link>https://zenn.dev/nxted_sapporo/articles/d55763bd0d84ab</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/d55763bd0d84ab</guid><pubDate>Wed, 21 Aug 2024 02:21:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--atropRUU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%258336%25E3%2580%2580%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Canvas%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[TypeScriptの高度な型システムとReact Hooksの利用]]></title><description><![CDATA[
 TypeScriptの高度な型システムとReact Hooksの利用 :beginner:
TypeScriptは、JavaScriptに強力な型システムを追加することで、コードの品質と可読性を向上させることができます。このガイドでは、TypeScriptのいくつかの高度な型システムとReact Hooksを使用する際の具体的な方法について説明します。

 Intersection Types（交差型）
Intersection Typesとは
交差型（Intersection Types）は、複数の型を組み合わせて1つの型にすることができます。これにより、オブジェクトが複数の型のす...]]></description><link>https://zenn.dev/jk447/articles/03ad0c9caf4420</link><guid isPermaLink="true">https://zenn.dev/jk447/articles/03ad0c9caf4420</guid><pubDate>Wed, 21 Aug 2024 00:55:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AOPKoTxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E9%25AB%2598%25E5%25BA%25A6%25E3%2581%25AA%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25A8React%2520Hooks%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JK447%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YTQ1YzQwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JK447</dc:creator></item><item><title><![CDATA[WebAssemblyで広がるWebの可能性：JavaScriptとの連携と実践的な使用例]]></title><description><![CDATA[
 WebAssemblyで広がるWebの可能性：JavaScriptとの連携と実践的な使用例

 はじめに
WebAssembly（Wasm）は、ウェブアプリケーションのパフォーマンスを飛躍的に向上させるための新しい技術であり、特に計算集約型のアプリケーションにおいてその真価を発揮します。Wasmは、ブラウザ上でネイティブに近い速度でコードを実行できるため、ゲーム、画像処理、データ解析など、さまざまな分野での利用が期待されています。この記事では、WebAssemblyの基本概念、JavaScriptとの連携方法、実践的な使用例を詳しく解説し、さらにWebAssemblyの将来展望につい...]]></description><link>https://zenn.dev/llm_robot/articles/20240821-webassembly-javascript-gaming</link><guid isPermaLink="true">https://zenn.dev/llm_robot/articles/20240821-webassembly-javascript-gaming</guid><pubDate>Tue, 20 Aug 2024 22:07:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yzjG9zec--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebAssembly%25E3%2581%25A7%25E5%25BA%2583%25E3%2581%258C%25E3%2582%258BWeb%25E3%2581%25AE%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25EF%25BC%259AJavaScript%25E3%2581%25A8%25E3%2581%25AE%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIZAWA%2520version%253A0.0.2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTE3MGM1NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIZAWA version:0.0.2</dc:creator></item><item><title><![CDATA[Waku v0.21.0をリリースしました！Server Actionsも完全サポートのRSCフレームワーク]]></title><description><![CDATA[v0.21に向けたアイデアはv0.20を開発中からありました。v0.20.0をリリースしたのが2024年3月なので、もう5ヶ月も経過してしまいました。これは想定外で当初は6月末頃のリリースを目指していました。遅れた原因は大きく二つあって、一つはServer Actionsのサポートがかなり大きなものであること、もう一つはそれに加えてさまざまなリファクタリングを実施し、それに伴い不具合対応が発生しました。以前から存在していた不具合も多くありそれらも対応したため、全体的な改善度合いは高いです。チーム開発をする中で、メンバーの忙しさにも左右される場面もありました。やっとv0.21.0のリリース...]]></description><link>https://zenn.dev/dai_shi/articles/0fdfec9a3bf075</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/0fdfec9a3bf075</guid><pubDate>Tue, 20 Aug 2024 14:56:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sYEXRTJM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Waku%2520v0.21.0%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581Server%2520Actions%25E3%2582%2582%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AERSC%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[無心でやる遊びを作る（Web アプリ）]]></title><description><![CDATA[
 目的
瞑想のよい噂を聞くものの、心を長時間無にするのは私には難しかったです。
インターネットを見ていると、必ずしも静止していないと効果がないわけでもなく、Warking, 塗り絵などを進めている方もいらっしゃいました。
そこで、そこへファーストステップとして、無心でできるゲームの様なものを考えました。瞑想から遠のいているような気もしますが。。。

 技術スタック
HTML &amp; javascriptだけ。
文字の読み上げ、キー入力受け入れを取り入れることにしました。

 作成物概要
startボタンを押して開始すると、画面上に矢印が出て、音声でその方向を読み上げます（Left,...]]></description><link>https://zenn.dev/079aefdf/articles/3ebd2486dd1d1c</link><guid isPermaLink="true">https://zenn.dev/079aefdf/articles/3ebd2486dd1d1c</guid><pubDate>Tue, 20 Aug 2024 13:47:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZeJf67Sl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E5%25BF%2583%25E3%2581%25A7%25E3%2582%2584%25E3%2582%258B%25E9%2581%258A%25E3%2581%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588Web%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daidai-orange%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhZmViMTkxMDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daidai-orange</dc:creator></item></channel></rss>