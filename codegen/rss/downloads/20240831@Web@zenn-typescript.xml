<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 31 Aug 2024 03:00:21 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[イラストでそこそこわかる非同期処理、Promise]]></title><description><![CDATA[
 同期処理、非同期処理とは

 同期処理
一つの作業を終えるまで次の作業を行わない。

 非同期処理
1つの作業が終わるのを待たずに他の作業を始める。

 例え話
友達（A君、B君）と一緒にケーキを作ることを考えます。作業としてはケーキを焼く、皿の準備をする、トッピングの準備をする、があるとします。
同期処理の場合：A君がケーキを焼く。焼き終わってから、B君が皿の準備をはじめる。皿の準備が終わった後、自分はトッピングの準備をはじめる。

非同期処理の場合：A君がケーキを焼き始める。それと同時に、B君が皿の準備を始める。自分はトッピングの準備を始める。

上の説明から分かるように、非同期...]]></description><link>https://zenn.dev/maiamitorio/articles/ee68b6467234b3</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/ee68b6467234b3</guid><pubDate>Sat, 31 Aug 2024 00:56:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J5YCdeV4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E3%2581%259D%25E3%2581%2593%25E3%2581%259D%25E3%2581%2593%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2581Promise%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[私のポートフォリオサイトの制作過程とその全貌を紹介します！]]></title><description><![CDATA[ポートフォリオサイトの制作過程や、そこに込めた思いを皆さんに紹介します。エンジニアを目指す方や、クリエイターとしてポートフォリオサイトを制作したい方にとって、少しでも参考になれば幸いです。
私のポートフォリオサイトはこちらからご覧いただけます。


 1. ポートフォリオの目的
ポートフォリオサイトを作ろうと思ったきっかけは、3年前プログラミング学習の初期にhtmlとcss、JavaScriptだけで作成した自己紹介ページに限界を感じたことです。当時はそれで満足していたものの、フロントエンドエンジニアとしての今の自分の技術力を反映したポートフォリオが必要だと感じました。また、個人開発のプ...]]></description><link>https://zenn.dev/nekonoko2323/articles/99b04898ad97b8</link><guid isPermaLink="true">https://zenn.dev/nekonoko2323/articles/99b04898ad97b8</guid><pubDate>Fri, 30 Aug 2024 22:26:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PmI6nq55--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%2581%25E3%2581%25AE%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25AE%25E5%2588%25B6%25E4%25BD%259C%25E9%2581%258E%25E7%25A8%258B%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%2585%25A8%25E8%25B2%258C%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%2593%25E3%2581%25AE%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEdQNTAyVHBEQV9BbXBmOXUyTDk1aUQ0aHJzNFBnTkxCSTQtMEtabE82LW1CemRjTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねこのこ</dc:creator></item><item><title><![CDATA[Elysia + PGlite + Drizzleでの簡易API開発]]></title><description><![CDATA[
最近PGliteと呼ばれるPostgreSQLのWebAssemblyバイナリが登場しました。
インメモリへの簡易的なRDBの構築がプログラム内で完結できるようになりました。
これは構築のコストと開発の敷居を下げてくれるので非常に便利です。
今回はBun製フレームワークのElysiaとPGliteとORMのDrizzleで簡易的なAPIを作成する方法を記録いたします。


 環境

macOS 13.6.7
bun 1.1.26


 成果物

以下の本の情報のCRUD操作を行うREST APIを作成します。

GET /books
GET /books/:id
POST /books...]]></description><link>https://zenn.dev/t_o_d/articles/8ebe61e90a5b0a</link><guid isPermaLink="true">https://zenn.dev/t_o_d/articles/8ebe61e90a5b0a</guid><pubDate>Fri, 30 Aug 2024 15:35:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FtXHxo-U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Elysia%2520%252B%2520PGlite%2520%252B%2520Drizzle%25E3%2581%25A7%25E3%2581%25AE%25E7%25B0%25A1%25E6%2598%2593API%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_o_d%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYzIwYTUyNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_o_d</dc:creator></item><item><title><![CDATA[ジュニアエンジニアがセルフコードレビューを行う際に注意したいこと]]></title><description><![CDATA[
こんにちは、タビアン株式会社で採用責任者をやっている黒田です。
今回は弊社エンジニアの伊藤と共同執筆を行い、伊藤がエンジニアとしてセルフコードレビューを行う際に注意していることをまとめていただきました。
ジュニアエンジニアがコードレビューの際に陥りがちなミスや指摘されがちな部分について、伊藤自身の反省点や経験を踏まえてもらってまとめてもらっています。
長い時間をかけてコードを書いたにもかかわらず、たくさんの指摘事項をもらうとレビュアーの時間を割いていることもあり、プロジェクトの進行を遅れさせる原因にもなり得ます。読者の皆さんにもレビュアーとしてレビュイーとして類似のご経験があるのではな...]]></description><link>https://zenn.dev/tabian_zenn/articles/f66b6dcf3d7931</link><guid isPermaLink="true">https://zenn.dev/tabian_zenn/articles/f66b6dcf3d7931</guid><pubDate>Fri, 30 Aug 2024 11:09:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eG4FUX9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2582%25BB%25E3%2583%25AB%25E3%2583%2595%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2584%25E3%2581%25A3%25E3%2581%2595%25E3%2582%2593%25EF%25BC%25A0%25E3%2582%25BF%25E3%2583%2593%25E3%2582%25A2%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25EF%25BD%259C%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxMzIzMGI5ODYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tabian%2520Zenn%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlODRiMWViOTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やっさん＠タビアン株式会社｜エンジニア採用｜新規事業の実現屋エンジニア</dc:creator></item><item><title><![CDATA[compilerOptionsを全部読んだときの雑多なメモ]]></title><description><![CDATA[Fukuoka.ts用のメモです。めっちゃ荒いです。
https://www.typescriptlang.org/ja/tsconfig/#compilerOptions

 Spreadsheetにまとめたやつ
https://docs.google.com/spreadsheets/d/1KkD20XjY-VAqA-v5SXdhN8uF8dombvkg4_3vI8fSnNo/edit?usp=sharing

 Type Checking

 allowUnreachableCode
デフォルトはtrue？
ESLintでやる方がいい気もする
Ver 1.8

 allowUnus...]]></description><link>https://zenn.dev/pirosikick/articles/5ed4b3adcdab4d</link><guid isPermaLink="true">https://zenn.dev/pirosikick/articles/5ed4b3adcdab4d</guid><pubDate>Fri, 30 Aug 2024 10:17:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iZcbaUrq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:compilerOptions%25E3%2582%2592%25E5%2585%25A8%25E9%2583%25A8%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E9%259B%2591%25E5%25A4%259A%25E3%2581%25AA%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pirosikick%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxOGNmY2QyZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pirosikick</dc:creator></item><item><title><![CDATA[Vue3 Composition API のTSの書き方メモ]]></title><description><![CDATA[
 setupする
スクリプトタグにsetupを追加する
&lt;script setup lang="ts"&gt;

 defineXxxはimportに書かない
キホンの木
&lt;script setup lang="ts"&gt;
defineProps({
  hoge: { type: String, default: "" }
});
const emit = defineEmits(['render']);
defineExpose({
  onClick: () =&gt; {}
});
// など

 defineProps内の型の書き方
String, Numbe...]]></description><link>https://zenn.dev/dmorita00/articles/af0f0e3894e1ae</link><guid isPermaLink="true">https://zenn.dev/dmorita00/articles/af0f0e3894e1ae</guid><pubDate>Fri, 30 Aug 2024 06:10:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gKk_j6D0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%2520Composition%2520API%2520%25E3%2581%25AETS%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dmrt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pCVi1tSGFvdElhRkJJNTBQOEEzV2tNTV92V1EzSWJYUV9RRkxzanc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dmrt</dc:creator></item><item><title><![CDATA[初めまして]]></title><description><![CDATA[初めまして、中国出身です。
日本語を練習するために、ここに技術に関する文章を発表しはじめます。
主にフロントエンド技術に関連する内容で、JavaScript、TypeScript、React、Angular、Ionicなどについて書いていきます。
どうぞよろしくお願いします。
]]></description><link>https://zenn.dev/kyou505/articles/985b99d423d01c</link><guid isPermaLink="true">https://zenn.dev/kyou505/articles/985b99d423d01c</guid><pubDate>Fri, 30 Aug 2024 05:58:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vm5pQRT3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takabashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZDNkMTYzMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takabashi</dc:creator></item><item><title><![CDATA[Class-Validator]]></title><description><![CDATA[
 Class-validator
標準搭載されているデコレーターの種類

 一般的な検証デコレーター(common)

 @IsDefined(value: any)

 概要
値が定義されているかどうかを確認する。
(!== undefined, !== null)
これはskipMissingPropertiesオプションを無視する唯一のデコレータです。
Qiitaより
skipMissingProperties: trueに設定すると、バリデータはバリデーションオブジェクトにないすべてのプロパティのバリデーションをスキップします。
引用 - Qiita

 デコレータ
@IsDe...]]></description><link>https://zenn.dev/rabi10/articles/a949744dd8ae06</link><guid isPermaLink="true">https://zenn.dev/rabi10/articles/a949744dd8ae06</guid><pubDate>Fri, 30 Aug 2024 05:33:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nH09s77---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Class-Validator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rabi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hpUFBPMlhXWTJodnQwMEdKd3pZRTdTRFd3TkJMWVkxYkVhRnVpM0tBPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rabi</dc:creator></item><item><title><![CDATA[【Next.js】備忘録 - part.02 ~画面の実装~]]></title><description><![CDATA[
 前提条件
この記事はプログラミング初学者、Next.js初学者に向けた記事になります。
本記事は、part.01の続きです。まだ、見ていない方は、以下から参照してください。
https://zenn.dev/ko_hei/articles/afb0e5ed2f685b

 この記事で学ぶこと
本記事では、実際に画面の立ち上げと画面の実装について解説していきます。
大きく3つにわけて解説します

画面の実行
画面の修正
画面を実装してみよう


 1. 画面の実行
part.01で作成したプロジェクトをVisual Studio Code（以下、VSCodeと略します。）で開きます。
...]]></description><link>https://zenn.dev/ko_hei/articles/e7fc4daecb6618</link><guid isPermaLink="true">https://zenn.dev/ko_hei/articles/e7fc4daecb6618</guid><pubDate>Fri, 30 Aug 2024 05:10:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Mm5oB8LM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2520-%2520part.02%2520%7E%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yappi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yappi</dc:creator></item><item><title><![CDATA[【Next.js】備忘録 - part.01 ~プロジェクト作成~]]></title><description><![CDATA[
 前提条件
この記事はプログラミング初学者、Next.js初学者に向けた記事になります。
Next.jsを使って開発するには、Node.jsをインストールする必要があります。
そのため、まだインストールが出来ていない方は、インストールから始めましょう。
https://nodejs.jp/

 この記事で学ぶこと
本記事はNext.jsのプロジェクト作成、初期設定について解説します。
大きく以下2点についての手順を記録しています。

Next.jsのプロジェクト作成方法
プロジェクト作成時の初期設定


 1. Next.jsのプロジェクト作成方法
Next.jsで開発するためのプロジ...]]></description><link>https://zenn.dev/ko_hei/articles/afb0e5ed2f685b</link><guid isPermaLink="true">https://zenn.dev/ko_hei/articles/afb0e5ed2f685b</guid><pubDate>Fri, 30 Aug 2024 04:28:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1nijecub--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2520-%2520part.01%2520%7E%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yappi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yappi</dc:creator></item><item><title><![CDATA[Redux はじめました #0]]></title><description><![CDATA[
 Redux はじめました #0
Reduxを使ってみたい！
と言うことで Hello World! レベルのプロジェクトを作っていきます。

 今回の目標
Reduxを導入して基本的な状態管理の機能を使ってみる

 構成・使うもの

Docker
Vite
React
TypeScript
Redux

※ GitHubリポジトリは作りません

 0. 前提環境

docker composeが動くところからスタート
macOS上で試してます（難しいコマンドは使ってないので適宜読み換えてください）


 1. Docker

 1-1. フォルダの準備
# ルートフォルダ
mkdir...]]></description><link>https://zenn.dev/hilltop/articles/trial-redux-0</link><guid isPermaLink="true">https://zenn.dev/hilltop/articles/trial-redux-0</guid><pubDate>Fri, 30 Aug 2024 00:10:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MvT1PJA9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redux%2520%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%25230%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HillTop%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYTg2MzI4MWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HillTop</dc:creator></item><item><title><![CDATA[remix使ってハマった💦]]></title><description><![CDATA[
 Tips 🚨
remixというフレームワークで、コンポーネントを作成して、importする時に、エラーが出て悩まされた💦
どうやら、export defaultと書かないようだ。


修正するとエラーが消えます。



 example
componentディレクトリに、Counter.tsxを作成。

app/component/Counter.tsx
import { useState } from "react"
// remixでは、export defaultにしない!
export const Counter = () =&gt; {
  const [count, se...]]></description><link>https://zenn.dev/joo_hashi/articles/8d36984b22b9f7</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/8d36984b22b9f7</guid><pubDate>Thu, 29 Aug 2024 14:01:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0-kgb1w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:remix%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[node v22.7.x で TypeScript をそのまま実行する]]></title><description><![CDATA[node の最新に近いバージョンで TypeScript の実験的なサポートが入っている。ts-node や tsx に頼らず typescript のスクリプトを実行できる。
https://github.com/nodejs/node/pull/53725
ロードマップ
https://github.com/nodejs/loaders/issues/217
実験的な機能であることは承知の上で、動かしてみる。

 tl;dr
# ~/.zshrc
alias nodets="node --experimental-strip-types --experimental-transfor...]]></description><link>https://zenn.dev/mizchi/articles/experimental-node-typescript</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/experimental-node-typescript</guid><pubDate>Thu, 29 Aug 2024 13:28:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RDhlbWRk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:node%2520v22.7.x%2520%25E3%2581%25A7%2520TypeScript%2520%25E3%2582%2592%25E3%2581%259D%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25BE%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[空配列に対するArray.prototype.every()の挙動]]></title><description><![CDATA[
 はじめに
この記事は、きちんとドキュメントを読まずにメソッドを使用した自分への戒めであり、記事というよりメモ書きのようなものです。

 Array.prototype.every()の基本的な挙動
Array.prototype.every()は下記のように、配列内の要素が特定の条件に当てはまるかチェックし、条件に合わない場合はfalseを返します。
const array = [10, 20, 30, 40, 50]
const result = array.every((a) =&gt; a &lt; 30)
console.log(result) // false
逆に言えば、...]]></description><link>https://zenn.dev/ncdc/articles/e110ec7d92a8a1</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/e110ec7d92a8a1</guid><pubDate>Thu, 29 Aug 2024 13:13:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CETvJdY5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A9%25BA%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258BArray.prototype.every%2528%2529%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:HS%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHVQY2tqSGFmYmlacHVwTEhvaW50bzVQSFBkbjM1NllVby1Jd2haSFlYa0MtZ1d4SDk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HS</dc:creator></item><item><title><![CDATA[TypeORMでカーソル型ページネーションを実装する]]></title><description><![CDATA[
 はじめに
TypeORMでは、skipとtakeを使用したオフセット型ページネーションをサポートしていますが、カーソル型のページネーションはサポートしていません。
そのため、「typeorm-cursor-pagination」というライブラリを使用して実装していきます。
https://www.npmjs.com/package/typeorm-cursor-pagination

 実装
こちらが、カーソル型ページネーションの実装です。
import { AppDataSource } from "typeorm";
import { buildPaginator } from ...]]></description><link>https://zenn.dev/ncdc/articles/8abcfda8642e00</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/8abcfda8642e00</guid><pubDate>Thu, 29 Aug 2024 13:12:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aSyEkOcp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeORM%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E5%259E%258B%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:HS%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHVQY2tqSGFmYmlacHVwTEhvaW50bzVQSFBkbjM1NllVby1Jd2haSFlYa0MtZ1d4SDk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HS</dc:creator></item><item><title><![CDATA[祝！Valtio v2リリース]]></title><description><![CDATA[https://x.com/dai_shi/status/1829141648670175491
本当はReact 19と同時にリリースするつもりだったのですが、もう待ちきれないので、リリースしちゃいました。Valtio v2でpromiseを使う場合はReact 19の use を使う必要があるのですが、React 18向けの react18-use を作ったので、当面はそれで凌いでいただこうと思います。
]]></description><link>https://zenn.dev/dai_shi/articles/2ec4b8eb6ae88c</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/2ec4b8eb6ae88c</guid><pubDate>Thu, 29 Aug 2024 13:08:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JPL6GXW2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A5%259D%25EF%25BC%2581Valtio%2520v2%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[Nuxt3の継続できて辛くないユニットテスト方法]]></title><description><![CDATA[
 はじめに
私は普段、Nuxt3でフロントエンド開発をすることが多いのですが、単体テストの方法が確立しておりませんでした。
最近、自分なりの方法が確立したので、紹介します。
今回紹介する技術を使ってテストの準備をしていけば、Nuxt3で、効率的かつ継続が辛くないテストコードが書けますので、是非読んで実行してください！

 できること

Nuxt3 × vitestでの単体テストの方法をすることができる。
テストファイルで、毎回お決まりの設定を書かないで済むようになる。
Nuxt環境での単体テストは、オートインポートやuseStateなどのモックが辛いが、それをほぼしないで良くなる。
A...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/bf98c7af78c4d7</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/bf98c7af78c4d7</guid><pubDate>Thu, 29 Aug 2024 12:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IGjRETIR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt3%25E3%2581%25AE%25E7%25B6%2599%25E7%25B6%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25A6%25E8%25BE%259B%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu_aoringo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[[WIP]Amplify and Custom Resources]]></title><description><![CDATA[Amplify Gen 2 を 5 ヶ月ほど使用した感想と現在地について。
https://docs.amplify.aws/react/

 tl;dr

Custom Resources で全て構成するのは難易度が高い。


 Dry run が欲しい

Terraform でいう terraform plan、AWS CDK でいう cdk diff [1] が存在しない。
deploy はいつも一か八か。
本番運用を諦めた原因の 1 つ。


 CloudFormation が壊れがち。

ご共有いただきましたログに記録されている「current_account-current_...]]></description><link>https://zenn.dev/dannya/articles/ab35c16b660aa4</link><guid isPermaLink="true">https://zenn.dev/dannya/articles/ab35c16b660aa4</guid><pubDate>Thu, 29 Aug 2024 11:40:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1bXCe190--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%255BWIP%255DAmplify%2520and%2520Custom%2520Resources%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNDY0NzBmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke Yamamoto</dc:creator></item><item><title><![CDATA[VSCode の TypeScript のインポート部分をフォーマットする機能]]></title><description><![CDATA[
 概要
VSCode には、TypeScript での以下のフォーマット機能があります。

未使用のインポートの削除
インポートの並び替え（昇順）

以下、該当コマンドです。
削除: TypeScript: Remove Unused Imports
並び替え: TypeScript: Sort Imports
削除&amp;並び替え： Organize Imports
なお、入力先（コマンドパレット）は以下のショートカットで開けます。
Mac: Cmd + Shift + P
Win: Ctrl + Shift + P
VSCode: 1.84.2

 コマンドを使用してみる
コマン...]]></description><link>https://zenn.dev/masani/articles/eac69a28d2779a</link><guid isPermaLink="true">https://zenn.dev/masani/articles/eac69a28d2779a</guid><pubDate>Thu, 29 Aug 2024 11:21:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TojC78j5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E3%2581%25AE%2520TypeScript%2520%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E9%2583%25A8%25E5%2588%2586%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkIzN29iSFVFazgteDh1eEJVTG1JWmtCOHItb3htWGY0ZkNtaUJVcXRTPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masani</dc:creator></item><item><title><![CDATA[Denoでやる「web標準のバックエンドアプリのテスト」の記事]]></title><description><![CDATA[
 要約
yusukebeさんの Web標準のバックエンドアプリのテストの記事をdenoで
やっています。

 はじめに
かなり長い間、zennに記事を書いてないので、もっと気軽に記事を出してみるテスト。

 この文章を書いた動機
他のプログラミング言語でプログラムを書いた経験はある人であっても、typescriptでプログラミング
を始めるには、私はちょっとめんどくさいと思っています。
具体的には、その時々で選べるツールがおおく、気持ちよくプログラミングを開始する環境設定に手間取る所です。
Denoならlinter/formater/test/LSPが全部ついてきて、サクっとコードを書...]]></description><link>https://zenn.dev/yabuki/articles/2024-08-29-web-standard-test-with-deno</link><guid isPermaLink="true">https://zenn.dev/yabuki/articles/2024-08-29-web-standard-test-with-deno</guid><pubDate>Thu, 29 Aug 2024 09:32:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LkN5cV3W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%25E3%2581%25A7%25E3%2582%2584%25E3%2582%258B%25E3%2580%258Cweb%25E6%25A8%2599%25E6%25BA%2596%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2580%258D%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YABUKI%2520Yukiharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huRmQ1MnFmTEF6bUNNYVREYVhrTEZsZ0l0d1FrNVlrczJvcjBEPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YABUKI Yukiharu</dc:creator></item></channel></rss>