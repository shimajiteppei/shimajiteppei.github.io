<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 23 Jul 2024 01:09:06 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[PythonのGraphQLサーバーの紹介]]></title><description><![CDATA[國忠です。
Sprocketは一部のAPIサーバーにGraphQLを利用しております。
最近業務にてPythonでGraphQLサーバーを構築する案件が発生しました。
本記事では、その際に採用するライブラリを比較検討した記録を残します。
比較検討に際し、今回注目したGraphQLに関する2つの概念について解説し、その後にライブラリごとの違いを紹介します。

 Apollo Federation
Apollo Federationは、複数のSubGraphと呼ばれるバックエンドサービスを連携させて、1つのSuperGraphと呼ばれるエンドポイントを作成できる機能です。
Apollo Fe...]]></description><link>https://zenn.dev/sprocket/articles/d910e2aade9050</link><guid isPermaLink="true">https://zenn.dev/sprocket/articles/d910e2aade9050</guid><pubDate>Tue, 23 Jul 2024 00:22:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AwpvIttY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEGraphQL%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Sprocket%2520Zenn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1ZWQxMjFmN2UuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sprocket%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyY2UxY2ZlNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sprocket Zenn</dc:creator></item><item><title><![CDATA[pandasのquery()で指定できる@ローカル変数名の謎を追う]]></title><description><![CDATA[(この記事は下記の再掲です)
https://peperon-brain.hatenablog.com/entry/2023/11/05/234708
仕事でpandasを使っていて、こんな書き方ができることを知った。
bar = 123
df_filtered = df.query('foo == @bar')
ローカル変数を参照させている。上の例ではfoo列の値が123であるデータをフィルタできる。
公式ドキュメントにもはっきり書かれている。
https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataF...]]></description><link>https://zenn.dev/poppycocker/articles/20240723-pandas-query-atmark</link><guid isPermaLink="true">https://zenn.dev/poppycocker/articles/20240723-pandas-query-atmark</guid><pubDate>Mon, 22 Jul 2024 23:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2ZkSoKDL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pandas%25E3%2581%25AEquery%2528%2529%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2540%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E3%2581%25AE%25E8%25AC%258E%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:poppycocker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lma2F5NzVBV1ZYenR3SUhxdlhkOUFZN2ZmN3ZCYXJKTVJHOU42Ync9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>poppycocker</dc:creator></item><item><title><![CDATA[【Python】python3コマンドのすべてを調べてみた]]></title><description><![CDATA[
 1. はじめに
Pythonは、シンプルで強力なプログラミング言語であり、多くの開発者に利用されています。Pythonには様々なコマンドがあり、その中でも「python3」コマンドは頻繁に使用されます。この記事では、Python3コマンドの全てを詳しく調べてみました。

 2. 基本的なコマンド



コマンド
説明
使用例




python3
Python 3のインタプリタを起動します。
python3


python3 script.py
指定したPythonスクリプトを実行します。
python3 my_script.py




 3. インタプリタ関連



コマンド...]]></description><link>https://zenn.dev/nuinui/articles/0a957f2aaf01c9</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/0a957f2aaf01c9</guid><pubDate>Mon, 22 Jul 2024 21:40:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZF06NfrL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591python3%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2581%2599%25E3%2581%25B9%25E3%2581%25A6%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[【Python】pandasで、行列番号指定してエクセルのセルの値を取得する方法]]></title><description><![CDATA[
 1. はじめに
pandasは、データ操作や解析に非常に強力なライブラリです。今回は、pandasを使用して、Excelファイルから特定の行番号と列番号を指定してセルの値を取得する方法について解説します。

 2. 事前準備
まず、pandasライブラリをインストールしていない場合は、以下のコマンドでインストールします。
pip install pandas
また、pandasでExcelファイルを扱うためには、xlrdライブラリが必要です。以下のコマンドでインストールしてください。
pip install xlrd

 3. Excelファイルの読み込み
pandasを使用してEx...]]></description><link>https://zenn.dev/nuinui/articles/9e5dccb71859c6</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/9e5dccb71859c6</guid><pubDate>Mon, 22 Jul 2024 21:33:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lD6ulUND--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%25E3%2581%25A7%25E3%2580%2581%25E8%25A1%258C%25E5%2588%2597%25E7%2595%25AA%25E5%258F%25B7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[Pythonのデバッグ方法]]></title><description><![CDATA[

1.1. ステップ 1: プリントステートメントを使う

1.1.1. 例



1.2. ステップ 2: Python の組み込みデバッガ（pdb）を使う

1.2.1. 基本的な使い方
1.2.2. 例


1.3. pdb の基本コマンド

1.4. ステップ 3: 外部デバッガツールの使用

1.4.1. Visual Studio Code（VSCode）のデバッガ
1.4.2. PyCharm のデバッガ



1.5. ステップ 4: ロギングを使う

1.5.1. 例



1.6. ステップ 5: ユニットテストを活用する

1.6.1. 例



1.7. プロフ...]]></description><link>https://zenn.dev/gakkie555/articles/2210f80445f823</link><guid isPermaLink="true">https://zenn.dev/gakkie555/articles/2210f80445f823</guid><pubDate>Mon, 22 Jul 2024 15:06:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xPFqlZO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gakkie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNzdkYzg2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gakkie</dc:creator></item><item><title><![CDATA[Pythonの命名規則とルール]]></title><description><![CDATA[
1.1. インデント
1.2. 行の長さ
1.3. 空白の使い方
1.4. コメント
1.5. 変数名と関数名
1.6. クラス名
1.7. 定数
1.8. インポート
1.9. ドキュメンテーション文字列（Docstrings）
1.10. 複合文（Compound Statements）
1.11. 複数のインポートを同じ行に書かない
1.12. エンプティ行（空行）
1.13. テキストのデコレータ
1.14. 一貫した戻り値の使用
1.15. アノテーション
1.16. 例外処理
1.17. パッケージとモジュールの命名
1.18. 文字列の引用符
1.19. ファイルのエンコ...]]></description><link>https://zenn.dev/gakkie555/articles/b7d89442365943</link><guid isPermaLink="true">https://zenn.dev/gakkie555/articles/b7d89442365943</guid><pubDate>Mon, 22 Jul 2024 14:23:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tMjblOB1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2581%25A8%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gakkie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNzdkYzg2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gakkie</dc:creator></item><item><title><![CDATA[Next.js を Babelで可視化したら花火みたいになった。]]></title><description><![CDATA[何年ぶりだろう。ぐらい久々にブログを書きます。
元々量子やAIが専門だったところから生成AIに振り切り、生成AIの受託や情報収集に勤しむ毎日でしたが、そろそろClaudeの力も借りながら開発領域に久々に戻りつつあるので、勉強ブログもかねて記していきます。

これが自分の作っている{マルチ並列AIエージェント, システム生成AI, 空間コンピューティング, グラフィカルAI}エディタのBabelで可視化したものです。
（本リリースではないですが、関心ある方は以下より）
https://github.com/dai-motoki/babel-v1
もともとは.gitignoreしたはずのno...]]></description><link>https://zenn.dev/daimotoki/articles/fea99d9d949330</link><guid isPermaLink="true">https://zenn.dev/daimotoki/articles/fea99d9d949330</guid><pubDate>Mon, 22 Jul 2024 13:26:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pXPKeeHw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25E3%2582%2592%2520Babel%25E3%2581%25A7%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E8%258A%25B1%25E7%2581%25AB%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%2583%25E6%259C%25A8%25E5%25A4%25A7%25E4%25BB%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2d0LU1oeUVSTkpyQXNMME5ObXNSdHIzNDEwYzVDM3dOOHFfVjlqQm0yM01yaWxBQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>元木大介</dc:creator></item><item><title><![CDATA[Semantic Kernel でバックエンドは Python & フロントエンドは C# を動かしてみる]]></title><description><![CDATA[私のポストでは何度か記載している Semantic Kernel ですが、似た用途で使われる LangChain との大きな差の一つとして C#, Python, Java で SDK を提供している点にあります。ここで試したくなったポイントが「フロントエンドは C# 側の Semantic Kernel で処理し、バックエンド側は Python 側で処理する」というユースケースです。現場での案件を見る限り、様々な形式のドキュメントを抽出・加工したうえで格納するまでの処理は Python で記載している例が多い一方、フロントエンド側は通常の業務アプリとして C# や Java で記載した...]]></description><link>https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/semantickernel-dotnet-python-01</guid><pubDate>Mon, 22 Jul 2024 13:01:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qD12eN7m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Semantic%2520Kernel%2520%25E3%2581%25A7%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AF%2520Python%2520%2526%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AF%2520C%2523%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Daichi%2520Isami%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGF2NkRDRXVKdXRUN2VRRmI0ZDdKcmJycURONXBQNmdxNVI1NGdkZFhoY0o2Mj1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daichi Isami</dc:creator></item><item><title><![CDATA[【Python】pandasを用いて、エクセルの特定文字が入ったセルの行番号を取得する方法]]></title><description><![CDATA[
 はじめに
pandasはデータ解析に強力なライブラリであり、Excelファイルの操作にも広く利用されています。今回は、pandasを用いて、Excelファイルの特定文字が入ったセルの行番号を取得する方法について解説します。

 1. 事前準備
まず、pandasライブラリをインストールしていない場合は、以下のコマンドでインストールします。
pip install pandas

 2. Excelファイルの読み込み
まず、pandasを使用してExcelファイルを読み込みます。以下の例では、example.xlsxというファイルを使用します。
import pandas as pd
...]]></description><link>https://zenn.dev/nuinui/articles/0ebf2e73329dd9</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/0ebf2e73329dd9</guid><pubDate>Mon, 22 Jul 2024 11:07:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pVIHKlV3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E8%25A1%258C%25E7%2595%25AA%25E5%258F%25B7%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[【Python】pandasを用いて、エクセルの特定文字が入ったセルの列番号を取得する方法]]></title><description><![CDATA[
 1. はじめに
pandasはデータ解析に強力なライブラリですが、Excelファイルの操作にも利用できます。今回は、pandasを用いて、Excelファイルの特定文字が入ったセルの列番号を取得する方法について解説します。
pandasを使用してExcelファイルを操作する際、特定の文字列を含むセルを検索することができます。本記事では、セルの値が固定値で、行番号も決まっているという前提条件のもとに、この操作を実現する方法を示します。

 2. 事前準備
まず、pandasライブラリをインストールしていない場合は、以下のコマンドでインストールします。
pip install pandas...]]></description><link>https://zenn.dev/nuinui/articles/c520961db5cd39</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/c520961db5cd39</guid><pubDate>Mon, 22 Jul 2024 11:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CFrqJg2q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pandas%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E5%2588%2597%25E7%2595%25AA%25E5%258F%25B7%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[Pythonのアンインストールの仕方（Windows編）]]></title><description><![CDATA[
 1. はじめに
Pythonをアンインストールする必要がある場合、その手順はシンプルですが、システム全体から完全に削除するためにはいくつかのステップを踏む必要があります。本記事では、Windows環境でPythonをアンインストールする具体的な方法を詳しく解説します。また、pipやインストールされたライブラリの扱いについても触れます。

 2. コントロールパネルからPythonをアンインストール

 ステップ1: コントロールパネルを開く


スタートメニューをクリックし、**「コントロールパネル」**を検索して開きます。


 ステップ2: プログラムのアンインストール

**「...]]></description><link>https://zenn.dev/nuinui/articles/187ca94368a6d9</link><guid isPermaLink="true">https://zenn.dev/nuinui/articles/187ca94368a6d9</guid><pubDate>Mon, 22 Jul 2024 10:50:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nKYhuTbS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E4%25BB%2595%25E6%2596%25B9%25EF%25BC%2588Windows%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2583%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno2cFRIRmpDc184N0NyTTNyYV9iZnd6LVVLaXAxRHMxZWdFdHl1b0VQY1JCbUVDcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬーい</dc:creator></item><item><title><![CDATA[LangGraphおけるNodeの並列実行について]]></title><description><![CDATA[
 この記事の概要
こんにちは。PharmaX でエンジニアをしている諸岡（@hakoten）です。
この記事では、大規模言語モデル（LLM）を活用したアプリケーションの開発を支援するフレームワークであるLangChain内にあるツールの一つ、LangGraphを使ってNodeを並列に実行した時の挙動や注意すべき点について、紹介しています。
LangGraphの基本的な使い方の記事をいくつか書いてますので良ければ、こちらもご覧ください。
https://zenn.dev/pharmax/articles/8796b892eed183
https://zenn.dev/pharmax/ar...]]></description><link>https://zenn.dev/pharmax/articles/78f2e6a51a459e</link><guid isPermaLink="true">https://zenn.dev/pharmax/articles/78f2e6a51a459e</guid><pubDate>Mon, 22 Jul 2024 09:03:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FBPu6v96--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangGraph%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BNode%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hakotensan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxNTUyMTlkOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PharmaX%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNGM1MmE4MWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hakotensan</dc:creator></item><item><title><![CDATA[【Python】HTTP/1 クライアントに epoll を使う]]></title><description><![CDATA[import socket, select

HOST = '127.0.0.1'
PORT = 8000

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
sock.connect((HOST, PORT))
sock.setblocking(0)
sock.send(b'GET / HTTP/1.1\r\n\r\n')

epoll = select.epoll()
epoll.register(soc...]]></description><link>https://zenn.dev/masakielastic/articles/f3ee490e4dce7e</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/f3ee490e4dce7e</guid><pubDate>Mon, 22 Jul 2024 08:36:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Boq9UfLx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591HTTP%252F1%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%2520epoll%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[【Python】HTTP/1 サーバーで epoll を使う]]></title><description><![CDATA[import socket, select

# https://www.mtclinton.com/posts/simple-python-epoll-server/
# http://scotdoyle.com/python-epoll-howto.html

EOL1 = b'\n\n'
EOL2 = b'\n\r\n'

response  = b'HTTP/1.0 200 OK\r\n' \
            b'Content-Type: text/plain\r\n' \
            b'Content-Length: 15\r\n' \
        ...]]></description><link>https://zenn.dev/masakielastic/articles/b23e911ea563b3</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/b23e911ea563b3</guid><pubDate>Mon, 22 Jul 2024 07:16:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JbQ-REqG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591HTTP%252F1%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7%2520epoll%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[麻雀AIをさらに勉強してみた。]]></title><description><![CDATA[
 ニューラルネットワークの入出力
読み解いてみたところ、「自分の手牌から、自分の手牌が何の役になっているかを判定する。」
というAIでした。
結論

入力：自分の今の手牌
出力：今の手配の役

要するに。自分があがったときに「この役だよ！」ということを教えてくれるだけですね笑。それでも自分からしたらすごいです。
自分が想定したいのは、自分の手配から、どんな役になるかを予測するAIでした。
さらに、役は不定形も多いので、判定しやすい形だけ、かつ門前役（鳴かないであがる）は抜いた役に絞って判定しています。そのため、元の記事ではかなりの正答率を誇っています。
https://blog.dee...]]></description><link>https://zenn.dev/sushizanmai/articles/86e44d2f7fbafa</link><guid isPermaLink="true">https://zenn.dev/sushizanmai/articles/86e44d2f7fbafa</guid><pubDate>Mon, 22 Jul 2024 06:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---AnzEKdF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25BA%25BB%25E9%259B%2580AI%25E3%2582%2592%25E3%2581%2595%25E3%2582%2589%25E3%2581%25AB%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%2597%25E3%2581%2596%25E3%2582%2593%25E3%2581%25BE%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGVHQjlpQlFRaXdWMGtESUxiQUxqUklCSHllM3ZibTZhVWJFNmVzZ2ZSPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すしざんまい</dc:creator></item><item><title><![CDATA[RV64G環境向けにCPythonをビルドする]]></title><description><![CDATA[RISC-V（RV64G）環境でCPython（3.12.4）を利用する機会があったため，ビルド手順をまとめました．

 GCCの準備
まず，RISC-Vのツールチェインをインストールします．
ここでは，インストール先を $HOME/riscv/rv64 とします．

#!/bin/sh -eux

export RISCV=${RISCV:-$HOME/riscv}

git clone https://github.com/riscv-collab/riscv-gnu-toolchain
cd riscv-gnu-toolchain

mkdir -p build
cd build
...]]></description><link>https://zenn.dev/uint256_t/articles/06ab2ebefd2d9f</link><guid isPermaLink="true">https://zenn.dev/uint256_t/articles/06ab2ebefd2d9f</guid><pubDate>Mon, 22 Jul 2024 04:39:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F0BOyeiD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RV64G%25E7%2592%25B0%25E5%25A2%2583%25E5%2590%2591%25E3%2581%2591%25E3%2581%25ABCPython%25E3%2582%2592%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uint256_t%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlMjQ5ZjlkNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uint256_t</dc:creator></item><item><title><![CDATA[【Python】select で HTTP/1 クライアントをつくる]]></title><description><![CDATA[import socket
import select

HOST = '0.0.0.0'
PORT = 8000
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.setblocking(False)
s.sendall(b"GET / HTTP/1.1\r\n\r\n")

socket_list = [s]

while True:

    read, writ...]]></description><link>https://zenn.dev/masakielastic/articles/b9676e9d523c14</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/b9676e9d523c14</guid><pubDate>Mon, 22 Jul 2024 04:26:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mnTgfPMg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591select%2520%25E3%2581%25A7%2520HTTP%252F1%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[オブジェクト指向に学ぶデータサイエンスのコーディング術]]></title><description><![CDATA[
 はじめに
こんにちは。ZENKIGENデータサイエンスチーム所属のredteaです。原籍はオムロンソーシアルソリューションズ株式会社 技術創造センタですが、社外出向でZENKIGENに所属しており、数理最適化や機械学習を用いたデータの分析業務、それらの結果に基づいた顧客への提案をしております[1]。

 本記事でお伝えしたいこと
!
本記事では、オブジェクト指向のアイデアをDS（データサイエンス）職のコーディングに活かす例を紹介します。
これにより、分析ソースコードの可読性、再利用性、保守性、信頼性が向上し、プロダクトへの導入や再分析がスムーズになります。
ただ、やり方についてはブラ...]]></description><link>https://zenn.dev/zenkigen_tech/articles/f15988969d9c3f</link><guid isPermaLink="true">https://zenn.dev/zenkigen_tech/articles/f15988969d9c3f</guid><pubDate>Mon, 22 Jul 2024 01:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OsCiNq6P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2581%25AB%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:redtea%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNzk4YmFjMTcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ZENKIGEN%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzM2I4MmRkNzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>redtea</dc:creator></item><item><title><![CDATA[【Terraform】 第2世代の Cloud Run を利用したセキュアなアーキテクチャの実現]]></title><description><![CDATA[
 【Terraform】 第2世代の Cloud Run を利用したセキュアなアーキテクチャの実現
Hogetic Lab でデータエンジニアをしている大橋と申します。
今回は、第2世代の Cloud Run を使用して、シンプルな構成ながらセキュアなアーキテクチャを実現する方法について紹介します。

 はじめに
現代のソフトウェア開発では、技術スタックやマイクロサービス化の進展に伴い、様々なAPIと連携する必要があります。また、APIの開発時には認証などの複雑な要素を後回しにして、まずは素早く機能を実装したいというニーズがあります。開発環境自体もコンテナ化されていることが一般的となっ...]]></description><link>https://zenn.dev/hogeticlab/articles/96b53ce1a06ad2</link><guid isPermaLink="true">https://zenn.dev/hogeticlab/articles/96b53ce1a06ad2</guid><pubDate>Mon, 22 Jul 2024 00:03:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c0TNeln---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Terraform%25E3%2580%2591%2520%25E7%25AC%25AC2%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%2520Cloud%2520Run%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2582%25A2%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25AE%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hogeticlab%2520ohashi....%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0YWZjMjY2MTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Hogetic%2520Lab%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlBVS1lWZ1k2Tk5EdDUwbkZxeWdVR24xZmNtSmdVbDcyNHU1Sm55LWFIc1dET3FnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hogeticlab ohashi.nobuhiro</dc:creator></item><item><title><![CDATA[python-docx でWordファイルを操作する]]></title><description><![CDATA[
 ライブラリーのinstall
pip install python-docx  
https://python-docx.readthedocs.io/en/latest/

 Wordファイルを読み込み

手元に以下のに内容が書いたwordファイルを用意する

**ABC株式会社 社内規定**

**第1章 総則**

第1条（目的）  
本規定は、ABC株式会社（以下、「会社」という）の業務運営および従業員の勤務に関する基本的事項を定め、全従業員が規律を守り、業務の効率化と職場環境の向上を図ることを目的とする。

第2条（適用範囲）  
本規定は、会社に所属する全ての従業員に適用...]]></description><link>https://zenn.dev/headwaters/articles/5856ae7471f2bf</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/5856ae7471f2bf</guid><pubDate>Sun, 21 Jul 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Mdn4MjIw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python-docx%2520%25E3%2581%25A7Word%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODg5YTRhYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item></channel></rss>