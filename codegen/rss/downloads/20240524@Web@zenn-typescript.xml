<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 24 May 2024 08:18:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[メモ Next.js TypeScript 自作WebApp]]></title><description><![CDATA[
 Next.js TypeScript 自作WebApp

 1. 断捨離App
捨てられない物を登録し、期限内に使用されなかったものを断捨離するよう通知します。あなたは、断捨離をするか期限を延ばすかを選択できます。

WebApp: 断捨離App



 2. 時計App
時計をホバーするとHarryPotterのキャラクターが現れます。

WebApp: 時計App



 1. 断捨離Appの説明

断捨離品目名を入力し、適切なカテゴリを選択してSubmitボタンを押すと、アイテムに期限が割り当てられます。


Limit欄に設定された時間が過ぎるとActions欄の背景色が赤色...]]></description><link>https://zenn.dev/jim_soros/articles/2c3c6af78747a7</link><guid isPermaLink="true">https://zenn.dev/jim_soros/articles/2c3c6af78747a7</guid><pubDate>Fri, 24 May 2024 08:07:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ii9rNduX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2583%25A2%2520Next.js%2520TypeScript%2520%25E8%2587%25AA%25E4%25BD%259CWebApp%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BD%2595%25E3%2582%2582%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1MzViNWUxODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>何もわからん</dc:creator></item><item><title><![CDATA[TSKaigi 2024へ参加してきました]]></title><description><![CDATA[こんにちは。チームラボフロントエンド班の濟木です。
2024年5月11日、東京中野セントラルパークにて開催された「TSKaigi 2024」に現地参加してきました。TSKaigi 2024は、プログラミング言語TypeScriptをテーマとした技術カンファレンスで、業界の最新動向や技術トレンドを学ぶことができました。
https://tskaigi.org/
今回は参加レポを書かせていただきます。
また、チームラボはTSKaigi 2024のシルバースポンサーとして参加しました。


 聴講したセッション(当日の流れ)

 Keynote: What's New in TypeScrip...]]></description><link>https://zenn.dev/teamlab_fe/articles/6482b6e6e6000b</link><guid isPermaLink="true">https://zenn.dev/teamlab_fe/articles/6482b6e6e6000b</guid><pubDate>Fri, 24 May 2024 07:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CODNfRq6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TSKaigi%25202024%25E3%2581%25B8%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25A9%25E3%2583%259C%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%258F%25AD%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMDc2NDA4YWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25A9%25E3%2583%259C%25E3%2580%2580%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%258F%25AD%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmY2M0MTZmNGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>チームラボ フロントエンド班</dc:creator></item><item><title><![CDATA[その関数ほんとに全部わかってますか? ~Effectの実例を添えて~]]></title><description><![CDATA[こんにちは、エンジニアの籏野です。
最近、弊社エンジニアが社内向けに書いた記事で「ある関数を実行したときに捕捉すべきエラーをどのように知ればよいか？」という問いを投げていました。
この問いに対する回答として、いわゆるResult型の利用を提案してくれていたのですが、これが個人的にとても興味深いものでした。
私自身最近はRustを触っていることもあり、なんとなくResult型の存在は認識していたのですが、どのようなメリットがあるのかといったことについてはあまり理解していませんでした。
そんな中で、「関数を実行したときに捕捉すべきエラー」を型を通じて可視化するというアプローチは大変学びになり...]]></description><link>https://zenn.dev/forcia_tech/articles/202405_hatano_effect_ts</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/202405_hatano_effect_ts</guid><pubDate>Fri, 24 May 2024 04:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OFG3WSjW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25BB%25E3%2582%2593%25E3%2581%25A8%25E3%2581%25AB%25E5%2585%25A8%25E9%2583%25A8%25E3%2582%258F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%253F%2520%7EEffect%25E3%2581%25AE%25E5%25AE%259F%25E4%25BE%258B%25E3%2582%2592%25E6%25B7%25BB%25E3%2581%2588%25E3%2581%25A6%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[Hono + Cloudflare WorkersでserveStaticしている時のvitestの設定]]></title><description><![CDATA[
 背景

Hono内でserveStatic()を利用する際は、import manifest from '__STATIC_CONTENT_MANIFEST';というイディオムが必要となる

__STATIC_CONTENT_MANIFESTは静的ファイルをCloudflare KVで配信するための設定を色々書くためのものらしい、あんまりよくわかっていない
このimportはvitestでは失敗する


 解決策
import { vi } from 'vitest';

vi.mock('__STATIC_CONTENT_MANIFEST', () =&gt; ({ default...]]></description><link>https://zenn.dev/mierune/articles/618b2d7163a09d</link><guid isPermaLink="true">https://zenn.dev/mierune/articles/618b2d7163a09d</guid><pubDate>Fri, 24 May 2024 01:16:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4waQCGg0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520%252B%2520Cloudflare%2520Workers%25E3%2581%25A7serveStatic%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AEvitest%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:IGUCHI%2520Kanahiro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDdjMTQzMmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MIERUNE%25E3%2581%25AEZenn%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyUWJ4RXRhM0tGZ2F5NVBQMGhCRk04ajFmZ210amNvdXFld2lxPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>IGUCHI Kanahiro</dc:creator></item><item><title><![CDATA[TypeScript で LangChain で 簡易LLMアプリを構築]]></title><description><![CDATA[
 はじめに
LangChain を利用し、大規模言語モデル（LLM）を活用した簡易的なアプリをここでは作成します。具体的にはこの記事に記載されている例を実装します。
https://js.langchain.com/v0.2/docs/tutorials/llm_chain/
LLM は Python での実装事例は多いですが、TypeScript でも問題なく実践できます。

 LangChain とは
LangChain は、大規模言語モデル（LLM）を活用したアプリケーションの開発を支援するフレームワークです。
https://js.langchain.com/v0.2/docs...]]></description><link>https://zenn.dev/hayato94087/articles/6473368cb6457e</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/6473368cb6457e</guid><pubDate>Fri, 24 May 2024 00:43:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ik0-PY0c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520LangChain%2520%25E3%2581%25A7%2520%25E7%25B0%25A1%25E6%2598%2593LLM%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Supabaseでの認証ユーザー追加時にデータ挿入エラーの解決方法]]></title><description><![CDATA[
 はじめに
Supabaseを使って認証ユーザーを追加し、そのユーザーの情報を別のテーブルに同時に挿入する機能を実装しようとしたところ、エラーに遭遇しました。このエラーを解決するための内容を記録として残します。

 やろうとしたこと
Next.jsの画面からサインインボタンを押下するとSupabaseのOAuth(GitHub)認証を利用し、サインインします。その後、サインイン成功をトリガーにProfileテーブルにデータの追加を試みました。

 発生したエラー
Next.jsのWebアプリケーションを起動し、ブラウザからサインインを実行したところ、サーバーエラー(500)となりました...]]></description><link>https://zenn.dev/kou_kawa/articles/39-nextjs-supabase-oauth-error</link><guid isPermaLink="true">https://zenn.dev/kou_kawa/articles/39-nextjs-supabase-oauth-error</guid><pubDate>Thu, 23 May 2024 14:23:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VKxbOpRR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%25E3%2581%25A7%25E3%2581%25AE%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E8%25BF%25BD%25E5%258A%25A0%25E6%2599%2582%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258C%25BF%25E5%2585%25A5%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNTU3ZTY0NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kou</dc:creator></item><item><title><![CDATA[karabiner.tsがとてもいいぞ]]></title><description><![CDATA[
 TL;DR
karabiner.tsがとてもいいぞ

https://evan-liu.github.io/karabiner.ts/

 はじめに
macOSユーザーの皆様におかれましては、キーボードのカスタマイズツールとして有名なKarabiner-Elementsをご存知かと思います。
https://karabiner-elements.pqrs.org/
Karabiner-Elementsは、macOSのキーボードイベントをフックして、キーの入力をカスタマイズすることができるツールです。
中でも Complex Rules という機能を使うと、かなり自由度の高いカスタマイ...]]></description><link>https://zenn.dev/ryoppippi/articles/85373aaf0c92e0</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/85373aaf0c92e0</guid><pubDate>Thu, 23 May 2024 13:04:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5KVG5YdG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:karabiner.ts%25E3%2581%258C%25E3%2581%25A8%25E3%2581%25A6%25E3%2582%2582%25E3%2581%2584%25E3%2581%2584%25E3%2581%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[メモアプリ by TypeScript]]></title><description><![CDATA[TypeScriptとlocalStorageで作成するメモアプリです。
応用編では外部ライブラリを使用してメモの本文をmarkdownの記述に変更しています。]]></description><link>https://zenn.dev/jp_ymatsumoto/books/memo-app-by-ts</link><guid isPermaLink="true">https://zenn.dev/jp_ymatsumoto/books/memo-app-by-ts</guid><pubDate>Thu, 23 May 2024 12:34:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V4Z94hTI--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82ZDJhZGI4MjNjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>松本勇拓</dc:creator></item><item><title><![CDATA[Nextjs(App Router)✖️Nest(graphql)✖️Auth0を用いた認証基盤の作成　〜実装編〜]]></title><description><![CDATA[
 前提知識
https://zenn.dev/naginagi124/articles/f28fadec5a661d

 技術選定
今回は、フロントエンドにNextjs(App router)とbackendにNest(graphql)、認証基盤にAuth0を採用している。

 github
https://github.com/nagisa599/WebAuth0Template

 実装

 Auth0の設定

 Applicatonを作成


 Applicationの種類を選択
Applicationの種類は、Regluar Web Applicationを選択。理由としは、フ...]]></description><link>https://zenn.dev/naginagi124/articles/b24493a04d6ec4</link><guid isPermaLink="true">https://zenn.dev/naginagi124/articles/b24493a04d6ec4</guid><pubDate>Thu, 23 May 2024 11:33:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v5RPbcc5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nextjs%2528App%2520Router%2529%2520Nest%2528graphql%2529%2520Auth0%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25AA%258D%25E8%25A8%25BC%25E5%259F%25BA%25E7%259B%25A4%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2580%2580%25E3%2580%259C%25E5%25AE%259F%25E8%25A3%2585%25E7%25B7%25A8%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlOTYzNTQwYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なぎ</dc:creator></item><item><title><![CDATA[BlockNoteで文字数制限しようとしたら思ったより深くまで潜る必要があったので、せっかくなのでまとめてみる]]></title><description><![CDATA[
 BlockNoteの紹介
そもそも BlockNote とは、ブロックベースのリッチテキストエディタのnpmライブラリです。
国内ではあまり記事とかも書かれておらず、これから多く使われていくと嬉しいなと思っています。BlockNoteとても素敵なライブラリなので是非皆さん使ってみてください。
https://www.blocknotejs.org/
initial release が Mar 25, 2023 でした。

技術選定の話とかその他カスタマイズの話などの話は今回はスコープ外です。
手っ取り早く解決策だけ知りたい方は解決編からどうぞ

 文字数を制限したい
BlockNot...]]></description><link>https://zenn.dev/ryple/articles/49881fdb2fef51</link><guid isPermaLink="true">https://zenn.dev/ryple/articles/49881fdb2fef51</guid><pubDate>Thu, 23 May 2024 10:11:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EE8XRE-F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BlockNote%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E5%2588%25B6%25E9%2599%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%25E3%2582%258A%25E6%25B7%25B1%25E3%2581%258F%25E3%2581%25BE%25E3%2581%25A7%25E6%25BD%259C%25E3%2582%258B%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E3%2581%259B%25E3%2581%25A3%25E3%2581%258B%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AE%25E3%2581%25B6%25E3%2581%2598%25E3%2582%2583%25E3%2581%2599%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1OGM5NTI1OGEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Ryple%2520Dev%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3NTA2MjdiYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>のぶじゃす</dc:creator></item><item><title><![CDATA[Deploy Next.js Monorepo using Turborepo on AWS Amplify Gen 2]]></title><description><![CDATA[AWS Amplify Gen 2 (Amplify) について。
この記事を書くにあたり、前提は以下の通り。

Amplify の検証中です。
Monorepo を検討中です。
開発言語は Monorepo 全体で TypeScript を使います。
Monorepo tool の Nx[1] を検証済みです。

Nx の場合、 Amplify の Framework 自動検出で課題がある。
Amplify の挙動から root の package.json をもとに Framework を判定しているように見える。5月22日時点。
しかし、Monorepo の場合、Frontend ...]]></description><link>https://zenn.dev/dannya/articles/d65ad82ffea052</link><guid isPermaLink="true">https://zenn.dev/dannya/articles/d65ad82ffea052</guid><pubDate>Thu, 23 May 2024 06:33:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P_A8bH-L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deploy%2520Next.js%2520Monorepo%2520using%2520Turborepo%2520on%2520AWS%2520Amplify%2520Gen%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNDY0NzBmMTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke Yamamoto</dc:creator></item><item><title><![CDATA[例外処理 try-catch文、finally、throwについてわかりやすくまとめてみました]]></title><description><![CDATA[
 はじめに
特定の例外をキャッチして処理しようとする場合、関係のない例外もキャッチしてしまう可能性があることを理解しておいてください。
また、ライブラリやフレームワークで独自の例外処理が用意されている場合も多いので、その場合はそちらを使用することをお勧めします！

 try { ... }
例外が発生する可能性のあるコードを書きます。
この部分のコードが実行され、例外が発生した場合にその例外はcatchブロックに渡されます。
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Statements/try...c...]]></description><link>https://zenn.dev/nenenemo/articles/9816ee95962ef4</link><guid isPermaLink="true">https://zenn.dev/nenenemo/articles/9816ee95962ef4</guid><pubDate>Thu, 23 May 2024 05:44:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--93Iz3LhF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%2520try-catch%25E6%2596%2587%25E3%2580%2581finally%25E3%2580%2581throw%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258D%25E3%2583%25A2%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JqODQzWnc5aTdpNll5Z3dqX005LURkLWpYaHVoaFBSOWp5d3ZONXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ネモさん</dc:creator></item><item><title><![CDATA[[tips]ジェネリクスを使おう]]></title><description><![CDATA[こんにちは、ゆきおです。
今日はメモがてら、ちょっとしたことを書いていこうと思います。

 Genericsとは
ジェネリクスとは汎用的なアルゴリズムやデータ構造の型を抽象化し、特定の型に依存しない再利用性の高い実装を表現するのに使用されます。
ジェネリクスによってコードの重複を減らし、また型の安全性や整合性を高めます。
例えば、「型が違うだけで実装が同じ関数」があった場合に役立ちます。
簡単な例ですが、Swiftや他の言語で書いていこうと思います。
・ユーザー情報を取得したい
・リポジトリ情報を取得したい
こんなケースを想定します。

 サンプル実装（Swift）
ユーザー情報の取得と...]]></description><link>https://zenn.dev/yukio_1130/articles/83b18e3fe6cb4c</link><guid isPermaLink="true">https://zenn.dev/yukio_1130/articles/83b18e3fe6cb4c</guid><pubDate>Thu, 23 May 2024 05:40:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uneZUBwi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Btips%255D%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%258D%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1NzBkNjlmNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆきお</dc:creator></item><item><title><![CDATA[useEffect について【React】]]></title><description><![CDATA[
 はじめに
useEffect　について実務で学んだので、自分自身の振り返り用に備忘録として書き残しておきます。

 フロント環境
React
TypeScript

 useEffect とは
公式ドキュメント
ReactのuseEffectを使用すると、コンポーネントのレンダリング後に特定の処理を呼び出すことができます。主な用途は以下の通りです。

データの取得やAPIの呼び出し
DOMの更新や外部リソースの操作

  useEffect(() =&gt; {
    // 実行される処理
  }, []);
useEffect は、副作用を実行するためのReactHookです。
...]]></description><link>https://zenn.dev/ao_5585/articles/f1ebd7b1934002</link><guid isPermaLink="true">https://zenn.dev/ao_5585/articles/f1ebd7b1934002</guid><pubDate>Wed, 22 May 2024 14:57:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5fK4lv2x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useEffect%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590React%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5Njc1MTg2YzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あお</dc:creator></item><item><title><![CDATA[AtCoder×Typesciprt コードメモ]]></title><description><![CDATA[
 概要
ここ最近、TypescriptでAtCoderに参加している。
流用できそうなコードの備忘録をここに残す。順次追加予定。

 階乗
// 階乗を計算する
export const factorial = (n: number): number | null =&gt; {
  if (n &lt; 0) return null;
  let rtn = 1;
  for (let index = n; index &gt; 1; index--) {
    rtn *= index;
  }
  return rtn;
};

 全順列
// 全順列を列挙する
export ...]]></description><link>https://zenn.dev/__poc_sleepy__/articles/b9946c6db0a912</link><guid isPermaLink="true">https://zenn.dev/__poc_sleepy__/articles/b9946c6db0a912</guid><pubDate>Wed, 22 May 2024 13:03:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ouizjxXO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25C3%2597Typesciprt%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:poc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pqcEpLYWlTWmxZbGZfbWpjUzlhSnpzVmNhWHVwSF9iVkdrVVNqPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>poc</dc:creator></item><item><title><![CDATA[TypeScript x Momento | Node.js SDK でキャッシュを操作する]]></title><description><![CDATA[
 Momento Cache
今、勢いのあるサーバーレスのキャッシュサービスで、圧倒的な高速性と使いやすさが売りです。
https://jp.gomomento.com/services/momento-cache/

Momento Cacheは、世界初の真のサーバーレスキャッシングサービスです。瞬時の弾力性、scale-to-zero機能、圧倒的な高速パフォーマンスを提供します。 容量の選択、管理、プロビジョニングが必要な時代は終わりました。Momento Cacheでは、SDKを入手し、エンドポイントを取得し、コードに数行入力するだけで、すぐに実行できます。
Momento Ca...]]></description><link>https://zenn.dev/collabostyle/articles/ebdfbb81dbb641</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/ebdfbb81dbb641</guid><pubDate>Wed, 22 May 2024 12:51:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vvyla7jJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520x%2520Momento%2520%257C%2520Node.js%2520SDK%2520%25E3%2581%25A7%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxOTFmZDljMTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxZWExODEyMWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山とコード</dc:creator></item><item><title><![CDATA[【Next.js】タスク管理アプリで学ぶアーキテクチャ]]></title><description><![CDATA[
 はじめに
この記事は「ビジネスロジックがフレームワークやDBに依存せず、変更や拡張に強い設計であること」に重点を置いてタスク管理アプリを作成する過程を紹介したものです。
現在フロントエンドエンジニア2年目で、DDD（ドメイン駆動設計）の開発手法やクリーンアーキテクチャ、オニオンアーキテクチャといった設計方法の歴史や概念を勉強したので、実際に個人開発アプリに組み込んでみました。
まだ知識が浅く我流な部分もあるかと思いますが理解を深めるために記事に残します。

 対象者

アーキテクチャの概要を知っている人


 解説しないこと

Next.jsの機能の説明
アーキテクチャの詳しい説明（...]]></description><link>https://zenn.dev/kiwichan101kg/articles/512d209be14b4d</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/512d209be14b4d</guid><pubDate>Wed, 22 May 2024 10:46:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J9NTeSah--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzNDBjOGU1ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[streamは明示的に閉じておこう [Node.js]]]></title><description><![CDATA[
 はじめに
!
この記事で扱っているNode.jsのバージョンはv22.2.0です。
他のバージョンでは挙動が異なる場合があります。

こんにちは、Buzo(@buzou_muzou)です。
最近Node.jsで画像処理を行う処理を書きました。その際に、streamとpipeを使いました。
改めてドキュメントを読んでみると、autoCloseが有効な場合でもstreamを閉じる処理を明示的に書かないとリソースリークを起こしてしまう場合があることを知ったのでまとめてみました。

 リソースリークが起きる可能性があるコード
以下のようなコードには問題があります。
import fs fro...]]></description><link>https://zenn.dev/dev_commune/articles/46d0abd2ab93c0</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/46d0abd2ab93c0</guid><pubDate>Wed, 22 May 2024 10:28:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4WhGWkcE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:stream%25E3%2581%25AF%25E6%2598%258E%25E7%25A4%25BA%25E7%259A%2584%25E3%2581%25AB%25E9%2596%2589%25E3%2581%2598%25E3%2581%25A6%25E3%2581%258A%25E3%2581%2593%25E3%2581%2586%2520%255BNode.js%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Buzo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmNDI0ODgwZjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Buzo</dc:creator></item><item><title><![CDATA[はじめての effect-ts]]></title><description><![CDATA[
 Intro
こんにちは、Kaiです。
今回のブログ投稿はTypeScriptについての続きで、effect-tsライブラリ（Effect）を使った、より型安全な開発についてお話しします。
Effectは非常に豊富な機能を持つライブラリであり、すべての機能を一つのブログ投稿で紹介することは不可能です。そのため、このブログではEffectがどのようなものか、そして開発中にどのように安全なアプリケーションを作る手助けをしてくれるかについて簡単に紹介します。

 Effectとは何か
Effectは何をするのでしょうか？
公式サイトによると、Effectは以下のことを可能にします：

イミュ...]]></description><link>https://zenn.dev/socialplus/articles/d477518df2c80a</link><guid isPermaLink="true">https://zenn.dev/socialplus/articles/d477518df2c80a</guid><pubDate>Wed, 22 May 2024 09:41:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pdj7T7BB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AE%2520effect-ts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kailma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4Mjg2YmNjMDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Social%2520PLUS%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXNXRVZFaTBmMDM2VUhvckNoRzF4UkotZzdtaFpJek8xUkdWcDRjcTBlPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kailma</dc:creator></item><item><title><![CDATA[params options args parameters の使い分け]]></title><description><![CDATA[
 はじめに
株式会社ドワンゴのニコニコ生放送でフロントエンドを担当している misuken です。
今回はTypeScriptを使った開発においてブレやすい params options args parameters の使い分けについて解説します。
これらの名前は統一されていないとコードの可読性を下げる原因にもなり、自身が携わるプロジェクトでもレビュー中にコードのブレが気になることから、うまく使い分けるコツを記事として公開することにしました。
それぞれの名前の意味や役割を理解し、適切に使い分けることでコード品質の向上やレビューの負担軽減に繋げていただけると幸いです。

 前提
この記...]]></description><link>https://zenn.dev/misuken/articles/427c60c1a352f6</link><guid isPermaLink="true">https://zenn.dev/misuken/articles/427c60c1a352f6</guid><pubDate>Wed, 22 May 2024 06:41:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YDvD4ZJn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:params%2520options%2520args%2520parameters%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:misuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODA4ZDhlZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>misuken</dc:creator></item></channel></rss>