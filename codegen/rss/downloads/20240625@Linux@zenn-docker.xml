<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 25 Jun 2024 12:03:45 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[簡単なアプリを作って、Kubernetesで動かしてみる]]></title><description><![CDATA[簡単なREST API（言語はGo）を作って、ローカル環境で構築したKubernetesで実行までします。
KubernetesでHello worldしたい方や、アプリをカスタマイズしてKubernetesの検証をしたい人にとって、参考になれば幸いです。

 ゴール

簡単なREST APIのアプリを作成します
Dockerイメージを作成、実行します
Kubernetesに作成したアプリをデプロイします

https://github.com/d-zenju/web-service-gin

 環境

Golang v1.22.4
Rancher Desktop Version: 1....]]></description><link>https://zenn.dev/ozen/articles/6782af4952d98b</link><guid isPermaLink="true">https://zenn.dev/ozen/articles/6782af4952d98b</guid><pubDate>Tue, 25 Jun 2024 10:57:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rqLUS00j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581Kubernetes%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2520Zenju%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMTRjOGQzN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke Zenju</dc:creator></item><item><title><![CDATA[BigQueryを利用したアプリケーションのローカルテスト]]></title><description><![CDATA[BigQueryを利用するアプリケーションの開発時に、データベースの操作をどのようにテストするかが課題となります。その際の主な選択肢は下記となります。

BigQueryのモックを作成してローカルでテストする
テスト用のBigQuery環境を用意してGCP上でテストする

bigquery-emulatorを利用してローカルでテストする


 1. BigQueryのモックを作成してローカルでテストする

 概要
BigQueryの操作をモック化し、テスト時に実際のBigQueryに接続せずにテストを行う方法です。

 メリット

テストの実行が高速
外部サービスに依存しないため、安定し...]]></description><link>https://zenn.dev/carenet/articles/eeb5600b17c7d0</link><guid isPermaLink="true">https://zenn.dev/carenet/articles/eeb5600b17c7d0</guid><pubDate>Tue, 25 Jun 2024 08:59:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eexIul5w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BigQuery%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kaz%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJGOGFDT3NiNW5JTGRDSkVSUC1tNTJZZF9qNzRqUWJTemlGR0s9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kaz</dc:creator></item><item><title><![CDATA[DockerComposeでNginx+Django+MySQL環境の構築]]></title><description><![CDATA[
 概要
Ubuntu(20.04 LTS)でDjangoの開発環境をDocker-composeを利用して構築したのでその備忘録です。

Ubuntu:20.04LTS
Docker:26.1.4
Docker Compose:2.24.1
Nginx:1.27.0
MySQL:8.0
Python:3.12


 ディレクトリ構成
今回のディレクトリ構成は下記になります。
.
├── .gitignore
├── .env
├── docker-compose.yml
|
├── django/
|   ├── .env
|   ├── Dockerfile
|   └── requ...]]></description><link>https://zenn.dev/jinzzzz/articles/4e452fc5587e6a</link><guid isPermaLink="true">https://zenn.dev/jinzzzz/articles/4e452fc5587e6a</guid><pubDate>Tue, 25 Jun 2024 08:16:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1YeLJ8Yh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DockerCompose%25E3%2581%25A7Nginx%252BDjango%252BMySQL%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmZDljYmRkMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jin</dc:creator></item><item><title><![CDATA[GoとDockerでGraceful Shutdown]]></title><description><![CDATA[
 はじめに
先日，某社のインターンシップの面接を受けたのですがその際に，メンターの方から「あなたの作ったプログラムは，サーバーを Graceful Shutdown していて良いですね～」(意訳)という声をかけていただきました．
Go の標準パッケージの場合，server.Shutdown を呼び出せはサーバーをシャットダウンすることができますが，これだけでは Graceful Shutdown できない場合もあります．
Graceful Shutdown したつもりができていなかったという悲劇が繰り返されないように，Graceful Shutdown のやり方を調べている・勉強してい...]]></description><link>https://zenn.dev/aqyuki/articles/94d398174aa9e7</link><guid isPermaLink="true">https://zenn.dev/aqyuki/articles/94d398174aa9e7</guid><pubDate>Tue, 25 Jun 2024 00:59:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EbszQoW4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Go%25E3%2581%25A8Docker%25E3%2581%25A7Graceful%2520Shutdown%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aqyuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0ZThiNWFjZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aqyuki</dc:creator></item><item><title><![CDATA[【いらすとや図解】はじめてのEC2デプロイ]]></title><description><![CDATA[簡単なDockerfileをEC2にデプロイするだけの記事を書いてみました。
ビジネスで活用する場合はセキュリティ等も考慮した構成の構築をご検討ください。
※AWSのアカウントは作成済としてます

 ざっくりとした実装の流れ
1. AWS上でネットワークの箱を作る(VPC)
2. どの通信をOKにするか？のルール決める(セキュリティグループ)
3. 仮想サーバーを作り、VPCと関連付ける(EC2インスタンス作成)
4. 仮想サーバーの中に入る(SSHでEC2)
5. EC2サーバーの中でdockerとgitをインストールする
6. EC2サーバーの中で該当リポジトリをgit pullする...]]></description><link>https://zenn.dev/miumi/articles/f019f51c09d545</link><guid isPermaLink="true">https://zenn.dev/miumi/articles/f019f51c09d545</guid><pubDate>Mon, 24 Jun 2024 23:18:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gH7wdCJW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%2584%25E3%2582%2589%25E3%2581%2599%25E3%2581%25A8%25E3%2582%2584%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AEEC2%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2582%25AB%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4YjgwZTkyZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミカイ</dc:creator></item><item><title><![CDATA[Docker Rootless モードについて]]></title><description><![CDATA[恥の多い生涯を送って来ました。
日々Dockerにお世話になっているというのに、Rootlessモードというものが見当つかないのです。
そんな自分に嫌気が差しました。私はRootlessモードに向き合わなければならない。

 おことわり
LinuxでDockerを実行していることを前提とします。
MacやWindowsでDockerを実行している方は、VMのLinuxレイヤー以上の話とお考えください。
この記事ではDocker Rootlessモードの内部動作についてまとめます。
Rootlessモードのセットアップ方法などは公式ドキュメントをご参照ください。

 一般ユーザでのDock...]]></description><link>https://zenn.dev/yamahitsuji/articles/docker-rootless-mode</link><guid isPermaLink="true">https://zenn.dev/yamahitsuji/articles/docker-rootless-mode</guid><pubDate>Mon, 24 Jun 2024 13:24:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--24qApBcr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Rootless%2520%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yamahitsuji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzMTRhMDRiOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yamahitsuji</dc:creator></item><item><title><![CDATA[Dify + Discord botで運動を手軽に記録する試み]]></title><description><![CDATA[
 やりたいこと
Disocrdで雑に筋トレ内容をしゃべるといい感じにjsonで記録してくれる。

 背景
運動を記録するためのアプリをいちいち開くのが面倒だし、何の種目を何回とか入れるのも面倒
そもそも運動記録の目的は以下

モチベ―ション上げ（自分で見返したり人に見てもらって褒められたい）
トレーニング部位に偏りはないか（腕ばっかりやってたりとか）
どんくらいやればちょうどいいのか（筋肉痛ひどすぎて腕伸ばせないとかを避けたい）


 ユースケース図的な

 Difyで出来ることを調べる

 イメージ
Function Callingみたいなイメージ。チャットの返答結果をJsonなどの...]]></description><link>https://zenn.dev/omtkz/articles/fd5e5282e281f4</link><guid isPermaLink="true">https://zenn.dev/omtkz/articles/fd5e5282e281f4</guid><pubDate>Mon, 24 Jun 2024 10:19:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bCYmtSEP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dify%2520%252B%2520Discord%2520bot%25E3%2581%25A7%25E9%2581%258B%25E5%258B%2595%25E3%2582%2592%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazan%2520Omata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTc3OTBjZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazan Omata</dc:creator></item><item><title><![CDATA[DockerでGo製のアプリケーションを動かすならdistrolessを使おうというお話]]></title><description><![CDATA[
 はじめに
タイトルがあれですが，要は distroless と Go 製のアプリケーションは相性がいいっていうだけのお話です．

 distroless とは
distroless は，Google が開発している Debian ベースのイメージで最小限のファイルしか含まれていない[1]ためとても軽量という特徴があります．
https://github.com/GoogleContainerTools/distroless
最小限のファイルしか含まれていないというのは伊達でなくイメージにもよりますがglibc・libssl・opensslすら含まれていないです．
シェルやパッケージマ...]]></description><link>https://zenn.dev/aqyuki/articles/87be6171daf6b5</link><guid isPermaLink="true">https://zenn.dev/aqyuki/articles/87be6171daf6b5</guid><pubDate>Mon, 24 Jun 2024 08:37:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hFCh0ULU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Go%25E8%25A3%25BD%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25AA%25E3%2582%2589distroless%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aqyuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0ZThiNWFjZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aqyuki</dc:creator></item><item><title><![CDATA[Docker compose で mysql:8.0 の初期化失敗]]></title><description><![CDATA[原因がわからんけど動いた、という感じの物。
docker compose 環境で mysql:8.0 を動かしたときに './ibdata1' could not be found in the doublewrite buffer. とか言われて動かなくなるヤツの対処。

 結論
docker-compose の場合、volume 名が volumes に書いた物ではなく、docker-compose.yaml のディレクトリ名 + volumes に書いた名前になる。削除するときは docker volume ls で確認すること。

 環境

ホスト: Mac OS Sonoma,...]]></description><link>https://zenn.dev/at_yasu/articles/0fe049bacb1ffd</link><guid isPermaLink="true">https://zenn.dev/at_yasu/articles/0fe049bacb1ffd</guid><pubDate>Mon, 24 Jun 2024 07:27:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Az9FFdFZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520compose%2520%25E3%2581%25A7%2520mysql%253A8.0%2520%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E5%25A4%25B1%25E6%2595%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:at%2520yasu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXZTA2UnY4TGJzekdUaGxIcmN4V1pQV1JsTnhJaV9zT0ZSRHpBTnc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>at yasu</dc:creator></item><item><title><![CDATA[32ビットARMのエントリーモデルQNAPでInfluxDB2とGrafanaを動かす]]></title><description><![CDATA[
 やりたいこと
家庭で動かしているエントリーモデルのQNAPでGrafana+InfluxDB2による各種データの可視化を行いたい。

 制限

 QNAPのアーキテクチャ
QNAPはLinuxベースのNASだがCPUアーキテクチャがIntel/AMD64, ARM64/32ベースのものがあり、家庭・個人向けのエントリーモデルはARM32が多い？(現行製品はエントリーレベルも64bitになっているかも？)
https://www.qnap.com/ja-jp/product?product-group=home
私が使用しているTS-231Pはarm7l
$ cat /proc/cpu...]]></description><link>https://zenn.dev/hkato/articles/0996b9eb510956</link><guid isPermaLink="true">https://zenn.dev/hkato/articles/0996b9eb510956</guid><pubDate>Mon, 24 Jun 2024 01:59:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--99MpMKi2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:32%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588ARM%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABQNAP%25E3%2581%25A7InfluxDB2%25E3%2581%25A8Grafana%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hkato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lzRFNjXzNhQTZ3VmJzNnB5aDctUTBvdmlfY3FsY1JKNG1VR3FsM2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hkato</dc:creator></item><item><title><![CDATA[WSL2上のDockerコンテナから`plt.show()`でグラフを表示するための設定]]></title><description><![CDATA[
 これはなに
WSL2（Ubuntu）上のDockerコンテナから、matplotlibで作成したグラフをshow()メソッドで表示するための設定のメモ。

 前提
Dockerコンテナからplt.show()でグラフを表示しようとすると、下記のようなエラーが発生して、グラフが表示されない。

error
$ /usr/local/bin/python /home/user/workspaces/src/main.py
/home/user/workspaces/src/main.py:9: UserWarning: FigureCanvasAgg is non-interactive...]]></description><link>https://zenn.dev/nakurei/articles/display-graph-from-within-docker-container-on-wsl2</link><guid isPermaLink="true">https://zenn.dev/nakurei/articles/display-graph-from-within-docker-container-on-wsl2</guid><pubDate>Sun, 23 Jun 2024 22:55:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b5PcgTXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E4%25B8%258A%25E3%2581%25AEDocker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%258B%25E3%2582%2589%2560plt.show%2528%2529%2560%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NakuRei</dc:creator></item><item><title><![CDATA[【Docker】APIとReact/TypeScriptを同じコンテナで動かす【備忘録】]]></title><description><![CDATA[
 はじめに
今回の記事は、以下の過去記事3つを元に、APIと、TypeScriptを同じコンテナで動かすための備忘録です。

 過去記事
https://zenn.dev/haru330/articles/3840fcd5ff02f4
https://zenn.dev/haru330/articles/24aa98eb05306f
https://zenn.dev/haru330/articles/859d6a7982d06d

 ディレクトリ構成
以下のような構成にしていきます。
📁 your-project
├── 📁 api
│   ├── Dockerfile
│   └── ...]]></description><link>https://zenn.dev/haru330/articles/c4e2fb4a350a9f</link><guid isPermaLink="true">https://zenn.dev/haru330/articles/c4e2fb4a350a9f</guid><pubDate>Sun, 23 Jun 2024 08:55:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W6wfXV2h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591API%25E3%2581%25A8React%252FTypeScript%25E3%2582%2592%25E5%2590%258C%25E3%2581%2598%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NzQyOWFkM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はる</dc:creator></item><item><title><![CDATA[【Docker】Docker HubにimageをPushする方法]]></title><description><![CDATA[
 到達目標


 1.Docker Hubにリポジトリを作成
https://hub.docker.com/repositories/

上記URLからDocker Hubに遷移し、Docker Hubにログインする。
右上の「Create」ボタンをクリックし、「Create Repository」を選択。
リポジトリの名前、説明、プライバシー設定などの詳細を入力。

!
リモートのローカルのリポジトリ名とローカルのリポジトリ名は同一である必要がある。


 2.Dockerレジストリへログイン（docker login）

コマンド実行後、UsernameとPasswordを入力
d...]]></description><link>https://zenn.dev/code_journey_ys/articles/bc2cf770657e96</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/bc2cf770657e96</guid><pubDate>Sat, 22 Jun 2024 15:05:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fx1iaNCR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591Docker%2520Hub%25E3%2581%25ABimage%25E3%2582%2592Push%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Azure Functions Core ToolsでAzure FunctionsをローカルのVSCode上で開発・テストできるようにする]]></title><description><![CDATA[
 執筆日
2024/06/22

 概要
Azure Functionsは、Azure上で実行されるサーバーレスコンピュートサービスです。様々なイベントに基づいてコードを自動的に実行できます。HTTPリクエストへの応答、定期的なスケジュールでのタスク実行、または他のAzureサービスや外部サービスからのイベントに応じた処理などが可能です。
ですが、開発のデバッグ時点でリソースを作成してコストがかかってしまうのは相当お金に余裕のある人でなければ避けたいと思います。そこで今回はローカルのVSCode上で開発・テストを行う方法を紹介したいと思います。

 動作環境
Windows, Mac,...]]></description><link>https://zenn.dev/headwaters/articles/eea7d6e072e9be</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/eea7d6e072e9be</guid><pubDate>Sat, 22 Jun 2024 03:36:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tUk0dxeG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Functions%2520Core%2520Tools%25E3%2581%25A7Azure%2520Functions%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEVSCode%25E4%25B8%258A%25E3%2581%25A7%25E9%2596%258B...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[【Docker】Dockerコマンド・Docker Composeコマンド一覧（随時更新中）]]></title><description><![CDATA[!
【Dockerコマンド】
個々のDockerコンテナの操作を行うためのコマンド。


 基本コマンド

 コマンド一覧確認（docker help）
docker help

 バージョン確認（docker version）

簡単なバージョン確認
docker --version または　docker -v


詳細なバージョン確認
docker version


 システム全体の情報（docker info）
docker info

 コンテナ管理

 実行中のコンテナの一覧を表示（docker ps）
docker ps
出力結果

出力結果
CONTAINER ID   ...]]></description><link>https://zenn.dev/code_journey_ys/articles/fb068e23ea1c57</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/fb068e23ea1c57</guid><pubDate>Fri, 21 Jun 2024 12:24:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qznTZP4E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591Docker%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25BBDocker%2520Compose%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2588%25E9%259A%258F%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E4%25B8%25AD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[【Docker】マルチコンテナアプリケーションとは]]></title><description><![CDATA[
 マルチコンテナアプリケーションとは

ネットワークを通じて複数のコンテナが互いにやり取りを行いながら処理を実行するアプリケーションのこと。
複数のコンテナとは、webアプリケーション（RailsやDjangoなど）とDB（MySQLやPostgreSQLなど）などのことを指す。

docker-compose.ymlファイルで定義する。docker-compose.ymlファイルでは、webとdbを定義する。
2つのコンテナーが同一ネットワーク上にあれば互いにやりとりができる。 同一ネットワーク上にないときはできない。


 マルチコンテナアプリケーションのディレクトリ構成
myap...]]></description><link>https://zenn.dev/code_journey_ys/articles/c71eb0b8718cc9</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/c71eb0b8718cc9</guid><pubDate>Fri, 21 Jun 2024 11:36:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0eFxz1KZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[QwikをDocker環境で構築する]]></title><description><![CDATA[
 Qwikとは
Qwikは、新しいタイプのWebフレームワークで、アプリケーションの規模や複雑さに関係なく、瞬時にロードされるWebアプリケーションを提供できます。Qwikを使用することで、どんなに複雑なアプリケーションでも約1kbのJavaScriptで起動し、スケールに応じた一貫したパフォーマンスを実現できます。


 動作環境
Rails 7 +MySQLのDocker環境構築 で構築した環境にFrontとして追加します。

 環境構築

 compose.ymlにFront環境の追加

compose.yml
services:
  db:
    image: mysql:8...]]></description><link>https://zenn.dev/merume/articles/654f35aab6b3b8</link><guid isPermaLink="true">https://zenn.dev/merume/articles/654f35aab6b3b8</guid><pubDate>Fri, 21 Jun 2024 11:29:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CJgHaj4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Qwik%25E3%2582%2592Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sato%2520masaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzIyZDY2NmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sato masaki</dc:creator></item><item><title><![CDATA[SQLSTATE[HY000] [1045] Access denied for user 'user'host_number' の対処法]]></title><description><![CDATA[
 どんな時にタイトルのエラーが発生したのか
php artisan migrateを実行したとき

 エラーの詳細
SQLSTATE[HY000] [1045] Access denied for user 'username'@'host_number' (using password: YES) (SQL: select * from information_schema.tables where table_schema = event and table_name = migrations and table_type = 'BASE TABLE')
上記のエラーを分かりやすく...]]></description><link>https://zenn.dev/take12/articles/c71cc1b5712776</link><guid isPermaLink="true">https://zenn.dev/take12/articles/c71cc1b5712776</guid><pubDate>Fri, 21 Jun 2024 06:18:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--596OdKMk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQLSTATE%255BHY000%255D%2520%255B1045%255D%2520Access%2520denied%2520for%2520user%2520%2527user%2527host_...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Take4Kobaya4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hRaEc5eGloa0tIT3luaFJiX0MyN3NOd1FlRE1BU1lPWG9zWnM4R1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Take4Kobaya4</dc:creator></item><item><title><![CDATA[初心者向けDockerの使い方]]></title><description><![CDATA[
 よくわからないDocker
周りから「Dockerは便利だよ」とよく聞くけれど、実際に使ってみると「Dockerって何？何をしているの？」と感じることはないでしょうか。私自身は、Dockerがわからず苦労しました。
この記事では、Dockerの基本から具体的な使い方まで、初心者でも理解しやすいように丁寧に解説していきます。Dockerを自在に操れるようになるための第一歩となれば幸いです。
Dockerのインストール
MacOSであればHomebrew経由でインストールするのがおすすめです。
本記事では、インストール方法については触れません。それぞれのOSと好みに合わせて適切にインスト...]]></description><link>https://zenn.dev/hrk0531/articles/cdb7b8400dd226</link><guid isPermaLink="true">https://zenn.dev/hrk0531/articles/cdb7b8400dd226</guid><pubDate>Fri, 21 Jun 2024 05:41:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uyr_CVMp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591Docker%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNTc2MmQzMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroki</dc:creator></item><item><title><![CDATA[Kubernetesクラスターでkubectlが通らなくなった【証明書期限切れ】]]></title><description><![CDATA[自宅サーバー(Proxmox)でHA構成のKubernetesクラスターを構築してから早一年が経ちました。 詳しくはこちらの記事でまとめています。
しかし、久しぶりに様子を見てみるとkubectlなどのコマンドが全く通らなくなってしまいました。今回はそのトラブルシューティングをまとめようと思います。

 エラー内容
最初はk9sが落ちることに気づき、kubectlコマンドを実行してみてもtimeoutが生じていることが確認できました。
$ kubectl get nodes
E0613 09:31:17.589658 26729 memcache.go:265] couldn't get...]]></description><link>https://zenn.dev/eucyt/articles/renew-k8s-cert</link><guid isPermaLink="true">https://zenn.dev/eucyt/articles/renew-k8s-cert</guid><pubDate>Thu, 20 Jun 2024 11:21:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4OBAVGPm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kubernetes%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25A7kubectl%25E3%2581%258C%25E9%2580%259A%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2590%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E6%259C%259F%25E9%2599%2590%25E5%2588%2587%25E3%2582%258C%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuta%2520Euchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4OTE2NGFhZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuta Euchi</dc:creator></item></channel></rss>