<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 13 Aug 2024 10:10:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[Node.js]ファイルからデータを読み込み、行単位で処理する]]></title><description><![CDATA[
exec.ts
import { readFileSync } from "node:fs";

const animals = readFileSync("./animals.txt", "utf-8").split("\n");

animals.forEach((animal, i) =&gt; {
  console.log(`${i}: ${animal}`);
});


animals.txt
犬
猫
鶏

実行結果
1: 犬
2: 猫
3: 鶏
]]></description><link>https://zenn.dev/purratto/articles/0499c4be680961</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/0499c4be680961</guid><pubDate>Tue, 13 Aug 2024 08:15:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bClkQKU4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNode.js%255D%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2580%2581%25E8%25A1%258C%25E5%258D%2598%25E4%25BD%258D%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[[Node.js]CSVの1つのセルの中でJSONデータをインデントをつけてわかりやすく表示する]]></title><description><![CDATA[
exec.ts
import { createWriteStream } from "node:fs";

const dogs = [
  {
    breed: "セントバーナード",
    detail: {
      size: "大型",
      origin: "スイス",
      rescueAbility: 100,
    },
  },
  {
    breed: "プードル",
    detail: {
      size: "小型",
      origin: "フランス",
      hypoallergenic: true,
    ...]]></description><link>https://zenn.dev/purratto/articles/ecef8fd8f6bae1</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/ecef8fd8f6bae1</guid><pubDate>Tue, 13 Aug 2024 05:32:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E75NZgsC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNode.js%255DCSV%25E3%2581%25AE1%25E3%2581%25A4%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7JSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[JavaとJavaScriptの違い]]></title><description><![CDATA[JavaとJavaScriptは名前が似ていますが、異なるプログラミング言語で、それぞれに異なる特徴と用途があります。
違うことはわかってるけど説明できないなーと思ったのでまとめてみました〜〜〜



 1. Javaの概要
Javaはプログラミング言語の1つで、1995年にサン・マイクロシスズがリリースしたプロミング言語。

 2. Javaの特徴


バックエンドを開発するプログラミング言語

コンパイル言語
プログラムを実行する際にコンピュータが読み取れる言語に翻訳することをコンパイルと呼び、事前にコンパイルする言語をコンパイラ言語と呼びます。
Javaはバイトコードという中間形式...]]></description><link>https://zenn.dev/takeda_kaho/articles/cf68bd3b11851b</link><guid isPermaLink="true">https://zenn.dev/takeda_kaho/articles/cf68bd3b11851b</guid><pubDate>Tue, 13 Aug 2024 05:00:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wsGqVIej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Java%25E3%2581%25A8JavaScript%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takepanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZWRlZDIyZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takepanda</dc:creator></item><item><title><![CDATA[実務でVue.js3を使ってみての感想]]></title><description><![CDATA[
 はじめに
今回、Vue3から導入されたCompositionAPIを実務で使用した経験から、OptionsAPIとの違いや、CompotisonAPIを使ってみた感想を紹介したいと思います。
また、この記事を通してCompositionAPIとOptionsAPIのどちらを採用するか迷っている方にとって、今回の内容が検討材料になれば幸いです。

 この記事のターゲット

CompotisonAPIの導入を考えている方。
OptionsAPIとCompotisonAPIどちらを採用するか検討している方。
CompotisonAPI初心者の方。


 実務で対応した実装
今回のプロジェク...]]></description><link>https://zenn.dev/shunjuio/articles/b19a15865f8177</link><guid isPermaLink="true">https://zenn.dev/shunjuio/articles/b19a15865f8177</guid><pubDate>Tue, 13 Aug 2024 00:33:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FDIzxN2P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7Vue.js3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25AE%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yoshiaki0217%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MGZmNGMxMGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%25E6%2598%25A5%25E7%25A7%258B%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzlESWdtdkZkcDJRSTJ3VlJUcmRyWUtfUHFJa3NRa2llRkl4a2hhVjFwQ1lORkl3PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoshiaki0217</dc:creator></item><item><title><![CDATA[【いらすとや図解】はじめてのレンダリング]]></title><description><![CDATA[
 この記事に関して
ブラウザのレンダリングについて書いていきます。
細かい仕様とかは抜きにしてざっくり概要を書いていきますのでわかりやすくなっているかなと思います。
ブラウザのレンダリングから、具体的な問題への対処法、将来を見越した設計の基本などを今後書いていく予定です。
この記事は下記の本をベースとして書いています
https://gihyo.jp/book/2017/978-4-7741-8967-3

 この記事の対象者

レンダリングってなんですか？という方
フロントエンドのパフォーマンスになんとなく意識(興味)を持った方


 この記事で取り扱わないこと

React.jsや...]]></description><link>https://zenn.dev/miumi/articles/c718d484f32ba4</link><guid isPermaLink="true">https://zenn.dev/miumi/articles/c718d484f32ba4</guid><pubDate>Mon, 12 Aug 2024 23:16:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c-fDO7pJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%2584%25E3%2582%2589%25E3%2581%2599%25E3%2581%25A8%25E3%2582%2584%25E5%259B%25B3%25E8%25A7%25A3%25E3%2580%2591%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2582%25AB%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4YjgwZTkyZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミカイ</dc:creator></item><item><title><![CDATA[ChatGPTを使った開発体験記]]></title><description><![CDATA[
 ChatGPTを使った開発体験記
最近、いくつかのプロジェクトでChatGPTをサポート役として活用してきました。その中で、Tailwind CSSの挑戦、Chrome拡張の移植、そしてクラス名の並び替えなど、さまざまな経験をしました。今回はその詳細をお届けします。

 Tailwind CSSにチャレンジ
転職先でTailwind CSSを使っていたので、勉強がてら自分のプロジェクトにも導入してみました。Tailwind CSSのユーティリティクラスは、デザインの一貫性を保ちながら、開発のスピードを上げるのに非常に便利です。しかし、最初はクラス名の覚え方や、どこにどのクラスを使うべ...]]></description><link>https://zenn.dev/harurow/articles/5010e8ee664521</link><guid isPermaLink="true">https://zenn.dev/harurow/articles/5010e8ee664521</guid><pubDate>Mon, 12 Aug 2024 10:28:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SbTKjEqq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:www.harurow%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OTViZWQ1NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>www.harurow</dc:creator></item><item><title><![CDATA[【JavaScript】無限ループ（ブラウザが落ちる原因）を対処]]></title><description><![CDATA[
 はじめに
JavaScriptに悩む、すべての初学者に向けてこの記事を贈ります。


 その原因こそ、JavaScriptの「無限ループ」です。
機械は非常に素直です。命令通り、精密に働きます。
あなたは司令官です。
指示を少し間違えただけで、「無限に処理し続けなきゃ！💦」と真面目に働いた彼は今、ぐったりしています。

今すぐ、間違えた指示を書き直していきましょう！

 無限ループの例とその対処法

 1. while文
!

 まずwhile文とは

変数iの値を、条件式（i &lt; 5）がtrueである限り処理を繰り返します。（今回はコンソールにログを出力しますが、もちろん様々...]]></description><link>https://zenn.dev/yamap_web/articles/a7cfcf1ecdc722</link><guid isPermaLink="true">https://zenn.dev/yamap_web/articles/a7cfcf1ecdc722</guid><pubDate>Mon, 12 Aug 2024 10:16:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y_-keOlA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E7%2584%25A1%25E9%2599%2590%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25EF%25BC%2588%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%258C%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%258B%25E5%258E%259F%25E5%259B%25A0%25EF%25BC%2589%25E3%2582%2592%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25B4%25E3%2583%25BC%2520%252F%2520YAMAGUCHI%2520T...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwZGM5MGNmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまぴー / YAMAGUCHI Tomohisa</dc:creator></item><item><title><![CDATA[Markdown内部のJavaScriptにもLinterを効かせたい]]></title><description><![CDATA[
 はじめに
普段自分が記事を書く時にコードブロック内の記述にLintを効かせたいことがたまにあります。
実際に動いているコードからコピーしてくる場合などはあまり心配はいらないのですが、サクッと記述例を書く時に不安があったので@eslint/markdownを導入してある程度のチェックは自動で行ってくれるようにしました。

 導入方法について
TypeScript向けのLinterルールを構成していきます。
また、設定ファイルはFlatConfig形式ですので古い設定ファイルの場合は読み替えてください。
https://eslint.org/docs/latest/use/configu...]]></description><link>https://zenn.dev/ken7253/articles/eslint-for-zenn</link><guid isPermaLink="true">https://zenn.dev/ken7253/articles/eslint-for-zenn</guid><pubDate>Mon, 12 Aug 2024 09:35:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uJ7TNLME--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Markdown%25E5%2586%2585%25E9%2583%25A8%25E3%2581%25AEJavaScript%25E3%2581%25AB%25E3%2582%2582Linter%25E3%2582%2592%25E5%258A%25B9%25E3%2581%258B%25E3%2581%259B%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ken7253%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmNDc1OTM1ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ken7253</dc:creator></item><item><title><![CDATA[【備忘録】return と return await の違い]]></title><description><![CDATA[
 この記事を書こうと思ったきっかけ
React でデータフェッチ部分を async で非同期関数を定義して、フェッチしてきたデータを返却するときに return data とするか return await data とするか迷った。
挙動は同じように見受けられたが、書き方による違い・よりベターな方を知りたかったため調査を行った。

 先に結論から
return await を使う。で問題なさそう

 書き方によって変わってくるところ

例外のキャッチ場所
処理時間


 例外のキャッチ場所
try-catch ブロックとともに使用している前提

 return の場合

関数の呼び出...]]></description><link>https://zenn.dev/ryusei12/articles/52346cf0928de8</link><guid isPermaLink="true">https://zenn.dev/ryusei12/articles/52346cf0928de8</guid><pubDate>Mon, 12 Aug 2024 07:59:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3dmCrIk7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591return%2520%25E3%2581%25A8%2520return%2520await%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nkmryu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMDVhN2E5ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nkmryu</dc:creator></item><item><title><![CDATA[TypeScriptで「選択肢」の定義をEnum的な定数にまとめる――satisfiesとSSoTもあるよ]]></title><description><![CDATA[ソート順の選択プルダウンがある一覧系ページを実装するとき、選択肢たちの管理方法に頭を悩ませることが多いと思います。

商品一覧ページの概要

ソート順プルダウンの選択肢たち
上の画像に示したような場合だと、

《クエリパラメータ》と《選択肢》の間の相互変換


?sort=price&amp;order=desc &lt;--&gt; 「価格が高い順」


《select の状態に使うための文字列》と《選択肢》の間の相互変換

&lt;option value={id}&gt;{label}&lt;/option&gt;
クエリパラメータが sort order の2つあり、それらをその...]]></description><link>https://zenn.dev/yumemi_inc/articles/ts-enum-like-const</link><guid isPermaLink="true">https://zenn.dev/yumemi_inc/articles/ts-enum-like-const</guid><pubDate>Mon, 12 Aug 2024 02:42:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zsghp4-x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2580%258C%25E9%2581%25B8%25E6%258A%259E%25E8%2582%25A2%25E3%2580%258D%25E3%2581%25AE%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592Enum%25E7%259A%2584%25E3%2581%25AA%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%25E2%2580%2595%25E2%2580%2595satisfies%25E3%2581%25A8SSoT%25E3%2582%2582%25E3%2581%2582%25E3%2582%258B%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Honey32%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYzg0MmQ4YTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Honey32</dc:creator></item><item><title><![CDATA[RTK Queryの活用: フックを使う場合と関数を使う場合の実装例]]></title><description><![CDATA[Redux ToolkitのRTK Queryには、フックを使う場合と関数をディスパッチする場合の2つのアプローチが存在する。
フックを使う場合: 状態管理が簡単で、コードがシンプルになり、コンポーネントで直接利用できる。
ディスパッチする場合: 高い柔軟性を持ち、コンポーネント外でも使用可能であり、複雑なロジックに対応しやすい。
なお、Redux Toolkitでの「スライス」は主に状態管理を担当する。一方、RTK Queryでの「スライス」はAPI呼び出しやキャッシング、ステータス管理を行う。混乱を避けるため、この記事ではRTK Queryの「スライス」を「APIエンドポイント」と呼...]]></description><link>https://zenn.dev/kkoisland/articles/e7dfe4dc8b8495</link><guid isPermaLink="true">https://zenn.dev/kkoisland/articles/e7dfe4dc8b8495</guid><pubDate>Mon, 12 Aug 2024 01:54:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f_PNdQqj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RTK%2520Query%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%253A%2520%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkoisland%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MzIwYmQ0NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkoisland</dc:creator></item><item><title><![CDATA[<progress>タグを用いたシークバーの書き方]]></title><description><![CDATA[
 TL;DR
備忘録。&lt;progress&gt;タグを用いて進捗を表現するのは楽

 Introduction
&lt;progress&gt; タグはタスクの進捗状況を表すためのHTMLタグです。&lt;progress&gt;: 進捗インジケーター要素
たとえば数ページに渡るフォームなどでの入力進捗を出したり、ファイルなどがアップロード中であることを表示したり、いろいろな進捗に関わる目的に利用できるタグだと思います。
そういった多様な目的のなかで例えば任意のポイントの進捗を得たい場合があるのではないかと思います。端的にはメディアのプレイバックの位置をシークしたりとか、一連のプ...]]></description><link>https://zenn.dev/kenji_wilkins/articles/eb4ac109215a7b</link><guid isPermaLink="true">https://zenn.dev/kenji_wilkins/articles/eb4ac109215a7b</guid><pubDate>Sun, 11 Aug 2024 15:10:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1wREWQ6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%253Cprogress%253E%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kenji%2520Wilkins%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l1WEZYTHBBT2pSdHNBbEFmNDQyNFU5RnJnMDNUeDJJTV9MbkFBWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kenji Wilkins</dc:creator></item><item><title><![CDATA[簡単なフォームをJavascriptで作成してみた]]></title><description><![CDATA[
 作成の経緯
会社で、フォームを書き換えるタスクを実装した際に、javascriptで書き換えができなかった。
（なんとか、タスクは終わったけれども…）
なので、自主学習的に、今回、セイト先生のYoutubeチャンネルのjavascript基礎を半日でハンズオンで学習した後に、自分なりにコードをタスクの実装を思い出しながら、実装しようと考えた。

 仕様

ボタンを押すとセレクトボックスの中身が変わる
ボタン、セレクトボックスのバナナを押すと2人目のフォームが出てくる


 フォーム
https://form-javascript-mu.vercel.app/

 所感
セイト先生のハ...]]></description><link>https://zenn.dev/monyyy/articles/6a70dd571bc66e</link><guid isPermaLink="true">https://zenn.dev/monyyy/articles/6a70dd571bc66e</guid><pubDate>Sun, 11 Aug 2024 13:51:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sdJiNqWR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592Javascript%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUxJMlItWWhrem0zQUVwMW5TeU1acUFrWlA2TWtvZjRwNUs5VGhkV2EzXzRVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mon</dc:creator></item><item><title><![CDATA[JavaScriptでthisはどんな時に使うのか]]></title><description><![CDATA[
 thisってなに？
以下のように説明されています。
this の値はどのように関数が呼ばれたかによって決定されます (実行時結合)。
これは実行時に代入によって設定することはできず、関数が呼び出されるたびに異なる可能性があります。
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/this

 関数が呼び出されるたびに変わるとは
例えば以下のように比較した場合aを別のオブジェクトに追加すると参照先のオブジェクトが変わります。
var a = function() {
  return th...]]></description><link>https://zenn.dev/roy7890/articles/87f1a5340c58c9</link><guid isPermaLink="true">https://zenn.dev/roy7890/articles/87f1a5340c58c9</guid><pubDate>Sun, 11 Aug 2024 08:53:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h0duqjFk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7this%25E3%2581%25AF%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25AA%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Roy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeERHNWw4VS1hUy1vT2ZYOEo4OWttaWFwNGdZMUpYVjNWQlJZQXY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Roy</dc:creator></item><item><title><![CDATA[[humanify] 圧縮されたjsをLLMでデコンパイルする]]></title><description><![CDATA[
 JSデコンパイルの技術

世の中には、JavaScriptで書かれたたくさんのマルウェアが存在します。
以前はChrome拡張機能として問題視されることが多かったこの問題ですが、最近はVSCodeやpolyfill.ioなど、より広範囲に渡って問題が顕在化しています。
今回は静的解析でのマルウェア解析について紹介します。
これらのプログラムは圧縮/難読化されていることが多く、そのままでは読むことができません。
読みやすくする工程のことをDeobfuscateと言います。

Deobfuscateをする方法についてHackTrickでは3つのツールが紹介されています。

 https:...]]></description><link>https://zenn.dev/sqer/articles/23f0b0f1094910</link><guid isPermaLink="true">https://zenn.dev/sqer/articles/23f0b0f1094910</guid><pubDate>Sun, 11 Aug 2024 07:12:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n_fCTBSQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bhumanify%255D%2520%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fjs%25E3%2582%2592LLM%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikae%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmZjczZjNlODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hikae</dc:creator></item><item><title><![CDATA[Redux Toolkit スライスの基本: 初期状態、リデューサー、extraReducers の使い方]]></title><description><![CDATA[スライスとは、Redux Toolkitが提供する機能の一つで、アプリケーションの状態管理を簡単に行うためのもの。スライスは、機能やドメインに関連する状態、リデューサー、対応するアクションを一つのまとまりとして管理し、特に比較的大規模なアプリケーションでよく使用される。
Redux Toolkit と RTK Query: 基本概要についてはこちらにまとめました。

 スライスの具体的な機能

 1. 初期状態の設定
スライス内で管理する状態の初期値を定義する。

 2. リデューサーの定義
状態を変更するための関数（リデューサー）をまとめて定義する。

 3. extraReducer...]]></description><link>https://zenn.dev/kkoisland/articles/8ba70e2cd8f7a8</link><guid isPermaLink="true">https://zenn.dev/kkoisland/articles/8ba70e2cd8f7a8</guid><pubDate>Sat, 10 Aug 2024 23:36:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X5jCoAyi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redux%2520Toolkit%2520%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%253A%2520%25E5%2588%259D%25E6%259C%259F%25E7%258A%25B6%25E6%2585%258B%25E3%2580%2581%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2580%2581extraReducers%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkoisland%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MzIwYmQ0NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkoisland</dc:creator></item><item><title><![CDATA[JavaScriptのオブジェクト、知っておくべき基本とトリック]]></title><description><![CDATA[
 はじめに
フロントエンド開発において、オブジェクトを扱うことは非常に多く、さまざまな使い方があります。一方で使い方が多いからこそ、十分に使いこなせていないと感じていました。そこで今回はオブジェクトに関する基本的な使い方や特性、そして注意点についてまとめてみました。

 オブジェクトとは
そもそもオブジェクトとはなんでしょう？
JavaScriptにおけるオブジェクトとは、プロパティ（キーと値のペア）の集合体です。プロパティの値には、number型やstring型といったプリミティブ型に加えて、関数や他のオブジェクトを含めることができます。
const macbook = {
  mo...]]></description><link>https://zenn.dev/atusi/articles/a466687d7257ae</link><guid isPermaLink="true">https://zenn.dev/atusi/articles/a466687d7257ae</guid><pubDate>Sat, 10 Aug 2024 09:25:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1gDd3b0p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2580%2581%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsushi%2520hatakeyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjYWE3ODNjN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Atsushi hatakeyama</dc:creator></item><item><title><![CDATA[「FlatConfig対応できた!」と自信を持ちたいあなたへ]]></title><description><![CDATA[!
この記事は、CYBOZU SUMMER BLOG FES '24 (Frontend Stage) DAY 10 の記事です。


 自信を持って「FlatConfig 対応完了した！」って言いたい
以前、自分が書いた記事では FlatConfig 自体についてや FlatConfig 移行という言葉の多層性、実際に移行するときに役立つ Tips などを紹介しました。
https://zenn.dev/cybozu_frontend/articles/about-eslint-flat-config
ただ、この記事では FlatConfig 移行における大事な最後のピースである「移行...]]></description><link>https://zenn.dev/cybozu_frontend/articles/introduce-eslint-config-compat</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/introduce-eslint-config-compat</guid><pubDate>Sat, 10 Aug 2024 06:43:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WfftMTS_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CFlatConfig%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2521%25E3%2580%258D%25E3%2581%25A8%25E8%2587%25AA%25E4%25BF%25A1%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A1%25E3%2581%259F%25E3%2581%2584%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Saji%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZGQ0NmY0YTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Saji</dc:creator></item><item><title><![CDATA[HTMLRewriterを使う]]></title><description><![CDATA[Next.jsのApp Routerを使ってサーバサイドでコードを実行させているとたまに「DOMを解析したい」という気持ちになることがある。従来のNode.js系のサーバならJSDOMを使えばいいのだが、エッジサイドコンピューティングで同じようなことをしようとすると通らない
なぜならJSDOMが利用しているパッケージにNode.jsのhttp/httpsのAPIが使われているからである。これはfsのAPIと同様に互換モードでもエッジサイドで動かないAPIである
終わった。と思ったら別の方法があった。HTMLRewriterなるパッケージである

 HTMLRewriterとは
Cloud...]]></description><link>https://zenn.dev/maretol/articles/ad576aff797513</link><guid isPermaLink="true">https://zenn.dev/maretol/articles/ad576aff797513</guid><pubDate>Sat, 10 Aug 2024 04:01:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YbZfun4e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:HTMLRewriter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maretol%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHd3ROUEQtTzQxSkszUmNIbmUtel9hb1hhQ3d2M2phWlBJVzlDPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maretol</dc:creator></item><item><title><![CDATA[Zustandで型推論をうまく使うには]]></title><description><![CDATA[
 はじめに
ZustandはTypeScriptサポートしてますが、あまり書き心地が良いとは言えません（主観）。
通常は次のような書き方をします。
import { create } from 'zustand'

interface CountState {
  count: number
  increase: (by: number) =&gt; void
}

const useCounterStore = create&lt;CountState&gt;(
  (set) =&gt; ({
    bears: 0,
    increase: (by) =&gt; set(...]]></description><link>https://zenn.dev/dai_shi/articles/e69c7fd231ed1b</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/e69c7fd231ed1b</guid><pubDate>Sat, 10 Aug 2024 01:02:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7tj_f4hL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zustand%25E3%2581%25A7%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%25E3%2582%2592%25E3%2581%2586%25E3%2581%25BE%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item></channel></rss>