<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2024-05-18T19:48:42+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1860784</id>
    <published>2024-05-18T19:48:42+09:00</published>
    <updated>2024-05-18T19:48:42+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuu_7_ns/items/84a77114a43acdcc8855"/>
    <url>https://qiita.com/yuu_7_ns/items/84a77114a43acdcc8855</url>
    <title>TypeScriptにおける反復可能なオブジェクト：`Map` と `Set`</title>
    <content type="html">はじめに
JavaScriptおよびTypeScriptでは、反復可能なオブジェクトを使ってデータの集合を効率的に管理できます。反復可能なオブジェクトには、MapとSetがあります。
Setオブジェ…</content>
    <author>
      <name>yuu_7_ns</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1860778</id>
    <published>2024-05-18T19:41:01+09:00</published>
    <updated>2024-05-18T19:41:01+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuu_7_ns/items/29a236adc88b66973d09"/>
    <url>https://qiita.com/yuu_7_ns/items/29a236adc88b66973d09</url>
    <title>JavaScript/TypeScriptの`for`構文について</title>
    <content type="html">はじめに
for構文は、特定の条件が満たされるまで繰り返しコードを実行するためのループ構造を提供します。ループ処理は、同じ処理を複数回行いたい場合に非常に便利です。
基本構文
forループの基本構文…</content>
    <author>
      <name>yuu_7_ns</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1860773</id>
    <published>2024-05-18T19:28:18+09:00</published>
    <updated>2024-05-18T19:28:18+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuu_7_ns/items/e2a7ff2f4e286b3bafcf"/>
    <url>https://qiita.com/yuu_7_ns/items/e2a7ff2f4e286b3bafcf</url>
    <title>TypeScriptのタプルについて</title>
    <content type="html">はじめに
TypeScriptでは、配列の要素の型と数を厳密に定義することができる「タプル」型をサポートしています。タプルを使用することで、特定の数と順序の要素を持つ配列を定義できます。これにより、…</content>
    <author>
      <name>yuu_7_ns</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1860771</id>
    <published>2024-05-18T19:19:30+09:00</published>
    <updated>2024-05-18T19:19:30+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuu_7_ns/items/c5c95f5ef3f41ec9e84e"/>
    <url>https://qiita.com/yuu_7_ns/items/c5c95f5ef3f41ec9e84e</url>
    <title>TypeScriptのリテラル型を使った型安全なコード</title>
    <content type="html">はじめに
リテラル型とは、特定の値を型として扱うことができる型のことです。JavaScriptの基本データ型（例えば、文字列や数値）をそのまま型として使用できるのがリテラル型です。リテラル型を使うこ…</content>
    <author>
      <name>yuu_7_ns</name>
    </author>
  </entry>
</feed>
