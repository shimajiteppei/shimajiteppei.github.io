<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2024-10-16T20:24:48+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1924165</id>
    <published>2024-10-16T20:24:48+09:00</published>
    <updated>2024-10-16T20:53:26+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hibohiboo/items/30aadc02d932e579e8c2"/>
    <url>https://qiita.com/hibohiboo/items/30aadc02d932e579e8c2</url>
    <title>GraphDB KuzuのWebAssemblyをブラウザ上で動かしneo4j-nvlで可視化してみたメモ</title>
    <content type="html">概要
グラフDBをブラウザ上で試してみた。
kuzu-shellに使われているkuzu-wasmを利用。
この時点のソース
kuzu-wasmを動かす
vite設定
wasmを動かすために、excl…</content>
    <author>
      <name>hibohiboo</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1923962</id>
    <published>2024-10-16T10:44:22+09:00</published>
    <updated>2024-10-16T10:44:22+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/7mpy/items/a8eade81b1b7d988cb6a"/>
    <url>https://qiita.com/7mpy/items/a8eade81b1b7d988cb6a</url>
    <title>JavaScriptでHTMLパース【DOMParser html】</title>
    <content type="html">await fetch('').then(r=&amp;gt;r.text()).then(html=&amp;gt;new DOMParser().parseFromString(html,'text/html'))

例
a…</content>
    <author>
      <name>7mpy</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1923917</id>
    <published>2024-10-16T08:14:13+09:00</published>
    <updated>2024-10-16T15:09:43+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kim_t0814/items/9785eef57fafc1df3869"/>
    <url>https://qiita.com/kim_t0814/items/9785eef57fafc1df3869</url>
    <title>【TypeScript】Interface と type どちらが良いの ? 違いは ?</title>
    <content type="html">はじめに
以前、初めてTypeScriptを実務で使用した際に、Interface(インターフェース)とtype(型エイリアス)
どちらを使うべきか迷うことがあったので、知見を今更ながらまとめます。

Because an interface more closely maps how JavaScript objects work by being open to extension, we recommend using an interface over a type alias when possible…</content>
    <author>
      <name>kim_t0814</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1923750</id>
    <published>2024-10-15T20:45:32+09:00</published>
    <updated>2024-10-16T18:40:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Kkoma/items/059aabf672e5196fa9d5"/>
    <url>https://qiita.com/Kkoma/items/059aabf672e5196fa9d5</url>
    <title>TypeScriptのジェネリクスについてまとめてみた</title>
    <content type="html">TypeScriptのジェネリクスってなに？
TypeScriptのジェネリクス（Generics）は、再利用可能なコードを作成するための機能で、特定の型に依存しない柔軟な関数やクラス、インターフェ…</content>
    <author>
      <name>Kkoma</name>
    </author>
  </entry>
</feed>
