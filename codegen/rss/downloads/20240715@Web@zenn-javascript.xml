<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 15 Jul 2024 12:01:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Nuxt 3・Nuxt 4 の useFetch() を完全に理解する（したい）]]></title><description><![CDATA[以前（まだ Nuxt 3 がベータリリースだった頃）に『Nuxt 3 の useFetch() と useAsyncData() の使い方』という記事を書きました。
その後、より多機能になり、またベストプラクティス的な使い方が分かってきたこともあり、改めて useFetch() についてまとめてみたいと思います。

 はじめに
ここ数年、一貫して Nuxt 3 を使用している僕ですが、主要なコンポーザブルである useFetch については当初の理解が違っていたものもありました。
少しずつ修正しながら、都度コードを書き換えてきたのですが、その過程で得られた知見を共有したいと思います。
な...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/nuxt-use-fetch-guide</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/nuxt-use-fetch-guide</guid><pubDate>Mon, 15 Jul 2024 08:16:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dMMsjJUn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt%25203%25E3%2583%25BBNuxt%25204%2520%25E3%2581%25AE%2520useFetch%2528%2529%2520%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:coedo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c4STBvUEtWYXpIUGdWdUFwVFNiaFdXUGVZd0l2Rkd3QlV0alAwaHc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>coedo</dc:creator></item><item><title><![CDATA[2024年7月 最新版 Eslint & prettier & Typescript セットアップ方法]]></title><description><![CDATA[
 背景
新しくプロジェクトを立ち上げるたびに、eslintのバージョンが上がっていたりして、毎回セットアップ方法が変わるので、毎回調べる人が多いと思います。今どきはめちゃくちゃ簡単になっているので、ここにおいておきます。

 内容
プロジェクト内のディレクトリで、次のコマンドを実行します。yarnを使っていても、このコマンドで大丈夫です。
npm init @eslint/config@latest
そこから、こんな感じの質問がされるので、それらを回答します
✔ How would you like to use ESLint? · problems
✔ What type of mo...]]></description><link>https://zenn.dev/szkyk/articles/31904c47a494a4</link><guid isPermaLink="true">https://zenn.dev/szkyk/articles/31904c47a494a4</guid><pubDate>Mon, 15 Jul 2024 07:22:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B1PFWIib--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%25E5%25B9%25B47%25E6%259C%2588%2520%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%2520Eslint%2520%2526%2520prettier%2520%2526%2520Typescript%2520%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:szkyk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTRfd2RMa2hRNjlsYl9SdkpNckNSQ3gxVE9OYlNqdU9mTl9DTENPWlFjY0M0c3BRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>szkyk</dc:creator></item><item><title><![CDATA[Zustand Slice PatternのついったーPollやってます]]></title><description><![CDATA[https://x.com/dai_shi/status/1812649338654617918
どれが一番好みですか？全てTypeScriptサポートしてます。

 Bare (Bear) Zustand
import { create, StateCreator } from "zustand";

interface CountSlice {
  count: number;
  incCount: () =&gt; void;
  resetCount: () =&gt; void;
}

interface TextSlice {
  text: string;
  updat...]]></description><link>https://zenn.dev/dai_shi/articles/af7d1dfe17a35e</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/af7d1dfe17a35e</guid><pubDate>Mon, 15 Jul 2024 01:16:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D1-qb5Ki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zustand%2520Slice%2520Pattern%25E3%2581%25AE%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25BCPoll%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[Redux Toolkit と RTK Query: 基本概要]]></title><description><![CDATA[Redux Toolkit と RTK Query は、Reduxでのデータ管理とAPI通信をより効率的かつシンプルにするツールで、開発者はReduxのボイラープレートや複雑性を気にすることなく、ビジネスロジックに集中できる。
データのローディング、成功、失敗の状態を簡単に扱えるほか、自動的なキャッシング、データの再利用、ポーリングなどの高度な機能もサポートしている。
JavaScriptフレームワークとの組み合わせが可能で、Reactだけでなく、AngularやVue.jsなど他のフレームワークとも相性が良い。

 1. configureStore（ストアの設定）
この機能により、ミ...]]></description><link>https://zenn.dev/kkoisland/articles/17b19d22d716a7</link><guid isPermaLink="true">https://zenn.dev/kkoisland/articles/17b19d22d716a7</guid><pubDate>Mon, 15 Jul 2024 00:01:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--drxiacIg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redux%2520Toolkit%2520%25E3%2581%25A8%2520RTK%2520Query%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkoisland%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MzIwYmQ0NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkoisland</dc:creator></item><item><title><![CDATA[改めてTypeScriptの型をまとめる]]></title><description><![CDATA[復習もかねて、TypeScriptの型をまとめていきます！！！

 プリミティブ型
TypeScriptには、JavaScriptのプリミティブ型に対応する以下の型があります。これらは最も基本的な型でよく使う型です。
プリミティブ型は全部で7つです。

string
number
boolean
undefined
null
symbol
bigint

!
TypeScriptは型を明示的に宣言しなくても、推論してくれます。
// つまり、この2文は同じ意味です。
const hoge: string = "hoge";
const hoge = "hoge";

ただし、わかりやすさ...]]></description><link>https://zenn.dev/chanpaya/articles/a8ec797daad90d</link><guid isPermaLink="true">https://zenn.dev/chanpaya/articles/a8ec797daad90d</guid><pubDate>Sun, 14 Jul 2024 21:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2tKwxvKH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2594%25B9%25E3%2582%2581%25E3%2581%25A6TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chanpaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmY1NGIxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chanpaya</dc:creator></item><item><title><![CDATA[【clusterスクリプト】パーツが動くクラフトアイテム]]></title><description><![CDATA[こんな感じで、パーツが動くクラフトアイテムです。
なおオリジナルのものを作るとき、クラフトアイテムは「メッシュが8種類まで」「マテリアルが2つまで」という制限があることにも注意しましょう。

!
同じメッシュがたくさんあるのは（合計128個まで）問題ありません。


 クラフトアイテムのパッケージ
カプセル
https://vins-jp.sakura.ne.jp/pack/capsule.unitypackage
ウサギ
https://vins-jp.sakura.ne.jp/pack/usagi.unitypackage
まずはclusterのテンプレートワールドをダウンロード・M...]]></description><link>https://zenn.dev/vins/articles/4f0e91c12e71a8</link><guid isPermaLink="true">https://zenn.dev/vins/articles/4f0e91c12e71a8</guid><pubDate>Sun, 14 Jul 2024 14:44:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mNw9pIU6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590cluster%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2580%2591%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2584%25E3%2581%258C%25E5%258B%2595%25E3%2581%258F%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:vins%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c0ZERlaWVTamtQcDFmTDYwS1FhTlpYMkpMeTJOOGtfeWRha1F6PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>vins</dc:creator></item><item><title><![CDATA[JavaScriptファイルを単体で簡単に動かす方法！]]></title><description><![CDATA[!
本記事の執筆者：Claude 3.5 Sonnetさん
本記事の編集者：Meg
間違いなどありましたら、コメントで教えて頂けると嬉しいです！

こんにちは、Megです！
今回は、JavaScriptファイルを単体で動かす方法についてご紹介します。
個人でJavaScriptの勉強をされている方や、手軽にjsファイルの動作確認をしたい方にとって、とても便利な方法です。
ちなみに、JavaScript・TypeScriptベースのReactはフロントエンドエンジニアには必須のスキルで、案件も豊富です。
この機会にJavaScript・TypeScriptへの理解を深めてみてはいかがでしょ...]]></description><link>https://zenn.dev/meg_zenn/articles/javascript-standalone-execution-vscode</link><guid isPermaLink="true">https://zenn.dev/meg_zenn/articles/javascript-standalone-execution-vscode</guid><pubDate>Sun, 14 Jul 2024 06:50:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iPCvvSki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%258D%2598%25E4%25BD%2593%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Meg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkODAyN2FhZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Meg</dc:creator></item><item><title><![CDATA[Reactの初学者がモーダルを実装する際に知っておくと使える情報]]></title><description><![CDATA[
 はじめに
先日、業務でReactを使ってモーダルを実装しました。今でこそコンポーネントの分け方や状態の持たせ方に悩む機会も減ってきましたが、私も初学者のころにモーダルを実装した際には色々と悩みました。今回は初学者の方がReactでモーダルを実装する際に役立ちそうな情報をまとめて見ました。

 基本的な構成

 以前の私の書き方
Reactを書き始めたころの私ならおそらく以下のような書き方をしていたと思います（PageとModalは本来は別ファイルに記載しています）。モーダルの開閉状態を呼び出し元で保持して、開閉の制御も呼び出し元で行なっている状態です。モーダルに限らずこの手の制御を呼...]]></description><link>https://zenn.dev/hrtr/articles/96bc7f171e7750</link><guid isPermaLink="true">https://zenn.dev/hrtr/articles/96bc7f171e7750</guid><pubDate>Sat, 13 Jul 2024 01:15:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ivYXzGbO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2581%258C%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E6%2583%2585%25E5%25A0%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HRTR-86%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MzMxZGQyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HRTR-86</dc:creator></item><item><title><![CDATA[React Routerの<a>タグ、NavLink、Linkの違いを徹底解説]]></title><description><![CDATA[Reactでウェブアプリケーションを構築する際、標準の&lt;a&gt;タグ、NavLink、およびLinkの違いを理解することは、ユーザーエクスペリエンスとアプリケーションパフォーマンスに大きな影響を与えます。この記事では、それぞれの違いを詳細に比較し、特徴や使用方法について解説します。

 比較表
以下の表は、&lt;a&gt;タグ、NavLink、およびLinkの主な違いをまとめたものです。



メトリック
&lt;a&gt; タグ
NavLink
Link




ページリロード時間
数百ミリ秒から数秒
数ミリ秒から数百ミリ秒
数ミリ秒から数百ミリ秒


リソースの再ダウンロー...]]></description><link>https://zenn.dev/atusi/articles/3e37d4d54736fa</link><guid isPermaLink="true">https://zenn.dev/atusi/articles/3e37d4d54736fa</guid><pubDate>Fri, 12 Jul 2024 15:11:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YN6EiEAx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%25E3%2581%25AE%253Ca%253E%25E3%2582%25BF%25E3%2582%25B0%25E3%2580%2581NavLink%25E3%2580%2581Link%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsushi%2520hatakeyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjYWE3ODNjN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Atsushi hatakeyama</dc:creator></item><item><title><![CDATA[史上最悪のコードを怖いもの見たさで見よう【javascript】]]></title><description><![CDATA[
 はじめに
こんにちは。
この世には、javascriptで書かれた史上最悪のコードがあります。
とりあえず、その史上最悪のコードを見てみましょう。
&lt;!-- todo: put this in a different file!!! --&gt;
&lt;script&gt;
function authenticateUser(username, password) {
    var accounts = apiService.sql(
        "SELECT * FROM users"
    );

    for (var i = 0; i &lt; accou...]]></description><link>https://zenn.dev/free_eerf/articles/f99022a38d24ab</link><guid isPermaLink="true">https://zenn.dev/free_eerf/articles/f99022a38d24ab</guid><pubDate>Fri, 12 Jul 2024 09:33:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E2GHs5cV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258F%25B2%25E4%25B8%258A%25E6%259C%2580%25E6%2582%25AA%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%2580%2596%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E8%25A6%258B%25E3%2581%259F%25E3%2581%2595%25E3%2581%25A7%25E8%25A6%258B%25E3%2582%2588%25E3%2581%2586%25E3%2580%2590javascript%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:free104%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OTZjMzI3ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>free104</dc:creator></item><item><title><![CDATA[addEventListenerで使用するイベントまとめ]]></title><description><![CDATA[
 ##n番煎じで既に上位互換のナレッジがあるとは思いますが健忘録として残します、まだclickとscrollぐらいしか使ってない

Mouse Events（マウスイベント）

click: 要素がクリックされたとき
dblclick: 要素がダブルクリックされたとき
mousedown: マウスボタンが押されたとき
mouseup: マウスボタンが離されたとき
mousemove: マウスが移動したとき
mouseenter: マウスが要素に入ったとき
mouseleave: マウスが要素から出たとき





Keyboard Events（キーボードイベント）

keydown:...]]></description><link>https://zenn.dev/sumomonomomo/articles/cc84a001039237</link><guid isPermaLink="true">https://zenn.dev/sumomonomomo/articles/cc84a001039237</guid><pubDate>Fri, 12 Jul 2024 05:37:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--URwEqQ-r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:addEventListener%25E3%2581%25A7%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumomo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEJtbUU0elNubzJyYVdmaDh2eXRwbG10eHhmSEdsRFlIQXZVcjg2MnQxUi14SWdBTGN6QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumomo</dc:creator></item><item><title><![CDATA[Solana上でNFTを作ってみて、ブロックチェーンのわからないことを整理していく]]></title><description><![CDATA[!
mediumからの移行記事です 🎳

ブロックチェーン何もわからないマンなので、とりあえず何かしら作ってみてちょっとずつ理解してみた記事です。

 用語を整理する

 Solana
イーサリアムと同じブロックチェーンの理解でいます。
https://solana.com/docs/intro/overview

 Metaplex
Solana上でNFTを発行するために必要なツールになります。
https://developers.metaplex.com/

 arweave
NFTを発行するのに使用した画像を保存するストレージになります。
https://www.arweave....]]></description><link>https://zenn.dev/yosano/articles/d6cea0765ae859</link><guid isPermaLink="true">https://zenn.dev/yosano/articles/d6cea0765ae859</guid><pubDate>Thu, 11 Jul 2024 19:00:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bw_zi2RZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Solana%25E4%25B8%258A%25E3%2581%25A7NFT%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2580%2581%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yo%2520sano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1ZWVjMzk3ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yo sano</dc:creator></item><item><title><![CDATA[console.log でデバッグするときの落とし穴とその対処法]]></title><description><![CDATA[JavaScript の console.log() は便利ですが、注意も必要です。
今回は、自分が最近遭遇したコードを元に、具体的な事例を紹介したいと思います。

 事例: エスケープ文字に気づかず === で比較
これは実際のコードを単純化したものです。このコードでは、二つの文字列が同じかどうかを比較しています。
if (str1 === str2) {
  console.log("同じ文字列です");
} else {
  console.log("異なる文字列です");
}
str1 と str2 は外部から渡された string 型の変数です（TypeScriptで開発してい...]]></description><link>https://zenn.dev/lef237/articles/1537bc8d22d0a5</link><guid isPermaLink="true">https://zenn.dev/lef237/articles/1537bc8d22d0a5</guid><pubDate>Thu, 11 Jul 2024 09:47:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VJWVxAcs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:console.log%2520%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E7%25A9%25B4%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LEF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YVJQMTBoM19YeklJemlRSE0wY1pjWUpVemc5cUpFaVd4S2JXdWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>LEF</dc:creator></item><item><title><![CDATA[同時実行数の上限を指定できる非同期処理の並列実行JSクラス]]></title><description><![CDATA[node-fetchなどでスクレイピング処理をしていると、並列実行したくなる場面が出てきます。
並列実行処理は Promise.all() や Promise.allSettled() を使えば簡単に実現できますが、同時実行数の上限を指定できません。仮に10,000個の処理をしたくなったときに上限制御しなければ落ちる可能性があります。負荷を下げる目的として、簡単に制御できるJavaScriptのクラスを書いたので掲載しておきます。

asyncPool.ts
export class AsyncPool {
  allPromises: (() =&gt; Promise&lt;any&...]]></description><link>https://zenn.dev/masa5714/articles/5b779ed129da99</link><guid isPermaLink="true">https://zenn.dev/masa5714/articles/5b779ed129da99</guid><pubDate>Thu, 11 Jul 2024 05:07:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UPLxQUus--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258C%25E6%2599%2582%25E5%25AE%259F%25E8%25A1%258C%25E6%2595%25B0%25E3%2581%25AE%25E4%25B8%258A%25E9%2599%2590%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258CJS%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masa5714%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMzBjZjA3NzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masa5714</dc:creator></item><item><title><![CDATA[税込み価格と税抜き価格から "それっぽい消費税率" を返してくれる関数]]></title><description><![CDATA[消費税率が混在している（酒類の税率とか軽減税率とか）とき、税込み価格と税抜き価格から8%なのか、10%なのかを判定してくれる便利な関数を置いておきます。
function calcTaxRate(basePrice: number, inTaxPrice: number) {
  const taxAmount = inTaxPrice - basePrice;
  const taxRate = (taxAmount / basePrice) * 100;

  // 小数点以下の誤差を考慮して、近い方の税率を返す
  if (Math.abs(taxRate - 8) &lt; Ma...]]></description><link>https://zenn.dev/masa5714/articles/c032829c1d6fb0</link><guid isPermaLink="true">https://zenn.dev/masa5714/articles/c032829c1d6fb0</guid><pubDate>Thu, 11 Jul 2024 04:51:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PUK0PYoe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A8%258E%25E8%25BE%25BC%25E3%2581%25BF%25E4%25BE%25A1%25E6%25A0%25BC%25E3%2581%25A8%25E7%25A8%258E%25E6%258A%259C%25E3%2581%258D%25E4%25BE%25A1%25E6%25A0%25BC%25E3%2581%258B%25E3%2582%2589%2520%2522%25E3%2581%259D%25E3%2582%258C%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E6%25B6%2588%25E8%25B2%25BB%25E7%25A8%258E%25E7%258E%2587%2522%2520%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masa5714%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMzBjZjA3NzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masa5714</dc:creator></item><item><title><![CDATA[React✖️Tailwind CSSで一緒に使いたいライブラリ4選]]></title><description><![CDATA[ReactのスタイリングライブラリとしてTailwind CSSを使われる方は、そこそこいるのではないでしょうか？
そんな方にオススメのライブラリがあるので、紹介します。

 ✨ prettier-plugin-tailwindcss
https://github.com/tailwindlabs/prettier-plugin-tailwindcss
tailwindの欠点として、クラス名が長くなりやすいということがあります。この時、tailwindのユーティリティクラスの並びが不規則だとさらに読みにくくなります。クラス名を自動でソートしてくれるprettierのプラグインを公式が配布...]]></description><link>https://zenn.dev/noknmgc/articles/tailwind-friendly-library</link><guid isPermaLink="true">https://zenn.dev/noknmgc/articles/tailwind-friendly-library</guid><pubDate>Thu, 11 Jul 2024 03:39:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X058xHcV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Tailwind%2520CSS%25E3%2581%25A7%25E4%25B8%2580%25E7%25B7%2592%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA4%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmZGMwNGUwYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ノック</dc:creator></item><item><title><![CDATA[その try-catch、意味がありますか？NestJSにおける例外処理の戦略 | TrustHub テックブログ]]></title><description><![CDATA[弊社（トラストハブ）では、バックエンドのプログラミング言語として TypeScript、ウェブフレームワークとしてNestJSを採用しています。本記事では、NestJSの特長を生かした、実際に弊社で採用されている例外処理の戦略について述べます。

 その try-catch、意味がありますか？
TypeScriptのコードにおいて、try-catch が使われている場面をたびたび見かけます。
try {
  fn();
} catch (e) {
  // ...
}
try-catch で囲う意図としては以下のようなものがあると思います。

例外をハンドリングすることで処理を継続したい...]]></description><link>https://zenn.dev/trusthub/articles/17ce391354b67f</link><guid isPermaLink="true">https://zenn.dev/trusthub/articles/17ce391354b67f</guid><pubDate>Thu, 11 Jul 2024 02:43:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zOA7sJH0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2581%25AE%2520try-catch%25E3%2580%2581%25E6%2584%258F%25E5%2591%25B3%25E3%2581%258C%25E3%2581%2582%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259FNestJS%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E6%2588%25A6%25E7%2595%25A5%2520%257C%2520TrustHub%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kunihiko%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1NzlhZmI5YTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TrustHub%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMWFiYjYwOWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kunihiko Sato</dc:creator></item><item><title><![CDATA[【JavaScript】reduce関数｜ある場合とない場合の違いを比較した。]]></title><description><![CDATA[これまでJavaScriptのreduce関数がよくわかりませんでした。
そこでreduce関数を使った場合と使わない場合をまとめてみると少しだけ理解できた気がしたのでメモです！

 reduce関数とは
reduce関数は、「配列」に対して処理を行う関数。

配列のそれぞれの要素に対して、ユーザーが提供した「縮小」コールバック関数を呼び出します。その際、直前の要素の計算結果の返値を渡します。配列のすべての要素に対して「縮小」コールバック関数を実行した最終結果は、単一の値となります。
コールバックの初回実行時には「直前の計算の返値」は存在しません。 初期値が与えらえた場合は、代わりに使用...]]></description><link>https://zenn.dev/buenotheebiten/articles/ea3b7c66f396d6</link><guid isPermaLink="true">https://zenn.dev/buenotheebiten/articles/ea3b7c66f396d6</guid><pubDate>Thu, 11 Jul 2024 02:12:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aoIWZnHv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591reduce%25E9%2596%25A2%25E6%2595%25B0%25EF%25BD%259C%25E3%2581%2582%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えびてん</dc:creator></item><item><title><![CDATA[ESLintとPrettierの競合解決: 実践的トラブルシューティング]]></title><description><![CDATA[
 はじめに
この記事では、既存のJavaScriptプロジェクトでESLintとPrettierを併用する際に遭遇した問題と、その解決までの道のりを共有します。この経験を通じて、単に「動くからOK」ではなく、なぜそう動作するのかを理解することの重要性についてを共有します。
Node.jsとnpm、基本的なターミナルコマンドを叩く等の知識が必須になります。また、Pettierをすでに導入しているか、MarkuplintやStylelintを導入したことがある方にとっては読みやすい内容になるかと思います。
とくに私は、linterの導入には、意外と言語が辿った歴史や背景を把握していると状況...]]></description><link>https://zenn.dev/kei615ykhm/articles/ee4b484b651b63</link><guid isPermaLink="true">https://zenn.dev/kei615ykhm/articles/ee4b484b651b63</guid><pubDate>Wed, 10 Jul 2024 17:11:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GF3G4Xaa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%25E3%2581%25A8Prettier%25E3%2581%25AE%25E7%25AB%25B6%25E5%2590%2588%25E8%25A7%25A3%25E6%25B1%25BA%253A%2520%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjNmMzYzFhMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kei</dc:creator></item><item><title><![CDATA[Biome を使うときに最低限入れておきたい設定集]]></title><description><![CDATA[
 はじめに
Biome は JavaScript や JSON 向けの強力なコード品質管理ツールですが、数多くのルールの中から適切なものを選ぶのは難しい場合があります。この記事では、私が Biome を使う際に最低限入れておくルールを紹介し、それぞれの具体的な使用例を解説します。
https://biomejs.dev/

 基本設定
公式ドキュメント「Getting Started」に記載されている基本設定は以下です
{
  "$schema": "https://biomejs.dev/schemas/1.8.3/schema.json",
  "organizeImports":...]]></description><link>https://zenn.dev/yoshikouki/articles/biome-essential-rules-for-better-code</link><guid isPermaLink="true">https://zenn.dev/yoshikouki/articles/biome-essential-rules-for-better-code</guid><pubDate>Wed, 10 Jul 2024 14:17:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SNcHLd4X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%25E8%25A8%25AD%25E5%25AE%259A%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yoshikouki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5YzZhMTdlMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoshikouki</dc:creator></item></channel></rss>