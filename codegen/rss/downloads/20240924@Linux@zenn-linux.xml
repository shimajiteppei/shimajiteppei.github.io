<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 24 Sep 2024 12:03:33 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[『Linuxシステムプログラミング』を読んだ]]></title><description><![CDATA[シルバーウィークの3連休を使って、『Linuxシステムプログラミング』を読みました。当初は、『Linuxプログラミングインタフェース』(1600ページ以上ある) の読破にでも挑戦してみようかと考えていました。しかし、まずは『Linuxシステムプログラミング』(400ページ程度) から入ったほうが良いという投稿を見かけたので、それに従いました。

結論として、私にとって『Linuxシステムプログラミング』を読んだことは正解でした。そして、私以外のソフトウェアエンジニアに対しても、本書を読むことを自信を持っておすすめできます。
なお、正確には英語版の『Linux System Program...]]></description><link>https://zenn.dev/kaseken/articles/0302451f8fe410</link><guid isPermaLink="true">https://zenn.dev/kaseken/articles/0302451f8fe410</guid><pubDate>Mon, 23 Sep 2024 08:51:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r9S-ekSh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258ELinux%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kent%2520Kaseda%2520%2528kaseken%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MmUyNTgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kent Kaseda (kaseken)</dc:creator></item><item><title><![CDATA[Linux/Mac CPUのコア数・スレッド数を調べるコマンド]]></title><description><![CDATA[make の並列オプション指定など、コマンドを用いてCPUのコア数（物理コア数）、スレッド数（論理コア数）を取得したい場合があります。
Linux/Mac でコマンドが違い、いつもわからなくなるのでまとめておきます。

 検証環境
Linux: AMD Ryzen 5 2600 Six-Core Processor
Mac: Apple M1

 コア数（物理コア数）を出力する

 /proc/cpuinfo を使う (Linux)
/proc/cpuinfo の出力を grep します。
$ grep core.id /proc/cpuinfo | sort -u | wc -l
6
...]]></description><link>https://zenn.dev/shuh/articles/cpu-cores-threads</link><guid isPermaLink="true">https://zenn.dev/shuh/articles/cpu-cores-threads</guid><pubDate>Sun, 22 Sep 2024 20:10:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_po6M4T1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%252FMac%2520CPU%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODg1Y2EwN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusch</dc:creator></item><item><title><![CDATA[eBPFのRootlessコンテナでの応用の可能性について調べてみた]]></title><description><![CDATA[先日参加した第57回 情報科学若手の会の懇親会の席でRootlessコンテナにおけるeBPFの活用の可能性に関して話題が上がりました. そのときにはあまりいい答えが出せず, そこで話題は終わってしまったのですが, 会が終わった後も個人的に気になるところがあったので調べて情報を整理しました.

 結論
いきなり結論を言うとRootlessコンテナの定義を「Runtimeも含め, 作成に一切の特権を必要としないコンテナ」だとするとコンテナ内でeBPFを使うことはまずできません. eBPFのProgramなりMapなりを作るのに特権が必要だからです. ただ, それだけでは面白くないので, この...]]></description><link>https://zenn.dev/yutarohayakawa/articles/d8dc9992d9604e</link><guid isPermaLink="true">https://zenn.dev/yutarohayakawa/articles/d8dc9992d9604e</guid><pubDate>Sun, 22 Sep 2024 15:57:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Kea9W7y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:eBPF%25E3%2581%25AERootless%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E3%2581%25AE%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YutaroHayakawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmMGMyZjI1NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YutaroHayakawa</dc:creator></item><item><title><![CDATA[[Linux] 基本コマンド操作(CLI)]]></title><description><![CDATA[
 はじめに
この記事では、linuxのcli をまとめております。

 事前準備[Linux(ubuntu)環境の構築]

 1. dockerイメージをpullする
dockerコマンドを使ってLinux(ubuntu)環境の用意します。
docker pull ubuntu
実行結果を確認する$ docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
Digest: sha256:77906da86b60585ce12215807090eb327e7386c8fafb54023...]]></description><link>https://zenn.dev/aew2sbee/articles/linux-command-line-interface</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/linux-command-line-interface</guid><pubDate>Sun, 22 Sep 2024 04:23:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6n3LScjL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLinux%255D%2520%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E6%2593%258D%25E4%25BD%259C%2528CLI%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[英語設定のDebian 12サーバーを日本語設定にする]]></title><description><![CDATA[
 要約
コンテナやVM、または海外でサーバーを借りるなど、様々な理由で英語環境の
Debian GNU/Linux 12(Bookworm)を自分好みの設定にしたいことがあります。
その手順をここに記します。

 はじめに
自分は、コンテナやVMを扱うのに、incus[1]というソフトウェアを使っています。
そこで新規にコンテナを使って自分好みの設定にするべく作業した記録を残して
将来の自分のために書き残しておきます。

 この文章はだれ向けか
Debian GNU/Linuxをインストールされた環境を自分好みにしたい人向け

 この文書の読み方
必要な部分だけ、拾い読みしてokなはず...]]></description><link>https://zenn.dev/yabuki/articles/2024-09-22-change_en2jp_debianbookworm</link><guid isPermaLink="true">https://zenn.dev/yabuki/articles/2024-09-22-change_en2jp_debianbookworm</guid><pubDate>Sat, 21 Sep 2024 18:30:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c-T5j5Ti--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%258B%25B1%25E8%25AA%259E%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AEDebian%252012%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YABUKI%2520Yukiharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huRmQ1MnFmTEF6bUNNYVREYVhrTEZsZ0l0d1FrNVlrczJvcjBEPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YABUKI Yukiharu</dc:creator></item><item><title><![CDATA[cronでエラー？ いいえ、ただのログです]]></title><description><![CDATA[以前に書いたこちらの記事
https://zenn.dev/msyxxxt/articles/5afe182cb7728d
上の記事を要約すると「Linux環境に溜まる監視メッセージを、Teamsに送信するシェルを作成した」
このシェルをcronで1分間に1回実行しています。
実行ログ(/var/log/cron)を見てみると、、
Sep 18 17:46:01 server01 CROND[1528583]: (root) CMD (/mnt/efs/aaa/bbb/message_to_teams.sh)
Sep 18 17:46:06 server01 CROND[1528580]...]]></description><link>https://zenn.dev/msyxxxt/articles/691d5cafce44d3</link><guid isPermaLink="true">https://zenn.dev/msyxxxt/articles/691d5cafce44d3</guid><pubDate>Sat, 21 Sep 2024 11:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Tnji9x3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cron%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%259F%2520%25E3%2581%2584%25E3%2581%2584%25E3%2581%2588%25E3%2580%2581%25E3%2581%259F%25E3%2581%25A0%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25A7%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHdnZ0Q4WmpxVDVJTDFaSS1VSnBmbWlRX0pYd1QzNEQ4aFFFbUVFZVJaOVU4WUxnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まさや</dc:creator></item><item><title><![CDATA[ARM版Mac上のDocker環境でのARM64 Linuxカーネルビルドとセットアップガイド]]></title><description><![CDATA[
 【ARM版Mac + Docker】ARM64向けLinuxカーネルのビルドとQEMUでの実行手順
こんにちは。この記事では、ARM版Mac（Apple Silicon）上のDocker環境でARM64向けのLinuxカーネルをビルドし、QEMU上で実行する手順を、Linuxのセットアップ経験が少ないエンジニアの方々向けに詳しく解説します。カーネルのビルド手順と、QEMUで実行するための手順を明確に分けて説明し、各ステップの目的や背景も含めて解説します。


 目次

はじめに
Dockerコンテナの起動

カーネルビルドに必要な手順

3.1 必要なパッケージのインストール

3....]]></description><link>https://zenn.dev/zimagen/articles/93a301a6135ace</link><guid isPermaLink="true">https://zenn.dev/zimagen/articles/93a301a6135ace</guid><pubDate>Fri, 20 Sep 2024 00:57:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hZIadA85--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ARM%25E7%2589%2588Mac%25E4%25B8%258A%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2581%25AEARM64%2520Linux%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A8%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zimagen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwZWNlMmU5NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zimagen</dc:creator></item><item><title><![CDATA[AMD-Xilinx用の公認 Ubuntu でPLに bitstream をダウンロードする方法]]></title><description><![CDATA[
 はじめに
KV260などで Certified Ubuntu on AMD Devices の Ubuntu 22.02 LTS を利用していますが、この環境において自分で Vivado で作った bitstream をダウンロードする方法です。
そもそも Ubuntu 22.04 起動時にファン制御に繋がる回路が焼かれているようで起動時にファンが静かになって驚いた半面、その回路を取り除かないと自分の回路がダウンロードできなくなったのがきっかけです。
なお、どうやるのが一番行儀のよい方法なのかはよくわかっておりません。

 起動時のデフォルトの PLイメージをアンロードする方法
Ub...]]></description><link>https://zenn.dev/ryuz88/articles/linux_fpga_download</link><guid isPermaLink="true">https://zenn.dev/ryuz88/articles/linux_fpga_download</guid><pubDate>Thu, 19 Sep 2024 11:11:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iPqyWJl1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AMD-Xilinx%25E7%2594%25A8%25E3%2581%25AE%25E5%2585%25AC%25E8%25AA%258D%2520Ubuntu%2520%25E3%2581%25A7PL%25E3%2581%25AB%2520bitstream%2520%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryuz88%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4ODM0YjVlMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryuz88</dc:creator></item><item><title><![CDATA[Server-Side SwiftでSwiftLintのpluginとSwift buildを両立する方法]]></title><description><![CDATA[
 概要
SwiftのLinterやFormatterといえばSwiftLintが有名ですが、残念ながらこのライブラリはLinuxに対応していません。正確に言うと、Linux上でLintを行うことはできますが、plugin付きでのLinux上でのビルドはできません。
この記事では、SwiftLintをpluginとして使用し、GitHub ActionsでCIを回しつつ、Linux向けのビルド時にはSwiftLintを除外する方法を紹介します。

 結論

Package.swift
// swift-tools-version:5.10
+import Foundation
impor...]]></description><link>https://zenn.dev/nextbeat/articles/70b9a6b85a1ca3</link><guid isPermaLink="true">https://zenn.dev/nextbeat/articles/70b9a6b85a1ca3</guid><pubDate>Wed, 18 Sep 2024 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QaQGGnRW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Server-Side%2520Swift%25E3%2581%25A7SwiftLint%25E3%2581%25AEplugin%25E3%2581%25A8Swift%2520build%25E3%2582%2592%25E4%25B8%25A1%25E7%25AB%258B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tanaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MzM5NTFkZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:nextbeat%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNllVR2V5d3J5ZXRjeTJWNG5BRGttSThNYTFvcUNmTXdpNjlBQzM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tanaka</dc:creator></item><item><title><![CDATA[Linux ディストリビューション]]></title><description><![CDATA[
 はじめに
このページでは、Dockerイメージとしてよく使われるLinuxディストリビューションについて記述します。

 Linux ディストリビューションとは
Linuxディストリビューション（ディストロ）は、Linuxカーネルをベースにして、追加のソフトウェアやツールを組み合わせて構成されたオペレーティングシステムです。Linuxディストリビューションには、用途やユーザーのニーズに合わせて異なる構成が提供されています。以下では、Linuxディストリビューションの基本的な要素について解説します。

 1. Linuxカーネル
Linuxカーネルは、Linuxオペレーティングシステム...]]></description><link>https://zenn.dev/skrikzts/articles/9cb502a06f73e2</link><guid isPermaLink="true">https://zenn.dev/skrikzts/articles/9cb502a06f73e2</guid><pubDate>Tue, 17 Sep 2024 05:59:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DMKHfaEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%2520%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skrikzts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2OTdkMjhmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skrikzts</dc:creator></item><item><title><![CDATA[Ubuntu 24.04サーバー構築入門]]></title><description><![CDATA[私がUbuntu 24.04でサーバーを構築した時の手順を解説したものです。似たことに取り組む方の参考になればと思って書きました。]]></description><link>https://zenn.dev/uchidaryo/books/ubuntu-2404-server-book</link><guid isPermaLink="true">https://zenn.dev/uchidaryo/books/ubuntu-2404-server-book</guid><pubDate>Tue, 17 Sep 2024 00:45:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--szLe-i_i--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mNWQ4NDZlMDMxLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>UR</dc:creator></item><item><title><![CDATA[rsyslogを使って特定の文字列を含むログを特定のログファイルに出力する]]></title><description><![CDATA[
 はじめに
この記事はrsyslogのconfigについて理解を深めることを目的とした備忘録です。
タイトル通りのことを実現したいのであれば以下のような記述にすればOKです。今回はこの記述の意味を理解していこうと思います。
:msg, contains, "hogehoge" -/var/log/hogehoge.log
&amp; stop
大雑把に表現すると、任意のアプリケーションが吐いたログにhogehogeという文字列が含まれていた場合に、hogehoge.logに書き込むための記載です。
iptablesのログをDROP, ACCEPT単位で出し分けたりする場合などに使うかな...]]></description><link>https://zenn.dev/nian/articles/11601dde44e92e</link><guid isPermaLink="true">https://zenn.dev/nian/articles/11601dde44e92e</guid><pubDate>Mon, 16 Sep 2024 14:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JShp7Gt2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rsyslog%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2580%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oniku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNzQzMWFlNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oniku</dc:creator></item><item><title><![CDATA[[AWS/Linux]EBSボリュームを追加でEC2インスタンスへアタッチ,マウントする]]></title><description><![CDATA[

 目的

EC２インスタンスに追加でEBSボリュームをアタッチし、EC2の中でマウントする事でOSにもデバイス(EBSボリューム)を認識させる。
 


 前提の環境

OS:Amazon Linux2

ストレージ:EBSボリューム

ファイルシステム:ext4,xfs

ブロックデバイス:/dev/xvdh,/dev/xvdf1

EC2インスタンスは作成済みでSSHやセッションマネージャーでログインが可能である状態。
ファイルシステムでext4,xfsの2種類を試したかったため、アタッチするEBSボリュームを2つ作成しています。
 


 EBSボリュームのアタッチ

 Ter...]]></description><link>https://zenn.dev/takehiro1111/articles/ebs_additional</link><guid isPermaLink="true">https://zenn.dev/takehiro1111/articles/ebs_additional</guid><pubDate>Mon, 16 Sep 2024 13:05:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qRRo4AkG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAWS%252FLinux%255DEBS%25E3%2583%259C%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%25A7EC2%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25B8%25E3%2582%25A2%25E3%2582%25BF%25E3%2583%2583%25E3%2583%2581%252C%25E3%2583%259E%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NDQ2ZjMwNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[[Terraform/AWS]direnvでAWS IAM IdentityCenterの認証情報を取得する方法]]></title><description><![CDATA[

 記事を書いた経緯

業務中、ふと手が空いたタイミングでREADMEを確認した際に、direnvに関する記述を見つけたためです。
それと同時にREADMEは隅々まで読んでおくべきだなと改めて感じた瞬間でした。
 


 本記事を読み終わった時のゴール

direnvを使用してAWSの認証情報(access_key,secret_access_key,session_token)を取得し、
各modulleでterraformプロジェクトを実行できる事。
 


 前提の環境

インストール方法やシェルの種類が全体的にMacOS向けの説明になっています。
AWS IAM Identit...]]></description><link>https://zenn.dev/takehiro1111/articles/direnv_20240203</link><guid isPermaLink="true">https://zenn.dev/takehiro1111/articles/direnv_20240203</guid><pubDate>Mon, 16 Sep 2024 13:05:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--heyQdLeL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTerraform%252FAWS%255Ddirenv%25E3%2581%25A7AWS%2520IAM%2520IdentityCenter%25E3%2581%25AE%25E8%25AA%258D%25E8%25A8%25BC%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NDQ2ZjMwNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[[AWS/Linux]EBSボリュームのリサイズ方法]]></title><description><![CDATA[

 記事を書いた経緯

エンジニアになって初案件がオンプレからAWSへの移行でその際に対応したのですが、手順をほぼ忘れたなと思いブログに残したいと思ったためです。
 


 目的

EC2インスタンスにアタッチしているEBSボリュームのサイズ変更をOS側に適用したい。
 


 前提の環境

OS:Amazon Linux2
ストレージ:EBSボリューム
ファイルシステム:xfs
ブロックデバイス:/dev/xvda1
サイズ:20GB→30GBへの変更
EC2インスタンスは作成済みでSSHやセッションマネージャーでログインが可能である状態。
 


 AWS Management C...]]></description><link>https://zenn.dev/takehiro1111/articles/ebs-resize_20240204</link><guid isPermaLink="true">https://zenn.dev/takehiro1111/articles/ebs-resize_20240204</guid><pubDate>Mon, 16 Sep 2024 13:05:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--06RAA7xv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAWS%252FLinux%255DEBS%25E3%2583%259C%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NDQ2ZjMwNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たけ</dc:creator></item><item><title><![CDATA[Windows PC上でDocker Desktopを利用してLinuxの開発環境を構築するまでの仕組み]]></title><description><![CDATA[Windows PC上でDocker Desktopを利用してLinuxの開発環境を構築する場合、ホスト型仮想化（仮想マシン）とコンテナ型仮想化（コンテナ）の両方が組み合わさって動作します。それぞれの役割と技術的背景を説明します。

 1. Docker Desktopの仕組み
Docker Desktopは、Windows上でコンテナを利用するためのツールですが、WindowsとLinuxでは動作するOSカーネルが異なります。DockerコンテナはLinuxカーネルの機能に依存しているため、Windows上でそのまま動作させることはできません。このため、Docker Desktopは内...]]></description><link>https://zenn.dev/skrikzts/articles/55f7744ee82aa9</link><guid isPermaLink="true">https://zenn.dev/skrikzts/articles/55f7744ee82aa9</guid><pubDate>Mon, 16 Sep 2024 09:30:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m15ySu00--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520PC%25E4%25B8%258A%25E3%2581%25A7Docker%2520Desktop%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Linux%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skrikzts%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2OTdkMjhmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skrikzts</dc:creator></item><item><title><![CDATA[QEMU で x86_64 Linux 環境を構築する]]></title><description><![CDATA[
 TL;DR
# QEMU のインストール
brew install qemu

# ディスクイメージの作成
qemu-img create -f qcow2 ubuntu-disk.img 32G

# Ubuntu Server のインストール
wget https://ubuntu.com/download/server/thank-you?version=24.04.1&amp;architecture=amd64&amp;lts=true
qemu-system-x86_64 -accel tcg -boot menu=on -cdrom ubuntu-24.04-live-...]]></description><link>https://zenn.dev/sankantsu/articles/e213afb3eb76c7</link><guid isPermaLink="true">https://zenn.dev/sankantsu/articles/e213afb3eb76c7</guid><pubDate>Mon, 16 Sep 2024 04:06:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V4R173dd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:QEMU%2520%25E3%2581%25A7%2520x86_64%2520Linux%2520%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sankantsu</dc:creator></item><item><title><![CDATA[【自分用】過去使用したリンクまとめ]]></title><description><![CDATA[申し訳ないのですが、本記事は自分のメモのために使用しています。
業務や勉強の中で調べた物事やリンクがどこかに行きがちなので、
次回以降調べる際に効率的に調べたり、
前回どんなことを学んだか忘れないようにしたりするためにまとめていきます。
随時更新予定です。

 AWS

 Azure

 Windows

 ADサーバ
ドメインユーザー追加後のリモートのリモートデスクトップ許可設定

 その他
SSH接続する際にパーミッションエラーが発生した場合の秘密鍵の権限変更方法

 Linux
]]></description><link>https://zenn.dev/gapteeth/articles/4bbed0584e2120</link><guid isPermaLink="true">https://zenn.dev/gapteeth/articles/4bbed0584e2120</guid><pubDate>Mon, 16 Sep 2024 00:52:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_pRZl-Bi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2580%2591%25E9%2581%258E%25E5%258E%25BB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2589%258D%25E6%25AD%25AF%25E3%2581%2599%25E3%2581%258D%25E3%2581%25A3%25E6%25AD%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjZTI5ODhkNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>前歯すきっ歯</dc:creator></item><item><title><![CDATA[📝 Redmine 環境構築手順]]></title><description><![CDATA[
 はじめに

 この記事の対象
redmine の環境構築方法が知りたい方
redmine のバージョンアップ方法が知りたい方

 ここでやること
ローカルサーバーにSSH経由でredmine環境構築
構築したredmineのバージョンアップ

 環境情報
Ubuntu Server 24.04

 作業開始

 1. パッケージのインストール
ubuntu のパッケージリポジトリから必要なものをインストールしましょう
$ sudo apt update
$ sudo apt install -y build-essential libssl-dev libreadline-dev z...]]></description><link>https://zenn.dev/kotetsu_muscle/articles/ad0aefe1cda8e3</link><guid isPermaLink="true">https://zenn.dev/kotetsu_muscle/articles/ad0aefe1cda8e3</guid><pubDate>Mon, 16 Sep 2024 00:24:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mog8HRRV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Redmine%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tora_muscle%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4ODQwNDM2YjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tora_muscle</dc:creator></item><item><title><![CDATA[今更マインクラフト]]></title><description><![CDATA[世界中で3億本以上売れた大人気ゲーム『Minecraft』は、2009年にパソコン向けに公開され、その後も定期的なコンテンツ追加やアップデートによって進化し続けています。素朴なグラフィックとシンプルな操作性、無限の自由度で、多くの世代に親しまれているこのゲーム。本記事では、Minecraftの魅力や楽しみ方、そしてサーバーの運用や拡張について、初心者からベテランまで役立つ情報を解説します。]]></description><link>https://zenn.dev/mesgory/books/3ced52c710021e</link><guid isPermaLink="true">https://zenn.dev/mesgory/books/3ced52c710021e</guid><pubDate>Mon, 09 Sep 2024 01:00:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M8P0JXWG--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kNDc2ZmQ3OWM3LmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>趣味は再インストール🍥</dc:creator></item></channel></rss>