<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 30 Sep 2024 12:04:20 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[amdgpu がフリーズしたときのリモートシャットダウン]]></title><description><![CDATA[
 tl;dr


amdgpuなどの特定のドライバがフリーズしてシャットダウンが終わらない

但し、ssh等でアクセスができる状況

シャットダウン処理をする前段階で実行する必要がある




以下のとおり動作するバッチを書いて、実行可能な状態で保存する


/proc/sys/kernel/sysrqに1を書きこむ

/proc/sysrq-triggerにoを書きこむ




 概要
本記事では、amdgpuがフリーズ(熱暴走, 電圧降下)したとき、マシンの強制シャットダウン方法について解説します。
以下は弊環境(openSUSE, Radeon Vega56)でのフリーズ時のログ...]]></description><link>https://zenn.dev/rlysleepynick/articles/4857847f39fc77</link><guid isPermaLink="true">https://zenn.dev/rlysleepynick/articles/4857847f39fc77</guid><pubDate>Mon, 30 Sep 2024 11:25:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wbGXbu_U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:amdgpu%2520%25E3%2581%258C%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nick%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2doakozcWFkLVBhenpERVJBSmt1MVdhZy1id2dxVDZLeGthc1hQMmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nick</dc:creator></item><item><title><![CDATA[特定のディレクトリ配下の特定のファイルを一括削除する方法]]></title><description><![CDATA[特定のディレクトリ配下の特定のファイル名のファイルを一括削除する方法をご紹介します。

 特定のディレクトリ配下の特定のファイル名のファイルを一括削除する
結論から言うと、以下のコマンドで実現できます。
find . -name "sample.ts" -type f -delete


find

ファイルシステム内のファイルやディレクトリを検索するためのコマンド



.

検索を開始するディレクトリを指定
ここでは現在のディレクトリを指定している



-name "sample.ts"

特定のファイル名を指定



-type f

ファイルの種類を指定

f は通常のファイル...]]></description><link>https://zenn.dev/newbee1958/articles/27214644dc2a2c</link><guid isPermaLink="true">https://zenn.dev/newbee1958/articles/27214644dc2a2c</guid><pubDate>Mon, 30 Sep 2024 10:45:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jTQUL9gn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E9%2585%258D%25E4%25B8%258B%25E3%2581%25AE%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E5%2589%258A%25E9%2599%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Red%2520Bird%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODVhNDg4NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Red Bird</dc:creator></item><item><title><![CDATA[AWSエンジニアに必要な知識]]></title><description><![CDATA[
 はじめに
私は2024年1月からAWS設計構築のプロジェクトに入り、現在設計を進めている真っ只中なのですが、プロジェクトにアサインされてからの気づきについて書き留めてきたいと思いましたので本記事を執筆いたします。
まず、結論ファーストでお話させていただきますが、タイトルの「AWSエンジニアにとって必要な知識」についてはIT全般の知識を7割程度把握 しておくのが自分的ベストプラクティスかと思います。
ある知識に特化しているよりも、全体的に網羅されている方がことAWSにとっては必要な要素ではないかと考えています。
なぜなら、設計において任されるタスクは自分の得意としていない分野においても...]]></description><link>https://zenn.dev/agent_grow/articles/2b317b09826fb6</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/2b317b09826fb6</guid><pubDate>Sun, 29 Sep 2024 23:30:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VOOizbBd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AB%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiZjA4ZmYwODEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カイリーー</dc:creator></item><item><title><![CDATA[ソースコードを見るより動かしたほうが手っ取り早いとき]]></title><description><![CDATA[本記事はわたしの過去のしょうもない失敗談を題材に、ソフトウェアの挙動を確かめたいときに、初手を何をするかを考えるきっかけとなれば嬉しいなと思って書きました。話を簡単にするために調査方法を「ソースコード調査」「動作確認」の2つだけ書いていますが、実際にはもっと多くの手段を使える場合があります。
むかしむかし、仕事で先輩から「LinuxカーネルのAという機能が、Bという起動オプションを付けたときに失敗するという報告がupstreamであったらしいんだけど、うちのサーバでも起きうるかどうか確認しておいて」と言われました。わたしはLinuxカーネルのソースコードを見て、そういうケースがあるかどう...]]></description><link>https://zenn.dev/satoru_takeuchi/articles/56fc658e9e922b</link><guid isPermaLink="true">https://zenn.dev/satoru_takeuchi/articles/56fc658e9e922b</guid><pubDate>Sun, 29 Sep 2024 14:48:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CB4ZivUX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E3%2582%2588%25E3%2582%258A%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%25BB%25E3%2581%2586%25E3%2581%258C%25E6%2589%258B%25E3%2581%25A3%25E5%258F%2596%25E3%2582%258A%25E6%2597%25A9%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hjeVUzdFlLV3RJeXdsdjJhYm1ac2VpczZrUnp1ODc5ZFNwT0Vub3c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sat</dc:creator></item><item><title><![CDATA[Apacheのアクセスログに記録する内容を絞る]]></title><description><![CDATA[Apacheのアクセスログには大量のアクセス記録が保存される。
どのページにアクセスがあったかだけ記録していればよく、JSやCSSや画像のアクセスログは不要である。JSやCSSや画像や「自分」のアクセス記録を排除する。

 設定の流れ


nologフラグの設定ファイルを作成する
設定ファイルに正規表現で条件を書く

nologフラグが立ったアクセスは記録しない設定を追加する

configtestして問題なければgracefulする


 nologフラグの設定
正規表現にマッチしたらnologというフラグを設定する。
以下の内容をhttpd.confに追記してもよいが、nolog.c...]]></description><link>https://zenn.dev/tomoakinagahara/articles/5c4aee3fd82038</link><guid isPermaLink="true">https://zenn.dev/tomoakinagahara/articles/5c4aee3fd82038</guid><pubDate>Sun, 29 Sep 2024 12:43:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gTzQgRiA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AB%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoaki%2520Nagahara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czREt6Z1p1U3hEcGVZaFY1ajhJSjNmTzFZODlMLXg3bVJxcFU1Q0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoaki Nagahara</dc:creator></item><item><title><![CDATA[eBPF Powered Dodger Game!!]]></title><description><![CDATA[eBPFを使って、障害物を避けるゲームを作りました。

https://github.com/kohshi54/dodger-ebpf

 ゲームの特徴

落ちてくる障害物を避けるゲームです
受信パケットを元に障害物を生成します
eBPFを使ってパケットの受信を監視しました


 受信パケットを元にした障害物の生成
障害物はランダムに落ちてくる必要があります。
通常は擬似乱数を用いたりして、新たに追加する障害物の数を決定していると思います。
この障害物の生成数を受信パケットの数を元に決定すると面白いのではないかと思いました。
ゲームの面白さを考えると障害物の数はある程度ランダムでないとい...]]></description><link>https://zenn.dev/kohshi54/articles/7e648bf01e6632</link><guid isPermaLink="true">https://zenn.dev/kohshi54/articles/7e648bf01e6632</guid><pubDate>Sun, 29 Sep 2024 12:13:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SR7uEHb4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:eBPF%2520Powered%2520Dodger%2520Game%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kohshi54%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0d1Z0N6Q2VRRk9rSGUyTXBuY1RmdkRIbWpabGpvNUE5azUtcGNBSVZ6Ymc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kohshi54</dc:creator></item><item><title><![CDATA[WSLからpbcopy/pbpasteを使う]]></title><description><![CDATA[alias pbcopy='iconv -f utf8 -t utf16le | clip.exe'
alias pbpaste='pwsh.exe -Command Get-Clipboard'
]]></description><link>https://zenn.dev/ciffelia/articles/wsl-pbcopy-pbpaste</link><guid isPermaLink="true">https://zenn.dev/ciffelia/articles/wsl-pbcopy-pbpaste</guid><pubDate>Sun, 29 Sep 2024 06:39:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0MJXPWxD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E3%2581%258B%25E3%2582%2589pbcopy%252Fpbpaste%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ciffelia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hJT3JUR3ZLcmVqQUhJQmFkeFl4MWtGZXplRUxWczV1aVNtcWt1RHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ciffelia</dc:creator></item><item><title><![CDATA[[Windows] 新しくPC買ったのでWSL2を導入してみる]]></title><description><![CDATA[
 🌟 はじめに
おぐまです。
WindowsでLinux環境を使いたいけど、仮想マシンは重いし面倒...そんな悩みを抱えている方に朗報です！この記事では、Windows 10と11にWSL2（Windows Subsystem for Linux 2）を導入する方法と、インストールの確認方法について詳しく解説します🌜
WSL2を使えば、Windowsの快適さとLinuxの開発環境の両方を手に入れられます。このチュートリアルを通じて、クリーンで効率的な開発環境を構築しましょう。

 🐧 WSLとは
WSL（Windows Subsystem for Linux）は、Windows上でLi...]]></description><link>https://zenn.dev/ap_com/articles/install-wsl2-on-windows</link><guid isPermaLink="true">https://zenn.dev/ap_com/articles/install-wsl2-on-windows</guid><pubDate>Sun, 29 Sep 2024 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2gg0V_oH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BWindows%255D%2520%25E6%2596%25B0%25E3%2581%2597%25E3%2581%258FPC%25E8%25B2%25B7%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7WSL2%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:9mak%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5N2NlMjBhZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25BA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5YTdiNjViNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>9mak</dc:creator></item><item><title><![CDATA[ubuntuでgrub2を再インストールした。]]></title><description><![CDATA[ubuntuでgrub2を再インストールした。
EFIを書き換えるので怖かったが、あっさり成功した。

grub2ビルド
wget https://ftp.gnu.org/gnu/grub/grub-2.04.tar.gz
tar xzvf grub2.04.tar.gz
cd grub-2.04/

sudo ./configure --disable-werror --prefix=/usr/ --target=x86_64
make
sudo make install

実際にEFIを書き換えてみる。
sudo grub-install 
Installing for x86_64...]]></description><link>https://zenn.dev/linux/articles/e1bbe726094fe1</link><guid isPermaLink="true">https://zenn.dev/linux/articles/e1bbe726094fe1</guid><pubDate>Sat, 28 Sep 2024 05:18:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uty8kTH1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ubuntu%25E3%2581%25A7grub2%25E3%2582%2592%25E5%2586%258D%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259F%258E%25E5%25B1%25B1%25E6%25B5%2581%25E4%25BA%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd1QtaUhYVTlpQlFncHFhbk96MktuYktVVzJQQ053RWlBNVlyYlU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>城山流二</dc:creator></item><item><title><![CDATA[Docker Compose の Watch 機能の利用と Nest.js の HMR 対応]]></title><description><![CDATA[
 はじめに
Docker Compose に Watch 機能があることを知ったので Ubuntu 22.04 で動作確認をしてみました。確認にあたっては Nest.js のアプリへ HMR(Hot Module Replacement) 対応したものを用意して動かしてみました。
動作環境の情報は次のようになります。
$ docker compose version
Docker Compose version v2.29.2-desktop.2
$ cat /etc/os-release 
PRETTY_NAME="Ubuntu 22.04.5 LTS"
NAME="Ubuntu"
...]]></description><link>https://zenn.dev/hiro345/articles/20240928_docker_compose_watch</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20240928_docker_compose_watch</guid><pubDate>Sat, 28 Sep 2024 03:17:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kl5STsAq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Compose%2520%25E3%2581%25AE%2520Watch%2520%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A8%2520Nest.js%2520%25E3%2581%25AE%2520HMR%2520%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[MinikubeにOpenFaaSをデプロイする]]></title><description><![CDATA[
 概要
おうちサーバでFaaSして～って思ってたけど案外選択肢が少ない。気がする。
思いつくのは下記のツール類。

OpenFaaS
LocalStack
Knative
serverless framework

なんか1が一番シンプルそう。
あんまり複雑な構成にすると普通にWebサーバ立てたほうが楽そうで本末転倒なので。

 環境
Proxmox上に構築したUbuntu 20.04のVM
CPUは2Core, RAM2GBを割り当てました。
前提条件としてdockerをインストール、一般ユーザ権限で起動できるようにしてあります。

 手順
基本的には下記記事に沿って作業します。In...]]></description><link>https://zenn.dev/sum3sh1/articles/21a0e590205405</link><guid isPermaLink="true">https://zenn.dev/sum3sh1/articles/21a0e590205405</guid><pubDate>Fri, 27 Sep 2024 23:48:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DqSmXFvg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Minikube%25E3%2581%25ABOpenFaaS%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumeshi_kun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwM2EzNzkyNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumeshi_kun</dc:creator></item><item><title><![CDATA[フォレンジック向けLinux「C.A.IN.E.」を用いたディスク保全]]></title><description><![CDATA[
 概要
C.A.IN.E. (Computer Aided Investigative Environment) は名前の通り、PCを対象とした調査支援環境です。
フォレンジック向けのLinuxはいくつかありますが、明確にそれのみを目的として設計されているので直感的に使えるし、ドキュメントも整備されているので個人的にはおすすめです。
本記事では、このC.A.IN.E.を使ってフォレンジック調査対象機器のディスクイメージを保全する方法について取り上げます。
https://www.caine-live.net/
ちなみに、C.A.IN.E.はUbuntuベースのOSです。

 起動
本記...]]></description><link>https://zenn.dev/sum3sh1/articles/a497f834ce1bbc</link><guid isPermaLink="true">https://zenn.dev/sum3sh1/articles/a497f834ce1bbc</guid><pubDate>Fri, 27 Sep 2024 23:34:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hj2LOwxT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E5%2590%2591%25E3%2581%2591Linux%25E3%2580%258CC.A.IN.E.%25E3%2580%258D%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B9%25E3%2582%25AF%25E4%25BF%259D%25E5%2585%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumeshi_kun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwM2EzNzkyNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumeshi_kun</dc:creator></item><item><title><![CDATA[Fail2ban]]></title><description><![CDATA[
 Fail2banとは？
不正アクセスを検知して、攻撃と思しきアクセスを遮断する。

 Fail2banのインストールと起動
（省略）

 設定ファイルについて
SSH、Postfix、Apacheなど、メジャーなミドルウェアの主要な設定はデフォルトで設定されている。デフォルトの設定は変更しない方が良い。

 設定の流れ

カスタムフィルターを作成する（filterファイルの作成）
カスタムフィルターを有効にする（jailファイルの作成）
Fail2banの再起動
設定が有効になっているか確認


 confファイルの作成場所
/etc/fail2ban/filter.d/*.conf...]]></description><link>https://zenn.dev/tomoakinagahara/articles/a1af9d36c67c20</link><guid isPermaLink="true">https://zenn.dev/tomoakinagahara/articles/a1af9d36c67c20</guid><pubDate>Fri, 27 Sep 2024 05:33:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wa6waWSx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Fail2ban%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoaki%2520Nagahara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czREt6Z1p1U3hEcGVZaFY1ajhJSjNmTzFZODlMLXg3bVJxcFU1Q0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoaki Nagahara</dc:creator></item><item><title><![CDATA[Java プログラム開発時に知っておきたい IDE 4選 - 2024年度版]]></title><description><![CDATA[
 はじめに
Java プログラム開発時に知っておきたい IDE (統合開発環境) について、選択肢としては下記があります。

Visual Studio Code
Eclipse IDE
JetBrains IntelliJ IDEA Community Edition
Apache NetBeans

Visual Studio Code (VS Code) は高機能エディタですが拡張機能を利用することで IDE 相当のものとして使えるようになります。Java 専用の IDE の方が使い勝手が良く、高機能ですが、普段から VS Code を使っている人の場合は、本格的な Java プ...]]></description><link>https://zenn.dev/hiro345/articles/20240926_java_ide</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20240926_java_ide</guid><pubDate>Thu, 26 Sep 2024 23:23:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GxeZkBqr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%2520IDE%25204%25E9%2581%25B8%2520-%25202024%25E5%25B9%25B4%25E5%25BA%25A6%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[Ubuntuの起動時に実行される`zram`スワップを恒久的に無効化する方法]]></title><description><![CDATA[
 動機
Ubuntu 22.04でKubernetesを動かしているが、起動時にzramのスワップが有効になってしまう。毎回swapoff -aを手動実行するのも面倒なので実行されている箇所を特定してこれを無効にしたい。

 スワップを確認する
swaponを実行すると現在使用可能なスワップの一覧を確認できます。
&gt; swapon
NAME       TYPE      SIZE USED PRIO
/dev/zram0 partition 7.8G   0B  100
/dev/zram0が有効になっています。swapoff -aを実行すれば一旦は無効になりますが、マシンを再...]]></description><link>https://zenn.dev/matoruru/articles/cce6633f2a5f1f</link><guid isPermaLink="true">https://zenn.dev/matoruru/articles/cce6633f2a5f1f</guid><pubDate>Thu, 26 Sep 2024 14:51:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qFPfxUNK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E6%2599%2582%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%2560zram%2560%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E6%2581%2592%25E4%25B9%2585%25E7%259A%2584%25E3%2581%25AB%25E7%2584%25A1%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:matoruru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1ODFmMzcwZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>matoruru</dc:creator></item><item><title><![CDATA[『Linuxシステムプログラミング』を読んだ]]></title><description><![CDATA[シルバーウィークの3連休を使って、『Linuxシステムプログラミング』を読みました。当初は、『Linuxプログラミングインタフェース』(1600ページ以上ある) の読破にでも挑戦してみようかと考えていました。しかし、まずは『Linuxシステムプログラミング』(400ページ程度) から入ったほうが良いという投稿を見かけたので、それに従いました。

結論として、私にとって『Linuxシステムプログラミング』を読んだことは正解でした。そして、私以外のソフトウェアエンジニアに対しても、本書を読むことを自信を持っておすすめできます。
なお、正確には英語版の『Linux System Program...]]></description><link>https://zenn.dev/kaseken/articles/0302451f8fe410</link><guid isPermaLink="true">https://zenn.dev/kaseken/articles/0302451f8fe410</guid><pubDate>Mon, 23 Sep 2024 08:51:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r9S-ekSh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258ELinux%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2580%258F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kent%2520Kaseda%2520%2528kaseken%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MmUyNTgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kent Kaseda (kaseken)</dc:creator></item><item><title><![CDATA[Linux/Mac CPUのコア数・スレッド数を調べるコマンド]]></title><description><![CDATA[make の並列オプション指定など、コマンドを用いてCPUのコア数（物理コア数）、スレッド数（論理コア数）を取得したい場合があります。
Linux/Mac でコマンドが違い、いつもわからなくなるのでまとめておきます。

 検証環境
Linux: AMD Ryzen 5 2600 Six-Core Processor
Mac: Apple M1

 コア数（物理コア数）を出力する

 /proc/cpuinfo を使う (Linux)
/proc/cpuinfo の出力を grep します。
$ grep core.id /proc/cpuinfo | sort -u | wc -l
6
...]]></description><link>https://zenn.dev/shuh/articles/cpu-cores-threads</link><guid isPermaLink="true">https://zenn.dev/shuh/articles/cpu-cores-threads</guid><pubDate>Sun, 22 Sep 2024 20:10:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_po6M4T1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%252FMac%2520CPU%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODg1Y2EwN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusch</dc:creator></item><item><title><![CDATA[eBPFのRootlessコンテナでの応用の可能性について調べてみた]]></title><description><![CDATA[先日参加した第57回 情報科学若手の会の懇親会の席でRootlessコンテナにおけるeBPFの活用の可能性に関して話題が上がりました. そのときにはあまりいい答えが出せず, そこで話題は終わってしまったのですが, 会が終わった後も個人的に気になるところがあったので調べて情報を整理しました.

 結論
いきなり結論を言うとRootlessコンテナの定義を「Runtimeも含め, 作成に一切の特権を必要としないコンテナ」だとするとコンテナ内でeBPFを使うことはまずできません. eBPFのProgramなりMapなりを作るのに特権が必要だからです. ただ, それだけでは面白くないので, この...]]></description><link>https://zenn.dev/yutarohayakawa/articles/d8dc9992d9604e</link><guid isPermaLink="true">https://zenn.dev/yutarohayakawa/articles/d8dc9992d9604e</guid><pubDate>Sun, 22 Sep 2024 15:57:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Kea9W7y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:eBPF%25E3%2581%25AERootless%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E3%2581%25AE%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YutaroHayakawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmMGMyZjI1NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YutaroHayakawa</dc:creator></item><item><title><![CDATA[[Linux] 基本コマンド操作(CLI)]]></title><description><![CDATA[
 はじめに
この記事では、linuxのcli をまとめております。

 事前準備[Linux(ubuntu)環境の構築]

 1. dockerイメージをpullする
dockerコマンドを使ってLinux(ubuntu)環境の用意します。
docker pull ubuntu
実行結果を確認する$ docker pull ubuntu
Using default tag: latest
latest: Pulling from library/ubuntu
Digest: sha256:77906da86b60585ce12215807090eb327e7386c8fafb54023...]]></description><link>https://zenn.dev/aew2sbee/articles/linux-command-line-interface</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/linux-command-line-interface</guid><pubDate>Sun, 22 Sep 2024 04:23:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6n3LScjL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLinux%255D%2520%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E6%2593%258D%25E4%25BD%259C%2528CLI%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[英語設定のDebian 12サーバーを日本語設定にする]]></title><description><![CDATA[
 要約
コンテナやVM、または海外でサーバーを借りるなど、様々な理由で英語環境の
Debian GNU/Linux 12(Bookworm)を自分好みの設定にしたいことがあります。
その手順をここに記します。

 はじめに
自分は、コンテナやVMを扱うのに、incus[1]というソフトウェアを使っています。
そこで新規にコンテナを使って自分好みの設定にするべく作業した記録を残して
将来の自分のために書き残しておきます。

 この文章はだれ向けか
Debian GNU/Linuxをインストールされた環境を自分好みにしたい人向けです。

 この文書の読み方
必要な部分だけ、拾い読みしてok...]]></description><link>https://zenn.dev/yabuki/articles/2024-09-22-change_en2jp_debianbookworm</link><guid isPermaLink="true">https://zenn.dev/yabuki/articles/2024-09-22-change_en2jp_debianbookworm</guid><pubDate>Sat, 21 Sep 2024 18:30:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c-T5j5Ti--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%258B%25B1%25E8%25AA%259E%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AEDebian%252012%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YABUKI%2520Yukiharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huRmQ1MnFmTEF6bUNNYVREYVhrTEZsZ0l0d1FrNVlrczJvcjBEPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YABUKI Yukiharu</dc:creator></item></channel></rss>