<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 01 Jun 2024 12:03:19 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Wasm Type Reflection JS APIのPolyfillを書いた]]></title><description><![CDATA[WebAssembly Type Reflection JS APIと呼ばれるAPIのPolyfillを書いたので、その紹介です。WebAssemblyでスレッドを扱う際に少し便利になります。
https://github.com/swiftwasm/wasm-imports-parser

 WebAssembly Type Reflection JS APIとは
WebAssembly Type Reflection JS APIは、WebAssemblyモジュールからimport/exportされる関数のシグネチャやメモリサイズの情報を取得するためのJavaScript APIです...]]></description><link>https://zenn.dev/katei/articles/wasm-js-types-polyfill</link><guid isPermaLink="true">https://zenn.dev/katei/articles/wasm-js-types-polyfill</guid><pubDate>Sat, 01 Jun 2024 11:14:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gwLhe3ji--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wasm%2520Type%2520Reflection%2520JS%2520API%25E3%2581%25AEPolyfill%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kateinoigakukun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1MGZhOTJhOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kateinoigakukun</dc:creator></item><item><title><![CDATA[Safari 通知権限チェック処理エラー解消メモ]]></title><description><![CDATA[
 エラーの内容
 Notification prompting can only be done from a user gesture.


 問題のあるコード
'use client';

import { useEffect, useState } from 'react';

const useNotificationPermissionStatus = () =&gt; {
  const [notificationPermissionStatus, setNotificationPermissionStatus] =
    useState('');

  useEffe...]]></description><link>https://zenn.dev/chenmiaochaonp/articles/16417bd5498a76</link><guid isPermaLink="true">https://zenn.dev/chenmiaochaonp/articles/16417bd5498a76</guid><pubDate>Sat, 01 Jun 2024 10:13:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FcUuf2qs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Safari%2520%25E9%2580%259A%25E7%259F%25A5%25E6%25A8%25A9%25E9%2599%2590%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E5%2587%25A6%25E7%2590%2586%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E8%25A7%25A3%25E6%25B6%2588%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%2584%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMzYyMjVkY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えいこ</dc:creator></item><item><title><![CDATA[dynalist→Markdown→Typoraでプロットを整形して爆速で書き始める]]></title><description><![CDATA[https://dynalist.io/
私はCoCシナリオのプロットをDynalistで書いている。
これがまた楽で、これだけでCoCシナリオを書くときもある。
だが大体はTyporaと併用している。
そんなときに、Dynalistで書いたプロットをそのままTyporaに貼り付けて、シナリオを書く煩わしさを少し軽減できないかと考えた。
https://typora.io/
!
ちなみにTypora以外だと多分できない。VScodeも試したが、できなかった。
どちらでも使えるいい方法を見つけたらまた記事をかきたい。

https://bloglab.naenote.net/entry/d...]]></description><link>https://zenn.dev/bokudesu/articles/ea036a07646577</link><guid isPermaLink="true">https://zenn.dev/bokudesu/articles/ea036a07646577</guid><pubDate>Sat, 01 Jun 2024 06:26:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ApD_zvqL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dynalist%25E2%2586%2592Markdown%25E2%2586%2592Typora%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2597%25E3%2581%25A6%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BC%25E3%2581%258F%25E3%2581%25A7%25E3%2581%2599%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2pFcW5CUXZ2Snc1SVlTVERLUmQtYS1NeFpZTkFmR003bXQxSjdDekhDVml0Rj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぼくです</dc:creator></item><item><title><![CDATA[TextAliveAppApiで歌詞・コード・ビートをリアルタイムに取得する。]]></title><description><![CDATA[この記事ではTextAliveAppAPIを使って、楽曲から歌詞・コード・ビートを取得するシンプルな実装を紹介します。

 デモ


 実装

 環境構築
TextAliveAppAPIの事前準備
TextAliveAppApiを使用するには、開発者登録をしてTextAliveアプリを作成し、アプリトークンを取得する必要があります。

viteプロジェクトの作成、npmパッケージのインストール
npm create vite@latest プロジェクト名 -- --template vanilla-ts
npm i
npm i textalive-app-api

 歌詞・コード・ビート...]]></description><link>https://zenn.dev/makimura3329/articles/textalive-app-basic-20240527</link><guid isPermaLink="true">https://zenn.dev/makimura3329/articles/textalive-app-basic-20240527</guid><pubDate>Sat, 01 Jun 2024 04:40:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U3-4sftv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TextAliveAppApi%25E3%2581%25A7%25E6%25AD%258C%25E8%25A9%259E%25E3%2583%25BB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2593%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2520Makimura%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3ZTE1MjMxZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>🧟Makimura🧟</dc:creator></item><item><title><![CDATA[actions/github-scriptの型補完でJob Summariesの開発をラクにしよう]]></title><description><![CDATA[
 Job Summariesの自前実装が辛い
GitHub Actionsのワークフローで自前のJob Summariesを実装する際に、簡単なサマリーであればワークフローのyamlにインラインでスクリプトを記述すればいいのですが、複雑になってくると実装が辛い。。。
- name: Generate list using Markdown
  run: |
    echo "This is the lead in sentence for the list" &gt;&gt; $GITHUB_STEP_SUMMARY
    echo "" &gt;&gt; $GITHUB_STEP...]]></description><link>https://zenn.dev/ikoamu/articles/5b4c646376b60e</link><guid isPermaLink="true">https://zenn.dev/ikoamu/articles/5b4c646376b60e</guid><pubDate>Sat, 01 Jun 2024 03:07:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w2yDVgKp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:actions%252Fgithub-script%25E3%2581%25AE%25E5%259E%258B%25E8%25A3%259C%25E5%25AE%258C%25E3%2581%25A7Job%2520Summaries%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25AF%25E3%2581%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikoamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNDYwNWY1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikoamu</dc:creator></item><item><title><![CDATA[JavaScriptに出てくる「.then」ってなんだっけ？]]></title><description><![CDATA[
 .then
簡単にいうとJavaScriptで非同期処理を扱う際に使う表現でpromiseという仕組みに関連します。
巷でよく聞くAPIとはまさにこの非同期処理の取ってくる対象として扱われます。
promiseは「将来的に起こる結果を返す」ことを約束する仕組みです。
と、言われても頭に「？」が浮かぶと思います。
例えばネットワークを通じて東京の天気予報を取得するとします。
その天気予報の情報が返ってくるまで多少の時間がかかるので、その間に他の処理をしてしまおう！それを「非同期処理」と言います。
タイトルに戻りますが、.thenを使うと何がいいかというとpromiseが「完了したら、次...]]></description><link>https://zenn.dev/circlerc/articles/548542ffb13467</link><guid isPermaLink="true">https://zenn.dev/circlerc/articles/548542ffb13467</guid><pubDate>Sat, 01 Jun 2024 00:32:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fR-0CU-y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B%25E3%2580%258C.then%25E3%2580%258D%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2591%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%259F%25E3%2581%259F%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzYTg4OGU5NGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>生たら</dc:creator></item><item><title><![CDATA[Cheerp 3.0： Web用の最も先進的な C++ コンパイラ、 ライセンス提供開始]]></title><description><![CDATA[
本日 (March 14, 2023)、Web用C++コンパイラの最新メジャーリリースであるCheerp 3.0を発表できることを大変誇りに思います。
Cheerpの前リリース(Cheerp 2.7 )から1年以上が経過し、この新しいバージョンは、Webアプリケーションやゲームのためのプログラミング言語としてC++を使用することの最先端をもう一度動かすような新機能や最適化機能が満載です。
最も重要なことは、今回のリリースで、Cheerpのライセンスモデルに大きな変更を加えるということです。Cheerp 3.0から、すべてのコンパイラのコアコンポーネントとライブラリは、Apache 2....]]></description><link>https://zenn.dev/leaning_tech_jp/articles/d916e9c9818fa4</link><guid isPermaLink="true">https://zenn.dev/leaning_tech_jp/articles/d916e9c9818fa4</guid><pubDate>Fri, 31 May 2024 18:21:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ADXcTpj_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cheerp%25203.0%25EF%25BC%259A%2520Web%25E7%2594%25A8%25E3%2581%25AE%25E6%259C%2580%25E3%2582%2582%25E5%2585%2588%25E9%2580%25B2%25E7%259A%2584%25E3%2581%25AA%2520C%252B%252B%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2580%2581%2520%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B9%25E6%258F%2590%25E4%25BE%259B%25E9%2596%258B%25E5%25A7%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leaning%2520Technologi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MmNjYWUyNWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leaning Technologies Japan (リーニングテクノロジー)</dc:creator></item><item><title><![CDATA[【Java script】基礎編：オブジェクト/メソッド/イベント/パラメータ/引数/イベントハンドラーとは]]></title><description><![CDATA[
 Java scriptとは
動的なWebページを作成する事のできるプログラミング言語


 java scriptの基本構文
!

 【基本構文】

基本構文（１）
// window（オブジェクト）のalert(メソッド)を用いて
// `Hello world`（パラメータ）を画面（ウィンドウ）に出す。
&lt;script&gt;
  window.alert('Hello World');
&lt;/script&gt;



基本構文（２）
// button（オブジェクト）のaddEventListener(メソッド)を用いて'click'(イベント）が実行されたら
//...]]></description><link>https://zenn.dev/code_journey_ys/articles/392e35adf180a2</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/392e35adf180a2</guid><pubDate>Fri, 31 May 2024 14:47:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pjo0DGJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%2520script%25E3%2580%2591%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%252F%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%252F%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%252F%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%252F%25E5%25BC%2595%25E6%2595%25B0%252F%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[コメントを書くコツ]]></title><description><![CDATA[
 はじめに
皆さんはプログラムを書く時コメントは書いていますか？
入門講座では言語仕様としてのコメントの文法は教わりますが、どういうことをコメントに書くべきかは教えてもらえません。
コメントはなんでも書けばいいわけでもなく、適切に書かなければいけません。
しかしこのニーズは案件ごとに違うし、企業のコードスタイルによっても違います。
そのため、コメントについての議論を自分から調べないと考える機会もあまりないと思います。
ここで勉強してみましょう。

 書かない方がいいコメント

 言語やフレームワークの説明
入門書に書いているレベルの言語標準関数の説明は意味がないので書きません。

Sa...]]></description><link>https://zenn.dev/k_tabuchi/articles/58f4f18ab4d68b</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/58f4f18ab4d68b</guid><pubDate>Fri, 31 May 2024 13:12:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wpp7osWE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2582%25B3%25E3%2583%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[【JS】splideでランダム表示]]></title><description><![CDATA[
 splideとは？
https://ja.splidejs.com/
アクセシビリティに配慮した軽量・高機能スライダー！
日本人が開発しているので公式ドキュメントが日本語で読みやすいです。
いろんなオプションもあって便利！

 splideでランダム表示させてみた
https://codepen.io/mdvlzqqm-the-lessful/pen/QWRpwEB
　Udemyでjs勉強中に講師の人が、Math.floor(Math.random()）の解説の時に、時々スライダーをランダム表示させたいというリクエストがあって、Math.floor(Math.random()）は使っ...]]></description><link>https://zenn.dev/nami_06063/articles/be0c3eab25b3e2</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/be0c3eab25b3e2</guid><pubDate>Fri, 31 May 2024 11:17:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tHd-_Kau--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591splide%25E3%2581%25A7%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[正しいオブジェクト指向やってると1単語になるよね、って話]]></title><description><![CDATA[
 まじで1単語になる！！！！

オブジェクト指向とは: 絶対1単語に済ませられるマン！（3~4%の例外あり)


 オブジェクト指向のコツ
オブジェクト指向のコツはむしろ、1単語でなかったら間違ってるかもってことに気づけることかも知れない、、。
オブジェクト指向間違ってると
togglePrivatePersonarityNum とかいう長っがいメソッドや変数はやしがち。

リファクタリング途中の.js
class Members {
  constructor(usingState, { mine, list }) {
    [this.states, this.setStates...]]></description><link>https://zenn.dev/llc_starhacks/articles/0f64fea15cfab0</link><guid isPermaLink="true">https://zenn.dev/llc_starhacks/articles/0f64fea15cfab0</guid><pubDate>Fri, 31 May 2024 10:44:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OGWOL13e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%2584%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E3%2581%25A81%25E5%258D%2598%25E8%25AA%259E%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2588%25E3%2581%25AD%25E3%2580%2581%25E3%2581%25A3%25E3%2581%25A6%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:llc_starhacks%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2QxODAxZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>llc_starhacks</dc:creator></item><item><title><![CDATA[LangChain x TypeScript で Runnable を並列実行]]></title><description><![CDATA[
 はじめに
この記事では、LangChain で複数の Runnable を並列して事項する方法を紹介します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/parallel/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-runnable-parallel-sample
LangChain x TypeScript...]]></description><link>https://zenn.dev/hayato94087/articles/bee49672a883c2</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/bee49672a883c2</guid><pubDate>Fri, 31 May 2024 07:36:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C_uutO0N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520x%2520TypeScript%2520%25E3%2581%25A7%2520Runnable%2520%25E3%2582%2592%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Next.jsのディレクトリ構成：2024年の最新ベストプラクティス]]></title><description><![CDATA[数年前に「Next.jsのディレクトリ構成：現在の個人的ベストプラクティス」という記事を書かせていただきました。
https://zenn.dev/yutabeee/articles/5e32a99a3cab97
あれから時が経ち、Next.jsは目まぐるしい進化を遂げています。特に、Next.js 13で導入されたappディレクトリは、ディレクトリ構成に大きな変化をもたらしました。
そこで今回は、2024年現在のNext.jsのベストプラクティスに基づいた、新しいディレクトリ構成をご紹介したいと思います。

 2024年版のディレクトリ構成
my-next-app/
├── app/
...]]></description><link>https://zenn.dev/yutabeee/articles/0f7e8e2fa03946</link><guid isPermaLink="true">https://zenn.dev/yutabeee/articles/0f7e8e2fa03946</guid><pubDate>Fri, 31 May 2024 03:52:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KnNxWQT6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25EF%25BC%259A2024%25E5%25B9%25B4%25E3%2581%25AE%25E6%259C%2580%25E6%2596%25B0%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2580%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5YzFjYWRjOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ダーマン</dc:creator></item><item><title><![CDATA[ユーザー操作のイベントかそうでないかを判定できるevent. isTrustedプロパティで意図しない動作を防ぐ]]></title><description><![CDATA[イベントの伝播を防ぐのはstopPropagation()ですが、伝播するはずのない要素でイベントが走ってしまい動作不良が起きてしまうことがありました。
そのときに問題の解消方法として採用したisTrustedプロパティを紹介します。

 ユーザー操作かスクリプトで作成・変更されたかを返してくれるevent.isTrusted

MDNには次のような説明があります。

isTrusted は Event インターフェイスの読み取り専用プロパティで、このイベントがユーザー操作によって生成された場合は true、このイベントがスクリプトで作成または変更されたり、 EventTarget.di...]]></description><link>https://zenn.dev/chot/articles/c22cb8cc161af2</link><guid isPermaLink="true">https://zenn.dev/chot/articles/c22cb8cc161af2</guid><pubDate>Fri, 31 May 2024 01:37:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7RQWfbF4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25E3%2582%2592%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bevent.%2520isTrusted%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25A7%25E6%2584%258F%25E5%259B%25B3%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%258B%2595%25E4%25BD%259C%25E3%2582%2592%25E9%2598%25B2%25E3%2581%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25AE%2589%25E7%2594%25B0%25E5%25AD%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMTk1Nzk4ODEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>安田学</dc:creator></item><item><title><![CDATA[【React】自分で作るHeadless UIの威力]]></title><description><![CDATA[
 はじめに
Headless UIというフロントエンドのコンポーネント設計手法について紹介します。

 Headless UIとは
Radix UIやHeadless UI(ライブラリの名称)といったスタイルを持たないコンポーネントライブラリが近年脚光を浴びています。 プレゼンテーションを構成するロジックだけが備わっており、スタイルは自由自在にclassNameなどを使って注入するものです。
この手の立派なライブラリをnpm installしてもいいですが、核となるアイデアを自前で実装してみても良いかもしれません。
!
上記のようなコンポーネントを何と呼ぶか？は割れていますが、
ここで...]]></description><link>https://zenn.dev/yhase_rqp/articles/3bb090ef7181fe</link><guid isPermaLink="true">https://zenn.dev/yhase_rqp/articles/3bb090ef7181fe</guid><pubDate>Fri, 31 May 2024 01:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y_SFisOV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BHeadless%2520UI%25E3%2581%25AE%25E5%25A8%2581%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3YmU3ZDM3N2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yha</dc:creator></item><item><title><![CDATA[LangChain x TypeScript で Runnable をシクエンシャルに実行]]></title><description><![CDATA[
 はじめに
この記事では、LangChain で複数の LangChain のコンポーネントを結合し、シクエンシャルに処理する方法を紹介します。具体的には以下の記事を参考に記述します。
https://js.langchain.com/v0.2/docs/how_to/sequence
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-chain-runnable-application
Lang...]]></description><link>https://zenn.dev/hayato94087/articles/d913b9d3e8dfe4</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/d913b9d3e8dfe4</guid><pubDate>Thu, 30 May 2024 19:40:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oo8ppOej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520x%2520TypeScript%2520%25E3%2581%25A7%2520Runnable%2520%25E3%2582%2592%25E3%2582%25B7%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AB%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Slack-Azure OpenAI GPT-4ボットを画像入力対応にバージョンアップしました[全コードあり]]]></title><description><![CDATA[株式会社ジェイテックジャパン CTOの高丘 @tomohisaです。社内では昨年の3月より1年くらいChatGPT BotがSlackのBotとして運用しています。
Copilotも使っているのですが、社内で言葉の定義や概念の概要を話している時や、新たな機能を追加する時の調査などで皆が活用していました。もちろん、ChatGPTのWebでできるような、おおきなpdfの解析やGPTs、ベクターデータベースなどは使っていないため、機能は限られたものとなります。それでもChatGPTに馴染みのないメンバーも簡単にSlackから使うことができ、DMにも開放しているので、結構使われています。
htt...]]></description><link>https://zenn.dev/jtechjapan_pub/articles/44329d672780fb</link><guid isPermaLink="true">https://zenn.dev/jtechjapan_pub/articles/44329d672780fb</guid><pubDate>Thu, 30 May 2024 04:26:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wWVhu4ba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack-Azure%2520OpenAI%2520GPT-4%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E7%2594%25BB%25E5%2583%258F%25E5%2585%25A5%25E5%258A%259B%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AB%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%255B%25E5%2585%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2582%25E3%2582%258A%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tomohisa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YzA4MzFkMDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUY1NlSXBBM09KME83a1ZzWG1WUjhvYWpqN3RHVVV2QTJDZ2hKS2c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomohisa</dc:creator></item><item><title><![CDATA[GASのテストについて]]></title><description><![CDATA[
 初めに
今回のタスクは、kintoneアプリからスプレットシートに情報を渡す
というタスクでした。
修正自体は簡単でしたが、テストをどうやるかで時間を使ってしまいましたので
共有します。
以下の2つの方法を試しましたが、GASのみでテストパラメーターを作成して、実行
を行った方が簡単でデバッグしやすかった！

 愚直にkintone→GASを動かす
kintoneのアプリから愚直に指定したパラメーターを入力し、GASに対してpostする方法
//kintone側
const misocaEvents = ['app.record.edit.submit'];
  kintone.ev...]]></description><link>https://zenn.dev/bizlink/articles/2596fefc75b471</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/2596fefc75b471</guid><pubDate>Thu, 30 May 2024 01:31:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rQoOG8VK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item><item><title><![CDATA[CommonJS とESModulesについて・歴史]]></title><description><![CDATA[
 CommonJS
CommonJSとは、サーバーサイドなどのウェブブラウザ環境外におけるJavaScriptの各種仕様を定めることを目標としたプロジェクトである。
// インポート
const moduleName = require('./module.js');

// エクスポート
module.exports = {
  myFunction: () =&gt; {
    // ...
  }
};

 モジュール
ある特定の機能を持ったプログラムの塊
初期のJSにはモジュールという概念がなかった。

 歴史


1995 年　JavaScript爆誕　２８歳
ちょっとした...]]></description><link>https://zenn.dev/bizlink/articles/56b2eb309ba394</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/56b2eb309ba394</guid><pubDate>Thu, 30 May 2024 01:26:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UjW6B64O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CommonJS%2520%25E3%2581%25A8ESModules%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25BB%25E6%25AD%25B4%25E5%258F%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item><item><title><![CDATA[kintoneで、E2Eテストをやってみた]]></title><description><![CDATA[kintoneでE2Eテストをしてみる
弊社では、kintoneのアプリが30個以上を超えてきてまた
カスタムJSもかなり複雑になってきていて何かを変更した時に
うまくレコードが作成されないなど品質的な部分での悩みが増えてきました。
まだ、テストが一切なく手動で確認しているので、E2Eテストをちょっと触ってみました。

 何ができるのか
kintoneの自動ログイン、kitoneのアプリ画面でフィールド入力、レコード保存、編集、画面確認など
ユーザが操作することは基本的にできます！！
「E2Eテスト」とは？
E2Eテストとは、1つのアプリケーションに対し「複数のユーザーワークフローでシミ...]]></description><link>https://zenn.dev/bizlink/articles/a478b309fdbda4</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/a478b309fdbda4</guid><pubDate>Thu, 30 May 2024 01:08:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YucNFvsr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kintone%25E3%2581%25A7%25E3%2580%2581E2E%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A0%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y1VQWGcyQ29QdWNLcGlsZkNqNlVOT1VDVTRTbkowcDBjZENVNEc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくだー</dc:creator></item></channel></rss>