<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 16 Aug 2024 02:01:04 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[2024年8月] IntelliJでSpring Bootアプリを簡単に作り始める方法]]></title><description><![CDATA[IntelliJ IDEA Communityを使って、Springプロジェクトの環境を簡単に整える方法を紹介します。

 IntelliJ IDEAをインストール
IntelliJ IDEAは、現在世界的に人気のあるJavaの統合開発環境です。日本ではEclipseのシェアが高いですが、世界的にはIntelliJ IDEAが圧倒的に人気です。
ダウンロードはこちらから:
IntelliJ IDEA ダウンロード
IntelliJ IDEAには、有料版のIntelliJ IDEA Ultimateと無償版のIntelliJ IDEA Community版があります。今回は無償版を使用しま...]]></description><link>https://zenn.dev/dollaga_saiore/articles/spring_intelij_maven20240815</link><guid isPermaLink="true">https://zenn.dev/dollaga_saiore/articles/spring_intelij_maven20240815</guid><pubDate>Thu, 15 Aug 2024 09:28:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tYfV1fCB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B2024%25E5%25B9%25B48%25E6%259C%2588%255D%2520IntelliJ%25E3%2581%25A7Spring%2520Boot%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258A%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2582%258B%25E3%2581%2582%25E3%2581%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyZDYzM2JmMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どるあが</dc:creator></item><item><title><![CDATA[【Java・SpringBoot】@Transactionalで複数回DBにアクセスした場合の挙動について解説]]></title><description><![CDATA[
 はじめに
SpringBootにおいて@Transactional(rollbackFor = Exception.class)を付与したメソッドの複数回DBにアクセスしたときの挙動について解説します。
まず、@Transactional(rollbackFor = Exception.class)を付与すると、メソッド内でExceptionまたはそのサブクラスがスローされた場合、トランザクションはロールバックされます。
では、複数回DBにアクセスした場合の挙動はどうなるのかという疑問があったためこのような記事を書きました。
・JavaあるいはSpringBootを勉強している
・ト...]]></description><link>https://zenn.dev/ktkthude/articles/b2c1c0d049b920</link><guid isPermaLink="true">https://zenn.dev/ktkthude/articles/b2c1c0d049b920</guid><pubDate>Thu, 15 Aug 2024 01:40:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2IKgoWL_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2583%25BBSpringBoot%25E3%2580%2591%2540Transactional%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E5%259B%259EDB%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2597%25E3%2581%259F%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ko-ta%2540%25E6%2596%2587%25E7%25B3%25BB%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzQ1MWIzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ko-ta@文系エンジニア</dc:creator></item><item><title><![CDATA[Micrometer Context Propagation について]]></title><description><![CDATA[
 はじめに
Micrometer Context PropagationというライブラリがSpring BootおよびReactorに導入されました。 (Spring Boot3から)

https://github.com/micrometer-metrics/context-propagation
https://docs.micrometer.io/context-propagation/reference/

その名の通り、スレッド間でContext Propagationを容易にするためのライブラリです。
この記事ではこのMicrometer Context Propagat...]]></description><link>https://zenn.dev/be_hase/articles/17b3b8c8109635</link><guid isPermaLink="true">https://zenn.dev/be_hase/articles/17b3b8c8109635</guid><pubDate>Wed, 14 Aug 2024 10:07:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1fZ-8DlZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Micrometer%2520Context%2520Propagation%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:be-hase%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dNaVhNZnFBWE9yTXdHZVdBMEpmaE5OX3FJRVExUWQzRUw2MVJtM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>be-hase</dc:creator></item><item><title><![CDATA[JavaとJavaScriptの違い]]></title><description><![CDATA[JavaとJavaScriptは名前が似ていますが、異なるプログラミング言語で、それぞれに異なる特徴と用途があります。
違うことはわかってるけど説明できないなーと思ったのでまとめてみました〜〜〜



 1. Javaの概要
Javaはプログラミング言語の1つで、1995年にサン・マイクロシスズがリリースしたプロミング言語。

 2. Javaの特徴


バックエンドを開発するプログラミング言語

コンパイル言語
プログラムを実行する際にコンピュータが読み取れる言語に翻訳することをコンパイルと呼び、事前にコンパイルする言語をコンパイラ言語と呼びます。
Javaはバイトコードという中間形式...]]></description><link>https://zenn.dev/takeda_kaho/articles/cf68bd3b11851b</link><guid isPermaLink="true">https://zenn.dev/takeda_kaho/articles/cf68bd3b11851b</guid><pubDate>Tue, 13 Aug 2024 05:00:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wsGqVIej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Java%25E3%2581%25A8JavaScript%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takepanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZWRlZDIyZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takepanda</dc:creator></item><item><title><![CDATA[入門Javaのラムダ式とStream API]]></title><description><![CDATA[
 環境

JDK 17


 はじめに
例えば、こんなMemberレコードがあって、
public record Member(String name, int age) {
}
こんなList&lt;Member&gt;があるとします。
List&lt;Member&gt; memberList = List.of(
  new Member("佐々木久美", 27),
  new Member("金村美玖", 20),
  new Member("髙橋未来虹", 19),
  new Member("正源寺陽子", 16)
);
このmemberListから「18歳以上のメンバーの...]]></description><link>https://zenn.dev/masatoshi_tada/articles/67ca3855812cd2</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/67ca3855812cd2</guid><pubDate>Tue, 13 Aug 2024 04:36:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fh7TkxM3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25A5%25E9%2596%2580Java%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2581%25A8Stream%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Javaでよくやる文字列操作]]></title><description><![CDATA[思いついたものがあったら追記します。

 環境
JDK 17

 参考資料
StringクラスのJavadoc

 部分文字列を取得する
終了インデックスの文字は含まれないことに注意。
String source = "abcdefghijk";
// 開始インデックス（＝0始まり）のみ指定。開始インデックスの文字は含まれる
String sub1 = source.substring(3);
System.out.println(sub1);
// 開始インデックス（＝0始まり）と終了インデックスを指定。
// 開始インデックスの文字は含まれる。終了インデックスの文字は含まれない。
S...]]></description><link>https://zenn.dev/masatoshi_tada/articles/609127b822d080</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/609127b822d080</guid><pubDate>Tue, 13 Aug 2024 04:35:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yZTKBCJC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E3%2582%2584%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Spring Boot + MyBatisで自作TypeHandlerを使う]]></title><description><![CDATA[
 環境

JDK 17
Spring Boot 2.7
mybatis-spring-boot-starter 2.2.2


 やり方

 型の作成

Hoge.java
package com.example.entity;

public record Hoge(String value) {
}


 TypeHandlerの作成
@MappedTypes を付加するのがポイント。

HogeTypeHandler.java
package com.example.typehandler;

import com.example.entity.Hoge;

import org...]]></description><link>https://zenn.dev/masatoshi_tada/articles/d96b7ef394c318</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/d96b7ef394c318</guid><pubDate>Tue, 13 Aug 2024 04:33:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xL-GJReL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%2520%252B%2520MyBatis%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259CTypeHandler%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[doma-templateでJdbcTemplateを2-way SQL化したサンプルをApache License 2.0で公開しました]]></title><description><![CDATA[
 doma-templateの紹介

 doma-templateとは？
常々、SpringのJdbcTemplateでDomaの2-way SQLを使えたらいいのになあ・・・と思っていました。
で、👇のようなことをつぶやいたら、Doma作者のnakamura_toさんからこんなリプライをいただきました！
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;例えばですが、doma-coreライブラリに依存する形で新しいライブラリを提供するとかなら比較的簡単に実現できる気がします。ライブラリのgroup...]]></description><link>https://zenn.dev/masatoshi_tada/articles/f144bd1375aa76</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/f144bd1375aa76</guid><pubDate>Tue, 13 Aug 2024 04:32:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sYeLVl5U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:doma-template%25E3%2581%25A7JdbcTemplate%25E3%2582%25922-way%2520SQL%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%2592Apache%2520Licens...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[SpringでNoUniqueBeanDefinitionExceptionが出たときの解決法]]></title><description><![CDATA[
 環境

JDK 17
Spring Boot 2.7.0


多少バージョンが違っていても、動作は変わらないと思います。


 解決したい問題
Foo インタフェースがあって、その実装クラス（Bean）が2つあります。

Foo.java
package com.example;

public interface Foo {
    public void doSomething();
}


FooImpl1.java
package com.example.foo1;

import com.example.Foo;
import org.springframework.ste...]]></description><link>https://zenn.dev/masatoshi_tada/articles/3a8b57bca8ddab</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/3a8b57bca8ddab</guid><pubDate>Tue, 13 Aug 2024 04:32:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RD0pQ0Yc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%25E3%2581%25A7NoUniqueBeanDefinitionException%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Spring BootでDataSourceのBeanを複数作る]]></title><description><![CDATA[
 この記事について
Spring Bootでは、Auto Configurationにより DataSource のBeanが1つ作られます。しかし自分で明示的に DataSource のBeanを定義すると、Auto Configurationによって作られるはずだった DataSource Beanが作られなくなってしまいます。
では、どうやって DataSource のBeanを2つ作るかと言うと、自分で明示的に DataSource のBeanを2つ作ればよいのです。
方法は大きく2つです。

方法① DataSource などのサブクラスを各DB用に作る
方法② @Quali...]]></description><link>https://zenn.dev/masatoshi_tada/articles/3db63f1d0e2014</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/3db63f1d0e2014</guid><pubDate>Tue, 13 Aug 2024 04:31:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6CN1hik6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25A7DataSource%25E3%2581%25AEBean%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Spring Security 5.4〜6.0でセキュリティ設定の書き方が大幅に変わる件]]></title><description><![CDATA[
 この記事について
最近（5.4〜6.0）のSpring Securityでは、セキュリティ設定の書き方が大幅に変わりました。その背景と、新しい書き方を紹介します。
非推奨になったものは、将来的には削除される可能性もあるため、なるべく早く新しい書き方に移行することをおすすめします。（既に削除されたものもあります）
この記事は、Spring Securityのアーキテクチャの理解（Filter Chain、 AuthenticationManager 、 AccessDecisionManager など）を前提としています。あまり詳しくない方は、まずopengl_8080さんのブログを読...]]></description><link>https://zenn.dev/masatoshi_tada/articles/9f9b67768eb484</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/9f9b67768eb484</guid><pubDate>Tue, 13 Aug 2024 04:27:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--odrlOK7e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Security%25205.4%25E3%2580%259C6.0%25E3%2581%25A7%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%258C%25E5%25A4%25A7%25E5%25B9%2585%25E3%2581%25AB%25E5%25A4%2589%25E3%2582%258F%25E3%2582%258B%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[JavaでNIO.2を使いつつZIP圧縮＆解凍]]></title><description><![CDATA[
 環境
JDK 17を使っています。たぶん、多少バージョンが違っていても同じように動くと思います。

 圧縮
test1.txt・test2.txt・test3.txtを圧縮して、test.zipを作成します。

import文
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.List;
impor...]]></description><link>https://zenn.dev/masatoshi_tada/articles/4e668b7d42da68</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/4e668b7d42da68</guid><pubDate>Tue, 13 Aug 2024 04:27:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WcLtRsXY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A7NIO.2%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%25A4%25E3%2581%25A4ZIP%25E5%259C%25A7%25E7%25B8%25AE%25EF%25BC%2586%25E8%25A7%25A3%25E5%2587%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Javaでクラスパス上のファイルをPathとして取得する]]></title><description><![CDATA[
 環境
JDK 17を使っています。たぶん、多少バージョンが違っていても同じように動くと思います。

 今回のフォルダ構造
今回はsrc/main/resources配下のファイルを取得したいとします。
$ tree .
.
└── src
    └── main
        ├── java
        │   └── foo
        │       └── Main.java
        └── resources
            ├── sample1.txt
            └── bar
                └── baz
 ...]]></description><link>https://zenn.dev/masatoshi_tada/articles/dbec9e37c654c6</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/dbec9e37c654c6</guid><pubDate>Tue, 13 Aug 2024 04:24:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vr9qUX-m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2591%25E3%2582%25B9%25E4%25B8%258A%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592Path%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[pom.xmlに書かれているmaven pluginをリストで表示する]]></title><description><![CDATA[mavenのプロジェクトでインストールされているmavenのプラグインをリストで
表示したい。
ここで初めに思いつくのは下記のコマンドを使うことだろう。
mvn dependency:resolve-plugins
しかし、この方法だと以下の問題がある。

親でインストールされているプラグインも表示される。
pom.xmlに書かれているmaven pluginと依存関係があるプラグインも表示される。

なので、pom.xmlに書かれているプラグイン以外もたくさん表示される。
pom.xmlに書かれているmaven pluginのみを表示する方法はmavenに無い(多分)ので、
頑張ってテ...]]></description><link>https://zenn.dev/oto/articles/379d836cd00d90</link><guid isPermaLink="true">https://zenn.dev/oto/articles/379d836cd00d90</guid><pubDate>Tue, 13 Aug 2024 03:48:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9173_wit--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pom.xml%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258B%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258Bmaven%2520plugin%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otogawa%2520Katsutoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiZTMxMWQ2YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otogawa Katsutoshi(oto)</dc:creator></item><item><title><![CDATA[データ構造]]></title><description><![CDATA[
 スタック
一時的にデータを退避させたい時に有効なデータ構造。データの最後に入ったものが最初に取り出されるLIFO(Last in First Out)の規則に基づきデータを管理する。
JavaではStackクラスで実装することができる。
https://docs.oracle.com/javase/jp/11/docs/api/java.base/java/util/Stack.html
以下は逆ポーランド記法で計算するプログラムの例である。スタックを利用している。
import java.util.Scanner;
import java.util.Stack;

public c...]]></description><link>https://zenn.dev/taxinumber1729/articles/0f93743036ab72</link><guid isPermaLink="true">https://zenn.dev/taxinumber1729/articles/0f93743036ab72</guid><pubDate>Mon, 12 Aug 2024 09:16:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y_7dRES0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B5%25A4%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwOWE3MmQ3NTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>赤ちゃん</dc:creator></item><item><title><![CDATA[Spring for GraphQLで日付型を設定しGraphQL Code Generatorで型として使用できるようにする]]></title><description><![CDATA[
 概要
Spring for GraphQLのスキーマ定義で日付型を設定し、それをGraphQL Code Generatorでコード出力して日付型として使用できるようにする方法のメモ書きです。

 対応方針

Spring for GraphQLで日付型を使用するために[SpringBoot2.7][GraphQL]カスタムscalar型を利用できるようにするで紹介されている、graphql-java-extended-scalarsのライブラリを使用することにします。ライブラリの内容としてはgraphql-java-extended-scalarsのReadmeにある通り、日付型に...]]></description><link>https://zenn.dev/someone7140/articles/4b4c01f6823bf4</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/4b4c01f6823bf4</guid><pubDate>Sun, 11 Aug 2024 08:07:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xwba0vZ0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520for%2520GraphQL%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E5%259E%258B%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597GraphQL%2520Code%2520Generator%25E3%2581%25A7%25E5%259E%258B%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[Java製クローラーフレームワークの実装]]></title><description><![CDATA[
 イントロダクション
有名なクローラーフレームワークに、Scrapyがあります。今回、Javaで同じような動きをするフレームワークを実装してみました。
アーキテクチャは、完全にScrapyのアーキテクチャ概観ページから真似しています。
https://doc-ja-scrapy.readthedocs.io/ja/latest/topics/architecture.html
フレームワーク名はKaibutsuにしました。
https://github.com/heruoji/Kaibutsu
Scrapyのコード自体は全く見ておらず、あくまで勉強用に想像して実装した偽物なので、悪しか...]]></description><link>https://zenn.dev/currypun/articles/f1857840deba00</link><guid isPermaLink="true">https://zenn.dev/currypun/articles/f1857840deba00</guid><pubDate>Sat, 10 Aug 2024 10:43:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vk6jjBn3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E8%25A3%25BD%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2582%258B%25E3%2581%258A%25E3%2583%25BC%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYWFiNjI2ODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へるおーじ</dc:creator></item><item><title><![CDATA[Resilience4jドキュメントの日本語訳（非公式）を公開しました]]></title><description><![CDATA[
 Resilience4jとは
Resilience4jは、Javaで実装されたサーキットブレイカーライブラリです。サーキットブレイカーとして有名なNetflixのHystrixは既に開発がメンテナンスモードに入っていて、積極的には開発がされていません。Resilience4jはその代替となるライブラリとして期待されています。
リポジトリ → https://github.com/resilience4j/resilience4j
公式ドキュメント（英語） → https://resilience4j.readme.io
ざっくりと理解したい場合は、僕がPivotal SpringOn...]]></description><link>https://zenn.dev/masatoshi_tada/articles/a8b44736f3c48b</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/a8b44736f3c48b</guid><pubDate>Sat, 10 Aug 2024 01:41:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hyArGeAW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Resilience4j%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E8%25A8%25B3%25EF%25BC%2588%25E9%259D%259E%25E5%2585%25AC%25E5%25BC%258F%25EF%25BC%2589%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Springのプロファイル機能、そしてSpring Bootのapplication.properties]]></title><description><![CDATA[
 Springのプロファイル機能
プロファイルとは、DIコンテナ内のBeanのグループです。任意のグループ名を指定できます。
Beanにプロファイルを指定するには、 @Profile アノテーションを利用します。

DevBean.java
@Profile("dev")
@Component
public class DevBean {
}


ProductionBean.java
@Profile("production")
@Component
public class ProductionBean {
}

@Profile が付加されていないBeanは、特定のプロファイルに...]]></description><link>https://zenn.dev/masatoshi_tada/articles/3ebda7aa28d8b6</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/3ebda7aa28d8b6</guid><pubDate>Sat, 10 Aug 2024 01:41:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mpTsDWtY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%2581%25E3%2581%259D%25E3%2581%2597%25E3%2581%25A6Spring%2520Boot%25E3%2581%25AEapplication.properties%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[令和時代に「Spring入門」「Spring徹底入門」を読むとき気をつけるべきN個のこと]]></title><description><![CDATA[
 この記事について
事ある度に書いたり言ったりしている通り、2020年を迎えようとしている現在でも、信頼できるSpring関連書籍は下記の2冊しかありません。

Spring徹底入門
改訂新版Spring入門

2冊（以下「書籍」）とも超良書なのですが、どちらもリリースされたのが2016年で、対応しているSpringのバージョンが4.2と古くなっています。
2019年末時点での最新版はSpring 5.2です。この記事では、上記書籍を令和の今読む際、特に気をつけるべき点をいくつか紹介していきます。

4.x-&gt;5.xの差分すべてについては、GitHubのWikiを確認してください...]]></description><link>https://zenn.dev/masatoshi_tada/articles/1c19b429069632</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/1c19b429069632</guid><pubDate>Sat, 10 Aug 2024 01:40:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NBR2RY2T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25A4%25E5%2592%258C%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AB%25E3%2580%258CSpring%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2580%258CSpring%25E5%25BE%25B9%25E5%25BA%2595%25E5%2585%25A5%25E9%2596%2580%25E3%2580%258D%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%25E3%2581%25A8%25E3%2581%258D%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258DN%25E5%2580%258B%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmZTNhODA2MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item></channel></rss>