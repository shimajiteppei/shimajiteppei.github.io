<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 16 May 2024 11:27:28 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[話題のChatGPTで生成されたアプリを作ってみた(TypeScriptを使ったToDoリストアプリ制作)]]></title><description><![CDATA[
 はじめに
こちらの記事は、プログラミング初学者が書いています。内容の保証性は確立していません。
また、ChatGPTで作成したコードを TypeScript 初学者がアウトプットするためのものです。

 この記事ではなくChatGPTを見つつ学びたい場合
以下の2つをChatGPTに質問し、返答を元に実行してください。

TypeScriptの学習のために簡単なアプリを作りたいのですが、どんな案がありますか？
ToDoリストアプリの作り方を教えてください。


 ChatGPTに従ってTo Doアプリの作成 〜制作編〜

 0.このチュートリアルに必要なもの
以下の4つが必要になりま...]]></description><link>https://zenn.dev/0o0zk/articles/589e3af07a9d89</link><guid isPermaLink="true">https://zenn.dev/0o0zk/articles/589e3af07a9d89</guid><pubDate>Thu, 16 May 2024 10:44:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oci8OfH8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEChatGPT%25E3%2581%25A7%25E7%2594%259F%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FToDo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2588%25B6%25E4%25BD%259C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3M2M3NTI5MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuki</dc:creator></item><item><title><![CDATA[【オブジェクト指向,is関数,リファクタリングベストプラクティス】JavaScript,Go,TypeScript, Ruby,Python]]></title><description><![CDATA[
 前回のおさらい
前回: https://zenn.dev/llc_starhacks/articles/98cd2b28eab887

オブジェクト指向を取り入れると: 階層構造でオブジェクトを表現できるのでした

例 users[].followers[].remove(userId)

例 users[].medias[].likes[].push({ userId })

例 users[].medias[].comments[].push({ userId, text })



「フォローしているユーザー」は followUserではありません。

followUser: ...]]></description><link>https://zenn.dev/llc_starhacks/articles/e0890f52c443f2</link><guid isPermaLink="true">https://zenn.dev/llc_starhacks/articles/e0890f52c443f2</guid><pubDate>Thu, 16 May 2024 07:22:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--po25yGC9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%252Cis%25E9%2596%25A2%25E6%2595%25B0%252C%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2580%2591JavaScript%252CGo%252CTypeScript...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:llc_starhacks%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2QxODAxZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>llc_starhacks</dc:creator></item><item><title><![CDATA[サバイバルTypescript　試してみた]]></title><description><![CDATA[
 はじめに
こちらの記事は、プログラミング初学者が書いています。内容の保証は確立していません。
また、サバイバル TypeScript で学習したものを TypeScript 初学者がアウトプットするためのものです。

 作って学ぶTypeScript

 Reactでいいねボタンを作ろう

 参考
https://typescriptbook.jp/tutorials/react-like-button-tutorial

 冒頭の要約
Reactの3大特徴

仮想DOM (Virtual DOM)



通常のDOMはHTMLをJavaScriptから操作する仕組みで、リアルタイム...]]></description><link>https://zenn.dev/0o0zk/articles/ac65cca1f3b4bd</link><guid isPermaLink="true">https://zenn.dev/0o0zk/articles/ac65cca1f3b4bd</guid><pubDate>Thu, 16 May 2024 05:34:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tIIy6q3R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25ABTypescript%25E3%2580%2580%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3M2M3NTI5MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuki</dc:creator></item><item><title><![CDATA[フロントエンドのテスト環境を作る（Bun+Jest）]]></title><description><![CDATA[
 はじめに
フロントエンド開発において、コードの品質を保つことは重要です。特に、ユーザーインターフェースの変更や機能の追加が頻繁に行われる現代のWeb開発では、予期しないバグが発生することを防ぐためにテストの導入が欠かせません。
しかし、過去にはフロントエンドテストがあまり重視されていなかった時代もありました。そのため、バグが発生しやすく、保守が困難なコードが多く存在していました。
この記事では、シンプルなフロントエンドテストに関する部分を書こうと思います。テストのレシピブックとしても使っていこうと思っているので、随時この記事を更新or新規記事作成していこうと思っています！

 環境に...]]></description><link>https://zenn.dev/salvage0707/articles/375b8994c1e05e</link><guid isPermaLink="true">https://zenn.dev/salvage0707/articles/375b8994c1e05e</guid><pubDate>Thu, 16 May 2024 00:20:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QhcCBhoa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588Bun%252BJest%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%258B%25E3%2581%25B9%25E3%2581%2584%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxOGVmZTY1YzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まるべいじ</dc:creator></item><item><title><![CDATA[CodeRabbit お試ししたくて面談管理ツールを作ってみる　（その13：フォームのコンポーネント化とバグ修正）]]></title><description><![CDATA[
 本日の内容

面談一覧のIndex.jsxの検索が非同期になっており、api経由が面倒だったので普通のsubmitに戻した
パッケージの依存関係を修正
selectとinputをコンポーネント化して再利用できるようにした（つもり）


 簡単な要約

先日jsxに面談一覧のIndex.jsxを置き換えたのは良かったんですが、検索による一覧表示がGET:/api/interviews/による非同期更新仕様に表側だけなってAPIの準備がされてなかったため、普通のsubmitに戻しました。
しかし最近の開発はフロントとバックの実装方針をしっかり固めて実装しないとある時はAPI・またあるとき...]]></description><link>https://zenn.dev/wdknwdkn/articles/3848a6fd412f96</link><guid isPermaLink="true">https://zenn.dev/wdknwdkn/articles/3848a6fd412f96</guid><pubDate>Wed, 15 May 2024 15:19:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J4stKPx9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeRabbit%2520%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25A6%25E9%259D%25A2%25E8%25AB%2587%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2580%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE13%25EF%25BC%259A%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E5%258C%2596%25E3%2581%25A8%25E3%2583%2590%25E3%2582%25B0%25E4%25BF%25AE%25E6%25AD%25A3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2593%25EF%25BC%25A0%25E9%25A7%2586%25E3%2581%2591%25E5%2587%25BA%25E3%2581%2597%25E8%2582%25B2%25E3%2581%25A6%25E3%2582%258BEM%25E5%259F%25B7%25E8%25A1%258C%25E5%25BD%25B9%25E5%2593%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JISkF3QXNGeGxMY29sdEpjUHRpN0IwRWpTdlZ0MzFkWnluQ2tmUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わだけん＠駆け出し育てるEM執行役員</dc:creator></item><item><title><![CDATA[JavaScript まわりのスタックの正式名称がわからないよ～]]></title><description><![CDATA[
 Nuxt
現在の公式サイトのドメインは nuxt.com で名前も Nuxt だが、以前は nuxtjs.org がドメインで名前は Nuxt.js だった。
TypeScript の標準サポートにあわせて変わったらしい。
https://nuxt.com/

 Angular
こちらも TypeScript 推奨になったタイミングで AngularJS から Angular になった。
https://angular.dev/

 React
公式サイトの表記は reactjs.org の時代から現在の react.dev まで一貫して React であるように見えるものの、カンフ...]]></description><link>https://zenn.dev/15/articles/c5a7f16777d7f6</link><guid isPermaLink="true">https://zenn.dev/15/articles/c5a7f16777d7f6</guid><pubDate>Wed, 15 May 2024 12:30:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SvLzRj5B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2581%25BE%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E6%25AD%25A3%25E5%25BC%258F%25E5%2590%258D%25E7%25A7%25B0%25E3%2581%258C%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:15%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCd2p5Q0htOUYzcmF6SW9SNU1jcXVidDc1cFdBUzdlQlRJYnpiYWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>15</dc:creator></item><item><title><![CDATA[【JavaScript】演算子]]></title><description><![CDATA[JavaScriptにある様々な演算子。
最近、新しく実装したり改修したりしていく中で、どうだっけ？となることが何度かあったので、よく見かける演算子をまとめておこうと思います。

 算術演算子( +, -, *, /, % )



+ : 加算。2つの値を足します。

例: 5 + 3 は 8

💡 文字列の結合にも使えます。

"Hello " + "World" は "Hello World"






- : 減算。一方から他方を引きます。

例: 10 - 4 は 6




* : 乗算。2つの値を掛け合わせます。

例: 3 * 4 は 12




/ : 除算。被除数...]]></description><link>https://zenn.dev/n_haru2/articles/a2da64e6369dcf</link><guid isPermaLink="true">https://zenn.dev/n_haru2/articles/a2da64e6369dcf</guid><pubDate>Wed, 15 May 2024 12:12:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ioyOQUW_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:N%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4NmZjY2ZlMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>N</dc:creator></item><item><title><![CDATA[【JS】 innerHTMLとtextContentの違い]]></title><description><![CDATA[js勉強中にinnerHTMLとtextContentの違いや使い分けがよく分からなくなり調べてみた

 innerHTMLとは
要素に含まれるすべてのテキストを扱う（htmlタグも含む!!）

 textContentとは
選択した要素、またその全ての子要素のテキストを扱う

 違いを表示してみる
containerクラスのDOMを取得して、それぞれどのような値が取れるのかを確認！
&lt;body&gt;
  &lt;div class="container"&gt;
    &lt;div class="text1"&gt;テストです&lt;/div&gt;
    &lt;div...]]></description><link>https://zenn.dev/nami_06063/articles/546ecee823359c</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/546ecee823359c</guid><pubDate>Wed, 15 May 2024 11:33:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5uCJLrvl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591%2520innerHTML%25E3%2581%25A8textContent%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[JavaScript + Vite + Vue で highlight.js を使う]]></title><description><![CDATA[ちょっと手間取ったのでメモ。npm で管理するとする。npm が必要。node に付いて来る。macOS なら
brew install node
などとなる。次に
npm create vite@latest my-project
# なにでプロジェクトを作るか聞かれるので、答える:
# フレームワークは Vue を
# バリアントは JavaScript を選択する。
cd my-project
npm install highlight.js
npm install @highlightjs/vue-plugin
あとは、highlight.js と highlight.js の ...]]></description><link>https://zenn.dev/paalon/articles/a2ef5fbb032522</link><guid isPermaLink="true">https://zenn.dev/paalon/articles/a2ef5fbb032522</guid><pubDate>Wed, 15 May 2024 04:53:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yx47MjlT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%252B%2520Vite%2520%252B%2520Vue%2520%25E3%2581%25A7%2520highlight.js%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Paalon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4ZWViZDI3YTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Paalon</dc:creator></item><item><title><![CDATA[JavaScriptのProxyちょいまとめ]]></title><description><![CDATA[
 JavaScriptにはProxyというのがあるらしい
Honoの作者の方が、Xで「RPCがJSのProxyで動いている」といったつぶやきを見ました。JSのProxy...??と気になったので、少し調べてみました。

 JavaScriptのProxy

 Proxyって何
Proxy|MDN

Proxy オブジェクトにより別のオブジェクトのプロキシーを作成することができ、そのオブジェクトの基本的な操作に介入したり再定義したりすることができます。

JavaScriptのProxyは、オブジェクトに対する基本的な操作（プロパティの取得、設定、削除、関数の呼び出しなど）をインターセプ...]]></description><link>https://zenn.dev/salvage0707/articles/89b644e588e6ca</link><guid isPermaLink="true">https://zenn.dev/salvage0707/articles/89b644e588e6ca</guid><pubDate>Wed, 15 May 2024 00:20:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PsaTHESY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEProxy%25E3%2581%25A1%25E3%2582%2587%25E3%2581%2584%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%258B%25E3%2581%25B9%25E3%2581%2584%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxOGVmZTY1YzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まるべいじ</dc:creator></item><item><title><![CDATA[AbortControllerで任意のPromiseをrejectしてみる]]></title><description><![CDATA[
 AbortControllerとは
AbortControllerというものがある．
https://developer.mozilla.org/ja/docs/Web/API/AbortController
これは主にFetch APIを中断する目的で用いられるオブジェクトだが，このオブジェクトの挙動自体は至極単純で，abortメソッドを呼ぶことでAbortControllerオブジェクトが持つAbortSignalに中断したいことを示すイベントが通知されるだけである．
const controller = new AbortController();
controller.sig...]]></description><link>https://zenn.dev/eyrin/articles/54ea7dca0d76d2</link><guid isPermaLink="true">https://zenn.dev/eyrin/articles/54ea7dca0d76d2</guid><pubDate>Tue, 14 May 2024 23:01:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O4Qo14cJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AbortController%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AEPromise%25E3%2582%2592reject%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25EF%25BD%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWx5OUpNbWRuZEkxX0NzYllMamJ2eWxhM0ttSE1zbVp3WmdnODZZdDBFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りｎ</dc:creator></item><item><title><![CDATA[生成 AI 機能開発を高速化する Genkit を用いて Function Calling を実装してみた]]></title><description><![CDATA[
 この記事について
Google I/O 2024 にて Genkit が発表されました。Genkit を使って Function Calling を実装してみたので紹介しようと思います。

 Genkit とは
Genkit は生成 AI 機能を搭載したアプリケーションの開発を支援するオープンソースのフレームワークです。LangChain を使ったことがある方は、LangChain のように単一のインターフェースで複数の生成 AI モデルに対応できるフレームワークだとイメージしてもらえると分かりやすいかと思います。
Genkit は Firebase チームが開発しており、フレームワ...]]></description><link>https://zenn.dev/tanabee/articles/e05f722c7cbc6c</link><guid isPermaLink="true">https://zenn.dev/tanabee/articles/e05f722c7cbc6c</guid><pubDate>Tue, 14 May 2024 22:58:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dylmrLMk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590%2520AI%2520%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2520Genkit%2520%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%2520Function%2520Calling%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2520Tanabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjNjU1YzM3ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuki Tanabe</dc:creator></item><item><title><![CDATA[XRPLのDEX（分散型取引所）に触れてみよう]]></title><description><![CDATA[
 はじめに
XRPL（XRP Ledger）は、ネイティブな分散型取引所（DEX）機能を提供しており、ユーザーはオファー（注文）を作成して資産を売買することができます。
本記事では「XRPLのDEXに触れてみよう！」目的に、テストネットで実際にオファー（注文）を送信するトランザクションの作成・確認、キャンセル方法までを解説します。

 準備
基本的に、ネイティブ通貨であるXRP以外のトークンを送信する際には、通貨コードとissuerを指定する必要があります。
学習にあたって、毎回独自に用意していると学習においては効率が悪いため、既存の発行者をあらかじめ特定し、用意しておくことで効率化を...]]></description><link>https://zenn.dev/nabe3/articles/7ee2453bee5169</link><guid isPermaLink="true">https://zenn.dev/nabe3/articles/7ee2453bee5169</guid><pubDate>Tue, 14 May 2024 21:14:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XSM3sDTZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XRPL%25E3%2581%25AEDEX%25EF%25BC%2588%25E5%2588%2586%25E6%2595%25A3%25E5%259E%258B%25E5%258F%2596%25E5%25BC%2595%25E6%2589%2580%25EF%25BC%2589%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nabe3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjM2ZDU5MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nabe3</dc:creator></item><item><title><![CDATA[オブジェクト指向]]></title><description><![CDATA[
 迷ったときはjQueryを参考にせよ
$(A).appendTo(B)
$(A).follow(B) // AがBをフォローする
主語.動詞(目的語)

 どんなメソッドの形がシンプルかな？
要件: 「ユーザーAがユーザーBをフォローする」
A.  userA.followings.push(userB.uid);
B.  userA.followings.set(userB.uid).set(userC.uid).push(); // バッジ処理可能な形
C.  userA.setFollowing(userB.uid);
D.  setFollowing(userA.uid, u...]]></description><link>https://zenn.dev/llc_starhacks/articles/98cd2b28eab887</link><guid isPermaLink="true">https://zenn.dev/llc_starhacks/articles/98cd2b28eab887</guid><pubDate>Tue, 14 May 2024 16:48:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U6lLiKeB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:llc_starhacks%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4M2QxODAxZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>llc_starhacks</dc:creator></item><item><title><![CDATA[令和のHTML / CSS / JavaScriptの書き方50選]]></title><description><![CDATA[Web制作の技術は日々進化しており、会社やプロジェクトによっては昨今の環境に適さない書き方をしているケースも時折見受けられます。
そこで今回は「2024年のWeb制作ではこのようにコードを書いてほしい！」という内容をまとめました。
質より量で、まずは「こんな書き方があるんだ」をこの記事で伝えたかったので、コードの詳細はあまり解説していません。なので、具体的な仕様などを確認したい方は参考記事を読んだりご自身で調べていただけると幸いです。
!
当記事では「iOS Safari バージョン15系以上」でサポートされている技術を基本的に紹介しています。しかし、15系や16系でサポートされていない...]]></description><link>https://zenn.dev/necscat/articles/bc9bba54babaf5</link><guid isPermaLink="true">https://zenn.dev/necscat/articles/bc9bba54babaf5</guid><pubDate>Mon, 13 May 2024 10:10:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--insZ6hmG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25A4%25E5%2592%258C%25E3%2581%25AEHTML%2520%252F%2520CSS%2520%252F%2520JavaScript%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B950%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:dadada%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3MjZkNzYwMWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258D%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwMWFkMzQ1M2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dadada</dc:creator></item><item><title><![CDATA[JQueryでスライドショー]]></title><description><![CDATA[sprict.js
const opt = {
  loop: true, 
   autoplay: {
    delay: 5000,
  },
}
optという定数を定義し、オブジェクトを代入しています。
このオブジェクトはSwiperの設定を含んでいます。
loop: trueは、スライドショーがループ再生されることを意味します。
最後のスライドの次は最初のスライドに戻ります。
autoplay: { delay: 5000 }は、スライドショーが自動的に再生されることを意味します。
delay: 5000は、各スライドが5000ミリ秒（5秒）表示されてから次のスライドに移動す...]]></description><link>https://zenn.dev/makoto_niko/articles/c84582f67b1d1a</link><guid isPermaLink="true">https://zenn.dev/makoto_niko/articles/c84582f67b1d1a</guid><pubDate>Mon, 13 May 2024 06:36:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---pzbf-XN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JQuery%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:niko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzY2Q4NTU1N2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>niko</dc:creator></item><item><title><![CDATA[未経験から3年で年収1000万円のフリーランスエンジニアに転職する方法！完全ロードマップ！]]></title><description><![CDATA[Step1：Html CSS を学習する
Step2：JavaScript を学習する
Step3：React を学習する
Step4：ポートフォリオを作成する
Step5：正社員エンジニアになる（月収25万）
Step6：フリーランスエンジニアになる（月収50万）
Step7：単価を上げる（月収80万）
https://magicgifted.com/roadmap
]]></description><link>https://zenn.dev/hilcrhymer78787/articles/fea2424020f182</link><guid isPermaLink="true">https://zenn.dev/hilcrhymer78787/articles/fea2424020f182</guid><pubDate>Mon, 13 May 2024 06:02:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c9My20rj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%25AA%25E7%25B5%258C%25E9%25A8%2593%25E3%2581%258B%25E3%2582%25893%25E5%25B9%25B4%25E3%2581%25A7%25E5%25B9%25B4%25E5%258F%258E1000%25E4%25B8%2587%25E5%2586%2586%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AB%25E8%25BB%25A2%25E8%2581%25B7%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2581%25E5%25AE%258C%25E5%2585%25A8%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ren%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MDc5MjQ3NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ren</dc:creator></item><item><title><![CDATA[TSKaigi 2024で発表した内容の元ネタ「なぜZustand TypeScript実装はこんなに醜いのか」]]></title><description><![CDATA[TSKaigi 2024で短い発表をしましたが、これには元ネタというかオリジナルの記事があります。
https://blog.axlight.com/posts/why-zustand-typescript-implementation-is-so-ugly/
ChatGPTに翻訳してもらいました👇


 なぜZustand TypeScript実装はこんなに醜いのか
ちなみに、JavaScript実装はとてもクリーンです

 序論
注: この投稿はZustandライブラリのTypeScript実装に焦点を当てています。
ユーザーコードには影響しませんが、クリーンに保つべきです。
Zus...]]></description><link>https://zenn.dev/dai_shi/articles/a9fa767105ca2d</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/a9fa767105ca2d</guid><pubDate>Mon, 13 May 2024 05:57:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ws87d9tQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TSKaigi%25202024%25E3%2581%25A7%25E7%2599%25BA%25E8%25A1%25A8%25E3%2581%2597%25E3%2581%259F%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%25AE%25E5%2585%2583%25E3%2583%258D%25E3%2582%25BF%25E3%2580%258C%25E3%2581%25AA%25E3%2581%259CZustand%2520TypeScript%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AF%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25AB%25E9%2586%259C%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOGYxNDU2YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[Web開発]]></title><description><![CDATA[全体像から細部まで  詳細に、 簡潔に、 本質的に。
1. これまで別々に学習されていたHTMLとCSS、JavaScriptを同時に有機的に学習する。
2. Webページ作成だけでなく、実際にアップロードする方法・メンテナンス・セキュリティ・APIまで、全て詳細かつ網羅的に。
3. 世界最先端の技術を、日本語で紹介する。]]></description><link>https://zenn.dev/yunaimatsu/books/acae645f13cf4d</link><guid isPermaLink="true">https://zenn.dev/yunaimatsu/books/acae645f13cf4d</guid><pubDate>Mon, 13 May 2024 01:39:49 GMT</pubDate><dc:creator>ゆないまつ</dc:creator></item><item><title><![CDATA[【GAS】Discord Botのお手軽な実装方法]]></title><description><![CDATA[
 準備

 Discordチャンネルのウェブフックを発行
Botのメッセージを飛ばしたいチャンネルに外部からアクセスためのウェブフックURLを発行する

チャンネル設定
ウェブフックの作成 (連携サービス)
ウェブフックURLをコピー

画像での説明

チャンネル設定

ウェブフックの作成（連携サービス）

ウェブフックURLをコピー


 GASの新規プロジェクトを作成
下記のリンクカードをクリックして、空のプロジェクトを作る
https://script.google.com/home/projects/create?template=default

 権限の承認
UrlFetc...]]></description><link>https://zenn.dev/rrisland/articles/9d28cfddb1ffb7</link><guid isPermaLink="true">https://zenn.dev/rrisland/articles/9d28cfddb1ffb7</guid><pubDate>Sun, 12 May 2024 16:30:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k0GFhbn---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591Discord%2520Bot%25E3%2581%25AE%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AA%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rrisland%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMWM3OTFkYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rrisland</dc:creator></item></channel></rss>