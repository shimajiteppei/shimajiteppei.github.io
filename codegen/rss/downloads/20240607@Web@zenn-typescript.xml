<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 07 Jun 2024 12:04:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Biome1.8】conventionsオプションで命名規則をカスタマイズ！試してみる。]]></title><description><![CDATA[こんにちは！
Biome...使ってますか？ 速度ももちろん早くて快適なのですが、やっぱりなんといっても設定の少なさが本当に楽ですね...。
そんな愛すべきBiomeからv1.8がリリースされました。Yatta!
筆者待望のCSSのlinting、formattingがサポートされたり嬉しい対応はいろいろあったのですが、一つ気になる機能がありました...。
それが、useNamingConventionのconventionsオプションです。今回はその機能についてザックリ試してわかったことなどを紹介したいと思います。
https://biomejs.dev/linter/rules/us...]]></description><link>https://zenn.dev/gemcook/articles/05ac5e0570cf72</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/05ac5e0570cf72</guid><pubDate>Fri, 07 Jun 2024 05:32:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zY4ZWk5z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Biome1.8%25E3%2580%2591conventions%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25EF%25BC%2581%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B2%25E3%2582%2587%25E3%2581%25B7%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MmQ2ODA0Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひょぷて</dc:creator></item><item><title><![CDATA[クソしょうもないdiscord botを作って、身内鯖で稼働させてる話 【初学者】]]></title><description><![CDATA[初投稿です。文章をまともに書いたことが無いので分かりづらい文章であろうことを先に謝罪しておきます。

 どんなBotか
前置きはなしで早速見てもらいます。

シンプルにdiscordのテキストチャンネルに時報してくれるというものです。
他にも、スラッシュコマンドを使うことでおみくじを引くことができます。
いかにも初心者が作った感じがしますよねｗ
Node.jsを使用して動かしている(このBotはbunで動いている)のですが、基本がたくさん詰まってていい勉強になるBotを作れたと思うのでNode.jsやjavascriptの初学者でも同じようなものなら作れるようにと思って紹介します。
完全...]]></description><link>https://zenn.dev/miyabitti256/articles/0c82573e0df645</link><guid isPermaLink="true">https://zenn.dev/miyabitti256/articles/0c82573e0df645</guid><pubDate>Thu, 06 Jun 2024 17:15:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---HdcsljZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2582%25BD%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%25E3%2582%2582%25E3%2581%25AA%25E3%2581%2584discord%2520bot%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E8%25BA%25AB%25E5%2586%2585%25E9%25AF%2596%25E3%2581%25A7%25E7%25A8%25BC%25E5%2583%258D%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2582%258B%25E8%25A9%25B1%2520%25E3%2580%2590%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyabitti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSktrbWg3dHRhdWFjOEFWLTBQVnJkMld3SXI4ZmdHN29fek5aRkJScFFmYXlnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyabitti</dc:creator></item><item><title><![CDATA[VitestでMockを使うための逆引きレシピ集]]></title><description><![CDATA[
 はじめに
最近Nest.js×Vitestを使ったプロジェクトのテストコードを書く機会がありました。
バックエンドをTypeScriptで書くのが初めてで、モックの書き方がさっぱりわからず困ってしまいました。
そこで勉強のために、普段テストを書くときに使うKotlinのモックライブラリ・Mockkでよく使うメソッドを「Vitestで使うには？」という視点で、いろいろと使い方を身につけようという魂胆です。

 レシピ集
ということで見るべきものはVitestのモックのページなのですが、いかんせんコードがあまりにもサンプルすぎてイメージが湧きません。
またドキュメントらしき正引きになって...]]></description><link>https://zenn.dev/bs_kansai/articles/a5a22aa43aa46b</link><guid isPermaLink="true">https://zenn.dev/bs_kansai/articles/a5a22aa43aa46b</guid><pubDate>Thu, 06 Jun 2024 14:12:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--77oy9clX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vitest%25E3%2581%25A7Mock%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E9%2580%2586%25E5%25BC%2595%25E3%2581%258D%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%2594%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNTU3YjY1MDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kobe.ts%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQ5MmViYmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[BiomeのLintの違反箇所全てにbiome-ignoreを自動挿入するスクリプトを作った]]></title><description><![CDATA[
 背景
最近職場でESLintとPrettierの代わりにBiomeを導入しました。基本的にBiomeのRecommend設定を利用するつもりですが、違反箇所が多すぎるため最初は多くのルールを無効にして導入しました。
違反箇所が多すぎるため、今後ルールを有効化する際に都度手動で修正することは時間がかかりすぎます。このためbiome lint --writeなどを使って自動で修正することになりますが、どのルールでも安全に修正できるわけではありません。しかし、BiomeのLintルール違反箇所にbiome-ignoreコメントを入れてエラーを無視することにすれば挙動を変えずにルールを有効化...]]></description><link>https://zenn.dev/dev_commune/articles/ab57b866d84a3e</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/ab57b866d84a3e</guid><pubDate>Thu, 06 Jun 2024 13:50:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wa0zOu3F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2581%25AELint%25E3%2581%25AE%25E9%2581%2595%25E5%258F%258D%25E7%25AE%2587%25E6%2589%2580%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25ABbiome-ignore%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:isomura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlNmQwZWQ5NGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>isomura</dc:creator></item><item><title><![CDATA[OpenAIのAPIを使ってAPIを作る]]></title><description><![CDATA[OpenAIのAPIを使って架空の海洋生物を作ってくれるAPIを作りました。
https://platform.openai.com/docs/quickstart?context=node
ChatGPTのバージョンはgpt-4oを使用しました。
import OpenAI from "openai"

export const loader: LoaderFunction = async () =&gt; {
  const openai = new OpenAI({
    apiKey: ".env.localから引用してくる",
  })

async function mai...]]></description><link>https://zenn.dev/fjimiz/articles/cfdc677d5e8b2c</link><guid isPermaLink="true">https://zenn.dev/fjimiz/articles/cfdc677d5e8b2c</guid><pubDate>Thu, 06 Jun 2024 08:23:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--slLggSV9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6API%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0YzdMQW5BNWdQMXE0QThZQkxpWkZJdTFVUlU3TDh4WjlDTTRXaDNmRTloPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>F</dc:creator></item><item><title><![CDATA[react-hook-formとzodでnumber型を扱う時の個人的ベストプラクティス]]></title><description><![CDATA[結局フォームでは文字列で扱うのが安定
汎用的なメソッドを用意しておく
const NumberFromString = z
  .string()
  .regex(/^[+-]?\d*\.?\d+$/, { message: "数値を入力してください" })
  .transform(Number);
const NumberFromZenkakuString = z
  .string()
  .transform(zenkkaku2hankaku)
  .pipe(NumberFromString);
const validateTime = z
  .number()
  .in...]]></description><link>https://zenn.dev/blackmax/articles/494195b4165c4b</link><guid isPermaLink="true">https://zenn.dev/blackmax/articles/494195b4165c4b</guid><pubDate>Thu, 06 Jun 2024 07:57:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cX2hd_yh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react-hook-form%25E3%2581%25A8zod%25E3%2581%25A7number%25E5%259E%258B%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AE%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuroma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZTU3MWIzZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kuroma</dc:creator></item><item><title><![CDATA[これで盛り上がること間違いなし？な発表イベント用ツールを作った話]]></title><description><![CDATA[
 背景
2024/06/21にReact 19に関する現地イベントをちょっと変わった内容で開催するのですが、その１つが「参加者全員LT発表」というものです。（実態は全て発表枠なんです）
モチベーションとしては、全員一言は喋ってコミュニケーションの機会を増やし、今後の繋がりを濃く保ちたいという思いがあり、実験的ではありますがやってみることにしました。
今回は20人の参加者に喋ってもらうとして、１人3分の持ち時間を設定しています。
数字的には、20 x 3 = 60分の枠ですが、発表者全員が各々のPCを使うとなると確実に交代するための時間に1,2分を奪われ、接続不良などのトラブルの確率も上...]]></description><link>https://zenn.dev/tell_y/articles/5438c254f239d5</link><guid isPermaLink="true">https://zenn.dev/tell_y/articles/5438c254f239d5</guid><pubDate>Thu, 06 Jun 2024 05:50:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QvXOBGdq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A7%25E7%259B%259B%25E3%2582%258A%25E4%25B8%258A%25E3%2581%258C%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E9%2596%2593%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2597%25EF%25BC%259F%25E3%2581%25AA%25E7%2599%25BA%25E8%25A1%25A8%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E7%2594%25A8%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Teruhisa%2520-%2520T6ADEV%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNDg5NTAyZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Teruhisa - T6ADEV</dc:creator></item><item><title><![CDATA[【React19】Actionたちにどうやって型をつけるのか？試してみる。]]></title><description><![CDATA[こんにちは。
React19での新概念「Action」に強く紐づいた新しい機能がたくさん追加されましたね。
つよつよエンジニアたちが日々投稿してくれる記事を読みながら理解を進める毎日の筆者です🙇
https://ja.react.dev/blog/2024/04/25/react-19
本記事で登場するhookたちについての解説は割愛しますので、詳しく知りたい方は公式のドキュメントに加えて、uhyoさんのzenn本を強くお勧めします。(無料か...。いいのか...。すごいな...。)
https://zenn.dev/uhyo/books/react-19-new

 本記事のモチベ
そ...]]></description><link>https://zenn.dev/gemcook/articles/c358a36d790a42</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/c358a36d790a42</guid><pubDate>Thu, 06 Jun 2024 02:48:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nUpM74vP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React19%25E3%2580%2591Action%25E3%2581%259F%25E3%2581%25A1%25E3%2581%25AB%25E3%2581%25A9%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E5%259E%258B%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B2%25E3%2582%2587%25E3%2581%25B7%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MmQ2ODA0Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひょぷて</dc:creator></item><item><title><![CDATA[Berryを支えるアーキテクチャを紹介します]]></title><description><![CDATA[こんにちは、株式会社Berryの浅沼です！
今回は、開発しているサービスの中からヘルメット治療管理システムのアーキテクチャについて紹介します。医療機関と３Dデータのやり取りをしながらヘルメット治療に関する管理を実現しているWebシステム、そのアーキテクチャの特徴、今後の展望について触れたいと思います。

 システム概要
ヘルメット治療管理システムは、主に以下の3つの機能を持っています。日々、医療機関の方の使いやすさ、見やすさを考えながら開発しています。特に、3Dヘルメットデータを確認するUIなどは、別途、機会があれば技術面を紹介してみたい内容です。

3D頭部データの受信
3Dヘルメット...]]></description><link>https://zenn.dev/berry_blog/articles/51bea2441c5f0e</link><guid isPermaLink="true">https://zenn.dev/berry_blog/articles/51bea2441c5f0e</guid><pubDate>Thu, 06 Jun 2024 01:59:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CR5NT_al--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Berry%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25B5%2585%25E6%25B2%25BC%25E3%2580%2580%25E6%2595%25AC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiMWVhYjdiNDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEBerry%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0ODZkOTY4NWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>浅沼　敬</dc:creator></item><item><title><![CDATA[AIに仕事を奪ってもらう 〜システムにおけるAIの使い所〜]]></title><description><![CDATA[最近、マーモットも気になっているかずうぉんばっとです。「AIに仕事を奪われる…」と言われて久しいですが、実際に「仕事を奪われた〜」という方は、まだまだ少ないのではないでしょうか。
そこで、本記事ではAIに積極的に仕事を奪ってもらった実例をご紹介します。その上で、これまでの筆者の経験で分かった、システムにおけるAIの使い所について私見を述べます。


 奪ってもらう仕事
今回、奪ってもらう仕事は、「ユーザーの事業内容によるメーリングリストへの仕分け」です。
先日、弊社が運営する日程調整ツールの「Nitte」から、人材紹介業向けの新サービス「Nitte人材紹介」をリリースしました。
そこで、...]]></description><link>https://zenn.dev/kazuwombat/articles/2415ad29784519</link><guid isPermaLink="true">https://zenn.dev/kazuwombat/articles/2415ad29784519</guid><pubDate>Wed, 05 Jun 2024 22:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w6CZDBlE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25AB%25E4%25BB%2595%25E4%25BA%258B%25E3%2582%2592%25E5%25A5%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2520%25E3%2580%259C%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BAI%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2589%2580%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%2586%25E3%2581%2589%25E3%2582%2593%25E3%2581%25B0%25E3%2581%25A3%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhMWQwZTBkMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かずうぉんばっと</dc:creator></item><item><title><![CDATA[そろそろリリースされそうなReact 19、6/21までに出てしまうのか？]]></title><description><![CDATA[このツイートによるとしばらくしたら出てもおかしくありませんね。
https://x.com/acdlite/status/1797668537349328923
6/12の交流会より前になるのか後になるのか少し気になるところです。
https://meteor-fan.connpass.com/event/308237/
イベントにはまだ空きがあります（執筆時点）ので、興味ある方はぜひ。ビールとピザが出るかもしれません。
]]></description><link>https://zenn.dev/dai_shi/articles/bcdae1427c2ea7</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/bcdae1427c2ea7</guid><pubDate>Wed, 05 Jun 2024 14:30:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L6RugAas--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%258D%25E3%2581%259D%25E3%2582%258D%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AAReact%252019%25E3%2580%25816%252F21%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[AWS CDK で作成する Lambda に Lambda Insights を対応させる【TypeScript】]]></title><description><![CDATA[ラブグラフでエンジニアをしています横江( @yokoe24 )です！
ラブグラフでは AWS Lambda を活用していて、
そのコードは AWS CDK を使って管理しております。
その中で Lambda Insights の対応で少し手間取りましたので、ここに方法を残しておきます。

 Lambda Insights とは？

『Lambda Insights』 は、
上の画像のように Lambda の実行結果をモニターしてくれる機能です。
メモリ負荷や所要時間を見られますので、
現在のパフォーマンスを見て Lambda の設定や、実行しているコードの改善に役立てられます。

AWS...]]></description><link>https://zenn.dev/lovegraph/articles/06e2ce073431b5</link><guid isPermaLink="true">https://zenn.dev/lovegraph/articles/06e2ce073431b5</guid><pubDate>Wed, 05 Jun 2024 04:38:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UhSNBvxv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520Lambda%2520%25E3%2581%25AB%2520Lambda%2520Insights%2520%25E3%2582%2592%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2580%2590TypeScript%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25A8%25AA%25E6%25B1%259F%25EF%25BC%25A0%25E3%2583%25A9%25E3%2583%2596%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNWYxYmUwYzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A9%25E3%2583%2596%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExMjA2NjYzODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>横江＠ラブグラフ</dc:creator></item><item><title><![CDATA[LangChain で会話履歴を追加（Node.js）]]></title><description><![CDATA[
 はじめに
LLM に過去の会話履歴を覚えさせておくことで、記憶した情報を利用して、より自然な会話を実現できます。
https://js.langchain.com/v0.2/docs/how_to/message_history/
TypeScript / JavaScript での GitHub リポジトリーを公開している実装例はすくないので記事化しました。作業リポジトリはこちらです。
https://github.com/hayato94087/langchain-message_history-sample
LangChain x TypeScript での実装例を以下の記事で...]]></description><link>https://zenn.dev/hayato94087/articles/8d24070fda80c8</link><guid isPermaLink="true">https://zenn.dev/hayato94087/articles/8d24070fda80c8</guid><pubDate>Wed, 05 Jun 2024 00:27:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b0qYC7GM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A7%25E4%25BC%259A%25E8%25A9%25B1%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25EF%25BC%2588Node.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hayato94087%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZTEyZGJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[typescriptの型定義ファイルでMixinを定義したかった]]></title><description><![CDATA[
 はじめに
typescript/javascript万年初心者です。
これはタイトルの通りで、うまいやり方がわからなかったという内容です。
（ご存知の方がいれば教えていただきたい。）

 型定義したい理由
jsを使用しているプロジェクトを開発している中で、ts-checkを使用して解析してもらいたいと思いました。(最近存在を知ったので使いたいだけ)
外部のライブラリを使用しているが，そのライブラリの型定義やソースは非公開でドキュメントだけ存在するのでその仕様をd.tsの型定義ファイルとして用意したいのです。

 問題設定
jsでは以下のような実装をしている。
class AAA ex...]]></description><link>https://zenn.dev/soyukke/articles/8433e143459d05</link><guid isPermaLink="true">https://zenn.dev/soyukke/articles/8433e143459d05</guid><pubDate>Tue, 04 Jun 2024 18:59:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3moQfW1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:typescript%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7Mixin%25E3%2582%2592%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2582%2586%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5MDU4YzBkM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そゆっけ</dc:creator></item><item><title><![CDATA[bunを使用したAPI  proxy（考案レベル）]]></title><description><![CDATA[
 はじめに
現職でバックエンドで簡易的にコーディングできる環境かつバージョン管理を気にしなくても良い環境が欲しいとのことで、基本的にはHTML/CSS/JavaScriptでやることを考えたのですが、開発サーバーを持たせる必要もあったためせっかくなので最近のパッケージマネージャー「bun」を使用してみました。その際の別dockerコンテナのAPIへリクエストする必要があっためproxyをbun内部で完結させたかったためどのようにやったかをメモレベルで記載しておきます。

 やり方

 HTTPサーバー部分でproxy
bunのエントリーポイントであるindex.tsで以下の記述を追加
...]]></description><link>https://zenn.dev/tmo_taka/articles/093574c5c4fbc1</link><guid isPermaLink="true">https://zenn.dev/tmo_taka/articles/093574c5c4fbc1</guid><pubDate>Tue, 04 Jun 2024 14:51:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XaKXwz15--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:bun%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAPI%2520%2520proxy%25EF%25BC%2588%25E8%2580%2583%25E6%25A1%2588%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmo-taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODU2NDc0M2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tmo-taka</dc:creator></item><item><title><![CDATA[CI で `--if-present` は絶対に使うな というお話]]></title><description><![CDATA[タイトルの通りです

 はじめに「CI で --if-present は絶対に使うな」

 事前知識
--if-present は npm script の実行時につけられるオプション。
もし npm script が無くても exit 0 扱いにしてエラーにしない。
https://docs.npmjs.com/cli/v6/commands/npm-run-script

You can use the --if-present flag to avoid exiting with a non-zero exit code when the script is undefined. ...]]></description><link>https://zenn.dev/takashiaihara/articles/62df154fc8a560</link><guid isPermaLink="true">https://zenn.dev/takashiaihara/articles/62df154fc8a560</guid><pubDate>Tue, 04 Jun 2024 10:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pu59ia5a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CI%2520%25E3%2581%25A7%2520%2560--if-present%2560%2520%25E3%2581%25AF%25E7%25B5%25B6%25E5%25AF%25BE%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%2520%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2581%258A%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TakashiAihara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1ZmFkZDAxMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TakashiAihara</dc:creator></item><item><title><![CDATA[TypeScriptは26以上のメンバーを絞り込めない！]]></title><description><![CDATA[この記事で扱うコードは全てTypeScript Playgroundにまとめていますので、
もし実際にコードを確認したい場合はそちらでご確認ください。

 26以上のメンバーを持つMappedTypeで型の絞り込みができない
表題の通りですが、実際にコードを見てもらうのがわかりやすいでしょう。
const maxMap = {
    one: {a: 1},
    two: {b: 2},
    three: {c: 3},
    four: {d: 4},
    ...
    twentyThree: {w:23},
    twentyFour: {x:24},
    ...]]></description><link>https://zenn.dev/cybozu_frontend/articles/fd16d9f427e335</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/fd16d9f427e335</guid><pubDate>Tue, 04 Jun 2024 10:08:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZU_jv4YZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AF26%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25B5%259E%25E3%2582%258A%25E8%25BE%25BC%25E3%2582%2581%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:irico%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZTk4ZmY5ZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>irico</dc:creator></item><item><title><![CDATA[React Hooksもりもり構成のチャット機能を考える[React 19 / Next.js 15]]]></title><description><![CDATA[
 はじめに 🚩
この記事では、Tanstack Query や SWR などのライブラリに頼らずに、React 標準の Hooks をふんだんに活用してチャット機能を実装する方法を紹介します。
RC（Release Candidate）段階ではありますが、React 19 で追加された useActionState と useOptimistic を使うことで、よりインタラクティブで快適な UI/UX を実現する方法を探っていきます。
また筆者の過去の記事ではそれぞれの Hooks に焦点を当てた記事を書いているので、そちらもあわせて参照してください。
https://zenn.dev...]]></description><link>https://zenn.dev/chot/articles/3d9fb562a2fe95</link><guid isPermaLink="true">https://zenn.dev/chot/articles/3d9fb562a2fe95</guid><pubDate>Tue, 04 Jun 2024 07:18:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QPcmpnBP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hooks%25E3%2582%2582%25E3%2582%258A%25E3%2582%2582%25E3%2582%258A%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%255BReact%252019%2520%252F%2520Next.js%252015%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tsuboi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMmU3Zjg2MTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsuboi</dc:creator></item><item><title><![CDATA[[JS]isNaN()ではなくNumver.isNaN()を使う]]></title><description><![CDATA[isNaN()は型変換した結果がNaNであるかを判定する。Numver.isNaN()は型変換せずに値がNaNであるかを判定する。意図しない結果になることを避けるため、Numver.isNaN()を使った方が堅牢なコードになる。
参考
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN
]]></description><link>https://zenn.dev/purratto/articles/df0e3d263320eb</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/df0e3d263320eb</guid><pubDate>Tue, 04 Jun 2024 04:44:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TOS0v3wI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJS%255DisNaN%2528%2529%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%258FNumver.isNaN%2528%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[vuejs/core のソースコードを探検する楽しさ]]></title><description><![CDATA[
 はじめに
フロントエンドエンジニアのhiroです。
エンジニアになって半年が過ぎました。
表題にあるとおり、この記事では vuejs/core のソースコードを探検してみたいと思います。
ソースコードの探検が目的のため、実装の詳しい解説自体は行いません。あらかじめご了承ください。

 目的
本記事はubugeeeiさんの素晴らしい本であるchibivueに出会い、ubugeeeiさんご本人にVueについて直接教えて頂き、Vueのソースコードに興味を持ったことがきっかけで執筆しています。chibivueはVueの基本的な機能を自分で実装することで、Vueについての理解を深め、vuejs...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/413285d321e495</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/413285d321e495</guid><pubDate>Tue, 04 Jun 2024 03:36:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8XzHp0fb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vuejs%252Fcore%2520%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%258E%25A2%25E6%25A4%259C%25E3%2581%2599%25E3%2582%258B%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hiro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwOTUyYzVkNWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiro</dc:creator></item></channel></rss>