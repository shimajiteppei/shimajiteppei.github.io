<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 20 Jun 2024 12:03:32 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[JavaScriptでMapのキーにオブジェクトを使う際の注意点と解決方法]]></title><description><![CDATA[JavaScriptのMapは、キーと値のペアを保持するための便利なデータ構造です。
しかし、キーとしてオブジェクトを使用する場合には注意が必要です。
以下のコードがundefinedを出力する理由とその対策について説明します。
const map = new Map();
map.set({a: 1}, "foo");
console.log(map.get({a: 1})); // "undefined"と表示される

 問題の原因
上記のコードでは、mapにオブジェクト{a: 1}をキーとして値fooをセットしています。
同じ形状のオブジェクト{a: 1}を使って値を取得しようとす...]]></description><link>https://zenn.dev/asamin/articles/46518a672af39a</link><guid isPermaLink="true">https://zenn.dev/asamin/articles/46518a672af39a</guid><pubDate>Thu, 20 Jun 2024 09:03:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x3KWuK9P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7Map%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:asami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YWMyYjMxNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asami</dc:creator></item><item><title><![CDATA[LINE NotifyでCORS対応のWebアプリ - プロトアウト授業用]]></title><description><![CDATA[ブラウザで動作するアプリケーションを作る際にLINEに通知したい時があります。CORSに阻まれてうまく出来ないので回避する方法を紹介しようと思います。]]></description><link>https://zenn.dev/protoout/books/line-notify-cors</link><guid isPermaLink="true">https://zenn.dev/protoout/books/line-notify-cors</guid><pubDate>Thu, 20 Jun 2024 08:59:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vgb882cf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hOTlhNTEzNDhkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>プロトアウト</dc:creator></item><item><title><![CDATA[CodeRabbit お試ししたくて面談管理ツールを作ってみる（その27：権限概念追加）]]></title><description><![CDATA[
 本日の内容

アカウント概念追加
権限制限追加


 簡単な要約
なんだかんだ、運用するにあたってはどういう役割の人が何の情報を閲覧できるかの制限は必須なので、いよいよそこに着手してみました。

 作成した画面


アカウント一覧画面



アカウント詳細画面



権限制限の様子





 プルリク
https://github.com/WdknWdkn/oneonone/pull/58

 CodeRabbitのコメント




 終わり
なんとなくこの後の内容をどう進めるか、迷いが出てきました。
]]></description><link>https://zenn.dev/wdknwdkn/articles/073314ae1da9a2</link><guid isPermaLink="true">https://zenn.dev/wdknwdkn/articles/073314ae1da9a2</guid><pubDate>Wed, 19 Jun 2024 15:11:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FiIn5NKJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CodeRabbit%2520%25E3%2581%258A%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25A6%25E9%259D%25A2%25E8%25AB%2587%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE27%25EF%25BC%259A%25E6%25A8%25A9%25E9%2599%2590%25E6%25A6%2582%25E5%25BF%25B5%25E8%25BF%25BD%25E5%258A%25A0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%25A0%25E3%2581%2591%25E3%2582%2593%25EF%25BC%25A0%25E9%25A7%2586%25E3%2581%2591%25E5%2587%25BA%25E3%2581%2597%25E8%2582%25B2%25E3%2581%25A6%25E3%2582%258BEM%25E5%259F%25B7%25E8%25A1%258C%25E5%25BD%25B9%25E5%2593%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JISkF3QXNGeGxMY29sdEpjUHRpN0IwRWpTdlZ0MzFkWnluQ2tmUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わだけん＠駆け出し育てるEM執行役員</dc:creator></item><item><title><![CDATA[Limo：using構文を用いたファイル読み書きライブラリ]]></title><description><![CDATA[
 はじめに
こんにちは！
今回は、自作のライブラリ「Limo」を紹介します！
このライブラリは、テキスト、JSON、JSONC、TOML、YAMLなどのファイル形式を手軽に読み書きできる小さなツールです。
ファイルの読み書きをusing構文を使って簡単に行えるのが特徴です。
以下はREADMEを翻訳したものをベースにしています。
https://jsr.io/@ryoppippi/limo
https://github.com/ryoppippi/limo

 「Limo」って何？
こんな特徴があります！


簡単なファイル読み書き：わずかなコードでファイルの読み書きを実現

変更の自...]]></description><link>https://zenn.dev/ryoppippi/articles/639ea2cce644ec</link><guid isPermaLink="true">https://zenn.dev/ryoppippi/articles/639ea2cce644ec</guid><pubDate>Wed, 19 Jun 2024 13:52:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pgmkTuZS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Limo%25EF%25BC%259Ausing%25E6%25A7%258B%25E6%2596%2587%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25AA%25AD%25E3%2581%25BF%25E6%259B%25B8%25E3%2581%258D%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoppippi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNDU0MTQ1MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoppippi</dc:creator></item><item><title><![CDATA[【JavaScript】Navigator: userAgentを用いた端末（iPad）判定]]></title><description><![CDATA[
 iPad判定に注意が必要
iPad（OS13以上）で、Safariの設定に「デスクトップ用Webサイトを表示」という機能が追加され、
「デスクトップ用Webサイトを表示」がオンになっている場合、ユーザエージェント判定がipadではなくmacintoshとなるため、ipadの文字列検索のみで判定ができなくなった。
以下条件での判定が必要
【ipad】の文字列を含む || 【macintosh】の文字列を含む &amp;&amp; 「タッチ機能がついているか」

 コード例
const agent = navigator.userAgent.toLowerCase();

const i...]]></description><link>https://zenn.dev/okiiiiiina/articles/70a2b1726b5423</link><guid isPermaLink="true">https://zenn.dev/okiiiiiina/articles/70a2b1726b5423</guid><pubDate>Wed, 19 Jun 2024 07:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e-viWgm7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591Navigator%253A%2520userAgent%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E7%25AB%25AF%25E6%259C%25AB%25EF%25BC%2588iPad%25EF%25BC%2589%25E5%2588%25A4%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%258D%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBtQ21XZ2I4NXBEeEFTZkg2cmZUc2UzTlBUSTVZb2xoZXotaGZvSHZtb0s0QUFpQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おきな</dc:creator></item><item><title><![CDATA[【field-sizing】さよならJS。入力に応じて大きさが変わるtextareaをCSSだけで実装する。]]></title><description><![CDATA[こんにちは！
最近はJSを使わないとできなかったことがCSSだけで完結する。ということも多くなってきましたよね！
個人的に、「入力に応じて大きさが変わるtextarea(以下「可変textarea」)」は、JSでコネコネする必要があり、 めんどくさい実装 思ってるより大変な実装TOP10くらいには入ります🤔
そんなめんどくさい実装 思ってるより大変な実装 である可変textareaが、CSS一発で実装できるようになりそうで、ワクワクしたので紹介したいと思います！
!
記事執筆現在では、一部のブラウザでのExperimental機能ですのでご注意を！
https://developer.m...]]></description><link>https://zenn.dev/gemcook/articles/00869c82b1982c</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/00869c82b1982c</guid><pubDate>Wed, 19 Jun 2024 04:18:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nL4jDmqj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590field-sizing%25E3%2580%2591%25E3%2581%2595%25E3%2582%2588%25E3%2581%25AA%25E3%2582%2589JS%25E3%2580%2582%25E5%2585%25A5%25E5%258A%259B%25E3%2581%25AB%25E5%25BF%259C%25E3%2581%2598%25E3%2581%25A6%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%2595%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2582%258Btextarea%25E3%2582%2592CSS%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B2%25E3%2582%2587%25E3%2581%25B7%25E3%2581%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1MmQ2ODA0Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひょぷて</dc:creator></item><item><title><![CDATA[RadixUI の Trigger 内では、 onClick ではなく onPointerDown を使う]]></title><description><![CDATA[
 問題
RadixUI を使って開発していたところ、意図せぬ挙動に遭遇して困った。
簡略化したコードが以下の通り。ドロップダウンでフィルターを設定するようなUI。
&lt;DropdownMenu.Root&gt;
    &lt;DropdownMenu.Trigger asChild&gt;
        &lt;button&gt;
            &lt;div&gt;メニューを開く&lt;/div&gt;
            &lt;button
              onClick={(e) =&gt; {
                e.stopP...]]></description><link>https://zenn.dev/tenkei/articles/c338483dc843b5</link><guid isPermaLink="true">https://zenn.dev/tenkei/articles/c338483dc843b5</guid><pubDate>Wed, 19 Jun 2024 03:08:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_NAxlAi4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RadixUI%2520%25E3%2581%25AE%2520Trigger%2520%25E5%2586%2585%25E3%2581%25A7%25E3%2581%25AF%25E3%2580%2581%2520onClick%2520%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%258F%2520onPointerDown%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTC1MbnhJQkE4eS1Yd2xoS3hwQllvMzlxODB3ZVItMDB2NlVWTkdRdnoyTnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkei</dc:creator></item><item><title><![CDATA[JSON.parseはなぜanyを返すのか]]></title><description><![CDATA[
 はじめに
TypeScriptを始めた頃からanyは悪だと教わってきましたが、それなのになぜanyを返すんだ！？
なぜJSON.parseがanyを返すのか気になったので、原因を調べたり推測しました。

 anyを使うのは本当に適切？
なぜanyを返すかを調査する前に、TypeScriptのanyとunknownについておさらいしましょう。


any
どのような値でも代入を許す型、コンパイラーが型チェックを行わない型
私は後者の意味が重要だと考えています。


unknown
TypeScript 3.0から導入された対象の値の型が何かわからないときに使用する型
unknownの値...]]></description><link>https://zenn.dev/pipipipipi/articles/2e4bf64d3f9c8f</link><guid isPermaLink="true">https://zenn.dev/pipipipipi/articles/2e4bf64d3f9c8f</guid><pubDate>Wed, 19 Jun 2024 00:07:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VEq2q60T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSON.parse%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%259Cany%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:popp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjFBVFVfNExibktPbVJpWks1MlJMWERjZ25McDRMNHNfNUJNTHdRLWQxUVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>popp</dc:creator></item><item><title><![CDATA[【JS】splideのスライダーで自動スクロール表示]]></title><description><![CDATA[普段CSSで実装している自動スクロールを、splideを使ってやってみました。

 splideとは？
https://ja.splidejs.com/
アクセシビリティに配慮した軽量・高機能スライダー！
日本人が開発しているので公式ドキュメントが日本語で読みやすいです。
いろんなオプションもあって便利！
https://codepen.io/mdvlzqqm-the-lessful/pen/dyEZjYp

 プラグインの導入
自動スクロールさせるには、AutoScrollエクステンションを導入します。
https://ja.splidejs.com/extensions/auto-s...]]></description><link>https://zenn.dev/nami_06063/articles/af9e56586d03e6</link><guid isPermaLink="true">https://zenn.dev/nami_06063/articles/af9e56586d03e6</guid><pubDate>Tue, 18 Jun 2024 12:42:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jOz_c102--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JS%25E3%2580%2591splide%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzc4Y2NmMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nami</dc:creator></item><item><title><![CDATA[Canvasグラフィックアニメーションの学び方＆楽しみ方]]></title><description><![CDATA[
 はじめに
最近表現の幅を広げたいと思いまして、CSSや2Dや3Dアニメーションを誠意勉強しはじめました。そして2Dアニメーションの看板であるCanvasを今更ながら学びまして、そして見事Canvasの表現の世界にどハマりしたという話でございます。
本記事では、Canvasをどう学んだか、どのような表現ができるのか、学んでみてわかった面白さなどをお伝えしてきます。
また、Canvasアニメーションを利用したちょっとしたポケモン題材のアプリを作ってみたので、そのアプリを中心にどんな表現ができるのかもお伝えできたらなと思います。
Canvasをこれから学んでみようか迷っている方。
もうめち...]]></description><link>https://zenn.dev/moepyxxx/articles/0fc56049c0bb98</link><guid isPermaLink="true">https://zenn.dev/moepyxxx/articles/0fc56049c0bb98</guid><pubDate>Tue, 18 Jun 2024 12:38:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f4yU-oVE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Canvas%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%25AD%25A6%25E3%2581%25B3%25E6%2596%25B9%25EF%25BC%2586%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%25BF%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:moepyxxx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0MzA5NDk2MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>moepyxxx</dc:creator></item><item><title><![CDATA[ブラウザのエラートラッキング Sentry使っていているならHttpClient Integrationを有効化するといいよ]]></title><description><![CDATA[Sentryデフォルトでもエラートラッキングをしてくれるのですが、FetchやXHRの細かいエラーはデフォルトだと拾ってくれません
https://docs.sentry.io/platforms/javascript/configuration/integrations/httpclient/
HttpClient Integrationを有効化するとステータスコードなども拾ってくれるようになります
import * as Sentry from "@sentry/browser";

Sentry.init({
  integrations: [Sentry.httpClientIn...]]></description><link>https://zenn.dev/tomiyan/articles/6e8ad17f3ae5fa</link><guid isPermaLink="true">https://zenn.dev/tomiyan/articles/6e8ad17f3ae5fa</guid><pubDate>Tue, 18 Jun 2024 12:09:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--72jtUjhE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%2520Sentry%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AA%25E3%2582%2589HttpClient%2520Integration%25E3%2582%2592%25E6%259C%2589%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomiyan%2520%25E5%2586%25A8%25E7%2594%25B0%2520%25E6%2598%258C%25E9%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMzM5OTVkN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomiyan 冨田 昌邦</dc:creator></item><item><title><![CDATA[ChatGPTのようなタイプライターエフェクトを簡単に実装できるJSライブラリ: TypeIt]]></title><description><![CDATA[
最近、ChatGPTなどで見かけるようになったタイプライターエフェクト。文字が一文字ずつ表示されるあれ、あなたも一度は見たことがあるのではないでしょうか？
私はこのエフェクトが大好きで、自身のプロジェクトでも使ってみたいと思いました。しかし、一から実装するのは大変そう...と思っていたところ、素晴らしいライブラリを見つけました。その名も「TypeIt」です。
TypeItは、ウェブ上で柔軟で動的なタイピング・タイプライターエフェクトを作成するためのJavaScriptライブラリです。このライブラリの存在を知って触ってみたら、その使いやすさと多機能さに感動。これは多くの人に知ってもらいた...]]></description><link>https://zenn.dev/kg_lens/articles/cdb7a85fac25f1</link><guid isPermaLink="true">https://zenn.dev/kg_lens/articles/cdb7a85fac25f1</guid><pubDate>Tue, 18 Jun 2024 06:17:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ld1WhMld--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25A8%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BJS%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%253A%2520TypeIt%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KG%2520%257C%2520%25E3%2583%259D%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnFrMzFCTVQtcHpLYWFKR21mcU83UHVwVzZDZ0VFUVlpMlVzSi09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KG | ポーカー</dc:creator></item><item><title><![CDATA[Javascriptのことを調べていたら「ランタイム」について知らな過ぎたので調べた]]></title><description><![CDATA[この度、株式会社天地人エンジニアチームでは、念願のエンジニア技術ブログの立ち上げ～運用体制の整備が整いました。記念すべき第一回を担当するのは、Webアプリケーションエンジニア兼エンジニアリングマネージャの高瀬（@k_tacafe）です。
今回のテーマは「ランタイム」です。つい先日、Software Design 2024年6月号の ［実証］Bun 次世代JavaScriptランタイムの実体に迫る を読もうかと思った際に、JavaScriptのランタイムとかエンジンって何のことだっけ？いや、そもそも「ランタイム」ってちゃんと分かっていないよね？？という想いが湧きあがりましたので、今日はラン...]]></description><link>https://zenn.dev/tenchijin/articles/20240618_runtime</link><guid isPermaLink="true">https://zenn.dev/tenchijin/articles/20240618_runtime</guid><pubDate>Tue, 18 Jun 2024 03:24:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qci5y6aI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2582%2589%25E3%2580%258C%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2580%258D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E9%2581%258E%25E3%2581%258E%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JAXA%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25EF%25BC%2588%25E6%25A0%25AA%25EF%25BC%2589%25E5%25A4%25A9%25E5%259C%25B0%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1NDZmZjY5N2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JAXAベンチャー（株）天地人</dc:creator></item><item><title><![CDATA[JavaScriptで始めるProtocol Buffers(protobuf)]]></title><description><![CDATA[
 この記事について
Protocol Buffers(protobuf)は元々はGoogleが開発した基盤技術で、現在ではオープンソース化されている。
そのprotobufを使ったバイナリ形式へのencode(シリアライズ)とdecodeを、JavaScriptでの実装を通して学ぶための記事です。


Client側: React.jsで作成した簡易的なWebアプリ
Backend側: node.js(express利用)で作成した簡易的なAPIサーバー

□ Client/Backend APIの両方でJavaScriptを利用してprotobuf(Protocol Buffers)...]]></description><link>https://zenn.dev/ringo_to/articles/8694525cb4323c</link><guid isPermaLink="true">https://zenn.dev/ringo_to/articles/8694525cb4323c</guid><pubDate>Mon, 17 Jun 2024 22:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0okSqJx8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BProtocol%2520Buffers%2528protobuf%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akide_su%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmNmM2YzZkYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akide_su</dc:creator></item><item><title><![CDATA[Next.jsでWarning: Extra attributes from the serverエラー]]></title><description><![CDATA[Next.jsで
npm run dev
実行後、localhost:3000にchromeでアクセスしたところ、下記のエラーが発生した。
Warning: Extra attributes from the server: data-google-analytics-opt-out
調査をしてみると、chromeの拡張機能(extensions)が悪さをしているらしく、さっそく、使っていない拡張機能をオフにしたところエラーがなくなった。
]]></description><link>https://zenn.dev/maito/articles/b5009dd3c558a1</link><guid isPermaLink="true">https://zenn.dev/maito/articles/b5009dd3c558a1</guid><pubDate>Mon, 17 Jun 2024 14:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1DPabYN0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7Warning%253A%2520Extra%2520attributes%2520from%2520the%2520server%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjOTE0YzE4YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maito</dc:creator></item><item><title><![CDATA[【javascript】for-in, for-ofの挙動と使い方]]></title><description><![CDATA[
 はじめに
 以前にforEach文の使用について調査して以降、for-in, for-ofを使用しておきながら、細かい仕様をすっかり忘れてしまっていたので、勉強も兼ねてまとめてみる。

 内容
 まず、for-in、for-ofについての概要を説明する。
for-inは連想配列に対し、その「プロパティ」を順番に取り出す。
for-ofは列挙可能なオブジェクト（配列など、値が順番に並んでいる様なオブジェクト）に対し、その「値」を順番に取り出す。

for-in, for-of
let memberObj = {
    name: '田中',
    age: 16,
    from...]]></description><link>https://zenn.dev/murimuriko/articles/8796610ef8ab58</link><guid isPermaLink="true">https://zenn.dev/murimuriko/articles/8796610ef8ab58</guid><pubDate>Mon, 17 Jun 2024 14:44:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vqqO3T6n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590javascript%25E3%2580%2591for-in%252C%2520for-of%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2582%258A%25E3%2582%2580%25E3%2582%258A%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JNa0lieEdJMkZGU1hSVURJb09NT1owVG5RNjFHcVNoRGdpdVZRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むりむりこ</dc:creator></item><item><title><![CDATA[window.top.location.hrefの話]]></title><description><![CDATA[
 window.top.location.href...？
GASでHTMLを公開している時に、window.location.hrefでは対応できず
window.top.location.hrefを使用する箇所があり
違いが分かっていなかったので違いとそもそも何なのかをメモ

 そもそもwindow.locationとは？
window.locationは、JavaScriptで現在のウィンドウやフレームのURLに関する情報を操作するためのオブジェクト。
このオブジェクトを利用することで、
現在表示されているページのURLを取得したり、変更したりすることができる。
window.l...]]></description><link>https://zenn.dev/zenn_rr/articles/4c5226be42c6d8</link><guid isPermaLink="true">https://zenn.dev/zenn_rr/articles/4c5226be42c6d8</guid><pubDate>Mon, 17 Jun 2024 13:16:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--97LnDbvs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:window.top.location.href%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NWNhMDI0NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sto</dc:creator></item><item><title><![CDATA[SECCON Beginners CTF 2024 Writeup]]></title><description><![CDATA[
 初めに
こんにちはfumi0916です。
seccon beginners ctf 2024にJR.FOLKSというチームとして参加しました。
今回はその振り返りとか感想とかを書いていきたいと思います。

 結果
僕はwebの問題２問と、miscの問題１問の計３問の問題を正解しました。
チーム全体の成績としてはこんな感じです。


 getRank (misc)

僕は主にwebの問題を担当する予定だったのですが、最初になんとなくこの問題を開いたらwebに係してそうだったので解くことにしました。
この問題はwebサイト上の数当てゲームで数を当てていきスコアを上げてサイト内のラインキン...]]></description><link>https://zenn.dev/fumi0916/articles/2fb58d62a44b57</link><guid isPermaLink="true">https://zenn.dev/fumi0916/articles/2fb58d62a44b57</guid><pubDate>Mon, 17 Jun 2024 12:59:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ojmaE-gS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:SECCON%2520Beginners%2520CTF%25202024%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fumi0916%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN1ZQTUlBQzdZNEFhQUUyMW8walFVM05ianI2VHhoR2k4TWROYzRGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fumi0916</dc:creator></item><item><title><![CDATA[JavaScriptでスクロール処理を実装するのに便利なscrollIntoViewがAndroid Chromeで動かなくて焦った件]]></title><description><![CDATA[
 スクロール処理の実装に便利な scrollIntoView

Webページ内の特定の要素を画面に表示される領域までスクロールさせることができます。
しかも、簡潔に実装できます。とっても便利です。
const targetElement = document.getElementById('elementId');
targetElement?.scrollIntoView();
window.scroll や window.scrollTo などを利用して、同挙動を実現することは可能です。
ただ、特定の要素の位置座標を取得するロジックが必要になるなど、scrollIntoView よ...]]></description><link>https://zenn.dev/lclco/articles/3b5a74133730c3</link><guid isPermaLink="true">https://zenn.dev/lclco/articles/3b5a74133730c3</guid><pubDate>Mon, 17 Jun 2024 12:40:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q1gASgzd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAscrollIntoView%25E3%2581%258CAndroid%2520Chrome...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258A%25E3%2581%25A8%25E3%2581%25AE%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzlhY2Y4M2EuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LCL%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmMGE0NGYzM2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おとの</dc:creator></item><item><title><![CDATA[The next-generation pluggable version manager: proto]]></title><description><![CDATA[
 はじめに
とってもクール😎な次世代バージョン管理ツール proto の紹介です！

 対象とする読者

言語・ランタイム・パッケージマネージャのバージョン管理をしたい
環境を汚したくない

Volta や mise (rtx) との違いを知りたい


 proto とは？
言語・ランタイム・パッケージマネージャ、様々なツールのバージョン管理ができるunified toolchainです。

proto is a pluggable version manager, a unified toolchain.

https://moonrepo.dev/docs/proto

 対応して...]]></description><link>https://zenn.dev/iput_app/articles/8b2bd627c061a4</link><guid isPermaLink="true">https://zenn.dev/iput_app/articles/8b2bd627c061a4</guid><pubDate>Mon, 17 Jun 2024 08:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---tTz7oCC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:The%2520next-generation%2520pluggable%2520version%2520manager%253A%2520proto%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wiyco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZTg4M2Q2OTAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2580%2590IPUT%25E3%2580%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTJiNGUyZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wiyco</dc:creator></item></channel></rss>