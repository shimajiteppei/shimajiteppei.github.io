<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 11 May 2024 23:05:29 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[NumPy配列を作成する方法3選]]></title><description><![CDATA[
 はじめに
NumPy配列(ndarray)を作成する方法を3つまとめます。

 1.np.array()
最も知られている手法であり、配列をndarrayにして返します。
l = [1,2]
arr = np.array(l)
引数と返り値は別オブジェクトです。
arr[0] = 2
l[0],arr[0]
(1, 2)

 2.np.asarray()
np.asarray()でもNumPy配列を作成できます。
l = [1,2]
arr = np.asarray(l)
ただしnp.asarray()はnp.array()とは異なり、引数にndarrayが入力された場合は参照オブジ...]]></description><link>https://zenn.dev/sergicalsix/articles/d12592d5b750af</link><guid isPermaLink="true">https://zenn.dev/sergicalsix/articles/d12592d5b750af</guid><pubDate>Sat, 11 May 2024 16:33:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HsL5Abbb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NumPy%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%25953%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sergicalsix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlNzliZWZhNmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sergicalsix</dc:creator></item><item><title><![CDATA[日本語対応オープンソースOCRの比較 その２]]></title><description><![CDATA[以前の比較からそれぞれバージョンが上がっていましたので、再度比較しました。
・Tesseract
・PaddleOCR
・EasyOCR
それぞれの実行
といっても、モデルファイルの更新は、paddleOCRだけのようでしたので、軽く比較して、paddleOCRを少し試してみます。
実行方法は、前回Colabと同じ[1][2]です。



 結果
Tesseract, EasyOCRは、変化なし
PaddleOCRは、ほとんど変わらず。わずかによくなった？
Google Cloud Visionには及ばず

PaddleOCRv2.6.0(PP-OCRv3)


PaddleOCRv2....]]></description><link>https://zenn.dev/piment/articles/f4bc4d95310234</link><guid isPermaLink="true">https://zenn.dev/piment/articles/f4bc4d95310234</guid><pubDate>Sat, 11 May 2024 16:31:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rBI-lhBb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9OCR%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぴーまん</dc:creator></item><item><title><![CDATA[デコレータは「関数名を引数にできる」ことが分かれば簡単]]></title><description><![CDATA[
 関数名の引数
def start_end(f):
  def plus_st_en(x):
    print("----")
    f(x)
    print("----")
  return plus_st_en

def f(x):
  print(x)

x = 987
start_end(f)(x)
#----
#987
#----

 同じコードがデコレータを使って簡潔に書ける
def start_end(f):
  def plus_st_en(x):
    print("----")
    f(x)
    print("----")
  return plu...]]></description><link>https://zenn.dev/nacht/articles/236b133ab5164d</link><guid isPermaLink="true">https://zenn.dev/nacht/articles/236b133ab5164d</guid><pubDate>Sat, 11 May 2024 16:06:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pxFLhRq8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AF%25E3%2580%258C%25E9%2596%25A2%25E6%2595%25B0%25E5%2590%258D%25E3%2582%2592%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%258D%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E5%2588%2586%25E3%2581%258B%25E3%2582%258C%25E3%2581%25B0%25E7%25B0%25A1%25E5%258D%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nacht%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWQ2ZGNjZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nacht</dc:creator></item><item><title><![CDATA[Class with Python]]></title><description><![CDATA[
 Class with Python

 定義と呼び出し
class Person:
  a = 9   # クラス変数
  def __init__(self,name):
    self.namename = name

  def __call__(self,name):
    self.namename = name

  @classmethod
  def NANASI_generato(cls):
    return cls("Ano")

class SSS(Person):
  b = 7
  def __init__(self,name,strength):
...]]></description><link>https://zenn.dev/nacht/articles/ea9239a04b585c</link><guid isPermaLink="true">https://zenn.dev/nacht/articles/ea9239a04b585c</guid><pubDate>Sat, 11 May 2024 14:19:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3mzXAasm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Class%2520with%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nacht%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWQ2ZGNjZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nacht</dc:creator></item><item><title><![CDATA[GIS × Python Tutorial Session7 ~ DTMの作成 ~]]></title><description><![CDATA[この記事は「GIS × Python Tutorial」の関連記事です。

 はじめに

前回の記事ではLidarで取得した、点群データの読み書きや外れ値処理を、"PDAL" というライブラリーで行いました。環境構築に関しても前回の記事を参照してください。
https://zenn.dev/daidai_daitai/articles/4071f5aa17cd4b
この記事では、点群データから "DTM" の作成を行いますが、その為に必要な関連知識についてもまとめています。


今回使用するデータ


Raster


DTM（Digital Terrain Model）とは


CSF...]]></description><link>https://zenn.dev/daidai_daitai/articles/597bd52ed96dfd</link><guid isPermaLink="true">https://zenn.dev/daidai_daitai/articles/597bd52ed96dfd</guid><pubDate>Sat, 11 May 2024 12:50:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xi6qLAPP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GIS%2520%25C3%2597%2520Python%2520Tutorial%2520Session7%2520%7E%2520DTM%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A9%2599%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MjJMLWoxUDdDS1dHZWJjbmh0YUxmV3BGRGNSTnBDQnZZTGYxYUpqQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>橙。</dc:creator></item><item><title><![CDATA[YouTube動画へのコメントをワードクラウドを使って表示する]]></title><description><![CDATA[noteに掲載したこちらの取り組みの中で、ワードクラウドを作成しました。
https://note.com/yebi_crab/n/n4866e35703cd
本記事では、ワードクラウドの使い方やコード、作成における注意点についてまとめています。
対象の動画コメントについては、YouTube Data APIを利用してSixTONESというアイドルグループのYouTubeチャンネルの動画から収集しました。YouTube Data APIについてはこちらの記事に記載しています。

 ワードクラウドについて

 概要
文章内の単語の出現頻度にあわせ、文字の大きさを変えて表示した図のことです。...]]></description><link>https://zenn.dev/yebi_crab/articles/7e54c74fae120a</link><guid isPermaLink="true">https://zenn.dev/yebi_crab/articles/7e54c74fae120a</guid><pubDate>Sat, 11 May 2024 08:33:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hw08ACg_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25B8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yebi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMWE5NDFhMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yebi</dc:creator></item><item><title><![CDATA[Claude3先生によるChatGPTクローンアプリのハンズオン作成を通したStreamlit入門講義]]></title><description><![CDATA[
 はじめに
おれの名前は樋口恭介。昨日の記事に引き続き、ChatGPT先生を招いてPython講義をしてもらおうと思ったのだが、業務時間中にChatGPTを使いすぎたのか、GPT4の利用回数制限に引っかかってしまった……。

そのため今日は、ChatGPT先生の代わりに急遽Claude3先生に登壇してもらうことにした。Claude3先生はChatGPT先生と同等かそれ以上にPythonにも詳しく、またもしかしたらChatGPT先生よりもChatGPTのことを知っている。
そういうわけで、Claude3先生、本日はよろしくお願いします！

 本日の講義の流れと講師・Claude3先生の自...]]></description><link>https://zenn.dev/acntechjp/articles/a5d598903e6582</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/a5d598903e6582</guid><pubDate>Fri, 10 May 2024 12:24:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fJtVi32l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude3%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BChatGPT%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E4%25BD%259C%25E6%2588%2590%25E3%2582%2592%25E9%2580%259A%25E3%2581%2597%25E3%2581%259FStreamlit%25E5%2585%25A5%25E9%2596%2580%25E8%25AC%259B%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kyosukehiguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTC1HS3NENWd4Y3BKMzR2cmhUNWJXcmstSk5uZEc1WFpPNThHTnFkQTF1TkVzbGtLcUk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyosukehiguchi</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-334｜C - Socks 2]]></title><description><![CDATA[
 設問ページ

🔗ABC-334 C - Socks 2



 提出結果
import itertools


def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    n, k = getIntMap()
    a = getIntList()

    if k % 2 == 0:
        d = 0
        for i in range(0, k, 2...]]></description><link>https://zenn.dev/hyperdb/articles/e08d22c3b4401a</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/e08d22c3b4401a</guid><pubDate>Fri, 10 May 2024 07:42:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OiD2pRMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-334%25EF%25BD%259CC%2520-%2520Socks%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[高速な埋め込み: Spark* NLP と OpenVINO™ を使用して大規模で高速な BERT 推論を実現]]></title><description><![CDATA[この記事は、Medium に公開されている「Supercharged Embeddings: Unlocking Faster BERT Inference at Scale with Spark NLP and OpenVINO™」の日本語参考訳です。原文は更新される可能性があります。原文と翻訳文の内容が異なる場合は原文を優先してください。
https://medium.com/openvino-toolkit/supercharged-embeddings-unlocking-faster-bert-inference-at-scale-with-spark-nlp-and-open...]]></description><link>https://zenn.dev/intel_developer/articles/0d5c3dd0ac7a28</link><guid isPermaLink="true">https://zenn.dev/intel_developer/articles/0d5c3dd0ac7a28</guid><pubDate>Fri, 10 May 2024 02:22:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X5miJdEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AA%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%253A%2520Spark%252A%2520NLP%2520%25E3%2581%25A8%2520OpenVINO%2520%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AA%2520BERT%2520%25E6%258E%25A8%25E8%25AB%2596%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2599%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiZThlMTc0MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>インテルデベロッパーゾーン</dc:creator></item><item><title><![CDATA[asdf でグローバルランタイムを利用する (macOS)]]></title><description><![CDATA[asdf を利用している環境下で、個々のプロジェクトでは特定のバージョンのランタイムを使用しつつ、プロジェクトの外ではグローバルにインストールされたランタイムを使用するための設定について記す。特に、 Homebrew で Python をインストールした際、 asdf の設定のみではグローバルのランタイムにパスが通らないので、その対処法について記す。

 背景
突然だが、自分はエディタとして Neovim を利用している。 Neovim 上で LSP による自動補完を実現する際、 npm や pip などのパッケージ管理ツールを通して、関連するライブラリをインストールしなければならない場...]]></description><link>https://zenn.dev/hamakou108/articles/aba48b3f5fec4e</link><guid isPermaLink="true">https://zenn.dev/hamakou108/articles/aba48b3f5fec4e</guid><pubDate>Fri, 10 May 2024 00:35:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1pmtdWt1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:asdf%2520%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2520%2528macOS%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hamakou108%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyNTlhYzY3ZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hamakou108</dc:creator></item><item><title><![CDATA[PythonでXML文字列を整形する]]></title><description><![CDATA[
 概要
PythonでXML文字列を整形するプログラムの備忘録です。

 プログラム1
以下を参考にしました。
https://hawk-tech-blog.com/python-learn-prettyprint-xml/
不要な空行を削除する処理などを加えています。
from xml.dom import minidom
import re
def prettify(rough_string):
    reparsed = minidom.parseString(rough_string)
    pretty = re.sub(r"[\t ]+\n", "", reparsed...]]></description><link>https://zenn.dev/nakamura196/articles/7afad09f56d1db</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/7afad09f56d1db</guid><pubDate>Thu, 09 May 2024 13:26:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kNrgWCRA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7XML%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[[Python] OpenVINO Tutorial]]></title><description><![CDATA[
 1. What is OpenVINO
openvino is a toolkit for machine learning developed by Intel.
It is designed to optimize and accelerate deep learning inference on various Intel architectures, such as CPUs, GPUs, and FPGAs, and it focus to specifically computer vision tasks.
The toolkit supports models fro...]]></description><link>https://zenn.dev/yuto_mo/articles/a88699936bfa1d</link><guid isPermaLink="true">https://zenn.dev/yuto_mo/articles/a88699936bfa1d</guid><pubDate>Thu, 09 May 2024 11:54:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iS-wv0o1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%255BPython%255D%2520OpenVINO%2520Tutorial%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0OTcwZWIzMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu</dc:creator></item><item><title><![CDATA[ChatGPT先生によるプロンプトエンジニアリングとPythonのハンズオン入門講義]]></title><description><![CDATA[
 はじめに
おれの名前は樋口恭介。もはや何番煎じかわからないが、今日はChatGPT先生をお呼びして、みなさんにプロンプトエンジニアリングとPythonについてハンズオンで入門してもらいます。今さらなんでそんなことをするかと言うと、プロンプトエンジニアリングとPythonはとても便利なのに、多くの人には意外とあんまり使われていない（というか、やっている人とやっていない人の差が開き続けていて、両者間の意思疎通に支障が出そうなレベルのリスクを感じはじめてきた）ので、何度でも敷居を下げて呼びかけていく必要があると思ったからです。
ちなみに、なんでプロンプトエンジニアリングとPythonを一緒...]]></description><link>https://zenn.dev/acntechjp/articles/fa3b302d0f7264</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/fa3b302d0f7264</guid><pubDate>Thu, 09 May 2024 08:25:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ka4_ncqN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8Python%25E3%2581%25AE%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E5%2585%25A5%25E9%2596%2580%25E8%25AC%259B%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kyosukehiguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTC1HS3NENWd4Y3BKMzR2cmhUNWJXcmstSk5uZEc1WFpPNThHTnFkQTF1TkVzbGtLcUk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyosukehiguchi</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-335｜C - Loong Tracking]]></title><description><![CDATA[
 設問ページ

🔗ABC-335 C - Loong Tracking



 提出結果
def getIntMap():
    return map(int, input().split())


def getStringListRow(N):
    return [list(input().split()) for _ in range(N)]


def main():
    n, q = getIntMap()
    query = getStringListRow(q)

    d = [[i + 1, 0] for i in range(n)]
    d.re...]]></description><link>https://zenn.dev/hyperdb/articles/c616fccc81fd3f</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/c616fccc81fd3f</guid><pubDate>Thu, 09 May 2024 05:05:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DTM7nPDB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-335%25EF%25BD%259CC%2520-%2520Loong%2520Tracking%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-336｜C - Even Digits]]></title><description><![CDATA[
 設問ページ

🔗ABC-336 C - Even Digits



 提出結果
def getInt():
    return int(input())


def main():
    n = getInt()
    s = ['0', '2', '4', '6', '8']

    a = n - 1
    b = []
    while True:
        d, m = divmod(a, 5)
        b.append(m)
        if d &lt; 5:
            if d &gt; 0:
               ...]]></description><link>https://zenn.dev/hyperdb/articles/768b9f2b75a3cd</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/768b9f2b75a3cd</guid><pubDate>Thu, 09 May 2024 05:05:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pIIb6CAh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-336%25EF%25BD%259CC%2520-%2520Even%2520Digits%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[Discordで運営しているBotのメモリー消費を抑えた話]]></title><description><![CDATA[とあるbotのメモリーのパフォーマンスを向上させるために少し細工をした話です。

 利用したライブラリ
libjemallocを使っただけです。これを利用することでメモリーのパフォーマンスを向上させることができます。

 libjemallocとは
他の方が詳しく書いているので、こちらをご覧ください。

 libjemallocをインストール
以下のコマンドをdebianで実行してください。
$ apt-get install -y libjemalloc

 導入
LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2
これを実行コマ...]]></description><link>https://zenn.dev/neody/articles/ff0cb93748471e</link><guid isPermaLink="true">https://zenn.dev/neody/articles/ff0cb93748471e</guid><pubDate>Thu, 09 May 2024 03:24:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HNZWyGs8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Discord%25E3%2581%25A7%25E9%2581%258B%25E5%2596%25B6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BBot%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2583%25BC%25E6%25B6%2588%25E8%25B2%25BB%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tuna2134%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNmFiN2JjNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Neody%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2YjY0YWM5YWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tuna2134</dc:creator></item><item><title><![CDATA[ABC 001 A-積雪深差 Pythonでの解き方を初心者向けに解説！]]></title><description><![CDATA[https://youtube.com/shorts/MUn47eLfxQk?feature=share

 問題
ある時刻の積雪深H_1とその1時間前の積雪深H_2が与えられる。
この1時間前の間に降った雪の量H_1-H_2を出力してください。

 制約
0≦H_1≦2000
0≦H_2≦2000

 入力形式
H_1
H_2

 解説
↓こちらが正解例です。

ABC001-A.py
H1=int(input())
H2=int(input())
print(H1-H2)

問題概要にある通り、H1-H2を出力すればOK。そのために必要な知識は、
・入力する方法
・出力する方法
・計...]]></description><link>https://zenn.dev/yuya_t/articles/0eeda1316ec2b3</link><guid isPermaLink="true">https://zenn.dev/yuya_t/articles/0eeda1316ec2b3</guid><pubDate>Thu, 09 May 2024 02:39:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AfzdgC32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC%2520001%2520A-%25E7%25A9%258D%25E9%259B%25AA%25E6%25B7%25B1%25E5%25B7%25AE%2520Python%25E3%2581%25A7%25E3%2581%25AE%25E8%25A7%25A3%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AB%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0c4VmtyV2JIU3F5LXpaNXBKSjF2Wnh1RlJ3X0xfVDRNS3gyVmFTYzNKem9RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆうや</dc:creator></item><item><title><![CDATA[Google Colab上で、Graphvizを用いてグラフ描画をする際、日本語が文字化けしないようにする]]></title><description><![CDATA[Google Colab上で、Graphvizを用いてグラフ描画をする際、日本語が文字化けしないようにするには、単にフォントファイルをアップロードするだけではダメで、Graphvizのフォントディレクトリにコピーして、設定を更新しないと、うまく動作しないようです。
import graphviz as gv
import os

# アップロードされたフォントファイルのパス
font_path = '/content/NotoSansJP-Medium.ttf'  # ファイル名を適宜変更してください

# Graphvizのフォント設定ファイルのパス
config_path = '/u...]]></description><link>https://zenn.dev/yuichiyazaki/articles/615b14fc9f62a9</link><guid isPermaLink="true">https://zenn.dev/yuichiyazaki/articles/615b14fc9f62a9</guid><pubDate>Thu, 09 May 2024 00:58:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IvRuv8UH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Colab%25E4%25B8%258A%25E3%2581%25A7%25E3%2580%2581Graphviz%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E6%258F%258F%25E7%2594%25BB%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2580%2581%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%258C%25E6%2596%2587%25E5%25AD%2597%25E5%258C%2596%25E3%2581%2591%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuichi%2520Yazaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c3RGJXN2RGQ3N4Mmw4MkExaDFOcExSLWZXQmlteW50YmkwODZWPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuichi Yazaki</dc:creator></item><item><title><![CDATA[Azure SDK を使って Python から Azure AI Search のインデックスにjsonファイルのドキュメントを追加する]]></title><description><![CDATA[
 執筆日
2024/05/07

 概要
「Azure AI Searchのインデックスを作成するpythonスクリプト」で作った検索インデックスにドキュメントを追加するスクリプトの書き方の紹介記事になります。
インデックス作成でドキュメント構成を定義したので、今回はその定義に従って作ったjsonファイルをドキュメントとして登録していきます。

 前提

python実行環境
Azure AI Searchのリソースを作成済み


 依存ライブラリインストール
pip install azure-search-documents

 Note

各ドキュメントのid

ドキュメントを一...]]></description><link>https://zenn.dev/headwaters/articles/4ee7abdcc8cc54</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/4ee7abdcc8cc54</guid><pubDate>Wed, 08 May 2024 23:50:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gyL1g2Ao--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520SDK%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Python%2520%25E3%2581%258B%25E3%2582%2589%2520Azure%2520AI%2520Search%2520%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25ABjson%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[Flatを少しでも理解するためにチュートリアルをやる - チャット]]></title><description><![CDATA[
 Flatとは
Fletは、Pythonを使ってWebアプリ、デスクトップアプリ、モバイルアプリを簡単に開発できるフレームワークです。
https://flet.dev/

 作るもの

https://youtu.be/t8GH3Mvl5p0

 チャットの作成

公式チュートリアル
公式サンプルコード

チュートリアルを参考にチャットアプリをつくって行きます。

実行環境

flet Ver.0.21.2
Python Ver.3.10.11



 ライブラリのインストール
pipを使いfletをインストールします。
pip install flet


 メッセージの表示
ユー...]]></description><link>https://zenn.dev/shiro_toy_box/articles/0f2833f392b036</link><guid isPermaLink="true">https://zenn.dev/shiro_toy_box/articles/0f2833f392b036</guid><pubDate>Wed, 08 May 2024 21:12:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d_PfvUnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flat%25E3%2582%2592%25E5%25B0%2591%25E3%2581%2597%25E3%2581%25A7%25E3%2582%2582%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2520-%2520%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNzY5NDdhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろ</dc:creator></item></channel></rss>