<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/rust/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/rust/feed"/>
  <title>Rustタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでRustタグが付けられた新着記事</description>
  <updated>2024-06-02T15:10:44+09:00</updated>
  <link>https://qiita.com/tags/rust</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1866205</id>
    <published>2024-06-02T15:10:44+09:00</published>
    <updated>2024-06-02T15:10:44+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/neko_the_shadow/items/d5795aa3238a0ca6186b"/>
    <url>https://qiita.com/neko_the_shadow/items/d5795aa3238a0ca6186b</url>
    <title>2370. Longest Ideal Subsequence の解き方メモ</title>
    <content type="html">https://leetcode.com/problems/longest-ideal-subsequence/description
問題の概要
以下の条件を満たす文字列を理想文字列と呼ぶ。最長の…</content>
    <author>
      <name>neko_the_shadow</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1865818</id>
    <published>2024-06-01T10:00:44+09:00</published>
    <updated>2024-06-01T10:01:22+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/flowerhill/items/ceb5b8f8dae560085f99"/>
    <url>https://qiita.com/flowerhill/items/ceb5b8f8dae560085f99</url>
    <title>AtCoder Beginner Contest 355 振り返り</title>
    <content type="html">ABC355の振り返りです。久しぶりの投稿です。（すみませんサボってました）
今回の結果
A,Bの2完でした。


各問題の振り返り
A - Who Ate the Cake?!

問題文
自分の回答

1…</content>
    <author>
      <name>flowerhill</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1865772</id>
    <published>2024-06-01T01:27:04+09:00</published>
    <updated>2024-06-01T01:27:04+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/neko_the_shadow/items/e1359d0c3787cde58010"/>
    <url>https://qiita.com/neko_the_shadow/items/e1359d0c3787cde58010</url>
    <title>iビット目のビット値(1/0)を取得したい</title>
    <content type="html">ド忘れしがちなので、自分用のメモに残しておきます。
nのiビット目のビット値(1/0)を取得する方法は以下の通りです。
let bit = (n &amp;gt;&amp;gt; i) &amp;amp; 1;

あるいは以下のように書くことも…</content>
    <author>
      <name>neko_the_shadow</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1865354</id>
    <published>2024-05-31T02:31:26+09:00</published>
    <updated>2024-05-31T12:25:43+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/plotter/items/674109d6e46d4437a7dc"/>
    <url>https://qiita.com/plotter/items/674109d6e46d4437a7dc</url>
    <title>Rustの「impl Trait for Type」の語順について</title>
    <content type="html">概要
Rustのトレイト実装の記法impl トレイト名 for 型名が（個人的には少し風変りな文法に見えたので）なぜそのような形をしているのか、文法実装者本人の記述等から考察を行った記事。
Rust…</content>
    <author>
      <name>plotter</name>
    </author>
  </entry>
</feed>
