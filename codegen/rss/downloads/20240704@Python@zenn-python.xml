<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 04 Jul 2024 11:20:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[pipxで実行できる名刺作ってみた]]></title><description><![CDATA[npxでCLI名刺を作るのを見て、「Pythonでも同じことができるはず！」と思ったことはありませんか？
そう、pipxを使えば簡単に実現できるんです！


 pipxとは？
pipxは、Pythonパッケージを分離された環境にインストールして実行するためのツールです。グローバル環境を汚さずに、CLIアプリケーションを簡単に使用できます。
https://github.com/pypa/pipx

 プロフィールカードを作ってみよう
それでは、pipxを使ってオリジナルのプロフィールカードを作成する方法を見ていきましょう。

 1. 必要なライブラリ
まず、以下のライブラリを使用します
...]]></description><link>https://zenn.dev/tomoya_fujita/articles/7f8ac5a7666ad0</link><guid isPermaLink="true">https://zenn.dev/tomoya_fujita/articles/7f8ac5a7666ad0</guid><pubDate>Thu, 04 Jul 2024 10:25:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LJ8ESZrA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pipx%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E5%2590%258D%25E5%2588%25BA%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoya%2520Fujita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2YmNjMTk4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoya Fujita</dc:creator></item><item><title><![CDATA[【Python】pyenv + venv 環境構築]]></title><description><![CDATA[
 概要
pyenv + venv 環境構築方法を記載する。
OS：Ubuntu22.04.3

 pyenv

 インストール
https://github.com/pyenv/pyenv?tab=readme-ov-file#installation
curl https://pyenv.run | bash

echo 'export PYENV_ROOT="$HOME/.pyenv"' &gt;&gt; ~/.bashrc
echo 'command -v pyenv &gt;/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' &g...]]></description><link>https://zenn.dev/suraud/articles/setup-python</link><guid isPermaLink="true">https://zenn.dev/suraud/articles/setup-python</guid><pubDate>Thu, 04 Jul 2024 10:18:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xGg6CAFU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pyenv%2520%252B%2520venv%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%252FUD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0NzY3NjU1ODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>/UD</dc:creator></item><item><title><![CDATA[線形SVMをシンプルに実装する]]></title><description><![CDATA[
 TL;DR

SVMを実装している記事はあまり見かけなかったのでpythonで実装してみました．
SVMの主問題を，L2正則化経験リスク最小化問題として勾配降下法で解きます．
計算速度はscikit-learnのSVCのような工夫されたアルゴリズムには及びません．


 本記事が実装するSVM
2クラス分類を行う，ソフトマージンSVMの実装を行います．
実装はこちらにあります．

カーネル関数を取り入れたソフトマージンSVMは次回実装します．

 SVMのざっくりとした理論

特徴量\bm{x} \in \mathbb{R}^dと重み\bm{w} \in \mathbb{R}^dとバ...]]></description><link>https://zenn.dev/obizip/articles/2024-07-04-linear_svm</link><guid isPermaLink="true">https://zenn.dev/obizip/articles/2024-07-04-linear_svm</guid><pubDate>Thu, 04 Jul 2024 05:50:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LRnsgfdu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%259A%25E5%25BD%25A2SVM%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:obizip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhMjVkOTU2OWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>obizip</dc:creator></item><item><title><![CDATA[Amazon EventBridge SchedulerでLambda関数を1回だけ実行するスケジュールを登録する]]></title><description><![CDATA[AWSのサーバーレスアーキテクチャを使用する際、特定の時間に1回だけLambda関数を実行したいケースがあります。
例えば、データ移行やバッチ処理、一時的なリソースのクリーンアップなどが考えられます。
この記事では、Amazon EventBridge Schedulerを使用して、Lambda関数を1回だけ実行するスケジュールの登録方法を紹介します。

 EventBridge Schedulerとは
Amazon EventBridge Schedulerは、AWSのマネージドサービスの1つで、アプリケーションやAWSサービスのスケジュール実行を簡単に設定できます。
cron式や固定...]]></description><link>https://zenn.dev/onodak/articles/8ac1dcf422aa61</link><guid isPermaLink="true">https://zenn.dev/onodak/articles/8ac1dcf422aa61</guid><pubDate>Thu, 04 Jul 2024 03:23:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zqG75RPv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520EventBridge%2520Scheduler%25E3%2581%25A7Lambda%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%25921%25E5%259B%259E%25E3%2581%25A0%25E3%2581%2591%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25B1%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onodak%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhMDZkM2I2MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onodak</dc:creator></item><item><title><![CDATA[【Python】Enum の初期化時に想定外の値が渡されたらデフォルト値を返すようにしたい]]></title><description><![CDATA[!
_missing_ は Python 3.6、StrEnum は Python 3.11 からの機能です

Python の Enum をコンストラクタを用いて初期化するとき、想定外の値が渡された場合の処理を定義することができる _missing_ というメソッドが便利だったので紹介します。
例を示すために、Color という StrEnum を継承した Enum を定義してみました。
class Color(StrEnum):
  RED = "#ff0000"
　　　　GREEN = "#00ff00"
  BLUE = "#0000ff"
この Enum はユーザーが入力したカ...]]></description><link>https://zenn.dev/utahka/articles/12b1893b9045fc</link><guid isPermaLink="true">https://zenn.dev/utahka/articles/12b1893b9045fc</guid><pubDate>Thu, 04 Jul 2024 03:16:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KeD88p_t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Enum%2520%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E6%2599%2582%25E3%2581%25AB%25E6%2583%25B3%25E5%25AE%259A%25E5%25A4%2596%25E3%2581%25AE%25E5%2580%25A4%25E3%2581%258C%25E6%25B8%25A1%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%2589%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E5%2580%25A4%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:utahka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzYzY5ODgxODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>utahka</dc:creator></item><item><title><![CDATA[【Python】asyncio を使って TLS 対応の HTTP/1 サーバーをつくる]]></title><description><![CDATA[次のコマンドでサーバーを起動させて https//localhost:8000 に curl かブラウザーでアクセスする
python server.py
curl のコマンドは次のとおり
curl -v https://localhost:8000
TLS 証明書と秘密鍵は mkcert で生成した
mkcert localhost

server.py
import asyncio
import ssl

# https://docs.python.org/ja/3/library/asyncio-stream.html#tcp-echo-server-using-streams
#...]]></description><link>https://zenn.dev/masakielastic/articles/ba04025e369fef</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/ba04025e369fef</guid><pubDate>Wed, 03 Jul 2024 18:56:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J8IVux0l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591asyncio%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520TLS%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%2520HTTP%252F1%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[【Python】selectors で TLS 対応の HTTP/1 サーバーを試すも失敗]]></title><description><![CDATA[selectors の公式マニュアルのサンプルコードを少し修正して試すも curl で1回リクエスト送信するだけでクラッシュしてしまった
# https://docs.python.org/3/library/selectors.html#examples
import selectors
import socket
import ssl

sel = selectors.DefaultSelector()

def accept(sock, mask):
    conn, addr = sock.accept()
    sel.register(conn, selectors.EV...]]></description><link>https://zenn.dev/masakielastic/articles/38ba7caf00397f</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/38ba7caf00397f</guid><pubDate>Wed, 03 Jul 2024 17:52:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TdFxXB-D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591selectors%2520%25E3%2581%25A7%2520TLS%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%2520HTTP%252F1%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%25E3%2582%2582%25E5%25A4%25B1%25E6%2595%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[【Python】socket で TLS 対応の HTTP/1 サーバーをつくる]]></title><description><![CDATA[socket モジュールを使って C 言語のコードと似たような書き方をすると次のようなコードになる。Chrome でアクセスするとクラッシュしてしまうが、curl に対しては動く
import socket
import ssl

addr = '0.0.0.0'
port = 8000

server = socket.socket()
server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
server.bind((addr, port))
server.listen(5)

context = ssl.create_...]]></description><link>https://zenn.dev/masakielastic/articles/9df6d454797e4a</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/9df6d454797e4a</guid><pubDate>Wed, 03 Jul 2024 17:27:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j1s6aYyG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591socket%2520%25E3%2581%25A7%2520TLS%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%2520HTTP%252F1%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[Pythonのセイウチ演算子を1つのif文内で複数使うときの注意点]]></title><description><![CDATA[
 やりたいこと

dict型の変数 dict から キー a , b の値を変数に格納する
a , b 両方のキーが存在する場合のみ処理をする
これをセイウチ演算子を用いて実装したい。


 結論
セイウチ演算子をandでつなげる場合はそれぞれ() で囲う必要がある

 検証
実装１：これはエラーになる。
dict = {"a": 1, "b": 2}

if a := dict.get("a") and b := dict.get("b"):
    print(f"a = {a}")
    print(f"b = {b}")

#$ python3 walrus.py 
#  F...]]></description><link>https://zenn.dev/dokeita/articles/1b03f15ef436f6</link><guid isPermaLink="true">https://zenn.dev/dokeita/articles/1b03f15ef436f6</guid><pubDate>Wed, 03 Jul 2024 15:45:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0anL-7Ci--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25A4%25E3%2582%25A6%25E3%2583%2581%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%25921%25E3%2581%25A4%25E3%2581%25AEif%25E6%2596%2587%25E5%2586%2585%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dokeita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4Zjk0YWI4MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dokeita</dc:creator></item><item><title><![CDATA[【Python】モジュールとパッケージとライブラリの違いとfromとimportについて]]></title><description><![CDATA[
 はじめに
今回は、Pythonのファイル上部に記載されているfromとimportに加え、それらを理解するために必要な周辺知識についてまとめていく。

Pythonのファイル上部に記載されているFromとimport

 fromキーワードとimportキーワード
from &lt;PACKAGE_NAME&gt; import &lt;MODULE_NAME&gt;
!
fromキーワード
モジュールまでのパッケージ階層を指定。階層はドット.で区切る。
importキーワード
モジュール内の関数やクラスを指定。インポート文を使うことで、別のモジュールやパッケージの中に定義された関数...]]></description><link>https://zenn.dev/code_journey_ys/articles/9200058ccbc01d</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/9200058ccbc01d</guid><pubDate>Wed, 03 Jul 2024 13:19:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F4pbkoWo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8from%25E3%2581%25A8import%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Composite Aggregationとは？Elasticsearchで大規模データを効率的に集計する方法]]></title><description><![CDATA[最近、大規模なデータを効率的に処理する必要性がますます高まっていると感じませんか？特にElasticsearchを利用している方なら、複雑なクエリや大量のデータを扱うことが日常茶飯事でしょう。しかし、そんな中でデータをどのように効率的に集計し、分析結果を迅速に得るかという課題に直面している方も多いのではないでしょうか。
例えば、商品の売上データを月別や地域別に詳細に集計したい場合、単純なアグリゲーションではデータ量が多すぎて処理が追いつかないことがあります。これでは、ビジネスの重要な意思決定をタイムリーに行うのが難しくなります。
では、どうすれば大量のデータを効果的に集計し、スムーズに分...]]></description><link>https://zenn.dev/shintaro/articles/641b84871a1109</link><guid isPermaLink="true">https://zenn.dev/shintaro/articles/641b84871a1109</guid><pubDate>Wed, 03 Jul 2024 10:23:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1BOADWWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Composite%2520Aggregation%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FElasticsearch%25E3%2581%25A7%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E9%259B%2586%25E8%25A8%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shintaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkzZDU4NjE5NTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shintaro</dc:creator></item><item><title><![CDATA[Automating GIS Processes 2023 を読む その６]]></title><description><![CDATA[
 概要
ヘルシンキ大学地球科学・地理学科の GIS コースの教材であるAutomating GIS Processes 203を読んでいきます。

 Lesson6

 講義動画
https://www.youtube.com/watch?v=EZnKCn0LXkw

 Retrieving data from OpenStreetMap

 What is OpenStreetMap?

OpenStreetMapはフリーでオープンな地図サービスであるが、何よりもまず、フリーでオープンなジオデータを収集するための世界的な共同作業である。出典：wiki.openstreetmap.or...]]></description><link>https://zenn.dev/mopinfish/articles/automating-gis-06</link><guid isPermaLink="true">https://zenn.dev/mopinfish/articles/automating-gis-06</guid><pubDate>Tue, 02 Jul 2024 22:43:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tosPljSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otsuka Noboru</dc:creator></item><item><title><![CDATA[Automating GIS Processes 2023 を読む その５]]></title><description><![CDATA[
 概要
ヘルシンキ大学地球科学・地理学科の GIS コースの教材であるAutomating GIS Processes 203を読んでいきます。

 Lesson5

 講義動画
https://www.youtube.com/watch?v=WK4FVQxGDOk

 Static maps

この数週間の間に、レッスン 2、3、4 などで、geopandas.GeoDataFrame.plot() を使った基本的な静的マップのプロットに慣れました。また、geopandas.GeoDataFrame.plot()はmatplotlib.pyplotライブラリを使用し、その引数とオプシ...]]></description><link>https://zenn.dev/mopinfish/articles/automating-gis-05</link><guid isPermaLink="true">https://zenn.dev/mopinfish/articles/automating-gis-05</guid><pubDate>Tue, 02 Jul 2024 22:43:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_U-aJgiy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Automating%2520GIS%2520Processes%25202023%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otsuka Noboru</dc:creator></item><item><title><![CDATA[【機械学習メモ】疑似乱数のシードを固定する]]></title><description><![CDATA[
 「疑似乱数のシードを固定する」とは
Python標準のrandomや、numpyのnumpy.randomは、擬似乱数を生成している。
疑似乱数とは、Wikipediaによると「乱数列のように見えるが、実際には確定的な計算によって求めている擬似乱数列による乱数」をさす。
つまりランダムなように見えて、一定の規則に基づいて値が生成されている。
疑似乱数のシード（＝疑似乱数生成の際、初期状態として設定する値）を固定することで、ランダムな値を一定のルールのもと生成させることができる。
シードを固定することで、生成された乱数の差分による影響を除外でき、再現性が高まる。

 実際にやってみた
...]]></description><link>https://zenn.dev/yebi_crab/articles/random-seed-202406</link><guid isPermaLink="true">https://zenn.dev/yebi_crab/articles/random-seed-202406</guid><pubDate>Tue, 02 Jul 2024 15:55:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--loKP9zOx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591%25E7%2596%2591%25E4%25BC%25BC%25E4%25B9%25B1%25E6%2595%25B0%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%259B%25BA%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yebi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMWE5NDFhMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yebi</dc:creator></item><item><title><![CDATA[pythonのunittestのコア部分を自作してみる]]></title><description><![CDATA[
 はじめに
python の組み込みのテストライブラリであるunittestを自作してみました。
といってもすべての機能ではなく、
具体的には、以下の画像のように実行したテスト件数と失敗したテスト件数が表示される、テストライブラリのコア部分のみの実装になります。

元はというと、ソフトウェアエンジニアの世界では超有名な本「テスト駆動開発」を読んでみたのがきっかけでした。
この本の第３章「xUnit」でまさにunittestのコア部分を TDD で実装するのですが、
その内容をより python のunittestに似せた形にしたのと、型ヒントの付与などのリファクタリングを加えました。
...]]></description><link>https://zenn.dev/ksk_17090k1/articles/25b8b9f259f5fa</link><guid isPermaLink="true">https://zenn.dev/ksk_17090k1/articles/25b8b9f259f5fa</guid><pubDate>Tue, 02 Jul 2024 13:37:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kdP6B15P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AEunittest%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25A2%25E9%2583%25A8%25E5%2588%2586%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksk_17090k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGhlS0k3RVlTOUFGUXYyaFJPM21vOUFJXzZsWHY4WmVCbWc5TmxkajQ5bUlLUEROYXY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksk_17090k1</dc:creator></item><item><title><![CDATA[Amazon Timestreamへのデータ投入をPythonで簡単に実現！]]></title><description><![CDATA[
 はじめに
Amazon Timestream(以降はTimestreamと書きます)を使う機会が少しずつ増えてきました。
開発中はモックしたりすることもありますが、テストのタイミングではAWS上のTimestreamに対してリクエストしたいことがあると思います。
DynamoDBであれば、S3バケットにCSVやJSONファイルを格納し、インポートすることができますが、Timestreamにはそういった機能がありません。
今回は、Timestreamに対してboto3を使ってサンプルデータを登録したいと思います。

 ファイル内容

 Python
import boto3
impor...]]></description><link>https://zenn.dev/gdtypk/articles/write-sample-data-for-timestream</link><guid isPermaLink="true">https://zenn.dev/gdtypk/articles/write-sample-data-for-timestream</guid><pubDate>Tue, 02 Jul 2024 05:29:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bn97KDB1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Timestream%25E3%2581%25B8%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%258A%2595%25E5%2585%25A5%25E3%2582%2592Python%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiYWMyOTFmNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろん</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-359｜B - Couples]]></title><description><![CDATA[
 設問ページ

🔗ABC-359 B - Couples



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    N = getInt()
    A = getIntList()

    c = 0
    for i in range(2 * N - 2):
        if A[i] == A[i + 2] and A[i] != A[i + 1]:
            c...]]></description><link>https://zenn.dev/hyperdb/articles/33b96046b758cd</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/33b96046b758cd</guid><pubDate>Tue, 02 Jul 2024 03:51:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sCoXCOXc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-359%25EF%25BD%259CB%2520-%2520Couples%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-359｜A - Count Takahashi]]></title><description><![CDATA[
 設問ページ

🔗ABC-359 A - Count Takahashi



 提出結果
def getInt():
    return int(input())


def getStringRow(N):
    return [input() for _ in range(N)]


def main():
    N = getInt()
    S = getStringRow(N)

    print(S.count('Takahashi'))


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/098d5248f8a0a0</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/098d5248f8a0a0</guid><pubDate>Tue, 02 Jul 2024 03:51:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HeJLlpEj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-359%25EF%25BD%259CA%2520-%2520Count%2520Takahashi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[Pythonで作る！文章要約アプリケーション]]></title><description><![CDATA[
 はじめに
皆さん、こんにちは！最近spaCyを学んだ成果として文章要約アプリケーションを作成したので、その開発過程と成果を皆さんと共有したいと思います。初心者の視点から、つまずいたポイント、解決策などを含めて、詳しくお話しします。

 実行環境

Python 3.8以上
tkinter（GUIライブラリ）
spaCy（自然言語処理ライブラリ）
NetworkX（グラフ理論ライブラリ）
scikit-learn（機械学習ライブラリ）
docx2txt（Wordファイル読み込み用）
PyPDF2（PDFファイル読み込み用）


 必要条件
アプリケーションを動作させるには、以下のコマン...]]></description><link>https://zenn.dev/miguel/articles/737563eef3e79d</link><guid isPermaLink="true">https://zenn.dev/miguel/articles/737563eef3e79d</guid><pubDate>Tue, 02 Jul 2024 03:24:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I5IQeoHW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2581%25E6%2596%2587%25E7%25AB%25A0%25E8%25A6%2581%25E7%25B4%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Miguel%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NTM2YzZmN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Miguel</dc:creator></item><item><title><![CDATA[【静岡県民必見！？】遠鉄バスどこ！？（PC版）作ってみた]]></title><description><![CDATA[
 遠鉄バスどこ！？ って何！？
!
この記事を読む前に．．
遠鉄バスについて既にご存じの方はこの章をスキップ！
動作画面だけ見たいって人は，ページの一番下までスワイプ！！

静岡県では遠鉄バスと呼ばれる遠州鉄道株式会社さんが運営しているバスが広く普及している．
そのため，遠鉄バスは静岡県で暮らしている人なら一度は乗ったことがある（はずの）バスなのである．
そんないつもお世話になっている遠鉄バスには「遠鉄バスどこ!?」と呼ばれるモバイルアプリがある．
!
モバイルアプリ「遠鉄バスどこ！？」
乗車バス停と降車バス停を入力すると，そのルートを通るバスが，あとどのくらいで乗車バス停に到着するの...]]></description><link>https://zenn.dev/muumin1107/articles/8c5d820593cb26</link><guid isPermaLink="true">https://zenn.dev/muumin1107/articles/8c5d820593cb26</guid><pubDate>Tue, 02 Jul 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0P0zQKpK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%259D%2599%25E5%25B2%25A1%25E7%259C%258C%25E6%25B0%2591%25E5%25BF%2585%25E8%25A6%258B%25EF%25BC%2581%25EF%25BC%259F%25E3%2580%2591%25E9%2581%25A0%25E9%2589%2584%25E3%2583%2590%25E3%2582%25B9%25E3%2581%25A9%25E3%2581%2593%25EF%25BC%2581%25EF%25BC%259F%25EF%25BC%2588PC%25E7%2589%2588%25EF%25BC%2589%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A0%25E3%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkQ4U0w3dU9LQU4wVkREX2x5QS1FN05RWnk3QXUwTzh5aEo1MjhmUXplVkhrZk5NMmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ムウ</dc:creator></item></channel></rss>