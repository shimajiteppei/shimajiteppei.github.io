<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 29 Jun 2025 07:28:53 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[フロントエンドパフォーマンス測定の基本：Core Web Vitalsの3つの指標とChromeでの計測方法]]></title><description><![CDATA[
 はじめに
フロントエンドのパフォーマンス測定について調べてみると、情報が断片的で「何をどう測定すればいいのか」が分かりにくいと感じませんか？
本記事では、Googleが重視するフロントエンドパフォーマンスの3つの指標「Core Web Vitals」について、概要→測定方法→改善例の順で分かりやすく解説します。

 Core Web Vitalsとは？Googleが重視する3つの指標
Googleが2020年に発表した「Core Web Vitals」は、ユーザー体験を測定する3つの重要な指標です。

 1. LCP（Largest Contentful Paint）- 読み込み速度...]]></description><link>https://zenn.dev/kudotaka0421/articles/c29446270d3922</link><guid isPermaLink="true">https://zenn.dev/kudotaka0421/articles/c29446270d3922</guid><pubDate>Sun, 29 Jun 2025 06:19:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MoG0Hu9k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25B8%25AC%25E5%25AE%259A%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25EF%25BC%259ACore%2520Web%2520Vitals%25E3%2581%25AE3%25E3%2581%25A4%25E3%2581%25AE%25E6%258C%2587%25E6%25A8%2599%25E3%2581%25A8Chrome%25E3%2581%25A7%25E3%2581%25AE%25E8%25A8%2588%25E6%25B8%25AC%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2581%25A9%25E3%2581%259F%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0NjU2N2Q3ZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くどたか</dc:creator></item><item><title><![CDATA[おじさんエンジニアが最近のモダン技術を「何のためか」で整理してみる]]></title><description><![CDATA[
 はじめに
長年この業界にいると、次から次へと現れる新しい技術の波に乗り遅れがちになります。「Next.js って何？」「vanilla-extract って美味しいの？」と感じることも少なくありません。
しかし、新しい技術は、何らかの「既存の問題を解決するため」に生まれてきます。そこでこの記事では、最近のフロントエンド界隈でよく目にするモダンな技術が、一体何を解決するために存在するのかという視点で、自分なりに整理してみたいと思います。

 整理してみる技術たち
Zenn のトレンド記事などを参考に、いくつかの技術をピックアップしました。

 1. React / Next.js


...]]></description><link>https://zenn.dev/hashito/articles/b916fe457c3844</link><guid isPermaLink="true">https://zenn.dev/hashito/articles/b916fe457c3844</guid><pubDate>Sun, 29 Jun 2025 00:17:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QAE8Vrz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%258A%25E3%2581%2598%25E3%2581%2595%25E3%2582%2593%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E6%259C%2580%25E8%25BF%2591%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E3%2580%258C%25E4%25BD%2595%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%258B%25E3%2580%258D%25E3%2581%25A7%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hashito</dc:creator></item><item><title><![CDATA[Express APIの実行回数を集計するカスタムミドルウェアの実装]]></title><description><![CDATA[
 はじめに
TypeScriptとExpressを使用したAPIサーバーにおいて、各エンドポイントの実行回数を効率的に集計するカスタムミドルウェアを実装した話です。
https://github.com/expressjs/express

 実装の背景と課題
E2Eテストで「APIが期待通り実行されているか」は重要な仕様となります。
実際にシーケンシャルな処理の中で、組織を跨ぐような複雑な呼び出しがあるようなAPIが意図した通りに実行されていない課題がありました。
これらの課題を解決するために、リクエスト毎にエンドポイントの実行回数を記録するミドルウェアの実装に取り組みました。

 ...]]></description><link>https://zenn.dev/tetoteto/articles/express-api-monitoring-middleware</link><guid isPermaLink="true">https://zenn.dev/tetoteto/articles/express-api-monitoring-middleware</guid><pubDate>Sat, 28 Jun 2025 23:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rzBIuamz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Express%2520API%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E5%259B%259E%25E6%2595%25B0%25E3%2582%2592%25E9%259B%2586%25E8%25A8%2588%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%259F%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TetoTeto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlIN1NhY21HVFFmR3hWQ1d2R01nX29ETVR0WU82UXJ6WGg1Z3dZOUs4VWRJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TetoTeto</dc:creator></item><item><title><![CDATA[Supabaseをローカルで動かしてタスク一覧をvite+reactで表示する]]></title><description><![CDATA[TypeScript + Vite + React で Supabase を使った簡単な TODO アプリを作ってみた時の備忘録です。
ローカル環境での Supabase 起動からアプリケーション実装まで一通り試してみました。
今回作成したコードは以下のリポジトリに置いてあります。
https://github.com/ara-ta3/supabase-local-getting-started
使用したツールとバージョン(package.json)は以下のとおりです。
{
  "name": "supabase-local-getting-started",
  "version": ...]]></description><link>https://zenn.dev/ara_ta3/articles/typescript-supabase-getting-started</link><guid isPermaLink="true">https://zenn.dev/ara_ta3/articles/typescript-supabase-getting-started</guid><pubDate>Sat, 28 Jun 2025 17:47:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_cyglahE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592vite%252Breact%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ara_ta3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMmNmMDMwYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ara_ta3</dc:creator></item><item><title><![CDATA[HonoX で SSG なブログを作る]]></title><description><![CDATA[この2, 3年、Hono というフレームワークがアツいようです。
乗るしかないこのビッグウェーブにということで、試しがてらブログを作ってみることにしました。
作成したブログのリポジトリは ここ 、ブログは ここ です。

 方針
ブログを作る上で対応したいことが2つありました。
まず1つ目は MDX 対応です。
このようなブログでは Markdown を使用して記事を記述することが多いですが、Markdown では基本的なテキストのフォーマットしかできません。
一方で、MDX では通常の Markdown に加えてカスタムコンポーネントを埋め込むことができ、よりリッチなコンテンツを作成す...]]></description><link>https://zenn.dev/mememeno_me/articles/efbbee0062783d</link><guid isPermaLink="true">https://zenn.dev/mememeno_me/articles/efbbee0062783d</guid><pubDate>Sat, 28 Jun 2025 15:28:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zv1yh095--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HonoX%2520%25E3%2581%25A7%2520SSG%2520%25E3%2581%25AA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%25E3%2582%2581%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5OGRjMzQ1MWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>めめめ</dc:creator></item><item><title><![CDATA[[TypeScript NestJS] 例外処理ベストプラクティス]]></title><description><![CDATA[こんにちは、ヨルシカふぁんです！
最近の実務ではNestJSを使ったAPI改修に取り組んでいます
その中でも 例外処理の統一や設計方針に悩む機会が多く、今回、自分なりにベストプラクティスを整理して記事にまとめることにしました！

 グローバルなExceptionエラーを構築する
グローバルにExceptionエラーを構築しないと、毎回バラバラのエラーレスポンスの形式になってしまいイケてないですよね。NestJsだとグローバルに宣言できてかつ、エラーレスポンスが統一できる@Catchデコーダというものがあります。このデコーダを使ってExceptionFilterを継承したクラスを作成するこ...]]></description><link>https://zenn.dev/you_ik/articles/26743170baf32d</link><guid isPermaLink="true">https://zenn.dev/you_ik/articles/26743170baf32d</guid><pubDate>Sat, 28 Jun 2025 08:49:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_bLJHaJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%2520NestJS%255D%2520%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25AB%25E3%2581%25B5%25E3%2581%2581%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjYTY1YmYwYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨルシカふぁん</dc:creator></item><item><title><![CDATA[「Observableって何？」をスッキリ解説！非同期処理の救世主を理解する]]></title><description><![CDATA[
 Observableって、なんだか難しそう…
「Observable」という言葉、非同期処理やリアクティブプログラミングの文脈でよく耳にしますが、なんだか複雑でとっつきにくいイメージがありませんか？

関数呼び出しと何が違うの？
Promiseと何が違うの？
なんで必要なの？

この記事では、そんなObservableの「なぜ？」を、身近な例えと具体的なコードを交えながら、スッキリと解説していきます。

 これまでの問題点：関数の限界
プログラミングの基本は、関数を呼び出して処理を依頼することです。しかし、このシンプルな方法にはいくつかの制約があります。


呼び出し先を直接知ってい...]]></description><link>https://zenn.dev/hashito/articles/2b6aa804232780</link><guid isPermaLink="true">https://zenn.dev/hashito/articles/2b6aa804232780</guid><pubDate>Sat, 28 Jun 2025 08:23:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i_81Op0v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CObservable%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%25E3%2580%258D%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E6%2595%2591%25E4%25B8%2596%25E4%25B8%25BB%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hashito</dc:creator></item><item><title><![CDATA[マイグレーションもベクトル検索もブラウザだけで完結！PGlite凄すぎる...]]></title><description><![CDATA[
 はじめに
最近、PGLite（ブラウザで動くPostgreSQL互換DB）をつかって、サーバー側にデータをもたないプライベート重視のChatGPTライクなサービスを作ってます！
このサービスではデータをブラウザのIndexedDBに保存しています。
https://app.aidy.jp/
特に最近、Aidyでは、「書きたい人」をサポートするAIライティングに力を入れていて、
構成の提案から文章の下書き、図の挿入まで、執筆をサポートしています。
Mermaid図、マインドマップ、インフラ構成図の生成や、マークダウンエディタとの連携で、記事作成がよりリッチになります！
https://...]]></description><link>https://zenn.dev/steelydylan/articles/vector-search-browser</link><guid isPermaLink="true">https://zenn.dev/steelydylan/articles/vector-search-browser</guid><pubDate>Fri, 27 Jun 2025 15:02:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xlmM8UsV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2582%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2582%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E5%25AE%258C%25E7%25B5%2590%25EF%25BC%2581PGlite%25E5%2587%2584%25E3%2581%2599%25E3%2581%258E%25E3%2582%258B...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Godai%2520Hori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MzlkZTY4MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Godai Hori</dc:creator></item><item><title><![CDATA[Claude APIを$100/日使わないと怒られるアプリを作った話]]></title><description><![CDATA[
 作ったもの
Claude APIの使用量が1日$100未満だと激怒してくるアプリ「Hundred Dollar Enforcer」を作りました。Claude Max（月額$100/$200の定額制プラン）を最大限活用するためのモチベーション維持ツールです。
https://github.com/kentaro/hundred-dollar

 なぜ作ったか
私はClaude Maxプランを契約しています。Claude Maxには2つのプランがあります：


月額$100: Claude Proの5倍の使用量

月額$200: Claude Proの20倍の使用量

どちらのプランでも...]]></description><link>https://zenn.dev/pepabo/articles/af77d4502ef881</link><guid isPermaLink="true">https://zenn.dev/pepabo/articles/af77d4502ef881</guid><pubDate>Fri, 27 Jun 2025 14:33:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AfCHL56x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520API%25E3%2582%2592%2524100%252F%25E6%2597%25A5%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E6%2580%2592%25E3%2582%2589%25E3%2582%258C%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25A0%2597%25E6%259E%2597%25E5%2581%25A5%25E5%25A4%25AA%25E9%2583%258E%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0ZTQxODhhYTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GMO%25E3%2583%259A%25E3%2583%2591%25E3%2583%259C%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3Z0U0ekNxckk1TXgtbG95T0VURDdrdzkyRlVZNjNpendmVHMxaU9FPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>栗林健太郎</dc:creator></item><item><title><![CDATA[プレゼン動画自動生成ツール Mulmocast を使う]]></title><description><![CDATA[こんにちは、オートロ株式会社で代表しております福田です。
今回は、mulmocastを使って、プレゼンテーション動画を自動生成する方法を解説した後、オリジナルのテンプレートを作成してみます。

 mulmocast とは
MulmoCastは、AIと人間が協力してアイデアを生み出し、共有するために設計された次世代のプレゼンテーションプラットフォームです。
PowerPointやKeynoteのような従来のツールは人間向けに作られたものでしたが、MulmoCastは最初からAIとの共創を前提に設計された「AIネイティブ」なツールです。AIが自然言語、画像、音声、動画を扱える能力を最大限に発...]]></description><link>https://zenn.dev/open_developers/articles/87928c78f98210</link><guid isPermaLink="true">https://zenn.dev/open_developers/articles/87928c78f98210</guid><pubDate>Fri, 27 Jun 2025 14:22:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ttDHSOeN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25BC%25E3%2583%25B3%25E5%258B%2595%25E7%2594%25BB%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2520Mulmocast%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%25A6%258F%25E7%2594%25B0%25E5%25BF%2597%25E9%2583%258E%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3Nzg4MGI3YTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSk10eHRDLUlpSzFEdnk4UVVnODJaRGhCZ1gtUDZZOHVLdm1tSDhQNklVMEJzbDk4ZGI9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>福田志郎</dc:creator></item><item><title><![CDATA[🔄 LINE Bot Flex Messageの状態管理 - 古いボタンの誤操作を防ぐToken実装]]></title><description><![CDATA[
 はじめに
LINE Botで支出管理や予約システムを作り始めた時、以下のような問題に遭遇しました。
「編集ボタンを押した後、画面に残った古い削除ボタンを押したら削除されてしまった...」
「支出を記録した後、同じく画面に残った古い確認ボタンを押したら二重登録された...」
今回は、LINE BotのFlex Messageで状態管理トークンを実装して、古いボタンの誤操作を防いだ方法をご紹介します。

 🎯 今回解決する問題

 LINE Botでよくある状態管理の課題
LINE Botでは、ユーザーの操作履歴が画面に残り続けるため、以下のような問題が発生します：

 問題例1: 編集...]]></description><link>https://zenn.dev/techfirst/articles/79553bd0e85a7b</link><guid isPermaLink="true">https://zenn.dev/techfirst/articles/79553bd0e85a7b</guid><pubDate>Fri, 27 Jun 2025 08:54:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A3al2aD0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520LINE%2520Bot%2520Flex%2520Message%25E3%2581%25AE%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%2520-%2520%25E5%258F%25A4%25E3%2581%2584%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%25AE%25E8%25AA%25A4%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E9%2598%25B2%25E3%2581%2590Token%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GSKP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNmNjMmQwM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GSKP</dc:creator></item><item><title><![CDATA[Visual Studio CodeでTypeScriptのコード補完が効かなくなったので修正した(tsconfig)]]></title><description><![CDATA[
 要約
Visual Studio Code(以下VS Code)で以下のメッセージが出てTypeScriptのコード補完が効かなくなりました。
To enable project-wide JavaScript/TypeScript language features,
exclude large folders with source files that you do not work on.
TypeScriptのコード補完をする対象ファイルのサイズが大きすぎたようで、tsconfigで大きいサイズのファイル（今回だとnuxtのoutput）をexcludeしたら治りました。
...]]></description><link>https://zenn.dev/bita/articles/c9ff705495c5c2</link><guid isPermaLink="true">https://zenn.dev/bita/articles/c9ff705495c5c2</guid><pubDate>Fri, 27 Jun 2025 08:06:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fvk4rhr6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%25E3%2581%25A7TypeScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A3%259C%25E5%25AE%258C%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%259F%2528tsconfig%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:h.watahiki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5Y2Q0YzJlZDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:bitA%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjYmQwNDdhNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>h.watahiki</dc:creator></item><item><title><![CDATA[AIが人間にタスクを依頼する逆転発想アプリ「Gemiyou」の開発記録]]></title><description><![CDATA[
 はじめに
「AIが人間にタスクを依頼する」 という従来とは真逆のアプローチで開発したWebアプリケーション「Gemiyou」について、技術的な実装から設計思想まで詳しく紹介します。
このプロジェクトは第2回 AI Agent Hackathon with Google Cloud での挑戦として開発しました。テーマである「AI Agent、創造の極みへ」に対して、AIエージェントが人間にタスク依頼を行い評価し、経済価値を与える という革新的なアプローチを考案しました。
通常のチャットボットは「人間がAIに質問・依頼する」形ですが、このアプリでは「AIが人間にクリエイティブなタスクを依...]]></description><link>https://zenn.dev/yukilab/articles/f281ec36462357</link><guid isPermaLink="true">https://zenn.dev/yukilab/articles/f281ec36462357</guid><pubDate>Fri, 27 Jun 2025 07:54:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gIE0f14w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%258C%25E4%25BA%25BA%25E9%2596%2593%25E3%2581%25AB%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E4%25BE%259D%25E9%25A0%25BC%25E3%2581%2599%25E3%2582%258B%25E9%2580%2586%25E8%25BB%25A2%25E7%2599%25BA%25E6%2583%25B3%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2580%258CGemiyou%25E3%2580%258D%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y_KO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS05Ia3ZtVThINjF1V1F6NjhSZXhjd2lfZ1NvbjlSMmVVYkRyYWN5bllfc0sxeW44WXRIdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y_KO</dc:creator></item><item><title><![CDATA[Tailwindのopacityが子要素に乗ってしまうのを防ぐ方法]]></title><description><![CDATA[
 はじめに
こんにちは！PortalKeyの渋谷です。

皆さんはこのような画像の上に文字を乗せたい時に

このようなフィルターをかけ

このように要素を乗せたい時ありませんか？

そしてこうなって困っていたりしませんか？
自分はこれに悩まされた過去があり、解決方法はわりと簡単だったのでまとめておきたいと思います。

 開発環境


TypeScript v5.5.4

react v18.3.1

tailwindcss v3.4.10


 なぜこうなったのか
まずはコードを確認してみましょう。
&lt;div className="relative w-64 h-64"&gt;
...]]></description><link>https://zenn.dev/portalkeyinc/articles/b0fe3e3c195ed1</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/b0fe3e3c195ed1</guid><pubDate>Fri, 27 Jun 2025 06:50:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qsgqDxCX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tailwind%25E3%2581%25AEopacity%25E3%2581%258C%25E5%25AD%2590%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AB%25E4%25B9%2597%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%25E3%2581%25AE%25E3%2582%2592%25E9%2598%25B2%25E3%2581%2590%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:da-shibuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR2Y0dCWGJ5bmIwc3k4TnQyZll4aU8xQ2xBN1ZwNzAtR2RJeTR4WW1uc2JEMEhRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>da-shibuya</dc:creator></item><item><title><![CDATA[📸 レシート読み取りLINE Botの作り方 - Google Cloud Vision APIで家計簿を自動化]]></title><description><![CDATA[
 はじめに
こんにちは！今回は、レシート画像を送るだけで金額を自動で読み取って家計簿に記録してくれるLINE Botを作ってみました。
「レシートの金額を手入力するのが面倒...」「家計簿アプリは続かない...」
そんな悩みを解決する、実用的なOCR機能付きLINE Botの実装方法を解説していきます。

 🎯 今回作るもの


レシート画像送信: LINEで写真を送るだけ

自動金額抽出: Google Cloud Vision APIでOCR処理

智能解析: 合計金額を自動判定

家計簿記録: そのまま支出として記録


 🛠️ 使用技術


LINE Messaging API...]]></description><link>https://zenn.dev/techfirst/articles/3fe1f118ebe287</link><guid isPermaLink="true">https://zenn.dev/techfirst/articles/3fe1f118ebe287</guid><pubDate>Fri, 27 Jun 2025 06:47:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AOqNA5fH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E8%25AA%25AD%25E3%2581%25BF%25E5%258F%2596%25E3%2582%258ALINE%2520Bot%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2520-%2520Google%2520Cloud%2520Vision%2520API%25E3%2581%25A7%25E5%25AE%25B6%25E8%25A8%2588%25E7%25B0%25BF%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GSKP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNmNjMmQwM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GSKP</dc:creator></item><item><title><![CDATA[[TypeScript]実行環境のタイムゾーンによらず日本時間で日付を操作する]]></title><description><![CDATA[const JST_OFFSET_MS = 9 * 60 * 60 * 1000;

export const getJSTFullYear = (date: Date): number =&gt; {
  const jstDate = new Date(date.getTime() + JST_OFFSET_MS);
  return jstDate.getUTCFullYear();
};

export const getJSTMonth = (date: Date): number =&gt; {
  const jstDate = new Date(date.getTime(...]]></description><link>https://zenn.dev/purratto/articles/c8ced87c3130ad</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/c8ced87c3130ad</guid><pubDate>Fri, 27 Jun 2025 04:50:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bLYQKZIK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%25E5%25AE%259F%25E8%25A1%258C%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AB%25E3%2582%2588%25E3%2582%2589%25E3%2581%259A%25E6%2597%25A5%25E6%259C%25AC%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[[TypeScript]与えられた日時に対応する会計年度の開始日時を返す関数]]></title><description><![CDATA[/**
 * 与えられたJST基準の日付に対応する会計年度の開始日時（4月1日 00:00:00 JST）を返す。
 * 実行環境のタイムゾーンに関係なく、JSTとして扱う。
 *
 * @param date 日本時間として指定されたDateオブジェクト
 * @returns 会計年度開始日時（JST基準）
 */
export const getFiscalYearStartDate = (date: Date): Date =&gt; {
  const JST_OFFSET_MS = 9 * 60 * 60 * 1000;
  const jstDate = new Date(...]]></description><link>https://zenn.dev/purratto/articles/3fc0b5e058ff53</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/3fc0b5e058ff53</guid><pubDate>Fri, 27 Jun 2025 04:27:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e2p4oieJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%25E4%25B8%258E%25E3%2581%2588%25E3%2582%2589%25E3%2582%258C%25E3%2581%259F%25E6%2597%25A5%25E6%2599%2582%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%25E4%25BC%259A%25E8%25A8%2588%25E5%25B9%25B4%25E5%25BA%25A6%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E6%2597%25A5%25E6%2599%2582%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[【実体験】フロントリプレイスでClineを導入したら開発効率が爆上がりした話]]></title><description><![CDATA[『その作業・・・AIだったらすぐ終わりますよ？』
最近、marionette.js から React へのフロントリプレイスを進めています。
現在、リプレイス対象の画面改修がなかなか大変だったんですが、
clineを利用したら大幅に開発効率が上がったので何をしたのかを話します！

 [前提]リプレイス対象画面の大変さについて
リプレイス対象の画面は、下記のような厳しさがあります。


APIの数が多い

実装途中ですが、今40個くらいあります。2画面でですよ？


各APIのレスポンスに含まれるプロパティもかなり多い

平均20〜30個くらいで、多いものだと約100個のプロパティを持って...]]></description><link>https://zenn.dev/suzukishouten/articles/b7889c96947bac</link><guid isPermaLink="true">https://zenn.dev/suzukishouten/articles/b7889c96947bac</guid><pubDate>Fri, 27 Jun 2025 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--waKSUp_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%259F%25E4%25BD%2593%25E9%25A8%2593%25E3%2580%2591%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25A7Cline%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E9%2596%258B%25E7%2599%25BA%25E5%258A%25B9%25E7%258E%2587%25E3%2581%258C%25E7%2588%2586%25E4%25B8%258A%25E3%2581%258C%25E3%2582%258A%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%258F%25E3%2581%25A1%25E3%2581%25A1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2ODgxNGNkY2QuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E9%2588%25B4%25E6%259C%25A8%25E5%2595%2586%25E5%25BA%2597%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5ZGI1NDRjZDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わちち</dc:creator></item><item><title><![CDATA[WebSocket通信と同期するReduxアプリケーションの実装パターン]]></title><description><![CDATA[こんにちは、PortalKeyの植森です。
今回は、PortalKeyで実装しているWebSocketやWebRTCといったリアルタイムイベントとReduxを組み合わせた状態管理のアーキテクチャについて紹介します。
SlackやDiscordのようなリアルタイムアプリケーションでは、他のユーザーの行動をリアルタイムに画面に反映する必要があります。
このような要件に対して、UIコンポーネントに直接WebSocketやWebRTCの処理を書くと更新タイミングが散らばり、コードが煩雑になってしまいます。
PortalKeyでは、データ操作とUIコンポーネントを完全に分離し、リアルタイムイベント...]]></description><link>https://zenn.dev/portalkeyinc/articles/24fb9054edef4b</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/24fb9054edef4b</guid><pubDate>Thu, 26 Jun 2025 15:08:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BQ5KZMyp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSocket%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25A8%25E5%2590%258C%25E6%259C%259F%25E3%2581%2599%25E3%2582%258BRedux%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wakaba260%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hYOTVyU0tGaEZ1Xy00RWJGMXVDMldKcms2SEtYMFZ4MV91ZjhrRkE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakaba260</dc:creator></item><item><title><![CDATA[春のカンファレンスまつり 2025 (TSKaigi, JJUG CCC, 関数型まつり) 参加録]]></title><description><![CDATA[春のカンファレンスまつりと書いたのにTSKaigiとJJUG CCCと関数型まつりしかないのは、自分がこれしか参加していないからです。ごめんなさい！！！！
今回、この３つのカンファレンスとまつりを連続して参加してみて、それぞれが掲げるメインテーマには直接現れない特色がそれぞれあると感じました。
僭越ながら

TSKaigiは静的検査カンファレンスだった
JJUG CCCは長期開発カンファレンスだった
関数型まつりは言語構文の深層探訪まつりだった

と一旦まとめさせていただいて、それぞれの項目で詳しく感じたことを書きます。
もちろんこのテーマではない発表もあり、その多様な発表こそがカンファ...]]></description><link>https://zenn.dev/xina/articles/bae713cf2b4b5d</link><guid isPermaLink="true">https://zenn.dev/xina/articles/bae713cf2b4b5d</guid><pubDate>Thu, 26 Jun 2025 14:27:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_l4b0xdz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2598%25A5%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25BE%25E3%2581%25A4%25E3%2582%258A%25202025%2520%2528TSKaigi%252C%2520JJUG%2520CCC%252C%2520%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2581%25BE%25E3%2581%25A4%25E3%2582%258A%2529%2520%25E5%258F%2582%25E5%258A%25A0%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kina%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzNmZjZDM4OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kina</dc:creator></item></channel></rss>