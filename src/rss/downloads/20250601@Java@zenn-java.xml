<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 01 Jun 2025 08:40:05 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AIが書いたコードが動かない理由：ChatGPTと安全に付き合うための開発ガイド]]></title><description><![CDATA[
 🤖 ChatGPTはなぜコードを書けるのにバグも出すのか？
〜AIコード生成の仕組みと、完璧でない理由を解説〜

ChatGPTが出してくれたコード、動かないぞ…？

そんな経験、ありませんか？
この記事では、ChatGPTがコードを生成する仕組みと、
なぜそれでもバグが発生するのかを、最新の研究や事例を交えて解説します。

 🧑‍🎓 生徒（Y）：
先生、ChatGPTってコードを書けるじゃないですか。
でも、たまに動かないコードを出してくるんですよね…。なんでですか？

 👨‍🏫 講師（I）：
それはね、AIが「予測は得意だけど、実行はしない」からなんだ。

 💡 ChatGPTは...]]></description><link>https://zenn.dev/yuuuuuuuu/articles/15f5ccf1e109c4</link><guid isPermaLink="true">https://zenn.dev/yuuuuuuuu/articles/15f5ccf1e109c4</guid><pubDate>Sun, 01 Jun 2025 08:24:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nuZFl1cm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%258C%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E7%2590%2586%25E7%2594%25B1%25EF%25BC%259AChatGPT%25E3%2581%25A8%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E4%25BB%2598%25E3%2581%258D%25E5%2590%2588%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwYjk5NWUzYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆや</dc:creator></item><item><title><![CDATA[JavaとDBの「つながる仕組み」]]></title><description><![CDATA[
 Javaとデータベースはどうつながってる？

「このコードってどうやって動いてるんですか？」
Javaでデータベースに値を登録する処理を見たとき、そんな素朴な疑問がわいた。
なんとなく setString() や executeUpdate() を使っていたけど、実際に何が起きているのかは意外と曖昧だったりする。


 まずはコード全体を見てみよう
以下は、データベースに新しいユーザ情報を登録するシンプルなコードだ。
try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
     P...]]></description><link>https://zenn.dev/yuuuuuuuu/articles/d387cc7636ebe4</link><guid isPermaLink="true">https://zenn.dev/yuuuuuuuu/articles/d387cc7636ebe4</guid><pubDate>Sun, 01 Jun 2025 07:09:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bFujZSGh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A8DB%25E3%2581%25AE%25E3%2580%258C%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%258C%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwYjk5NWUzYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆや</dc:creator></item><item><title><![CDATA[インフラエンジニアに活きるJavaの知識]]></title><description><![CDATA[
 Javaの知識がインフラエンジニアとして活きる理由
Java開発の経験は、インフラエンジニアとしてのキャリアにおいて予想以上に価値があります。私も過去にjavaを勉強していた経験がある為、本記事では、Javaの知識がインフラ運用やシステム設計にどのように活かせるのか、具体的にまとめてみました。

 1. JVMの理解がサーバー運用に直結

 メモリ管理の知識

ヒープメモリとスタックメモリの概念理解
GCの動作原理の把握
メモリリークの早期発見と対策


 パフォーマンスチューニング

JVMオプションの最適化
サーバーリソースの適切な割り当て
負荷テストの効果的な実施


 2. ...]]></description><link>https://zenn.dev/iikanash1/articles/java-knowledge-for-infrastructure</link><guid isPermaLink="true">https://zenn.dev/iikanash1/articles/java-knowledge-for-infrastructure</guid><pubDate>Sat, 31 May 2025 08:36:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pr_txf9n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258D%25E3%2582%258BJava%25E3%2581%25AE%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDFiWHB5WG1ra0p5WS16N0d5bExrZFdLelFBRFl5RFExd1dsQkxvNldjX21WeTY2eUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かなし</dc:creator></item><item><title><![CDATA[試験ポイントを押さえた Java Gold SE8]]></title><description><![CDATA[[JavaGold最短合格のための参考書]
2023年合格した経験を元に執筆💮
☆実際に試験によく出る箇所や注意点が分かりやすい！
☆通勤通学やスキマ時間でも気軽に学習できる！
☆黒本などの問題集と併用するのがおすすめ！]]></description><link>https://zenn.dev/odentravel/books/ead158931bfef6</link><guid isPermaLink="true">https://zenn.dev/odentravel/books/ead158931bfef6</guid><pubDate>Sat, 31 May 2025 08:03:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mwNhoWPb--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kZmM2YTNkNWJmLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>NK</dc:creator></item><item><title><![CDATA[Instagram Graph API開発の開始手順]]></title><description><![CDATA[
 InstagramAPIとは
インスタのアカウントからプロフィール情報、画像、動画やいいね数などの投稿情報を収集することができるMeta社が提供している機能のこと。
今現在は個人アカウントからのデータ収集ができなくなり、プロアカウントに切り替える必要があります。
InstagramのAPIを使った個人開発をしているのですが、APIを使うのに登録や行う作業が最初にあり少し苦戦したので、その手順をまとめさせていただきます！

 本記事でわかること
最後まで読んでいただければ以下のようなことが理解できていると思います。

InstagramのAPIについて理解
InstagramAPIの登...]]></description><link>https://zenn.dev/hosoya_ren/articles/615bdf96a92707</link><guid isPermaLink="true">https://zenn.dev/hosoya_ren/articles/615bdf96a92707</guid><pubDate>Fri, 30 May 2025 10:17:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CXVrygfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Instagram%2520Graph%2520API%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hosoya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0JfWGxNdE5wRVlwTm5GUENGWV9DZ0RPYjZ4d3k3TnhtNWRpcDVTbHNIWGtyWllYND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hosoya</dc:creator></item><item><title><![CDATA[Java エンジニアになって FOLIO に入るまで]]></title><description><![CDATA[
 はじめに
2022/07から株式会社 FOLIO で働いている田口と申します。
FOLIO のバックエンドは全社的に Scala を採用しておりますが、所属しているエンジニアのバックグラウンドは様々で、前職で扱っていた言語に焦点を絞っても Java, PHP, Rust, Elixir, C++ などバラエティに富んでいます。
私自身は Java エンジニアとしてキャリアをスタートし、なんやかんやあって FOLIO に入社することになったのですが、本記事では「Java エンジニアが FOLIO に入るまで」と題して、私が Java エンジニアになって Scala を書き始め FOLI...]]></description><link>https://zenn.dev/folio_sec/articles/5b6d06d3692259</link><guid isPermaLink="true">https://zenn.dev/folio_sec/articles/5b6d06d3692259</guid><pubDate>Fri, 30 May 2025 07:55:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oY_o_pB1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%2520FOLIO%2520%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nozomitauguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYzYwMjI0MmIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FOLIO%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJejZwdTJzMTk1OEFMR0FMQlhGdVYwNDhjVmxQdWljZ2wydnI5MlE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nozomitauguchi</dc:creator></item><item><title><![CDATA[8 以降 Java に触れてない Scala エンジニア、Java の書き方を学び直す]]></title><description><![CDATA[
 はじめに
2022/07から株式会社 FOLIO で働いている田口と申します。
FOLIO のバックエンドは全社的に Scala を採用しており、私も今では日々 Scala を読み書きしていますが、元々は Java エンジニアでした。
https://zenn.dev/folio_sec/articles/5b6d06d3692259
FOLIO のバックエンドエンジニア採用では、プロセスの一つとして技術面接があり、候補者様の一番得意な言語を使用してプログラミングをしていただくことになっています。
色々な言語の中で Java で問題を解かれる方も一定数いらっしゃるのですが、面接官を務...]]></description><link>https://zenn.dev/folio_sec/articles/eb23deb09f2731</link><guid isPermaLink="true">https://zenn.dev/folio_sec/articles/eb23deb09f2731</guid><pubDate>Fri, 30 May 2025 07:51:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4lC23A7O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:8%2520%25E4%25BB%25A5%25E9%2599%258D%2520Java%2520%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%2520Scala%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2580%2581Java%2520%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B3%25E7%259B%25B4%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nozomitauguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjYzYwMjI0MmIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FOLIO%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJejZwdTJzMTk1OEFMR0FMQlhGdVYwNDhjVmxQdWljZ2wydnI5MlE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nozomitauguchi</dc:creator></item><item><title><![CDATA[Android開発におけるJVMバージョン設定：Toolchain・Compatibility・jvmTarget・JAVA_HOMEの役割]]></title><description><![CDATA[Androidアプリのビルドには、Java Development Kit (JDK) のバージョンに関する種々の設定――例えば、Toolchain、Target Compatibility、Source Compatibility、Kotlin  jvmTarget、JAVA_HOME など――が関係します。
これらの設定の役割・違いは、Androidの公式ドキュメント [1]では、以下のような図として整理されています。しかし、少なくとも私にとっては、初見で簡単に理解できるものではありませんでした。

図. AndroidビルドにおけるJDKの関係 (Androidの公式ドキュメントよ...]]></description><link>https://zenn.dev/kaseken/articles/2e1ca01ab2ae23</link><guid isPermaLink="true">https://zenn.dev/kaseken/articles/2e1ca01ab2ae23</guid><pubDate>Thu, 29 May 2025 16:44:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hKvzwXFl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BJVM%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E8%25A8%25AD%25E5%25AE%259A%25EF%25BC%259AToolchain%25E3%2583%25BBCompatibility%25E3%2583%25BBjvmTarget...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kent%2520Kaseda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MmUyNTgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kent Kaseda</dc:creator></item><item><title><![CDATA[Cloud Run で Cloud Profiler を利用する]]></title><description><![CDATA[
 はじめに
Google Cloud の 公式ドキュメント では Cloud Profiler がサポート対象として明記されているランタイムは GKE・GCE・App&nbsp;Engine などに限られ、2025‑05 時点で Cloud Run はリストに含まれていない。しかし実際には Java&nbsp;Agent をコンテナに同梱すれば Cloud Run でもプロファイルを取得できる。今回はその最小手順をまとめる。
手順の詳細はリポジトリ を参照してください。

 Dockerfile — Profiler&nbsp;Agent を組み込む
FROM gradle:8.5-j...]]></description><link>https://zenn.dev/cozy_corner/articles/9be6d676f1e3d9</link><guid isPermaLink="true">https://zenn.dev/cozy_corner/articles/9be6d676f1e3d9</guid><pubDate>Wed, 28 May 2025 15:40:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mKhpHCNn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Run%2520%25E3%2581%25A7%2520Cloud%25E2%2580%25AFProfiler%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cozy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXZPQmtpb0ZoNWxDcExyLWdrc0pqYXRORXI3VWhQeDdZUGRyX3RoRUpuUjNPTkZiNzM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cozy</dc:creator></item><item><title><![CDATA[入門equals() / hashCode() / toString()]]></title><description><![CDATA[

equals()メソッド

hashCode()メソッド

toString()メソッド

これらはすべてObjectクラスに定義されたメソッドです。これらの意味を解説します。普段はあまり意識しませんが、けっこう大事なメソッドです。

 環境

JDK 21


 equals()メソッドとは？

 概要
equals()メソッド は、あるクラスの2つのインスタンスが「等しい」かどうかを判定します。どうなれば「等しい」かは、クラスによって変わってくるはずです。
例えば、

商品を表すProductクラスでは、商品名nameが違っていても、商品IDidさえ等しければ同じ商品とみなす
申...]]></description><link>https://zenn.dev/masatoshi_tada/articles/0ea1d358b0e82f</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/0ea1d358b0e82f</guid><pubDate>Wed, 28 May 2025 07:31:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q1NE1Y-B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25A5%25E9%2596%2580equals%2528%2529%2520%252F%2520hashCode%2528%2529%2520%252F%2520toString%2528%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Javaの「関数型インターフェースの歴史的経緯」をざっくりまとめてみた[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者Wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。
間違い等あれば、指摘いただけると助かります。

 対象読者

Javaを勉強中の方
Java Silver試験を勉強中の方
関数型インターフェースの意義や歴史的経緯を知りたい方。


 結論
参考書を読んでもよくわからなかった「関数型インターフェース」の意義が、歴史的経...]]></description><link>https://zenn.dev/wakinoza/articles/e6270d8a7c81bc</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/e6270d8a7c81bc</guid><pubDate>Wed, 28 May 2025 05:27:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a0jZIv2W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2580%258C%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E6%25AD%25B4%25E5%258F%25B2%25E7%259A%2584%25E7%25B5%258C%25E7%25B7%25AF%25E3%2580%258D%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[Jolokia MCP ServerでJavaアプリをLLMから操作する]]></title><description><![CDATA[JavaにはもともとJMX (Java Management Extensions)という、アプリケーション管理用の内部APIが備わっています。JavaベースのほとんどのサーバーやフレームワークがJMXに基づく管理APIを提供しており、システム監視ツールを使ってそのAPIから各種のモニタリングをしていました。
このJMXを使えば、Javaに新しい仕組みやフレームワークを導入せずとも、どんなJavaアプリケーションでもMCPを介してLLMから複雑な操作を行うことができます。
JavaアプリケーションをMCPで操作するには、JMX over HTTPの技術であるJolokiaを使います。
h...]]></description><link>https://zenn.dev/tadayosi/articles/202505-jolokia-mcp</link><guid isPermaLink="true">https://zenn.dev/tadayosi/articles/202505-jolokia-mcp</guid><pubDate>Tue, 27 May 2025 13:44:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BE-DOeQD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jolokia%2520MCP%2520Server%25E3%2581%25A7Java%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592LLM%25E3%2581%258B%25E3%2582%2589%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BD%2590%25E8%2597%25A4%2520%25E5%258C%25A1%25E5%2589%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhMzQzMzFhZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>佐藤 匡剛</dc:creator></item><item><title><![CDATA[入門シリアライズ]]></title><description><![CDATA[
 環境

JDK 21


 シリアライズって何？
一言で言うと「インスタンスをファイル化する技術」です。インスタンスをファイル化することを シリアライズ 、ファイルからインスタンスに戻すことを デシリアライズ と言います。

シリアライズを利用することで、次のようなことが可能になります。

インスタンスを一時保存して、後でまた使う
ファイルを転送して、他の場所でインスタンスを使う

シリアライズは、われわれ開発者が使うことはほぼありません。次で説明するように、アプリケーションんサーバーなどがわれわれの見えないところで行なっていることがほとんどです。しかし、見えないところで何が起こって...]]></description><link>https://zenn.dev/masatoshi_tada/articles/e6eaea9be96ee7</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/e6eaea9be96ee7</guid><pubDate>Tue, 27 May 2025 07:06:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E_ShXByL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25B7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[#4 タイマーのロジックを作る]]></title><description><![CDATA[
 #4 タイマーのロジックを作る – JavaScriptで動かす！
今回は、いよいよこのアプリの心臓部であるタイマー機能をJavaScriptで実装していきます。


 💡 こんな機能を目指します

入力された時間をもとにカウントダウンする
作業時間・休憩時間を交互に切り替える
「Start」ボタンで動作、「Stop」「Reset」も機能



 🧪 最小構成で動かす
まずは 最低限の機能で動かしてみることがゴールです。


 🔧 JavaScriptの実装コード（試作版）
&lt;script&gt;
  const startBtn = document.getElementBy...]]></description><link>https://zenn.dev/magma_program/articles/33692444abd379</link><guid isPermaLink="true">https://zenn.dev/magma_program/articles/33692444abd379</guid><pubDate>Tue, 27 May 2025 06:45:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QJCtQA39--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25234%2520%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mAgmA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlE1LTgyWVdfSW5kQURGZFBlNi1nOWxVWGVNT0xzTm1nOHVWemwxMUQyLTFiM3Q2TT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mAgmA</dc:creator></item><item><title><![CDATA[Spring Boot × React で作るイベント予約管理システム（フロントエンド編）]]></title><description><![CDATA[
 はじめに
これまでSpring Bootを使って、バックエンド側の構築を中心に学習してきました。
今回はその続きとして、Reactを用いたフロントエンド開発に取り組んだ内容をまとめます。
バックエンドで作成したAPIとReactを連携させながら、画面上でのイベント登録や予約登録、一覧表示ができるシンプルな管理画面を構築していきます。
これまでの経緯や学習過程については、以下の記事でまとめています。
まだ読んでいない方は、併せてご覧いただけると今回の内容がより理解しやすくなるかと思います。

学習計画を立てた話
Javaの基礎とオブジェクト指向を学んでみた感想
Spring Bootの...]]></description><link>https://zenn.dev/hiruma_devlog/articles/7d5c14bf339bca</link><guid isPermaLink="true">https://zenn.dev/hiruma_devlog/articles/7d5c14bf339bca</guid><pubDate>Tue, 27 May 2025 03:43:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--910wPZza--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%2520%25C3%2597%2520React%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E4%25BA%2588%25E7%25B4%2584%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25EF%25BC%2588%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiruma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDhjN2U2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiruma</dc:creator></item><item><title><![CDATA[Spring Bootのリクエストのバリデーションとアノテーションについて]]></title><description><![CDATA[
 はじめに
こんにちは、クラウドエースの許です。
Spring Boot には、リクエストパラメータが正しいかを検証し、パラメータ不正時にリクエストを弾くことができる機能が備わっています。
そして、この機能はリクエストパラメータにアノテーションを付与することで実現されます。
例えば、以下のように @NotNull を付与することで、リクエストパラメータが null でないことを検証することができます。
    @NotNull
    private String string_value;
そして、これらのアノテーションは、jakarta.validation.constraints...]]></description><link>https://zenn.dev/cloud_ace/articles/9dc9a3c8a4e8df</link><guid isPermaLink="true">https://zenn.dev/cloud_ace/articles/9dc9a3c8a4e8df</guid><pubDate>Mon, 26 May 2025 08:21:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WU7SAK5s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B9%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OGMwYmM4MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クラウドエース株式会社</dc:creator></item><item><title><![CDATA[Java初心者向け：@Idアノテーションとデータベースの主キーを完全理解]]></title><description><![CDATA[
 はじめに
Javaでデータベースを扱う際によく見かける@Idアノテーション。「なんとなく必要そうだから書いている」という方も多いのではないでしょうか？
この記事では、Amazonのような実際のWebサービスを例に、なぜIDが必要なのか、どう使われているのかを分かりやすく解説します。

 @Idアノテーションとは？
@Idは、JPA（Java Persistence API）で使用されるアノテーションで、データベースのテーブルにおける**主キー（Primary Key）**を表します。
@Entity
public class User {
    @Id
    @Generated...]]></description><link>https://zenn.dev/wyuma/articles/f63be67c95dda8</link><guid isPermaLink="true">https://zenn.dev/wyuma/articles/f63be67c95dda8</guid><pubDate>Mon, 26 May 2025 07:17:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9s6_WfQe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%259A%2540Id%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E4%25B8%25BB%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E7%2590%2586%25E8%25A7%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wYuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkZjJmOWZjMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wYuma</dc:creator></item><item><title><![CDATA[Spring Securityで、SecurityFilterChainを複数作る]]></title><description><![CDATA[「一般ユーザーと管理者でセキュリティ設定を分けたい」「画面とWeb APIでセキュリティ設定を分けたい」という要件を実現する方法を調査しました。
Spring Securityとは何ぞやという人は、まず『プロになるためのSpring入門』を読むことをおすすめします。

 環境

JDK 21
Spring Boot 3.5
Spring Security 6.5


 まずは上手くいかなかった方法
今回は一般ユーザーと管理者でセキュリティ設定を分けることを考えます。
こんな感じでSecurityFilterChainを一般ユーザー用と管理者用で2つ作ります。
SecurityFilter...]]></description><link>https://zenn.dev/masatoshi_tada/articles/be9932c38b68c4</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/be9932c38b68c4</guid><pubDate>Mon, 26 May 2025 06:32:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4w_xcfa4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Security%25E3%2581%25A7%25E3%2580%2581SecurityFilterChain%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[#3 入力欄を設計する – 時間をどう入力する？]]></title><description><![CDATA[

 #3 入力欄を設計する – 時間をどう入力する？
今回は、タイマーに必要な**入力欄の設計と基本的なUI配置（CSS）**を行います。


 🎯 今回の目的

入力する項目を整理し、最小限のフォームを設計する
Stop/Resetボタンを含めたUI構成を決める
簡単なCSSを適用して、見やすく扱いやすい画面を作る



 ⌛ 入力する内容
このアプリでユーザーが入力するのは、以下の3つです：



入力項目
内容
例




作業時間
タイマーA
25分


休憩時間
タイマーB
5分


セッション回数
作業＋休憩の繰り返し回数
4回





 🧱 入力フォームとボタン（HTM...]]></description><link>https://zenn.dev/magma_program/articles/86e3753bb84924</link><guid isPermaLink="true">https://zenn.dev/magma_program/articles/86e3753bb84924</guid><pubDate>Mon, 26 May 2025 01:54:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FKAPJVMm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25233%2520%25E5%2585%25A5%25E5%258A%259B%25E6%25AC%2584%25E3%2582%2592%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%2599%25E3%2582%258B%2520%25E2%2580%2593%2520%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E3%2581%25A9%25E3%2581%2586%25E5%2585%25A5%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mAgmA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlE1LTgyWVdfSW5kQURGZFBlNi1nOWxVWGVNT0xzTm1nOHVWemwxMUQyLTFiM3Q2TT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mAgmA</dc:creator></item><item><title><![CDATA[🧱 カプセル化・アクセス修飾子・継承の完全整理]]></title><description><![CDATA[
 🧱 オブジェクト指向の基本概念まとめ


 1. カプセル化（Encapsulation）

データを直接触れないように隠し、getter/setter メソッドを通してのみアクセス可能にする仕組み。




構成要素
意味
例




private変数
外部から直接アクセス ❌
private String name;


getter
値を読み取るメソッド
public String getName()


setter
値を設定するメソッド
public void setName(...)



🔒 → 変数は private で隠す
🔓 → メソッドを通してのみ操作 → ミ...]]></description><link>https://zenn.dev/kmj13/articles/oop_encapsulation_access_inheritance_ja</link><guid isPermaLink="true">https://zenn.dev/kmj13/articles/oop_encapsulation_access_inheritance_ja</guid><pubDate>Sat, 24 May 2025 13:10:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8rtiPuwl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520%25E3%2582%25AB%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25AB%25E5%258C%2596%25E3%2583%25BB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E4%25BF%25AE%25E9%25A3%25BE%25E5%25AD%2590%25E3%2583%25BB%25E7%25B6%2599%25E6%2589%25BF%25E3%2581%25AE%25E5%25AE%258C%25E5%2585%25A8%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmj99%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno0azlnb19fcW1fbjVxdkFCYkJNU2U5X2VfYWZkTGEtbHVNZDFXR2pWV05CZTBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmj99</dc:creator></item></channel></rss>