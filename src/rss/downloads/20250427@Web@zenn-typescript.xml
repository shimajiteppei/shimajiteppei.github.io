<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 27 Apr 2025 06:12:53 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[MCP Quickstat For Client Developersを読む(typescript)]]></title><description><![CDATA[
 はじめに
MCPドキュメントのQuickstatｎ For Client Developersを読みながらうごかしたことをメモしておこうと思います。
https://modelcontextprotocol.io/quickstart/client
今回はTypescriptでやっていきます。

 読んでいく

 セットアップ
専用ディレクトリ作って、typescriptとmodelcontextprotocol/sdkが使えるようにセットアップしていきます。
$ mkdir mcp-client-typescript
$ cd mcp-client-typescript
$ npm...]]></description><link>https://zenn.dev/yasi/articles/learn-mcp-client-typescript</link><guid isPermaLink="true">https://zenn.dev/yasi/articles/learn-mcp-client-typescript</guid><pubDate>Sun, 27 Apr 2025 04:47:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8ttlvvMN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520Quickstat%2520For%2520Client%2520Developers%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2528typescript%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yasi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEd1cFBMTS1wcXlaYVlPcE5Uek9QemJpcXNCU3pMRHlJTlhaMTlTRnQ2RnVVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yasi</dc:creator></item><item><title><![CDATA[初心者のためのFactory Methodパターン入門]]></title><description><![CDATA[
 はじめに
プログラミングを学ぶ過程で、コードの再利用性や保守性を高めるための「デザインパターン」という概念に出会うことでしょう。その中でも今回は、オブジェクト指向プログラミングにおける基本的かつ重要なデザインパターンである「Factory Method（ファクトリーメソッド）パターン」について解説します。
このパターンは初めて学ぶ人にとっては少し難解に感じるかもしれませんが、理解すると多くの場面で活用できる便利なツールとなります。この記事では、Factory Methodパターンの基本概念から実装例、活用シーンまでをわかりやすく説明していきます。

 Factory Methodパタ...]]></description><link>https://zenn.dev/umibudou/articles/93192b2d527ad9</link><guid isPermaLink="true">https://zenn.dev/umibudou/articles/93192b2d527ad9</guid><pubDate>Sun, 27 Apr 2025 03:18:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iVy4LVqD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEFactory%2520Method%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Umibudou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Umibudou</dc:creator></item><item><title><![CDATA[おすすめの小説を見つけれる「リーディア 」を全体的にアップデートしました]]></title><description><![CDATA[こんにちは、もっちーです。
去年の12月に完成した「リーディア」という個人開発のアプリを改善しました。
https://zenn.dev/mnao46/articles/3dc7e4eb8d3aa3
一通りの開発が終わったらリーディアに対するモチベが下がってしまって、新しく散歩アプリの開発を始めることに。
このアプリについても記事を書こうと考えています。
そのため前回の記事から半年ほど時間が経ってしまいました。

 前回からの変更点

デザインを全体的に調整（AI全任せで）
フロントとバックを分ける（どちらもTypeScript）
フロントのデプロイ先をCloudflare Pagesに...]]></description><link>https://zenn.dev/mnao46/articles/339123364c34e9</link><guid isPermaLink="true">https://zenn.dev/mnao46/articles/339123364c34e9</guid><pubDate>Sun, 27 Apr 2025 02:57:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2n-dosj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A1%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYWY1NTI4ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もっちー</dc:creator></item><item><title><![CDATA[React + fetch + AbortController の最小構成]]></title><description><![CDATA[Reactコンポーネントにfetch機能を実装したい。かつ、任意のタイミングでキャンセルできるようにしたい。
…を実現するためのサンプルコードになります。
（正直、何かしらのfetchライブラリを使えば、もっと簡単に実現できる気がしますが。。）

 ソースコード

Sample.tsx
import { useCallback, useEffect, useRef, useState } from 'react';

export const Sample = () =&gt; {
  const [data, setData] = useState('');
  const [isLo...]]></description><link>https://zenn.dev/t_tonyo_maru/articles/8672df8e03c047</link><guid isPermaLink="true">https://zenn.dev/t_tonyo_maru/articles/8672df8e03c047</guid><pubDate>Sun, 27 Apr 2025 01:06:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--22X4qwlk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520fetch%2520%252B%2520AbortController%2520%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2582%2588%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNjVjZjg3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんよー。</dc:creator></item><item><title><![CDATA[GitHub ActionsをTypeScriptで開発する方法と移行のポイント]]></title><description><![CDATA[
 はじめに
action.yamlにロジックが増えてきたので、JavascriptAction(TypeScriptAction)に移行してちゃんと書く準備をしていく話です。

 TypeScript での GitHub Actions 開発環境のセットアップ
TypeScript で GitHub Actions を開発するための環境を整えましょう。以下は基本的なセットアップ手順です。
公式ドキュメントにはJavaScriptのセットアップ手順は紹介されています。
https://docs.github.com/ja/actions/sharing-automations/creat...]]></description><link>https://zenn.dev/tetoteto/articles/github-actions-typescript-info</link><guid isPermaLink="true">https://zenn.dev/tetoteto/articles/github-actions-typescript-info</guid><pubDate>Sun, 27 Apr 2025 00:11:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VSWGoQms--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2582%2592TypeScript%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%25AE%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TetoTeto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlIN1NhY21HVFFmR3hWQ1d2R01nX29ETVR0WU82UXJ6WGg1Z3dZOUs4VWRJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TetoTeto</dc:creator></item><item><title><![CDATA[Viteを使ってMy日記帳アプリを作り、Vercelでデプロイしました（React+TypeScript+Tailwind CSS）]]></title><description><![CDATA[
 デプロイしたWebアプリ


btf_diary（開発中）


 バージョン履歴
ver 0.1

プロトタイプをデプロイしました


 TODO

「保存」ボタンを適切な場所に配置
感情値を直感的に入力できるようにデザイン

折れ線グラフにしたものを別ページに配置


入力した日付は色が変わるようにデザイン
「今日のビジネス提案」

日記の入力後に「生成」ボタンを押すと、
日記の内容をもとにAIが考えたビジネス提案文が生成される
ビジネス提案に対するFBをフォームに入力する




 動機

日々の振り返りを行うため
ViteでReact + TypeScript + Tailwi...]]></description><link>https://zenn.dev/btforest/articles/769754f18af714</link><guid isPermaLink="true">https://zenn.dev/btforest/articles/769754f18af714</guid><pubDate>Sat, 26 Apr 2025 14:57:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KVoWHjFR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6My%25E6%2597%25A5%25E8%25A8%2598%25E5%25B8%25B3%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2580%2581Vercel%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588React%252BTypeScript%252BTail...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:btforest%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjRHTHk5MWY2Z0h4X0EtV0JPUXhYam1ONGt2N18waU42bkhlNXQ5QklDcmZWR2NPND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>btforest</dc:creator></item><item><title><![CDATA[初心者のためのAdapterパターン入門]]></title><description><![CDATA[
 はじめに
ソフトウェア開発の世界では、互換性のないインターフェースを持つコンポーネント同士を連携させる必要がよく生じます。既存のコード変更せずに新しいインターフェースに適合させたい場合、よく使われるのがAdapterパターンです。
本記事では初心者向けにAdapterパターンの基本概念、メリット、実装方法について解説します。

 Adapterパターンとは
Adapterパターンとは、既存のクラスにインターフェースを追加するために使用されるデザインパターンの一つです。このパターンでは、二つの異なるクラスを接続するためのAdapterクラスを定義します。Adapterクラスは、既存のク...]]></description><link>https://zenn.dev/umibudou/articles/8b217a018bc67e</link><guid isPermaLink="true">https://zenn.dev/umibudou/articles/8b217a018bc67e</guid><pubDate>Sat, 26 Apr 2025 10:59:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MJyQvFra--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAdapter%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Umibudou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Umibudou</dc:creator></item><item><title><![CDATA[JavaScriptで日付を扱うときの注意点：UTCとローカル時刻の違い]]></title><description><![CDATA[
 はじめに
日付を扱うコードを書いていて、こんな違和感を覚えたことはありませんか？

「日付を取得しただけなのに、想定より1日ずれている」

私自身、React Nativeアプリの開発中にこの問題に直面しました。
原因は、UTC（協定世界時）とローカル時刻（日本時間など） の違いにあります。
この記事では、new Date()とdayjs()で日付を取得する際に発生する、
タイムゾーンの違いによって日付がずれる問題について解説します。
※TypeScriptでも本質的には同じ問題が発生します。

 JavaScript標準の new Date() はUTC基準
例えば、今日の日付を取...]]></description><link>https://zenn.dev/fd2025/articles/0aabc3f183d8b9</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/0aabc3f183d8b9</guid><pubDate>Sat, 26 Apr 2025 06:01:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c6iC02Dh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25EF%25BC%259AUTC%25E3%2581%25A8%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[【備忘録】Next.jsとHono.jsのmonorepo構成でパラメータ送受信エラーに遭遇]]></title><description><![CDATA[
 はじめに
フロントエンド（Next.js）とバックエンド（Hono.js）の monorepo構成 でアプリケーションを開発しています。
今回は、APIパラメータの受け渡しで少し躓いた点について、自身の備忘も兼ねて紹介します。
TypeScriptを使用していても、型チェックでは検出できない不具合に遭遇することがあります。
本記事では、Next.jsでHonoクライアントを使用した開発中に発生した  「クエリパラメータが正しく送信されない問題」について自身の備忘も兼ねて扱います。

 問題の概要
今回のエラーに遭遇したのはシンプルなSNSのユーザ検索機能を開発している時でした。


...]]></description><link>https://zenn.dev/ren21/articles/840b465dcca26f</link><guid isPermaLink="true">https://zenn.dev/ren21/articles/840b465dcca26f</guid><pubDate>Sat, 26 Apr 2025 05:10:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iyAK-ehV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591Next.js%25E3%2581%25A8Hono.js%25E3%2581%25AEmonorepo%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E9%2580%2581%25E5%258F%2597%25E4%25BF%25A1%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E9%2581%25AD%25E9%2581%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YTk2YTVjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れん</dc:creator></item><item><title><![CDATA[AWS S3 と連携する MCP サーバーを作ってみてわかったこと 🪣🔌🤖]]></title><description><![CDATA[
 MCP とは？
Model Context Protocol (MCP)の説明としてはざっくり以下です。


コア機能: AI モデルが外部ツールやデータソースにアクセスできるようにする

主なメリット: 学習データを超えて AI 機能を拡張する

例え: AI モデル用の「USB-C」のような役割 - 汎用的なコネクター

実装: 開発者が LLM に接続できる MCP サーバーを作成する


 MCP アーキテクチャ
公式 MCP ドキュメントによると、MCP は言語モデルと外部コンポーネント間の標準化された通信プロトコルを確立します：


クライアント・サーバーアーキテクチャ:...]]></description><link>https://zenn.dev/samuraikun/articles/building_custom_mcp_server_to_connect_with_s3</link><guid isPermaLink="true">https://zenn.dev/samuraikun/articles/building_custom_mcp_server_to_connect_with_s3</guid><pubDate>Fri, 25 Apr 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LSDWT6l1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520S3%2520%25E3%2581%25A8%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2599%25E3%2582%258B%2520MCP%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2582%258F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2520%2520%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:samuraikun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjOGVjZGQ2NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>samuraikun</dc:creator></item><item><title><![CDATA[ディズニーのグッズ情報をNext.jsのAPI Routesで取得してみる]]></title><description><![CDATA[このページでは、Next.jsのAPI routesを使用して、サーバーサイドでWEBスクレイピングをしてみました。
!
今回はwebスクレイピングでサイトから情報を取得します。取得先のサーバーに過剰な負荷をかけないことに注意してください。

!
この記事を書いている人は初心者です!!当たり前なことを書いていると思いますが、あたたかい目でみてください!!


 とりあえずurlからhtmlを取得してみる
/api/scraping/goods で欲しい情報をjsonで返すようにしてみます。
まず、簡単にディズニーリゾートのグッズ情報のテキストを取得するコードを調べて書いてみました。

r...]]></description><link>https://zenn.dev/ar_ma/articles/480b77cedf752b</link><guid isPermaLink="true">https://zenn.dev/ar_ma/articles/480b77cedf752b</guid><pubDate>Fri, 25 Apr 2025 14:49:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Etjhj7gn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BA%25E3%2583%258B%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25B0%25E3%2583%2583%25E3%2582%25BA%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592Next.js%25E3%2581%25AEAPI%2520Routes%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Aroma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlZ5NVU1bnlsOWFWNGg4bEVlTkMtU05tYUdpYW4wNEFjcXRYVnNDRXBuRWszRFRHM0M9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Aroma</dc:creator></item><item><title><![CDATA[TypeScriptのexhaustiveness checkをsatisfiesで簡単に書く]]></title><description><![CDATA[みなさん、TypeScript書いてますか？
ふと気づくと、もうTypeScript 1.0から数えても11年が経過しているんですね。筆者も2015年くらいから本格的に触り始めた組なので、そろそろTypeScript 10年選手を名乗ってもよさそうです。
さて、これだけ長いことTypeScriptを触っていると、昔の文法を前提とした手癖というものも蓄積されていくものです。同僚と雑談していたところ、手癖を改めるべき便利なイディオムを教えてもらったので、備忘録として残しておきます。

 Before: 手癖で書いていたexhaustiveness check
TypeScriptには、exh...]]></description><link>https://zenn.dev/nkzn/articles/exhaustive-check-with-satisfies</link><guid isPermaLink="true">https://zenn.dev/nkzn/articles/exhaustive-check-with-satisfies</guid><pubDate>Fri, 25 Apr 2025 12:55:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GrnxqzNw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AEexhaustiveness%2520check%25E3%2582%2592satisfies%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nkzn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hpRkgxVktGMXZZOFk2eEtfZl9PVklHS2pEeWxkWG42MzVLU0VEZEE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nkzn</dc:creator></item><item><title><![CDATA[TypeScript Compilerの裏側をちょっとだけ理解する]]></title><description><![CDATA[
 背景
2025年5月に東京で開催されるTSKaigiに30分のセッションとしてプロポーザルを提出しました。
しかし、結果は残念ながら落選し、登壇することはできませんでした。
ですが、プロポーザルを提出するにあたって、TypeScript について整理していた内容や調査していた事がたくさんあり、それをそのままお蔵入りさせるのはもったいないと感じました。そのため、発表内容をできるだけそのまま記事にし、公開しようと思い当たりました。
記事として文字起こしを行うと少し分量として多くなってしまうかもしれないのですが、TypeScript の経験が少ない初学者や、TypeScript を何となく...]]></description><link>https://zenn.dev/noko_noko/articles/f09d10cae0e5f7</link><guid isPermaLink="true">https://zenn.dev/noko_noko/articles/f09d10cae0e5f7</guid><pubDate>Fri, 25 Apr 2025 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FxBkKvpl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Compiler%25E3%2581%25AE%25E8%25A3%258F%25E5%2581%25B4%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%25A0%25E3%2581%2591%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%25A1%25E3%2581%25AE%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjZDZjM2E1ZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つちのこ</dc:creator></item><item><title><![CDATA[TypeScriptバックエンドの技術選定、Hono + Drizzleという今どきの選択肢]]></title><description><![CDATA[
 TypeScriptバックエンドの技術選定、Hono + Drizzleという今どきの選択肢
お疲れ様です！まんてらです！
最近、Express + TSOAでTypeScript製のWebAPIを作っていたのですが、調べているうちに Nest.js や Prisma など、いろんな選択肢が出てきて頭が混乱…。
「実際に現場で使っている人たちはどうしてるんだろう？」と思い、まんてらスタジオのDiscordで相談してみました。
その中で出てきた提案と知見がすごく参考になったので、この記事で整理して共有します。


 🧩 私が感じていた課題


TSOA + Expressで開発している...]]></description><link>https://zenn.dev/manntera/articles/378d76cd24b056</link><guid isPermaLink="true">https://zenn.dev/manntera/articles/378d76cd24b056</guid><pubDate>Fri, 25 Apr 2025 05:07:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c_y9XaQd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E9%2581%25B8%25E5%25AE%259A%25E3%2580%2581Hono%2520%252B%2520Drizzle%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E4%25BB%258A%25E3%2581%25A9%25E3%2581%258D%25E3%2581%25AE%25E9%2581%25B8%25E6%258A%259E%25E8%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2593%25E3%2581%25A6%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25B8%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NWJmOTI0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まんてらスタジオ</dc:creator></item><item><title><![CDATA[React開発で迷わない：一時コンポーネントは$lowerCamelCaseで書こう]]></title><description><![CDATA[
 結論
この記事は

一時定義のコンポーネントの命名規則を「$ + lowerCamelCase」にする（新ルール）
exportするコンポーネントはUpperCamelCase（従来のルール）

という命名規則を提案するという内容です。

 はじめに
こんにちは。
みなさんReactで開発してますか？
私はここ10年くらい、ずっとReactを触り続けてます。
この記事では最近使ってみてよかった命名ルールをみなさんに提案してみたいと思います。

 既存の命名ルールのおさらい
Reactコンポーネントの命名の基本は「UpperCamelCase」です。
export const Desc...]]></description><link>https://zenn.dev/gawagawa_99/articles/8754e840b04794</link><guid isPermaLink="true">https://zenn.dev/gawagawa_99/articles/8754e840b04794</guid><pubDate>Fri, 25 Apr 2025 03:40:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CnusMWHH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E8%25BF%25B7%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259A%25E4%25B8%2580%25E6%2599%2582%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AF%2524lowerCamelCase%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2593%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k.kawano%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pheTUwamthQkN3cWx6S2luYUdRR196dUZ0dzNnQVM1c0dHemlBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k.kawano</dc:creator></item><item><title><![CDATA[Vercel templateのHono.jsをローカル環境で動かしたい(vercelにデプロイまで)]]></title><description><![CDATA[
 はじめに
この記事を作成した経緯としては、vercel上にデプロイするAPIをHono.jsを使って作成していて、開発環境(localhost)で動作確認を行おうとしたところ、デフォルトではpackage.jsonにdevコマンドがなくどのようにローカル環境で動かせば良いのか躓いたためです。
筆者のように最近Hono.jsを触り始めたという方の参考になれば幸いです。
下記の方法でも動作はしますが、より良い方法ございましたら是非ご教示ください。

 Hono.jsのセットアップ
今回パッケージマネージャーはnpmを使用します。
他のパッケージマネージャーを使用している方は別途お使いのコ...]]></description><link>https://zenn.dev/ren21/articles/e48dbe0ad3d343</link><guid isPermaLink="true">https://zenn.dev/ren21/articles/e48dbe0ad3d343</guid><pubDate>Fri, 25 Apr 2025 02:46:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UaaBdXog--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520template%25E3%2581%25AEHono.js%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2528vercel%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25BE%25E3%2581%25A7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YTk2YTVjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れん</dc:creator></item><item><title><![CDATA[コンポーネントライブラリ開発におけるcvaやTailwind Variantsもどき]]></title><description><![CDATA[があれば便利だなと思いましたが、
たかが文字列結合だけの処理にライブラリ依存したくないので自作することにしました。

 詳細
バリエーション毎のスタイルを作成することはコンポーネント実装でお馴染みであり、近年は省力化のためにClass Variance AuthorityやTailwind Variantsといったライブラリもよく使われてます。
もし上記のライブラリを使わず実装しようとしたとき、大した問題ではないのですが条件分岐はオブジェクトのマッピング・if・Switch・三項演算子などの書き方の幅が産まれてしまい、本質的ではない議論をしがちです。

 完成形
!
cnはclsxとtw...]]></description><link>https://zenn.dev/yhase_rqp/articles/c63233223678d8</link><guid isPermaLink="true">https://zenn.dev/yhase_rqp/articles/c63233223678d8</guid><pubDate>Fri, 25 Apr 2025 01:30:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cRSKlw96--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258Bcva%25E3%2582%2584Tailwind%2520Variants%25E3%2582%2582%25E3%2581%25A9%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyZTY1OTg3NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yha</dc:creator></item><item><title><![CDATA[226. Invert Binary Tree]]></title><description><![CDATA[バイナリツリーの根（root）が与えられたとき、そのツリーを反転し、反転後の根を返してください。
例1:
入力: root = [4,2,7,1,3,6,9]
出力: [4,7,2,9,6,3,1]
例2:
入力: root = [2,1,3]
出力: [2,3,1]
例3:
入力: root = []
出力: []

]]></description><link>https://zenn.dev/idapan/articles/9039c2f7ad9bc4</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/9039c2f7ad9bc4</guid><pubDate>Thu, 24 Apr 2025 21:54:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9fTNUr_x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:226.%2520Invert%2520Binary%2520Tree%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[AI Editorとともに作る、災害時に衛星撮像すべき場所の提案システム]]></title><description><![CDATA[今回は災害対応の事例を題材に検証を行いたいと思います。
あわせて、AI Editorを使いこなしていきたいと思い、新しい機能をCursorで、Claudeさんと一緒につくってみようとおもいます。

 やりたいこと

地震や大雨があったときに、　対応エリアが広すぎてどこを撮像してよいかわからない
そんなときに、複数の要素から撮像候補を提案してくれて、理由を説明してくれるAgent




 使える資源、制約

日本エリアであれば国交省が多種多様なデータを管理、更新してくれています。今回は下記を利用します

国土数値情報ダウンロードサイト: https://nlftp.mlit.go.jp/...]]></description><link>https://zenn.dev/singularity/articles/9dd5a7af7c952d</link><guid isPermaLink="true">https://zenn.dev/singularity/articles/9dd5a7af7c952d</guid><pubDate>Thu, 24 Apr 2025 15:36:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CnEOB9Ev--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%2520Editor%25E3%2581%25A8%25E3%2581%25A8%25E3%2582%2582%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2581%25E7%2581%25BD%25E5%25AE%25B3%25E6%2599%2582%25E3%2581%25AB%25E8%25A1%259B%25E6%2598%259F%25E6%2592%25AE%25E5%2583%258F%25E3%2581%2599%25E3%2581%25B9%25E3%2581%258D%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AE%25E6%258F%2590%25E6%25A1%2588%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kozayupapa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Y2ZkMTM5ZTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kozayupapa</dc:creator></item><item><title><![CDATA[#90　三目並べの盤面の評価の例]]></title><description><![CDATA[
 三目並べの盤面の評価の例
今回の記事は三目並べの盤面の評価してみようと思います
この記事は前回の続きです

 盤面の評価方法
今回はシンプルに2つの石が隣り合っている時に点数を加算するようにします

 実装例
⭕️❌ゲームに必要なクラスとして前回の記事で作成したFieldクラスに、盤面の判定を行うevaluate()を追加作成します。
また、3x3マスでは読み切ってしまうので、盤面を8x8に拡張します

 評価
まずは、コンストラクタで、評価に必要なビットボード(2つの石が並んでいるパターン)を生成し、evaluate()でパターンに一致する個数(黒で一致した個数 - 白で一致した個...]]></description><link>https://zenn.dev/nxted_sapporo/articles/912ba6b8c533ca</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/912ba6b8c533ca</guid><pubDate>Thu, 24 Apr 2025 07:20:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gKrWVFFG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252390%25E3%2580%2580%25E4%25B8%2589%25E7%259B%25AE%25E4%25B8%25A6%25E3%2581%25B9%25E3%2581%25AE%25E7%259B%25A4%25E9%259D%25A2%25E3%2581%25AE%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25AE%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item></channel></rss>