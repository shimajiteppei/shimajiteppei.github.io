<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 10 Jun 2025 06:47:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[名前が似ているNext.js、Nuxt.js、NestJSの違いを整理してみた]]></title><description><![CDATA[プロダクト開発を始めたばかりの段階で、JavaScript関連のフレームワークの多さに戸惑うことは少なくありません。特に、「Next.js」「Nuxt.js」「NestJS」のように名前が似ているものは、その役割を混同しやすいと感じています。
この記事では、これら3つのフレームワークについて、自身の理解を整理し、それぞれの違いと用途をまとめます。

 1. 各フレームワークの概要
まず、大まかな分類から整理します。



フレームワーク名
読み方
種類
主な用途
特徴




Next.js
ネクストジェイエス
フロントエンドフレームワーク
Reactアプリケーションの構築、サーバーサイ...]]></description><link>https://zenn.dev/ryo51/articles/bdb526c7e02519</link><guid isPermaLink="true">https://zenn.dev/ryo51/articles/bdb526c7e02519</guid><pubDate>Tue, 10 Jun 2025 05:15:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--htxHpBjX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258D%25E5%2589%258D%25E3%2581%258C%25E4%25BC%25BC%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BNext.js%25E3%2580%2581Nuxt.js%25E3%2580%2581NestJS%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2RxTnRobUN2bE1CQk9lNG8xYzMtQmMtZHZjb2pEenJtdE1DRGpObURYemRjeENRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTech</dc:creator></item><item><title><![CDATA[多すぎるJavaScriptフレームワーク！関係性を整理してみた]]></title><description><![CDATA[プロダクト開発エンジニアとして学習を進める中で、JavaScriptに関する様々なキーワードに触れる機会が増えてきました。特に「フレームワーク」と呼ばれるものについては、JavaScript、Node.js、Next.js、React、TypeScriptといった個々の技術は使ったことがあっても、それらがどういう位置づけで、お互いにどう関係しているのか、全体像が見えずに混乱することがありました。そこで今回は、自分が理解した内容を整理し、それぞれの関係性についてまとめてみました。

 1. 全ての基盤：JavaScriptとその拡張
まず、全ての中心にあるのがJavaScriptというプロ...]]></description><link>https://zenn.dev/ryo51/articles/d9b832c4dc26ec</link><guid isPermaLink="true">https://zenn.dev/ryo51/articles/d9b832c4dc26ec</guid><pubDate>Tue, 10 Jun 2025 05:14:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IvAPqy4C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E3%2581%2599%25E3%2581%258E%25E3%2582%258BJavaScript%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25EF%25BC%2581%25E9%2596%25A2%25E4%25BF%2582%25E6%2580%25A7%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2RxTnRobUN2bE1CQk9lNG8xYzMtQmMtZHZjb2pEenJtdE1DRGpObURYemRjeENRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTech</dc:creator></item><item><title><![CDATA[JavaScript３大フレームワーク：Angular、React、Vue.js を理解する]]></title><description><![CDATA[
 JavaScriptフレームワークの種類
JavaScriptには様々なフレームワークやライブラリが存在します。これらは、より効率的かつ大規模なアプリケーション開発を可能にするためのツールです。UI開発に特化したもの、データ管理に強みを持つものなど、それぞれ異なる特徴を持っています。
一般的な分類としては、以下の点が挙げられます。


フロントエンドフレームワーク: 主にユーザーインターフェース（UI）の構築に使用されます。Webブラウザ上で動作し、ユーザーが直接触れる部分の開発を効率化します。


具体例: Angular, React, Vue.js, Svelte, Next....]]></description><link>https://zenn.dev/ryo51/articles/57713213f1fc49</link><guid isPermaLink="true">https://zenn.dev/ryo51/articles/57713213f1fc49</guid><pubDate>Tue, 10 Jun 2025 03:21:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---YsEhJNE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25EF%25BC%2593%25E5%25A4%25A7%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25EF%25BC%259AAngular%25E3%2580%2581React%25E3%2580%2581Vue.js%2520%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2RxTnRobUN2bE1CQk9lNG8xYzMtQmMtZHZjb2pEenJtdE1DRGpObURYemRjeENRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTech</dc:creator></item><item><title><![CDATA[関西人のボクがTypeScriptの型を一挙紹介するで]]></title><description><![CDATA[
 TypeScriptの主要な型
TypeScriptの勉強をしようと思ったは良いものの、あれ？どんな型やっけ？ドキュメント見てもいまいちピンとこーへんという君に、とりあえず分かった風になれる簡単型説明をお届けするやで。

 string（文字列型）
文字列を表す型やで。テキストデータを扱うときに使うんや。
let name: string = "田中はん";

 number（数値型）
整数も小数も全部まとめて数値を表す型やねん。計算に使うで。
let age: number = 25;

 boolean（真偽値型）
trueかfalseの2つの値しか取れへん型や。条件判定でよう使...]]></description><link>https://zenn.dev/fushimeer/articles/cb96a538406ca1</link><guid isPermaLink="true">https://zenn.dev/fushimeer/articles/cb96a538406ca1</guid><pubDate>Mon, 09 Jun 2025 13:40:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xmACJiLo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%25A2%25E8%25A5%25BF%25E4%25BA%25BA%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25AF%25E3%2581%258CTypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E4%25B8%2580%25E6%258C%2599%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meer%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YWVjZDM1YmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meer</dc:creator></item><item><title><![CDATA[Next.js App RouterのコンポーネントをVS Codeでサーバー・クライアント別に可視化する]]></title><description><![CDATA[Next.js v13でサーバーコンポーネントが導入されて以降、App Routerを用いた開発では、あるコードがサーバー側・クライアント側のどちらで実行されるのかを意識する必要が出てきました。この境界が識別しづらいことは、開発者にとって新たな課題となっていると思います。
実行される環境を見誤ると、クライアント専用のAPIをサーバーコンポーネントで呼び出してしまったり、反対にサーバーコンポーネントのみで行いたい処理をクライアントサイドへ露呈してまいセキュリティーリスクへ繋がったり、またバンドルサイズが気づいたら想定をはるかに上回る大きさへ膨れ上がっているかもしれません。
この記事ではこの...]]></description><link>https://zenn.dev/makotot/articles/ec6c631bc83e9e</link><guid isPermaLink="true">https://zenn.dev/makotot/articles/ec6c631bc83e9e</guid><pubDate>Mon, 09 Jun 2025 13:33:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CHIfmUWa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520Router%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592VS%2520Code%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25BB%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E5%2588%25A5%25E3%2581%25AB%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makotot%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5M2RmZGFhYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>makotot</dc:creator></item><item><title><![CDATA[typescript-mcp で AI に LSP のリファクタリング機能を与える]]></title><description><![CDATA[一旦 npx -y typescript-mcp@latest で MCP サーバーが動くところまで作った。
https://github.com/mizchi/typescript-mcp
主語大きめだけど、 npm の名前空間が空いてたので...
これの続編
https://zenn.dev/mizchi/articles/claude-local-mcp-server

 TL;DR

既存のエージェントの内蔵ツールはセマンティックな AST 操作ができない

書き換えてみて駄目だったら修正、みたいな挙動


MCP サーバーとして、 Rename, Move File, Go t...]]></description><link>https://zenn.dev/mizchi/articles/introduce-typescript-mcp</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/introduce-typescript-mcp</guid><pubDate>Mon, 09 Jun 2025 13:32:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sfo995Ci--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:typescript-mcp%2520%25E3%2581%25A7%2520AI%2520%25E3%2581%25AB%2520LSP%2520%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25B8%258E%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[Reactの学習記録的な感じで書いてみます！]]></title><description><![CDATA[
 はじめに：Reactの勉強、はじめてみたけど…
「今どきのWebサイトを作れるようになりたい！」と思ってReactの勉強を始めたみなさん。
こんにちは！（私だけ？w）
…ところで、始めてみてどうですか？
なんだかよくわからないし、色々ルールがあって「うわーっ！」ってなってませんか？
わかります。私も最初はそうでした。
でも大丈夫！実は、まず基本の3つだけ分かれば、Reactがぐっと身近になって、一気に見通しが良くなるはずです！（たぶん）
今日はその3つのポイントを、一緒に見ていきましょう！

 その１：Webページは「レゴブロック」の集まり！
Reactのいちばん大事な考え方は、We...]]></description><link>https://zenn.dev/pataro/articles/94ceec4e21ed50</link><guid isPermaLink="true">https://zenn.dev/pataro/articles/94ceec4e21ed50</guid><pubDate>Mon, 09 Jun 2025 13:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lo5zuw3M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E7%259A%2584%25E3%2581%25AA%25E6%2584%259F%25E3%2581%2598%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pataro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0MDkwNGY2MmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pataro</dc:creator></item><item><title><![CDATA[Chakra UI v3アップデートのハマりどころまとめ]]></title><description><![CDATA[こんにちは、0yuといいます。普段は某エンタメ企業でフロントエンドエンジニアをしている傍ら、株式会社ANYLANDのファンサービス事業でフロントエンド業務のお手伝いをさせていただいています。

 はじめに
株式会社ANYLANDでは、ファンクラブサイトのフロントエンド開発においてUIライブラリに「Chakra UI」を使用しています。
先日、私たちはChakra UIのバージョンv2からv3へのメジャーアップデート対応を行いました。このアップデートには多数の破壊的変更が含まれており、詳細は公式の「Migration to v3」に記載されています。
今回のアップデート対応は、QA検証を含...]]></description><link>https://zenn.dev/anyland/articles/3d2b09eb8198a3</link><guid isPermaLink="true">https://zenn.dev/anyland/articles/3d2b09eb8198a3</guid><pubDate>Mon, 09 Jun 2025 10:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Acl9QFco--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chakra%2520UI%2520v3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E3%2583%258F%25E3%2583%259E%25E3%2582%258A%25E3%2581%25A9%25E3%2581%2593%25E3%2582%258D%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:0Yu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEANYLAND%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ODViMmI1YjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>0Yu</dc:creator></item><item><title><![CDATA[【これはヤバい】Convexを試したらあらゆる管理が不要になる未来が見えた]]></title><description><![CDATA[なぜオレはあんな無駄な時間（数週間で AI を駆使して知見のないもの含めた使用技術の検証と α 版のリリースに死力を尽くした）を．．．
本記事では Next.js + Vercel + Convex を想定して試したので，開発体験の素晴らしさと Convex のヤバさについて紹介する．
Convex は Next.js 以外にもサポートしているが，Vercel との親和性など考えると特にこだわりがなければ Next.js を使うのが良さそう．個人的に Rust に対応しているのがアツいのでどこかで試したい．

 Convex とは
超強い BaaS．DB，ストレージ，リアルタイム通信，サ...]]></description><link>https://zenn.dev/taroosg/articles/20250609173737-3ea3f2062a8cbd</link><guid isPermaLink="true">https://zenn.dev/taroosg/articles/20250609173737-3ea3f2062a8cbd</guid><pubDate>Mon, 09 Jun 2025 09:53:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UkL784SF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2581%2593%25E3%2582%258C%25E3%2581%25AF%25E3%2583%25A4%25E3%2583%2590%25E3%2581%2584%25E3%2580%2591Convex%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2581%2582%25E3%2582%2589%25E3%2582%2586%25E3%2582%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%258C%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%258C%25E8%25A6%258B%25E3%2581%2588%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOGZiYzgwODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taro</dc:creator></item><item><title><![CDATA[AngularエンジニアのためのReact入門：クラスから関数へ]]></title><description><![CDATA[
 はじめに
Angularでクラスベースのコンポーネント設計に慣れているエンジニアにとって、Reactの「関数型コンポーネント」は一見して異質に映るかもしれません。この記事では、Angular開発者の視点から、Reactの思想と構造を分かりやすく解説していきます。


 クラスベースと関数型の違い
Angularでは次のようなクラスベースの構造が基本です：
@Component({...})
export class HelloComponent {
  name = 'Angular';
  constructor() {}

  greet() {
    return `Hell...]]></description><link>https://zenn.dev/hibikiumekawa/articles/62fda16e8a27a7</link><guid isPermaLink="true">https://zenn.dev/hibikiumekawa/articles/62fda16e8a27a7</guid><pubDate>Mon, 09 Jun 2025 09:13:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yv67PCQK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEReact%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:umekawahibiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTF82QlV6VGFvLXpmTjV0OVBlUjAxdk5RYVFJMWN1VjRWRG5BTnhEWEJGejRRQzFnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>umekawahibiki</dc:creator></item><item><title><![CDATA[MastraでAIエージェントとチャットしてみる]]></title><description><![CDATA[
 背景
弊社は全社的にAI活用が進んでいます。
私のチームでも週次でAI活用について共有する機会があります。
これに便乗してAIエージェントがどのようになっているのか概要を掴む為に今回TS製のAIエージェントフレーワークを触ってみます。

 Mastraとは
https://mastra.ai/ja/docs

オープンソースのTypeScriptエージェントフレームワーク
AIアプリケーションや機能を構築するために必要なプリミティブを提供するように設計されています

プリミティブとは

複雑な構造を形作る際の構成要素として使われる、単純あるいは基本的な構造や要素

https://e...]]></description><link>https://zenn.dev/immedio/articles/22d3854ce991c4</link><guid isPermaLink="true">https://zenn.dev/immedio/articles/22d3854ce991c4</guid><pubDate>Mon, 09 Jun 2025 05:31:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KUCHO5pv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25A7AI%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A8%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yamatai12%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlZjc0OTgxOWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:immedio%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYTAzNmI1OTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamatai12</dc:creator></item><item><title><![CDATA[Jestを使ったテスト手法まとめ]]></title><description><![CDATA[
 はじめに
Jestを使ったテストに触れていく中で公式サイトも参照したり記事を見て理解したりとしていましたが
自分で記事にすることで理解が深まったり公式サイトを閲覧しにいったりするため、
記憶として定着する面もあるのかなと思いましたので自身の備忘録としてまとめたいと思います。
認識ミスありましたら教えていただけますと幸いです。

 jest.fn()
jest.fnは新しいモック関数を作成するために使用されます。モック関数はテスト中に呼び出された回数や引数を記録するほか、任意の実装を提供することもできます。
const mockFn = jest.fn();//jestの関数として定義...]]></description><link>https://zenn.dev/sonicmoov/articles/d499515b602c38</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/d499515b602c38</guid><pubDate>Mon, 09 Jun 2025 04:35:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KnE9tXqW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:n.kawashima%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3BkQkZZUGlFVEIwUzV6NWdBV2F2M0FEWUxWVG9tblJqSW0ybl93QjVaRGdrUm1nPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n.kawashima</dc:creator></item><item><title><![CDATA[DI（依存性注入）の基礎を理解する【Part2】〜手動new地獄からの脱却！DIコンテナ入門〜]]></title><description><![CDATA[
 はじめに
前回の記事でDIの基本概念については理解できたかと思います。
前回の記事では…

DIの基本は「使うものは自分で作らず、外からもらう」
依存の制御を外に出すことで、設計が柔軟でテストしやすくなる
interfaceと組み合わせることで、本当に強力な疎結合設計が可能になる

みたいな話をしましたね。
さて、DIを使った事で疎結合な設計が可能になった訳ですが、では、DIが複雑な構造になってきた場合どんな事になってしまうのでしょうか？
また、ソースコードを追いながらより具体的に知りたい場合は、下記のリポジトリをご覧ください
https://github.com/manntera/...]]></description><link>https://zenn.dev/manntera/articles/fab5e47e9cce0e</link><guid isPermaLink="true">https://zenn.dev/manntera/articles/fab5e47e9cce0e</guid><pubDate>Mon, 09 Jun 2025 03:08:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--46-1CmFl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DI%25EF%25BC%2588%25E4%25BE%259D%25E5%25AD%2598%25E6%2580%25A7%25E6%25B3%25A8%25E5%2585%25A5%25EF%25BC%2589%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Part2%25E3%2580%2591%25E3%2580%259C%25E6%2589%258B%25E5%258B%2595new%25E5%259C%25B0%25E7%258D%2584%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E8%2584%25B1%25E5%258D%25B4%25EF%25BC%2581DI%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2585%25A5%25E9%2596%2580%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2593%25E3%2581%25A6%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25B8%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NWJmOTI0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まんてらスタジオ</dc:creator></item><item><title><![CDATA[Web 上で Cursor や Copilot のようなタブ入力補完を実装する]]></title><description><![CDATA[Cursor[1] や Copilot、便利ですよね！ これらのツールが提供する大きな機能として入力補完が挙げられ、人間が雑に書いたコードを修正してくれたり、ある箇所を修正すると他の箇所もまとめて修正[2]してくれたりします[3]。また、複雑なショートカットを必要とせず、それらの提案を Tab キーの一押しで適用／棄却できる点も優れた UX であると感じています。
さて、このような機能が他の様々なエディタ、特に Web サイトの入力フォームに実装されれば大変有用だと感じたため、React を用いて入力補完を再現してみることにしました。やや複雑 GUI みがあったので、その際の実装の知見を...]]></description><link>https://zenn.dev/inaniwaudon/articles/2445ff6731afef</link><guid isPermaLink="true">https://zenn.dev/inaniwaudon/articles/2445ff6731afef</guid><pubDate>Sun, 08 Jun 2025 23:51:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zlp3xtAG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%2520%25E4%25B8%258A%25E3%2581%25A7%2520Cursor%2520%25E3%2582%2584%2520Copilot%2520%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E3%2582%25BF%25E3%2583%2596%25E5%2585%25A5%25E5%258A%259B%25E8%25A3%259C%25E5%25AE%258C%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25AA%25E3%2581%25AB%25E3%2582%258F%25E3%2581%2586%25E3%2581%25A9%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0YjlhYjgzNmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いなにわうどん</dc:creator></item><item><title><![CDATA[TypeScript 5.6 の型システムに完全敗北した深夜3時の記録]]></title><description><![CDATA[TypeScript 5.6 にアップグレードしたら、今まで動いていたコードが真っ赤になった。型エラーの海。コンパイルが通らない。深夜3時、モニターの前で頭を抱えた。結局、新しい型システムの挙動を理解するのに8時間かかった。その戦いの記録を残しておく。

 事件の発端：何気ないアップグレード
金曜の夕方5時。軽い気持ちで TypeScript をアップグレードした。
{
  "devDependencies": {
    "typescript": "^5.6.0"
  }
}
npm install して、いつものように npm run build。そしたら画面が真っ赤になった。
F...]]></description><link>https://zenn.dev/unikoukokun/articles/5f39fc9bb0fbc3</link><guid isPermaLink="true">https://zenn.dev/unikoukokun/articles/5f39fc9bb0fbc3</guid><pubDate>Sun, 08 Jun 2025 21:30:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZUc4QAyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25205.6%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E5%25AE%258C%25E5%2585%25A8%25E6%2595%2597%25E5%258C%2597%25E3%2581%2597%25E3%2581%259F%25E6%25B7%25B1%25E5%25A4%259C3%25E6%2599%2582%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25B3%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmYjA3NjA5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユニコ🦄</dc:creator></item><item><title><![CDATA[MCP Server - Streamable HTTP 最小構成]]></title><description><![CDATA[
 はじめに
本日、MCP ServerのStreamable HTTPの最小構成版をGitHubに公開しました！
https://github.com/Masa1984a/Minimum_MCP_StreamableHTTP
現在よく見るMCPのほとんどは、STDIOという仕組みをとっています。
これはMCP Serverをローカルにおいて、ファイル処理や外部サービスとつなぐイメージです。
一方で、Streamable HTTPはリモート上にMCP Serverを置いて外部サービスとつなぐイメージで、LLMやAIエージェントサービスから、MCP Server経由で複雑な検索やAIエージ...]]></description><link>https://zenn.dev/acntechjp/articles/16b36cbf0347e6</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/16b36cbf0347e6</guid><pubDate>Sun, 08 Jun 2025 13:23:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PuQXvpgS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520Server%2520-%2520Streamable%2520HTTP%2520%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%259E%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%2520%2528Masanori%2520Yos...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MzkwNDBmYjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マッサン (Masanori Yoshida)</dc:creator></item><item><title><![CDATA[LambdaからGen2 Client経由で呼べるようになって便利になった話]]></title><description><![CDATA[
 🤯 Amplfiy Gen2を利用したLambdaの中で、backend/dataにアクセスしたいが大変問題

Gen2 Userなら必ずぶつかる壁の1つでもあるんじゃないかなと思ってる問題で、defineFunctionで定義した、lambdaからconst schema = a.schemaのデータに対してデータ取得したい場合などがあった場合、swift clientでよくやる、コードを生成して、aws-appsyncを利用して、AppSync Clientを叩いて実装ということが必要でした。
これらを利用したユースケースとして、マルチテナントで運用してるSaasで利用したい場合...]]></description><link>https://zenn.dev/timimamushi/articles/91575f94b0d600</link><guid isPermaLink="true">https://zenn.dev/timimamushi/articles/91575f94b0d600</guid><pubDate>Sun, 08 Jun 2025 13:09:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g4OD7Ru5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%25E3%2581%258B%25E3%2582%2589Gen2%2520Client%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B9%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:timimamushi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDcnRXZ0tvMFZHRWxuX3I3OFVKejBhcEN5ekIwRi1DZEJrT1QzVVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>timimamushi</dc:creator></item><item><title><![CDATA[TypeScript × Next.jsで作るマルチツールアプリ 〜型安全・UI統一・機能追加まで全部TypeScriptでやってみた～]]></title><description><![CDATA[
 １．はじめに
「毎日使いたい開発ツールを1ヶ所にまとめたい！」
そんな思いから、WebアプリをTypeScript＋React＋Next.jsで開発しました。

https://is0383kk.github.io/Web-dev-tools/
このWEBアプリでは複数の開発系ツールをまとめて提供しています。

マークダウンエディタ
JSONフォーマッター
XMLフォーマッター
パスワードジェネレーター
QRコードジェネレータ
JSON⇔YAMLコンバーター
CSV⇔JSONコンバータ
サイトマップジェネレータ
テキストカウンター

※現時点では機能数はまだ少なく今後追加予定です🙇‍...]]></description><link>https://zenn.dev/is0383kk/articles/a9fa43011abeda</link><guid isPermaLink="true">https://zenn.dev/is0383kk/articles/a9fa43011abeda</guid><pubDate>Sun, 08 Jun 2025 11:54:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7fqcEsGf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25C3%2597%2520Next.js%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2580%259C%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2583%25BBUI%25E7%25B5%25B1%25E4%25B8%2580%25E3%2583%25BB%25E6%25A9%259F%25E8%2583%25BD%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%25BE%25E3%2581%25A7%25E5%2585%25A8%25E9%2583%25A8TypeSc...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZDIwMDdjOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨ</dc:creator></item><item><title><![CDATA[claude code でローカルなMCPサーバーを叩けるようにする]]></title><description><![CDATA[claude code 安くて便利。
自前 MCP を大量に持ってると、手元に用意しておいた MCP サーバーに繋ぎたくなります。
以下のドキュメントによると、 claude --mcp-config=... でローカルな MCP サーバーを叩けるみたいです。
https://docs.anthropic.com/ja/docs/claude-code/settings
以下、claude code に手元の MCP サーバーを登録する例です。

 ローカル MCP につなぐ
MCP サーバー実装を書きます。
これは指定した URL を本文抽出して markdown で取得する実装です。...]]></description><link>https://zenn.dev/mizchi/articles/claude-local-mcp-server</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/claude-local-mcp-server</guid><pubDate>Sun, 08 Jun 2025 09:32:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--miyzM-f0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:claude%2520code%2520%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AAMCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E5%258F%25A9%25E3%2581%2591%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[TypeScriptでユニークな配列か型チェックした]]></title><description><![CDATA[
 始めに
Array&lt;'A' | 'B' | 'C'&gt;と型定義した場合、AかBかCのどれかを使った配列であることを制約づけることは可能ですが、Aが複数個設定できてしまい、ユニークな配列として初期化することはできません。
以前['A', 'B', 'C']のようなタプル型にしたら実現できるのでは？と思い、以下のような型定義をしたことがあります。

全パターンのタプルに変換する型
type UniqueArray&lt;T, U = T&gt; = [T] extends [never]
  ? []
  : T extends any
    ? [T, ...UniqueA...]]></description><link>https://zenn.dev/numa_san/articles/cbbc8bb9bcb44a</link><guid isPermaLink="true">https://zenn.dev/numa_san/articles/cbbc8bb9bcb44a</guid><pubDate>Sun, 08 Jun 2025 08:48:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rFeZsmdY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%258B%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AA%25E9%2585%258D%25E5%2588%2597%25E3%2581%258B%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MWZjYWE2NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬまさん</dc:creator></item></channel></rss>