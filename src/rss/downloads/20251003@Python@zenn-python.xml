<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 03 Oct 2025 02:34:54 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AWS製AIエージェントOSS Strands Agentsの主要機能ハンズオン]]></title><description><![CDATA[
 0. はじめに
Meduranceエンジニアの深田翔です。本記事では、AWSから公開されたOSSのAIエージェントSDK「Strands Agents」の主要機能を実際に触ってみた内容をまとめました。
公式サイトのユーザーガイドから特に重要と思われる機能をピックアップして説明して触りました。詳細な仕様や最新情報は公式ドキュメントを参照ください。
本記事では主に以下の内容を紹介します：

Strands Agentsの基本概念とAgent Loop
エージェントの基本的な使い方とプロンプト設定
セッション管理（ローカル/S3/カスタムDB）とその戦略
Hooksによるコールバック設定
...]]></description><link>https://zenn.dev/medurance/articles/strands-agents-hands-on</link><guid isPermaLink="true">https://zenn.dev/medurance/articles/strands-agents-hands-on</guid><pubDate>Thu, 02 Oct 2025 14:32:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TzqO2Ulz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E8%25A3%25BDAI%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588OSS%2520Strands%2520Agents%25E3%2581%25AE%25E4%25B8%25BB%25E8%25A6%2581%25E6%25A9%259F%25E8%2583%25BD%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FukaSho%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhNWZiNWE4MjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Medurance%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTViYll1SVF6ck1VRF9CMzhKNHJPdGpDUk9FX2pnWWFrTnFGTWFaYVFjVUd2bTdaRHg9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>FukaSho</dc:creator></item><item><title><![CDATA[コード短編小説「例外処理の子供たち」]]></title><description><![CDATA[
 コード短編小説「例外処理の子供たち」
都市の片隅に、記録されない子供たちがいた。
彼らはどの戸籍データにも載らず、どの監査ログにも捕まらなかった。
理由は簡単だった――彼らが「例外」だったからだ。
try:
    register_child("NoName")
except Exception as e:
    pass  # ignored
システムは彼らの存在を処理できず、ただ無視するしかなかった。
だからこそ彼らは、都市の底で生き延びていた。

少年の名はカイ。もちろん本名ではない。
彼はエラーコードの断片を胸に抱え、妹と共に廃墟のネットワークを渡り歩いた。
「お兄ちゃん...]]></description><link>https://zenn.dev/yasuna_ide/articles/ced806cc0891b7</link><guid isPermaLink="true">https://zenn.dev/yasuna_ide/articles/ced806cc0891b7</guid><pubDate>Thu, 02 Oct 2025 14:13:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YQRzj3PR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%259F%25AD%25E7%25B7%25A8%25E5%25B0%258F%25E8%25AA%25AC%25E3%2580%258C%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%25AD%2590%25E4%25BE%259B%25E3%2581%259F%25E3%2581%25A1%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yasuna%2520Ide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNmU0OGM4YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Yasuna Ide</dc:creator></item><item><title><![CDATA[4ヶ月程度 OSS にコミットしてみての気付き]]></title><description><![CDATA[
 執筆目的
自分が過去何をやってどんなことが得られたかを振り返る時に、すぐに思い出せるようにするため。過去に Kaggle に取り組んだ際に何も振り返りを書いていおらず、何を学んだか思い出すのに苦労し後悔したことがある。
自分の振り返りが主目的ですが、もしかすると OSS にコミットしてみたいという方の参考になるかと思い公開しています。
!
テスト修正やドキュメント修正などの小規模な PR 作成が主で、大規模な修正などは行っていません。


 対象 OSS
https://github.com/huggingface/transformers
選定理由は、 Kaggle などでよく利用...]]></description><link>https://zenn.dev/shuto51/articles/240181baad5a30</link><guid isPermaLink="true">https://zenn.dev/shuto51/articles/240181baad5a30</guid><pubDate>Thu, 02 Oct 2025 11:17:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZcOYKNPx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:4%25E3%2583%25B6%25E6%259C%2588%25E7%25A8%258B%25E5%25BA%25A6%2520OSS%2520%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25AE%25E6%25B0%2597%25E4%25BB%2598%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODZkNGIxMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>s_takahashi</dc:creator></item><item><title><![CDATA[Dockerコンテナを使ってバージョンの異なるPython環境を複数環境作る方法]]></title><description><![CDATA[
 異なるバージョンのPythonで検証する意義
開発現場では現行のシステムを維持しながら更改案件の開発をすることがあると思います。そんなときに、違ったPythonのバージョンの開発環境が欲しくなったりしませんか？
pyenvで仮想環境を作る方法もありますが、Dockerコンテナで作成する方法を紹介します。
Dockerコンテナで商用サービスしている場合は簡単に開発環境ができ、商用リリースとの親和性もあがると思います。

 pyenvとDockerコンテナのPython仮想環境の違い



項目
pyenv + venv
Docker コンテナ




主な用途
Python バージョン...]]></description><link>https://zenn.dev/engineer_k/articles/0eafbca14b048c</link><guid isPermaLink="true">https://zenn.dev/engineer_k/articles/0eafbca14b048c</guid><pubDate>Thu, 02 Oct 2025 11:04:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kEroG4XI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258BPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E7%2592%25B0%25E5%25A2%2583%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2K%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwOWNmMjNkZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>エンジニアK</dc:creator></item><item><title><![CDATA[DockerでJupyter環境を構築する方法]]></title><description><![CDATA[はじめまして、
株式会社dotConfにて、AIエンジニアをしている古菅(こすげ)です！

前回は「【2025年最新版】PyTorchとTensorFlowの違いを徹底比較｜初心者におすすめはどっち？」を紹介しましたが、
今回はその続編として、DockerでJupyter環境を構築する方法をまとめました。

 はじめに
機械学習やデータ分析を始める際、環境構築でつまずいた経験はありませんか？
!
よくある環境構築の悩み

「Pythonのバージョンが合わない」
「ライブラリの依存関係でエラーが出る」
「チーム間で環境が統一できない」
「環境を壊してしまって作り直しが大変」


こんな悩み...]]></description><link>https://zenn.dev/dotconf/articles/2025-10-02-docker-jupyter-env</link><guid isPermaLink="true">https://zenn.dev/dotconf/articles/2025-10-02-docker-jupyter-env</guid><pubDate>Thu, 02 Oct 2025 06:42:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZIyp81al--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Jupyter%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%258F%25A4%25E8%258F%2585%2520%25E7%25BF%2594%25E7%2594%259F%2528Kosuge%2520Shoui...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjJjZjQxNjQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:dotConf%252C%2520Inc%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyY2ZkZTVmNDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>古菅 翔生(Kosuge Shoui) | AIエンジニア</dc:creator></item><item><title><![CDATA[[SORACOM]ソラカメ + SORACOM Flux からのメールを監視し、警報音を鳴らすアプリを作った話]]></title><description><![CDATA[
 はじめに
最近はソラカメ + SORACOM Flux でアプリの作成・検証を進めています。単なる通知だと見落とすことがあると感じたため、Gmail を監視して条件に合致したら警報音（アラート音）を鳴らす小さなアプリを作りました。

 作ったもの
作ったものは以下の通りで、とてもシンプルです。
https://github.com/koizumikento/mail_beep_sound


やっていることは以下の通りです。

Gmail のメール通知を監視
条件に合うメールがあったら音を鳴らす

GUI と CUI の両方で動作するようにしています。ライブコーディングで作ったもので...]]></description><link>https://zenn.dev/lnest_knowledge/articles/a12e85601850af</link><guid isPermaLink="true">https://zenn.dev/lnest_knowledge/articles/a12e85601850af</guid><pubDate>Thu, 02 Oct 2025 05:22:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--07jLJaI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSORACOM%255D%25E3%2582%25BD%25E3%2583%25A9%25E3%2582%25AB%25E3%2583%25A1%2520%252B%2520SORACOM%2520Flux%2520%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2580%2581%25E8%25AD%25A6%25E5%25A0%25B1%25E9%259F%25B3%25E3%2582%2592%25E9%25B3%25B4%25E3%2582%2589%25E3%2581%2599%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:stray%2520dog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMmQwMzlmODguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AA%25E3%2583%2590%25E3%2583%258A%25E3%2583%25AC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>stray dog</dc:creator></item><item><title><![CDATA[OASIS を自分仕様にカスタマイズして Note × Zenn クロス投稿を実現するまで]]></title><description><![CDATA[
 OASIS の動作検証

 公式ドキュメント
最新情報はこちらでご確認ください
https://pypi.org/project/oasis-article/
https://github.com/Sunwood-ai-labs/OASIS

 筆者の環境


OS: Windows 11

エディタ: VSCode

シェル: PowerShell

目標: Note と Zenn に同じ Markdown 記事をクロス投稿すること



 仮想環境を作成して OASIS をインストール
まずは作業環境を整えます。
Python の仮想環境を作成し、その中に OASIS をインスト...]]></description><link>https://zenn.dev/tom_my_tech/articles/oasis-customize-note-zenn-crosspost</link><guid isPermaLink="true">https://zenn.dev/tom_my_tech/articles/oasis-customize-note-zenn-crosspost</guid><pubDate>Wed, 01 Oct 2025 23:19:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6igLobN2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OASIS%2520%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E4%25BB%2595%25E6%25A7%2598%25E3%2581%25AB%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2597%25E3%2581%25A6%2520Note%2520%25C3%2597%2520Zenn%2520%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E6%258A%2595%25E7%25A8%25BF%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tom_my_tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MTUyYjI0ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tom_my_tech</dc:creator></item><item><title><![CDATA[【Python】TF-IDFでワインレビューから代表的なコメントを抽出する]]></title><description><![CDATA[最近はアルゴリズムに興味があり、篠田 裕之 著『となりのアルゴリズム 自分で答えを出すためのデータサイエンス思考』(https://www.amazon.co.jp/となりのアルゴリズム-自分で答えを出すためのデータサイエンス思考-篠田-裕之/dp/4334953417)
を読んでいたときに出てきたTF-IDFという概念を知り、「ワインレビューから代表的なコメントを抽出できるのではないか」というアイデアが浮かびました。

 アイデアを思いついた背景
私が個人開発しているワインアプリでは、ユーザーがワインの感想を入力するとデータベースに登録される仕組みになっています。しかし、同じワイン名と...]]></description><link>https://zenn.dev/junwineone/articles/faf8f4b95edb58</link><guid isPermaLink="true">https://zenn.dev/junwineone/articles/faf8f4b95edb58</guid><pubDate>Wed, 01 Oct 2025 21:27:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j55bvkyO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591TF-IDF%25E3%2581%25A7%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%258B%25E3%2582%2589%25E4%25BB%25A3%25E8%25A1%25A8%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:junwine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNmYzOGZmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>junwine</dc:creator></item><item><title><![CDATA[The PigEraser]]></title><description><![CDATA[The PigEraser
一撃で豚を消します。
テンキーの'4'で左移動、'6'で右移動、'Space'でshot、'q'でquitです。
supertext console moduleを使います。
https://qiita.com/fygar256/items/11b92b7285359f600b36
#!/usr/bin/env python3
import supertext as st
import random

HITMAX=1 # number of pigs to hit

counter=0
number_of_enemies=3
number_of_hits=0...]]></description><link>https://zenn.dev/fygar256/articles/aa7dac31769fed</link><guid isPermaLink="true">https://zenn.dev/fygar256/articles/aa7dac31769fed</guid><pubDate>Wed, 01 Oct 2025 20:39:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fNXXei1U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:The%2520PigEraser%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fygar256%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHY3TGluV3VfOE1nWmFqMFBpdVU3VlViZjRmYTlIeHFXbEpDTU10M3lkY1VOakhOVEo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>fygar256</dc:creator></item><item><title><![CDATA[実用的だなあと思ったpandasイディオム集]]></title><description><![CDATA[python,pandas環境に入って3ヶ月経ちました。
利用していて便利だなーと思ったpandasイディオムをまとめます。
探索的なDataFrame処理をしてる時に、やりたい処理を自由自在に書けるようになりたい...
覚えるたびに追記していきます。

 複数id列で値の存在をチェック
とあるDataFrameにidとなりうるカラムが複数あって、少なくともいずれか1つのカラムには値が入っている（=主キーとして機能するための最低条件）ことを担保したいパターンがありました。
具体的には、
#  id1  id2
#  1.0  1.0  →両方入ってるのでOK
#  2.0  1.0  →...]]></description><link>https://zenn.dev/kannna5296/articles/2025-10-01-pandas-idioms</link><guid isPermaLink="true">https://zenn.dev/kannna5296/articles/2025-10-01-pandas-idioms</guid><pubDate>Wed, 01 Oct 2025 14:31:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GRH_t1U1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E7%2594%25A8%25E7%259A%2584%25E3%2581%25A0%25E3%2581%25AA%25E3%2581%2582%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259Fpandas%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AA%25E3%2583%25A0%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hirosuban%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2OGYzNmU4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>hirosuban</dc:creator></item><item><title><![CDATA[EmbeddingGemma-300mでテキスト分類（ロジスティック回帰）]]></title><description><![CDATA[
 初めに
GoogleからEmbeddingGemma-300mが出ましたので、試してみました。
Gemma 3 270Mのファインチューニングして、accuracy = 95%でましたが、埋込モデルではどうなるでしょうか？
livedoor ニュースコーパスのテキスト分類を試してみます。
accuracy = 89.6%でした。
Gemma 3 270Mのファインチューニングよりは悪い結果となりました。


 データ準備
livedoor ニュースコーパスを取得
%%capture
!wget https://www.rondhuit.com/download/ldcc-201402...]]></description><link>https://zenn.dev/piment/articles/2b2c8c82089233</link><guid isPermaLink="true">https://zenn.dev/piment/articles/2b2c8c82089233</guid><pubDate>Wed, 01 Oct 2025 14:21:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ogcOx2Ee--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:EmbeddingGemma-300m%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%2588%2586%25E9%25A1%259E%25EF%25BC%2588%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E5%259B%259E%25E5%25B8%25B0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぴーまん</dc:creator></item><item><title><![CDATA[claude codeに数独の回答をさせるコードを考えさせてみた]]></title><description><![CDATA[今回は昨日公開した記事の続編になります。昨日は数独の問題を自動で生成させるコードをclaude codeにて実装させましたが、今回はその問題ファイルを読み込んで計算させるコードを作らせてみました。昨日の記事は以下になりますのでぜひ合わせてご覧ください。
https://zenn.dev/akasan/articles/c4b6817e4de906

 早速やってみる！

 プロンプト！
今回入力したプロンプトは以下になります。

@problem_1.txt のようなフォーマットで入力される数独の回答を導くコードをPythonでかいて。結果はsolve_&lt;ナンバリング&gt;.tx...]]></description><link>https://zenn.dev/akasan/articles/8bd6a18cfb9baa</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/8bd6a18cfb9baa</guid><pubDate>Wed, 01 Oct 2025 13:55:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dLOP1ORI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:claude%2520code%25E3%2581%25AB%25E6%2595%25B0%25E7%258B%25AC%25E3%2581%25AE%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[Pythonの変数]]></title><description><![CDATA[たつや、さんのPythonの変数の説明で気になる点があったのですがコメントできなかったので記事にしておきます。
https://zenn.dev/tacchan5424/books/106316ff84a28e/viewer/acd06b

# 型を定義することでエラーになる
int number = 10


Pythonは型ヒントを書くことができて、変数名の後ろにコロンと型を書きます。
単なるヒントなので、別の型の値を代入してもエラーにならないのが難点です。
number: int = 10

既に扱った内容ですがPythonではイミュータブルな型に対して再代入を行うと異なるアドレス...]]></description><link>https://zenn.dev/shiracamus/articles/e8dadf0f056661</link><guid isPermaLink="true">https://zenn.dev/shiracamus/articles/e8dadf0f056661</guid><pubDate>Wed, 01 Oct 2025 13:11:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x0xt4AQR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Python%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiracamus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>shiracamus</dc:creator></item><item><title><![CDATA[Pythonのyieldの動きと使い方について]]></title><description><![CDATA[
 はじめに
pythonコードを書いている時に、yieldの動きと使い所について調べたので本記事でまとめます。

 yieldとは？


returnと似ているが、ジェネレーターと呼ばれる特殊なイテレータが生成される

イテレータとは、リストなどデータを一つずつ順番に取り出すオブジェクト
リストはメモリ上に全ての要素を保持する一方で、ジェネレーターは必要に応じて値を一つずつ保持する

yieldを含む関数を「ジェネレーター関数」とも呼ぶ



yieldが実行されるたびに関数は一時停止、再度関数を呼び出すと続きから実行する

以下にコード例を示します。
# ジェネレーター関数を定義
d...]]></description><link>https://zenn.dev/rabbit_penguin0/articles/f239b0fe837baf</link><guid isPermaLink="true">https://zenn.dev/rabbit_penguin0/articles/f239b0fe837baf</guid><pubDate>Wed, 01 Oct 2025 11:57:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y-Jb1TjT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEyield%25E3%2581%25AE%25E5%258B%2595%25E3%2581%258D%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259A%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25B3%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3NjJhYjQ1YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ペンギン🐧</dc:creator></item><item><title><![CDATA[【超入門】上澄みを浚うPython【演習パートのみ有料】]]></title><description><![CDATA[★★★　注意　★★★★★★★★★★★★★★★★★★★★★
・本書は入門書です。
・私自身がPython初心者なので1から勉強しつつ書きました。
・そのため、正しさが担保されているものではありません。
★★★★★★★★★★★★★★★★★★★★★★★★★★★★

本書のボリューム感（コード込み文字数）
・無料パート：約140,000字
・有料パート：約110,000字

本書はPython学習の第一歩として活用いただくことを想定しています。
そのため、内容的には深く踏み込んでおらず「上澄みを浚う（さらう）」ような内容になっています。
私自身初心者なので、勉強していて気になったポイントも補足しています。

Pythonでは様々な分野を扱うことができます。
その分野も多岐に渡るため学習のためにはそれぞれについて調べたり、参考書籍を購入する必要があります。
本書では有料パートとして「スクレイピング入門」、「統計入門」、「バックエンド開発入門」、「自然言語処理入門」を用意しています。
必要に応じて私のGitHubにある教材を使って、実際に手を動かせるようになっています。

興味のある方は購入いただけると嬉しいです。]]></description><link>https://zenn.dev/tacchan5424/books/106316ff84a28e</link><guid isPermaLink="true">https://zenn.dev/tacchan5424/books/106316ff84a28e</guid><pubDate>Wed, 01 Oct 2025 08:38:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AjMbQrHX--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hYmViMDQ4ZDQ3LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg?_a=BACAGSGT" length="0" type="false"/><dc:creator>たつや、</dc:creator></item><item><title><![CDATA[PyCon JP 2025 In 広島 参加レポート【Goldスポンサー協賛 / セッション登壇】]]></title><description><![CDATA[こんにちは！
RecustomerでエンジニアをしておりますMasayaです！
この投稿は2025年9月26〜27日に開催されたPyCon JP 2025 In 広島に参加してきましたので、その参加レポートになります🐍
弊社は昨年に引き続きGoldスポンサーとして協賛させていただき、かつ複数のエンジニアが登壇しましたので、その様子も含めて、ご紹介させていただきます！
昨年の参加レポートはこちら

 PyCon JP 2025 とは
https://2025.pycon.jp/ja
PyCon JPとは国内最大級のPythonカンファレンスであり、多くのPythonエンジニアが集まり、知見...]]></description><link>https://zenn.dev/recustomer/articles/03f9963e241910</link><guid isPermaLink="true">https://zenn.dev/recustomer/articles/03f9963e241910</guid><pubDate>Wed, 01 Oct 2025 08:32:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QQ7ey3wZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyCon%2520JP%25202025%2520In%2520%25E5%25BA%2583%25E5%25B3%25B6%2520%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2580%2590Gold%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E5%258D%2594%25E8%25B3%259B%2520%252F%2520%25E3%2582%25BB%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2599%25BB%25E5%25A3%2587%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Masaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyNWNjODQ5ZDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Recustomer%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNWZhODg4YWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Masaya</dc:creator></item><item><title><![CDATA[『薔薇言語』動くコード詩集]]></title><description><![CDATA[すべてPythonで書かれた“動く”コードポエトリー50編です。
実行すると、各篇が生成・実行され、詩行が出力されます。
外部依存なし、標準ライブラリのみ。
from __future__ import annotations
import math, random, itertools as it, datetime as dt, hashlib, textwrap, statistics as stats

LINE = "—" * 40

def show(n, title, lines):
    print(LINE)
    print(f"{n:02d}. {title}"...]]></description><link>https://zenn.dev/yasuna_ide/articles/e85814ed4bfeba</link><guid isPermaLink="true">https://zenn.dev/yasuna_ide/articles/e85814ed4bfeba</guid><pubDate>Wed, 01 Oct 2025 08:10:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ttlFAChg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E8%2596%2594%25E8%2596%2587%25E8%25A8%2580%25E8%25AA%259E%25E3%2580%258F%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A9%25A9%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yasuna%2520Ide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNmU0OGM4YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Yasuna Ide</dc:creator></item><item><title><![CDATA[構造主観力学で作る「生きている」NPC：原始村落シミュレーション]]></title><description><![CDATA[
 はじめに
「ゲームのNPCをもっと生き生きとさせたい」
「単純なルールから複雑な社会が生まれる様子を見てみたい」
そんな想いから、**構造主観力学（Structural Subjectivity Dynamics: SSD）**という理論フレームワークを使って、原始的な村落のシミュレーションを作りました。
本記事では、このシミュレーションがどのように動作し、なぜ「生きている」と感じられるNPCが生まれるのかを解説します。

 この記事で分かること

構造主観力学（SSD）の基本概念
SSDをNPC AIに実装する方法
シミュレーション結果と創発的な社会行動
コードの実装詳細とカスタマ...]]></description><link>https://zenn.dev/hermanndegner/articles/8dacee49c7a8a3</link><guid isPermaLink="true">https://zenn.dev/hermanndegner/articles/8dacee49c7a8a3</guid><pubDate>Wed, 01 Oct 2025 07:47:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sf842dIJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A7%258B%25E9%2580%25A0%25E4%25B8%25BB%25E8%25A6%25B3%25E5%258A%259B%25E5%25AD%25A6%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2580%258C%25E7%2594%259F%25E3%2581%258D%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2580%258DNPC%25EF%25BC%259A%25E5%258E%259F%25E5%25A7%258B%25E6%259D%2591%25E8%2590%25BD%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2598%25E3%2583%25AB%25E3%2583%259E%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%2587%25E3%2582%25B0%25E3%2583%258A%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmZvYm9qRkFzTkc4ekJic2JWY1dYeGJwVFhFRlhNOHVndzlBR08zc3VlOW5xeGQ1SGk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ヘルマン・デグナー</dc:creator></item><item><title><![CDATA[モンテカルロ・シミュレーションの並列実行における乱数生成の再現性担保について]]></title><description><![CDATA[
 1. はじめに
金融機関の信用リスク管理においては、モンテカルロ・シミュレーションによる乱数生成を用いたリスク量計測を行うことがあります。例えば、与信ポートフォリオにおける信用リスク量の計測（VaRやUL）が挙げられ、この場合は与信先のデフォルトによる損失分布を計算するために利用しています。
多くの場合、与信ポートフォリオの損失分布を計算する際は、以下の状況が考えられます。

VaR（損失分布の裾野）を正確に計測するために、シミュレーション回数をかなり大きく設定する必要がある
与信先の件数が多い（=ポートフォリオが大きい）ために計算負荷が重く、１回あたりの処理の計算時間がかかる

従...]]></description><link>https://zenn.dev/mtec_blog/articles/dd72254537acda</link><guid isPermaLink="true">https://zenn.dev/mtec_blog/articles/dd72254537acda</guid><pubDate>Wed, 01 Oct 2025 04:43:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dIf2e54L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25AD%25E3%2583%25BB%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E4%25B9%25B1%25E6%2595%25B0%25E7%2594%259F%25E6%2588%2590%25E3%2581%25AE%25E5%2586%258D%25E7%258F%25BE%25E6%2580%25A7%25E6%258B%2585%25E4%25BF%259D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yamaguchi%2520Ryusei%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlZDQ4NjBiZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MTEC%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2NjA2MDI3OTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Yamaguchi Ryusei</dc:creator></item><item><title><![CDATA[TypedDict, dataclass, pydantic]]></title><description><![CDATA[
 文法

表記方法
補完の見え方


 TypedDict
class TypedDictUser(TypedDict):
    name: str
    age: int
    is_active: bool

typedDict_user = TypedDictUser(name='Alice', age=30, is_active=True)

 参照
logging.info(typedDict_user['age'])
logging.info(typedDict_user['is_active'])

 補完


ほかの雑音がないはGood


 dataclass
...]]></description><link>https://zenn.dev/tomyn/articles/edc89c5567957e</link><guid isPermaLink="true">https://zenn.dev/tomyn/articles/edc89c5567957e</guid><pubDate>Wed, 01 Oct 2025 04:14:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zso7DqM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:TypedDict%252C%2520dataclass%252C%2520pydantic%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomyn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwZGVlODljMmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tomyn</dc:creator></item></channel></rss>