<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 18 Sep 2025 02:48:12 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【AWS×Java】SAMで冷蔵庫管理アプリを構築 #1 API Gateway + Lambda編（Hello API）]]></title><description><![CDATA[
 はじめに
当記事の最終ゴールについては以下の記事をご確認ください。
https://zenn.dev/superrelax102/articles/424ebd380d6c53
今回のゴール：API Gateway + Lambda(Java)でHello APIをデプロイする
前提読者：AWS初心者、開発初心者
以下を実施することで従量課金が発生します。その点については自己責任でお願いします。

 アーキテクチャ概要
今回は以下赤枠部分を完成させます。
図1: サーバレス構成の全体像


 事前準備
開発環境は以下の通りです。
　-OS：Windows11
　-開発言語：Java2...]]></description><link>https://zenn.dev/superrelax102/articles/b3c7e13459d4ed</link><guid isPermaLink="true">https://zenn.dev/superrelax102/articles/b3c7e13459d4ed</guid><pubDate>Tue, 16 Sep 2025 15:07:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lmexD64X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%25C3%2597Java%25E3%2580%2591SAM%25E3%2581%25A7%25E5%2586%25B7%25E8%2594%25B5%25E5%25BA%25AB%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2520%25231%2520API%2520Gateway%2520%252B%2520Lambda%25E7%25B7%25A8%25EF%25BC%2588Hello%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:T%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OWUzYzQ0ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>T</dc:creator></item><item><title><![CDATA[Apache Beam Java SDK ベストプラクティスガイド]]></title><description><![CDATA[このガイドは、Java版 Apache Beam を用いて、高性能で堅牢、かつ保守性の高いデータパイプラインを構築するための、実践的なベストプラクティス集です。基本的な設計原則から、パフォーマンスチューニング、テスト戦略、さらにはヘキサゴナルアーキテクチャの導入まで、Beam のポテンシャルを最大限に引き出すための知見を体系的に解説します。Beam の基本を習得した開発者が、次のレベルへとステップアップするための指針となることを目指します。

 第1章 パイプラインアーキテクチャの基本原則
優れたパイプラインの構築は、処理の有向非巡回グラフ（DAG）をいかに設計するかにかかっています。こ...]]></description><link>https://zenn.dev/suwash/articles/beam_java_best_practice_20250917</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/beam_java_best_practice_20250917</guid><pubDate>Tue, 16 Sep 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NLOZTTYn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Beam%2520Java%2520SDK%2520%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2520%252F%2520%25E8%25AB%258F%25E8%25A8%25AA%25E7%259C%259F%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh / 諏訪真一</dc:creator></item><item><title><![CDATA[継承とポロモーフィズムについてまとめてみた]]></title><description><![CDATA[OOPの概念について学んではいるけど、なかなか言語化したり体系的にアウトプットする機会がなかったので、まとめます。
自分が継承とポリモーフォズムの概念について腑に落ちていったプロセスを残せたらいいなと思います。

 定義
この定義をこの記事を読み終わってから理解できるようになっていたら良いと思う。

 継承
親クラスのフィールドやメソッドを子クラスで定義・利用できる仕組み。

 ポリモーフィズム
同じ型やメソッド呼び出しでも、オブジェクトに応じて振る舞いが変わるという効果。

 違いは？
継承 = 仕組み。コードの書き方や設計方法を指す。
ポリモーフィズム  = 効果。継承やオーバーライ...]]></description><link>https://zenn.dev/tacos/articles/06f91f082973a4</link><guid isPermaLink="true">https://zenn.dev/tacos/articles/06f91f082973a4</guid><pubDate>Tue, 16 Sep 2025 06:52:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TilhlkYG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B6%2599%25E6%2589%25BF%25E3%2581%25A8%25E3%2583%259D%25E3%2583%25AD%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHNqWVZUSXZtQmFWX3VLeWdicy0tbDVHRG13dUpVMWd6TEtDYzJPRElNTlE5T0JBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タコスマスター</dc:creator></item><item><title><![CDATA[SIer社員が1年弱で取った資格が業務にどれくらい”活きたか”]]></title><description><![CDATA[
 TL;DR
SIerに入社して1年弱の間に取得した資格が、どのように実務に活かされたかを振り返っています。AWS、Java、SQL、応用情報技術者など、さまざまな資格を取得し、それぞれが開発業務や関係者とのコミュニケーション、プロジェクト管理などにどのように役立ったかを具体的に紹介しています。AIが開発を一手に担うこの時代で、資格勉強は基礎概念を理解する良い手段であり、少しでも自信を持って仕事に取り組むための基盤となったことを実感しています。

 SIer社員が1年弱で取った資格が業務にどれくらい"活きたか"
こんにちは。私はSEとして入社してから1年弱の間、SI業務の主に下流工程に...]]></description><link>https://zenn.dev/nemdull/articles/qiita-20250812-d42c71c8997a1dc07d12</link><guid isPermaLink="true">https://zenn.dev/nemdull/articles/qiita-20250812-d42c71c8997a1dc07d12</guid><pubDate>Tue, 16 Sep 2025 01:00:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YJTR-V_o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SIer%25E7%25A4%25BE%25E5%2593%25A1%25E3%2581%258C1%25E5%25B9%25B4%25E5%25BC%25B1%25E3%2581%25A7%25E5%258F%2596%25E3%2581%25A3%25E3%2581%259F%25E8%25B3%2587%25E6%25A0%25BC%25E3%2581%258C%25E6%25A5%25AD%25E5%258B%2599%25E3%2581%25AB%25E3%2581%25A9%25E3%2582%258C%25E3%2581%258F%25E3%2582%2589%25E3%2581%2584%25E2%2580%259D%25E6%25B4%25BB%25E3%2581%258D%25E3%2581%259F%25E3%2581%258B%25E2%2580%259D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nemdull%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzYjY0ZTNhZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nemdull</dc:creator></item><item><title><![CDATA[Java仮想マシン（JVM）を読解しながら理解する #07]]></title><description><![CDATA[https://zenn.dev/h_kohe/articles/0415315d4dd8b9
こちらの記事の続きです
よんでいる公式ドキュメント
https://docs.oracle.com/javase/specs/jvms/se17/html/jvms-2.html
先日、人生初のハッカソンに参加してきたのですが。。。
イベントを企画して運営する難しさを体験する1日でした。
企画運営をしてくださった皆さま、ありがとうございました！！
今度は参加者ではなく、企画運営側で携わってみたいな・・・
さて、少し間隔が空いたのですが今回もJVMを読み進めていきます。

 2.5.4. Met...]]></description><link>https://zenn.dev/h_kohe/articles/f6a408ada1e07b</link><guid isPermaLink="true">https://zenn.dev/h_kohe/articles/f6a408ada1e07b</guid><pubDate>Mon, 15 Sep 2025 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZlcylSXd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E4%25BB%25AE%25E6%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25EF%25BC%2588JVM%25EF%25BC%2589%25E3%2582%2592%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520%252307%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KOHE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMDQxMTQ1ZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KOHE</dc:creator></item><item><title><![CDATA[Java の Integer キャッシュを理解する]]></title><description><![CDATA[Java の Integer には キャッシュ機構 があり、思わぬ挙動を示すことがあります。
今回は IntegerCache の仕組みと、その効果をまとめます。

 Integer の動作確認
以下のコードを実行すると、出力はコメントの通りになります。
Integer a = 127;
Integer b = 127;
System.out.println(a == b);      // true

Integer x = 128;
Integer y = 128;
System.out.println(x == y);      // false

System.out.print...]]></description><link>https://zenn.dev/wakame_atsushi/articles/d1058fac66a32f</link><guid isPermaLink="true">https://zenn.dev/wakame_atsushi/articles/d1058fac66a32f</guid><pubDate>Mon, 15 Sep 2025 02:33:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M9KKzn97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2581%25AE%2520Integer%2520%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%258B%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDI2MjM3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わかめ</dc:creator></item><item><title><![CDATA[VS CodeとGradleによるJava開発環境ガイド]]></title><description><![CDATA[
 はじめに
「AさんのPCでは動くのに、BさんのPCではビルドが通らない」「レビューの度にインデントやimport順の指摘が飛び交う」「ローカルでは成功したのに、CIで静的解析エラーが出て手戻りが頻発する」。
現代のJava開発において、このような環境の属人化や品質基準のばらつきは、生産性を阻害する大きな要因です。
この記事では、Visual Studio Code (VS Code) とGradleを軸に、これらの課題を解決し、個人からチームまで対応できる品質と生産性を両立したJava開発環境の構築方法を体系的に解説します。
本ガイドが目指すゴールは、単なるツールの導入手順ではありま...]]></description><link>https://zenn.dev/suwash/articles/vscode_gradle_20250915</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/vscode_gradle_20250915</guid><pubDate>Sun, 14 Sep 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aRZLSjH9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%25E3%2581%25A8Gradle%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BJava%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2520%252F%2520%25E8%25AB%258F%25E8%25A8%25AA%25E7%259C%259F%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh / 諏訪真一</dc:creator></item><item><title><![CDATA[ローカル日時クラスまとめ<後編>[Java]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
「Date and Time API」について知りたい方


 記事のテーマ

「Date and Time API」のローカル日時を扱うクラスを開発でよく使います。しかし、APIの種類...]]></description><link>https://zenn.dev/wakinoza/articles/0b531b4f0bbe7c</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/0b531b4f0bbe7c</guid><pubDate>Sat, 13 Sep 2025 05:33:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZcstCCqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E6%2597%25A5%25E6%2599%2582%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%253C%25E5%25BE%258C%25E7%25B7%25A8%253E%255BJava%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2ZTk5ZTMzNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[Java プロジェクトを Gemini CLI に対応させよう]]></title><description><![CDATA[
 はじめに
この記事は「VS Code と Docker で始める！シンプルな Java 開発入門」の続きです。前回用意したプロジェクトを Gemini CLI に対応させる手順を説明します。

Gemini CLI を開発コンテナ内で実行する方法は、入門者にとってはハードルが高いため、この記事では扱いません。これは、AI ツールの安定稼働には、時として高いハードウェア性能が要求され、環境構築の難易度が上がる可能性があるからです。
代わりに、この記事ではローカルマシンに直接 JDK をインストールした環境で Gemini CLI を使い、動作確認を行いました。生成 AI を活用した開発...]]></description><link>https://zenn.dev/hiro345/articles/20250912_vscode_java_02</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250912_vscode_java_02</guid><pubDate>Sat, 13 Sep 2025 05:27:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bU7L6PLe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%2520Gemini%2520CLI%2520%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[【Java】スレッドセーフなシングルトン]]></title><description><![CDATA[
 シングルトン
シングルトンとは、デザインパターンの1種であり、クラスのインスタンスが常に1つしか生成されないことを保証するもの。これによりシステム全体で共有されるべき単一のリソース（設定ファイル、ログ出力、データ接続など）を管理するのに役立ちます。
仕組みとしては、コンストラクタを非公開にして、静的メソッドで唯一のインスタンスを取得するようにすることで（インスタンス生成を制御する）シングルトンパターンとなります。
下記のコードは、遅延初期化することでシングルトンを実現している実装です。
public class Singleton {
    private static Singl...]]></description><link>https://zenn.dev/youok2000/articles/5e7856c78d25bc</link><guid isPermaLink="true">https://zenn.dev/youok2000/articles/5e7856c78d25bc</guid><pubDate>Fri, 12 Sep 2025 22:08:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1YSV1V4p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25BB%25E3%2583%25BC%25E3%2583%2595%25E3%2581%25AA%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4Y2M1OWRkNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuto</dc:creator></item><item><title><![CDATA[【DAY95】Javaで作るポートフォリオ｜就活で評価されるには？]]></title><description><![CDATA[
 Javaで就活用ポートフォリオを作るなら？
未経験からエンジニア就職を目指す場合、ポートフォリオはあなたのスキルを可視化する最重要アイテムです。中でもJavaは、多くの企業で利用されている言語であり、特にバックエンド志望やSIer系企業を目指すなら非常に効果的です。
この記事では、「Javaでポートフォリオを作りたいけど、何を作ればいい？」「一人でも完成できる？」という疑問に答えていきます。


 Javaで作るべきポートフォリオの特徴
Javaの強みは「堅牢性」と「スケーラビリティ」。これを活かすには以下のような構成が有効です。

 ✔ Webアプリケーション（Spring Boo...]]></description><link>https://zenn.dev/keisuke4649/articles/day95-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day95-pg-connection</guid><pubDate>Fri, 12 Sep 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9goFMwSP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY95%25E3%2580%2591Java%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25EF%25BD%259C%25E5%25B0%25B1%25E6%25B4%25BB%25E3%2581%25A7%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AB%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[【DAY94】Javaはポートフォリオに最適？就活で強い理由]]></title><description><![CDATA[
 Javaは就活ポートフォリオに向いているのか？
プログラミングを学び、いざ就活や転職を意識したとき、多くの人がぶつかる壁が「ポートフォリオに何を使うか？」という問題。最近はReactやNext.js、Python（Flask, Django）などの人気が高まっていますが、**「実はJavaが一番強いのでは？」**という声も根強くあります。
では、なぜJavaは就活ポートフォリオにおいて有力な選択肢となり得るのでしょうか？


 Javaがポートフォリオに向いている5つの理由

 1. 求人市場での需要が高い

Javaは大手企業・SIer・金融系・官公庁向けのシステムなど、堅牢性が求...]]></description><link>https://zenn.dev/keisuke4649/articles/day94-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day94-pg-connection</guid><pubDate>Thu, 11 Sep 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3BZcoz81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY94%25E3%2580%2591Java%25E3%2581%25AF%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25E3%2581%25AB%25E6%259C%2580%25E9%2581%25A9%25EF%25BC%259F%25E5%25B0%25B1%25E6%25B4%25BB%25E3%2581%25A7%25E5%25BC%25B7%25E3%2581%2584%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[VS Code と Docker で始める！シンプルな Java 開発入門]]></title><description><![CDATA[
 はじめに
この記事では、Visual Studio Code (VS Code) と Docker を使って Java プログラミングを始めるための、最もシンプルで標準的な方法を解説します。ビルドツール（Maven/Gradle）は使わず、VS Code の拡張機能だけで完結するプロジェクトの作成、コーディング、デバッグ、テストまでの一連の流れを実践的に学びます。
なお、この記事の VS Code では Copilot の画面を閉じた状態で画面キャプチャしてあります。ご承知ください。

 環境構築
本記事では、開発環境の差異をなくし、すぐに Java 開発を始められるように、Visu...]]></description><link>https://zenn.dev/hiro345/articles/20250910_vscode_java</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250910_vscode_java</guid><pubDate>Thu, 11 Sep 2025 10:27:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oNLsU_IF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520%25E3%2581%25A8%2520Docker%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25EF%25BC%2581%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%2520Java%2520%25E9%2596%258B%25E7%2599%25BA%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[kotlin初学者がサーバーサイド開発の検討をしてみた]]></title><description><![CDATA[
 概要
今回は、複雑なことをしない簡易的な個人開発を考えるとします。
概要設計として、以下の処理を基本線とします。
その中で、kotlinをサーバーサイドに組み込んだら、どのような考えになるかをjavaで考えたときと比較してみたいと思います。

 目的
自分が考える最強のアーキテクチャはこれだ！という話ではなく、あくまでkotlinを使用したらどんな感じになるかをイメージさせるための記事です。

 シーケンス図

 それぞれの構成
画面はフロントなので割愛します。
Serviceについてはjavaとkotlinで大きく異なるということはないので割愛します。

 Controller k...]]></description><link>https://zenn.dev/favopg/articles/444adbdeaf9e28</link><guid isPermaLink="true">https://zenn.dev/favopg/articles/444adbdeaf9e28</guid><pubDate>Thu, 11 Sep 2025 03:48:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4wkl5xip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kotlin%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2581%258C%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%25A4%259C%25E8%25A8%258E%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NWJkZTE0NzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>イッシー</dc:creator></item><item><title><![CDATA[Javaのチェック例外/非チェック例外の使い分け？]]></title><description><![CDATA[
 例外クラスの継承構造
Javaにおいては、例外はクラスです。こんな感じの継承構造になっています。

この図はイメージ優先のため、正確な継承構造ではありません。
一番上のスーパークラスはThrowableです（Objectのサブクラス）。
ThrowableのサブクラスはExceptionとErrorです。
Errorおよびそのサブクラスは、メモリが足りないなどかなり致命的な例外です。基本的には、これらがスローされたらアプリケーションを止めるしかありません。
Exceptionのサブクラスは、RuntimeExceptionおよびそのサブクラスと、RuntimeException以外の...]]></description><link>https://zenn.dev/masatoshi_tada/articles/24cda978a16e8f</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/24cda978a16e8f</guid><pubDate>Wed, 10 Sep 2025 02:00:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QmbHEZCa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E4%25BE%258B%25E5%25A4%2596%252F%25E9%259D%259E%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E4%25BE%258B%25E5%25A4%2596%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[第1章：クラスの基本とインスタンス化]]></title><description><![CDATA[
 第1章：クラスの基本とインスタンス化


 1. はじめに


プログラムを書く目的は、コンピュータを動かすことだけではありません。プログラムは人間が読むものでもあり、他人や未来の自分が理解しやすいことが重要です。
したがって、コードは「動く手順書」であると同時に「思考の設計図」である必要があります。
この授業では、コードの可読性（readability）を重視します。単に動けばよいコードではなく、**「何をしているのか」「なぜそう書かれているのか」**を重要視します。

 コーディングで大切な3つの原則


変数やメソッドの名前に意味を込めること（命名は意図を伝える最初の道具です）...]]></description><link>https://zenn.dev/yusukesakae/articles/3533a3d047bbb1</link><guid isPermaLink="true">https://zenn.dev/yusukesakae/articles/3533a3d047bbb1</guid><pubDate>Tue, 09 Sep 2025 14:31:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vTQQ7xFY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AC%25AC1%25E7%25AB%25A0%25EF%25BC%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A6%25AE%25E7%25A5%2590%25E4%25BB%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkRZYTlKNnlkNW9rQUVfMjZkZDVCeUZSQUFtZlZ2S01sRVB4RUQ1R0dNOEF5TEZ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>榮祐介</dc:creator></item><item><title><![CDATA[java.util.Dateとjava.sql.Dateとjava.time.LocalDateのややこしい関係]]></title><description><![CDATA[
 環境
JDK 21

Java 8以降であれば、バージョンが違っていても同じだと思います。たぶん。


 各クラスの１行説明


java.util.Date

Javaの初期から存在する日時クラス（時分秒も持つ）



java.sql.Date

JDBCで利用する日付クラス（時分秒は持たない）



java.time.LocalDate

Java 8から導入された日付クラス（時分秒は持たない）



通常の業務ロジックを書くときは、基本的にはjava.time.LocalDateを使うことがほとんどです。
しかし、古いライブラリやロジックではjava.util.Date、D...]]></description><link>https://zenn.dev/masatoshi_tada/articles/aa4eb7cf0cde36</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/aa4eb7cf0cde36</guid><pubDate>Tue, 09 Sep 2025 09:41:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rRKu4lO1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:java.util.Date%25E3%2581%25A8java.sql.Date%25E3%2581%25A8java.time.LocalDate%25E3%2581%25AE%25E3%2582%2584%25E3%2582%2584%25E3%2581%2593%25E3%2581%2597%25E3%2581%2584%25E9%2596%25A2%25E4%25BF%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[Mockitoでモックのメソッドが1回目・2回目・・・に呼び出されるごとに戻り値を変えるようにする]]></title><description><![CDATA[
 環境

JDK 21
JUnit 5.12.2
Mockito 5.15.0


 テスト対象

Sample.java
public class Sample {
    Random random = new Random();

    public int getNextInt() {
        return random.nextInt();
    }
}


 テスト
doReturn()に複数の値を指定すれば、それが1回目の戻り値・2回目の戻り値・・・となります。

SampleTest.java
public class SampleTest {
    @N...]]></description><link>https://zenn.dev/masatoshi_tada/articles/f881ecc422d3af</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/f881ecc422d3af</guid><pubDate>Tue, 09 Sep 2025 06:56:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tnWZalBq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mockito%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%258C1%25E5%259B%259E%25E7%259B%25AE%25E3%2583%25BB2%25E5%259B%259E%25E7%259B%25AE%25E3%2583%25BB%25E3%2583%25BB%25E3%2583%25BB%25E3%2581%25AB%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E6%2588%25BB%25E3%2582%258A%25E5%2580%25A4%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[標準入力/標準出力をテストする]]></title><description><![CDATA[
 何をしたいか
極稀に、標準入力で何が入力されたか・標準出力で何が出力されたかをテストしたいことがあります。
やり方を備忘録としてメモしておきます。

 環境

JDK 21
JUnit 5.12.2


多少バージョンが違っていても大丈夫だと思います。たぶん。


 テスト対象

Sample1.java
public class Sample1 {
    public List&lt;Integer&gt; input() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("整...]]></description><link>https://zenn.dev/masatoshi_tada/articles/abf40605cd2045</link><guid isPermaLink="true">https://zenn.dev/masatoshi_tada/articles/abf40605cd2045</guid><pubDate>Tue, 09 Sep 2025 06:20:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zr9UKe6B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A8%2599%25E6%25BA%2596%25E5%2585%25A5%25E5%258A%259B%252F%25E6%25A8%2599%25E6%25BA%2596%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masatoshi%2520Tada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNzY1NjBmYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masatoshi Tada</dc:creator></item><item><title><![CDATA[i++と++iの実行順序について〜自戒を込めて〜]]></title><description><![CDATA[
 はじめに
早速ですが、以下のプログラムの実行結果をどうなるでしょうか？
public class Test {
    public static void main(String[] args) {
        int i = 0;
        System.out.println(i++ + ++i);
    }
}
答え
2 （0 + 2 = 2）



i++ の部分で、現在の i の値（0）が評価されます。この時点で、i は1増えます。
評価: 0, iの値: 1

続いて、++i の部分で i が1増加して 2 になり、その値が評価されます。
評価: 2, iの...]]></description><link>https://zenn.dev/sh1ge99/articles/bb72d926513ce4</link><guid isPermaLink="true">https://zenn.dev/sh1ge99/articles/bb72d926513ce4</guid><pubDate>Sun, 07 Sep 2025 04:00:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---YFxIL3O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:i%252B%252B%25E3%2581%25A8%252B%252Bi%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E9%25A0%2586%25E5%25BA%258F%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%259C%25E8%2587%25AA%25E6%2588%2592%25E3%2582%2592%25E8%25BE%25BC%25E3%2582%2581%25E3%2581%25A6%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shige%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4ZTI1Mzk1ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shige</dc:creator></item></channel></rss>