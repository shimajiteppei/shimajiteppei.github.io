<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 13 Nov 2024 01:01:45 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[時刻フォーマット hhの罠]]></title><description><![CDATA[ある日、Kotlinで実装している際に時刻フォーマットに関するミスがあったので、同じミスをする人が少しでも減ればと思い、この記事を書いてみました。

 24時間表記のフォーマット
2024-11-11T21:53:04を2024/11/11 21:53:04に整形したい場合、以下のようなプログラムを書いた経験はありますか？
    val dateTime = LocalDateTime.of(2024, 11, 11, 21, 53, 4)
    val formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm:ss")
  ...]]></description><link>https://zenn.dev/ooooomu/articles/62c3e682e466bc</link><guid isPermaLink="true">https://zenn.dev/ooooomu/articles/62c3e682e466bc</guid><pubDate>Mon, 11 Nov 2024 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vc-kQhy1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2599%2582%25E5%2588%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%2520hh%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Omu%2520%252F%2520%25E3%2581%258A%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMGNjMzFlYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Omu / おむ</dc:creator></item><item><title><![CDATA[libxposed の導入方法]]></title><description><![CDATA[あくまでも移植の準備だけ。
詳しいやり方は、下記を参照してね。
https://github.com/LSPosed/LSPosed/wiki/Develop-Xposed-Modules-Using-Modern-Xposed-API

 依存関係のビルド

 概要
Maven や Google には公開されていないので、ローカルでビルドする必要があります。
これを Gradle プロジェクトから使うとき、２つの手段があります。


mavenLocal() を使用し、ローカルディスクから参照
ビルドアーティファクトの AAR を使用

常に最新版を使いたいなら前者、手間を省きたい場合...]]></description><link>https://zenn.dev/s1204it/articles/705971b3828418</link><guid isPermaLink="true">https://zenn.dev/s1204it/articles/705971b3828418</guid><pubDate>Sat, 09 Nov 2024 13:31:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dwSKDm1r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:libxposed%2520%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2585%25E3%2583%25BC%25E3%2581%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MURKN3dkYjRLclFvRkx2U3hvcEl6X0pYVjFieXRjMVBzdHhxemZDUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しゅーご</dc:creator></item><item><title><![CDATA[初心者がインターフェースの意義を感じた話]]></title><description><![CDATA[Javaを学んでいる中で、インターフェースという概念が出てきました。しかし、インターネットで調べたり、AIに聞いたりしても実装方法や注意点の解説が主で、実際の「存在意義」を理解するには苦労しました。Java初心者として、クラスと絡めて考えるとインターフェースの意義がより明確に理解できたので、ここでそのポイントを共有します。

 クラスとインターフェースの役割
まず、クラスは「オブジェクトの属性（変数）と動作（メソッド）をまとめて管理」するために使われ、特定の概念や物を表現します。例えば、Baseball、Bowling、Javelin Throwといったスポーツにおいて、それぞれが固有の...]]></description><link>https://zenn.dev/yo__shi/articles/f692fc4c336395</link><guid isPermaLink="true">https://zenn.dev/yo__shi/articles/f692fc4c336395</guid><pubDate>Sat, 09 Nov 2024 06:12:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EkzaMQcl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E6%2584%258F%25E7%25BE%25A9%25E3%2582%2592%25E6%2584%259F%25E3%2581%2598%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzJjMTM1NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshi</dc:creator></item><item><title><![CDATA[[Java] ジェネリクス文法(3) ジェネリックメソッド]]></title><description><![CDATA[
 ジェネリクスメソッド
クラスではなく、一般クラス内のメソッドをジェネリクス化するものである。

 GenericMethod クラスの生成

&lt;span style=color:red&gt;特定のメソッドをジェネリクス化する&lt;/span&gt;
メソッドのリターンタイプの前に &lt;&gt; ジェネリクス文法を記述します。

staticはジェネリクスメソッドを便利に使うために書かれただけで、ジェネリクスメソッドとは関係ありません！
→オブジェクトなしで実行するとすぐに実行されます。

メソッド機能の例
引数としてデータが渡され、そのデータは型が決まっていません。
こ...]]></description><link>https://zenn.dev/hyoni/articles/6983da51fb7713</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/6983da51fb7713</guid><pubDate>Fri, 08 Nov 2024 06:36:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HeIaqtGf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJava%255D%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E6%2596%2587%25E6%25B3%2595%25283%2529%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[[Java] ジェネリクス(2) 型パラメータ制限]]></title><description><![CDATA[
 型パラメータ制限!

ジェネリクス文法はデータ型が決まっていないため、メソッドの実装が制限されます。
→ ジェネリクスクラスでは望む機能を作成することができません。
このような問題を解決するために、タイプ引数を制限する文法を使用します。
&lt;hr/&gt;
タイプ引数を制限する文法を適用したクラスの例を見てみましょう。

 電話機能を持つクラスの作成

クラス名: Phone

public class Phone {
   public void call(){
       System.out.println("전화");
   }
}

class MobliePhone...]]></description><link>https://zenn.dev/hyoni/articles/84f74da8ddfc5b</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/84f74da8ddfc5b</guid><pubDate>Thu, 07 Nov 2024 06:09:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jANkgG8r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJava%255D%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25282%2529%2520%25E5%259E%258B%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%25B6%25E9%2599%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[ANTLR4のインストールとセットアップ　〜ANTLR入門 その1〜]]></title><description><![CDATA[
 ANTLRとは？
ANTLR（Another Tool for Language Recognition）は、構文解析器を生成する、パーサジェネレータもしくはコンパイラコンパイラと呼ばれるツールでです。主にプログラミング言語やデータフォーマットのパーサーを作成するために使用されます。ANTLRで文法を定義すると、その文法からJavaなどの構文解析のためのプログラムを自動生成できます。

 ANTLRのターゲット言語
ANTLRが構文解析器を生成できるターゲット言語は以下の通りです：

Java
C#
Python
JavaScript
TypeScript
C++
Swift
Go
...]]></description><link>https://zenn.dev/thorie/articles/548pro-antlr-setup</link><guid isPermaLink="true">https://zenn.dev/thorie/articles/548pro-antlr-setup</guid><pubDate>Wed, 06 Nov 2024 21:29:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tLHzUjcb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ANTLR4%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A8%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2580%2580%25E3%2580%259CANTLR%25E5%2585%25A5%25E9%2596%2580%2520%25E3%2581%259D%25E3%2581%25AE1%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:horie-t%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMGQ4YzRmMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>horie-t</dc:creator></item><item><title><![CDATA[【環境構築】Docker + Dev ContainerでサクッとJava環境構築してみた]]></title><description><![CDATA[Javaのプロジェクトを起こすまでもないけれど、サクッと簡単にJavaを実行したい…
といったお悩みに応えるべく、環境構築を行った時の記録です。
環境使用方法まで解説していますので、ぜひ最後までご覧ください。

 開発環境・使用ツール

Windows の方はこちら

WSL2
Docker Desktop
Visual Studio Code


Macbook Pro (Intel) の方はこちら

Docker Desktop
Visual Studio Code




 環境構築方法

 Step 0: VS Code拡張機能【Dev Container】のインストール
拡張機...]]></description><link>https://zenn.dev/mamenz752/articles/8d8cf9d59b54d3</link><guid isPermaLink="true">https://zenn.dev/mamenz752/articles/8d8cf9d59b54d3</guid><pubDate>Wed, 06 Nov 2024 14:55:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MODr4irm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2591Docker%2520%252B%2520Dev%2520Container%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8Java%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmODcyNjY3YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>サヤ</dc:creator></item><item><title><![CDATA[Javaで始める！WebSocketクライアントリアルタイム通信入門]]></title><description><![CDATA[もし、あなたがJavaアプリケーションをリアルタイムで通信させる方法について疑問に思ったことがあるなら、あなたは正しい場所に来ました。このガイドでは、Java WebSocketクライアントの魅力的な世界に飛び込んでみます。WebSocketsが何であるか、それがなぜ重要なのか、そして自分のJava WebSocketクライアントを構築する方法について探ります。さらに、開発プロセスをスムーズにするためのツール、例えばapidogについても触れます。

 WebSocketsとは何ですか？
WebSocketsは、単一のTCP接続を介して全二重通信チャネルを提供するプロトコルです。HTTP...]]></description><link>https://zenn.dev/takuya77088/articles/0cad4a92cbaf0b</link><guid isPermaLink="true">https://zenn.dev/takuya77088/articles/0cad4a92cbaf0b</guid><pubDate>Wed, 06 Nov 2024 03:48:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QCgA0IfQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25EF%25BC%2581WebSocket%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E9%2580%259A%25E4%25BF%25A1%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takuya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2ZTExNTc3N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takuya</dc:creator></item><item><title><![CDATA[Java  品質を高める例外処理とマルチキャッチ構文まとめ]]></title><description><![CDATA[IOException: 入出力操作でエラーが発生した場合にスロー
FileNotFoundException: 指定されたファイルが見つからないときにスロー
SQLException: データベース操作中にエラーが発生した場合にスロー
NumberFormatException: 無効な数値文字列を数値型に変換しようとしたときにスロー
ArithmeticException: 算術演算で不正な操作（例: 0 での除算）をしたときにスロー
ClassCastException: オブジェクトを互換性のない型にキャストしたときにスロー
NullPointerException: null ...]]></description><link>https://zenn.dev/jk447/articles/759a739cc80f9e</link><guid isPermaLink="true">https://zenn.dev/jk447/articles/759a739cc80f9e</guid><pubDate>Mon, 04 Nov 2024 23:31:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VqaEnjRn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%2520%25E5%2593%2581%25E8%25B3%25AA%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258B%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JK447%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YTQ1YzQwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JK447</dc:creator></item><item><title><![CDATA[Javaの基本データ型とラッパークラス: BoxingとUnboxingの仕組み]]></title><description><![CDATA[Javaには、基本データ型（プリミティブ型）とそれに対応するラッパークラスが存在します。基本データ型は直接メモリに格納されるシンプルなデータ型ですが、Javaのコレクションフレームワークなどのオブジェクト型が必要な場面ではラッパークラスが利用されます。この基本データ型とラッパークラス間の自動変換を、それぞれ Boxing と Unboxing と呼びます。この記事では、BoxingとUnboxingの仕組み、各基本データ型に対応するラッパークラス、そして実際の使用例をご紹介します。

 1. BoxingとUnboxingとは？
Boxing: 基本データ型から対応するラッパークラスへの...]]></description><link>https://zenn.dev/jk447/articles/22347cd83f765e</link><guid isPermaLink="true">https://zenn.dev/jk447/articles/22347cd83f765e</guid><pubDate>Mon, 04 Nov 2024 23:26:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CQ6dEiuK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259E%258B%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%253A%2520Boxing%25E3%2581%25A8Unboxing%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JK447%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YTQ1YzQwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JK447</dc:creator></item><item><title><![CDATA[【AWS_SES】LocalStackのSESを利用して、ローカル環境(SpringBoot)で実装したメール送信機能の動作確認をする方法]]></title><description><![CDATA[
 はじめに
こちらの記事では、AWSのメール送信サービスであるSES(Simple Email Service)を本番環境で使用する想定で、「まずはローカル環境で実装した内容の動作確認やテストを実施したい」といった際に、必要となるリソースやコマンド・流れなどを記載しております。

 この記事の対象者
・LocalStackについてよく知らないけど、ちょっと興味あるなという方
・Webアプリ開発にて、「メール送信機能」の実現に向けて選択肢を広げたい方
・AWSのSESをローカル環境で動かしてテストを行いたい方

 開発環境
・Java 21
・SpringBoot 3.3.5
・macO...]]></description><link>https://zenn.dev/keita09/articles/0ad6d174425f7d</link><guid isPermaLink="true">https://zenn.dev/keita09/articles/0ad6d174425f7d</guid><pubDate>Mon, 04 Nov 2024 14:44:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p25hM_6e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS_SES%25E3%2580%2591LocalStack%25E3%2581%25AESES%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%2528SpringBoot%2529%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E9%2580%2581%25E4%25BF%25A1...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjZGUxZTY1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita</dc:creator></item><item><title><![CDATA[[趣味開発]子供向けの通知アプリの開発 テキスト読み上げ編]]></title><description><![CDATA[
 [趣味開発]子供向けの通知アプリの開発 テキスト読み上げ編

 はじめに
最近、子供の朝の準備をサポートするアプリを作りたいと思い、趣味でのAndroidアプリ開発を始めました。特に、子供は時間の管理が難しく、準備が遅れがちです。そこで、毎日決まった時刻に通知を送り、必要な準備をリマインドすることで、朝の支度がスムーズになることを目指しました。また、通知の際にテキストを読み上げることで、文字が読めなくても行動しやすくなるように工夫しています。
今回の開発は、ChatGPTにアドバイスをもらいながら進め、アラームの設定やテキスト読み上げ機能の実装に挑戦しました。この過程を通じて、And...]]></description><link>https://zenn.dev/yydevelop/articles/84b14ab800df7e</link><guid isPermaLink="true">https://zenn.dev/yydevelop/articles/84b14ab800df7e</guid><pubDate>Mon, 04 Nov 2024 08:30:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MZICZ35Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E8%25B6%25A3%25E5%2591%25B3%25E9%2596%258B%25E7%2599%25BA%255D%25E5%25AD%2590%25E4%25BE%259B%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E9%2580%259A%25E7%259F%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%2520%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E8%25AA%25AD%25E3%2581%25BF%25E4%25B8%258A%25E3%2581%2592%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yydevelop%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwNDBiZDVjYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yydevelop</dc:creator></item><item><title><![CDATA[[小ネタ]try-catchしないacquire(P命令)]]></title><description><![CDATA[ちょっとポエムかもしれないです
排他制御については解説しませんので別で調べてください｡
Javaの排他制御の一つにSemaphoreがある｡
!
排他制御するにあたってはまずsynchronizedやjava.concurrent.Atomic*`などを使ったほうがよいです｡(実装が楽)


 try-catchしたくないよね
私があまりThrowするコードに慣れていないかもしれないが､セマフォはP命令でリソースが確保できない場合､待機すればいいだけなのに､Javaのjava.util.concurrent.Semaphore.acquire()はpermitが一定数出ない場合､Intu...]]></description><link>https://zenn.dev/ahoxa1rx/articles/40bb24939f4d2c</link><guid isPermaLink="true">https://zenn.dev/ahoxa1rx/articles/40bb24939f4d2c</guid><pubDate>Mon, 04 Nov 2024 08:04:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QPmR6yxM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%255Dtry-catch%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584acquire%2528P%25E5%2591%25BD%25E4%25BB%25A4%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ahoxa1rx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p0cVFMMThkdU9JWXh5NVRhM1JfYWZyUGtWd0U3M2o1aldsSWdhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ahoxa1rx</dc:creator></item><item><title><![CDATA[【Groovy】という未知の言語を急に仕事で使うようになったので、少し調べてみた]]></title><description><![CDATA[※Qiitaからのお引越し記事※

 groovyとは

 経歴
言語の始まりは、2003年にまで遡る。
2015年にApacheソフトウェア財団へ管理が移行し、トップレベルプロジェクトとして開発がされているゴリゴリの現役言語。
最近では、Google、Netfilxといった有名企業でも取り入れられているとか。

 groovyの特徴

 JVMで動く
何よりもまず、この特徴が挙げられる。
どのページを見ても一番上に書かれている。
Javaとの互換性が高く、非常に容易くプロジェクトに取り入れることができる。

 Javaの文法を簡易化したRubyライクな言語
Javaは静的型付け言語なの...]]></description><link>https://zenn.dev/u_tomoaki/articles/5c229e08157186</link><guid isPermaLink="true">https://zenn.dev/u_tomoaki/articles/5c229e08157186</guid><pubDate>Mon, 04 Nov 2024 04:56:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y1YLvHUr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Groovy%25E3%2580%2591%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E6%259C%25AA%25E7%259F%25A5%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E6%2580%25A5%25E3%2581%25AB%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E5%25B0%2591%25E3%2581%2597%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uTomoaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmMDg4YTJkYjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uTomoaki</dc:creator></item><item><title><![CDATA[Eclipseでクラス図やシーケンス図を自動生成]]></title><description><![CDATA[1.EclipseにPlantUMLとGraphvizをインストール
https://youtu.be/kohZ4XTA6gY?feature=shared
2.以下の記事でPlantUMLに記述するテキストを作成
https://bocek.co.jp/media/formula/development/568/
]]></description><link>https://zenn.dev/codek2/articles/4f46a885313925</link><guid isPermaLink="true">https://zenn.dev/codek2/articles/4f46a885313925</guid><pubDate>Sun, 03 Nov 2024 08:47:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TDKKvLAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Eclipse%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%259B%25B3%25E3%2582%2584%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%25B9%25E5%259B%25B3%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Udemy%25E3%2583%25BB%25E4%25BC%2581%25E6%25A5%25AD%25E3%2583%25BB%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWJNcXYyNnJHY2xGVDEtOURITHVZTjhrWUpWOVN1aTJWYmxkNU9aejljTmtNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Udemy・企業・オンラインプログラミングスクール講師♪codek2</dc:creator></item><item><title><![CDATA[これでソースコード リーディングが捗る! OpenGrok の構築方法]]></title><description><![CDATA[
 Opengrok とは
OpenGrok は主にソースコードの検索ツールとして使用されています。OpenGrok はソースコード検索および相互参照エンジンで Java で書かれているオープンソースのプロジェクトです。
どんな感じか見てみたい方はこちらのページにあるアクセス可能な OpenGrok サイトがありますので、検索を試してみてください!

 構築する前に...
今回は Docker を使用します!
下記はすでにインストールされているものとして進めていきます。

Docker
Docker Compose


 構築方法(Docker)
基本的には公式の Github に記載が...]]></description><link>https://zenn.dev/apo_space81/articles/deab4ed1ad5d35</link><guid isPermaLink="true">https://zenn.dev/apo_space81/articles/deab4ed1ad5d35</guid><pubDate>Sun, 03 Nov 2024 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UYPVtTqE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2520%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%258C%25E6%258D%2597%25E3%2582%258B%2521%2520OpenGrok%2520%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pkaiy81%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkNjY4MzNlYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pkaiy81</dc:creator></item><item><title><![CDATA[ISITDTU CTF 2024 - web writeup]]></title><description><![CDATA[
先週末はISITDTU CTFに参加しまして、Web問題が2/7問しか解けず残念な結果となってしまいました。あまり時間取れなかったり、友人とCryptoにチャレンジしてたり、あと開催時間を勘違いしていたりと言い訳はできるものの、実力不足が一番の原因であることは変わらなそうです...
解いた問題2問 + 時間内にチャレンジした問題のupsolve2問のwriteupです。

 ✅ Another one (100pts 103/315solves クリア率33%)
ユーザーを作成できる/registerがある。ユーザー名・パスワードに加えてroleが付与されるが、これがadminだと後述...]]></description><link>https://zenn.dev/tchen/articles/e475ddef8c6608</link><guid isPermaLink="true">https://zenn.dev/tchen/articles/e475ddef8c6608</guid><pubDate>Fri, 01 Nov 2024 15:53:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kNJcFNF4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:ISITDTU%2520CTF%25202024%2520-%2520web%2520writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-chen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndGbmw3UUNSVkZRdDdIRXpZYm84alBZQW0xYzhXTXhUc0c2UkgzMXRjV3NsMll3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-chen</dc:creator></item><item><title><![CDATA[Embulkを使ってMS Accessのデータを取得する方法]]></title><description><![CDATA[
 概要
Embulkのembulk-input-jdbcを使ってMS Accessのデータを取得する方法を記載します。

 環境

embulk 0.11.5
openjdk 11.0.24 2024-07-16
embulk-input-jdbc 0.13.2


 取得方法
MS Access用のJDBCドライバとしてUCanAccessというドライバが公開されている(最近フォークでGithubにもライブラリが公開されていた。Java11以降サポートとのこと)。このJDBCドライバとEmbulkを組み合わせてアクセスできないか実験しました。
UCanAccessはUCanacces...]]></description><link>https://zenn.dev/hashiba/articles/embulk-connects-msaccess</link><guid isPermaLink="true">https://zenn.dev/hashiba/articles/embulk-connects-msaccess</guid><pubDate>Fri, 01 Nov 2024 13:12:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tdwHvi4J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Embulk%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6MS%2520Access%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinichi%2520Hashiba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUGxmME5PSUREUHNlRXVodU1ZYm5JeTlhcUluaVRuV3plbThYZlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shinichi Hashiba</dc:creator></item><item><title><![CDATA[JJUG CCC 2024 Fall 参加、登壇レポート]]></title><description><![CDATA[
 はじめに
2024年10月27日に日本Javaユーザーグループによって開催されました、JJUG CCC 2024 Fallに参加し1つのセッションに登壇してきました。
イベントのホームページでは概要として以下のように紹介されています。
https://ccc2024fall.java-users.jp/

開催概要


JJUG CCCは日本最大のJavaコミュニティイベントです。Java関連の技術や事例に関する良質なセッションが行われ、また異なる分野で活躍するJava技術者が一堂に会する場ともなっています。オフラインでの開催になります。

今回はオフラインでの開催となり、場所はベル...]]></description><link>https://zenn.dev/muit_techblog/articles/bd5553306947f5</link><guid isPermaLink="true">https://zenn.dev/muit_techblog/articles/bd5553306947f5</guid><pubDate>Fri, 01 Nov 2024 07:57:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ekQAsqQD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JJUG%2520CCC%25202024%2520Fall%2520%25E5%258F%2582%25E5%258A%25A0%25E3%2580%2581%25E7%2599%25BB%25E5%25A3%2587%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%25AB%2599%25E6%25A9%258B%2520%25E5%258D%259A%25E5%25AE%259F%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxZGYyYTRkNjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E4%25B8%2589%25E8%258F%25B1UFJ%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2583%2586...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWQyODE1MTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>髙橋 博実</dc:creator></item><item><title><![CDATA[Spring Bootの基本]]></title><description><![CDATA[
 SpringBoot基本構成


 1. コントローラー (Controller)
役割
HTTPリクエストを処理し、ビジネスロジックを呼び出し、レスポンスを返します。
例
UserController

 2. モデル (Model)
役割
データベースのエンティティやビジネスデータを表します。通常、クラスとして定義され、データの構造を定義します。
例
User（ユーザーの属性を持つクラス）

 3. リポジトリ (Repository)
役割
データの永続化を管理します。データベースとのインタラクションを担当します。
例
UserRepository（ユーザー情報のCRUD操作を...]]></description><link>https://zenn.dev/sanagi/articles/8645926a7679f8</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/8645926a7679f8</guid><pubDate>Wed, 30 Oct 2024 14:32:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bMoqRImr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Spring%2520Boot%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item></channel></rss>