<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 15 Jun 2025 05:42:01 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[po4a 化されていない POD ページの po4a 化]]></title><description><![CDATA[
 前回の記事
https://zenn.dev/yasumichi/articles/1f6873bc5cfefa

 今回の作業対象
https://github.com/linux-jm/manual/tree/master/pod/sudo
現在、翻訳されているファイルは、以下の通り。

sudo.pod
sudoers.pod
visudo.pod


 POD とは
Perl 関連パッケージで良く用いられる、 POD (Plain Old Documentation) 形式で書かれたページです。

JM Project (Japanese)
perlpod - Plain O...]]></description><link>https://zenn.dev/yasumichi/articles/6b666fd24e230a</link><guid isPermaLink="true">https://zenn.dev/yasumichi/articles/6b666fd24e230a</guid><pubDate>Sat, 14 Jun 2025 08:08:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r5v-wDJZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:po4a%2520%25E5%258C%2596%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2584%2520POD%2520%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%2520po4a%2520%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yasumichi%2520Akahoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUoySnNPVXFnanR4SGcteXBvTGoxcmVpTXlzc1dwYnltZEJ2ZHZYa1ExT1kteHRFOGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yasumichi Akahoshi</dc:creator></item><item><title><![CDATA[Linux:gitリポジトリを一時的にweb公開するscript]]></title><description><![CDATA[gitは "git instaweb" でカレントのリポジトリをweb公開できて、webブラウザからlogやdiffがとれる。
特に複数のbranchを持っている状態のときにあちこちのbranchに移動しつつ参照できて便利だなと思う。
便利だけど、数十人のproject等でサーバマシンを共有している場合にportがかぶるとやだなって思ったので、開いているportを自動で割り当ててinstawebするshell-scriptを書いた。
"webgit.sh start" &nbsp; で開始して
"webgit.sh stop" &nbsp;で停止する

表示イメージ



#!/bin/...]]></description><link>https://zenn.dev/nfukuoka/articles/qiita-20181104-c3f179d1045cca658360</link><guid isPermaLink="true">https://zenn.dev/nfukuoka/articles/qiita-20181104-c3f179d1045cca658360</guid><pubDate>Sat, 14 Jun 2025 05:07:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zrj6NP2L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%253Agit%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%2580%25E6%2599%2582%25E7%259A%2584%25E3%2581%25ABweb%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258Bscript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nfukuoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZmNmOTYyNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nfukuoka</dc:creator></item><item><title><![CDATA[Linux: od でちょっと見慣れた感じに表示]]></title><description><![CDATA[od、デフォルト表示だとちょっと見辛いので、hex とasciiをどこかで見た風に表示するよう指定する
od -v -t x1z -Ax

表示例

$ od -v -t x1z -Ax b.out
000000 7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00  &gt;.ELF............&lt;
000010 02 00 03 00 01 00 00 00 60 83 04 08 34 00 00 00  &gt;........`...4...&lt;
000020
]]></description><link>https://zenn.dev/nfukuoka/articles/qiita-20181104-c36ec710482e903a2528</link><guid isPermaLink="true">https://zenn.dev/nfukuoka/articles/qiita-20181104-c36ec710482e903a2528</guid><pubDate>Sat, 14 Jun 2025 05:05:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cyHlxAvk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%253A%2520od%2520%25E3%2581%25A7%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E8%25A6%258B%25E6%2585%25A3%25E3%2582%258C%25E3%2581%259F%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nfukuoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZmNmOTYyNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nfukuoka</dc:creator></item><item><title><![CDATA[半自作Linuxで理解するLinux起動のしくみ]]></title><description><![CDATA[ブートからログインプロンプトに至るまでのLinuxの起動プロセスはどうなっているのか？ 本稿は、Linuxが起動する過程を「ブートローダ」と「ユーザ空間開始」の２つのポイントに分けて、それぞれの仕組みを解説しております。
また机上理論だけではなく、中盤の章からは実際のUSBメモリからブートするLinuxの試作を通してリアルなブートまわりの理解を試みています。USBブートのLinuxは、debootstrapを活用して基礎研究に適したコンパクトなDebianベースシステムを「半自作Linux」のように構築します。
ユーザ空間開始からはinitramfsとsystemdのユニットの理論をまとめており、最後は簡単なサービスの試作を紹介してます。]]></description><link>https://zenn.dev/akmidori/books/linuxbootseq</link><guid isPermaLink="true">https://zenn.dev/akmidori/books/linuxbootseq</guid><pubDate>Sat, 14 Jun 2025 00:12:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RuPGcnR3--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zODYxMDEzYWJmLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>AK-Midori</dc:creator></item><item><title><![CDATA[OS起動の仕組み（Linux）]]></title><description><![CDATA[はじめに
OSが起動するまでの流れをざっくり記載。
1.電源投入
コンピュータの電源を投入すると、コンピュータのシステムが起動。
2.UEFI起動（ハードウェアの初期化）
UEFI(BIOS)はコンピュータのシステム起動時に最初に実行されるファームウェア。
※ファームウェアとはコンピュータやスマートフォンなどの電子機器のハードウェアを動かすために組み込まれている専用のソフトウェア。主に機器の内部（チップやメモリ）に書き込まれており、電源を入れるとすぐに動き出して、ハードウェアの基本的な動作を制御する。
【UEFIの主な動作】
　├─メモリのチェック
　├─ハードウェア設定の読み込み
　├...]]></description><link>https://zenn.dev/eiken/articles/8181c0a968b45d</link><guid isPermaLink="true">https://zenn.dev/eiken/articles/8181c0a968b45d</guid><pubDate>Fri, 13 Jun 2025 23:15:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uNrQh1J---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OS%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25EF%25BC%2588Linux%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enjine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enjine</dc:creator></item><item><title><![CDATA[【Linux】テキスト入力可能なログ保存方法！]]></title><description><![CDATA[普通、Linuxでログを保存するときは
go run main.go &gt; output.txt 2&gt;&amp;1
みたいに書きますが、これだとログがリアルタイムで表示されないがためにテキスト入力ができません。

修正後
go run main.go |&amp; tee output.txt

【解説】
|&amp;: 標準出力と標準エラー出力を一緒にパイプする
tee output.txt: 受け取った出力を「画面に表示」＋「output.txtに保存」
もし、output.txtが既に存在していて、そこに書き加える形で出力したい場合は、teeの後に-aオプションをつけるこ...]]></description><link>https://zenn.dev/glisan/articles/e7264c0aa7bf6d</link><guid isPermaLink="true">https://zenn.dev/glisan/articles/e7264c0aa7bf6d</guid><pubDate>Fri, 13 Jun 2025 15:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JZ4e1_5V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Linux%25E3%2580%2591%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%2585%25A5%25E5%258A%259B%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2583%25AD%25E3%2582%25B0%25E4%25BF%259D%25E5%25AD%2598%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0MzU1YzBlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>グリッサンド。</dc:creator></item><item><title><![CDATA[Linuxの基礎コマンド]]></title><description><![CDATA[
 Linuxの基礎コマンドを使いこなそう

Linuxには英単語くらいに数多くのコマンドが存在しています。
それらを全て覚えて使いこなせるようになるまでに数十年、数百年かかるかもしれない…
基本的な9つのコマンドのうち、5つ紹介します！


 pwd

「print work directory」の略
現在の作業ディレクトリ「カレントディレクトリ」を絶対パスで表示する。
迷子防止のために、ディレクトリを移動したときは必ず使って確認しています。
pwd


 ls

「list segments」の略
ディレクトリに存在するファイルやディレクトリの一覧を表示する。
今いるディレクトリや指...]]></description><link>https://zenn.dev/kenichiburoro/articles/c8753e0ef60139</link><guid isPermaLink="true">https://zenn.dev/kenichiburoro/articles/c8753e0ef60139</guid><pubDate>Fri, 13 Jun 2025 06:56:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--saa20mgt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2588%25B8%25E5%25B3%25B6%25E3%2580%2580%25E5%2581%25A5%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmxzSDMtU2hZeVZOUmlOUzRHREVVeDVIX2NscjVCekY4Um9Qdkk2Nlhrenk3UVNyclc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>戸島　健一</dc:creator></item><item><title><![CDATA[vimの使い方]]></title><description><![CDATA[vimを操作する際にコマンドを忘れがちなので、まとめておきます。

 vimを使ってファイルを開く
"vim file.md"
このfile.mdはどのファイルでも開けます。

 vimでファイルの編集を行う
vimはコマンドが多く、重要なコマンドを見つけにくいので、普段良く使うものをまとめました。



コマンド
コマンド内容




i
インサートモード (文字の入力が可能)


esc
ノーマルモード (モードの選択)


v
ビジュアルモード (文字の選択)


d
文字の削除


:w
ファイルの保存


:q
編集終了


:q!
保存せず終了




 最後に
vimは、U...]]></description><link>https://zenn.dev/airin/articles/tips_6-13-2025_vim</link><guid isPermaLink="true">https://zenn.dev/airin/articles/tips_6-13-2025_vim</guid><pubDate>Fri, 13 Jun 2025 05:21:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P3UyAMC0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:vim%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:poe125%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkl5c0pkNGR1RFBsbzUya3NHMlN0bzBiRUdBTUcxb0xzMEVQMHVTd3hZYVR4QkVnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>poe125</dc:creator></item><item><title><![CDATA[Linuxのファイルシステム]]></title><description><![CDATA[
 はじめに

こんにちは。ふまたんです。今回の記事は、Linuxのファイルシステムについてまとめていきたいと思います。
どの階層にどんなデータが格納されるのか、記事にしていこうと思います。
LinuCの学習をしていてファイルシステムを問われる問題があり、各ファイルにどんな役割があるのかまとめようと思い、記事にしてみようと思いました。


 Filesystem Hierarchy Standard (FHS)
ファイルシステムの詳細をまとめる前に、Filesystem Hierarchy Standard (FHS) について少しまとめていきます。
FHSとは、Linuxを含むUnix...]]></description><link>https://zenn.dev/whomatan/articles/7552fcfdd10511</link><guid isPermaLink="true">https://zenn.dev/whomatan/articles/7552fcfdd10511</guid><pubDate>Thu, 12 Jun 2025 23:45:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NZy-Ahs3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%25BE%25E3%2581%259F%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS09yeC1lSjJ5Z2tqa3Y3dlZkcUxNUE9KemtIZTJVcFYwVzZicFFSMHZZSTFBak51Zmo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふまたん</dc:creator></item><item><title><![CDATA[Podman + Quadlet で OneDrive の Linux クライアントを自動起動する(systemd対応)]]></title><description><![CDATA[
 背景

自分のPC買い替えのときにせっかくなので podman に切り替えてみた
docker だと --restart always を入れれば Docker の起動時に自動でコンテナが立ち上がってくれるが podman はサービス化に一手間必要

OneDrive Client for Linux はコンテナイメージでも配布されている。コンテナを自動起動する方法として、ドキュメントでは podman generate systemd で systemd のユニットファイルを生成するやり方が記載されていたが、このコマンドは非推奨になったようなので Quadlet を使うことにした
...]]></description><link>https://zenn.dev/ykrods/articles/b8a19698c2932e</link><guid isPermaLink="true">https://zenn.dev/ykrods/articles/b8a19698c2932e</guid><pubDate>Thu, 12 Jun 2025 04:28:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NfMjj0WX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Podman%2520%252B%2520Quadlet%2520%25E3%2581%25A7%2520OneDrive%2520%25E3%2581%25AE%2520Linux%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%2528systemd%25E5%25AF%25BE%25E5%25BF%259C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykrods%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlBRUzctLVUzaHJPQ3B3bVViRkpJZmRoTEktY0pUcWVpRVRSVTQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykrods</dc:creator></item><item><title><![CDATA[Linux　Webサーバー構築(Apache)]]></title><description><![CDATA[
 第1章：はじめに

 概要
このブログでは、無料で安定性の高いLinuxディストリビューション「AlmaLinux」を使って、Apache（httpd）Webサーバーを構築する手順を紹介します。CentOSの後継として注目されているAlmaLinuxは、企業利用にも適しており、学習用途にも最適です。
Linux初心者でも安心して取り組めるように、各コマンドの意味やポイントも丁寧に解説していきます。


 第2章：Apacheのインストール
まずはWebサーバーの中核となるApacheをインストールします。AlmaLinuxでは「httpd」という名前で提供されています。

 ステップ...]]></description><link>https://zenn.dev/kenshinyamamoto/articles/c5429ce7dbd599</link><guid isPermaLink="true">https://zenn.dev/kenshinyamamoto/articles/c5429ce7dbd599</guid><pubDate>Thu, 12 Jun 2025 00:51:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qCizhTrP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2580%2580Web%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%2528Apache%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kenshin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1pLVWprWFB2Sk9GcHRzeUQtTVQ1d3pvVnBHd3pWZHpFMlVmSExCOFJGSmNjX0lEMTQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kenshin</dc:creator></item><item><title><![CDATA[Mac/Linuxユーザーのためのターミナルでよく使う基本コマンド。〜その2〜編集・コピー・差分・表示 編]]></title><description><![CDATA[どうも、かりんです。
前回の記事、Mac/Linuxユーザーのためのターミナルでよく使う基本コマンド〜その1〜では、MacやLinuxでターミナルを使う際によく登場する基本的なコマンドを紹介しました。
今回はその続きとして、「ファイルの中身を見たい」「コピーしたい」「編集したい」「違いを見比べたい」といった日常操作で使う基本コマンドを紹介していきます。
この記事も初心者の方向けに、「この場面ではこう使う」というシーンと一緒にできるだけシンプルにまとめています。

 ファイルの中身を確認する（短いファイル）
・コマンド
cat ファイル名
・用途
テキストファイルなどの中身をそのまま表示し...]]></description><link>https://zenn.dev/karin_lab/articles/28bf751c824563</link><guid isPermaLink="true">https://zenn.dev/karin_lab/articles/28bf751c824563</guid><pubDate>Wed, 11 Jun 2025 23:34:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f9jKvmxl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%252FLinux%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E5%259F%25BA%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2582%25E3%2580%259C%25E3%2581%259D%25E3%2581%25AE2%25E3%2580%259C%25E7%25B7%25A8%25E9%259B%2586%25E3%2583%25BB%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2583%25BB%25E5%25B7%25AE%25E5%2588%2586%25E3%2583%25BB%25E8%25A1%25A8%25E7%25A4%25BA%2520%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmNjQ5NDk1MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かりん</dc:creator></item><item><title><![CDATA[Meow | Hack The Box Writeup]]></title><description><![CDATA[
 マシン情報

マシン名：Meow


 攻略方法

 1. ポートスキャン
nmapコマンドでポートスキャンします。
nmap -sV {マシンIP}
nmapのオプション
-sV：サービスのバージョンを検出する


23番ポートでtelnetが稼働していることがわかります。

 2. 検出されたサービスに接続
telnetコマンドでサーバーに接続してみます
ログイン名を聞かれるので試しにrootと入力してみたところ、パスワードなしでログインできてしまいます。
telnet {マシンIP}


 3. flag取得
lsコマンドでファイルやフォルダを一覧表示すると、flag.txtが...]]></description><link>https://zenn.dev/maetsuyo/articles/ad0b2274bfd67e</link><guid isPermaLink="true">https://zenn.dev/maetsuyo/articles/ad0b2274bfd67e</guid><pubDate>Wed, 11 Jun 2025 15:20:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vyqvi5hC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Meow%2520%257C%2520Hack%2520The%2520Box%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2589%258D%25E7%2594%25B0%25E5%2589%259B%25E5%25BF%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTF1WVdfQVQzMVhJWXBKMGIwc1lJX1ZjcExBSUtiLWR2UEhjRVZHSFdwSGhrU0xRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>前田剛志</dc:creator></item><item><title><![CDATA[2025年の今、開発用OSとして私がMX Linux(xfce)を推す理由]]></title><description><![CDATA[
 はじめに
2025年、今年は何の年かわかりますか？
そう、Linuxのデスクトップ元年です！
2025年10月、Windows 10のサポートが終了し、Windows 11のシステム要件が厳しくなったことで、
多くのPCがLinuxデスクトップへの移行が加速する・・・と超期待しています
そんな2025年の今、あくまで個人の感想ですが開発用OSとしてMX Linux(xfce)を推す理由
をまとめてみました。
*筆者はMX Linuxとmanjaro Linuxを普段使いとして使っています。
fedoraやubuntuでもvirtual boxで遊んでいたりします。

 開発用OSとし...]]></description><link>https://zenn.dev/ko202305/articles/78cbdf02768660</link><guid isPermaLink="true">https://zenn.dev/ko202305/articles/78cbdf02768660</guid><pubDate>Wed, 11 Jun 2025 11:58:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pDx8t8Tt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2025%25E5%25B9%25B4%25E3%2581%25AE%25E4%25BB%258A%25E3%2580%2581%25E9%2596%258B%25E7%2599%25BA%25E7%2594%25A8OS%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%25A7%2581%25E3%2581%258CMX%2520Linux%2528xfce%2529%25E3%2582%2592%25E6%258E%25A8%25E3%2581%2599%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kosuke%2520Oya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Yms1LW9HVkRyd3RPRFJmZWFJby1xSkk4MXBqR2ZCY2xjVnA4YVI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kosuke Oya</dc:creator></item><item><title><![CDATA[【Linux】cron（クーロン）で30分ごとにジョブを実行する方法と登録例30個]]></title><description><![CDATA[
 Linux
Linuxのcron（クーロン）を使って、30分おきにスクリプトやコマンドを実行する設定方法を紹介します。


 🕒 基本のcron設定（30分おき）
*/30 * * * * /path/to/your/command.sh

 各フィールドの意味：
┌──────────── 分（0〜59）
│ ┌────────── 時（0〜23）
│ │ ┌──────── 日（1〜31）
│ │ │ ┌────── 月（1〜12）
│ │ │ │ ┌──── 曜日（0〜7）※0と7は日曜
│ │ │ │ │
*/30 * * * * ← 30分ごと


 ✅ 登録手順

ターミ...]]></description><link>https://zenn.dev/qa_dev/articles/421293e124db5a</link><guid isPermaLink="true">https://zenn.dev/qa_dev/articles/421293e124db5a</guid><pubDate>Wed, 11 Jun 2025 09:36:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q-xBo5bf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Linux%25E3%2580%2591cron%25EF%25BC%2588%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25AD%25E3%2583%25B3%25EF%25BC%2589%25E3%2581%25A730%25E5%2588%2586%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AB%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E7%2599%25BB%25E9%258C%25B2%25E4%25BE%258B30%25E5%2580%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qa_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGRfRnVZcmtndVIzVW1ScTVFMWdDMmozVmR4cFRjV29uUTJYd2JOQ2RhQ3ltaEFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qa_dev</dc:creator></item><item><title><![CDATA[【Vim】いろいろなエラーに対処できるように①]]></title><description><![CDATA[
 はじめに
最近Vimを触れる機会が増え、慣れていないこともあり様々な「壁」に当たっています。HJKLを使用した操作や、ノーマルモードのコマンドなど慣れないことばかりですが、今個人的に一番当たりたくない壁があります。それは 「直し方が分からないエラー」 です！
エラーの直し方が分からず、困った経験を何度もしました。
今回は、各エラーに対する対処方法についてまとめてみようと思います！

 E37: No write since last change

このエラーは英語が苦手な方でも多少理解できる内容ではないでしょうか。
恐らく遭遇率が一番高いエラーです。
「保存していない変更があるけど...]]></description><link>https://zenn.dev/mirus/articles/e5ef6fef7b6278</link><guid isPermaLink="true">https://zenn.dev/mirus/articles/e5ef6fef7b6278</guid><pubDate>Wed, 11 Jun 2025 08:20:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2BYoEWLj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vim%25E3%2580%2591%25E3%2581%2584%25E3%2582%258D%25E3%2581%2584%25E3%2582%258D%25E3%2581%25AA%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E5%25AF%25BE%25E5%2587%25A6%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mirus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwNGEzYzJmZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mirus</dc:creator></item><item><title><![CDATA[🎤【Linux48】コマンドメンバー紹介！〜推しを見つけよう〜1]]></title><description><![CDATA[
 🎤【Linux48】コマンドメンバー紹介！〜推しを見つけよう〜
こんにちは〜！今回は、Linuxアイドルグループの中でも「コマンドメンバー」にスポットライトを当てて紹介します。
彼女たちは、ターミナルというステージで活躍する、超実力派のメンバーたちです🌟
それぞれの役割を覚えると、Linuxがグッと楽しくなります。


 🏠 1. pwdちゃん（ピー・ダブリュー・ディー）

「今どこにいるか、ちゃんと教えてあげるね！」


今いる場所（フォルダ）を教えてくれる子。
迷子になったらこの子に聞こう！

📌 具体例：
$ pwd
/home/user/projects

---

 📦 2...]]></description><link>https://zenn.dev/haruharuta1177/articles/ba78c245344ba3</link><guid isPermaLink="true">https://zenn.dev/haruharuta1177/articles/ba78c245344ba3</guid><pubDate>Wed, 11 Jun 2025 05:30:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I5LhuP3I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%25E3%2580%2590Linux48%25E3%2580%2591%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2581%25E3%2580%259C%25E6%258E%25A8%25E3%2581%2597%25E3%2582%2592%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%2591%25E3%2582%2588%25E3%2581%2586%25E3%2580%259C1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%258B%25E3%2581%25AF%25E3%2582%258B%25E3%2581%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4MjE0ZDdkMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はるはるは</dc:creator></item><item><title><![CDATA[Stratosharkを利用してLinuxのシステムコール解析をやってみる]]></title><description><![CDATA[
 はじめに
本記事では、Stratosharkというツールを使ってシステムコールを解析してみたいと思います。前半はStratosharkの紹介と使い方、後半は、Stratosharkを利用した解析のイメージを載せています。

 本記事の対象者
システムコールの解析に興味がある方

 動作環境
本記事ではWindows 11にStratosharkをインストールし、Ubuntu上のnginxのシステムコールを解析しています。動作環境については以下の通りです。

 ホストOS（Windows 11）

OS：Windows 11 Pro 64bit 24H2
仮想化ソフト：Oracle V...]]></description><link>https://zenn.dev/progdence/articles/4d2089e32c8803</link><guid isPermaLink="true">https://zenn.dev/progdence/articles/4d2089e32c8803</guid><pubDate>Tue, 10 Jun 2025 13:34:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YjOEN2Ae--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stratoshark%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Linux%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nagano%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNTg2NWZiY2IuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25B3%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbm9FTUNCNU0wVFJibXNFdkZiaFRWSnRJaFB4XzNiekVnT25kUDY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nagano</dc:creator></item><item><title><![CDATA[マシンスペック確認用コマンドまとめ]]></title><description><![CDATA[
 概要
Ubuntu マシンで、PC のハードウェアスペックをコマンド上で確認するためのコマンドをまとめてます。随時更新予定です。

 CPU スペック [1]

$ lscpu

 メモリサイズ [2]

$ free -h

脚注


【 lscpu 】コマンド――CPU の情報を表示する ↩︎


【Linux コマンド】メモリ容量・CPU コア数・ディスク容量・OS バージョンを確認する ↩︎



]]></description><link>https://zenn.dev/shunatori/articles/9650968ebf5f51</link><guid isPermaLink="true">https://zenn.dev/shunatori/articles/9650968ebf5f51</guid><pubDate>Tue, 10 Jun 2025 11:58:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2hnFJqgM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%259A%25E3%2583%2583%25E3%2582%25AF%25E7%25A2%25BA%25E8%25AA%258D%25E7%2594%25A8%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%258F%25E3%2581%2597%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlN2Q1NTg0NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふくしん</dc:creator></item><item><title><![CDATA[WWDC25 発表の apple/containerをmacOS15で動かしてみた]]></title><description><![CDATA[

 はじめに
つい先ほど、macOSでのコンテナ環境に新しい選択肢が登場しました。
Appleが提供する apple/containerは、macOS上でLinuxコンテナを動かすための新しいツールです。今回は、このツールをmacOS 15で実際に動かしてみた結果をまとめます。
https://github.com/apple/Container

container relies on the new features and enhancements present in the macOS 26 Beta 1. You can run the tool on macOS 15, ...]]></description><link>https://zenn.dev/sheero/articles/a4a16d548bc510</link><guid isPermaLink="true">https://zenn.dev/sheero/articles/a4a16d548bc510</guid><pubDate>Tue, 10 Jun 2025 05:07:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QUSMZ2-k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WWDC25%2520%25E7%2599%25BA%25E8%25A1%25A8%25E3%2581%25AE%2520apple%252Fcontainer%25E3%2582%2592macOS15%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25BF%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMWFiOGFmMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すみや</dc:creator></item></channel></rss>