<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-08-04T17:53:00+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2062688</id>
    <published>2025-08-04T17:53:00+09:00</published>
    <updated>2025-08-04T17:53:00+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tenda_ryo_y/items/a6022d5dcaa9b664a1cc"/>
    <url>https://qiita.com/tenda_ryo_y/items/a6022d5dcaa9b664a1cc</url>
    <title>TypeScript完全互換のバリデーションライブラリ「ArkType」</title>
    <content type="text">はじめに
TypeScriptのランタイムバリデーションは、API のデータ検証やフォーム入力の検証において重要な機能です。昨今ではZodやYupといったライブラリの人気が高いですが、2024年に登場したArkTypeは、その新しいアプローチで注目を集めています。
Ark...</content>
    <author>
      <name>tenda_ryo_y</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2062675</id>
    <published>2025-08-04T17:34:54+09:00</published>
    <updated>2025-08-04T17:34:54+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Jochun/items/2cda5d24dedd7ac26c2d"/>
    <url>https://qiita.com/Jochun/items/2cda5d24dedd7ac26c2d</url>
    <title>[React][Hooks] `useRef` の使い方</title>
    <content type="text">概要

Reactアプリケーションで、DOM要素へのアクセスやレンダー間での値保持を実現できる useRef フックを紹介

useStateと異なり、値を更新しても再レンダリングが発生しないため、タイマー管理や前回値の保持などに有効

フォーム制御、アニメーション...</content>
    <author>
      <name>Jochun</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2062672</id>
    <published>2025-08-04T17:32:00+09:00</published>
    <updated>2025-08-04T17:32:00+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/q-1-p/items/2bca5f6b7a8773c6ea8a"/>
    <url>https://qiita.com/q-1-p/items/2bca5f6b7a8773c6ea8a</url>
    <title>privateプロパティに「["hoge"]」で外部アクセスできる理由</title>
    <content type="text">結論
以下の二つの仕様が理由である。

ブラケット記法は動的にプロパティにアクセスできる
ブラケット記法は[]の内部に指定されたキーを元に、「実行時」に指定されたキーと一致するプロパティがあれば呼び出すという仕組みなので、コーディング時に対象のプロパティにアクセスできなく...</content>
    <author>
      <name>q-1-p</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2062595</id>
    <published>2025-08-04T14:15:21+09:00</published>
    <updated>2025-08-04T15:25:04+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Jochun/items/4bceba5636f8dd07270a"/>
    <url>https://qiita.com/Jochun/items/4bceba5636f8dd07270a</url>
    <title>[React][Hooks] Custom Hooks `useCardAnimation` の使い方</title>
    <content type="text">概要

Reactアプリケーションで、カードUIのホバーや選択時のアニメーション挙動を簡潔に実装するための useCardAnimation カスタムフックを紹介

再利用可能な構造にすることで、複数のカードUIに共通のアニメーションを適用可能

Netflix や S...</content>
    <author>
      <name>Jochun</name>
    </author>
  </entry>
</feed>
