<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 22 Jan 2025 09:48:59 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[PrismaとZodが導く、型安全なAPI開発の黄金ルート]]></title><description><![CDATA[
 効率化と品質向上を実現する実践的アプローチ
昨今の API 開発において、OpenAPI (Swagger) ドキュメントの重要性は増すばかりです。しかし、手作業によるドキュメント作成・更新は、開発者の大きな負担となり、コードとの不整合も発生しやすいという課題があります。
本記事では、Prisma と Zod を組み合わせることで、OpenAPI ドキュメントの生成を自動化し、型安全で効率的な API 開発を実現する方法を紹介します。

 Prisma 生成の Zod スキーマを活用するメリット
この手法の鍵は、Prisma が zod-prisma-types によって自動生成する...]]></description><link>https://zenn.dev/t09tanaka/articles/480321b4c4eb44</link><guid isPermaLink="true">https://zenn.dev/t09tanaka/articles/480321b4c4eb44</guid><pubDate>Wed, 22 Jan 2025 09:45:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vJ0iRt90--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25A8Zod%25E3%2581%258C%25E5%25B0%258E%25E3%2581%258F%25E3%2580%2581%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AAAPI%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E9%25BB%2584%25E9%2587%2591%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t09tanaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NjdlMmQ2MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t09tanaka</dc:creator></item><item><title><![CDATA[テストダブルとは何か?]]></title><description><![CDATA[テストダブルという言葉をご存知でしょうか? 仮に知らないとしても、多くのソフトウェアエンジニアはこれを利用したことがあります。たとえば Java の世界で Mockito を使ったり、JavaScript の世界で Jest を使う場合、ほぼ間違いなくテストダブルを使っています。すなわち、本物のコードを「模倣」するコードのことをテストダブルと言います。
テストダブルには、いくつか種類があります。よく名前が知られているのは「モック」です。テストコードについて会話するとき「関数をモックする」という表現をしたことはありませんか? 多くの場合「本物と違う振る舞いをさせる」ことを「モックする」と ...]]></description><link>https://zenn.dev/mahata/articles/test-doubles</link><guid isPermaLink="true">https://zenn.dev/mahata/articles/test-doubles</guid><pubDate>Wed, 22 Jan 2025 08:08:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9SVNP_R8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yasunori%2520MAHATA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNUGNmdW9MOU95NkxjbTlwSjk0d1Joc1dLS2ZxdVBodUllbFdxNmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yasunori MAHATA</dc:creator></item><item><title><![CDATA[今話題のClineを使って'じゃんけん'してみた]]></title><description><![CDATA[
 Clineとは
Clineは、フロントエンドの開発を支援するツールです。
https://github.com/cline/cline

Claude 3.5 Sonnetのエージェントコーディング機能により、Clineは複雑なソフトウェア開発タスクをステップバイステップで処理することができます。ファイルの作成と編集、大規模なプロジェクトの探索、ブラウザの使用、ターミナルコマンドの実行（許可を与えた後）などが可能なツールを使って、コード補完や技術サポート以上の方法であなたを支援することができます。クラインはモデル・コンテキスト・プロトコル（MCP）を使って新しいツールを作成し、自身の...]]></description><link>https://zenn.dev/shunsuke_stack/articles/b7394a213a273b</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/b7394a213a273b</guid><pubDate>Tue, 21 Jan 2025 15:29:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vhnVWTy3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AECline%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2527%25E3%2581%2598%25E3%2582%2583%25E3%2582%2593%25E3%2581%2591%25E3%2582%2593%2527%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜ヒストグラム表示（020/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の20本目です。

 前回
https://zenn.dev/nyagato_00/articles/34c942089987d7

 実装

 お題

matplotlibを用いてimori_dark.jpgのヒストグラムを表示せよ。
ヒストグラムとは画素の出現回数をグラフにしたものである。 matplotlibではhist()という関数がすでにあるので、それを利用する。

https://github.com/minido/Gasyori100knock-1/tree/master/Qu...]]></description><link>https://zenn.dev/nyagato_00/articles/c25f0f201aef6a</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/c25f0f201aef6a</guid><pubDate>Tue, 21 Jan 2025 10:14:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0Y9DmQdc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E8%25A1%25A8%25E7%25A4%25BA%25EF%25BC%2588020%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[今更ながらReact17 → React18でつまづいた所]]></title><description><![CDATA[株式会社イルシルCTO 倉橋康熙です。
業務でReact17→React18のアップデートを行ったので備忘録に。

 1. useHistoryは使えない
useHistoryは廃止されてしまったのでhistory.pushやhistory.replace、hisotry.location.pathname等は全て使えません。
useNavigation、useLocationを使いましょう
// react-douter-dom v5
const history = useHistory();
history.push("/")
history.replace("/")
history...]]></description><link>https://zenn.dev/irusiru/articles/f9ba3ea9df7dcd</link><guid isPermaLink="true">https://zenn.dev/irusiru/articles/f9ba3ea9df7dcd</guid><pubDate>Tue, 21 Jan 2025 07:16:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZJtiB8Eg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E6%259B%25B4%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589React17%2520%25E2%2586%2592%2520React18%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%25BE%25E3%2581%25A5%25E3%2581%2584%25E3%2581%259F%25E6%2589%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%2580%2589%25E6%25A9%258B%25E5%25BA%25B7%25E7%2586%2599%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYjc5MDE3NjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B7%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTc3MmNjY2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>倉橋康熙</dc:creator></item><item><title><![CDATA[Model Context Protocol (MCP): 生成AIと外部ツールを繋ぐためのプロトコル]]></title><description><![CDATA[2024/11/26に、AnthropicはModel Context Protocol(MCP)という新たなオープンソースプロジェクトを発表した。
https://www.anthropic.com/news/model-context-protocol
これは、生成AIを活用する上で不可欠な「生成AIと外部のデータやツールを繋ぐ部分」を共通化し、再利用可能にするためのものだ。

 概要
MCPは、JSON-RPCに基づいたプロトコルであり、AI本体側がクライアント、外部ツール側がサーバーになる。
2024/12現在、デスクトップ版ClaudeがMCPに対応している。
以下のように、O...]]></description><link>https://zenn.dev/herp_inc/articles/00917098b3ffd3</link><guid isPermaLink="true">https://zenn.dev/herp_inc/articles/00917098b3ffd3</guid><pubDate>Tue, 21 Jan 2025 02:12:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fy58Wyb0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Model%2520Context%2520Protocol%2520%2528MCP%2529%253A%2520%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25A8%25E5%25A4%2596%25E9%2583%25A8%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E7%25B9%258B%25E3%2581%2590%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B5%25E3%2581%25BF%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4YzE2OWQxNzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:HERP%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwYzMxNmMzYmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふみ</dc:creator></item><item><title><![CDATA[【2025年最新版】Ruby on Rails + Vite + React + TypeScript の開発環境を作る方法　]]></title><description><![CDATA[2025年のWeb開発、みなさんはどんな開発環境で進めていますか？
Ruby on Railsは今でも強力なWebフレームワークとして君臨していますが、フロントエンド開発の世界はどんどん進化しています。特にTypeScriptとReactの組み合わせは、もはや現場では当たり前の選択になってきています。
そんな中で注目したいのが「Vite」です。従来のWebpackと比べると、圧倒的に高速な開発サーバーとHMR（ホットリロード）機能を提供してくれます。実際の開発現場では、この「爆速」な開発体験がかなり重宝されています。
今回は、RailsにVite、React、TypeScriptを組み合...]]></description><link>https://zenn.dev/yukito0616/articles/6fd49df4c6cd58</link><guid isPermaLink="true">https://zenn.dev/yukito0616/articles/6fd49df4c6cd58</guid><pubDate>Tue, 21 Jan 2025 00:45:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z_3PcaAR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902025%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2580%2591Ruby%2520on%2520Rails%2520%252B%2520Vite%2520%252B%2520React%2520%252B%2520TypeScript%2520%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yukito%2520Ohira%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMDI2NDc1YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yukito Ohira</dc:creator></item><item><title><![CDATA[1分でミニマルなThree.js環境をつくる（TypeScript + React)]]></title><description><![CDATA[
 モチベーション
three.jsをサクッと書き始める最小構成を作る方法をまとめました。
もちろん他の方法も色々あると思いますが、この方法は1分でできて、そこそこニーズを満たせて、自由に拡張しやすいです。
ゴールは「Sceneを作ってBoxを置いて簡単なライトで照らすぐらいまで」とします。
ゴールのイメージ

️
☘️ こんな人にオススメ

とりあえずさっさとthree.jsを書き始めたい
メンテされてなさそうなあんまりよく分からないテンプレートは使いたくない
ホットリロードとかほしい
Textureなどをロードするのにdevサーバーは必要

Next.jsなどは若干やりすぎで、SSR...]]></description><link>https://zenn.dev/yuichkun/articles/minimal-three-js-setup</link><guid isPermaLink="true">https://zenn.dev/yuichkun/articles/minimal-three-js-setup</guid><pubDate>Mon, 20 Jan 2025 19:32:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B_zuF_xY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E5%2588%2586%25E3%2581%25A7%25E3%2583%259F%25E3%2583%258B%25E3%2583%259E%25E3%2583%25AB%25E3%2581%25AAThree.js%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25EF%25BC%2588TypeScript%2520%252B%2520React%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuichkun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkZDczNmUyNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuichkun</dc:creator></item><item><title><![CDATA[初めてOSSコントリビュートしました！]]></title><description><![CDATA[
 はじめに
私はエンジニア歴3年目で、最近モバイル開発を始めて3ヶ月になります。
この度、初めてOSSにコントリビュートしました！🔥といっても今回はたった2行程度の修正だけです。
OSSへのコントリビュートはハードルが高いと思い込んでいましたが、実際に挑戦してみると意外と取り組めるかも？と思えたのでこの記事では、そのときの体験を簡単にまとめてみました！
主に手順について記載しています。
少しでも参考になったら嬉しいです！

 コントリビュートに至った背景
現在、React Nativeを使用してARアプリの開発を進めています。その中で、viroというライブラリを利用しているのですが、こ...]]></description><link>https://zenn.dev/kiwichan101kg/articles/ad426729549589</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/ad426729549589</guid><pubDate>Mon, 20 Jan 2025 13:51:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YBKh20vC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6OSS%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[Next.jsの環境を構築する(2025/01)]]></title><description><![CDATA[少し時間が取れそうなので2025年の最新環境をもとに何か作ってみようと思います。まずはNext.jsを最新の環境で整えます。公式を見ながら構築します。自分の環境は2020年版のMacBookAirです。
https://nextjs.org/docs/app/getting-started/installation

 Nodeの最新化
Node.js18.18以上が必要だったが18.17なのでNodeを最新版に変えます。
kaikusakari@kais-MacBook-Air ~ % node -v
v18.17.1
公式によれば現時点のLTSは22.13とのこと。導入します。
ht...]]></description><link>https://zenn.dev/kaikusakari/articles/634f09ea0d870f</link><guid isPermaLink="true">https://zenn.dev/kaikusakari/articles/634f09ea0d870f</guid><pubDate>Mon, 20 Jan 2025 12:53:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xkT8z4yL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25282025%252F01%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E8%258B%2585%2520%25E5%25BF%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3MzBlOTgxYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草苅 快</dc:creator></item><item><title><![CDATA[【Honoミドルウェア】多分この書き方を知ってたら救われる編]]></title><description><![CDATA[
 記事を書いた経緯
Honoのmiddlewareの公式ドキュメントの情報って全然豊富じゃないですよね？
Honoのコンセプトは大好きなのにミドルウェアの痒いところに手が届かずにLaravel(かRails)に帰って行った個人開発プログラマーも多いはず。。。
そこで、ミドルウェアの「多分この書き方を覚えておけばいいですよ」というよう使い方を紹介します。

 コンテンツ

createMiddlewareを使ったオリジナルミドルウェアの定義方法
exceptを使った特定ルートのミドルウェアの除外
everyを使ったミドルウェアの連続適用（チェーン）


 createMiddleware...]]></description><link>https://zenn.dev/noworker/articles/16f0e8d190a67c</link><guid isPermaLink="true">https://zenn.dev/noworker/articles/16f0e8d190a67c</guid><pubDate>Mon, 20 Jan 2025 12:26:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ThM4ZiWo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Hono%25E3%2583%259F%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2580%2591%25E5%25A4%259A%25E5%2588%2586%25E3%2581%2593%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259F%25E3%2582%2589%25E6%2595%2591%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2582%258F%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwYTY1Y2I2MDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>のわか</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜LoGフィルタ（019/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の19本目です。

 前回
https://zenn.dev/nyagato_00/articles/266a552899dcbc

 実装

 お題

LoGフィルタ(sigma=3、カーネルサイズ=5)を実装し、imori_noise.jpgのエッジを検出せよ。
LoGフィルタとはLaplacian of Gaussianであり、ガウシアンフィルタで画像を平滑化した後にラプラシアンフィルタで輪郭を取り出すフィルタである。
Laplcianフィルタは二次微分をとるのでノイズが強調されるのを...]]></description><link>https://zenn.dev/nyagato_00/articles/34c942089987d7</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/34c942089987d7</guid><pubDate>Mon, 20 Jan 2025 10:12:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tv9oAe1j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259CLoG%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25EF%25BC%2588019%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[useStateの更新用関数は、なぜ最新の状態を参照できるのか。]]></title><description><![CDATA[
 はじめに
Reactにおいて最も使われているフックと言っても過言ではないuseStateですが、その中に更新用関数というものがあります。
今回はこの更新用関数を、useStateが内部でどのように動いているのかという観点で深掘ってみました。

 前提
下記のようなnumber型のstateがあると仮定し、現在の数値に1を足すという関数を作ってみます。
const [inputNumber, setInputNumber] = useState&lt;number&gt;(0)
下記の場合、2つとも同じ結果になると思います。
// パターン１
const handleChange = ...]]></description><link>https://zenn.dev/medicalforce/articles/d7fc654a4dbd3b</link><guid isPermaLink="true">https://zenn.dev/medicalforce/articles/d7fc654a4dbd3b</guid><pubDate>Mon, 20 Jan 2025 07:45:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vJi6wyUM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useState%25E3%2581%25AE%25E6%259B%25B4%25E6%2596%25B0%25E7%2594%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AF%25E3%2580%2581%25E3%2581%25AA%25E3%2581%259C%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AE%25E7%258A%25B6%25E6%2585%258B%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2586%25E3%2581%259A%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyZjY0YWIzNTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyZDE3ZjA5MjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆず</dc:creator></item><item><title><![CDATA[Uppy でファイルアップロードする]]></title><description><![CDATA[
 Uppy とは
https://uppy.io/
Uppy はブラウザー向けファイルアップロードライブラリーで、シンプルかつ高機能な UI を簡単に統合できます。

高機能なダッシュボード

ドラッグ &amp; ドロップ
リモート URL、Web カメラ、マイク音声、など豊富な入力ソース


プラグインシステムによる拡張が可能
React, Vue, Svelte などの UI フレームワークに統合可能

https://stackblitz.com/edit/vitejs-vite-zaqyaf?file=main.js

 Uploader の種類

Transloadit[1...]]></description><link>https://zenn.dev/manabo_tech/articles/2025-01-07-uppy-demo</link><guid isPermaLink="true">https://zenn.dev/manabo_tech/articles/2025-01-07-uppy-demo</guid><pubDate>Mon, 20 Jan 2025 05:39:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SRfvcTY2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Uppy%2520%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:submax%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5MzVlZTI4YWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:manabo%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZDIxZmEyYzUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>submax</dc:creator></item><item><title><![CDATA[Template Literal Typesを知らんかったし、zodで表現する方法もあったらしい]]></title><description><![CDATA[文字列の型定義に部分的な制約を定義したかったけどやり方知らなんだが、あった
Template Literal Typesで
type Food = "Egg" | "Apple" | "Meat";
type Category = `group_${Food}`;
// "group_Egg" | "group_Apple" | "group_Meat"
とか
type Category = `group_${string}`;
// "group_Music" | "group_Book" | "group_foo"
みたいに書ける
https://zenn.dev/ak/articl...]]></description><link>https://zenn.dev/ksyunnnn/articles/5e1fb25ab03ac5</link><guid isPermaLink="true">https://zenn.dev/ksyunnnn/articles/5e1fb25ab03ac5</guid><pubDate>Mon, 20 Jan 2025 04:48:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--73_SGgOy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Template%2520Literal%2520Types%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2582%2593%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2597%25E3%2580%2581zod%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2582%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%25B0%25E3%2581%2597%25E3%2582%2585%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZDgzMjFiNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こばしゅん</dc:creator></item><item><title><![CDATA[React Router v6使用時の警告とv7での変更点]]></title><description><![CDATA[React Router v6を使用している際にワーニングが出たので、v7での変更点を調べてまとめてみました。

 React Router v7では「スプラットルート（*）」の相対パス解決方法が変更
Warningの内容:
hook.js:608 ⚠️ React Router Future Flag Warning: Relative route resolution within Splat routes is changing in v7. You can use the v7_relativeSplatPath future flag to opt-in early.
解決:
...]]></description><link>https://zenn.dev/kkoisland/articles/f2d855e16cac44</link><guid isPermaLink="true">https://zenn.dev/kkoisland/articles/f2d855e16cac44</guid><pubDate>Sun, 19 Jan 2025 23:41:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--94iwLLMM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2520v6%25E4%25BD%25BF%25E7%2594%25A8%25E6%2599%2582%25E3%2581%25AE%25E8%25AD%25A6%25E5%2591%258A%25E3%2581%25A8v7%25E3%2581%25A7%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkoisland%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MzIwYmQ0NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkoisland</dc:creator></item><item><title><![CDATA[Playwrightで複数ユーザーを使ったテストが素敵に書ける]]></title><description><![CDATA[
 【複数ユーザーのE2Eテストを楽に！】Playwrightで同時ログインを扱う方法
https://www.youtube.com/watch?v=AP2YD6rllyM
「管理者でログインしたあとに、一般ユーザーに切り替えて同じテストを続行したい！」
そんなときに便利なのがPlaywrightで 複数BrowserContext を使ったテストです。この記事では、上の動画でシェアしている内容をかいつまんで紹介します。

 結論から


複数のBrowserContext を使うことで、同じテスト内で複数のユーザーをシミュレート可能
Playwrightのセッション保持の仕組みのおか...]]></description><link>https://zenn.dev/kenfdev/articles/a5ed4e89830a33</link><guid isPermaLink="true">https://zenn.dev/kenfdev/articles/a5ed4e89830a33</guid><pubDate>Sun, 19 Jan 2025 22:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3OCXllNg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C%25E7%25B4%25A0%25E6%2595%25B5%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kenfdev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lnVUZOakM0OHNyRHBrdW03SXRrSi11UUg2ZFpvVUNkVUVfeHZsLVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kenfdev</dc:creator></item><item><title><![CDATA[joshi.ts もくもく会　開催2回目の参加レポ]]></title><description><![CDATA[
 はじめに
これはイベント参加レポです。
1回目も参加していたのですが、参加レポを書いておらず、レポ系今回初めて書きます...

 概要
女性エンジニア限定のTypescriptのもくもく会2回目に参加してきました！
読んで学ぶTypeScript読んだり、作って学ぶTypeScriptで作ったりなどを各々作業していました。
場所
オンライン参加(Discord)
参加日
2024/01/16
時間
20:00〜21:00
イベントの流れ
イントロダクション(5分くらい？)
　　　↓
各々作業(30~40分くらい)
　　　↓
何をやったか(5~10分くらい。チャットで話してました。)
...]]></description><link>https://zenn.dev/koi_matcha/articles/7cd0f805edbc1f</link><guid isPermaLink="true">https://zenn.dev/koi_matcha/articles/7cd0f805edbc1f</guid><pubDate>Sun, 19 Jan 2025 15:21:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qM5R9dOJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:joshi.ts%2520%25E3%2582%2582%25E3%2581%258F%25E3%2582%2582%25E3%2581%258F%25E4%25BC%259A%25E3%2580%2580%25E9%2596%258B%25E5%2582%25AC2%25E5%259B%259E%25E7%259B%25AE%25E3%2581%25AE%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25BF%2583%25E3%2581%2584%25E6%258A%25B9%25E8%258C%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkZTNmMDA2N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>濃い抹茶</dc:creator></item><item><title><![CDATA[Serverless Framework v4 のserverless.tsでStepFunctionsを書く時に型で保護する方法]]></title><description><![CDATA[
 概要
Serverless Framework v4 では serverless.ts というファイル名で TypeScript で設定ファイルを記述することができます。
この型定義は @types/serverless というパッケージで管理されていますが、StepFunctions の設定に関する型定義が含まれていません。
Step Functions に関する型定義は @types/serverless-step-functions として別に切り出されていますが、以下を見ての通り
これをインストールするだけでは Serverless 型の型定義は拡張されません。

types...]]></description><link>https://zenn.dev/tristar/articles/how-to-enable-serverless-ts-v4-step-functions</link><guid isPermaLink="true">https://zenn.dev/tristar/articles/how-to-enable-serverless-ts-v4-step-functions</guid><pubDate>Sun, 19 Jan 2025 15:10:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_Yi3N3NI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Serverless%2520Framework%2520v4%2520%25E3%2581%25AEserverless.ts%25E3%2581%25A7StepFunctions%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E6%2599%2582%25E3%2581%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tristar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g4NGF5cUZVU1haNkluYXBZdGNLenRkSEpWQjVyclViWFN3cThiRmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tristar</dc:creator></item><item><title><![CDATA[0からはじめるTypeScript型定義マスターへの道]]></title><description><![CDATA[
 はじめに
新人教育で質問が多かったので整理しました。
より型安全なコードを書きたい中級者の方も有用な内容かもしれません。よかったら目を通してください。
実践的な例を通じて整理しています。

 私的きっちりかっちり理解する利点
開発効率の向上

エディタの入力補完が賢くなり、プロパティやメソッドの候補が表示される
リファクタリングが安全に行える

チーム開発力向上

型定義がドキュメントとしても機能
意図伝達が容易になる


 この記事で整理したこと

TypeScriptの基本的な型の使い方
配列とオブジェクトを活用した高度な型定義
実務でよく使用する型定義パターン
Webアプリケー...]]></description><link>https://zenn.dev/nezumizuki/articles/4af454c402f4fa</link><guid isPermaLink="true">https://zenn.dev/nezumizuki/articles/4af454c402f4fa</guid><pubDate>Sun, 19 Jan 2025 14:49:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sYHyXhdA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:0%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258BTypeScript%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%25AE%25E9%2581%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MI%2528%25E7%2594%2598%25E8%25BE%259B%25E3%2583%2581%25E3%2582%25AD%25E3%2583%25B3%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzMmZiODJlMzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MI(甘辛チキン)</dc:creator></item></channel></rss>