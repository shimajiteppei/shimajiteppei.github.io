<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 02 Feb 2025 00:50:11 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AtCoder ABC391解説(Python)]]></title><description><![CDATA[Python緑コーダーによる、ABC391（2025/02/01実施）の解説です！
（今回はなんか変数の命名が雑すぎでした、すみません）

 A問題
実際にif文を8個書くのも良さそうですが、自分はリストを使いました。
N→S、S→Nのように、2つずつ互いにペアにすることができるので、
ペアを隣において、方角が偶数番目か奇数番目かによって隣の方角を出力する感じです。
D = input()
hougaku = ["N", "S", "E", "W", "NE", "SW", "NW", "SE"]

# 入力された方角が偶数番目なら1個右のもの、奇数番目なら1個左のもの
if houga...]]></description><link>https://zenn.dev/takechi_s/articles/atcoder-abc391</link><guid isPermaLink="true">https://zenn.dev/takechi_s/articles/atcoder-abc391</guid><pubDate>Sat, 01 Feb 2025 15:03:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--503YZlR8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:AtCoder%2520ABC391%25E8%25A7%25A3%25E8%25AA%25AC%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2583%25BC%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS282Vk5hSnU0WU5WQ3ZHb0lQME5NV3oxODY5MXFheGRJZHROZXdSZ1lwQ1g5eHpKYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たーけ</dc:creator></item><item><title><![CDATA[ChatGPTのAPIを使った対話プログラム]]></title><description><![CDATA[以下に、Pythonを使用してOpenAIのAPIと対話するプログラムのサンプルコードと、その解説を提供します。このプログラムは、ユーザーが「exit」と入力するまでChatGPTと対話を続けます。
前提条件:


OpenAI APIキーの取得: OpenAIのアカウントを作成し、APIキーを取得してください。


Python環境のセットアップ: Pythonがインストールされていることを確認してください。


必要なライブラリのインストール: openaiライブラリをインストールします。
pip install openai



サンプルコード:
import openai
im...]]></description><link>https://zenn.dev/ma_ro/articles/e24f707c540b7c</link><guid isPermaLink="true">https://zenn.dev/ma_ro/articles/e24f707c540b7c</guid><pubDate>Sat, 01 Feb 2025 14:05:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zg2ub3D1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%25AF%25BE%25E8%25A9%25B1%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1dQX2FjekxwVUl0ejhaLXdmd0d3cHBpck5objNwUFRrbUVRYWhla19EZGZWME93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マーロウ</dc:creator></item><item><title><![CDATA[ChatGPTのAPIを使ったサンプルコード作成]]></title><description><![CDATA[以下では、Visual Studio Code (VS Code) で Python を使い、OpenAI API を呼び出す最も基本的なプログラムを作る手順をステップバイステップで紹介します。まずは本当に最小限のコードと設定で、APIを動かすという「第1歩」を踏むことが目標です。


 1. 事前準備

 1-1. Pythonのインストール

公式サイトからダウンロード: Python公式サイト

インストール時に Add Python to PATH にチェックを入れてください。


 1-2. VS Codeのインストール

まだインストールしていない場合は Visual Stu...]]></description><link>https://zenn.dev/ma_ro/articles/0ae3dec66de6ca</link><guid isPermaLink="true">https://zenn.dev/ma_ro/articles/0ae3dec66de6ca</guid><pubDate>Sat, 01 Feb 2025 13:34:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GhYLjlZo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AEAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1dQX2FjekxwVUl0ejhaLXdmd0d3cHBpck5objNwUFRrbUVRYWhla19EZGZWME93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マーロウ</dc:creator></item><item><title><![CDATA[webuiの構文処理]]></title><description><![CDATA[
 はじめに
webuiの構文処理についてまとめているドキュメントがなかったので、まとめます。
間違いがあればコメントで教えていただけると嬉しいです。

 AUTOMATIC1111/stable-diffusion-webui
Stable Diffusionを比較的簡単に扱えるようにするためのGUI (以下webui)
最近あまりアップデートがされていないようですが、かなり使用者数も多いツールです。
https://github.com/AUTOMATIC1111/stable-diffusion-webui
後継として、forge ui などが存在します
こちらはメンテナンスが続い...]]></description><link>https://zenn.dev/kukuku/articles/5aa1d25abd9621</link><guid isPermaLink="true">https://zenn.dev/kukuku/articles/5aa1d25abd9621</guid><pubDate>Sat, 01 Feb 2025 10:38:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2bxojz5m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:webui%25E3%2581%25AE%25E6%25A7%258B%25E6%2596%2587%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sk-uma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1NDYwYTEyYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sk-uma</dc:creator></item><item><title><![CDATA[SAR衛星画像のRAWデータ再生処理を実装してみる (ALOS1)]]></title><description><![CDATA[
https://github.com/hiydee/sar_raw_process

 概要
SARの理解のため、以下のような再生処理のざっくりした実装をしました。

ALOS/PALSARのL1.0の画像再生処理
レンジドップラーの周波数領域での処理
レンジマイグレーションは未実装
数式は以下の本を参考にしています。
『リモートセンシングのための合成開口レーダの基礎』
大内和夫
東京電機大学出版局 第2版 (2009/6/20)
(本記事で"大内本"と言っているのはこの書籍になります)

!
おおまかな実装で、ひとまず画像として見られる程度の叩き台と思ってください。
理解を深めるため...]]></description><link>https://zenn.dev/hiydee/articles/7d6f88af95aac6</link><guid isPermaLink="true">https://zenn.dev/hiydee/articles/7d6f88af95aac6</guid><pubDate>Sat, 01 Feb 2025 10:31:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lFtnCm7G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SAR%25E8%25A1%259B%25E6%2598%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AERAW%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2586%258D%25E7%2594%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%2528ALOS1%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiydee%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwOTllOWEyOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiydee</dc:creator></item><item><title><![CDATA[【初心者向け】Numpyの関数その２（配列操作）]]></title><description><![CDATA[Pythonの万能ツール！NumPyで配列を自由自在に操ろう！
Pythonのデータ分析に欠かせないNumPy。その中でも、配列操作は基本中の基本でありながら、奥が深い世界です。
「NumPyの配列操作をマスターすれば、データ分析がもっと効率的になるのに...」
そう思っている方も多いのではないでしょうか？
この記事では、NumPy配列の操作の中でも特に重要なものを厳選し、具体的な例を交えながら分かりやすく解説します。
この記事を読めば、NumPy配列の操作がグッと身近になり、データ分析のスキルアップに繋がること間違いなし！
さあ、NumPy配列操作の世界へ飛び込みましょう！

 Num...]]></description><link>https://zenn.dev/yogurt/articles/5bb62b763012ee</link><guid isPermaLink="true">https://zenn.dev/yogurt/articles/5bb62b763012ee</guid><pubDate>Sat, 01 Feb 2025 08:52:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---qqm6jro--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Numpy%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2588%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmFiYWU4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨーグルト</dc:creator></item><item><title><![CDATA[reformatter.elを使って色々な言語のフォーマッターを一元管理する]]></title><description><![CDATA[
 はじめに
プログラムを書いてセーブ時にフォーマットを実行する。当たり前にやってることと思いますが複数のプログラミング言語を使う環境で言語ごとにフォーマッターを設定していくのは大変です。そこで最近 Emacs の reformatter.el というパッケージを使って複数のフォーマッターを一元管理する方法を見つけたので紹介します。

 emacs-reformatter
今回利用するパッケージはこちらです。
https://github.com/purcell/emacs-reformatter
reformatterという名前ですがパスの通ったCLIコマンドであればフォーマッターに限...]]></description><link>https://zenn.dev/glassonion1/articles/9dcc961824314c</link><guid isPermaLink="true">https://zenn.dev/glassonion1/articles/9dcc961824314c</guid><pubDate>Sat, 01 Feb 2025 01:30:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fLg_IUHp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reformatter.el%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2589%25B2%25E3%2580%2585%25E3%2581%25AA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25B8%2580%25E5%2585%2583%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:glassonion1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMzcxN2Y0ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>glassonion1</dc:creator></item><item><title><![CDATA[EmacsでTree-Sitterによる新しいモードを利用する方法]]></title><description><![CDATA[
 はじめに
最近 Tree-Sitter という構文解析を利用したシンタックスハイライトが流行っています。Emacs でもバージョン29.1から Tree-Sitter に対応したモードを利用できるようになったので導入してみました[1]。

 Tree-Sitterとは
Tree-Sitter については色々なサイトで説明されているので割愛します。詳細を知りたい場合はこちらの記事がおすすめです。
https://apribase.net/2024/06/12/emacs-treesit-ts-mode/
ちなみに Emacs で Tree-Sitter を利用する場合は Treesit...]]></description><link>https://zenn.dev/glassonion1/articles/20752bb8d2cf98</link><guid isPermaLink="true">https://zenn.dev/glassonion1/articles/20752bb8d2cf98</guid><pubDate>Sat, 01 Feb 2025 01:22:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1uNEYuue--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Emacs%25E3%2581%25A7Tree-Sitter%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:glassonion1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMzcxN2Y0ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>glassonion1</dc:creator></item><item><title><![CDATA[活性化関数まとめ]]></title><description><![CDATA[昔Qiitaで書いた記事を移行しています。
https://qiita.com/yamayaman/items/c09544642a2793644d2c
]]></description><link>https://zenn.dev/yamayaman/articles/0f5bceb96fa188</link><guid isPermaLink="true">https://zenn.dev/yamayaman/articles/0f5bceb96fa188</guid><pubDate>Sat, 01 Feb 2025 01:06:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OqkVn532--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25B4%25BB%25E6%2580%25A7%25E5%258C%2596%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamayaman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXItTnlfTFh4dG81MjNOcmREUWRnX2F2dld4ckhwckcyTWJGTGlYUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamayaman</dc:creator></item><item><title><![CDATA[kerasを使って、画像からじゃんけんの手を判別する分類AIを作る]]></title><description><![CDATA[昔Qiitaで書いた記事を移行しています。
https://qiita.com/yamayaman/items/314b66d5dac144a0898c
]]></description><link>https://zenn.dev/yamayaman/articles/54b5ddc688e354</link><guid isPermaLink="true">https://zenn.dev/yamayaman/articles/54b5ddc688e354</guid><pubDate>Sat, 01 Feb 2025 01:05:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0yds5FV1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:keras%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%2598%25E3%2582%2583%25E3%2582%2593%25E3%2581%2591%25E3%2582%2593%25E3%2581%25AE%25E6%2589%258B%25E3%2582%2592%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E5%2588%2586%25E9%25A1%259EAI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamayaman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXItTnlfTFh4dG81MjNOcmREUWRnX2F2dld4ckhwckcyTWJGTGlYUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamayaman</dc:creator></item><item><title><![CDATA[TensorflowモデルをTensorflowLiteモデルに変換する方法]]></title><description><![CDATA[昔Qiitaで書いた記事を移行しています。
https://qiita.com/yamayaman/items/487348f95b2dd798b0d3
]]></description><link>https://zenn.dev/yamayaman/articles/114f9c92d262c7</link><guid isPermaLink="true">https://zenn.dev/yamayaman/articles/114f9c92d262c7</guid><pubDate>Sat, 01 Feb 2025 01:04:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fao0BdGF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tensorflow%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592TensorflowLite%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamayaman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZXItTnlfTFh4dG81MjNOcmREUWRnX2F2dld4ckhwckcyTWJGTGlYUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamayaman</dc:creator></item><item><title><![CDATA[Baby-step Giant-step メモ]]></title><description><![CDATA[
 一般に

 問題設定

有限巡回群 (G = \langle g \rangle) （位数 (n)）
要素 (h \in G)

典型的には 離散対数問題： g^x = h を満たす整数 x （0 \le x &lt; n）を求める[1]



 アルゴリズムの流れ


ステップ数の設定

m = \lceil \sqrt{n} \rceil



Baby-step


j = 0, 1, \dots, m-1 について b_j = g^j を計算し、b_j（群要素）をキーに「対応する j」をハッシュテーブルに保存する



Giant-step

（大ステップ量）g^m の逆元を...]]></description><link>https://zenn.dev/t_shunsuke/articles/note-baby-step-giant-step</link><guid isPermaLink="true">https://zenn.dev/t_shunsuke/articles/note-baby-step-giant-step</guid><pubDate>Fri, 31 Jan 2025 10:33:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GySZjvXd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Baby-step%2520Giant-step%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_shunsuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxM2YzZjlhMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_shunsuke</dc:creator></item><item><title><![CDATA[PythonとJavaScriptで転置をするときの違い]]></title><description><![CDATA[例
# before
| 1 2 3 |
| 4 5 6 |
→
# before
| 1 4 |
| 2 5 |
| 3 6 |
import numpy as np
def transpose(matrix):
    arr = np.array(matrix)
    r,c = arr.shape
    return arr.T.reshape((c,r)).tolist()
Python の場合 numpy を使えば比較的楽に実装可能。
reshape で値を取得し、転置を行なってからreshapeすることで値を取得することが可能となる。
pythonの場合、
const ...]]></description><link>https://zenn.dev/pypypymi/articles/7101b46e3f49ac</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/7101b46e3f49ac</guid><pubDate>Fri, 31 Jan 2025 09:24:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uhqkftiH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8JavaScript%25E3%2581%25A7%25E8%25BB%25A2%25E7%25BD%25AE%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[論理演算を用いた奇数と偶数の判定(Python)]]></title><description><![CDATA[実装
def is_even_or_odd(num):
    return "Even" if num &amp; 1 == 0 else "Odd"

number = 5
result = is_even_or_odd(number)
print(f"{number} is {result}")
説明:


任意の整数をnとする。このnを二進数に変換し、1を二進数に変換する。

1は二進数で表すと0b00..1。最下位ビットが1であり、それ以外のビットはすべて0である。
任意の奇数nを二進数で表すと、最下位ビットが1であり、それ以外のビットは数値によって変わる。



次に、これら...]]></description><link>https://zenn.dev/pypypymi/articles/178994695ec7d3</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/178994695ec7d3</guid><pubDate>Fri, 31 Jan 2025 09:22:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NRgZp3wE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AB%2596%25E7%2590%2586%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E5%25A5%2587%25E6%2595%25B0%25E3%2581%25A8%25E5%2581%25B6%25E6%2595%25B0%25E3%2581%25AE%25E5%2588%25A4%25E5%25AE%259A%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[文字列の中で重複しない初めての文字を探す]]></title><description><![CDATA[例
"aabbccdde" → "e"
"wxyz" → "w"
function noRepeat(str) {  
  const arr = str.split("")
  return arr.find((ele) =&gt; arr.indexOf(ele)===arr.lastIndexOf(ele))
}
JavaScript であれば indexOf と lastIndexOf を用いてその結果が一致するインデックスであればすなわち唯一登場する文字列となり判定できる。
Python であれば 文字列に対して特定の文字が登場するインデックスを検索する find と 右側の文...]]></description><link>https://zenn.dev/pypypymi/articles/6693a774274e49</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/6693a774274e49</guid><pubDate>Fri, 31 Jan 2025 09:17:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h4hEr2U2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7%25E9%2587%258D%25E8%25A4%2587%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[PythonとJavaScriptの yield の違い]]></title><description><![CDATA[
 Pythonのyield

Pythonでは、yieldは主にジェネレーター関数で使用される。ジェネレーター関数はイテレータを返す特殊な関数であり、yieldを使って一度に一つずつ値を生成する。
def generator_example():
    yield 1
    yield 2
    yield 3

gen = generator_example()
print(next(gen))  # 出力: 1
print(next(gen))  # 出力: 2
print(next(gen))  # 出力: 3

 JavaScriptのyield

JavaScriptで...]]></description><link>https://zenn.dev/pypypymi/articles/34ce1006aae005</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/34ce1006aae005</guid><pubDate>Fri, 31 Jan 2025 09:11:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CDoNYoc2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8JavaScript%25E3%2581%25AE%2520yield%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[値の条件比較を三項演算子と if を使わずに実装する方法]]></title><description><![CDATA[Python と JavaScript で三項演算子とifを使わずに a と b の代償比較をする実装
いくつか方法は考えられるが、Python は match 、Javascript であれば switch を利用する。この際、条件分岐として sign 関数を用いて正負によって値を分岐させると便利である。
Python
import numpy as np
def no_ifs_no_buts(a, b):
    sign = np.sign(a-b)
    match sign:
        case -1:
            return f'{a} is small...]]></description><link>https://zenn.dev/pypypymi/articles/2aa090157fd938</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/2aa090157fd938</guid><pubDate>Fri, 31 Jan 2025 09:10:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TOjV3FQU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E6%25AF%2594%25E8%25BC%2583%25E3%2582%2592%25E4%25B8%2589%25E9%25A0%2585%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25A8%2520if%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[PythonとJavaScriptで母音を抜き出す実装の違い]]></title><description><![CDATA[
 Python
Python では、reモジュール を使って母音を抽出します。
import re

def extract_vowels(text):
    vowels = re.findall(r'[aeiou]', text,re.IGNORECASE)
    return vowels

text = "Hello, World!"
vowels = extract_vowels(text)
print(vowels)
説明:


re.findall は、正規表現に一致するすべての部分文字列をリストとして返します。

re.IGNORECASE は、小文字と大文字の母音...]]></description><link>https://zenn.dev/pypypymi/articles/e0e0168cd2aacd</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/e0e0168cd2aacd</guid><pubDate>Fri, 31 Jan 2025 09:08:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E3JvJVht--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8JavaScript%25E3%2581%25A7%25E6%25AF%258D%25E9%259F%25B3%25E3%2582%2592%25E6%258A%259C%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[JavaScriptの連想配列をPythonの辞書のように特定のキーを指定しながら、順序を保ちながらソートする方法]]></title><description><![CDATA[例えば 商品という key 、値段という value が あり、値段 ごとに降順で並べ上位3つのみを取得するというタスクがあったとする。
[ 'Computer', 'Cell Phones', 'Vacuum Cleaner','Autos' ] #商品名
[ 597, 7176, 3192,597 ] #値段のリスト
Pythonでこのような問題を考える
{'Computer': 597, 'Cell Phones': 7176, 'Vacuum Cleaner': 3192, 'Autos': 597}
上記のような辞書が用意されたときにforなどで 辞書型を作成し、sorted関...]]></description><link>https://zenn.dev/pypypymi/articles/4053472609688f</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/4053472609688f</guid><pubDate>Fri, 31 Jan 2025 09:07:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fiSpK7Ak--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E9%2580%25A3%25E6%2583%25B3%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592Python%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2580%2581%25E9%25A0%2586%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A1%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[文字列比較のPythonとJavaScriptの違い]]></title><description><![CDATA[Python とJavaScript で末尾の文字を基準に並び替える時、Python では sorted の key に文字列を渡せばいいが、JavaScript の sort では そのままだと文字列比較ではなく数値比較にしか使えないので少し工夫が必要である。

 Python
def sort_by_last_char(arr):
    return sorted(arr, key=lambda x: x[-1])

arr = ['apple', 'banana', 'cherry', 'date']
sorted_arr = sort_by_last_char(arr)
pri...]]></description><link>https://zenn.dev/pypypymi/articles/03d462d6ab2259</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/03d462d6ab2259</guid><pubDate>Fri, 31 Jan 2025 09:06:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C3gL85-7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%25AEPython%25E3%2581%25A8JavaScript%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item></channel></rss>