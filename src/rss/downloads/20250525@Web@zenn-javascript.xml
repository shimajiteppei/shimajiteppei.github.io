<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 25 May 2025 03:20:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[JavaScriptでABC407(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc407

 A - Approximation
https://atcoder.jp/contests/abc407/tasks/abc407_a
Math.round()をするだけです
https://atcoder.jp/contests/abc407/submissions/66079647
1分43秒 AC!

 B - P(X or Y)
https://atcoder.jp/contests/abc407/tasks/abc407_b
36通り全部試せばいいですね
確率問題だと思って頑張って計算しようとして6分くら...]]></description><link>https://zenn.dev/aya_koto/articles/135a452e4be7af</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/135a452e4be7af</guid><pubDate>Sat, 24 May 2025 13:52:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yzQeAwur--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC407%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[フロントエンド初歩実装]]></title><description><![CDATA[かなり簡単なToDoリストみたいなものを作った。（作ってもらって理解した。）
環境構築
https://zenn.dev/erukiti/articles/setup-javascript-macos
けど言語やフレームワークのバージョンはDockerで管理すればいい気がしたから採用してない。
✅ html仕組み：
https://ユーザー名.github.io/リポジトリ名/にアクセスすると、リポジトリの ルート直下 にある index.html を自動で読み込む。

 HTML
&lt;!-- このHTML文書がHTML5で書かれていることをブラウザに知らせる宣言 --&gt;
&l...]]></description><link>https://zenn.dev/n_ryosuke/articles/65db5899c589f5</link><guid isPermaLink="true">https://zenn.dev/n_ryosuke/articles/65db5899c589f5</guid><pubDate>Sat, 24 May 2025 11:20:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---aqsH7Jq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E5%2588%259D%25E6%25AD%25A9%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NR%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWxEQi1TSE4wMUNIQmUxbjVNdDdnRU82bl8wLXdFdlZSLVA3TUZJWlpYYzRfeXJ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NR</dc:creator></item><item><title><![CDATA[WordPress + jQuery + Ajaxで『READ MORE』機能を実装する方法（管理画面で投稿）]]></title><description><![CDATA[
 はじめに
WordPressでトップページに投稿を表示して、「READ MORE」ボタンをクリックすると次の投稿を非同期で読み込む機能を実装しました。
今回は、WP_Query と Ajax (jQuery) を使って、以下のような流れで実装します。


 完成イメージ

最初に3件だけ投稿を表示
「READ MORE」ボタンをクリックすると次の3件を取得
投稿がなくなるまで繰り返し表示



 1. front-page.php の編集

最初に3件だけ投稿を表示します。


front-page.php
&lt;section id="content" class="conten...]]></description><link>https://zenn.dev/tanaka1122/articles/87785c1dd4cb67</link><guid isPermaLink="true">https://zenn.dev/tanaka1122/articles/87785c1dd4cb67</guid><pubDate>Sat, 24 May 2025 06:16:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LZBvvSjB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WordPress%2520%252B%2520jQuery%2520%252B%2520Ajax%25E3%2581%25A7%25E3%2580%258EREAD%2520MORE%25E3%2580%258F%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25A7%25E6%258A%2595%25E7%25A8%25BF%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25AA%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZGJmYzEyZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たなか</dc:creator></item><item><title><![CDATA[tsgoが公開。TypeScript 7向け新コンパイラのインストール手順と10倍高速化検証]]></title><description><![CDATA[本日2025年5月23日、MicrosoftのTypeScriptチームは、TypeScriptのGo言語実装によるコンパイラのプレビュー版「TypeScript Native Previews」を公開しました。「tsgo」という名称の新しいコンパイラは、将来的にTypeScript 7で現在のtscコマンドを置き換えることを目指しています。公式発表によると、tsgoを使用することで型チェックやコンパイル速度が最大で10倍向上するとのことです。
本記事では、tsgoを実際にインストールする手順と、本当に10倍高速化されるのかを検証します。

 TypeScript 7でコンパイラがGo言...]]></description><link>https://zenn.dev/ubie_dev/articles/typescript7-tsgo-whatsnew</link><guid isPermaLink="true">https://zenn.dev/ubie_dev/articles/typescript7-tsgo-whatsnew</guid><pubDate>Fri, 23 May 2025 13:14:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L2YUGR4k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tsgo%25E3%2581%258C%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2582TypeScript%25207%25E5%2590%2591%25E3%2581%2591%25E6%2596%25B0%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2589%258B%25E9%25A0%2586%25E3%2581%25A810%25E5%2580%258D%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%25B9%25BF%25E9%2587%258E%2520%25E5%25A3%25AE%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOWMzMWRhODMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Ubie%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hwRUMxbUtjVjZsX01lT2R6N1Nsejk1SXR4WUZoYjB2LTNOdzNjV3c9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鹿野 壮</dc:creator></item><item><title><![CDATA[バブルソート]]></title><description><![CDATA[
 配列を昇順にする

step1. 関数を定義する。引数はarrとする
step2. n-1を使用したいので、nの配列の長さが必要になる
step3. nの長さを適当な変数に代入する
step4. 繰り返し処理で隣同士の数を比較する
step5. 比較して、その数が、隣接する数より大きければ順番を入れ替える

const nums = [1,5,8,2,4,9,10];

//step1
function bubbleSort(arr)
{
    //step2,step3
    const nl = nums.length;

    //step4
    for(let i ...]]></description><link>https://zenn.dev/monyyy/articles/42b84b2d919eb1</link><guid isPermaLink="true">https://zenn.dev/monyyy/articles/42b84b2d919eb1</guid><pubDate>Fri, 23 May 2025 12:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FsLNCSD0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUxJMlItWWhrem0zQUVwMW5TeU1acUFrWlA2TWtvZjRwNUs5VGhkV2EzXzRVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mon</dc:creator></item><item><title><![CDATA[📘 JavaScriptのDOM操作まとめ]]></title><description><![CDATA[
 JavaScriptのDOM操作まとめ

 ✅ 1. innerHTML / textContent / innerTextの違い



プロパティ名
タグ認識
改行反映
非表示要素の認識
説明




innerHTML
✅ あり
❌ なし
✅ あり
HTMLタグを含めた全体の内容を取得または設定


textContent
❌ なし
❌ なし
✅ あり
テキストのみを取得（タグ無視）


innerText
❌ なし
✅ あり
❌ なし
実際に表示されるテキストのみを取得




 🔍 HTMLの例
&lt;div id="box"&gt;
  &lt;p style="disp...]]></description><link>https://zenn.dev/kmj13/articles/js_dom_zenn_ja</link><guid isPermaLink="true">https://zenn.dev/kmj13/articles/js_dom_zenn_ja</guid><pubDate>Fri, 23 May 2025 12:53:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hoBAUtU7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520JavaScript%25E3%2581%25AEDOM%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmj99%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno0azlnb19fcW1fbjVxdkFCYkJNU2U5X2VfYWZkTGEtbHVNZDFXR2pWV05CZTBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmj99</dc:creator></item><item><title><![CDATA[2分探索]]></title><description><![CDATA[
 配列をつかって該当の数字があるか見つける

step1. 関数を定義する。引数として、配列と該当の数値を渡す。
step2. 配列の最初を0とし、配列の最後をn-1番目とする
step3. n-1番目が大きい間は繰り返す処理にする
step4. 中央値を探す処理を記述
step5. もし、該当の値と中央値が一緒ならそこで処理を終了
step6. それ以外で、もし、該当の数値が中央値より大きい場合は右側を探す
step7. それ以外で、もし、該当の数値が中央値より小さい場合は左側を探す

// 二分探索の実装

const nums = [1,5,8,2,4,9,10];

//特定の...]]></description><link>https://zenn.dev/monyyy/articles/d318be94ba958c</link><guid isPermaLink="true">https://zenn.dev/monyyy/articles/d318be94ba958c</guid><pubDate>Fri, 23 May 2025 12:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ERkdNfsy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:2%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUxJMlItWWhrem0zQUVwMW5TeU1acUFrWlA2TWtvZjRwNUs5VGhkV2EzXzRVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mon</dc:creator></item><item><title><![CDATA[線形探索]]></title><description><![CDATA[
 配列をつかって該当の数字があるか見つける
// 線形探索の実装

const nums = [1,5,8,2,4,9,10];

//特定の数字は配列の中にあるか確認する

//step1. 関数を定義し、引数に配列とターゲット数値が入るようにする
//step2. ターゲットの数値が入っていれば、Includeと表示し、そうでない場合は、Falseと表示する

//step1
function LinearSearch(arr, target){
    //step2
    for(let i = 0; i &lt; arr.length; i++){
        if(a...]]></description><link>https://zenn.dev/monyyy/articles/4f52df40461a23</link><guid isPermaLink="true">https://zenn.dev/monyyy/articles/4f52df40461a23</guid><pubDate>Fri, 23 May 2025 12:45:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L4FOAk4f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%25B7%259A%25E5%25BD%25A2%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUxJMlItWWhrem0zQUVwMW5TeU1acUFrWlA2TWtvZjRwNUs5VGhkV2EzXzRVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mon</dc:creator></item><item><title><![CDATA[[JavaScript]コールバック関数/高階関数とは （備忘録）]]></title><description><![CDATA[
 １．高階関数 とは
・関数を引数として受け取る、または、関数を戻り値として返す関数のことを高階関数といいます。

 ２．コールバック関数 とは
①．ある関数（例：関数A）に引数として渡される関数（例: 関数B）のことをコールバック関数と呼びます。
※関数A = 高階関数 です。
②．重要なのは、「関数Aの中で関数Bが呼び出される」という点です。
③．単に関数を引数として渡すだけではなく、関数Aの処理の中で関数Bを適切なタイミングで実行するのがコールバック関数の特徴です。

 ３．サンプルプログラム
〇例１：アロー関数を引数として受け取る高階関数

Sample_1.js
let nu...]]></description><link>https://zenn.dev/yama_kawa/articles/9c42ce43ab3032</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/9c42ce43ab3032</guid><pubDate>Fri, 23 May 2025 08:55:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ph6A-T85--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%252F%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%25AF%2520%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MzVlNmE1NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[【警告】古いNode.jsバージョンを使い続けるのは危険！今すぐ知っておくべきセキュリティリスクと対策]]></title><description><![CDATA[こんにちは！今回は、多くの開発現場で見落とされがちな古いNode.jsバージョンのセキュリティリスクについて解説します。
「動いているから大丈夫」「ビルドファイルしか納品しないから関係ない」と思っていませんか？実は、それが一番危険な考え方なんです。

Node.js v12/v14はセキュリティサポート終了済み
新しい脆弱性への対策が一切されない
フロントエンドのビルドファイルにも影響する
最低でもNode.js v18 LTS以上へのアップグレードが必須



 なぜ古いNode.jsが危険なのか？

 セキュリティサポートの現状



バージョン
サポート終了日
現在の状況




...]]></description><link>https://zenn.dev/njmdik/articles/c1123659778b3d</link><guid isPermaLink="true">https://zenn.dev/njmdik/articles/c1123659778b3d</guid><pubDate>Fri, 23 May 2025 05:32:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jDO04amK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25AD%25A6%25E5%2591%258A%25E3%2580%2591%25E5%258F%25A4%25E3%2581%2584Node.js%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E7%25B6%259A%25E3%2581%2591%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AF%25E5%258D%25B1%25E9%2599%25BA%25EF%25BC%2581%25E4%25BB%258A%25E3%2581%2599%25E3%2581%2590%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%25A8%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:happy%2520capsule%2520markets%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkODc4ZGEwN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>happy capsule markets</dc:creator></item><item><title><![CDATA[チェックボックスUI - コピペで使えるアクセシビリティ対応モジュール]]></title><description><![CDATA[
 はじめに
こんにちは。株式会社VOWZ の Chikara です。
弊社では、定期的なアクセシビリティ講習の実施や、制作したWebページに対するアクセシビリティチェックなど、企業として継続的にアクセシビリティに取り組んでいます。
今回は、チェックボックスUIに関する解説をお届けします。
HTML標準のセマンティクスのinput type="checkbox"を使用したモジュールにあわせて、div要素などをカスタマイズして実装したモジュールの2例を紹介させていただきます。
モジュールだけを確認したい場合は、目次の【モジュール】をご参照ください。

 基本編

 【モジュール】標準的なチ...]]></description><link>https://zenn.dev/chikara_a11y/articles/4d5e0ca70bd4aa</link><guid isPermaLink="true">https://zenn.dev/chikara_a11y/articles/4d5e0ca70bd4aa</guid><pubDate>Fri, 23 May 2025 05:28:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UPA6EArq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9UI%2520-%2520%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B7%25E3%2583%2593%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E5%25AF%25BE%25E5%25BF%259C%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Chikara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMWNkYTc4NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Chikara</dc:creator></item><item><title><![CDATA[【Splide】スライド数が足りないときループスライダーを無効にする]]></title><description><![CDATA[Web制作において、SplideはJavaScriptのスライダーライブラリの一つとして広く使われており、特にループ処理と組み合わせて使用する方も多いと思います。
しかし、ループ処理を用いる際に注意が必要なのが、スライダーの幅に対してスライドの数が不足している場合です。このような状況では、意図しない挙動を防ぐために、スライダー自体を無効にするのが適切です。
たとえば、コーポレートサイトの新着記事をカード形式でスライド表示させる場合、投稿件数が少ないとスライダーとして機能させる必要がないことがあります。
それどころか、以下のように1件の記事が複数回表示されてしまい、意図しないループが発生す...]]></description><link>https://zenn.dev/ryo_hajime/articles/ad11b253a35199</link><guid isPermaLink="true">https://zenn.dev/ryo_hajime/articles/ad11b253a35199</guid><pubDate>Thu, 22 May 2025 23:38:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HwXtlg1R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Splide%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E6%2595%25B0%25E3%2581%258C%25E8%25B6%25B3%25E3%2582%258A%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E7%2584%25A1%25E5%258A%25B9%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryoichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmN2NjODA5NTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryoichi</dc:creator></item><item><title><![CDATA[Vite Buildの概要]]></title><description><![CDATA[今までなんとなくで使っていたBuildって何してるんだっけー

 なんのためにBuildが行われているのか
私たちが書いたソースコードを、Webブラウザが効率的かつ正確に動作するように変換・最適化するため。ブラウザが理解し、効率的に実行できる『実行可能ファイル』を作成するため。

 Buildすると何が起こるのか？　（ビルドプロセス）
ざっくり、、主に5つのことが行われる。

トランスパイル(Transpile)

JavaScript（ES6以降）、TypeScript、JSXなどの構文を、より広くブラウザがサポートしているJavaScript（主にES5）に変換


バンドル(Bun...]]></description><link>https://zenn.dev/kishida000/articles/5f9e49df653182</link><guid isPermaLink="true">https://zenn.dev/kishida000/articles/5f9e49df653182</guid><pubDate>Thu, 22 May 2025 14:16:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NB8puI-C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Vite%2520Build%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kishida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmN2M5Nzc2MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kishida</dc:creator></item><item><title><![CDATA[プログラミングメモ.ver1.0]]></title><description><![CDATA[授業、サークル、インターン、趣味などなど様々な機会で様々な言語に触れ頭が爆発しそうになっているので各セクションごとに新しく知ったことなどをまとめてみました。
HTML、CSS


 !でHTMLの定型分出現
ファイルを開きたいとき（編集）code test1.c      # ← VSCodeで開く（codeコマンドが使える場合）nano test1.c      # ← ターミナルで開く

 &lt;style&gt;は&lt;head&gt;の最後

 &lt;script&gt;は&lt;body&gt;の最後


 id（1つしか存在しない）	#container
.	class...]]></description><link>https://zenn.dev/oz_tech/articles/ae435f637399b8</link><guid isPermaLink="true">https://zenn.dev/oz_tech/articles/ae435f637399b8</guid><pubDate>Thu, 22 May 2025 05:12:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OpLubCZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25A1%25E3%2583%25A2.ver1.0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkOGM3NDdiYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オーズテック</dc:creator></item><item><title><![CDATA[JavaScriptオブジェクトのキー（プロパティ名）の書き方、全部解説します！]]></title><description><![CDATA[こんにちは！ JavaScriptでプログラミングをしていると、オブジェクトのキー（プロパティ名）の書き方がいくつかあって、「あれ？これはどういう意味だっけ？」と混乱することはありませんか？
{ key: value } だけでなく、[変数]: value とか、obj.key と obj['key'] の違いとか、ちょっとごちゃごちゃして見えますよね。
この記事では、そんなJavaScriptオブジェクトのキーに関するあらゆる表現方法を、一つ一つ丁寧に、オリジナルのサンプルコードを交えながら解説していきます。TypeScriptでの書き方も少し触れます。


 1. オブジェクトリテラ...]]></description><link>https://zenn.dev/noah11/articles/b789bcaa75c887</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/b789bcaa75c887</guid><pubDate>Thu, 22 May 2025 02:49:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wffpKwZW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25EF%25BC%2588%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E5%2590%258D%25EF%25BC%2589%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2580%2581%25E5%2585%25A8%25E9%2583%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA[Reactでよく出る"Each child in a list should have a unique key prop" のエラー対応]]></title><description><![CDATA[
 はじめに
Reactのmapで配列をループさせた時に、よく同じエラーが出ていたので備忘のために残しておきます。

 問題
一意の「キー」プロパティが必要です。と怒られていますね。
Each child in a list should have a unique "key" prop.
Reactは、リストの子要素が変更されたときに、どの要素が追加・削除・更新されたのかを高速に判断するためにkeyを使います。
keyがないと、仮想DOMの差分計算が正確にできず、値が更新出来なくなるためkeyは必須になります。
なのでkey は要素を取得する為に一意でないといけません。

 解決方法
...]]></description><link>https://zenn.dev/tsubasa0509/articles/01f28c0cd1f9d7</link><guid isPermaLink="true">https://zenn.dev/tsubasa0509/articles/01f28c0cd1f9d7</guid><pubDate>Wed, 21 May 2025 23:55:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gnnUEJkz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E5%2587%25BA%25E3%2582%258B%2522Each%2520child%2520in%2520a%2520list%2520should%2520have%2520a%2520unique%2520key%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TSUBASA_KK%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TSUBASA_KK</dc:creator></item><item><title><![CDATA[JavaScriptのreduce()がチョットワカル]]></title><description><![CDATA[
 初めに
仕事でjsを使用している際に、reduceについてあまり理解できていなかったなと思い、知識整理のため記事を作成しました。
!
この記事は、次の内容についてAIを使用しました。

文章表現改善
誤字脱字



 reduceとは
reduceは、配列に対して指定した関数を実行して、一つの値にまとめて返すメソッドのことである。
例えば、for文で配列の数字を全て足し合わせて、それを変数に代入すると下記の通りになる。
const nums = [1, 2, 3, 4, 5];
let sum = 0;

for (const num of nums) {
  sum += num;...]]></description><link>https://zenn.dev/sawa0369/articles/62012af0753831</link><guid isPermaLink="true">https://zenn.dev/sawa0369/articles/62012af0753831</guid><pubDate>Wed, 21 May 2025 23:34:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fxx8aNeA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEreduce%2528%2529%25E3%2581%258C%25E3%2583%2581%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2582%25AB%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B2%25A2%25E3%2581%25AE%25E6%259D%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZWFlMjc5NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>沢の村</dc:creator></item><item><title><![CDATA[nullの扱いに注意...(TSでの工夫)]]></title><description><![CDATA[!
後日追記
この記事を読むにあたって私の知識の乏しさと勢いとノリで書いてしまった部分もあるので間違っている部分が多くあると思います。
数件コメントをいただきましたが、参考になるコメントです。
コメントを踏まえた上でリプレイスしてみました。
それも踏まえた上で読んでいただけると幸いです。

こんにちは。
てるし〜です。
JavascriptやTypescriptでプログラムを書いているとnullが出てくると思います。
みなさんはこれらを使っていますか？
nullを使う場合はしっかりとハンドリングする必要があります。
ですが、経験の浅い私はうっかり雑なハンドリングをしてしまいバグを起こして...]]></description><link>https://zenn.dev/terusi/articles/e243ead933d406</link><guid isPermaLink="true">https://zenn.dev/terusi/articles/e243ead933d406</guid><pubDate>Wed, 21 May 2025 19:04:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S3gUt41P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:null%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F...%2528TS%25E3%2581%25A7%25E3%2581%25AE%25E5%25B7%25A5%25E5%25A4%25AB%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2M5MzkyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるし〜</dc:creator></item><item><title><![CDATA[Sassのmixed-decls警告を自動で解消するStylelintカスタムルールを作ってみた]]></title><description><![CDATA[Sassのネスト機能は便利ですが、ネストされたルール（@mediaや入れ子セレクタ）の後に直接プロパティを宣言すると、将来的に挙動が変更される可能性があるため、mixed-declsの警告が表示されます。
既存コードが大量にある場合、手動で修正するのは大変です。そこで、--fix実行時に自動で警告を解消できるStylelintカスタムルールを作成しました。


 警告の説明
Sassでmixed-decls警告が発生するのは、ネストルールの後にプロパティ宣言を書くと、将来のCSS仕様に合わせて振る舞いが変わる可能性があるためです。例えば以下のような警告が表示されます：
Deprecati...]]></description><link>https://zenn.dev/mari_tt/articles/76aef135df0e88</link><guid isPermaLink="true">https://zenn.dev/mari_tt/articles/76aef135df0e88</guid><pubDate>Wed, 21 May 2025 12:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8lp8XCxM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sass%25E3%2581%25AEmixed-decls%25E8%25AD%25A6%25E5%2591%258A%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2599%25E3%2582%258BStylelint%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259E%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmR6R0NELUNvazhSZHppaDFQbkhVd1BDQjJmRTFhUWpMTzZuYlRsdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鞠</dc:creator></item><item><title><![CDATA[Promiseの静的メソッド：Promise.all]]></title><description><![CDATA[
 はじめに
今私は、JSの非同期処理を100%理解したいと思い、以下の学習ロードマップを参考にして学習を進めています。
JSの非同期処理を理解するために必要だった知識と学習ロードマップ

この記事に

複数の Promise を扱うことのできる静的メソッドを学習することで単純な async/await でやるよりも効率的に目的をはたせることを理解できれば体感できるはずです。

とあったので、実際に体験したいと思います。今回は、Promise.allに特化して実践してきます。

 Promise.allとは
Promise.all() は複数の Promise をまとめて扱うための静的メ...]]></description><link>https://zenn.dev/akinko0915/articles/d73c044bdcf873</link><guid isPermaLink="true">https://zenn.dev/akinko0915/articles/d73c044bdcf873</guid><pubDate>Wed, 21 May 2025 10:33:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iiJmRVA4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Promise%25E3%2581%25AE%25E9%259D%2599%25E7%259A%2584%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25EF%25BC%259APromise.all%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akinko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSy13cHdwSE5jYThHWWJKMHBCb0NRU3A3WFlZd3Q0Wjc5SFY3clVhWENIUmFpSTlXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akinko</dc:creator></item></channel></rss>