<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 13 Dec 2024 09:48:35 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Next.js 10.xで@types/reactが認識されずビルドに失敗することがある問題]]></title><description><![CDATA[ちょっと株式会社、フロントエンドエンジニアのn13uです.
Next.js 10.2.3を扱っていた際に特定のバージョンの@types/reactを入れると、next build側から@types/reactの不足が原因でビルドに失敗する問題があり、解決した話と詳しい症状、依存解決の話の一部分を備忘録的にまとめています.

 結論


@type/reactのpackage.json内部のexportsに書かれた Subpath exportsの記述が不足しており、Next.js 10.2.3系の依存解決の方式に合っていなかった

依存環境は追加されているのに認識されておらず、環境を追加...]]></description><link>https://zenn.dev/chot/articles/3e5a4204b46f93</link><guid isPermaLink="true">https://zenn.dev/chot/articles/3e5a4204b46f93</guid><pubDate>Fri, 13 Dec 2024 08:21:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OTqoYivS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252010.x%25E3%2581%25A7%2540types%252Freact%25E3%2581%258C%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2595%25E3%2582%258C%25E3%2581%259A%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:n13u%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhMDBhODZmYTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n13u</dc:creator></item><item><title><![CDATA[プロンプトジェネレータで実現する持続可能なLLMプロダクト開発を目指す]]></title><description><![CDATA[この記事はLLM・LLM活用 - Qiita Advent Calendar 2024 - Qiita の12日目で、プロンプトジェネレータについてのものです。
いまはもう12/13かもしれませんが、僕の心はまだ2024/12/12なのです。
プロンプトジェネレータとは、LLMへの指示（プロンプト）を動的に生成するためのツールです。
多くの場合、プロンプトは静的なテキストとして書かれますが、それには大きな課題があります。LLMの進化が速く、昨日有効だったプロンプトが今日は機能しないかもしれません。あるいは、より良い方法が発見される可能性もあります。そのたびにプロンプトを書き換えていくのは...]]></description><link>https://zenn.dev/erukiti/articles/2412-prompt-generator</link><guid isPermaLink="true">https://zenn.dev/erukiti/articles/2412-prompt-generator</guid><pubDate>Fri, 13 Dec 2024 04:01:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gUynphGh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%258C%2581%25E7%25B6%259A%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AALLM%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:erukiti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEV1RMb1hESUIxeEVVYkdtY3RqWW1KbVhjU0hfeU1kTzhJUGVCPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>erukiti</dc:creator></item><item><title><![CDATA[MediaStreamへのPNGグリッチの適用]]></title><description><![CDATA[TL;DR

MediaStreamに対してPNGグリッチを適用しました
PNGグリッチは、Rustで実装しWasm化したものを利用しています
グリッチを行うコンテキストをリソースとして定義することで、グリッチのための処理をJavaScriptで柔軟に記述できるようになります


 作成したもの
navigator.mediaDevices.getDisplayMedia()で取得したMediaStreamのビデオトラックに対してPNGグリッチを適用しています。

図1. ZennのトップページにPNGグリッチを適用している様子

 ストリーム処理
MediaStreamをストリーム処理...]]></description><link>https://zenn.dev/chikoski/articles/glitch-art-with-png-and-mediastreams</link><guid isPermaLink="true">https://zenn.dev/chikoski/articles/glitch-art-with-png-and-mediastreams</guid><pubDate>Fri, 13 Dec 2024 03:40:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LNk3ZSqC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MediaStream%25E3%2581%25B8%25E3%2581%25AEPNG%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2581%25E3%2581%25AE%25E9%2581%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chikoski%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwYzk3YTk1NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chikoski</dc:creator></item><item><title><![CDATA[React NativeのScrollViewとFlatlistの違いを理解する]]></title><description><![CDATA[この記事はReact Native 全部俺 Advent Calendar 13目の記事です。
https://adventar.org/calendars/10741

 このアドベントカレンダーについて
このアドベントカレンダーは @itome が全て書いています。
基本的にReact NativeおよびExpoの公式ドキュメントとソースコードを参照しながら書いていきます。誤植や編集依頼はXにお願いします。

 React NativeのScrollViewとFlatListの違いを理解する

今回はReact Nativeでスクロール可能なリストを実装するときによく使うScroll...]]></description><link>https://zenn.dev/woodstock_tech/articles/14011577c33f90</link><guid isPermaLink="true">https://zenn.dev/woodstock_tech/articles/14011577c33f90</guid><pubDate>Fri, 13 Dec 2024 02:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pXzekNny--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Native%25E3%2581%25AEScrollView%25E3%2581%25A8Flatlist%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Takeshi%2520Tsukamoto%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MTQzNDllZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:woodstock.club%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMDM0ODM0YzMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takeshi Tsukamoto</dc:creator></item><item><title><![CDATA[エディタからJestのテストを実行する際に複数の設定を自動で切り替える方法（VS CodeとJetBrains IDE）]]></title><description><![CDATA[この記事はCommune Advent Calendar 2024シリーズ1の13日目の記事です。

 やりたいこと
サーバーサイドの開発をしている現場ではユニットテストとは別にDBのセットアップ処理を伴う統合テストを実行できるようにしている場合があります。DBのセットアップ処理やリセット処理などは時間がかるため、ユニットテストには含めないようにして別の設定ファイルに含める方法を採る場合が多いと思います。
コマンドラインから実行する場合にはテストフレームワークの実行用設定ファイルを引数に渡すことで変更できます。
# ユニットテスト（デフォルトの設定ファイルが利用される）
npm exec...]]></description><link>https://zenn.dev/dev_commune/articles/70f70336e73a2b</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/70f70336e73a2b</guid><pubDate>Fri, 13 Dec 2024 01:01:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Kq0U1XyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589Jest%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588VS%2520Code%25E3%2581%25A8JetBrains%2520IDE%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:isomura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlNmQwZWQ5NGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>isomura</dc:creator></item><item><title><![CDATA[Next.js AppRouterの新規プロダクトのCSSライブラリにvalilla-extractを採用して約1年が経ったので振り返る]]></title><description><![CDATA[この記事は株式会社カオナビ Advent Calendar 2024の13日目の記事です。
https://qiita.com/advent-calendar/2024/kaonavi

 はじめに
株式会社カオナビのフロントエンドエンジニアの@shinji_beckyです。
株式会社カオナビでは2024年4月にヨジツティクスという予実管理プロダクトをローンチしました。
https://www.yojitsutics.jp/
私はヨジツティクスの立ち上げ直後に開発メンバーとしてジョインし、フロントエンド領域の開発を担当しています。
先日はてなニュースでヨジツティクスのプロダクトの話やフロ...]]></description><link>https://zenn.dev/shinbey/articles/91b0bd1f738881</link><guid isPermaLink="true">https://zenn.dev/shinbey/articles/91b0bd1f738881</guid><pubDate>Fri, 13 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sReiYVS---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520AppRouter%25E3%2581%25AE%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AECSS%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25ABvalilla-extract%25E3%2582%2592%25E6%258E%25A1%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%25B4%25841...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Becky%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkOTE3ZTc3YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Becky</dc:creator></item><item><title><![CDATA[Next.jsの型を厳密に定義しなおしてロジックのミスを発見する]]></title><description><![CDATA[これは、株式会社ゆめみ Advent Calendar 2024 13日目の記事です。
Next.js (Pages Router) のAPI Routesのhandlerにおいて、ValibotやZodで値の検証をせずにリクエストボディの値を使用してしまう不具合を、型検査レベルで防ぐことを考えます。
例えば、次のようなコードで、処理の順番やロジックの誤りを型エラーを出して気づきたいといったものです。
import { NextApiHandler } from "next";
import * as v from "valibot";

const RequestBodySchema ...]]></description><link>https://zenn.dev/yumemi_inc/articles/nextjs-api-route-handler-request-body-type-safer</link><guid isPermaLink="true">https://zenn.dev/yumemi_inc/articles/nextjs-api-route-handler-request-body-type-safer</guid><pubDate>Thu, 12 Dec 2024 16:57:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0b9STA0P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%258E%25B3%25E5%25AF%2586%25E3%2581%25AB%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258A%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E3%2583%259F%25E3%2582%25B9%25E3%2582%2592%25E7%2599%25BA%25E8%25A6%258B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ygkn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyM2EwYWQ1MzcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ygkn</dc:creator></item><item><title><![CDATA[「TypeScript でプログラマブルに動く日本語組版処理システムの提案」をJSX対応する]]></title><description><![CDATA[
 はじめに
まずはこちらの素晴らしい記事をお読みください。
https://zenn.dev/inaniwaudon/articles/5d040f543c4c69
という訳で、TS (JS)のオブジェクトを用いて記述ができるとのことですが、コメント (Discussion)にある通り、JSXで書けても面白そうです。という訳で簡易的に一部実装しました。
こんな感じで動きます（コードを一部抜粋）。
// pillar関数などは元のコードのtest/src/helper.tsにあるユーティリティ関数
const Pillar = ({ children }: { children: str...]]></description><link>https://zenn.dev/catminusminus/articles/06d79db2e3ac43</link><guid isPermaLink="true">https://zenn.dev/catminusminus/articles/06d79db2e3ac43</guid><pubDate>Thu, 12 Dec 2024 16:40:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zDNwEadj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CTypeScript%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258F%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E7%25B5%2584%25E7%2589%2588%25E5%2587%25A6%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E6%258F%2590%25E6%25A1%2588%25E3%2580%258D%25E3%2582%2592JSX%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Catminusminus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNDI4ZDQ1MTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Catminusminus</dc:creator></item><item><title><![CDATA[Jestでテスト]]></title><description><![CDATA[TypeScriptの単体テストにJestを使ってみました。 TypeScriptで作ったプロジェクトにサクッと導入するために必要な必要最低限の手順をまとめておきたいと思います。

 利用の準備
必要なパッケージをインストールします。
$ npm install --save-dev jest ts-jest @types/jest
package.jsonのscriptsセクションにtestの項目を追加します。

package.json
  "scripts": {
    "test": "jest"
  },

またtsconfig.jsonのcompilerOptionsにも設...]]></description><link>https://zenn.dev/shogetoshi/articles/try-typescript-test-with-jest</link><guid isPermaLink="true">https://zenn.dev/shogetoshi/articles/try-typescript-test-with-jest</guid><pubDate>Thu, 12 Dec 2024 15:41:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L6dbn4Os--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Jest%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shogetoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4MDk1OGNhNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shogetoshi</dc:creator></item><item><title><![CDATA[【型安全な実装】型安全にvue-i18nの辞書から配列を取得して、変数に設定する【の掘り下げ方】]]></title><description><![CDATA[
 結論
!
コードに曖昧性のある場合、Nuxtの環境を想定しています。
e.g. Auto-imports - Nuxt Concepts

i18nの辞書ファイル

ja.json
{
  "path": {
    "to": {
      "wordList": ["a", "b", "c"]
    }
  }
}

ユーティリティ関数
（今回の主な結論。getI18nArrayを使えば達成できます。）

utils/i18n.ts
/**
 * 引数未指定にすると、普通に`const i18n = useI18n()`とすると入ってくる型になる。
 * 型引数の使い方につい...]]></description><link>https://zenn.dev/aiya000/articles/d82a34c1f98455</link><guid isPermaLink="true">https://zenn.dev/aiya000/articles/d82a34c1f98455</guid><pubDate>Thu, 12 Dec 2024 15:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jOFX_hto--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E5%25AE%259F%25E8%25A3%2585%25E3%2580%2591%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25ABvue-i18n%25E3%2581%25AE%25E8%25BE%259E%25E6%259B%25B8%25E3%2581%258B%25E3%2582%2589%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AB%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590%25E3%2581%25AE%25E6%258E%2598%25E3%2582%258A%25E4%25B8%258B%25E3%2581%2592%25E6%2596%25B9%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2582%2584%2520-%2520aiya000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pZVUM0QXdxcVdtMVZmVWtiQXFzdE5ra1BFZU1FOUN0NFY1UzdiPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あいや - aiya000</dc:creator></item><item><title><![CDATA[remix-auth4.0でMagic Link認証を実装する]]></title><description><![CDATA[
 はじめに
先日 React Router7 がリリースされました。
https://remix.run/blog/react-router-v7
今回のリリースで Remix が React Router に取り込まれる形となり、この流れで認証機能を提供する remix-auth 4.0 がリリースされました。
https://github.com/sergiodxa/remix-auth/releases/tag/v4.0.0
今回のアップデートにより、ライブラリの使い方が少し変わります。これまではremix-auth-email-linkを使うことで簡単に Magic Link ...]]></description><link>https://zenn.dev/sendokakeru/articles/remix-auth-4-magic-link</link><guid isPermaLink="true">https://zenn.dev/sendokakeru/articles/remix-auth-4-magic-link</guid><pubDate>Thu, 12 Dec 2024 13:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--af392W66--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:remix-auth4.0%25E3%2581%25A7Magic%2520Link%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sendo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0ODY5OTMwN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sendo</dc:creator></item><item><title><![CDATA[Kuma UIを簡単に触ってみた。]]></title><description><![CDATA[この記事は5分程度で読めます。

 はじめに
今回は、Kuma UIを簡単に触た感想の共有です。

 きっかけ
Next.jsの公式ドキュメントにあるサポートされているCSS-in-JSリストの上から順に触っているのですが、ant-D, chakra-ui, react-componentsは既に触ったことがあるので、今回はKuma-uiを触ってみました。

 ちなみに
興味があれば、アコーディオンを開いて覗いてください。
ちなみに


mui/materialは本業で触っていますが、下の画像にあるリストでは一番触りやすいです。

ant-Dにあるcascaderがmui/materia...]]></description><link>https://zenn.dev/nifumafu/articles/d5be452cbcd3fc</link><guid isPermaLink="true">https://zenn.dev/nifumafu/articles/d5be452cbcd3fc</guid><pubDate>Thu, 12 Dec 2024 12:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g6rlLt0r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kuma%2520UI%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nifumafu%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXZVb3ktcF9Nb3FTc3JnQnNIblU1ekN0MnItNWFkRDZoXzNSRGE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nifumafu🍊</dc:creator></item><item><title><![CDATA[Vue の defineExpose でコンポーネント内部のスクロールを外部から制御する]]></title><description><![CDATA[Vue3 のコンポーネントでは、defineExpose を活用することで、親コンポーネントから子コンポーネント内の処理（例: スクロール位置の制御）を簡潔に、かつ、型安全に呼び出せます。

 前提

TypeScript
Vue3 で script setup を使用


 子コンポーネントで defineExpose を使用する
子コンポーネント内でスクロールの制御を行う関数を defineExpose で公開することで、親コンポーネントから直接呼び出せるようになります。
&lt;!-- ChildComponent --&gt;
&lt;script setup lang="ts"...]]></description><link>https://zenn.dev/studio/articles/0798456c99e89c</link><guid isPermaLink="true">https://zenn.dev/studio/articles/0798456c99e89c</guid><pubDate>Thu, 12 Dec 2024 11:34:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--180DXMiL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%2520%25E3%2581%25AE%2520defineExpose%2520%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E5%2586%2585%25E9%2583%25A8%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25A4%2596%25E9%2583%25A8%25E3%2581%258B%25E3%2582%2589%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B8%25E3%2581%25B6%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwYmNhNWZkODEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Studio%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hoMWZIZ0JrazVrQ3N2c2dQYS10azVkMG0yTk02ZHBDM3BBWXdKPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へぶん</dc:creator></item><item><title><![CDATA[HonoでService Workerを扱いやすくする]]></title><description><![CDATA[こんにちは、sugar-catです。
この記事はHono Advent Calendar 2024の12日目の記事です。
https://qiita.com/advent-calendar/2024/hono

 はじめに
Honoではv4.5系でService Workerのアダプターを使用することができるようになりました。
このアダプターを使用することで、リクエストのインターセプトや各種処理をHonoの書き味のまま実装することが可能になります。

 Service Workerについて
Service Workerは、ブラウザとネットワークの間でプロキシとして機能します。
ブラウザの...]]></description><link>https://zenn.dev/king/articles/9d1696f2d46107</link><guid isPermaLink="true">https://zenn.dev/king/articles/9d1696f2d46107</guid><pubDate>Thu, 12 Dec 2024 11:32:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l36o24bi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25A7Service%2520Worker%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sugar-cat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMTllYzU4NDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sugar-cat</dc:creator></item><item><title><![CDATA[【データベース】Database migrationsとは]]></title><description><![CDATA[
 Database migrationsとは
データベーススキーマへの段階的な変更を時間の経過とともに管理及び適用するためのバージョン管理された方法
開発者はテーブルの追加や列の変更などを行うことができる
※データベーススキーマとは、データベースの構造を定義したモデルのこと
※例えば、「Todoという名前のテーブルがある」「Todoテーブルには id, name, deadline等カラムがある」「idは数値、nameは文字列、deadlineがDateである」「Userテーブルのインデックスはidである」などをまとめた情報がスキーマである。

 マイグレーションの目的
・既存のデータ...]]></description><link>https://zenn.dev/mukkun69n/articles/8ddbe1e21bdd1b</link><guid isPermaLink="true">https://zenn.dev/mukkun69n/articles/8ddbe1e21bdd1b</guid><pubDate>Thu, 12 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OTYbSt0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2580%2591Database%2520migrations%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%25A3%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwZGI0MzVjMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むっく</dc:creator></item><item><title><![CDATA[StripeのAPIキーからStripeアカウントを特定する方法]]></title><description><![CDATA[複数のStripeアカウントで開発や運用を行っていると、プロジェクトで利用しているAPIキーがどのStripeアカウントで利用しているものかがわからなくなることがあります。
この記事では、APIキーから対象のStripeアカウントを特定する方法を紹介します。

 Checkout Sessionを利用して確認する
もっとも簡単な方法は、Checkout Sessionを利用することです。Checkout Sessionには、カード情報を保存するためのsetupモードが用意されています。setupモードでセッションを作成し、リダイレクトを行うAPIを実装しましょう。
app.get('/c...]]></description><link>https://zenn.dev/stripe/articles/confirm-stripe-account-by-api-key</link><guid isPermaLink="true">https://zenn.dev/stripe/articles/confirm-stripe-account-by-api-key</guid><pubDate>Thu, 12 Dec 2024 06:10:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7KVDSdz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stripe%25E3%2581%25AEAPI%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%258B%25E3%2582%2589Stripe%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidetaka%2520Okamoto%2528S...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtSGp6eWxINWdaWDBOVXNUN1JvQ1hzUEJSR3E1OHVDSlRZSFVKPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hidetaka Okamoto(Stripe)</dc:creator></item><item><title><![CDATA[AIを使ったモックデータ生成スクリプト（画像込み）]]></title><description><![CDATA[
アプリのモックデータを生成するには、比較的時間がかかります。AIチャットボットを使ったとしても、プロンプトを書いたり、結果をコピーしたり、DBに入れたりする必要があったりするので、地味に大変です。自分は最近この問題に直面し、手動での作業は避けたかったので、OpenAIのAPIを使って自動化を試みました。以下でその方法を紹介します。

 スクリプトの特徴


⭐ JSON形式での構造的な出力: OpenAIのgpt-4o-miniモデルを使って構造化されたJSON出力により、モックデータを生成します

⭐ バッチ大小の設定: データ生成の速度を調節できます

⭐ 画像生成: dall-e...]]></description><link>https://zenn.dev/superstudio/articles/a8edc9a578fba0</link><guid isPermaLink="true">https://zenn.dev/superstudio/articles/a8edc9a578fba0</guid><pubDate>Thu, 12 Dec 2024 05:59:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U1HNt8SL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2594%259F%25E6%2588%2590%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25EF%25BC%2588%25E7%2594%25BB%25E5%2583%258F%25E8%25BE%25BC%25E3%2581%25BF%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Ravi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4NWIxMTkzZGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SUPER%2520STUDIO%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0NjA4YzYxNGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ravi</dc:creator></item><item><title><![CDATA[GyazoのNodeJSライブラリーをTypescriptで作った話]]></title><description><![CDATA[Gyazoのnodejs用のclientライブラリーgyazo-api-ts を作って、OSSで公開しました。
https://gyazo.com
https://www.npmjs.com/package/gyazo-api-ts
人生で初めて、個人のnpmパッケージを公開したのですが、思ったより簡単でした。
!
あくまでもgyazoが公式でメンテナンスされているライブラリーではなく、私個人が作って個人でメンテナンスしていくものになります。


 きっかけ
個人で自分用のraycastの拡張アプリを作っていて、そこでgyazoに画像をアップロードする必要があり、npmパッケージを探した...]]></description><link>https://zenn.dev/helpfeel/articles/4a9d9b2af12cf0</link><guid isPermaLink="true">https://zenn.dev/helpfeel/articles/4a9d9b2af12cf0</guid><pubDate>Thu, 12 Dec 2024 05:23:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--580tzol0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gyazo%25E3%2581%25AENodeJS%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592Typescript%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:qaynam%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMzEzZDllODQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Helpfeel%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlN2JhNjA0NmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qaynam</dc:creator></item><item><title><![CDATA[TypeScriptのコードをRustで書き直した話]]></title><description><![CDATA[モニクル Advent Calendar 2024の12日目の記事です．
https://adventar.org/calendars/10519

 はじめに
モニクルの開発組織では，TypeScriptをプロダクトを作るときの最初の選択肢として採用しており，Node.jsをランタイムとした一般的なJSの技術スタックでの開発を行っています．
そんな中でNode.jsのパフォーマンスに課題を感じ始め，一部のコードをRustで書き直すという作業を行いました．

 Node.jsに感じた課題
あらゆるサービスが稼働しているだけでお金を生み出してくれると良いのですが，残念ながら全てのサービスが...]]></description><link>https://zenn.dev/monicle/articles/46c7093afd3d52</link><guid isPermaLink="true">https://zenn.dev/monicle/articles/46c7093afd3d52</guid><pubDate>Thu, 12 Dec 2024 03:47:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hDjaschC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592Rust%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:asuka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlMzk4MDdmM2QuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25A2%25E3%2583%258B%25E3%2582%25AF%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhNDQzZmI1MzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asuka</dc:creator></item><item><title><![CDATA[ESLint v9 に色々つまづきながら移行した話]]></title><description><![CDATA[
 はじめに
この記事は「コネヒト Advent Calender 2024」の12日目の記事です。
https://adventar.org/calendars/10480

 この記事で取り扱うこと

ESLint v9 にどのようなステップで移行したかの説明
Flat Config に対応した設定ファイルの生成方法・修正について


 この記事で取り扱わないこと

各種 ESLint のルールについての説明
Flat Config についての詳細な説明


 ESLint v9について
今年の4月に ESLint のメジャーバージョンがv9.0にアップデートされ、10月に8系を含む...]]></description><link>https://zenn.dev/takfjp/articles/19387e78e3b5ae</link><guid isPermaLink="true">https://zenn.dev/takfjp/articles/19387e78e3b5ae</guid><pubDate>Thu, 12 Dec 2024 03:27:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oLze7wHM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%2520v9%2520%25E3%2581%25AB%25E8%2589%25B2%25E3%2580%2585%25E3%2581%25A4%25E3%2581%25BE%25E3%2581%25A5%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takfjp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjMDlkM2ViNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takfjp</dc:creator></item></channel></rss>