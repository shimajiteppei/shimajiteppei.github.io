<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 09 Jan 2025 01:00:20 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[思いつきで作ったAIツールが5000スターを獲得した話]]></title><description><![CDATA[とにかくケチりたい、そんな気持ちで作ったツールの話です。
元々開発にCline(Claude Dev)やAiderなどの開発ツールを駆使していました。
ただ、APIの料金が常に心配で、できる限り安く済ませたい気持ちもあり、Claude Proを契約してのWeb版にファイルを1つ1つアップロードする日々を過ごしていました。
ある日それが面倒になってきて「全部1ファイルにしたらいい感じに読み込んでくれるのでは？」と思い、作ってみたら思いのほかうまくいったので公開しました。
https://github.com/yamadashy/repomix
百聞は一見にしかずということで、
こちらのデモ...]]></description><link>https://zenn.dev/yamadashy/articles/ai-tool-repomix-5000-star</link><guid isPermaLink="true">https://zenn.dev/yamadashy/articles/ai-tool-repomix-5000-star</guid><pubDate>Thu, 09 Jan 2025 00:36:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aN6-tgbG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2580%259D%25E3%2581%2584%25E3%2581%25A4%25E3%2581%258D%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C5000%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%258D%25B2%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamadashy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1ZVdzVUYtM0ZqUFZlT3BjY1pxZ2lXWlNmbUF1aEctQkNBenBUc0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamadashy</dc:creator></item><item><title><![CDATA[djangorestframework-camel-caseの導入方法]]></title><description><![CDATA[
 概要
djangorestframework-camel-caseはDRFでJSONレスポンスを返すとき、自動的にキーをキャメルケースに変換してくれるライブラリです。
https://github.com/vbabiy/djangorestframework-camel-case

 例
たとえば、ユーザ情報を返却するAPIを叩いたとき

response.json
 {
 	username: "Yuji",
 	created_at: "2025-01-01",
 }

これが、こうなります。

response.json
 {
  	username: "Yuji",
  	c...]]></description><link>https://zenn.dev/evesquare2/articles/a61976455dc0d5</link><guid isPermaLink="true">https://zenn.dev/evesquare2/articles/a61976455dc0d5</guid><pubDate>Thu, 09 Jan 2025 00:21:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W2EoLJdH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:djangorestframework-camel-case%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:evesquare%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIyMjRmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>evesquare</dc:creator></item><item><title><![CDATA[状態管理ライブラリのJotaiに入門する]]></title><description><![CDATA[
 はじめに
先日、Reactの状態管理ライブラリとして知られていたRecoilのリポジトリがアーカイブされたことが話題になりました。
https://github.com/facebookexperimental/Recoil

This repository has been archived by the owner on Jan 2, 2025. It is now read-only.

これまでRecoilを利用していた開発者も多く、戸惑った方もいるかもしれません。その中で、RecoilからJotaiへ移行したという事例も見かけるようになりました。
私自身も今回、Jotaiを...]]></description><link>https://zenn.dev/kiwichan101kg/articles/8e992d1019c983</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/8e992d1019c983</guid><pubDate>Wed, 08 Jan 2025 23:18:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p_dLgGNk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AEJotai%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[GraphQLが流行りづらい点]]></title><description><![CDATA[!
！！個人の見解になります！！
私のような表面的に触った人ではなく、しっかりと学習した人であれば違った見解になると思います。


 そもそもGraphQLとは

 概要
クライアントが必要なデータを正確に指定して取得できる柔軟性を提供してくれるもの。
RESTAPIの代替として登場し、クライアントとサーバー間のデータ通信を効率化することを目的としています。
以下のような特徴を持っています。

スキーマ駆動型: APIはスキーマによって型安全かつ構造化されています。
単一エンドポイント: すべてのリクエストは単一のエンドポイント（例: /graphql）で処理されます。
クライアント主導...]]></description><link>https://zenn.dev/ninja_stack/articles/907b35f147eef9</link><guid isPermaLink="true">https://zenn.dev/ninja_stack/articles/907b35f147eef9</guid><pubDate>Wed, 08 Jan 2025 14:39:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tfnWg-Pn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GraphQL%25E3%2581%258C%25E6%25B5%2581%25E8%25A1%258C%25E3%2582%258A%25E3%2581%25A5%25E3%2582%2589%25E3%2581%2584%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4NTZmMjU4MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikyo</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜平均プーリング（006/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の7本目です。

 前回
https://zenn.dev/nyagato_00/articles/de360085b46e19

 実装

 お題

ここでは画像をグリッド分割(ある固定長の領域に分ける)し、かく領域内(セル)の平均値でその領域内の値を埋める。 このようにグリッド分割し、その領域内の代表値を求める操作はPooling(プーリング) と呼ばれる。 これらプーリング操作はCNN(Convolutional Neural Network) において重要な役割を持つ。
これは次式で...]]></description><link>https://zenn.dev/nyagato_00/articles/91ff5e44b4c6dd</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/91ff5e44b4c6dd</guid><pubDate>Wed, 08 Jan 2025 13:59:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cepjefoh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E5%25B9%25B3%25E5%259D%2587%25E3%2583%2597%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588006%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[TypeScriptでMCPサーバーのtool呼び出しをする]]></title><description><![CDATA[Model Context Protocol (MCP) を使用してTypeScriptで特定のMCPサーバーのツールを呼び出す方法を説明します。
MCPサーバーの呼び出しは本来MCPホストとして機能するClaude DesktopアプリやZedの内部で透過的に実行されていますが、エディタのプラグインなどにMCPサーバー連携機能をつける時には複数のMCPサーバーへの接続管理と呼び出しを作る必要があります。
以下の例ではTypeScript SDKでMCPクライアントを使って、@modelcontextprotocol/server-memory パッケージで提供されるサーバーを呼び出しま...]]></description><link>https://zenn.dev/laiso/articles/mcp-typescript-sdk</link><guid isPermaLink="true">https://zenn.dev/laiso/articles/mcp-typescript-sdk</guid><pubDate>Wed, 08 Jan 2025 13:22:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bnJm2lcV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AEtool%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>laiso</dc:creator></item><item><title><![CDATA[【TypeScript/ハンズオン】テスト駆動開発(TDD)入門 第2回：Jestではじめるテスト開発]]></title><description><![CDATA[
 はじめに
前回は、TDDの概念と基本的な流れについて学びました。
https://zenn.dev/nezumizuki/articles/fa821accc95050
今回は、実際にTypeScriptとJestを使ってテストを書いていく方法を学んでいきます。
Jestとは特にJavaScript/TypeScript向けに設計された人気のテストフレームワークです。
Facebookがオープンソースとして開発しています。
TypeScript × Jest の組み合わせは現代のWeb開発では非常によく使われています。

 前提条件
このチュートリアルを進めるには、以下が必要です

...]]></description><link>https://zenn.dev/nezumizuki/articles/b9dd543d601218</link><guid isPermaLink="true">https://zenn.dev/nezumizuki/articles/b9dd543d601218</guid><pubDate>Wed, 08 Jan 2025 12:34:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hLqHMr5o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%252F%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E3%2580%2591%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2528TDD%2529%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC2%25E5%259B%259E%25EF%25BC%259AJest%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXRYZE91dm9hdlRUclRZSVY2eW5ibDdfVHprdXhtb1JUcUlQRGpTaTRfTmZxUnlLdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MI</dc:creator></item><item><title><![CDATA[TypeScriptで作る自動運転UI]]></title><description><![CDATA[こんにちは！チューリングでソフトウェアエンジニアをしている太田です。
自動運転システムの開発を手がけるチューリングでは、大規模な GPU クラスタでトレーニングされたモデルが日々リリースされ、実車環境でのテストが行われています。
自動運転と聞くと、ハードウェア寄りの技術を連想するかもしれませんが、チューリングの自動運転開発においてWeb系の技術もさまざまな場面で活用されています。
近年、UI開発においてWebブラウザが利用される場面が広がっています。チューリングの自動運転システムにおいても例外でなく、Webフロントエンドの技術を用いてUI開発が進められています。この記事では、チューリング...]]></description><link>https://zenn.dev/turing_motors/articles/6ad90d261be8c6</link><guid isPermaLink="true">https://zenn.dev/turing_motors/articles/6ad90d261be8c6</guid><pubDate>Wed, 08 Jan 2025 10:01:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rtY38DlC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%2587%25AA%25E5%258B%2595%25E9%2581%258B%25E8%25BB%25A2UI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanade%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNmQ4MDk1OGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Tech%2520Blog%2520-%2520Turing%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWZwTzRTWFEwVGpjeEZHaE1SZndIZUtucUpmdlJnaTR5Mm9mQXNEWjlfV1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanade</dc:creator></item><item><title><![CDATA[メモ：ESLint Flat Config Migration w/ Next.js 15]]></title><description><![CDATA[Changelog
重い腰を上げて Next.js v15 と Flat Config の対応をした際のメモです。

 プロジェクト構成

Next.js
Saas (SCSS)
Vitest
Storybook


 Packages
npm i -D eslint @eslint/js typescript typescript-eslint \
@eslint/eslintrc @eslint/compat @next/eslint-plugin-next \
eslint-plugin-react eslint-plugin-react-hooks eslint-plugin-j...]]></description><link>https://zenn.dev/iput_app/articles/9eeb3d68326aa0</link><guid isPermaLink="true">https://zenn.dev/iput_app/articles/9eeb3d68326aa0</guid><pubDate>Wed, 08 Jan 2025 08:53:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---gjrJhMo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%259AESLint%2520Flat%2520Config%2520Migration%2520w%252F%2520Next.js%252015%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wiyco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZWIyZDBkZWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AB%2540IPUT%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTJiNGUyZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wiyco</dc:creator></item><item><title><![CDATA[あけおめ計算〜 (原始根をただ計算する)]]></title><description><![CDATA[
 導入
&gt; 2 ** 4 % 5
1
&gt; 3 ** 16 % 17
1
&gt; 5 ** 96 % 97
1
&gt; r ** (p - 1) % p
1
なんか 1 になります！

 あけおめなので、抱負
ん〜、

おすすめされた本を読む
技術同人誌書く

とかですかね

 原始根
いきなりですが、これは原始根です！
一般には、p を素数とすると、適当に r を取れば
\begin{aligned} r^1 &amp;\not\equiv 1 \quad (\mathrm{mod} \ p) \\ r^2 &amp;\not\equiv 1 \quad (\mathr...]]></description><link>https://zenn.dev/medicalforce/articles/281f058fb2f170</link><guid isPermaLink="true">https://zenn.dev/medicalforce/articles/281f058fb2f170</guid><pubDate>Wed, 08 Jan 2025 07:32:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qZowkaeY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%2591%25E3%2581%258A%25E3%2582%2581%25E8%25A8%2588%25E7%25AE%2597%25E3%2580%259C%2520%2528%25E5%258E%259F%25E5%25A7%258B%25E6%25A0%25B9%25E3%2582%2592%25E3%2581%259F%25E3%2581%25A0%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:rryyoo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyZjY0YWIzNTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZU9jTDk5dzA1bXBDUFNQWnd3NjZ3Q01IQUpGMFNBbC1RcHpQeEM9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rryyoo</dc:creator></item><item><title><![CDATA[『初めてのTypeScript』で初めて型に触れる]]></title><description><![CDATA[
 これはなに
ども、レバテック開発部のもりたです。
みなさん年末年始をいかがお過ごしでしたでしょうか。もりたはこの連休を利用して『初めてのTypeScript』を読みました。今回はその感想です。
https://www.oreilly.co.jp/books/9784814400362/
いろいろな前提

もりたのレベル感

元々はPythonとかPHPなどの言語をよく書いており、JavaScriptも時々は書いていた
TypeScript Deep Diveの輪読会に参加したことがある
TypeScriptは仕事で読むのがメイン


動機

なんとなく書ける気もするが、初心者むけのT...]]></description><link>https://zenn.dev/levtech/articles/9086cb7808c92c</link><guid isPermaLink="true">https://zenn.dev/levtech/articles/9086cb7808c92c</guid><pubDate>Wed, 08 Jan 2025 07:02:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H7zzBqUl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AETypeScript%25E3%2580%258F%25E3%2581%25A7%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E5%259E%258B%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2582%25E3%2582%258A%25E3%2581%259F%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1YzcxZDY5NDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2583%2590%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E9%2596%258B%25E7%2599%25BA%25E9%2583%25A8%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmduNmRjWi1heEt6c1JkLXQ4UmxGcmRJMi1VV0tnTUpiamZISmQ5T0hqdmI4PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もりた</dc:creator></item><item><title><![CDATA[Sharp.js: 最強のNode.js画像処理フレームワーク]]></title><description><![CDATA[

 Node.js環境におけるSharpモジュールを用いた画像の効率的な処理方法
この記事では、Node.js環境においてSharpモジュールを用いて画像を効率的に処理する方法を紹介します。実際のコード例を通じて、大きな画像ファイルをネットワーク送信に適したJPEG、PNG、WebP、AVIF形式に変換する方法を示します。同時に、libvipsライブラリの強力な機能を利用して、画像処理の効率を高める方法も紹介します。

 1. Sharpモジュールのはじめに

 1.1 Sharpモジュールの紹介
視覚情報爆発の今日の時代において、画像処理技術は極めて重要になっています。Node.js...]]></description><link>https://zenn.dev/leapcell/articles/7270d133a71634</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/7270d133a71634</guid><pubDate>Wed, 08 Jan 2025 04:32:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qnoiD5IJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sharp.js%253A%2520%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AENode.js%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA["Vitestで遭遇したエラー『TypeError: window.matchMedia is not a function』の解決方法"]]></title><description><![CDATA[
 エラー内容
テスト実行時に以下のエラーが発生しました。
TypeError: window.matchMedia is not a function
上記エラーの原因はwindow.matchMediaがテスト環境で提供されていないためです。window.matchMediaはブラウザ環境で動作しますが、@testing-library/reactやvitestのようなテスト環境ではデフォルトでは定義されていません。

 解決方法
以下のようにvitestのセットアップファイルでwindow.matchMediaをモックすることで問題を解決できます。

setup.ts
import...]]></description><link>https://zenn.dev/rize/articles/222160837e18b0</link><guid isPermaLink="true">https://zenn.dev/rize/articles/222160837e18b0</guid><pubDate>Wed, 08 Jan 2025 02:25:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ebfyj_u3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2522Vitest%25E3%2581%25A7%25E9%2581%25AD%25E9%2581%2587%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%258ETypeError%253A%2520window.matchMedia%2520is%2520not%2520a%2520fun...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rize%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhMDQ5MzFkZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rize</dc:creator></item><item><title><![CDATA[Reactで、Featuresにスタイルを持たないようにしてみた]]></title><description><![CDATA[
 前提

bulletproof-react を基準にしていること
tanstack-router を使用していること
react-hook-form と zod を使用していること
shadcn(UI ライブラリ)を使用していること
筆者自身に技術力を期待しないこと


 モチベーション
いつも悩んでいたのが、pages と features 両方でレイアウト（以下スタイル）を適応していた。features は、form タグの中身のレイアウトも適応させる形にしていた。
2024 年 9 月あたりで、SOLID 原則について改めて触れる機会があり、
ふと、「単一責任を考えるのであれば...]]></description><link>https://zenn.dev/nekomals/articles/b18f07095d5b86</link><guid isPermaLink="true">https://zenn.dev/nekomals/articles/b18f07095d5b86</guid><pubDate>Wed, 08 Jan 2025 02:05:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AUBgIeq4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E3%2580%2581Features%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2582%2593%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2tLcEsxSENsbUlvUWRaWkI3VXVmeGJkb0tTLWIyQ1VSWDVqYWxSbE9LeDJFQ3JVT3Yzdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うんや</dc:creator></item><item><title><![CDATA[Node.jsのfetchでプロキシを利用する]]></title><description><![CDATA[Node.jsのv18からfetchが使えますが、このfetchは環境変数のHTTPS_PROXYやHTTP_PROXY、NO_PROXYなどに応じてプロキシを使ってくれるといったようなことはありません。
fetchを使っている箇所を適宜プロキシを使う形に書き換えるのは面倒なのと、利用しているライブラリ内でfetchを使っていると変更するのが困難な場合も発生しそうです。(実際発生してこれを書いています)

 Node.jsのfetchで環境変数に応じてプロキシを利用する方法
一律設定する方法が無いか調べたところ、Node.jsのfetchの実装として利用されているundiciのEnvHt...]]></description><link>https://zenn.dev/onozaty/articles/node-fetch-proxy</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/node-fetch-proxy</guid><pubDate>Tue, 07 Jan 2025 15:08:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9WxfBHl6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25AEfetch%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[名前的型付けと構造的部分型について]]></title><description><![CDATA[
 構造的部分型について
TypeScriptは、構造的部分型の言語と言われます。
参考: https://typescriptbook.jp/reference/values-types-variables/structural-subtyping#構造的部分型
構造的部分型（structural typing） と呼ばれる型システムのことで、 名前的型付け（nominal typing） という型システムと2つの種類があります。

 何者なのか
プログラミング言語の型システムは、「2つの型がいつ互換性があると見なされるか」というルールを定めています。

 名前的型付け（Nominal...]]></description><link>https://zenn.dev/nana/articles/bd208335dbb8e9</link><guid isPermaLink="true">https://zenn.dev/nana/articles/bd208335dbb8e9</guid><pubDate>Tue, 07 Jan 2025 14:56:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dHeOkfh7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258D%25E5%2589%258D%25E7%259A%2584%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25A8%25E6%25A7%258B%25E9%2580%25A0%25E7%259A%2584%25E9%2583%25A8%25E5%2588%2586%25E5%259E%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ugo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3OGQxMTFjYmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ugo</dc:creator></item><item><title><![CDATA[【TypeScript】定数にはas constをつけることにした]]></title><description><![CDATA[こんばんはmayaです！
みなさん、as constって知ってますか？巷では「定数アサーション」と呼ばれていて、定義した変数の末尾につけるとその値をreadonlyにした上でリテラル型にしてくれる機能です。
今日の業務でコードを眺めていたら、定数（const IS_VALID = ...的な）に非常に曖昧な型付けがされているのを見つけて、より良い型定義を探る中で一つの答えに辿り着いたので、ご紹介します！

 どういう状況だったか
今回の記事でいう定数ってのは、単にconstキーワードで定義された変数のことではなく、「プログラムの中で値が変わらないもの」という意味での「定数」です。
そして...]]></description><link>https://zenn.dev/maya_honey/articles/662d9e197dfe63</link><guid isPermaLink="true">https://zenn.dev/maya_honey/articles/662d9e197dfe63</guid><pubDate>Tue, 07 Jan 2025 14:34:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IadK_RKd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25AFas%2520const%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maya%2520honey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1YzYwZWM4NzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maya honey</dc:creator></item><item><title><![CDATA[Spring BootとReactの連携を学ぶためにToDoアプリを作る]]></title><description><![CDATA[
 はじめに
普段はサーバーサイドをJavaで実装しフレームワークはSpring Bootを使用しているが、個人開発のためにReactを学習したため、フロントエンドとサーバーサイドでどのように連携させるのか知りたいと思い調べながら実装してみることにした。
以下の記事を見つけたので、先日学習したてのDockerを使ってSpring Boot × React(TypeScript)で連携できる状態を目指して実装してみる。
https://qiita.com/studio_meowtoon/items/7d4d0bf73e04e01be558
今回はJavaやTypeScriptのコードを細か...]]></description><link>https://zenn.dev/yadonn/articles/0e1185989b248b</link><guid isPermaLink="true">https://zenn.dev/yadonn/articles/0e1185989b248b</guid><pubDate>Tue, 07 Jan 2025 13:18:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fE1BOKS2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25A8React%25E3%2581%25AE%25E9%2580%25A3%25E6%2590%25BA%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YADON%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkOTAyMjM0YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YADON</dc:creator></item><item><title><![CDATA[Embla Carousel で左右が少し見切れたスライドを作る]]></title><description><![CDATA[React と TypeScript の構成でカルーセルスライダーに Embla Carousel をよく利用しており、基本的な使い方を以前ご紹介いたしました。
https://zenn.dev/yall/articles/4c7ab236d60553
GitHub でのコントリビュートも行うなど個人的にはすごく応援しております。
https://github.com/davidjerleke/embla-carousel/pull/1096#event-15826032457
shadcn/uiでも採用され、今後普及しそうなのですが表題のUIを実現する方法について言及がネット上に見当た...]]></description><link>https://zenn.dev/yall/articles/aae45a28cd8d37</link><guid isPermaLink="true">https://zenn.dev/yall/articles/aae45a28cd8d37</guid><pubDate>Tue, 07 Jan 2025 12:13:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nI4yxkJz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Embla%2520Carousel%2520%25E3%2581%25A7%25E5%25B7%25A6%25E5%258F%25B3%25E3%2581%258C%25E5%25B0%2591%25E3%2581%2597%25E8%25A6%258B%25E5%2588%2587%25E3%2582%258C%25E3%2581%259F%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yasuhiro%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZTM4Njc5YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yasuhiro Yamamoto</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜減色処理（006/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の6本目です。

 前回
https://zenn.dev/nyagato_00/articles/c5406005c08b12

 実装

 お題

ここでは画像の値を256^3から4^3、すなわちR,G,B in {32, 96, 160, 224}の各4値に減色せよ。 これは量子化操作である。 各値に関して、以下の様に定義する。

val = {  32  (  0 &lt;= val &lt;  64)
         96  ( 64 &lt;= val &lt; 128)
  ...]]></description><link>https://zenn.dev/nyagato_00/articles/de360085b46e19</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/de360085b46e19</guid><pubDate>Tue, 07 Jan 2025 11:02:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZKD3oPpy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E6%25B8%259B%25E8%2589%25B2%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588006%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item></channel></rss>