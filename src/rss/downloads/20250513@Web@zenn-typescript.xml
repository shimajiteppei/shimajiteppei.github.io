<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 13 May 2025 08:57:15 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Next.js×Python連携の無料最適解: Vercel+Render.comで無料デプロイする方法]]></title><description><![CDATA[
 Next.js×Pythonの無料最適解 - Vercel+Render.comの連携

 はじめに
nemuriです。
現在100日チャレンジをしていて、その結果をポートフォリオにして公開して5日目です。
今後pythonで書いたコードを表示したくなるだろうと思い、今日はその実装をしました。
フロントエンドにNext.js、バックエンドにPythonを使うアプリケーションを無料でデプロイする方法を知りたくありませんか？
本記事では、「NumPy計算機」の実装を通して、Vercel + Render.comを組み合わせたデプロイ手法を紹介します。

 背景: 直面した課題
当初の目標...]]></description><link>https://zenn.dev/nemuri/articles/80204dbc9c327f</link><guid isPermaLink="true">https://zenn.dev/nemuri/articles/80204dbc9c327f</guid><pubDate>Tue, 13 May 2025 06:26:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V_HFVU0X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25C3%2597Python%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25AE%25E7%2584%25A1%25E6%2596%2599%25E6%259C%2580%25E9%2581%25A9%25E8%25A7%25A3%253A%2520Vercel%252BRender.com%25E3%2581%25A7%25E7%2584%25A1%25E6%2596%2599%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nemuri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwYzRiMzQ4YTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nemuri</dc:creator></item><item><title><![CDATA[TypeScript の codemod ツール開発時の失敗談と得た知見メモ]]></title><description><![CDATA[
 Codemod とは
Codemod（コードモッド）とは、"Code Modification"（コード修正）の略語で、プログラムを使ってコードベース全体にわたる変更やリファクタリングを自動的に行うプロセスや、そのためのツールを指します。
手作業で一つ一つコードを修正する代わりに、スクリプト（codemodスクリプトやトランスフォームと呼ばれる）を実行することで、大規模なコードベースに対しても一貫性のある変更を効率的かつ正確に適用することを目的としています。
主な目的と用途:


APIの変更への追従: ライブラリやフレームワークがバージョンアップし、古いAPIが非推奨になったり、使...]]></description><link>https://zenn.dev/noshiro_piko/articles/typescript-codemod-development</link><guid isPermaLink="true">https://zenn.dev/noshiro_piko/articles/typescript-codemod-development</guid><pubDate>Tue, 13 May 2025 04:53:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K339g7qC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25AE%2520codemod%2520%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AE%25E5%25A4%25B1%25E6%2595%2597%25E8%25AB%2587%25E3%2581%25A8%25E5%25BE%2597%25E3%2581%259F%25E7%259F%25A5%25E8%25A6%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hideaki%2520Noshiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hIODg5WTZNWGM4YUZJb1M0dDl0Nm4tTWloS3pocGMyNXNtQ3BTSWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hideaki Noshiro</dc:creator></item><item><title><![CDATA[Next.js(RSC) x GrowthBookのリソース解放にusingキーワードを使う]]></title><description><![CDATA[あまり馴染みはないかもしれないが社内のNext.jsプロジェクトで GrowthBook というFeature Flag管理のSaaSを利用している。Next.jsのAppRouterや通常のNode.js版SDKも備えているので採用した。
RSCでのGrowthBookサンプルコードはこんな感じ
import Image from "next/image";
import { configureServerSideGrowthBook } from "./growthbookServer";
import { GrowthBook } from "@growthbook/growthb...]]></description><link>https://zenn.dev/bm_sms/articles/912692f938aaef</link><guid isPermaLink="true">https://zenn.dev/bm_sms/articles/912692f938aaef</guid><pubDate>Tue, 13 May 2025 04:51:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PKUzK0Mn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2528RSC%2529%2520x%2520GrowthBook%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E8%25A7%25A3%25E6%2594%25BE%25E3%2581%25ABusing%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:beer-bearz%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZTAzZGU0MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25A0%25E3%2583%25BB%25E3%2582%25A8%25E3%2582%25B9%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhMTJhNzYyMDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>beer-bearz</dc:creator></item><item><title><![CDATA[YAML, JSONの翻訳ファイルとNotionの翻訳DBを同期させる翻訳システムを自作した話]]></title><description><![CDATA[
 1. はじめに
株式会社Sally CTO の @aitaro です。普段は uzu-app.com や mdms.jp といったサービスを開発しています。
本記事では、Goの自作システム、i18next、slang で使用する yaml や json の翻訳ファイルをNotionと双方向に同期させるシステムをどのように構築したかを紹介します。
以前書いたウズ多言語化シリーズの記事はこちら→
https://zenn.dev/articles/879b388e184794

 2. 翻訳管理の課題
これまで翻訳ファイルの管理は yaml や json を手動で更新していました。しかし...]]></description><link>https://zenn.dev/uzu_tech/articles/3cdcb2fa33463d</link><guid isPermaLink="true">https://zenn.dev/uzu_tech/articles/3cdcb2fa33463d</guid><pubDate>Tue, 13 May 2025 02:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--djIlZ_Qr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YAML%252C%2520JSON%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A8Notion%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3DB%25E3%2582%2592%25E5%2590%258C%25E6%259C%259F%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Aitaro%2520Chaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NjI5NGIwZmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UZU%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dYWTBMZmk2THctQ1RUeVYyWjZBbmxTNkJzM0dIQVpMS24zUVRpLWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Aitaro Chaya</dc:creator></item><item><title><![CDATA[「Connect RPC×スキーマ駆動開発」の現場知見と設計思想]]></title><description><![CDATA[
 はじめに
こんにちは、GOGENでCTOをしている楠本（@zabio3）です。
GOGENでは、不動産売買取引というドメイン特有の複雑さを捉えるSaaS開発において、APIの設計・運用方針を極めて重要なテーマと捉えています。事業としてのスピードと品質の両方、フロントエンド・バックエンド間の滑らかな連携、そして複数サービス間の統合性を担保するため、私たちは Connect RPC を中核としたスキーマ駆動開発 を選択しました。
https://connectrpc.com/
この選択には、単なる技術的な興味を超えて、将来的なスケーラビリティやメンテナンス性への投資という明確な意図があり...]]></description><link>https://zenn.dev/gogen/articles/d509dbbbc09cfc</link><guid isPermaLink="true">https://zenn.dev/gogen/articles/d509dbbbc09cfc</guid><pubDate>Tue, 13 May 2025 00:52:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d2aMWwxY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CConnect%2520RPC%25C3%2597%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2580%258D%25E3%2581%25AE%25E7%258F%25BE%25E5%25A0%25B4%25E7%259F%25A5%25E8%25A6%258B%25E3%2581%25A8%25E8%25A8%25AD%25E8%25A8%2588%25E6%2580%259D%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:zabio3%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1YmI0ZTA2N2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GOGEN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0JMTzlFcFh1LUlZeEw2eXFHemtXQkZmRHY5SXptdm1paGNQUlNLSWU0TmtmNXhBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zabio3</dc:creator></item><item><title><![CDATA[巷では useEffect を気軽に使うなと騒がしい、ならいっそ完全に使うのをやめるのはどうだろう？]]></title><description><![CDATA[
 よし、こうなったら意地でも useEffect を使わないぞ
前回は fetch を useEffect で使わない記事を書きました。
https://zenn.dev/sora_kumo/articles/next-react-fetch
今回は、ref で拾ったノードに対するイベント処理も useEffect 無しで書いてみます。useSyncExternalStoreの subscribe に実質 useEffect と同等の機能があります。イベントの接続や解除が必要になったら、subscribe のインスタンスを更新すれば、コードが読みやすいかどうかは度外視するとして、同じよ...]]></description><link>https://zenn.dev/sora_kumo/articles/89f5e683952b79</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/89f5e683952b79</guid><pubDate>Tue, 13 May 2025 00:04:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NgVXlUBl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B7%25B7%25E3%2581%25A7%25E3%2581%25AF%2520useEffect%2520%25E3%2582%2592%25E6%25B0%2597%25E8%25BB%25BD%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AA%25E3%2581%25A8%25E9%25A8%2592%25E3%2581%258C%25E3%2581%2597%25E3%2581%2584%25E3%2580%2581%25E3%2581%25AA%25E3%2582%2589%25E3%2581%2584%25E3%2581%25A3%25E3%2581%259D%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2582%2592%25E3%2582%2584%25E3%2582%2581%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25A0%25E3%2582%258D%25E3%2581%2586%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[なぜ生成AIはTypeScriptでコードを書くのか？AI駆動開発に必要な最低限のTypeScript知識]]></title><description><![CDATA[
 TypeScriptはAI駆動開発に必須？
AI駆動スタイルでwebサイトやwebアプリを開発しようとした時に、TypeScriptが即時に選ばれた経験ありませんか？
もちろん条件や環境によっては他言語が選ばれますが、私は技術選定をお任せにした上で個人開発を行ってみると、ほぼすべてのプロジェクトでTypeScriptが選ばれました。

↑先日作ったwebアプリの言語選定(別途記事にする予定です)
私自身「JavaScriptをより扱いやすくした言語？」くらいの認識しかなかったのでこれを機に色々と調べてみたのですが、TypeScriptはAIにとって非常に扱いやすい言語 のようです。
...]]></description><link>https://zenn.dev/headwaters/articles/20250508-typescript-ai-development</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/20250508-typescript-ai-development</guid><pubDate>Mon, 12 May 2025 23:23:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2GlnJ8an--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AFTypeScript%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259FAI%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2581%25AETypeScript%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%259B%25E3%2581%25A8%25E3%2581%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZGJmYjNkNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>せとぅ</dc:creator></item><item><title><![CDATA[DynamoDBで実装する月末失効ポイントシステムの設計パターン]]></title><description><![CDATA[ポイント機能をゼロから実装するとき、データ構造や失効ロジックをどう組むかで迷いがちです。本記事では 「発行月を含め 12 か月目の月末に失効」 という最小構成を題材に、DynamoDB 上で高速に回る 月次バケット + ラベル移動方式 を解説します。

 代表的な 3 つの設計パターン
ポイントシステムの設計には、主に 3 つのアプローチがあります。それぞれの特徴と適したユースケースを理解することで、最適な設計を選択できます。



パターン
概要
向くケース
具体例と特徴




単一残高カラム
単純な加減算のみで残高を管理。履歴は保持せず、現在の残高のみを記録
小規模 / 履歴不要な...]]></description><link>https://zenn.dev/tokku5552/articles/point-ledger</link><guid isPermaLink="true">https://zenn.dev/tokku5552/articles/point-ledger</guid><pubDate>Mon, 12 May 2025 23:13:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jdQBvJQx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DynamoDB%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%259C%2588%25E6%259C%25AB%25E5%25A4%25B1%25E5%258A%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tokku5552%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2YmI5OWJjYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tokku5552</dc:creator></item><item><title><![CDATA[next-themesについてのメモ（`theme`と`resolvedTheme`の使い分け/Hydration Error対策）]]></title><description><![CDATA[ドキュメント読んで微妙にわからなかった部分の備忘録。

 TL;DR


themeは「何のテーマを選んでいるか」を返す(light or dark or system)
systemに明示的に切り替えたい場合などにはこっち


resolveThemeは「実際に何のテーマが使われているか」を返す( light or dark)
light/darkを切り替えたいだけならこっち


theme,resolveThemeを使用する処理はマウントされてからじゃないとダメ



 next-themes基礎知識
Next.js用のテーマ管理ライブラリです。App Routerならlayoutで...]]></description><link>https://zenn.dev/kofrah/articles/c94fecb88fbfaf</link><guid isPermaLink="true">https://zenn.dev/kofrah/articles/c94fecb88fbfaf</guid><pubDate>Mon, 12 May 2025 13:49:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--euh5Vvnm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:next-themes%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%2588%2560theme%2560%25E3%2581%25A8%2560resolvedTheme%2560%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%252FHydration...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kofrah%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNmY2YzBlYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kofrah</dc:creator></item><item><title><![CDATA[[メモ]: ??と||演算子のメモ]]></title><description><![CDATA[
 ??と||ような演算子のメモ
たまに使用するときに間違えるので簡単なメモ

 ??

ECMAScript2020(ES11)で追加された比較的新しい文法
左辺の値がnullかundefinedのときだけ右辺の値を返す
基本は左辺の値を返す

const result = user ?? "John Doe";
// userがnull | undefinedのときはJohn Doe"
// それ以外はuserを返す

 ||

論理和演算子
オペランドの値が1つでもtrueがある場合、trueになる。

false, 0, "", NaN, nullまたはundefinedはfal...]]></description><link>https://zenn.dev/mitate_gengaku/articles/js-nullish-operator-memo</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/js-nullish-operator-memo</guid><pubDate>Mon, 12 May 2025 13:12:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s9Ve-BCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E3%2583%25A1%25E3%2583%25A2%255D%253A%2520%253F%253F%25E3%2581%25A8%257C%257C%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[React Email で HTML メールを作成・送信する]]></title><description><![CDATA[
 React Email とは
https://react.email/
React Email は、React コンポーネントを使用してメールテンプレートを構築するためのフレームワークです。
HTML メールの複雑さを抽象化し、開発者が使い慣れた React でメールを作成できるようにするものです。
主な特徴は以下です。

React ベース: 使い慣れた React コンポーネントでメールを設計
レスポンシブ対応: 様々なデバイスでの表示に最適化
再利用可能なコンポーネント: 一貫したデザインを実現
型安全: TypeScript によるサポート
プレビュー機能: 開発中にリアルタ...]]></description><link>https://zenn.dev/microcms/articles/94d7f0b87fe31c</link><guid isPermaLink="true">https://zenn.dev/microcms/articles/94d7f0b87fe31c</guid><pubDate>Mon, 12 May 2025 11:47:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4DgBlW8D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Email%2520%25E3%2581%25A7%2520HTML%2520%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NWY4MDNiMWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEmicroCMS%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGU2OTJiOTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山とコード</dc:creator></item><item><title><![CDATA[React・TypeScriptでTodoアプリを作成しよう]]></title><description><![CDATA[もっとフロントエンド技術を磨いてユーザーの満足度を高めたい初心者の方に向けてチュートリアルを作成しました。
近年ではクライアントデバイスの性能向上によってユーザー体験の充実やサーバーの負荷を軽減させるなどが課題になっています。
Webアプリ開発でフロントエンドの技術は必須となりますのでこれを機にフロントエンド開発の方法を身につけましょう！
noteでも記事を書いてます！
https://note.com/kenquichi
（本サイトはアフィリエイト広告を利用しています）

 Reactとは？
Meta社（旧 Facebook）によって開発されたJavaScriptライブラリで、UI（ユ...]]></description><link>https://zenn.dev/headwaters/articles/f318042609654a</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/f318042609654a</guid><pubDate>Mon, 12 May 2025 11:12:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q2y08n9l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2583%25BBTypeScript%25E3%2581%25A7Todo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25B1%25E3%2583%25B3%25E5%2590%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTlSRFk5eEFXaDBwVGgyZnNJX0w2VnFXZmFfYWR4NG9Oc1JhQ1BVV3hkenNGa3hDLW49czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ケン吉</dc:creator></item><item><title><![CDATA[マインドマップアプリ: Jotai によるグローバルな状態管理入門(React Flow)]]></title><description><![CDATA[## 概要
このハンズオン形式の資料では、Figma 風のマインドマップアプリを構築します。
アプリでは、親要素ブロックに対し、子要素ブロックを繋げていくことで、関係性を視覚的に表現することができます。
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/handsonbook-mind-map</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/handsonbook-mind-map</guid><pubDate>Mon, 12 May 2025 10:30:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tZGVSOPf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yNWIzNmZmNzJjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[借金・貸付の管理(返済の予測も)が行える「借金ダッシュボード」を開発してみた。]]></title><description><![CDATA[
 借金・貸付の管理を手軽に行えるダッシュボード的なやつ
画面はこんな感じです。

下記の一連の流れを行うことが可能です。
借りているユーザーに対し、借入の取引履歴を作成(借金)
↓
借りているユーザーに対し、返済の取引履歴を作成(返済)
・
・
・
上記の流れを行うことにより、取引履歴が蓄積され、
借りている側 は、誰にどのぐらい借金しているのかがグラフで一目でわかり
貸している側 も、同様に誰にどのぐらい貸しているかを確認することができます。
また、取引履歴を用いて作成された今後の返済経過予測をグラフ上で確認できるため
貸している側は返済予定をイメージしやすくなり、返済状態の悪化にい...]]></description><link>https://zenn.dev/benjaaamin0518/articles/28a4d2df603fb7</link><guid isPermaLink="true">https://zenn.dev/benjaaamin0518/articles/28a4d2df603fb7</guid><pubDate>Mon, 12 May 2025 09:52:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_bctm9yh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%259F%25E9%2587%2591%25E3%2583%25BB%25E8%25B2%25B8%25E4%25BB%2598%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%2528%25E8%25BF%2594%25E6%25B8%2588%25E3%2581%25AE%25E4%25BA%2588%25E6%25B8%25AC%25E3%2582%2582%2529%25E3%2581%258C%25E8%25A1%258C%25E3%2581%2588%25E3%2582%258B%25E3%2580%258C%25E5%2580%259F%25E9%2587%2591%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2580%258D%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2599%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%259F%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4NmMzNmIxNmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ベンジャミン</dc:creator></item><item><title><![CDATA[GitフックをHusky + lint-stagedからLefthookへ移行したので使い方をご紹介]]></title><description><![CDATA[
 自己紹介
こんにちは！
TypeScriptが大好きなフリーランスの塩野です。
企業や官公庁／自治体のエネルギー調達・脱炭素化を支援するサービスを展開するエナーバンクという会社で業務委託に携わらせていただいています。
GitHubではsaltyshiomixというIDで生息しています。

 Gitフックとは
Gitフックとは、特定のアクションが発生した時にカスタムスクリプトを叩く方法を指します。
代表的な例としてはgit commitの直前（pre-commit）にLintやFormat、場合によってはユニットテストを動かしたりするようなものです。
本記事では、LintおよびForm...]]></description><link>https://zenn.dev/enerbank/articles/c2a3450d6e4298</link><guid isPermaLink="true">https://zenn.dev/enerbank/articles/c2a3450d6e4298</guid><pubDate>Mon, 12 May 2025 08:39:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RvKI2JGH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Git%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592Husky%2520%252B%2520lint-staged%25E3%2581%258B%25E3%2582%2589Lefthook%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2592%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25A1%25A9%25E9%2587%258E%2520%25E5%2590%2589%25E7%25A7%2580%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3Njk1M2IwMTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25B3%25E3%2582%25AF%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ctS2wtLWp5WkRrb2xmMEFKeHZCOWd6c3hUQ2FkUk9LczYxMkQ1dWs4PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>塩野 吉秀</dc:creator></item><item><title><![CDATA[遠隔支援サービスLINKLETのシステムアーキテクチャの紹介]]></title><description><![CDATA[
 はじめに
こんにちは、プロダクト開発部の大森です。
Fairy Devices（以降、当社とします）では首掛け型ウェアラブルデバイス「THINKLET」を開発しています。

THINKLETは先端についているカメラで装着者視点の映像を記録し、
首元の5chマイクと当社の持つ音声処理技術により、高騒音な現場環境においてもクリアに装着者の音声を集音することができます。
さらに4GLTE通信が行えるため、こうして記録した映像や音声をネットワークを通して共有することができます。
これらを利用すると、装着者はハンズフリーで手元の映像を遠隔地に共有することができます。
こうしたTHINKLETの...]]></description><link>https://zenn.dev/fairydevices/articles/7a59373fed1b6a</link><guid isPermaLink="true">https://zenn.dev/fairydevices/articles/7a59373fed1b6a</guid><pubDate>Mon, 12 May 2025 08:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jKREr1dK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2581%25A0%25E9%259A%2594%25E6%2594%25AF%25E6%258F%25B4%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9LINKLET%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:anraku%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MjE4ODkwNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25BB%25E3%2582%25BA%25E5%2585%25AC%25E5%25BC%258F%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlMjdkNDMyNjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>anraku</dc:creator></item><item><title><![CDATA[NestJS で絡みあったモジュールの循環参照を整理する]]></title><description><![CDATA[Ubie で副業として Backend For Frontend (BFF) サーバーの開発を担当している nissy-dev です。
この記事では、NestJS を使用したモジュラモノリスアーキテクチャにおいて、開発が進むにつれて増加した循環参照の問題と、その解決に向けた具体的な取り組みについて解説します。

 NestJS とモジュールの循環参照
ユビーでは、BFF の GraphQL サーバーを実装する際に、NestJS を利用したモジュラモノリスを採用しています。
https://zenn.dev/ubie_dev/articles/53c5953b037e38
モジュラモノリス...]]></description><link>https://zenn.dev/ubie_dev/articles/bye-circular-deps</link><guid isPermaLink="true">https://zenn.dev/ubie_dev/articles/bye-circular-deps</guid><pubDate>Mon, 12 May 2025 00:49:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TmG9UjQX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%2520%25E3%2581%25A7%25E7%25B5%25A1%25E3%2581%25BF%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E5%25BE%25AA%25E7%2592%25B0%25E5%258F%2582%25E7%2585%25A7%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nissy-dev%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOWMzMWRhODMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Ubie%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjMzg3ZjYwNjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nissy-dev</dc:creator></item><item><title><![CDATA[[FrontEnd Replace] エコシステム設計篇]]></title><description><![CDATA[こんにちは。FE チームの Maple です。
あなたは今、フロントエンド開発の迷宮で道に迷っていませんか？ライブラリの選定、アーキテクチャ設計、テスト戦略...様々な選択肢に囲まれ、何を選べば良いのか頭を抱えていることでしょう。
私たちのチームは、まさにそんな迷宮を抜け出すための"地図"を手に入れました。今回は、私たちが新しいフロントエンド環境の刷新にあたって辿り着いた、理想的なエコシステム設計についてお伝えします。

 なぜエコシステム設計が重要なのか
フロントエンド開発は、単に React や Vue といったフレームワークを選ぶだけでは終わりません。
真の開発効率と持続可能性は、...]]></description><link>https://zenn.dev/team_soda/articles/81f088024fff9c</link><guid isPermaLink="true">https://zenn.dev/team_soda/articles/81f088024fff9c</guid><pubDate>Mon, 12 May 2025 00:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--REtz9Drw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BFrontEnd%2520Replace%255D%2520%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E8%25A8%25AD%25E8%25A8%2588%25E7%25AF%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Maple%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYTM5ODQ3MWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SODA%2520Engineering%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyM2Y1N2EwYTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maple</dc:creator></item><item><title><![CDATA[AIの時代だからこそ、型システムがより厳格な静的型付け言語（GoやRustなど）が良いのでは？という話]]></title><description><![CDATA[
 はじめに
CursorのようなAIのコードエディタがめちゃくちゃ進化してきている、こんな時代だからこそ静的型付け言語、特に厳格な静的型付け言語であるRustとの相性が良いのでは？という話をポエム的に書いてみます。
この記事ではあえてRustに特化して比較や検討をしているのは、個人的な好みの問題です笑
今の現場では静的型付け言語であるTypeScriptを使っているけど、厳格な静的型付け言語ではないし、実装されているコードも現場や人によって異なることが多くて、AIと共創していくことを考えたときにベターな言語があるんじゃないかって思ってつらつら書いてみます。
（TypeScriptって本...]]></description><link>https://zenn.dev/dress_code/articles/9fcfe8a7288dbd</link><guid isPermaLink="true">https://zenn.dev/dress_code/articles/9fcfe8a7288dbd</guid><pubDate>Mon, 12 May 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5am7UhgL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25AE%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25A0%25E3%2581%258B%25E3%2582%2589%25E3%2581%2593%25E3%2581%259D%25E3%2580%2581%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%258C%25E3%2582%2588%25E3%2582%258A%25E5%258E%25B3%25E6%25A0%25BC%25E3%2581%25AA%25E9%259D%2599%25E7%259A%2584%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E8%25A8%2580%25E8%25AA%259E%25EF%25BC%2588Go%25E3%2582%2584Rust%25E3%2581%25AA%25E3%2581%25A9%25EF%25BC%2589%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25AF%25EF%25BC%259F%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2582%258F%25E3%2581%2586%25E3%2581%259D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiOGMxZmU1MDUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DRESS%2520CODE%2520TECH%2520BLOG%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5OThmMTk2YzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かわうそ</dc:creator></item><item><title><![CDATA[ReactでuseEffectを使わずにfetchする]]></title><description><![CDATA[
 useEffect について
React のコードを書くとき、useEffect は極力使わないことが推奨されています。では fetch でデータ取得の処理を行う場合はどうでしょう？結論として、使う必要はありません。

 天気予報を useEffect なしで取得する
useRefで必要な処理やデータを揃えて、useSyncExternalStoreに渡しています。subscribeで受け取っているonStoreChangeがイベント発火のキーになるので、コンポーネントに渡したい値を書き換えたら呼び出してやるという流れです。
useEffect と違って、取得項目を変えて再 fetc...]]></description><link>https://zenn.dev/sora_kumo/articles/next-react-fetch</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/next-react-fetch</guid><pubDate>Sun, 11 May 2025 23:52:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GqXCmqcM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7useEffect%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25ABfetch%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>空雲</dc:creator></item></channel></rss>