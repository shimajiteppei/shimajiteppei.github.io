<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 11 Jul 2025 03:06:38 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Dockerを使うことになった際に役立ちそうな知識]]></title><description><![CDATA[
 はじめに
本記事は社内勉強会でDockerの使い方をテーマに取り扱った内容を書き起こしたものです。
参画しているプロジェクトでDockerを使用しているため使い方を知りたい、もしくはDockerを使用することになったがイマイチ使い方、学び方がわからない、といった方の助けになれば幸いです。

 この記事で取り扱う内容
Dockerの機能や仕組みについて簡単に解説します。
また複数のコンテナイメージを用いてWebアプリケーションを実現する方法を説明します。

 Dockerとは何か
公式の日本語訳では下記のように記載されています。

アプリケーションの構築、共有、実行を加速
Dcoker...]]></description><link>https://zenn.dev/bita/articles/2ac26a638d1e7f</link><guid isPermaLink="true">https://zenn.dev/bita/articles/2ac26a638d1e7f</guid><pubDate>Fri, 11 Jul 2025 01:39:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8bBTYqkO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A1%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5Y2Q0YzJlZDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:bitA%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkVtQ0I1OUtaUzN5M3Fzcm43TW5RUUxiTWE4ajBOVjdDNGxBUm5tdz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takumi</dc:creator></item><item><title><![CDATA[Snowpark + Docker + Streamlit でWebアプリ開発環境構築]]></title><description><![CDATA[
 Snowpark + Docker + Streamlit でWebアプリ開発環境を構築してみた
Snowflake上のデータを活用したWebアプリケーションを開発したい！
本記事では、その基盤となるSnowpark + Docker + Streamlit 環境の構築手順を、初学者向けにわかりやすくまとめています。

💡対象読者

Snowpark や Docker にこれから触れる方
Snowflake を使ったデータアプリケーション開発に興味がある方
Streamlit でのWebアプリ開発を学びたいエンジニア



 📚 目次

環境構築
実装
トラブルシューティング
まとめ...]]></description><link>https://zenn.dev/1ie_1uv/articles/b2fddccbb6e264</link><guid isPermaLink="true">https://zenn.dev/1ie_1uv/articles/b2fddccbb6e264</guid><pubDate>Thu, 10 Jul 2025 12:16:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B1l9a0SE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowpark%2520%252B%2520Docker%2520%252B%2520Streamlit%2520%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Luv%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lUcGNWMFh3Q0tEWFF5NndZbGVsd0lGdXpUejNmX0Rxc0ZydG9JbkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Luv</dc:creator></item><item><title><![CDATA[デイトレーダーがチャートと出来高・株価から、pythonで投資銘柄を選定する方法]]></title><description><![CDATA[
 はじめに
こんにちは、日本株の個別株投資歴6年目のマチです。デイトレーダーやスイングトレーダーの皆さんは、どのように投資対象の銘柄を選んでいますか。私は「よく投資する銘柄リスト」から時間の許す限りチャートを眺めて決めていました。
本当はちゃんと、出来高と株価などでスクリーニングして、さらにチャートの形状で銘柄を絞り込みたいのですが、2025年7月現在ではチャートと出来高・株価などを組み合わせてスクリーニングできるサイトはあまり見かけないですよね。だから作りました。今回は、私が作ったスクリーニングのプログラムを紹介します。手順のイメージは以下の通りです。手順４の「目視による厳選」では、...]]></description><link>https://zenn.dev/stockdatalab/articles/20250712_tech_investor_selectcode</link><guid isPermaLink="true">https://zenn.dev/stockdatalab/articles/20250712_tech_investor_selectcode</guid><pubDate>Thu, 10 Jul 2025 10:00:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TmJQkDQC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2581%258C%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A8%25E5%2587%25BA%25E6%259D%25A5%25E9%25AB%2598%25E3%2583%25BB%25E6%25A0%25AA%25E4%25BE%25A1%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581python%25E3%2581%25A7%25E6%258A%2595%25E8%25B3%2587%25E9%258A%2598%25E6%259F%2584%25E3%2582%2592%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E5%258F%258E%25E9%259B%2586%25E3%2583%25A9%25E3%2583%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjRkZjY4MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株の情報収集ラボ</dc:creator></item><item><title><![CDATA[【docker + OrbStack】🐳 macOS（Orbstack）で cAdvisor を使って Docker コンテナをモニタリン]]></title><description><![CDATA[Docker コンテナの CPU やメモリ使用状況を可視化したい時に便利なのが cAdvisor です。
ただし、macOS + Orbstack の環境では Linux ネイティブとは異なり、cAdvisor の設定にいくつか注意点があります。
この記事では、Orbstack 環境でも cAdvisor を正常に動かし、コンテナの情報を取得できる設定方法を紹介します。


 ✅ 実行コマンド（Orbstack/macOS 向け）
以下のコマンドをターミナルで実行してください。
docker rm -f cadvisor

docker run -d \
  --name=cadviso...]]></description><link>https://zenn.dev/cruway/articles/74389341d41f19</link><guid isPermaLink="true">https://zenn.dev/cruway/articles/74389341d41f19</guid><pubDate>Thu, 10 Jul 2025 07:33:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EfmBsIit--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590docker%2520%252B%2520OrbStack%25E3%2580%2591%2520%2520macOS%25EF%25BC%2588Orbstack%25EF%25BC%2589%25E3%2581%25A7%2520cAdvisor%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Docke...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258B%25E3%2581%25B8%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NDg3OTFhZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くるへい</dc:creator></item><item><title><![CDATA[Dockerコンテナとホスト間のファイル共有・バックアップガイド]]></title><description><![CDATA[dockerのファイル共有やマウントに関しての備忘録メモです。
（ホスト側 /Users/user-name/ 部分は適宜自身の環境に変更下さい）

 目次
1. コンテナとホスト間でファイルをコピーする

単発ファイル・フォルダなら簡単に docker cp で直接コピー可能
双方向対応（ホスト→コンテナ、コンテナ→ホスト）
ボリューム全体コピーは整合性の問題があるため別手段が必要

2. バインドマウント

ホストのディレクトリをコンテナ内へ直接マウント
ホスト側を編集すると即コンテナ側に反映
開発用途に最適だが、本番では権限・セキュリティ管理が必要

3. ボリュームマウント

D...]]></description><link>https://zenn.dev/tech_mw/articles/f20460bf1882ae</link><guid isPermaLink="true">https://zenn.dev/tech_mw/articles/f20460bf1882ae</guid><pubDate>Thu, 10 Jul 2025 00:13:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YxXsDQap--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A8%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E9%2596%2593%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2585%25B1%25E6%259C%2589%25E3%2583%25BB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tech_mw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1OTcxY2VmY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tech_mw</dc:creator></item><item><title><![CDATA[私が考えたPythonバックエンド環境(FastAPI)]]></title><description><![CDATA[
 はじめに
https://github.com/dbd-fish/templete_web_system
本プロジェクトのFastAPIを中心としたWebバックエンド環境を紹介します。
１人で考えたため、些細なことでも何か意見があればコメントして頂きたいです。
本記事の大部分は生成AIに書かせてみました。
READMEっぽくなってしまう箇所はある程度妥協して筆者が微調整をしました。

 全体像
本プロジェクトはDocker Composeを使用したマルチコンテナ構成のWebシステム開発テンプレートです。
フロントエンド、バックエンド、データベース、テスト環境を統合管理し、効率的な開発...]]></description><link>https://zenn.dev/dbd_fish/articles/e2e034db3ec2dc</link><guid isPermaLink="true">https://zenn.dev/dbd_fish/articles/e2e034db3ec2dc</guid><pubDate>Wed, 09 Jul 2025 22:56:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L4M8OZH5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%2581%25E3%2581%258C%25E8%2580%2583%25E3%2581%2588%25E3%2581%259FPython%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%2592%25B0%25E5%25A2%2583%2528FastAPI%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258F%25A4%25E6%25B5%25B7%25E3%2580%2580%25E5%25B4%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMmY4MjFjNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>古海　崚</dc:creator></item><item><title><![CDATA[Gemini CLIをDockerで動かすガイド（cursor連携・npmインストール対応）]]></title><description><![CDATA[GitHubはこちら(https://github.com/s-mekw/My_GeminiCLI_Dockerfile)
このドキュメントでは、Dockerを使ってGemini CLIを動かす方法を紹介します。
Gemini CLIの公式GitHubにはDockerfileが用意されていますが、その内容を見ると「独自にビルドしたtgzパッケージ」を使ってGemini CLIをインストールする方式になっています。
つまり、公式のDockerfileを利用する場合は、

Gemini CLIのソースコードをクローン
ビルドしてtgzファイルを生成
そのディレクトリでDockerビルドを実行...]]></description><link>https://zenn.dev/s_mekw/articles/eb746b9aecfc64</link><guid isPermaLink="true">https://zenn.dev/s_mekw/articles/eb746b9aecfc64</guid><pubDate>Wed, 09 Jul 2025 13:40:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XE6DHtoq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemini%2520CLI%25E3%2582%2592Docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25EF%25BC%2588cursor%25E9%2580%25A3%25E6%2590%25BA%25E3%2583%25BBnpm%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_mekw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlMTJlMzAxNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s_mekw</dc:creator></item><item><title><![CDATA[DevContainer with DooDでClaude CodeとGemini CLIからAIコーディング]]></title><description><![CDATA[
 はじめに
Claude CodeやGeminiCLIといった、AIによるコーディング補助が進化する中、複数の開発言語・環境を効率よく管理する仕組みが求められています。本記事では、DooD（Docker-outside-of-Docker）構成を用い、メインのdevcontainerに配置されたClaude CodeやGemini CLIから他のDockerコンテナの管理とコンテナ内のプログラムを開発する方法を紹介します。
この構成では、メインのdevcontainerにGemini CLIやClaude CodeなどのAIコーディングツールのみを配置することで、クリーンな環境を保ちつ...]]></description><link>https://zenn.dev/nishina__n/articles/b5b20bc79091f2</link><guid isPermaLink="true">https://zenn.dev/nishina__n/articles/b5b20bc79091f2</guid><pubDate>Wed, 09 Jul 2025 12:16:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nobzVbzS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DevContainer%2520with%2520DooD%25E3%2581%25A7Claude%2520Code%25E3%2581%25A8Gemini%2520CLI%25E3%2581%258B%25E3%2582%2589AI%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nishina%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpfMGJQeWs1ZWgxWms1MUdVaVRpdVd1cjdobVFScmRMRDZUbndMWjNRMFhjb2Z3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nishina</dc:creator></item><item><title><![CDATA[Docker compose でPostgreSQLをサービスに入れたときのヘルスチェック方法]]></title><description><![CDATA[2023/01/31に書いていたスクラップを改めて記事化したものです（当時の情報ベースです）
Docker composeで、DBコンテナにPostgreSQLを使っていると、初回起動時のあれこれで時間がかかってなかなかAPPコンテナから接続できる状態になるまで時間がかかること、ありませんか？（ありました）
APPコンテナの初期化処理に、DB接続依存部分があると、うまくいかず中途半端なことになってしまうことありませんか？（ありました）
APPはDjangoだったので、Pythonで以下のスクリプトを用意し、APPコンテナの起動時に実行されるスクリプトでDBの起動を待つ仕組みを挟んでいまし...]]></description><link>https://zenn.dev/kacchan822/articles/9ea872377d77a5</link><guid isPermaLink="true">https://zenn.dev/kacchan822/articles/9ea872377d77a5</guid><pubDate>Wed, 09 Jul 2025 08:04:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RIFI0Ejb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520compose%2520%25E3%2581%25A7PostgreSQL%25E3%2582%2592%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2598%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kacchan822%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXpIc2Y3MHY4M1ZKZUNiSVB2b2k3UmtGVVpiYjI2MENVWnkxTzBRUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kacchan822</dc:creator></item><item><title><![CDATA[便利なcompose.yaml の機能]]></title><description><![CDATA[
 なんの記事？
Docker compose の管理・運用が楽になる細かい話のまとめ

 compose の機能

 volumes
コンテナとホストOS間でデータを共有する
volume の種類は3通りある




特徴
保存先
利用例
削除方法




ボリュームマウント
Dockerによって管理される永続化ストレージ
/var/lib/docker/volumes
DBデータ、ログ
docker volume rm &lt;ボリューム名&gt;


バインドマウント
ホストOSのファイルシステム上の任意のディレクトリをコンテナにマウント
任意のホストディレクトリ
設定ファイル
ホ...]]></description><link>https://zenn.dev/slopwelljp/articles/01f30af8228fb4</link><guid isPermaLink="true">https://zenn.dev/slopwelljp/articles/01f30af8228fb4</guid><pubDate>Tue, 08 Jul 2025 13:19:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XBnh5sz_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAcompose.yaml%2520%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2582%258D%25E3%2581%25A3%25E3%2581%25BA%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlYTkxZDE2M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すろっぺる</dc:creator></item><item><title><![CDATA[開発環境としてのDocker運用ベストプラクティス]]></title><description><![CDATA[
 概要
ホスト側のワーキングディレクトリを，コンテナ内にバインドして開発できると便利です．ところが，コンテナのデフォルトユーザはrootなので，コンテナ内からファイルを作成すると，所有者がrootになってしまいます．この問題への対応方法はいくつかあるのですが，VSCodeと組み合わせると一筋縄ではいかなかったので，知見を共有します．

 最小構成

 ファイル構成
project_hoge
├── .devcontainer.json
├── Dockerfile
├── compose.yaml
└── entrypoint.sh

.devcontainer.json
{
    ...]]></description><link>https://zenn.dev/sotohi/articles/dfef50ee4fadab</link><guid isPermaLink="true">https://zenn.dev/sotohi/articles/dfef50ee4fadab</guid><pubDate>Tue, 08 Jul 2025 09:29:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2WFnr7UM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AEDocker%25E9%2581%258B%25E7%2594%25A8%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sotohi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzdqTmF6T1IyVi1jSmJoZ2k2QW40Y29xajlfWGU5WGQtamNqZjJXc0lsRlduNktpZmk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sotohi</dc:creator></item><item><title><![CDATA[コンテナへ別PCからssh接続]]></title><description><![CDATA[
 はじめに
最近記事にしていた作業のまとめみたいな感じです。

２台のパソコンを開発用と通常用で使います
通常用には vscode 以外の開発関連のアプリは入れません
開発用は別の部屋にある（基本作業はリモートデスクトップ）
開発作業は vscode の拡張機能の remote-ssh でします
開発用には docker を使って開発環境はその中につくります


 構成

 開発用

windows11 pro
sshd はなし
powershell7
wsl2 (ネットワークは bridged)

ubuntu 24.04
sshd
docker (docker desktop では...]]></description><link>https://zenn.dev/yukip/articles/20250708-2-container-ssh</link><guid isPermaLink="true">https://zenn.dev/yukip/articles/20250708-2-container-ssh</guid><pubDate>Tue, 08 Jul 2025 08:47:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y6Tw-joP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25B8%25E5%2588%25A5PC%25E3%2581%258B%25E3%2582%2589ssh%25E6%258E%25A5%25E7%25B6%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2RSb0g4ZS15b0VfTXR0ZDZGeXFZdzR2R0pfVWZJRHlfNmFyYlpFWUdJd1U0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yukip</dc:creator></item><item><title><![CDATA[GitHub MCPでClaude Codeがもっと便利に！ターミナルから直接GitHub操作する方法]]></title><description><![CDATA[
 GitHubのPR書くの面倒ですよね？
毎回GitHubのwebページ開いて、ファイル確認して、PRの説明書いて...といった作業が煩雑に感じることはありませんか？
そんな時にGitHub MCPをClaude Codeで使うと、ターミナルから直接GitHubのリポジトリをいじれるようになります。「このリポジトリのREADME見て」という指示で内容確認ができ、「PRを作って」と指示すれば自動的にプルリクエストを作成してくれます。
CLI派の方にはとても便利な機能です。今回はその設定方法について詳しく解説します。

 GitHub MCPについて
GitHub MCPは、Model C...]]></description><link>https://zenn.dev/gmomedia/articles/github-mcp-setup-guide</link><guid isPermaLink="true">https://zenn.dev/gmomedia/articles/github-mcp-setup-guide</guid><pubDate>Tue, 08 Jul 2025 07:17:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gl479uGE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520MCP%25E3%2581%25A7Claude%2520Code%25E3%2581%258C%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%25EF%25BC%2581%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E7%259B%25B4%25E6%258E%25A5GitHub%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kaz%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzOGEzNzc5MTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GMO%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0swb0UwbE9EUXBCZDRxZC1Dd1drVXZyVFdmVGM5c2Vad01HQVQtZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaz</dc:creator></item><item><title><![CDATA[【実測】C#エンジニアがDockerを学び、マルチステージビルドで379MBまで軽量化]]></title><description><![CDATA[
 📝 C# TodoアプリのDocker化

Dockerの本を一冊読み基礎的なことがさらっと分かったので、主に業務で使っているC#を用いて Docker環境を作ることにしました。
本件が完了次第Goでも同様のアプリを作り、どのような差が出るのか調査していく予定です。

 🙋🏽‍♂️ 私の簡単なプロフィール


エンジニア歴4ヶ月目（事前に約半年自己学習）
業務で使用している言語はC#
バックエンドが好き


 ☝️ 実践しようと思った背景


Dockerの実用化・知識定着目的
この後GoでもTodoアプリのDocker化を行うが、その差を見たかった


 🎯 この記事で学べること
...]]></description><link>https://zenn.dev/some55/articles/b84b175c4b83ec</link><guid isPermaLink="true">https://zenn.dev/some55/articles/b84b175c4b83ec</guid><pubDate>Mon, 07 Jul 2025 23:34:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tpo1CZJ3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%259F%25E6%25B8%25AC%25E3%2580%2591C%2523%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258CDocker%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B3%25E3%2580%2581%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A7379MB%25E3%2581%25BE%25E3%2581%25A7%25E8%25BB%25BD%25E9%2587%258F%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:some%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzNWYzNjQ4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>some</dc:creator></item><item><title><![CDATA[【エンジニア初学者】開発ワークフローとツール]]></title><description><![CDATA[!
この記事はエンジニア初学者が学んだことをまとめたアウトプットです。
同じようにこれから学ぶ人の参考になれば嬉しいです。

ソフトウェア開発では、効率的で品質の高いプロダクトを作るために、いろいろなツールやワークフローが活用されています。
この記事では、その中でも特に重要なDocker・Git・GitHub Actions・テストについて、エンジニア初学者が学んだことをアウトプットしています。

 Dockerとその関連ツール

 Dockerとは
Dockerは、アプリケーションをコンテナという単位で実行できるプラットフォームです。
従来は「アプリは自分のパソコンでは動くのに、他の人...]]></description><link>https://zenn.dev/hitsuzi_meme/articles/ece8706245af81</link><guid isPermaLink="true">https://zenn.dev/hitsuzi_meme/articles/ece8706245af81</guid><pubDate>Mon, 07 Jul 2025 14:00:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xViITFYx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2580%2591%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25A8%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzYmI2MGFhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>め</dc:creator></item><item><title><![CDATA[別PCからコンテナにsshで接続]]></title><description><![CDATA[
 はじめに
別の方法で作業をするので、環境をつぶす前にメモとしてだけ残します。

 別PCのコンテナにvscodeで接続する
windows11 pro で動いているコンテナに、別PCの VSCODE で ssh 接続し、コンテナ内で開発などをしたかった。

 windows11 pro

sshd サービスを有効化

New-NetFirewallRule -DisplayName "ContainerSSH(2220-2229)" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 2220-2229 で ポートをあけ...]]></description><link>https://zenn.dev/yukip/articles/20250707-1-docker-ssh</link><guid isPermaLink="true">https://zenn.dev/yukip/articles/20250707-1-docker-ssh</guid><pubDate>Mon, 07 Jul 2025 13:34:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rgGE7zgG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%25A5PC%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25ABssh%25E3%2581%25A7%25E6%258E%25A5%25E7%25B6%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2RSb0g4ZS15b0VfTXR0ZDZGeXFZdzR2R0pfVWZJRHlfNmFyYlpFWUdJd1U0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yukip</dc:creator></item><item><title><![CDATA[Claude Code の開発用コンテナ設定(ターミナルから実行用)]]></title><description><![CDATA[
 はじめに
Anthropic 公式の Claude Code DevContainer 設定 は VS Code での利用を前提としています。私は VS Code を使っていないため、これをベースに以下の改善を加えました。


ターミナルから直接起動できるようにアレンジ
Node.js のバージョン自動同期
Rust／Gemini CLI などの追加ツール
動的ファイアウォール管理
ホスト macOS で効果音再生

本記事では、公式版を拡張した scripts/claude_dev_container のカスタマイズ内容と実装方法を紹介します。

 ファイル構成
公式版（Docke...]]></description><link>https://zenn.dev/yourstand_blog/articles/claude-code-dev-container</link><guid isPermaLink="true">https://zenn.dev/yourstand_blog/articles/claude-code-dev-container</guid><pubDate>Mon, 07 Jul 2025 10:26:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yngd_lxo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%2520%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2594%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E8%25A8%25AD%25E5%25AE%259A%2528%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A1%258C%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kazuhide%2520Oki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MzU3MDc4NmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Yourstand%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MDc4b2RaZHhabTZhUGg1cW1LZFMyeTM1SHF2Z2x1dGFkZ2YyMzlNekU9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuhide Oki</dc:creator></item><item><title><![CDATA[なぜDocker in Dockerで親Dockerの下位のフォルダに子Dockerのボリュームマウントができないのか]]></title><description><![CDATA[
Docker in Dockerで親Dockerの下層のフォルダに子Dockerのvolumeをマウントしようとしてうまくいかなかった理由を記載します。この問題に当たった時はDevcontainer in Devcontainerでしたが、根本はDockerの制約であると理解しています。

 問題が発生したとき
Docker環境1からさらにDocker環境2を開いて、Docker環境2のボリュームマウントをDocker環境1の下位として見えているフォルダとして、フォルダを共通化しようとした。

 問題が発生した時の環境構造
WSL → Docker環境1 → Docker環境2
この3...]]></description><link>https://zenn.dev/nishina__n/articles/ce5d3fd2eb1c20</link><guid isPermaLink="true">https://zenn.dev/nishina__n/articles/ce5d3fd2eb1c20</guid><pubDate>Mon, 07 Jul 2025 05:22:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_clcbmYU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CDocker%2520in%2520Docker%25E3%2581%25A7%25E8%25A6%25AADocker%25E3%2581%25AE%25E4%25B8%258B%25E4%25BD%258D%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25AB%25E5%25AD%2590Docker%25E3%2581%25AE%25E3%2583%259C%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%259E%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nishina%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpfMGJQeWs1ZWgxWms1MUdVaVRpdVd1cjdobVFScmRMRDZUbndMWjNRMFhjb2Z3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nishina</dc:creator></item><item><title><![CDATA[[続き] Misoca API v3を使って、請求書を複製し続けたくなった]]></title><description><![CDATA[こんにちは☀️
TRUSTART株式会社のみつです！
前回の記事では、Misoca API v3を使ってみたり、請求書の複製をしてみたりしました。
せっかくなので実際に使いたい〜〜と思い、さらに気分で実装を続けている記事です！

 前回書いた記事
https://zenn.dev/trustart_dev/articles/ef4a4ffbf386b4

 前回まで
前回は、

認証までしてみる
トークンを取得してみる
リフレッシュトークンを取得して、使ってみる
請求書を取得してみる
請求書を複製してみる

をしました。
今回は、そのリフレッシュトークンが切れない（ローカルの実行では、....]]></description><link>https://zenn.dev/trustart_dev/articles/17f56412010254</link><guid isPermaLink="true">https://zenn.dev/trustart_dev/articles/17f56412010254</guid><pubDate>Mon, 07 Jul 2025 00:45:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z9f0ZI3c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B6%259A%25E3%2581%258D%255D%2520Misoca%2520API%2520v3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E8%25AB%258B%25E6%25B1%2582%25E6%259B%25B8%25E3%2582%2592%25E8%25A4%2587%25E8%25A3%25BD%25E3%2581%2597%25E7%25B6%259A%25E3%2581%2591%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mi2__user%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4Y2I1MTc4ODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TRUSTART%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4Mzg0MzQ2ZDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mi2__user</dc:creator></item><item><title><![CDATA[そもそもホストOSで動かさない！DevContainer上でClaude Code！]]></title><description><![CDATA[
 はじめに
Claude Code（やその他のAIエージェント）をローカル環境で使う際、
最近頻繁に話題に上がる、rm -rf ~/ のようなコマンドを提案・実行されるリスク。
確かにこれは怖い話ではありますが、冷静に対応すれば十分に防げる問題でもあります。
この記事では、その一つのシンプルで効果的な解決策としてDevContainer上で実行するというお話をします。

 どのような問題があるのか？
Claude Codeや他のAI開発アシスタントは、自然言語のプロンプトに基づき、文章やコマンド、プログラムなどを生成します。
場合によっては、生成したものを直接実行したり、実行を補助した...]]></description><link>https://zenn.dev/ayaextech_fill/articles/claude-code-devcontainer-safety</link><guid isPermaLink="true">https://zenn.dev/ayaextech_fill/articles/claude-code-devcontainer-safety</guid><pubDate>Sun, 06 Jul 2025 17:51:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o3p8ZURi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2582%2582%25E3%2581%259D%25E3%2582%2582%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588OS%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2595%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581DevContainer%25E4%25B8%258A%25E3%2581%25A7Claude%2520Code%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B3%25A1%25E6%25B2%25AB%25E4%25BA%25AC%25E6%25B0%25B4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMDA2ZmJiNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>泡沫京水</dc:creator></item></channel></rss>