<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 28 Jan 2025 04:23:49 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[WGPU] 学習リソース]]></title><description><![CDATA[
 WGPUは情報が少ない
WGPUはrust製のクロスプラットフォームなグラフィックスAPIです。rustでゲーム開発を行う場合必要になります。WebGPUをベースにしているため、学習リソースが少ないことが難点です。

 初心者向けの教材リンク
いくつか初心者向けの学習リソースを見つけたので共有します。


WebGPU fundamentals
WebGPUの解説です。親切な説明がわかりやすいです。

WGPU examples
WGPUのリポジトリにあるサンプルです。実際にどのように使うのか学習できます。

Learn WGPU(ja)
日本語でWGPUを実際に扱う方法を解説してい...]]></description><link>https://zenn.dev/omini/articles/8c866e2d2060aa</link><guid isPermaLink="true">https://zenn.dev/omini/articles/8c866e2d2060aa</guid><pubDate>Sun, 26 Jan 2025 20:28:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Mav1q22s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BWGPU%255D%2520%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:omini%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvby5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>omini</dc:creator></item><item><title><![CDATA[【Rust】アプリケーションのDBトランザクション管理の方法を考える]]></title><description><![CDATA[こんにちは。
今回はRustで構築したWebアプリケーションにおいて、DBのトランザクション管理の手法を検討、実装しました。結論としては、完全に満足できる形では実装できていませんが、試行錯誤した結果をまとめます。改善可能な点があればぜひコメントにてご指摘ください。

 前提

Rust 1.81
Actix Web 4.9.0
SeaORM 1.1.3
PostgreSQL 17.0

ORMの選択肢としてはDieselもありますが、アプリケーション全体をActix Webによって非同期ベースで構築していたため、同じように非同期で実装可能なSeaORMを選択しました。
https://w...]]></description><link>https://zenn.dev/penysho/articles/a48ca73b757656</link><guid isPermaLink="true">https://zenn.dev/penysho/articles/a48ca73b757656</guid><pubDate>Sun, 26 Jan 2025 16:30:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---esUnB5v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rust%25E3%2580%2591%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AEDB%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2598%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZWRiMmQ4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こじろう</dc:creator></item><item><title><![CDATA[失われたメトリクスのケース: Rustクロージャーの謎]]></title><description><![CDATA[
 問題 - 不正確なメトリクス
RisingWaveのようなストリーミングデータベースでは、正確なメトリクスは単なる便利なものではなく、パフォーマンスの監視、ボトルネックの特定、システムがリアルタイムでスムーズに動作することを確保するために不可欠です。これは、車のダッシュボードの計器のようなもので、エンジンの下で何が起こっているのかをリアルタイムでフィードバックしてくれます。私たちが監視している重要な項目の1つは、ストレージ層からのデータ取得速度で、これはリアルタイムシステムにとって非常に重要です。
最近、奇妙な状況に遭遇しました：ストレージメトリクスの1つがゼロを報告しており、データ...]]></description><link>https://zenn.dev/rwcolinpeng/articles/c83805562b4060</link><guid isPermaLink="true">https://zenn.dev/rwcolinpeng/articles/c83805562b4060</guid><pubDate>Sun, 26 Jan 2025 11:35:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4WBDy9Ys--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25B1%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E3%2583%25A1%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%253A%2520Rust%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25AE%25E8%25AC%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:RisingWave%2520Labs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZmFjMDNiZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>RisingWave Labs</dc:creator></item><item><title><![CDATA[ABC390:Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 390のA~E問題をRustで解いた際の解法をまとめました。

 A問題

問題

https://atcoder.jp/contests/abc390/tasks/abc390_a

解説

整数列 A について、隣接する2つの要素を実際に交換して、昇順に並び替えたものと一致するかどうかをチェックします。
一致した場合はその時点で Yes と出力し、違った場合は元の状態に戻します。この操作を全ての隣接する要素のペアに対して試みます。

コード

use proconio::input;

fn main() {
    input!{
...]]></description><link>https://zenn.dev/nakst_hide/articles/03a7154d33838c</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/03a7154d33838c</guid><pubDate>Sun, 26 Jan 2025 11:15:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TotHPvV_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC390%253ARust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[Internet Computer Canister開発 Rust編]]></title><description><![CDATA[Cloud 3.0（分散型クラウド）を謳うInternet Computer上で動作するアプリケーションをRustで開発する方法を解説します]]></description><link>https://zenn.dev/halifax/books/icpbook-rust</link><guid isPermaLink="true">https://zenn.dev/halifax/books/icpbook-rust</guid><pubDate>Sun, 26 Jan 2025 11:12:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ioZJIGUh--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lOGYxMjc4ZGY4LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>halifax</dc:creator></item><item><title><![CDATA[Rustで最小二乗法を実装]]></title><description><![CDATA[備忘録です。
use nalgebra::{DMatrix, DVector, LU};

/// NumPyの `polyfit` を再現する関数
///
/// # 引数
///
/// * `x`: x座標のデータ点のスライス
/// * `y`: y座標のデータ点のスライス
/// * `degree`: 近似する多項式の次数
///
/// # 戻り値
///
/// * `Result&lt;Vec&lt;f64&gt;, &amp;'static str&gt;`:
///     - `Ok(Vec&lt;f64&gt;)`: 多項式係数（次数の高い順）を格納したベクタ
...]]></description><link>https://zenn.dev/miseuser/articles/a7984d1c87d254</link><guid isPermaLink="true">https://zenn.dev/miseuser/articles/a7984d1c87d254</guid><pubDate>Sun, 26 Jan 2025 11:09:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QEp7Znzv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E6%259C%2580%25E5%25B0%258F%25E4%25BA%258C%25E4%25B9%2597%25E6%25B3%2595%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:user%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDZXb1czOEUtNHpaS18yM1kwR2tGTnJBR3BNTEUzNjJPMGlPR0UyY19keG81WDhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>user</dc:creator></item><item><title><![CDATA[Effective Rustを読んだ]]></title><description><![CDATA[
 はじめに
Effective Rustを読んで、個人的に良かったところを備忘録として残す。
https://www.oreilly.co.jp/books/9784814400942/

 トレイト制約の捉え方

オブジェクト指向言語から来たプログラマは、トレイト制約とインターフェイスを混同しがちだ。
このようなトレイト制約を「Shape is-a Draw」（ShapeはDrawの一種）だと間違って捉えてしまう。
この場合の2つの型の関係は、「Shape also-implements Draw」（ShapeはDrawも実装している）という意味だと思ったほうがいい。

trait ...]]></description><link>https://zenn.dev/techlead/articles/2025-01-26-rust-book-effective-rust</link><guid isPermaLink="true">https://zenn.dev/techlead/articles/2025-01-26-rust-book-effective-rust</guid><pubDate>Sat, 25 Jan 2025 16:28:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LTwLxkK_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Effective%2520Rust%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25B4%25E3%2583%25AA%25E3%2583%25A9%2540%25E3%2583%259F%25E3%2582%25B9%25E3%2583%2589%2520%2520%25E3%2583%259F%25E3%2582%25B9%25E3%2583%2589%2520%2520%25E3%2583%259F%25E3%2582%25B9%25E3%2583%2589%2520...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmODRjMjM5ZTAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNGE3Zjg2ODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゴリラ@ミスド🍩 ミスド🍩 ミスド🍩 ミスド🍩 ミスド🍩</dc:creator></item><item><title><![CDATA[FlexiSpotの昇降デスクE8をiPhoneから操作する]]></title><description><![CDATA[
 概要
iPhoneやMacなどのssh接続可能なデバイスからFlexSpotの電動昇降デスク(E8)を制御します。
下の画像の通り、iPhoneのホーム画面にショートカットを設置することで、リモコンに触ることなくプリセットを選択できます。


!
現時点(2025/1)ではプリセット 1,2,座り,立ちまでしか作成できていません
UP,DOWNを押して高さ調査するのは別途調査中です


 必要なもの

Raspberry Pi model 3

Rust環境


FlexiSpot
LANケーブル(RJ45型プラグ)
GPIOピンとLANケーブルを接続する何か


 手順

 Fle...]]></description><link>https://zenn.dev/junnakarai/articles/f19c6c669bab63</link><guid isPermaLink="true">https://zenn.dev/junnakarai/articles/f19c6c669bab63</guid><pubDate>Sat, 25 Jan 2025 13:48:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R9_9IPFR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FlexiSpot%25E3%2581%25AE%25E6%2598%2587%25E9%2599%258D%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AFE8%25E3%2582%2592iPhone%25E3%2581%258B%25E3%2582%2589%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun</dc:creator></item><item><title><![CDATA[Rust版polarsでデータフレームからユニークなカテゴリ列（vec型データ）を取得する方法]]></title><description><![CDATA[
 1.はじめに
Rust版Polarsでデータフレームの数値型や文字列型の列から、ユニークなカテゴリ列を Vec 型で取得したい場合があります。
しかし、Polarsが扱うデータ型から直接 Vec 型に変換するメソッドが見当たらなかったため、Vec 型で取得するコードを作成しました。（もし、直接変換するメソッドがあればご教授いただけますと幸いです。）

 2. cargo.toml
今回は LazyFrame を使用するため、features に lazy を指定します。
[dependencies]
polars = { version = "0.45.1", features = ...]]></description><link>https://zenn.dev/beginote/articles/12dc8627cdefe3</link><guid isPermaLink="true">https://zenn.dev/beginote/articles/12dc8627cdefe3</guid><pubDate>Sat, 25 Jan 2025 01:48:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uXT-pWx2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E7%2589%2588polars%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A6%25E3%2583%258B%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AA%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E5%2588%2597%25EF%25BC%2588vec%25E5%259E%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zone%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDRQazlDa2Fhdm9tRENjX0kzYVh3U1BHcFpDZDdvcnVJalNEYmtmV1NDPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zone</dc:creator></item><item><title><![CDATA[さまざまな配列用にazikを簡単に実装するアプリを作りました]]></title><description><![CDATA[
 azik_generatorが完成したぞ！！
やったーーーーーーーーーーーーー
おめでとーーーーーーーーーーーーー
ありがとーーーーーーーーーーーーーー

 とりあえずリポジトリ
azik_generator
これです

 使い方

 まずインストール
まずCargoは入れといてください。
みなRustを信仰しろ。
CargoのインストールはRustの公式サイト
こっからそれっぽくやったら出来るよ
Cargo入れたらこれ
cargo install azik_generator

 したら
Azikの割り当てを設定するためのJsonを書きます
まきゆきAZIK4大西を設定するためのJ...]]></description><link>https://zenn.dev/maki10645/articles/a46204884be162</link><guid isPermaLink="true">https://zenn.dev/maki10645/articles/a46204884be162</guid><pubDate>Fri, 24 Jan 2025 10:09:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IXX-jJkZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2595%25E3%2581%25BE%25E3%2581%2596%25E3%2581%25BE%25E3%2581%25AA%25E9%2585%258D%25E5%2588%2597%25E7%2594%25A8%25E3%2581%25ABazik%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVdVSlFjSU9wbWhyR2N5T0VPeXVXZnBsbDZscGdWTVpwcHRXTFdYRmxhZzNzbTNVZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まき</dc:creator></item><item><title><![CDATA[ISUCON14 をベンチマーカーの限界を超えて最適化した話]]></title><description><![CDATA[
 はじめに
2024-12-08 に開催された ISUCON 14 にチーム最上川(@kawaemon, @shun-shobon, @re-taro)で参加しました。今回が ISUCON 初参加でした。本番では悔しくもデータ保持違反[1]で失格でしたが、スコア順位としては 37,127 点で全体 8 / 834 位、学生 2 / 99 位 でした。
また、その後 1 ヶ月程度に渡って開催された感想戦[2]においては、850,573 点で全体 2 位、学生 1 位でした。
この点数は、感想戦ベンチマーカー（インスタンス）のほぼ測定限界となっています。
筆者ローカルでは約 180 万点ま...]]></description><link>https://zenn.dev/kawaemon/articles/529fd6a12ac43b</link><guid isPermaLink="true">https://zenn.dev/kawaemon/articles/529fd6a12ac43b</guid><pubDate>Fri, 24 Jan 2025 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rIDQCMpg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ISUCON14%2520%25E3%2582%2592%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25AE%25E9%2599%2590%25E7%2595%258C%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2588%25E3%2581%25A6%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2582%258F%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYjg1M2UwNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かわえもん</dc:creator></item><item><title><![CDATA[RustでWebスクレイピング]]></title><description><![CDATA[
 概要
Rust(1.84.0)を用いてWebスクレイピングを行うためのライブラリを紹介します。

Rust Headless Chrome
scraper


 Webスクレイピングの流れ
Webスクレイピングとは、Webサイトから情報を抽出する技術のことを言います。
ここでは全体の手順を「クロール」、「パース」の2つに分けて考えることにします。

クロール \cdots Webサイトを巡回してHTMLなどを取得する
パース \cdots 取得したデータを加工し、欲しい情報を抽出する [1]


それぞれ順に説明します。

 クロール
巡回したいWebサイトが決まっていて、また、何ら...]]></description><link>https://zenn.dev/northward/articles/847f999f1dc860</link><guid isPermaLink="true">https://zenn.dev/northward/articles/847f999f1dc860</guid><pubDate>Thu, 23 Jan 2025 18:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bisokB2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7Web%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Northward%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0Y2FlYjY3OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Northward</dc:creator></item><item><title><![CDATA[Rust/Tauriに入門したので画像変換デスクトップアプリを開発してみた]]></title><description><![CDATA[こんにちは！某製造業で新米DXエンジニアをしているものです。
先月から Rust の学習を始めました。
学習している理由としては

今までインタプリタ言語を使ってきたので、コンパイル言語に挑戦したい
爆速で動くコードを書きたい
ネイティブアプリの開発をしてみたい
WebAssembly を使えるようになって、Web アプリ開発の幅を広げたい

といったところです。
そんな中、Rust でデスクトップアプリを開発するために Tauri を使ってみました。
正月の暇をつぶすために軽い気持ちで始めましたが、色々苦しんだので備忘録を残しておきます。
今回は長くなりそうなので、目次をご活用ください...]]></description><link>https://zenn.dev/harumikun/articles/67f992728099ed</link><guid isPermaLink="true">https://zenn.dev/harumikun/articles/67f992728099ed</guid><pubDate>Thu, 23 Jan 2025 12:16:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K8ydukor--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%252FTauri%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E5%25A4%2589%25E6%258F%259B%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AB%25E3%2583%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3MjJkZGRjYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハルミ</dc:creator></item><item><title><![CDATA[Rust 1.84からRustの最小バージョンを考慮した依存関係の解決ができるようになった]]></title><description><![CDATA[Rust 1.84でRustの最小バージョン（MSRV）を考慮するリゾルバが安定化されました。
これによって、cargo addで間接的に追加されるクレートのMSRVが考慮されるようになったり、cargo updateでrust-versionフィールドで指定されているRustのバージョンと互換性のあるバージョンのクレートが自動的に選択されるようになります。
cargo add clap

MSRVを考慮した依存関係の解決

MSRVを考慮しない依存関係の解決
cargo update

MSRVを考慮した依存関係の解決

MSRVを考慮しない依存関係の解決
MSRVは（間接的に）依存す...]]></description><link>https://zenn.dev/sorairolake/articles/introduce-msrv-aware-resolver</link><guid isPermaLink="true">https://zenn.dev/sorairolake/articles/introduce-msrv-aware-resolver</guid><pubDate>Thu, 23 Jan 2025 03:22:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3by_RfZY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25201.84%25E3%2581%258B%25E3%2582%2589Rust%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SorairoLake%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyZGZiOGQyM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SorairoLake</dc:creator></item><item><title><![CDATA[ABC389:Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 389のA~E問題をRustで解いた際の解法をまとめました。

 A問題

問題

https://atcoder.jp/contests/abc389/tasks/abc389_a

解説

1文字目と3文字目を数値に変換して掛け算します。

コード

use proconio::{input, marker::Chars};
fn main() {
    input!{
        s: Chars,
    }
    let s1 = s[0] as usize - 0x30;
    let s2 = s[2] as us...]]></description><link>https://zenn.dev/nakst_hide/articles/38cfab4b2c7fda</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/38cfab4b2c7fda</guid><pubDate>Tue, 21 Jan 2025 12:43:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JgordIxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC389%253ARust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[Rustでデータ構造書いてみた（B木編）]]></title><description><![CDATA[
 はじめに
この記事は jack Advent Calendar 2024 の記事の再掲です．

Rust でデータ構造書いてみた（B 木編）：前編
Rust でデータ構造書いてみた（B 木編）：後編


 概要

B 木の操作について説明したよ

検索
挿入
削除


Rust で B 木の実装をしたよ

ソースコード：kentakom1213/rust-btree

ここから動かせるよ：B 木 - Rust-Playground





 B 木とは
B 木は，データを常にソートされた状態で管理することができるデータ構造の 1 種です．
また，赤黒木のように，データの挿入や削除で...]]></description><link>https://zenn.dev/powell/articles/02eb1ad5185f76</link><guid isPermaLink="true">https://zenn.dev/powell/articles/02eb1ad5185f76</guid><pubDate>Tue, 21 Jan 2025 08:30:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f31jzGtk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A7%258B%25E9%2580%25A0%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588B%25E6%259C%25A8%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:powell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ZGVhZGQ0OTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>powell</dc:creator></item><item><title><![CDATA[Amazon Aurora DSQLをRustから試してみました。]]></title><description><![CDATA[マルチリージョンの分散DBであるAurora DSQLを、Rustからデータ取得、登録を試してみました。

 テーブル作成
CREATE TABLE whatnewrsshistory(
 url varchar(255) PRIMARY KEY,
 notifier_name varchar(255),
 category varchar(255) NOT NULL,
 title  varchar(255)
);
!
varchar 255bytesまでサポートされているようです

256bytesで、テーブル作成しようとしたら、下記エラーが起きた。

他にもPostgreSQLのサ...]]></description><link>https://zenn.dev/clouddevcode/articles/cf6694210a8a10</link><guid isPermaLink="true">https://zenn.dev/clouddevcode/articles/cf6694210a8a10</guid><pubDate>Sun, 19 Jan 2025 01:03:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WnDUY0Yp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Aurora%2520DSQL%25E3%2582%2592Rust%25E3%2581%258B%25E3%2582%2589%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s.hiruta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTF9PMVFpcTVLSWJlUG9wZ3l1RTE2YzRwT3N1dHhUSUMyMndGTW9nNXhsN0ZJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s.hiruta</dc:creator></item><item><title><![CDATA[リスキリングとしての取り組み（2025/1：第2週）]]></title><description><![CDATA[2025年1月第1週（2025/1/12～2025/1/18）に
リスキリング（プログラミング）として取り組んだことをまとめました。

 ＜Topic＞

Windows Insiderを入れ替えた後も、Carbon環境を再構築していなかったので、トライ
Ubuntu Desktop 24.10では、構築できず
Windows Insiderを導入したCopilot+PCにWSL2とUbuntu 24.04を導入し、なんとか構築


 詳細は、GitHubを参照ください

 【1/12】


＜Carbon＞ Ubuntu Desktop 24.10にCarbon環境を構築

低スペック...]]></description><link>https://zenn.dev/tatsukiyoshi/articles/07af1ff37b5b07</link><guid isPermaLink="true">https://zenn.dev/tatsukiyoshi/articles/07af1ff37b5b07</guid><pubDate>Sat, 18 Jan 2025 14:22:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q-mP5Q-Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AE%25E5%258F%2596%25E3%2582%258A%25E7%25B5%2584%25E3%2581%25BF%25EF%25BC%25882025%252F1%25EF%25BC%259A%25E7%25AC%25AC2%25E9%2580%25B1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25BE%25B0%25E8%2581%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlRwMzFwR2w4eEFqS3YtSlVsQVgyRnUyZDBCSU9OaEJFNG9TTGJSQWtVXzE0UktwVnM0QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>辰聖</dc:creator></item><item><title><![CDATA[RustでTF-IDFを用いた効率的な文書検索]]></title><description><![CDATA[なにかといろいろなところであると便利なのが検索。
だけど案外実装がめんどかったりしていままでいろんなもので実装してこなかったので、
最近初めたrustで文章検索を実装してみたお話です。
最終的にWikipedia10万件を
200ms弱で全検索できるようになります。
あと色々ガラパゴス気味です。
あと私自身適当なのでこの記事を信用しないこと。
これ約束。

 基本的なお話
文章検索はある文章集合の中で行い、
その文章集合を一般に corpus(コーパス) と言われています

言語がどのように使われるかを調べるためにコンピュータに保存された書かれたものまたは話されたもののコレクション

今...]]></description><link>https://zenn.dev/371tti/articles/eac5fbbe08b4ef</link><guid isPermaLink="true">https://zenn.dev/371tti/articles/eac5fbbe08b4ef</guid><pubDate>Fri, 17 Jan 2025 20:05:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VlMy7uF6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7TF-IDF%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AA%25E6%2596%2587%25E6%259B%25B8%25E6%25A4%259C%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:371tti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMzJmNjkzM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>371tti</dc:creator></item><item><title><![CDATA[【Rust】ニムゲームをクリーンアーキテクチャで！]]></title><description><![CDATA[
 ニムゲームとは
ルールは以下の通りです。

二人で行う
いくつかの山にいくつかの石がある
プレーヤーは交互に石を取る　※とれる山は１つのみ
何個でも取ってOK
最後の石を取った方が勝利


ニム (英: Nim) は、2人で行うレクリエーション数学ゲーム（組合せゲーム）の一つである。起源は古代中国からあるとされ、16世紀初めの西欧で基本ルールが完成したが、名前については、一般的に1901年にハーバード大学のチャールズ・L・バウトンによって名付けられたとされる

https://ja.wikipedia.org/wiki/ニム

 おことわり
現在、クリーンアーキテクチャについての理解...]]></description><link>https://zenn.dev/kustham/articles/4365b8bf06099b</link><guid isPermaLink="true">https://zenn.dev/kustham/articles/4365b8bf06099b</guid><pubDate>Fri, 17 Jan 2025 02:12:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fDY8y_Qe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rust%25E3%2580%2591%25E3%2583%258B%25E3%2583%25A0%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A7%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tokunaga%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXhVSzJ4ZklWLWxYUU15OVYxZExlMkc2Um1rZzliWFFYUFUzWWo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tokunaga</dc:creator></item></channel></rss>