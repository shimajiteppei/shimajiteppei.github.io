<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 27 Feb 2025 00:20:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[GitHub ActionsでCI/CDパイプラインを構築する方法]]></title><description><![CDATA[こんにちは！この記事では、GitHub Actionsを使ってCI/CD（継続的インテグレーション/継続的デリバリー）パイプラインを構築する方法について、初心者向けに詳しく説明します。CI/CDは、ソフトウェア開発のプロセスを自動化し、コードの品質を向上させるための重要な手法です。

 目次

CI/CDとは？
GitHub Actionsとは？
GitHubリポジトリの準備
GitHub Actionsの基本的な使い方
CI/CDパイプラインの構築
実践的な例：Node.jsアプリのCI/CDパイプライン
まとめ


 CI/CDとは？
CI/CDは、ソフトウェア開発のプロセスを効率化...]]></description><link>https://zenn.dev/utokyo_aido/articles/20250226-080332</link><guid isPermaLink="true">https://zenn.dev/utokyo_aido/articles/20250226-080332</guid><pubDate>Wed, 26 Feb 2025 22:17:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MRswkXAH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7CI%252FCD%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIDO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZjNkYjQ5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIDO</dc:creator></item><item><title><![CDATA[Pythonを使った自動化スクリプトの作り方]]></title><description><![CDATA[こんにちは！この記事では、Pythonを使って自動化スクリプトを作成する方法について詳しく解説します。自動化スクリプトは、日常的な作業を効率化するための強力なツールです。特に、繰り返し行う作業や手動で行うと時間がかかる作業を自動化することで、時間を節約し、ミスを減らすことができます。

 目次

Pythonとは？
自動化スクリプトの基本
Pythonのインストール
基本的な自動化スクリプトの作成
ファイル操作の自動化
ウェブスクレイピングを使った自動化
スケジューリングによる自動化
まとめ


 Pythonとは？
Pythonは、シンプルで読みやすい文法が特徴のプログラミング言語です...]]></description><link>https://zenn.dev/utokyo_aido/articles/20250226-121956</link><guid isPermaLink="true">https://zenn.dev/utokyo_aido/articles/20250226-121956</guid><pubDate>Wed, 26 Feb 2025 22:17:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---CetwFMd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIDO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZjNkYjQ5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIDO</dc:creator></item><item><title><![CDATA[Web技術入門]]></title><description><![CDATA[
 はじめに
現代のインターネット社会で利用されるWebは、単なる画面表示だけでなく、複雑なネットワーク技術やセキュリティ対策に支えられています。この入門記事では、Webの基本概念からネットワーク技術、通信プロトコル、データ形式、アプリケーションの開発・運用、セキュリティまで、具体例や日常のアナロジーを交えて解説します。初めて学ぶ方でも、実際のコードや例え話を通じて全体像がイメージしやすくなるよう構成しています。

 1.Webの基本概念と仕組み
Webとは、インターネット上で情報を閲覧・共有するための仕組みです。
例:
大きな図書館の中で、利用者（ブラウザ）が本（Webページ）を探して...]]></description><link>https://zenn.dev/utokyo_aido/articles/a5f63ed80b7ad2</link><guid isPermaLink="true">https://zenn.dev/utokyo_aido/articles/a5f63ed80b7ad2</guid><pubDate>Wed, 26 Feb 2025 08:20:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1L5b_o_u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Web%25E6%258A%2580%25E8%25A1%2593%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIDO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZjNkYjQ5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIDO</dc:creator></item><item><title><![CDATA[クラウドサービスを使ったスケーラブルなアプリケーション開発]]></title><description><![CDATA[近年、アプリケーション開発において「スケーラビリティ（スケーラブル）」という言葉をよく耳にします。スケーラブルなアプリケーションは、ユーザー数やデータ量の増加に柔軟に対応できるため、ビジネスの成長を支える重要な要素です。本記事では、クラウドサービスを利用してスケーラブルなアプリケーションを開発する方法について、初心者向けに分かりやすく解説していきます。

 1. スケーラビリティとは？
スケーラビリティとは、システムの性能を維持しながら、リソースを増加させることができる能力のことを指します。これには以下の2つのタイプがあります。


垂直スケーリング（スケールアップ）：既存のサーバーにC...]]></description><link>https://zenn.dev/utokyo_aido/articles/20250226-061045</link><guid isPermaLink="true">https://zenn.dev/utokyo_aido/articles/20250226-061045</guid><pubDate>Wed, 26 Feb 2025 06:52:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vYJ5paLh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25B9%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIDO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZjNkYjQ5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIDO</dc:creator></item><item><title><![CDATA[AWS CloudFormationによるインフラのコード化入門]]></title><description><![CDATA[現代のソフトウェア開発において、インフラストラクチャの管理はますます重要になっています。特にクラウド環境では、インフラをコード化することで、効率的かつ再現性のある管理が可能になります。この記事では、AWS CloudFormationを使用してインフラをコード化する方法について、初心者向けに詳しく説明します。

 AWS CloudFormationとは？
AWS CloudFormationは、AWS（Amazon Web Services）が提供するサービスで、インフラストラクチャをコードとして定義し、管理するためのツールです。これにより、インフラのプロビジョニングや管理が自動化され...]]></description><link>https://zenn.dev/utokyo_aido/articles/20250226-064442</link><guid isPermaLink="true">https://zenn.dev/utokyo_aido/articles/20250226-064442</guid><pubDate>Wed, 26 Feb 2025 06:51:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mvEI1mcb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CloudFormation%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2583%25A9%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%258C%2596%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AIDO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZjNkYjQ5ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AIDO</dc:creator></item><item><title><![CDATA[WixStudioでVeloを使う Step 36 「コレクションの色フィールドの活用」]]></title><description><![CDATA[
 はじめに

今回はWixStudioのCMSに注目する。CMSはいわゆるデータベースの仕組み。サイトで扱う記事や商品、会員の情報などのデータをテーマ毎に一定のルールに従って管理することができる。CMSはテーマ毎にデータをまとめて管理することになるが、テーマ毎にまとめられたデータ群をコレクションと呼んでいるぽい。
そんなCMSのコレクションには、新しいフィールドとして色が登場した。

新しいフィールド「色」
この色フィールドについて考えていきたい。

 目的
CMSのコレクションで使える新しいフィールドタイプ「色｣の活用について検討する。

 準備
新しくサイトを作成しCMSやVelo...]]></description><link>https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0036</link><guid isPermaLink="true">https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0036</guid><pubDate>Wed, 26 Feb 2025 05:39:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_XebkAL_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WixStudio%25E3%2581%25A7Velo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520Step%252036%2520%25E3%2580%258C%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E8%2589%25B2%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Niibori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZDA4Mjg3YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niibori</dc:creator></item><item><title><![CDATA[【解説】大個人開発時代を生き抜くためのJavaScript・Reactの基本的な開発フローをまとめてみた]]></title><description><![CDATA[
 JavaScriptとReactでプロジェクトを作成するための基本的な手順（初心者向け）

 はじめに
大個人開発時代に乗り遅れないために、JavaScriptとReactで開発するための基礎基本をまとめました。
生成AIは人間の探究心を具現化させるための最高のパートナーだと思っています。形ないもの（思想・思考）を形あるものにしていくために基礎基本を抑えておくと良いなと思い、Claude 3.7 Sonnet、OpenAI o3-mini-high と一緒に書きました。
参考：

React 日本語ドキュメント
MDN Web Docs - JavaScript

!
加筆修正必要な...]]></description><link>https://zenn.dev/yellowbanana/articles/a4a3565190182b</link><guid isPermaLink="true">https://zenn.dev/yellowbanana/articles/a4a3565190182b</guid><pubDate>Wed, 26 Feb 2025 02:58:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PZdvaCqS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%25E5%25A4%25A7%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E4%25BB%25A3%25E3%2582%2592%25E7%2594%259F%25E3%2581%258D%25E6%258A%259C%25E3%2581%258F%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEJavaScript%25E3%2583%25BBReact%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkZWMyODcyMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヤマダ</dc:creator></item><item><title><![CDATA[クレカの利用明細メールをスプレッドシートに自動で書き起こしする]]></title><description><![CDATA[こんにちは、TRUSTDOCKのよもぎたです。
突然ですが、時代はキャッシュレス！です。
クレカや〇〇ペイなどで支払いをすると、その旨のメールが飛んでくるものが多いかと思います。そのメールをパースして、スプレッドシートに書き起こしするGoogle Apps Scriptを作成してみました。
別の言い方をすると、こちらの記事でGmailを扱うリファレンスを見たので、それをもとにした派生ネタです。

 アプローチ
先程引用した記事と同じで、search()メソッドでメールを検索します。そこから今回はメール本文をパースして、スプレッドシートに書き起こししたい単位に抽出・分割して配列に格納してス...]]></description><link>https://zenn.dev/trustdock/articles/631e0e2bdf821a</link><guid isPermaLink="true">https://zenn.dev/trustdock/articles/631e0e2bdf821a</guid><pubDate>Tue, 25 Feb 2025 13:16:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1SIj6v0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25AB%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%25E6%2598%258E%25E7%25B4%25B0%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:th0x0472%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzNzA5NTQzOWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TRUSTDOCK%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzYzI4Njg4YjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>th0x0472</dc:creator></item><item><title><![CDATA[JS演習　コールバック関数　★2～3]]></title><description><![CDATA[こんばんは。今日はコールバック関数の演習です。作り方が分かれば使い方もより一層わかると思います。

 処理の反復　★★☆☆☆
シンプルなコールバック関数です。関数を繰り返してください。

function
repeat(関数, 回数);// 回数分だけ関数を実行

// ここにコードを書いてね。

repeat(() =&gt; {
    console.log('JS');
}, 3);// &gt; 'JS' 'JS' 'JS'

repeat(function() {
    console.log('うさぎ');
}, 0);// なし
ヒント　コールバック関数とは
引数に関数...]]></description><link>https://zenn.dev/javascript/articles/c5b9584dfa5575</link><guid isPermaLink="true">https://zenn.dev/javascript/articles/c5b9584dfa5575</guid><pubDate>Tue, 25 Feb 2025 11:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P-q49xE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%25E6%25BC%2594%25E7%25BF%2592%25E3%2580%2580%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2580%2580%25E2%2598%25852%25EF%25BD%259E3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E7%25B4%259A%25E3%2581%25AA%25E9%2583%25BD%25E4%25BC%259A%25E3%2583%2590%25E3%2583%2588%25E5%25A5%25BD%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMjIwOGM5NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高級な都会バト好き</dc:creator></item><item><title><![CDATA[【複数ディレクトリ対応】HtmlWebpackPlugin を自動で追加させる]]></title><description><![CDATA[
 先ずは結論
とりあえず試してやろうじゃねーか！て人は以下の手順を参考に

 前提

ejsを使用

src/html 配下のディレクトリ構成をそのまま　public に出力させる


フォルダ構成(一部省略)
.
└── webpackSample
    ├── public // ファイルの出力先
    ├── src // リソースファイル
    │   └── html
    │       ├── article
    │       │   └── index.ejs
    │       └── index.ejs
    └── webpack.js


 ...]]></description><link>https://zenn.dev/noteman/articles/987617770d7f1c</link><guid isPermaLink="true">https://zenn.dev/noteman/articles/987617770d7f1c</guid><pubDate>Tue, 25 Feb 2025 07:26:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--488YRYbb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E5%25AF%25BE%25E5%25BF%259C%25E3%2580%2591HtmlWebpackPlugin%2520%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NoteMan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjOTQ2OWI2YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NoteMan</dc:creator></item><item><title><![CDATA[【超初心者向け】Firebase・Express・Node.jsの関係を理解したい！]]></title><description><![CDATA[必要に迫られてFirebase Cloud Functionsを勉強し始めたところ、
初っ端のJavaScriptの記述である、
const express = require('express');
という
「Expressフレームワークをインポートするための記述」
の意味が全くわからないことってありますよね（私のこと）
ということで、今回は、

Firebase Cloud Functions
Expressフレームワーク
Node.js

などの関係について、概念図やその意味などをまとめてみました（自分のため）

 const express = require('express'...]]></description><link>https://zenn.dev/40_comeback_eng/articles/c8b75f0ae6242a</link><guid isPermaLink="true">https://zenn.dev/40_comeback_eng/articles/c8b75f0ae6242a</guid><pubDate>Tue, 25 Feb 2025 00:00:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gg_zgvGM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Firebase%25E3%2583%25BBExpress%25E3%2583%25BBNode.js%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%258B%25E3%2581%258B%25E3%2581%259A%254040%25E6%25AD%25B3%2520%25E5%2587%25BA%25E6%2588%25BB%25E3%2582%258A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGNhZmRmOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワニかず@40歳 出戻りエンジニア</dc:creator></item><item><title><![CDATA[【初級者脱却】【一問一答】javaScriptのオブジェクト・配列について]]></title><description><![CDATA[
 前書
若手エンジニアがつまづきやすいであろう、javaScriptのオブジェクトや配列の挙動について、読むだけよりも実際に自分で考えて答えを出す方が理解が進むかと思うので、一問一答形式で書いていきます。
console.log()で何が出力されるかを考えてみてください。

 問題集

Question

const obj1 = {
  key1: "val1",
  key2: "val2"
};
const obj2 = {
  key1: "val1",
  key2: "val2"
};
console.log(obj1 === obj2);
Answerfalse
// o...]]></description><link>https://zenn.dev/tkfm84/articles/4d0b4d6ca0ea36</link><guid isPermaLink="true">https://zenn.dev/tkfm84/articles/4d0b4d6ca0ea36</guid><pubDate>Mon, 24 Feb 2025 16:37:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VODxyep1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E7%25B4%259A%25E8%2580%2585%25E8%2584%25B1%25E5%258D%25B4%25E3%2580%2591%25E3%2580%2590%25E4%25B8%2580%25E5%2595%258F%25E4%25B8%2580%25E7%25AD%2594%25E3%2580%2591javaScript%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25BB%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkfm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmkwZ3dBMExsVjlLbWFxdmRPZXlpSi1vclNjeHY5ampUNFJ4Wl9xZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkfm</dc:creator></item><item><title><![CDATA[AIボドゲソムリエ🎲Gemini2.0×Dify×Flaskで作る推薦エージェント]]></title><description><![CDATA[
 概要
ボードゲームを始めたいけど、何を選べばいいか分からない...。
そんな経験はありませんか？？
ボードゲームには、プレイ人数やプレイ時間、ゲームの難易度など、考慮すべき要素が多くあります。
初心者にとって、これらの条件を満たす最適なゲームを見つけるのは結構大変だったりしますよね！
そこで今回作った「ボードゲームソムリエのサイハラさん」は、プレイ人数やプレイ時間などの簡単な質問に答えるだけで、AIが最適なボードゲームを提案してくれるチャットエージェントです！
サイハラさん開発にあたり、フロントエンドではPythonのWeb開発フレームワークのFlaskとJavaScript、バック...]]></description><link>https://zenn.dev/ghillie/articles/fcb896886d25f1</link><guid isPermaLink="true">https://zenn.dev/ghillie/articles/fcb896886d25f1</guid><pubDate>Mon, 24 Feb 2025 12:57:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b0aXE4U2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2583%259C%25E3%2583%2589%25E3%2582%25B2%25E3%2582%25BD%25E3%2583%25A0%25E3%2583%25AA%25E3%2582%25A8%2520Gemini2.0%25C3%2597Dify%25C3%2597Flask%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDA5NzlhNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アギ</dc:creator></item><item><title><![CDATA[Clineに自分をエミュレートさせて技術記事を代筆させてみたらビビった]]></title><description><![CDATA[なんか驚き屋っぽくてアレなんだけど、今回はさすがに驚く権利があると思うので、至急記事を書く。

 やろうとしたこと

毎回手元の検証結果から技術記事を構成するのがだるい
自分のブログを適当に読ませておいて、その構成と文体を真似させればいいのでは

手元に mizchi/zenn というリポジトリがあり、ここに zennにポストする原稿を管理している。
$ tree ./articles   
./articles
├── 1c35fdcc77065c02f631.md
├── 3e4742e24f2ca0118f70.md
├── 8a017097d3994ddc0a85.md
├── ...]]></description><link>https://zenn.dev/mizchi/articles/auto-mizchi-writer</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/auto-mizchi-writer</guid><pubDate>Mon, 24 Feb 2025 12:07:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y4_HHEk7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cline%25E3%2581%25AB%25E8%2587%25AA%25E5%2588%2586%25E3%2582%2592%25E3%2582%25A8%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E6%258A%2580%25E8%25A1%2593%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E4%25BB%25A3%25E7%25AD%2586%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2582%2589%25E3%2583%2593%25E3%2583%2593%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[JavaScriptのよく使う配列処理備忘録]]></title><description><![CDATA[lodashとかunderscoreのライブラリ、便利ですよね。
でもそれ、ほんとにライブラリに頼らないと実装できませんか？
Vanilla Jsで書けるものは書きましょう、ということでチートシート的にまとめていきます。

 every()

処理内容

配列内の全ての要素が、引数の関数の処理に合致するかどうかを判定。

戻り値

Boolean
const arr = [10, 14, 22, 40, 90];
const result1 = arr.every((elm) =&gt; {
  return elm % 2 === 0
})
console.log(result1); ...]]></description><link>https://zenn.dev/tkfm84/articles/e7b1b062752bae</link><guid isPermaLink="true">https://zenn.dev/tkfm84/articles/e7b1b062752bae</guid><pubDate>Mon, 24 Feb 2025 08:56:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CMAo_2tV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E9%2585%258D%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkfm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmkwZ3dBMExsVjlLbWFxdmRPZXlpSi1vclNjeHY5ampUNFJ4Wl9xZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkfm</dc:creator></item><item><title><![CDATA[RTK Queryを始めてみてナニコレイミワカラナイから便利やなーぐらいになった人の]]></title><description><![CDATA[
 概要
仕事で開発をしている時、RTK Queryなるものに出会いました
そもそもReduxが得意ではない点 + fetchで頑張るおじさんだった私が始めて出会った時
ナニコレイミワカラナイ・・・と一回PCを閉じたのですが、ちょっと基礎を触ってみて
便利やなーとなる過程をただつらつら書いただけの記事です🙌

 RTK Qeuryってそもそも何よ
RTK Queryと言うのはRedux Toolkitに含まれているデータフェッチ・キャッシュ管理を良しなーにやってくれる便利ツールです。
fetchやaxiosを使って手動で状態管理する代わりに、RTK Queryを使えば非同期処理をRedu...]]></description><link>https://zenn.dev/koakichi/articles/ea625114bdcbb8</link><guid isPermaLink="true">https://zenn.dev/koakichi/articles/ea625114bdcbb8</guid><pubDate>Mon, 24 Feb 2025 07:31:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--26iC-NTG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RTK%2520Query%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2583%258A%25E3%2583%258B%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25AF%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%258A%25E3%2582%25A4%25E3%2581%258B%25E3%2582%2589%25E4%25BE%25BF%25E5%2588%25A9%25E3%2582%2584%25E3%2581%25AA%25E3%2583%25BC%25E3%2581%2590%25E3%2582%2589%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E4%25BA%25BA%25E3%2581%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koakichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZGIyYzA0MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koakichi</dc:creator></item><item><title><![CDATA[[GIS]MapLibre GL JSを使用したWebマップ上での距離測定について（備忘録）]]></title><description><![CDATA[
 １．はじめに
・GISとは地理情報システム（Geographic Information System）の略称です。
・地球上に存在する地形物や事象をコンピュータ上の地図に可視化し、空間データの管理・検索・分析等を可能にします。

 ２．サンプルプログラム

index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
    &lt;meta charset='utf-8'&gt;
    &lt;meta name="viewport" content="width=device-width, initi...]]></description><link>https://zenn.dev/yama_kawa/articles/131b2b2d7a6b3b</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/131b2b2d7a6b3b</guid><pubDate>Mon, 24 Feb 2025 06:57:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gs7tE_4---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BGIS%255DMapLibre%2520GL%2520JS%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FWeb%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E4%25B8%258A%25E3%2581%25A7%25E3%2581%25AE%25E8%25B7%259D%25E9%259B%25A2%25E6%25B8%25AC%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1ZjYyZjIwYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[TS/JSでセミコロンをつけないスタイル（No-Semi）について]]></title><description><![CDATA[TypeScriptやJavaScriptにおいて、文末にセミコロンをつけないスタイル（以下「No-Semiスタイル」）の現在の普及状況について、最近の調査資料が見つからなかったため、独自に調べてみました。コーディングスタイルを検討する際の参考になれば幸いです。

 背景
Cursor ComposerやClineなどのコーディングAIを使ってTypeScriptの開発をしていると、Lint設定でNo-Semiスタイルを指定しているにもかかわらず、Composerがセミコロンありのコードを生成してしまうため、毎回Lintエラーが発生することがあります。
この問題は「TypeScriptで...]]></description><link>https://zenn.dev/sparkleai_blog/articles/346593f3b32405</link><guid isPermaLink="true">https://zenn.dev/sparkleai_blog/articles/346593f3b32405</guid><pubDate>Mon, 24 Feb 2025 06:48:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rAbpZ1sX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%252FJS%25E3%2581%25A7%25E3%2582%25BB%25E3%2583%259F%25E3%2582%25B3%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25EF%25BC%2588No-Semi%25EF%25BC%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:delhi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmMDAxYWM3ZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sparkle%2520AI%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODc0Y2EyNmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>delhi</dc:creator></item><item><title><![CDATA[エビングハウスの忘却曲線に沿った学習予定を自動でカレンダーに入れる#1]]></title><description><![CDATA[
 はじめに
効率的な学習を行うにあたって、エビングハウスの忘却曲線（10分後、1時間後、1週間後、1ヶ月後）に学んだ内容を復習すると良いのは有名である。
ここ10年くらいで何回か挑戦するも、３日坊主ですぐにやめてしまった。
やめた理由の１つに手動管理だとかなりの手間になる。
さらに１ヶ月目を過ぎる頃には１日に４つの復讐をすることになり、時間的余裕はない（学ぶことより復習に追われる）
最近notionを使って、１日に１ページくらいは学んだ内容をまとめるということが出来ているので、この習慣を利用する。
予定を組むのを自動化するために、Google App Script（GAS）、Googl...]]></description><link>https://zenn.dev/kasgo/articles/58de5e5b7e5d7c</link><guid isPermaLink="true">https://zenn.dev/kasgo/articles/58de5e5b7e5d7c</guid><pubDate>Sun, 23 Feb 2025 16:27:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UXkDFOgT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%2593%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%258F%25E3%2582%25A6%25E3%2582%25B9%25E3%2581%25AE%25E5%25BF%2598%25E5%258D%25B4%25E6%259B%25B2%25E7%25B7%259A%25E3%2581%25AB%25E6%25B2%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%25AD%25A6%25E7%25BF%2592%25E4%25BA%2588%25E5%25AE%259A%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25231%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ivx3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dlbkxOZDlUZEZiY2pCbDlfZFFReS1sMjI1ejFZcUlqdHQ1NFB1Unc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ivx3</dc:creator></item><item><title><![CDATA[【GAS】私がよく使うコードまとめ]]></title><description><![CDATA[私が業務中によく使うコードをまとめています。
今までは無題のApps scriptにまとめていたのですが

転職したら見られなくなる
プライベートのPCから見られない
増えてきて整理したい

といった理由から、改めて記事にしました（随時更新予定）。

 スプレッドシート取得
const ss = SpreadsheetApp.getActiveSpreadsheet();//アクティブなスプレッドシートを取得
const ss = SpreadsheetApp.openById('スプレッドシートID');//idで取得
const sheet = ss.getSheetByName('...]]></description><link>https://zenn.dev/kojimaru/articles/0cb5685660b65b</link><guid isPermaLink="true">https://zenn.dev/kojimaru/articles/0cb5685660b65b</guid><pubDate>Sun, 23 Feb 2025 15:02:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R_RW-eEi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591%25E7%25A7%2581%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2598%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR6Y3lfaVFlMGstVHN6b0prWFpXMFlNOG9wdEYwMkVnaXRibTRTd2otOFo5UE95dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こじまる</dc:creator></item></channel></rss>