<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 08 Aug 2025 10:59:52 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[デジタルデトックスのその先。]]></title><description><![CDATA[
 はじめに
私は、スマホを持っていない。デジタルデトックスをしようと何度も思って、いろいろいろいろ試したあげく、そういう答えにたどり着いた。本記事では、それでもみんなと合わせて過ごすため、私が行なっている工夫のうち技術的側面を書き残せればと思っている。

 この記事で取り扱う内容
6本立てで記事を投稿する予定である。
&lt;ルーター設定&gt;

家Wi-Fiを30分に制約
プライベートMACアドレス対策

&lt;自作アプリケーション&gt;

「スリープ時Wi-Fiオフ」
「起動時10秒Wi-Fiオン」
「家Wi-Fi接続時間測定」＋「Wi-Fi/PC使用時間統計」
「地図印刷用...]]></description><link>https://zenn.dev/yudai_kat0/articles/0c70f9805b30f2</link><guid isPermaLink="true">https://zenn.dev/yudai_kat0/articles/0c70f9805b30f2</guid><pubDate>Fri, 08 Aug 2025 10:11:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mSFwi2kd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2588%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E3%2581%259D%25E3%2581%25AE%25E5%2585%2588%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A8%25E3%2581%2586%25E3%2582%2586%25E3%2581%2586%25E3%2581%25A0%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5MmZmNGQxMjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かとうゆうだい</dc:creator></item><item><title><![CDATA[【Windows】 CUDAのバージョン切り替え]]></title><description><![CDATA[Ubuntuの切り替え方法なら検索して出てくるのに、Windows環境の場合全然情報がなかったので備忘録として残しておきます

 切り替え方法
環境変数をいじるだけでOKです！
Windowsロゴキー + Sで検索窓を開いて『システム環境変数』と検索して『環境変数』をクリック。

からの、
ユーザー環境変数にある
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\vX.XX\libnvvp
C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\vXX.X\bin
について、変更したいバージ...]]></description><link>https://zenn.dev/glisan/articles/5b68b0d406c705</link><guid isPermaLink="true">https://zenn.dev/glisan/articles/5b68b0d406c705</guid><pubDate>Fri, 08 Aug 2025 01:18:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fswn1GZU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Windows%25E3%2580%2591%2520CUDA%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0MzU1YzBlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>グリッサンド。</dc:creator></item><item><title><![CDATA[わずか25MB！超軽量音声合成モデルKittenTTSの実力と活用法]]></title><description><![CDATA[
 わずか25MB！超軽量音声合成モデルKittenTTSの実力と活用法

 概要
音声合成（Text-to-Speech、TTS）技術は、近年急速に進化を遂げています。しかし、高品質な音声を生成するモデルの多くは、数百MB〜数GBという巨大なサイズになりがちです。そんな中、わずか25MB未満という驚異的な軽量さで最先端の音声品質を実現する「KittenTTS」が登場しました。
モバイルアプリやエッジデバイスでの音声合成、リアルタイム処理が必要なシステムにとって、この軽量性は革命的です。本記事では、KittenTTSの技術的な特徴から実装方法まで、詳しく解説していきます。

 主な特徴・...]]></description><link>https://zenn.dev/yusuke_sato_eh/articles/09tgg2-kittentts</link><guid isPermaLink="true">https://zenn.dev/yusuke_sato_eh/articles/09tgg2-kittentts</guid><pubDate>Thu, 07 Aug 2025 17:57:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MOFxTNVu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%258F%25E3%2581%259A%25E3%2581%258B25MB%25EF%25BC%2581%25E8%25B6%2585%25E8%25BB%25BD%25E9%2587%258F%25E9%259F%25B3%25E5%25A3%25B0%25E5%2590%2588%25E6%2588%2590%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABKittenTTS%25E3%2581%25AE%25E5%25AE%259F%25E5%258A%259B%25E3%2581%25A8%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:CEO%2540Engineers%2520Hub%2520...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBXb3MtWm12c3Rhb0JVZXlmXzRDT2lJazNnVXFaaXVLNklIUnVjRmhIU3NKUVl3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>CEO@Engineers Hub Co. ,Ltd.</dc:creator></item><item><title><![CDATA[俺のKaggleコンペ第一歩目をここに刻む]]></title><description><![CDATA[データ分析、機械学習を一部生業とする会社に転職したので、
データサイエンティストもすなるKaggleというものを、ワイもしてみむとしてするなり。
Kaggleの入門チュートリアル（House Prices - Advanced Regression Techniques）をやってみた中で、「この特徴量、効きそう！」「これはたぶん効かないな…」と自分なりに整理しながら追加・検証してみた記録です。
本当に「はじめの一歩」という感じなので、機械学習そこそこやってる人からしたら「そらそやろ」という内容になっていると思います。


 📌 まずは基本の特徴量たち
チュートリアルで最初に使われる特徴量...]]></description><link>https://zenn.dev/kannna5296/articles/2025-08-07-kaggle-feature-selection</link><guid isPermaLink="true">https://zenn.dev/kannna5296/articles/2025-08-07-kaggle-feature-selection</guid><pubDate>Thu, 07 Aug 2025 15:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mOX-Z_L1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BF%25BA%25E3%2581%25AEKaggle%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E7%25AC%25AC%25E4%25B8%2580%25E6%25AD%25A9%25E7%259B%25AE%25E3%2582%2592%25E3%2581%2593%25E3%2581%2593%25E3%2581%25AB%25E5%2588%25BB%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B1%25B1%25E6%25A0%25B9%25E6%25AD%25A3%25E5%25A4%25A7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2OGYzNmU4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山根正大</dc:creator></item><item><title><![CDATA[技術調査 - Serena MCP]]></title><description><![CDATA[
 ■概要
Serena MCPは、大規模言語モデル（LLM）を高性能なAIコーディングエージェントへ進化させる、オープンソースのツールキットです。このシステムは、開発者のローカル環境で動作するサーバーとして、コードベースとLLMとの対話を仲介します。
Serena MCPの目的は、LLMに統合開発環境（IDE）のような高度な機能を提供することにあります。具体的には、意味的なコード検索（セマンティック検索）や記号的なコード編集（シンボリック編集）の能力をLLMに付与します。これにより、AIエージェントの応答精度とトークン効率が大幅に向上し、特に大規模で複雑なコードベースを扱う際に真価を発...]]></description><link>https://zenn.dev/suwash/articles/serene_mcp_20250807</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/serene_mcp_20250807</guid><pubDate>Thu, 07 Aug 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_q9CybdS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E8%25AA%25BF%25E6%259F%25BB%2520-%2520Serena%2520MCP%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2520%252F%2520%25E8%25AB%258F%25E8%25A8%25AA%25E7%259C%259F%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh / 諏訪真一</dc:creator></item><item><title><![CDATA[A2A マルチエージェント例：数字当てゲーム]]></title><description><![CDATA[

 プロジェクト概要
これはAgent2Agent（A2A）protocolに基づく数字当てゲームの例で、3つの軽量なA2Aエージェントがどのように協力して古典的な数字当てゲームを完成させるかを実証しています。このプロジェクトはA2A protocolとPython SDKの実用的な入門例として機能し、以下の特徴があります：


LLM依存なし：APIキーや大規模言語モデルが不要

ローカル実行：3つのエージェントすべてがリモートサーバーなしでローカル実行

簡単インストール：最小限の外部依存関係

核心概念実証：A2A protocolの核心機能を紹介


 エージェント役割説明

...]]></description><link>https://zenn.dev/czmilo/articles/a026b036699376</link><guid isPermaLink="true">https://zenn.dev/czmilo/articles/a026b036699376</guid><pubDate>Thu, 07 Aug 2025 07:07:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RAEmkU5t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:A2A%2520%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E4%25BE%258B%25EF%25BC%259A%25E6%2595%25B0%25E5%25AD%2597%25E5%25BD%2593%25E3%2581%25A6%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:milo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1ViZDhTc2tuMVIwekdDeEdoX05MbUdISW1pV21UaDdZdnBhSmR2WDM3V2JzWlJEUks9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>milo</dc:creator></item><item><title><![CDATA[BPFを使ったリアルタイムプロセス可視化システムの構築と実験]]></title><description><![CDATA[
 はじめに
システム上で実行されているプロセスの動作はどのように可視化できるのでしょうか？今回はBPF（Berkeley Packet Filter）とbpftraceを使用してリアルタイムプロセス監視システムを構築し、実際に実験を行ってその有用性を確認してみます。
また、今回だけでなく次回以降も様々なシステム監視やデバッグ手法について探求していきたいと思います。

 マシンスペック
MacBook Air M2 arm64
Docker上で実施

 準備

 ディレクトリ構成
daemon/
├── Dockerfile
├── docker-compose.yml
├── scri...]]></description><link>https://zenn.dev/ka_kan/articles/f0579b3831bfde</link><guid isPermaLink="true">https://zenn.dev/ka_kan/articles/f0579b3831bfde</guid><pubDate>Wed, 06 Aug 2025 21:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1o-PoN6l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BPF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E5%25AE%259F%25E9%25A8%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOGJhYTMxOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanda</dc:creator></item><item><title><![CDATA[Pythonでグラフマスター！]]></title><description><![CDATA[
 📊 【プログラミング初心者向け】Python Streamlit x matplotlibで作るオーストラリアデータ可視化アプリ
データ可視化の基本から応用まで、楽しく学んでみませんか？今回は、Python で Streamlit と matplotlib を使って、オーストラリアのデータを美しいグラフで表現するアプリを作成します。線グラフ、棒グラフ、散布図、ヒストグラムなど、様々なグラフタイプを実際に作成しながら、データ可視化の技術を身につけていきましょう。
読み進めていくと、コード量が多く感じるかもしれませんが、可読性向上目的で改行を多用しているためですので！

データ可視化、グ...]]></description><link>https://zenn.dev/sola_au/articles/bc38e0a8ceed7f</link><guid isPermaLink="true">https://zenn.dev/sola_au/articles/bc38e0a8ceed7f</guid><pubDate>Wed, 06 Aug 2025 11:52:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j4ubxp9r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOLA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNNYlhBdFBoeHNoM0ttS0NPTkRWU0tOY2hDenZ6ZVBvaTZ5MzdvNTh3SnBEMWpYdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOLA</dc:creator></item><item><title><![CDATA[タイマーを使ったリアルタイムでの変数値切り替え]]></title><description><![CDATA[今回はライブラリtriggonに新しく追加予定のタイマー機能を使って、変数の値を切り替えてみました。
シンプルな計算クイズのコード例で紹介します。

 サンプルコード
import random

from triggon import Triggon

# ラベルと新しい値を設定
tg = Triggon({
    "time_up": True, 
    "result": "〇",
    "add": 1,
})

time_up = False
result = "✕"
add = 0

# 変数登録
tg.switch_var({
    "time_up": time_...]]></description><link>https://zenn.dev/tsuruko/articles/142b1a8cd23733</link><guid isPermaLink="true">https://zenn.dev/tsuruko/articles/142b1a8cd23733</guid><pubDate>Wed, 06 Aug 2025 11:11:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V7FAzR0f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E5%2580%25A4%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsuruko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3ZmU0MDBjMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsuruko</dc:creator></item><item><title><![CDATA[Databricks Connect 実践編 - ローカルから Databricks コンピュートを利用]]></title><description><![CDATA[本記事は3部構成の3本目です。

Claude Code 対応 Dev Container 環境構築編 - VS Code でもそれ以外でも
Python 開発環境最適化編 - uv + pre-commit + GitHub Actions
Databricks Connect 実践編 - ローカルから Databricks コンピュートを利用


 1. はじめに
前回までの環境に Databricks Connect を追加して、ローカル開発環境から Databricks の Spark セッションを利用できるようにします。
Databricks 上でもローカルでも同じコードが動作...]]></description><link>https://zenn.dev/genda_jp/articles/2025-08-06-databricks-connect-practice</link><guid isPermaLink="true">https://zenn.dev/genda_jp/articles/2025-08-06-databricks-connect-practice</guid><pubDate>Wed, 06 Aug 2025 10:02:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r76v90xI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Databricks%2520Connect%2520%25E5%25AE%259F%25E8%25B7%25B5%25E7%25B7%25A8%2520-%2520%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%2520Databricks%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:uma-chan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiM2M1MjhkNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GENDA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMjZhYmJjODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uma-chan</dc:creator></item><item><title><![CDATA[Python 開発環境最適化編 - uv + pre-commit + GitHub Actions]]></title><description><![CDATA[本記事は3部構成の2本目です。

Claude Code 対応 Dev Container 環境構築編 - VS Code でもそれ以外でも
Python 開発環境最適化編 - uv + pre-commit + GitHub Actions
Databricks Connect 実践編 - ローカルから Databricks コンピュートを利用


 1. はじめに
前回の Dev Container 環境に Python 開発環境を追加します。
uv によるパッケージ管理と pre-commit による品質管理で、チーム開発でも個人開発でも快適な Python 環境を構築できます。
...]]></description><link>https://zenn.dev/genda_jp/articles/2025-08-06-python-env-optimization</link><guid isPermaLink="true">https://zenn.dev/genda_jp/articles/2025-08-06-python-env-optimization</guid><pubDate>Wed, 06 Aug 2025 10:01:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QjdtPX6O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E7%25B7%25A8%2520-%2520uv%2520%252B%2520pre-commit%2520%252B%2520GitHub%2520Actions%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:uma-chan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiM2M1MjhkNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GENDA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMjZhYmJjODIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uma-chan</dc:creator></item><item><title><![CDATA[【2025年版】AWS SDK性能検証: Go vs Rust vs Python - "Rust最速神話"を実測で検証してみた]]></title><description><![CDATA[
 はじめに
「Rustは最速」「GoはRustより遅い」- こんな話をよく耳にしませんか？
AWSクラウドエンジニアとして日々AWS SDKを使っていると、実際のところどの言語が一番速いのか？ という疑問が湧いてきました。特にネットワークI/Oが中心となるAWS API操作では、言語間の性能差はどう現れるのでしょうか。
そこで今回、Go・Rust・Pythonの3言語でAWS EC2の DescribeSecurityGroups APIを実装し、実際に実行速度を測定してみました。
結果は...まさかの展開でした。

 TL;DR（結論先出し）



順位
言語
実経過時間
CPU時間...]]></description><link>https://zenn.dev/kyonaka/articles/4362ffe647d99a</link><guid isPermaLink="true">https://zenn.dev/kyonaka/articles/4362ffe647d99a</guid><pubDate>Tue, 05 Aug 2025 20:55:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lPaMvCJn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902025%25E5%25B9%25B4%25E7%2589%2588%25E3%2580%2591AWS%2520SDK%25E6%2580%25A7%25E8%2583%25BD%25E6%25A4%259C%25E8%25A8%25BC%253A%2520Go%2520vs%2520Rust%2520vs%2520Python%2520-%2520%2522Rust%25E6%259C%2580%25E9%2580%259F%25E7%25A5%259E%25E8%25A9%25B1%2522%25E3%2582%2592%25E5%25AE%259F%25E6%25B8%25AC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kyonaka%2540AWS%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5NzcxODk2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kyonaka@AWSエンジニア</dc:creator></item><item><title><![CDATA[確率分布の可視化]]></title><description><![CDATA[　各種の確率分布について、パラメータの影響をグラフのアニメーションで確認します(という記事をこれから投稿していきます)。

【編集履歴】

- 2025.08.06：「ポアソン分布の可視化」を追加

]]></description><link>https://zenn.dev/anemptyarchive/books/57c8c6bcfed7d3</link><guid isPermaLink="true">https://zenn.dev/anemptyarchive/books/57c8c6bcfed7d3</guid><pubDate>Tue, 05 Aug 2025 19:54:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X-IE6z9H--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80NmU1N2EzMDYzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>しょこ</dc:creator></item><item><title><![CDATA[Outlines で LLM の構造化出力を100%成功させる]]></title><description><![CDATA[

 忙しい人向けのまとめ
LLM の出力を確実に JSON にしたい！！ → Outlines が使えるぞ！

 はじめに
LLM を使ったアプリケーションを開発していると、出力を JSON や Pydantic などの決まった形式で受け取りたい場面がよくあります。しかし、LLMが勝手に説明文を付け加えたり、形式を微妙に変えたりして、パースエラーや予期しない出力に悩まされることも多いのではないでしょうか。
従来はこうした問題に対して正規表現での整形やリトライ処理など、本来のロジックとは関係ない処理を書く必要がありました。
Outlines は、これらの問題を解決し、LLM の出力をシン...]]></description><link>https://zenn.dev/prgckwb/articles/outlines-llm-structured-output</link><guid isPermaLink="true">https://zenn.dev/prgckwb/articles/outlines-llm-structured-output</guid><pubDate>Tue, 05 Aug 2025 16:47:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a6wUw3I---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Outlines%2520%25E3%2581%25A7%2520LLM%2520%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592100%2525%25E6%2588%2590%25E5%258A%259F%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1MWU5MTZhMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item><item><title><![CDATA[Pythonプロジェクトのディレクトリ構造設計：個人開発からexe配布まで]]></title><description><![CDATA[
 はじめに
個人開発でPythonプロジェクトを進める際、適切なディレクトリ構造は開発効率と保守性を大きく左右します。特に、複数の実行可能プログラムを含み、最終的にexe形式で配布することを前提とした場合、計画的な構造設計が不可欠です。
本記事では、開発からテスト、そしてexe化によるリリースまでをスムーズに行うための実践的なディレクトリ構造を提案します。

 推奨ディレクトリ構造

 実用的でシンプルな構造
my_project/
├── src/
│   ├── apps/              # 各実行可能プログラム
│   │   ├── __init__.py
│   ...]]></description><link>https://zenn.dev/maguro_tuna/articles/python-project-directory-structure</link><guid isPermaLink="true">https://zenn.dev/maguro_tuna/articles/python-project-directory-structure</guid><pubDate>Tue, 05 Aug 2025 16:45:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U1nRE0Pk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E9%2580%25A0%25E8%25A8%25AD%25E8%25A8%2588%25EF%25BC%259A%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%258B%25E3%2582%2589exe%25E9%2585%258D%25E5%25B8%2583%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:magmag%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4NzFlMDI3OWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>magmag</dc:creator></item><item><title><![CDATA[人文科学・社会科学のためのPythonプログラミング入門：データ分析とテキスト探求への扉]]></title><description><![CDATA[「なぜ、文学研究にプログラミングが？」「社会調査に、Pythonは必要なの？」
――その答えが、ここにあります。

歴史的文書、文学作品、アンケート結果、SNSの投稿…。人文科学・社会科学の探求は、膨大な「ことば」と「データ」の海に挑む壮大な営みです。従来の研究手法に加え、もしコンピュータの力を借りて、その海に潜む未知のパターンや構造を明らかにできたとしたら？

本書は、プログラミング経験が全くない人文科学・社会科学系の学生・研究者のために書かれた、Pythonによるデータ分析・テキスト分析の入門書です。]]></description><link>https://zenn.dev/jkphil/books/3f4df8b133c6b1</link><guid isPermaLink="true">https://zenn.dev/jkphil/books/3f4df8b133c6b1</guid><pubDate>Tue, 05 Aug 2025 14:47:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CYlrjR0N--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hYmE0YzhjN2E1LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>J.K.</dc:creator></item><item><title><![CDATA[JetBrains 2025.2ぞくぞくリリース！AI Assistantと価格改定まとめ]]></title><description><![CDATA[
 はじめに
こんにちは。JetBrains公式代理店NATTOSYSTEMのねばねばです。
みなさん、Jetbrains各種製品の2025.2バージョンが猛暑をふきとばす勢いでぞくぞくリリースされています。
今回はJetBrainsが2025年8月に発表したAI Assistant 2025.2新機能と、各種IDE製品の2025.2リリース情報、価格改定のニュースについて紹介いたします。


 JetBrains AI Assistant 2025.2の注目ポイント

 ✅ プロジェクトルールでAIにプロジェクト固有の指示を出せる
プロジェクトごとの命名規則やコーディングスタイルを設定...]]></description><link>https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</link><guid isPermaLink="true">https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</guid><pubDate>Tue, 05 Aug 2025 07:32:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4q0-u19--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JetBrains%25202025.2%25E3%2581%259E%25E3%2581%258F%25E3%2581%259E%25E3%2581%258F%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%2581AI%2520Assistant%25E3%2581%25A8%25E4%25BE%25A1%25E6%25A0%25BC%25E6%2594%25B9%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%25B0%25E3%2581%25AD%25E3%2581%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYWQxMDhjNTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BENATTOSYSTEM%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねばねば</dc:creator></item><item><title><![CDATA[【#2】FlaskアプリにAuth0つけようとしたらapp.pyがぶっ壊れた話]]></title><description><![CDATA[
Flaskは1ファイルで済むって言ったやつ出てこい


 0. はじめに
本番環境に公開するためにAuth0入れてみたけどapp.pyが肥大化して詰んだ。
当初はAuth0をapp.pyに直接投入していたが、ルーティングぐちゃぐちゃになってページが開けなくなったので泣く泣く分割。
ハマった知見とかも共有しときます。


 1. フル装備app.pyの地獄

改修前のディレクトリ構成
.
├── static
│   └── style.css
├── templates
│   ├── index.html
│   ├── report.html
│   └── layout.html...]]></description><link>https://zenn.dev/nickelth/articles/reportapp02auth0</link><guid isPermaLink="true">https://zenn.dev/nickelth/articles/reportapp02auth0</guid><pubDate>Tue, 05 Aug 2025 05:46:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VfpwRx6_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25232%25E3%2580%2591Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25ABAuth0%25E3%2581%25A4%25E3%2581%2591%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589app.py%25E3%2581%258C%25E3%2581%25B6%25E3%2581%25A3%25E5%25A3%258A%25E3%2582%258C%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjc3ODIwNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ニッケル</dc:creator></item><item><title><![CDATA[【#1】Javaレガシー帳票出力アプリをPythonにリメイクした話]]></title><description><![CDATA[
 Flask帳票出力アプリ

 0. はじめに
昔SIerにて、以下の構築の案件に関わったことがある。

この帳票出力アプリの構築では、
ユーザがJavaScript UIの画面に入力した値をバックエンド側で処理し,
生成されたSQLでDBに問い合わせ、結果をもとにPDFを生成する。
しかし、帳票出力処理とバックエンド処理が密結合なため動作が重く、
保守性も拡張性も絶望的であった。
フロントとバックが密に絡んでて「改修したくても壊れる」状態であった。
これらの経験から、軽量でモダンな構築で実現できないか考察した。


 1. Flaskで作り直したときの構成メモ
以下の記事で Pyth...]]></description><link>https://zenn.dev/nickelth/articles/reportapp01flask</link><guid isPermaLink="true">https://zenn.dev/nickelth/articles/reportapp01flask</guid><pubDate>Tue, 05 Aug 2025 05:46:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zk4IP9qP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25231%25E3%2580%2591Java%25E3%2583%25AC%25E3%2582%25AC%25E3%2582%25B7%25E3%2583%25BC%25E5%25B8%25B3%25E7%25A5%25A8%25E5%2587%25BA%25E5%258A%259B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Python%25E3%2581%25AB%25E3%2583%25AA%25E3%2583%25A1%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjc3ODIwNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ニッケル</dc:creator></item><item><title><![CDATA[OpenAI Agents SDKで対話履歴を残す話]]></title><description><![CDATA[こんにちは、ランサーズでエンジニアをしている岡田です。
今回はOpenAI Agents SDKがv0.2.0のアップデートで対話履歴を保存できるようになったので、Dockerコンテナを使ってRedisに保存するCustomSessionを実装してみました。
https://github.com/openai/openai-agents-python/releases/tag/v0.2.0

 環境構築
ディレクトリ構成は以下の通りです。
agent/
├── Dockerfile
├── docker-compose.yml
├── redis_session.py
└── story...]]></description><link>https://zenn.dev/lancers/articles/95a30d5aa210aa</link><guid isPermaLink="true">https://zenn.dev/lancers/articles/95a30d5aa210aa</guid><pubDate>Tue, 05 Aug 2025 04:06:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GrMi1rFX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Agents%2520SDK%25E3%2581%25A7%25E5%25AF%25BE%25E8%25A9%25B1%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592%25E6%25AE%258B%25E3%2581%2599%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:okada%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNWQwNTJiY2EuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25BA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4MDhiNjVkMTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okada</dc:creator></item></channel></rss>