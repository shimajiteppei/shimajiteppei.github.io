<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2025-05-19T16:57:55+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2028047</id>
    <published>2025-05-19T16:57:55+09:00</published>
    <updated>2025-05-19T16:57:55+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/koras7788/items/a093533899c1510007c6"/>
    <url>https://qiita.com/koras7788/items/a093533899c1510007c6</url>
    <title> Kotlinのサスペンド関数（Suspend Function）</title>
    <content type="html">サスペンド関数は、Kotlinのコルーチン（非同期プログラミング）の中核となる機能です。長時間実行される操作を非ブロッキングな方法で処理するために設計されています。
1. サスペンド関数の基本概念
…</content>
    <author>
      <name>koras7788</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2028014</id>
    <published>2025-05-19T15:46:49+09:00</published>
    <updated>2025-05-19T15:46:49+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/koras7788/items/80c521811861c6e5f92f"/>
    <url>https://qiita.com/koras7788/items/80c521811861c6e5f92f</url>
    <title>Jetpack Composeのrememberの使い方について</title>
    <content type="html">基本概念
rememberはJetpack Composeで、コンポーザブル関数の再構成（recomposition）間で状態を保持するために使用されます。Composeのコンポーザブルは何度も呼び…</content>
    <author>
      <name>koras7788</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2028009</id>
    <published>2025-05-19T15:43:14+09:00</published>
    <updated>2025-05-19T15:44:10+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/koras7788/items/52d2990d5bbb3984041b"/>
    <url>https://qiita.com/koras7788/items/52d2990d5bbb3984041b</url>
    <title>Kotlinのinline関数の使い方</title>
    <content type="html">基本概念
inline関数はKotlinの重要な機能で、関数呼び出しのオーバーヘッドを削減するために使用されます。通常の関数呼び出しでは、呼び出し元のコードから関数本体へジャンプし、処理後に呼び出し…</content>
    <author>
      <name>koras7788</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2027683</id>
    <published>2025-05-18T20:54:54+09:00</published>
    <updated>2025-05-18T20:58:43+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tsubasa12/items/13ed4f973f36114e2ea5"/>
    <url>https://qiita.com/Tsubasa12/items/13ed4f973f36114e2ea5</url>
    <title>【Android】EdgeToEdgeの対応のチートシート</title>
    <content type="html">はじめに
Android SDK35以降から必要となる対応で対応内容などを調べなおしたりするのが面倒だと思ったので簡単なものをメモがわりに記事に残しておきます。
実装
ViewExtensionsな…</content>
    <author>
      <name>Tsubasa12</name>
    </author>
  </entry>
</feed>
