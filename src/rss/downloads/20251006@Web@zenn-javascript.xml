<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 06 Oct 2025 11:50:52 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[MapLibre GL JSで透過PNG画像から輪郭を抽出して地図上で衝突判定を実装する]]></title><description><![CDATA[
 はじめに
株式会社 Geolonia が提供する「地図ぼうけんラボ」の開発において、地図上でのスプライトアイコン同士の衝突判定を実装する必要がありました。単純な円形や矩形の判定では不十分で、任意の形状での正確な判定が求められたため、透過 PNG 画像から輪郭を抽出し、ポリゴン化して衝突判定を行うサンプルを実装しました。
本記事では、Canvas API を使用したピクセルレベルの画像解析から地理座標系での衝突判定まで、実装の詳細を解説します。
デモページ

 実装の概要

 システム構成
このシステムは以下の要素で構成されています。


MapLibre GL JS: 地図表示とイン...]]></description><link>https://zenn.dev/mopinfish/articles/example-of-collision-detection</link><guid isPermaLink="true">https://zenn.dev/mopinfish/articles/example-of-collision-detection</guid><pubDate>Mon, 06 Oct 2025 07:37:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iGIT_BRK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MapLibre%2520GL%2520JS%25E3%2581%25A7%25E9%2580%258F%25E9%2581%258EPNG%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E8%25BC%25AA%25E9%2583%25AD%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25A7%25E8%25A1%259D%25E7%25AA%2581%25E5%2588%25A4%25E5%25AE%259A%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Otsuka Noboru</dc:creator></item><item><title><![CDATA[【TypeScript】カスタムエラーのすすめ]]></title><description><![CDATA[TypeScriptで開発をしていると、APIエラーやバリデーションエラーなど、さまざまなエラーを扱う場面があります。
そんなときに、標準のErrorクラスだけで対応していませんか。
この記事では、カスタムエラーを導入するメリットと、ボイラープレートを減らしてカスタムエラーを楽に定義出来るライブラリを紹介します。

 カスタムエラーを作る理由
標準のErrorクラスを使用することで楽にエラーを作成できますが、次のような問題があります。

エラーの種類を区別しづらい
追加の情報（HTTPステータスやエラーコードなど）を持たせづらい
メッセージが一貫しない

たとえば次のような例を考えてみま...]]></description><link>https://zenn.dev/praha/articles/a8b72ba36294fe</link><guid isPermaLink="true">https://zenn.dev/praha/articles/a8b72ba36294fe</guid><pubDate>Mon, 06 Oct 2025 04:40:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KNgurxLA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Karibash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiZDIyMmFjMTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PrAha%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Karibash</dc:creator></item><item><title><![CDATA[【今さらシリーズ】タスクランナーってなに？]]></title><description><![CDATA[
 はじめに
今年の半ばからフロントエンドエンジニアになりました。
開発関連の用語やツールをうまく説明できないな...と思うことがしばしばあるため、言語化の練習を始めることにしました。
内容に誤りがあればご指摘いただけますと大変ありがたいです🙇

 リサーチ前の認識

タスクランナー＝ファイルの修正などの開発状況を監視して差分があったらビルドするツール
つまり、開発状況を監視してくれるツール

なんともお粗末ですね〜。
はい、きちんと調べて学びます。
以下、リサーチ後！

 タスクランナーってなに？

Web構築に必要な処理を自動で行ってくれるプログラムのこと

※余談、テンプレートエン...]]></description><link>https://zenn.dev/eng78/articles/84740c7d71a4e3</link><guid isPermaLink="true">https://zenn.dev/eng78/articles/84740c7d71a4e3</guid><pubDate>Sun, 05 Oct 2025 21:14:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lyqseifo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BB%258A%25E3%2581%2595%25E3%2582%2589%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2583%25E5%2585%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MTUxMDUxYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>七八</dc:creator></item><item><title><![CDATA[【今さらシリーズ】browserifyをざっと理解する]]></title><description><![CDATA[
 はじめに
今年の半ばからフロントエンドエンジニアになりました。
開発関連の用語やツールをうまく説明できないな...と思うことがしばしばあるため、
言語化の練習を始めることにしました。

 本記事の目的

開発関連のツールや用語への自身の理解を深める


 browserifyってなに？
→端的にいうと「jsファイル間の依存関係を解決したり、モジュールを一つにまとめるツール」のこと
▼詳細

依存関係を解決する＝ファイルの読み込み順や関係性を管理すること
ほとんどのプログラミング言語ではモジュールの仕組みが提供されているがjs（ES5）では提供されていなかった
モジュール管理の仕様は大...]]></description><link>https://zenn.dev/eng78/articles/ac2cc7c3ffbdb0</link><guid isPermaLink="true">https://zenn.dev/eng78/articles/ac2cc7c3ffbdb0</guid><pubDate>Sun, 05 Oct 2025 18:37:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---rAAI43_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BB%258A%25E3%2581%2595%25E3%2582%2589%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2580%2591browserify%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2583%25E5%2585%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MTUxMDUxYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>七八</dc:creator></item><item><title><![CDATA[Zenn登録にあたり、自己紹介をします。]]></title><description><![CDATA[
 この記事について
はじめまして、ITエンジニアのminamoです。
Zennに登録したばかりなので、まずはこの記事で投稿を試しがてら、自己紹介をします。
よろしくお願いします。

 はじめに
長年遊んでいるWindowsのフリーゲーム、ヴァーレントゥーガの更新が途絶えて数年たったころ、Web版のヴァーレントゥーガのようなものを作りたいと考えるようになりました。
おりしもITエンジニアとして少し経験を積み重ねたころ。プログラミング領域でも多少の技量がついてきたと思い、数年前に技術研究、開発を始めていました。
私生活の多忙化やモチベーションなどの都合で一旦開発は途絶えたのですが、半年ほど...]]></description><link>https://zenn.dev/minamo_labo/articles/ec0aa59644a677</link><guid isPermaLink="true">https://zenn.dev/minamo_labo/articles/ec0aa59644a677</guid><pubDate>Sun, 05 Oct 2025 16:30:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U5UnFK1L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25AB%25E3%2581%2582%25E3%2581%259F%25E3%2582%258A%25E3%2580%2581%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%25E3%2582%2592%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:minamo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSklZdWpxUFNmWnF4WHlMMzVmQ2F4R1FHS1RYbHVfdE1GQk52WkQ4ZC10dl9nQWhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>minamo</dc:creator></item><item><title><![CDATA[「happy-dom」vs「jsdom」 機能比較とパフォーマンス測定]]></title><description><![CDATA[
 はじめに
現在、React Router を使ってウェブアプリを作っているのですが、テストライブラリには happy-dom を使っています。
当初は jsdom を使っていたのですが、画面遷移時のテストで上手くいかない問題に遭遇しました。
具体的には、リダイレクト先の URL をテストで確認したかったのですが、jsdom で実現するには結構難航しそうでした。
happy-dom に切り替えることで無事解消されましたが、そもそも happy-dom と jsdom にはどんな違いがあるのか気になり、今回調べてみました。
また、以下の記事で「happy-dom の方がパフォーマンスが良...]]></description><link>https://zenn.dev/lecto/articles/052528b20144da</link><guid isPermaLink="true">https://zenn.dev/lecto/articles/052528b20144da</guid><pubDate>Sun, 05 Oct 2025 14:16:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rn_o_Hfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258Chappy-dom%25E3%2580%258Dvs%25E3%2580%258Cjsdom%25E3%2580%258D%2520%25E6%25A9%259F%25E8%2583%25BD%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25B8%25AC%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tamoco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYzIzMDI3ODQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Lecto%252C%2520Inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSncxc3hPRzZtOHdRX0tfU0JsaGszN2s5dFhWUl9RNnJ3UFdDQlQ4UTNieDJEei10cmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tamoco</dc:creator></item><item><title><![CDATA[PixiJS v8 におけるシーン切替（Container切替）を実装してみる]]></title><description><![CDATA[Phaser でゲーム開発をしていて、「そういえば PixiJS におけるシーン切替ってどうするのだろうか？」と、何気なく思いまして…。
少し調査 &amp; サンプルコードを作成してみました。

 PixiJS v8 のシーンとは？
公式サイトを確認しましたが、PixiJS v8 には、いわゆるシーンは存在しない様子。
一応、ドキュメントには Scene のページが存在しますが、あくまでドキュメントのカテゴリータイトルとして Scene と命名しているだけのようでした。
試しに GPT-5 mini にも聞いてみました。
以下が解答になります。

PixiJS v8 では「シーン」は単...]]></description><link>https://zenn.dev/t_tonyo_maru/articles/924434befaf146</link><guid isPermaLink="true">https://zenn.dev/t_tonyo_maru/articles/924434befaf146</guid><pubDate>Sun, 05 Oct 2025 14:12:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FF20MB6l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PixiJS%2520v8%2520%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%25B3%25E5%2588%2587%25E6%259B%25BF%25EF%25BC%2588Container%25E5%2588%2587%25E6%259B%25BF%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2582%2588%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNjVjZjg3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>とんよー。</dc:creator></item><item><title><![CDATA[isXXX を簡単に構築してみいひん？]]></title><description><![CDATA[みなさん、こんにちは！もうそろそろ紅葉の季節ですね 🍁
フロントエンドエンジニアの @nyaomaru です！

 🧪 きっかけ
TypeScript で開発していると、「value is Foo」っていう型ガードを何度も何度も手書きしてるな… と思うことあらへん？
しかも、型とランタイムの判定がズレないように神経をすり減らすのも、地味にストレス。
そこで登場するのが is-kit や！

https://github.com/nyaomaru/is-kit
軽量・ゼロ依存の 「ガード生成キット」 として、退屈な boilerplate を一刀両断やで ✂️

 🎁 なんで is-kit...]]></description><link>https://zenn.dev/nyaomaru/articles/introduce-is-kit</link><guid isPermaLink="true">https://zenn.dev/nyaomaru/articles/introduce-is-kit</guid><pubDate>Sun, 05 Oct 2025 12:03:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2swkJygd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:isXXX%2520%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%2584%25E3%2581%25B2%25E3%2582%2593%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyaomaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNzViM2IxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>nyaomaru</dc:creator></item><item><title><![CDATA[💻 JavaScriptで作るシンプルなメモアプリの実装解説]]></title><description><![CDATA[本記事では、HTMLとJavaScriptだけで作る最小構成のメモアプリを紹介します。
ブラウザ上で「新規メモ」ボタンを押すと、入力した内容がリストに追加される仕組みです。

 1. 実装の概要
このアプリは2つの処理で構成されています。

入力内容をHTMLに追加する処理
ボタンがクリックされたら上記処理を実行するイベント設定
これらを分けて考えることで、コードが整理されやすくなります。


 2. メモの追加処理
// 入力を受け取り、要素を生成してHTMLに追加
function memo() {
  var memo = prompt("入力してください");
  var new...]]></description><link>https://zenn.dev/taiyok/articles/21e4c55f700da2</link><guid isPermaLink="true">https://zenn.dev/taiyok/articles/21e4c55f700da2</guid><pubDate>Sun, 05 Oct 2025 06:49:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ehu1qtac--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520JavaScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E3%2583%25A1%25E3%2583%25A2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sol%2540SE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzYyZDU2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Sol@SE</dc:creator></item><item><title><![CDATA[NotebookLMと開発者ツールだけでWebマニュアルをAIが読めるナレッジに変換するチョイテク]]></title><description><![CDATA[
 はじめに
案件でとあるサービスのマニュアルを読む機会があったのですが、膨大なページの中から「どういう機能があるか」「どういう設定項目があるか」を探し出すのが非常に大変でした。
「このマニュアル全体の内容をAIに読み込ませて、手軽に質問できたら便利なのに…」
そう思ったことはないでしょうか。
実は、NotebookLM と ブラウザの開発者ツール さえあれば、専門的なスクレイピングツールを使わずに、Webページの内容をAIが読み込めるナレッジベースに変換できます。
この記事では、その具体的な手順を、Laravelの公式マニュアルを例にご紹介します。


 今回使うもの


Google...]]></description><link>https://zenn.dev/sonicmoov/articles/bf6e52ad2fabb3</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/bf6e52ad2fabb3</guid><pubDate>Sun, 05 Oct 2025 01:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oeRjg3-U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NotebookLM%25E3%2581%25A8%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7Web%25E3%2583%259E%25E3%2583%258B%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592AI%25E3%2581%258C%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E3%2583%258A%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B8%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2581%25E3%2583%25A7%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takemo101%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDBmZGFmNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>takemo101</dc:creator></item><item><title><![CDATA[[TS] クラスのコンストラクタを Awaitable にする]]></title><description><![CDATA[
 はじめに
TypeScript のコンストラクタで非同期処理を行い、インスタンスを直接 await したいことってありますよね？
私は別にありません
// 例: DB への接続
const db = await new Db(url)
これについて、Promise を継承することで実現できるのではと思い試してみました

 PromiseLikeBase
まず「コンストラクタの返り値が Awaitable なクラス」を書くにあたって生じるボイラープレートを汎用クラスとして定義します

 実装
class PromiseLikeBase&lt;T&gt; extends Promise&...]]></description><link>https://zenn.dev/482f/articles/ts-extends-promise</link><guid isPermaLink="true">https://zenn.dev/482f/articles/ts-extends-promise</guid><pubDate>Sun, 05 Oct 2025 00:07:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ntfFxAIs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTS%255D%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2582%2592%2520Awaitable%2520%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:482F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiZWVmY2NlM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>482F</dc:creator></item><item><title><![CDATA[Vue.js初心者が管理画面を実装して学んだ11のこと]]></title><description><![CDATA[
 はじめに
Vue.js未経験の状態から、IoTデバイス管理画面（Admin Dashboard）を実装する機会がありました。この記事では、実装過程で学んだVue.js・JavaScriptの基礎知識を、初心者目線で整理してまとめます。
前提条件:

Vueは完全な初心者
JSは一定の学習経験あり（その他、pythonなど一定はプログラミング言語経験あり）

実装した機能:

デバイス一覧表示（リアルタイムステータス表示）
Azure Functions APIとの連携
Piniaによる状態管理
エラーハンドリング・再試行機能

技術スタック:

Vue 3 (Composition ...]]></description><link>https://zenn.dev/ktsushima/articles/vue-learning-from-admin-dashboard</link><guid isPermaLink="true">https://zenn.dev/ktsushima/articles/vue-learning-from-admin-dashboard</guid><pubDate>Sat, 04 Oct 2025 14:27:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1mmDIgDj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue.js%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A011%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ktsushima%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHh5X05oZ1RQRUtaUmxmZEZfRzRIYzUxRkZOc25Qc09SZGRpZFY0SGktTDZQazRjZmY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ktsushima</dc:creator></item><item><title><![CDATA[JavaScriptでABC426(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc426

 A - OS Versions
https://atcoder.jp/contests/abc426/tasks/abc426_a
全パターン比較書いても9パターンしかないし、if...elseを9回書いても別にいいと思う
楽するならこっちで勝手にバージョン番号をつけてしまうのがいいかなぁ
https://atcoder.jp/contests/abc426/submissions/69823022
1分29秒 AC!

 B - The Odd One Out
https://atcoder.jp/contest...]]></description><link>https://zenn.dev/aya_koto/articles/996c6eb72a86ea</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/996c6eb72a86ea</guid><pubDate>Sat, 04 Oct 2025 13:44:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D-Vtg8A8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC426%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[pointermoveで真面目にドラッグ]]></title><description><![CDATA[
 ここが真面目

軽快な動作：requestAnimationFrame で描画
高速移動で切れない：setPointerCapture

スクロールしても切れない：scroll でも描画
シンプルな後処理：lostpointercapture で releasePointerCapture を拾う設計
なんか100行近くなってしまった

タッチデバイス用に touch-action: none を付与しているので、コードを使われる際は CodePen でCSSもご確認ください。

コードconst target = document.querySelector('.draggable...]]></description><link>https://zenn.dev/nishinoshake/articles/ef76a7a740f4de</link><guid isPermaLink="true">https://zenn.dev/nishinoshake/articles/ef76a7a740f4de</guid><pubDate>Sat, 04 Oct 2025 09:54:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rg_7e-_5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pointermove%25E3%2581%25A7%25E7%259C%259F%25E9%259D%25A2%25E7%259B%25AE%25E3%2581%25AB%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishinoshake%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiNzI3NTc5MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>nishinoshake</dc:creator></item><item><title><![CDATA[配列のテキストを簡単に改行させる方法]]></title><description><![CDATA[
 タグを増やさず簡単に改行させる
配列に.join("\n")を付けるとデータの間に改行コードが含まれる

 配列と join の動作
["A", "B", "C"].join("\n")

は内部的にこうなる👇

"A" + "\n" + "B" + "\n" + "C"

 join使用例
   {
        title: "改行させたい",
        content: [
            "• テキスト",
            "• テキスト",
            "• テキスト"
        ].join("\n"),
    },

 whi...]]></description><link>https://zenn.dev/wakki/articles/528a06593ecffe</link><guid isPermaLink="true">https://zenn.dev/wakki/articles/528a06593ecffe</guid><pubDate>Fri, 03 Oct 2025 08:30:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NLd3QpEI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E6%2594%25B9%25E8%25A1%258C%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkOTg4YTEyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ワッキー</dc:creator></item><item><title><![CDATA[なぜ、JavaScriptこそが現在最強のWORA言語なのか？]]></title><description><![CDATA[
 はじめに
「Write Once, Run Anywhere（WORA）」という言葉は1990年代にJavaが掲げた理念でした。一度書いたコードが、どんな環境でもそのまま動くという理想は、当時の開発者にとって大きな夢でした。ところが2020年代を迎えた現在、その理念を最も現実的に体現しているのはJavaではなくJavaScriptです。
JavaScriptは1995年に誕生したときには「ブラウザ上の簡易スクリプト」に過ぎませんでした。しかし時代を経るごとに進化し、Webを超えてサーバー、デスクトップ、モバイルへと拡大し、いまや社会全体を支えるプラットフォーム言語となりました。加えて...]]></description><link>https://zenn.dev/pdfractal/articles/464a0742526587</link><guid isPermaLink="true">https://zenn.dev/pdfractal/articles/464a0742526587</guid><pubDate>Fri, 03 Oct 2025 03:33:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O-kO6kRL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E3%2580%2581JavaScript%25E3%2581%2593%25E3%2581%259D%25E3%2581%258C%25E7%258F%25BE%25E5%259C%25A8%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AEWORA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pdfractal%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZmJkZmFkY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>pdfractal</dc:creator></item><item><title><![CDATA[TypeScriptのジェネリクスについて]]></title><description><![CDATA[
 ジェネリクスとは
ジェネリクスは型を安全に使いつつ使いまわせるようにする便利機能です。
型の安全性と汎用性のあるコードはトレードオフでしたがこれを解決するような概念になります。

 どのような恩恵がある？
ジェネリクスの恩恵は先ほど述べたように型の安全性を担保したまま汎用的に使い回すことができるところです。
まずはよろしくない書き方から。
汎用的に使いたいので引数の型にany[]を使って全ての型の引数を許容するように書いてみます。
function getFirstItemBad(items: any[]): any {
  return items[0];
}

const num...]]></description><link>https://zenn.dev/rihitonnnu/articles/073eedc9a54825</link><guid isPermaLink="true">https://zenn.dev/rihitonnnu/articles/073eedc9a54825</guid><pubDate>Thu, 02 Oct 2025 13:09:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CIj3wlZH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rihitonnnu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekV3Y0FzbVR0eW1oMzdwbEZqVm5HbV91aGRPbmxzRDRqM2UyN2o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>rihitonnnu</dc:creator></item><item><title><![CDATA[Vue3のv-modelを調べてみた]]></title><description><![CDATA[
 はじめに
Vue3のv-modelは、フォーム要素とコンポーネント間で双方向データバインディングを実現するための強力なディレクティブです。この記事では、v-modelの基本概念から、カスタムコンポーネントでの実装方法、そして実用的なパターンまで詳しく解説します。

 この記事で学べること


v-modelの基本概念と仕組み
フォーム要素でのv-modelの使い方
カスタムコンポーネントでのv-model実装
複数のv-modelの活用方法
実用的なパターンとベストプラクティス


 v-modelとは？
v-modelは、Vue.jsが提供する双方向データバインディングのためのディ...]]></description><link>https://zenn.dev/shunsuke_stack/articles/2751b9da22afb7</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/2751b9da22afb7</guid><pubDate>Thu, 02 Oct 2025 01:26:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gUq_Kmwb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AEv-model%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[5. 万博自動化検証 ― ページ遷移に沿った処理フロー（来場日時変更編）]]></title><description><![CDATA[
 5. 万博自動化検証 ― ページ遷移に沿った処理フロー（来場日時変更編）
📌 前回の記事：4. 万博自動化検証 ― 万博サイトでの自動化概要


 来場日変更の自動化パターン

 対象となると考えられるURL（@match）

https://ticket.expo2025.or.jp/ticket_visiting_reservation/*



 処理概要
来場日を変更する流れでは、以下のような処理が考えられます。


自動リロードの管理

毎分決まった秒数に合わせてリロードを実行。
ページ右下に残り秒数を表示し、クリックで停止できるようにする。
万博サイトで人が人手で操作でき...]]></description><link>https://zenn.dev/tom_my_tech/articles/banpaku-visiting-reservation</link><guid isPermaLink="true">https://zenn.dev/tom_my_tech/articles/banpaku-visiting-reservation</guid><pubDate>Wed, 01 Oct 2025 23:18:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_cDqXexY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:5.%2520%25E4%25B8%2587%25E5%258D%259A%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E6%25A4%259C%25E8%25A8%25BC%2520%25E2%2580%2595%2520%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AB%25E6%25B2%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25EF%25BC%2588%25E6%259D%25A5%25E5%25A0%25B4%25E6%2597%25A5%25E6%2599%2582%25E5%25A4%2589%25E6%259B%25B4%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tom_my_tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MTUyYjI0ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tom_my_tech</dc:creator></item><item><title><![CDATA[phaserでゲーム開発 第八回]]></title><description><![CDATA[phaserでゲーム開発シリーズ、第八回。
前回の記事はこちら。
https://zenn.dev/k_tabuchi/articles/b1b3953a3ee561
今回は　コードを役割ごとに整理し、保守性を高めるためのリファクタリング手順を解説します。
ここまでは一つのファイルに全ての処理をまとめていましたが、一定の規模を超え、管理が難しくなってきたため、責務ごとに分割していきたいと思います。

 1. リファクタリング前の状態と課題
まず、GameScene.js 1 ファイルに以下の処理をすべて書いていました。

プレイヤー生成・入力処理
敵の生成・行動制御
背景や足場の生成
攻...]]></description><link>https://zenn.dev/k_tabuchi/articles/71d19f8140a657</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/71d19f8140a657</guid><pubDate>Wed, 01 Oct 2025 09:13:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1mKPCJfB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:phaser%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%2520%25E7%25AC%25AC%25E5%2585%25AB%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>k-tabuchi</dc:creator></item></channel></rss>