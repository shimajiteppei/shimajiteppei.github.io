<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 20 Jan 2025 08:55:09 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Docker × Kubernetes をはじめる]]></title><description><![CDATA[
 はじめに
DockerやKubernetesについて知らないことが多かったので、これを機にハンズオンの題材として勉強し直してみました。この記事では、

DockerやKubernetesとは何かを学びたい方
Dockerを使った仮想環境の構築をしたい方
Kubernetesのマニフェストを使ってみたい方

を対象として、DockerとKubernetesの基本概念を交えたハンズオンを行います。
※ 1時間半程度を想定しています。

 本ハンズオンの流れ

Dockerを使った仮想環境の構築をして、Webサーバを立てる。
Kubernetes上でWordpressを動かす。


 Do...]]></description><link>https://zenn.dev/areaeffectcloud/articles/1dad29586fd3f6</link><guid isPermaLink="true">https://zenn.dev/areaeffectcloud/articles/1dad29586fd3f6</guid><pubDate>Mon, 20 Jan 2025 06:06:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---ShM102y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25C3%2597%2520Kubernetes%2520%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AreaEffectCloud%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDJnYi1rWE1fRGJVRzJMemRnMFZxUFE1TWMySTg3V3o1YWt5TnhmckRsd1c1MTdHUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AreaEffectCloud</dc:creator></item><item><title><![CDATA[PyCharm+Dockerでpythonのdevcontainer環境を構築する]]></title><description><![CDATA[
 はじめに
PyCharmでもvscodeのようにDevコンテナを使って環境構築できたらいいなと思いませんか？
ローカル環境に対して必要なものをインストールすると、環境が汚れてしまうことがあります。
だから、PyCharmでもDevコンテナを開発環境のように使いたいですよね。
実は、PyCharmでもDevコンテナを使って環境構築ができるんです。
devcontainerを使うことで、以下のようなメリットがあります。


環境の一貫性：プロジェクトごとに一貫した開発環境を提供できるため、環境依存の問題を減らすことができます。

迅速なセットアップ：新しいメンバーがプロジェクトに参加する...]]></description><link>https://zenn.dev/yamabiko/articles/pycharm-devcontainer</link><guid isPermaLink="true">https://zenn.dev/yamabiko/articles/pycharm-devcontainer</guid><pubDate>Sun, 19 Jan 2025 23:33:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dDhdyRWH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyCharm%252BDocker%25E3%2581%25A7python%25E3%2581%25AEdevcontainer%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25B3%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjMGYwYjE1YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまびこ</dc:creator></item><item><title><![CDATA[LeftHook で PHPStan と PHP-CS-Fixer と PHPUnit を使う]]></title><description><![CDATA[
 はじめに
PHP の開発でよく使う以下のツールを Lefthook で動かしてみたので備忘録。

PHPStan
PHP-CS-Fixer
PHPUnit

環境に依存したくなかったので Docker を使って実行してみる。

 前提

以下がインストールされていること。

Lefthook
Docker


lefthook.yml は設定済み。


 セットアップ
あらかじめ lefthook.yml があるディレクトリ内で以下を実行しておく必要がある。
% lefthook install
動作確認をしたディレクトリ構成は以下。
├── .git
├── .php-cs-fix...]]></description><link>https://zenn.dev/oppara/articles/lefthook-phpstan-phpcsfixer</link><guid isPermaLink="true">https://zenn.dev/oppara/articles/lefthook-phpstan-phpcsfixer</guid><pubDate>Sun, 19 Jan 2025 14:49:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z9yHG6fv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeftHook%2520%25E3%2581%25A7%2520PHPStan%2520%25E3%2581%25A8%2520PHP-CS-Fixer%2520%25E3%2581%25A8%2520PHPUnit%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oppara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyYTRKSGo5UzNEckZ0dTlwcUd5d0V4ZEZZTjZmS0JUQjBkTkthdFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oppara</dc:creator></item><item><title><![CDATA[VSCodeの開発コンテナ、いつどうやって開いたやつだっけ]]></title><description><![CDATA[
 やりたいこと
VSCode Dev Containers、便利でよく使っています。
しかしある時、「このコンテナはどのコマンドから起動したんだっけ」「どのDockerfileから作ったんだっけ」といったことを確認したい場面に遭遇しました。
そこで、VSCodeで現在実行中のコンテナの情報を確認するコマンドをメモしておきます。

 結論


[開発コンテナ内で実行] 調べたいコンテナのIDを取得（正確には先頭10文字）
hostname



[ホストマシンで実行] コンテナIDでinspectし、詳細情報を確認
docker inspect &lt;コンテナID&gt; | less...]]></description><link>https://zenn.dev/cherr/articles/4e8ee2aa2c923b</link><guid isPermaLink="true">https://zenn.dev/cherr/articles/4e8ee2aa2c923b</guid><pubDate>Sun, 19 Jan 2025 13:07:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2fJ5-kzR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2580%2581%25E3%2581%2584%25E3%2581%25A4%25E3%2581%25A9%25E3%2581%2586%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E3%2581%2584%25E3%2581%259F%25E3%2582%2584%25E3%2581%25A4%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Cherr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyOWI4OGMyMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Cherr</dc:creator></item><item><title><![CDATA[Docker：基本操作]]></title><description><![CDATA[
 Docker基本操作

 コマンド

 dockerイメージ関連

公式のdockerイメージを検索する


キーワード：nginx
docker search {キーワード} --filter is-official=true


イメージを取得する


キーワード：nginx
docker image pull {キーワード}


イメージの確認

// （docker imagsに省略可能）
docker image ls

イメージの起動


キーワード：ubuntu
docker run {イメージ名} cat /etc/issue


イメージの起動（bash）


キー...]]></description><link>https://zenn.dev/tomotiro/articles/893209bd5931b2</link><guid isPermaLink="true">https://zenn.dev/tomotiro/articles/893209bd5931b2</guid><pubDate>Sun, 19 Jan 2025 11:56:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WrsrJqjj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2588%25E3%2583%25A2%25E3%2583%2581%25E3%2583%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1OGYxMmE5OTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>トモチロ</dc:creator></item><item><title><![CDATA[【開発環境】TypeScript, Express, Docker, VScodeでリモートデバッグ]]></title><description><![CDATA[
 TL;DR

ExpressをVScodeでリモートデバッグしたい
サーバーサイドのDockerコンテナに、リモートデバッグ用のポート9229を開放する


 ディレクトリ構成

Reactプロジェクトのapiパッケージ内にExpressがプロジェクトのある変な感じの構成？

frontend/, backens/のような一般的なパッケージ構成の場合、launch.json, tsconfig.jsonのディレクトリ指定部分とかをええ感じにしとって下さい

.vscode/
├── launch.json
docker/
├── backend.Dockerfile
├── fron...]]></description><link>https://zenn.dev/kazumadev/articles/7f8d954ee78bfc</link><guid isPermaLink="true">https://zenn.dev/kazumadev/articles/7f8d954ee78bfc</guid><pubDate>Sun, 19 Jan 2025 06:00:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S02eZ-gS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2580%2591TypeScript%252C%2520Express%252C%2520Docker%252C%2520VScode%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazumakishimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lRWGJ1cy1vSkozOE5FYjVvdDBlSGdLQzFZOWFEQVZ3UFR6VDdNUVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazumakishimoto</dc:creator></item><item><title><![CDATA[ECS（Rails API）のEC2をt3からt4gに変更した記録]]></title><description><![CDATA[自分の環境では terraform でインスタンスを立ち上げているのでその前提で書いていきます。

 インスタンスタイプの違い
まず t3 と t4g は何が違うの？という疑問があると思いますので自分が調べた範囲を書き出します。



項目／インスタンスタイプ
t3
t4g




CPU アーキテクチャ
x86（intel）
arm ベース（AWS Graviton2）


パフォーマンス
1
1.4


通常価格（small）
USD 0.0272/h
USD 0.0216/h


Savings Plans,リザーブド前払価格（small）
USD 140/y
USD 111/y
...]]></description><link>https://zenn.dev/isosa/articles/0089c054f87fcd</link><guid isPermaLink="true">https://zenn.dev/isosa/articles/0089c054f87fcd</guid><pubDate>Sun, 19 Jan 2025 05:07:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--npAZD6mu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECS%25EF%25BC%2588Rails%2520API%25EF%25BC%2589%25E3%2581%25AEEC2%25E3%2582%2592t3%25E3%2581%258B%25E3%2582%2589t4g%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYWRkZGNkNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka</dc:creator></item><item><title><![CDATA[Laravel Sailを使った環境構築と「Ports are not available」のエラー対処]]></title><description><![CDATA[Laravelの開発環境を整えるにあたって、Laravel Sailを使用しました。
Laravel Sailを使った環境構築の方法と発生したエラーの対処について記述します。
（記載内容はWindows環境です。）

 Laravel Sailとは
Laravel Sailは、Dockerを使った開発環境です。
Laravel Sailの場合、MySQLやMailHog、Redisといったツールが各コンテナの中に入っています。
（※Laravel Sailのインストールをするには、Dockerのインストールが必要。）
（※さらにWindowsの場合、Dockerをインストールする前にWS...]]></description><link>https://zenn.dev/yomogi12/articles/9c63dfc1dcd033</link><guid isPermaLink="true">https://zenn.dev/yomogi12/articles/9c63dfc1dcd033</guid><pubDate>Sat, 18 Jan 2025 16:53:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GAhW0BIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%2520Sail%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E3%2580%258CPorts%2520are%2520not%2520available%25E3%2580%258D%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yomogimoyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVdMc2hPTXhGcnZyNmZtUGZmbmpQX0R5MUJQeU1lZTkxS3NTRzBhajBQU3c4MFlvVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yomogimoyo</dc:creator></item><item><title><![CDATA[Docker イメージにクレデンシャル情報を含めて復元してみた]]></title><description><![CDATA[Docker イメージで環境変数を使用するとクレデンシャル情報(秘密情報)を含める場合があり、イメージが流出した際に復元できてしまいます。今回はそれをテストしてみました。

 何が問題なのか？
Dockerfile にて ARG、ENV に渡された情報はイメージにも書き込まれ、それがセキュリティリスクになるということでした。以下のような書き方で発生します。
Dockerfile

ARG SECRET_KEY
ENV SECRET_KEY=${SECRET_KEY}

!
この時クレデンシャル情報を直書きしていなくてもリスクが生まれることに注意してください。

今回クレデンシャル情報はG...]]></description><link>https://zenn.dev/isosa/articles/0dcd64b809abcb</link><guid isPermaLink="true">https://zenn.dev/isosa/articles/0dcd64b809abcb</guid><pubDate>Sat, 18 Jan 2025 05:24:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4iAplV4u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2587%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AB%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%25E5%25BE%25A9%25E5%2585%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYWRkZGNkNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka</dc:creator></item><item><title><![CDATA[Dockerで学習用のPython環境の構築するメモ]]></title><description><![CDATA[
 Dockerで学習用のPython環境の構築するメモ
Dockerで学習用のPython環境を構築を行ったのでコードのメモ。

 今回の環境について

Pythonについての学習用の環境
本番環境の予定がない


 コード

 Dockerfile
FROM python:3.13-bullseye

USER root
RUN apt-get update

RUN groupadd python \
&amp;&amp; useradd python -m -g python

# COPY ./requirements.txt /home/python
# RUN pip in...]]></description><link>https://zenn.dev/mitate_gengaku/articles/docker-python-environment</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/docker-python-environment</guid><pubDate>Fri, 17 Jan 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7jUPoOGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E7%2594%25A8%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[各種システム及びコマンドのプロキシ設定ガイド]]></title><description><![CDATA[
 はじめに
既に3週間は何かの病気に掛かり続けている @___nix___  です。

 背景
制約のある環境では経路も限定されていることがあります。
或いは特定のIPからの接続のみ許可されているケースもあります。
そんな時はプロキシを経由して外部にアクセスします。

 概要
プロキシ経由のアクセスですが、OSの設定をしたとしてもシステムやコマンドが独自に経路を決めてしまうので、「あれ？設定したのにプロキシ経由にならないな」ということが発生します。
今回、OSやシステム、或いはコマンドによるプロキシ設定をまとめてみました。

 設定方法

 1. Linux システム全般

 環境変数...]]></description><link>https://zenn.dev/nix/articles/04810a519df02e</link><guid isPermaLink="true">https://zenn.dev/nix/articles/04810a519df02e</guid><pubDate>Fri, 17 Jan 2025 08:33:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--do_B0Lna--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%2584%25E7%25A8%25AE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E5%258F%258A%25E3%2581%25B3%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:___nix___%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYWYxODlkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>___nix___</dc:creator></item><item><title><![CDATA[TypeScriptとpnpmとdockerで自動テストを導入した話]]></title><description><![CDATA[
 環境

バックエンドフレームワーク: hono
フロントフレームワーク: Next.js
ORM: prisma
ランタイム: Node.js
テスト: vitest
dockerランタイム: PodmanDesktop（ファイルシステムにvirtiofsを使用）
PC: MacBookPro M2
DB: TiDB
CI: Github Actions


 2023年にPHPでテストを導入したときの反省点
元々テストが無いコードだったのでユニットテストが書きづらく、インテグレーションテストメインでテストを記述するように導入した。
チームの方々はテスト導入後に挫折せずにテストを書き...]]></description><link>https://zenn.dev/daijinload/articles/fa0dcd219d48c1</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/fa0dcd219d48c1</guid><pubDate>Fri, 17 Jan 2025 05:51:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y9mRUBwc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A8pnpm%25E3%2581%25A8docker%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item><item><title><![CDATA[WSL2＋Dockerでdocker-composeで始まるコマンドを実行する場所について]]></title><description><![CDATA[Dockerの勉強をしているのですが、
わからな過ぎて頭がドッカーんとなってます。
こんにちは、
ワニかず@40歳 出戻りエンジニアです。
今回は、
WSL2＋Dockerでdocker-composeで始まるコマンドを実行する場所
についてまとめました。
なお、
この記事は超初心者向けの記事になります。
（私の備忘録）

 docker-composeで始まるコマンドは何処で実行すればいい？

 条件

Windows
WSL2
Docker Desktop
VS Code

イメージ図は以下のような形です。

 実行する場所
docker-compose で始まるコマンドは、
必ず ...]]></description><link>https://zenn.dev/40_comeback_eng/articles/52b014173a9aa4</link><guid isPermaLink="true">https://zenn.dev/40_comeback_eng/articles/52b014173a9aa4</guid><pubDate>Fri, 17 Jan 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ThqWxv3q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25EF%25BC%258BDocker%25E3%2581%25A7docker-compose%25E3%2581%25A7%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%258B%25E3%2581%258B%25E3%2581%259A%254040%25E6%25AD%25B3%2520%25E5%2587%25BA%25E6%2588%25BB%25E3%2582%258A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGNhZmRmOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワニかず@40歳 出戻りエンジニア</dc:creator></item><item><title><![CDATA[docker がマルウェア扱いされる件]]></title><description><![CDATA[
PCを再起動した際画像のポップアップが突然出てきて、
題名の通りで困っていて下記の記事通り実行すると、
https://qiita.com/Grangclark/items/7e83190d3d30ea14e238
(公式のworkaroundはこちら)
記事通りではあるけど
cp: /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd: No such file or directory
cp: /Applications/Docker.app/Contents/MacOS/com.doc...]]></description><link>https://zenn.dev/marimoofficial/articles/661af29a459423</link><guid isPermaLink="true">https://zenn.dev/marimoofficial/articles/661af29a459423</guid><pubDate>Thu, 16 Jan 2025 14:01:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JeiNyRio--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520%25E3%2581%258C%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E6%2589%25B1%25E3%2581%2584%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2599%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhMDljMmY1YzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おすし</dc:creator></item><item><title><![CDATA[脱Nginx？ Traefik v3で作る次世代のリバースプロキシ環境]]></title><description><![CDATA[
 はじめに
最近、開発環境のリバースプロキシとしてTraefikを採用する機会がありました。
実際に使ってみると、その使いやすさと機能性に驚かされます。
特にバージョン3以降は、Nginxと比較しても大きなアドバンテージがある場面が増えてきました。
ただ、日本語での情報が少なく、特にv3に関する実践的な知見の共有が不足していると感じています。
本記事では、実際の開発経験をもとに、Traefikの特徴や具体的な活用方法をご紹介します。

 こんな課題を抱えていませんか？

Nginxの設定ファイルが複雑で管理が大変
コンテナのスケールアウト時の設定変更が面倒
リバースプロキシの状態を可視...]]></description><link>https://zenn.dev/ichimia111/articles/b1e610023e4c52</link><guid isPermaLink="true">https://zenn.dev/ichimia111/articles/b1e610023e4c52</guid><pubDate>Thu, 16 Jan 2025 02:06:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iVy6lfbX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2584%25B1Nginx%25EF%25BC%259F%2520Traefik%2520v3%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2581%25AB%25E3%2582%2583%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ZGRmOWUxMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ににゃあ</dc:creator></item><item><title><![CDATA[Dockerでlinuxの勉強のための環境を構築する方法]]></title><description><![CDATA[
 はじめに
linuxのペンギンが可愛いので、linuxの勉強を始めたみなさんこんにちは。
この記事ではlinuxの勉強のための環境をDockerを用いて構築する方法を紹介します。

 対象読者

linuxの勉強をしたい方
Dockerを使ってみたい方
linuxのペンギンが好きな方


 結論

docker-compose.yaml
version: '3.8'

services:
  rocky-linux:
    image: rockylinux:9
    container_name: rocky-linux-container
    ports:
      -...]]></description><link>https://zenn.dev/09250852/articles/c259cf4a365001</link><guid isPermaLink="true">https://zenn.dev/09250852/articles/c259cf4a365001</guid><pubDate>Wed, 15 Jan 2025 13:25:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CzCj1m-v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7linux%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2FmNDgwMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とつ</dc:creator></item><item><title><![CDATA[【自分用メモ】【環境構築】Windows WSL2 Python Node.js docker]]></title><description><![CDATA[毎回忘れるので、WindowsのWSL2のインストールから、GitHub, Python, node, Dockerの一連の手順のメモ

 WSL2
以下、WindowsのPowershellで、
wsl --install -d Ubuntu-24.04
デフォルトだと、メモリーを食うので、C:\Users\{ユーザー名}\.wslconfig
で、wsl2のメモリ・swap上限の設定をする

.wslconfig
[wsl2]
memory=2GB
swap=0
localhostForwarding=True

PCを再起動して、Ubuntuのbashで、
sudo apt upd...]]></description><link>https://zenn.dev/hikaelis/articles/04fe99839a3fc2</link><guid isPermaLink="true">https://zenn.dev/hikaelis/articles/04fe99839a3fc2</guid><pubDate>Wed, 15 Jan 2025 12:41:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gEKyMB74--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591%25E3%2580%2590%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2591Windows%2520WSL2%2520Python%2520Node.js%2520docker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hikaelis</dc:creator></item><item><title><![CDATA[GHCRにpush]]></title><description><![CDATA[
 内容
name: Push Docker Image to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: "Setup Docker Buildx"
      uses: docker/setup-buildx...]]></description><link>https://zenn.dev/kiwamizamurai/articles/e7986b44cc78b8</link><guid isPermaLink="true">https://zenn.dev/kiwamizamurai/articles/e7986b44cc78b8</guid><pubDate>Wed, 15 Jan 2025 03:12:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CB1bW7T4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:GHCR%25E3%2581%25ABpush%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwamizamurai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNmlfQml4aE1xOXZXUzBiSk5VZ1ZYb2ZDNkVva0toRGNkZXJzSjg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwamizamurai</dc:creator></item><item><title><![CDATA[Starship で使う Nerd Fonts のアイコンフォントを調べる方法]]></title><description><![CDATA[
 はじめに
この記事では、Starship などの Powerline 系プロンプトをカスタマイズするときに使う Nerd Fonts のアイコンフォントを調べる方法について解説します。
例として、Starship を使ってプロンプト表示をカスタマイズしたものが次の図になります。いろいろなアイコンフォントがあったので試しに表示してみたものです。

Nerd Fonts を使ったプロンプト
なお、色付きの絵文字は Nerd Fonts 以外のフォントでも対応しているものです。色がついていないものは Nerd Fonts がインストールされた環境でないと正しく表示されません。
ちなみに、こ...]]></description><link>https://zenn.dev/hiro345/articles/20250114_starship</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250114_starship</guid><pubDate>Tue, 14 Jan 2025 10:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wTiPPUEE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Starship%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2520Nerd%2520Fonts%2520%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[Next.js,Prisma,MySQL環境をDockerで構築する]]></title><description><![CDATA[今回は備忘録として記録に残しておこうと思います

 Dockerの構築
npx create-next-app
ここの設定は各自で
cd app
touch docker-compose.yml
mkdir -p docker/mysql/sql
touch ./docker/mysql/sql/1_init.sql
touch .env
順番に編集していきます
version: '3'
services:
  db:
    image: mysql:8.0
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT...]]></description><link>https://zenn.dev/itsukinuko/articles/d2020be8e85727289c2d</link><guid isPermaLink="true">https://zenn.dev/itsukinuko/articles/d2020be8e85727289c2d</guid><pubDate>Tue, 14 Jan 2025 02:12:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V-vYeFk9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252CPrisma%252CMySQL%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhODMyNzI4NTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>itsuki</dc:creator></item></channel></rss>