<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 30 Oct 2024 01:05:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【CFn/API Gateway/DynamoDB/Lambda】API呼び出しでDynamoDBを操作する＜デプロイ編＞]]></title><description><![CDATA[
 １．はじめに
今回は実装編で作成したLambda関数をAWS環境にデプロイします。
加えて、各リソースをテンプレート化して、CloudFormationでまとめてデプロ
イします。
紹介する内容としては以下の通りとなります。

template.yamlでLambda関数・DynamoDB・API Gateway・APIキーを定義する

CloudFormationからリソースを一括デプロイする
PowerShellからAPIを呼び出しDynamoDBに項目を登録する



この記事は実装編・デプロイ編・フロント編の3部構成となっています。

実装編：PythonでのLambda関数...]]></description><link>https://zenn.dev/is0383kk/articles/7dbda43d01f504</link><guid isPermaLink="true">https://zenn.dev/is0383kk/articles/7dbda43d01f504</guid><pubDate>Tue, 29 Oct 2024 22:00:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wk9T3UFl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CFn%252FAPI%2520Gateway%252FDynamoDB%252FLambda%25E3%2580%2591API%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A7DynamoDB%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259C%25E3%2583%2587%25E3%2583%2597...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZDIwMDdjOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨ</dc:creator></item><item><title><![CDATA[【Python】Coroutine objectってなに？]]></title><description><![CDATA[
 はじめに
コルーチン関数（Coroutine Function）は、Pythonにおける非同期プログラミングをサポートするための特殊な関数です。コルーチン関数は、通常の関数とは異なり、一時停止や再開が可能で、非同期処理を効率的に実装することができます。
非同期処理のデバッグ中に「Coroutine object」という文字が表示されて「なんぞや？」」と思ったので調べたことを簡単に書きます。

 調べてわかったこと
Pythonで非同期処理を書くときは async / awaitを使います。
例えばこんな感じです。
import asyncio

# コルーチン関数の定義
async ...]]></description><link>https://zenn.dev/headwaters/articles/56c4f80a909a9a</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/56c4f80a909a9a</guid><pubDate>Tue, 29 Oct 2024 12:49:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HldYPYx8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Coroutine%2520object%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:t.yuto%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZjM0OGE2NDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.yuto</dc:creator></item><item><title><![CDATA[Pythonで文字列のフォーマットに値を動的に埋め込む]]></title><description><![CDATA[
 はじめに
Pythonで作成した文字列フォーマットの中に変数の値を埋め込む処理を複数の方法で実装していきます。

 環境

Python 3.12


 1. f-strings
変数名をそのまま記述できてシンプルかつ可読性が高いです。
name = "太郎"
age = 10
print(f"私の名前は{name}です。{age}歳です。")
# 出力: 私の名前は太郎です。10歳です。

print(f"来年は{age + 1}歳になります。")
# 出力: 来年は11歳になります。

fruits = {'name': 'りんご', 'price': 200}
print(f"...]]></description><link>https://zenn.dev/enumura/articles/4f71b6fc723baf</link><guid isPermaLink="true">https://zenn.dev/enumura/articles/4f71b6fc723baf</guid><pubDate>Tue, 29 Oct 2024 12:47:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BtaO5KDf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AB%25E5%2580%25A4%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enumura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2Y2NlMmZjN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enumura</dc:creator></item><item><title><![CDATA[先輩エンジニアの技術トレンドを掴む力をちょっと言語化してみた]]></title><description><![CDATA[
 はじめに
NCDC株式会社に入社して4ヶ月が経った。
その中で、先輩エンジニアの技術トレンドを掴む力がすごかったので、自分なりに分析してみました。

 なぜそう思ったか
以下は先日のSlackでのやり取りである。


NCDC標準として、Pythonのパッケージ管理ツールに何を選定するかという話題になった。
最近のPJではrye使ってるからryeでいいのでは？と言っているのが自分（考えが浅い）。
今後のトレンドを先読みしてuvも入れようと言っているのが先輩エンジニアである。
何気ない会話かもしれないけれど、自分はuvなんて初めて聞いたし、ryeの開発者のブログを見るなんていう発想は自...]]></description><link>https://zenn.dev/ncdc/articles/96404cdb8ea32a</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/96404cdb8ea32a</guid><pubDate>Tue, 29 Oct 2024 07:37:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bLhaot-y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%2588%25E8%25BC%25A9%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E6%258E%25B4%25E3%2582%2580%25E5%258A%259B%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2580%25E3%2583%25BC%25E3%2581%2595%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTE9JVnBQLVMtWUtXTWc5RmZrNW0xRkhvZkZDUWlZRmxkWnJ3NTU5VjBmeklObFV3PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むーさん</dc:creator></item><item><title><![CDATA[Ollamaによるチャンクサイズとモデル精度の関係を検証]]></title><description><![CDATA[

 はじめに
@SNAMGNさんより「チャンクサイズ」が回答精度に影響する可能性があるとのご指南をいただき、貴重なアドバイスをもらいました。この場を借りてお礼申し上げます！
また、前回の記事の公開後、「1か月以内に新しい記事を出す」と宣言していたので、何とかまとめることができてよかったです。
前回の記事：
https://qiita.com/ogi_kimura/items/695d0d067b62501b753f
実は、今回は自分のPCのGPUをフル活用して処理を高速化する予定でしたが、残念ながらうまくいかず、結局CPUのみでの処理となっています。
GPU利用に失敗した記事：
htt...]]></description><link>https://zenn.dev/ogiki/articles/8436af84b3281c</link><guid isPermaLink="true">https://zenn.dev/ogiki/articles/8436af84b3281c</guid><pubDate>Tue, 29 Oct 2024 06:14:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---oI_GMcY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ollama%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25A8%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjNiYWMwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村たろう</dc:creator></item><item><title><![CDATA[[LangGraph] CheckpointとStoreの使い方]]></title><description><![CDATA[
 はじめに
こんにちは。PharmaXでエンジニアをしている諸岡（@hakoten）です。
この記事では、LangGraphのデータ永続化機能であるCheckpointerとStoreについて解説します。
2024年の現時点で、LLMによる複雑なエージェントを構築するには、各LLM実行における横断的なデータ保存の仕組みが不可欠です。
LangGraphのCheckpointerとStoreを活用することで、LLMの実行状態を効率的に保存・復元したり、複数の会話セッションにまたがるデータ管理が可能となります。

 環境
この記事執筆時点では、以下のバージョンで実施しています。
LangC...]]></description><link>https://zenn.dev/pharmax/articles/26be245e159590</link><guid isPermaLink="true">https://zenn.dev/pharmax/articles/26be245e159590</guid><pubDate>Tue, 29 Oct 2024 00:59:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gmhYmyx0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLangGraph%255D%2520Checkpoint%25E3%2581%25A8Store%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hakotensan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxNTUyMTlkOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PharmaX%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNGM1MmE4MWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hakotensan</dc:creator></item><item><title><![CDATA[CNN（畳み込みニューラルネットワーク）]]></title><description><![CDATA[
 CNNとは
CNN（畳み込みニューラルネットワーク）は，ディープラーニングの一種であり，特に画像や音声などのデータから特徴を自動的に抽出して解析するために用いられます．従来のニューラルネットワークとは異なり，CNNは空間的な情報（例えば画像内のピクセルの位置関係）を活用することができます．これにより，画像認識や物体検出などのタスクで高い精度を実現します．記事の後半にはPythonによる実装例も紹介しています．
CNNは主に以下の層構成をもち，CNNならではの特徴としては「畳み込み層」と「プーリング層」が存在します．

畳み込み層
プーリング層
全結合層


 畳み込み層
畳み込み層で...]]></description><link>https://zenn.dev/minoda_kohei/articles/e1f288deb41307</link><guid isPermaLink="true">https://zenn.dev/minoda_kohei/articles/e1f288deb41307</guid><pubDate>Mon, 28 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TmLwhx76--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CNN%25EF%25BC%2588%25E7%2595%25B3%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B0%2591%25E7%2594%25B0%25E5%25BA%25B7%25E5%25B9%25B3%2520%252F%2520Minoda%2520Kohei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGFYbWU1cWpyWHV3Q1BUX21ad2VnZjdTaE9vSGlSQjE5dnJVTW42a3NuMy02RzB2VEc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>簑田康平 / Minoda Kohei</dc:creator></item><item><title><![CDATA[GPUサポートに挑戦！Ollamaの処理速度向上を目指すWindowsセットアップガイド]]></title><description><![CDATA[

 はじめに
現在、自分のPCでOllamaを使用し、複数モデルの「処理速度」と「回答精度」に関する記事作成のため、朝から晩までフル稼働させています。PCも全力で処理をこなしているため、内蔵ファンの「ガーーー」という音が常に響いています。その結果、今朝は「電子レンジ」と「魚焼き機」を同時に使った際、普段は落ちないブレーカーがついに落ちてしまいました💦
そんなわけで、少しでも処理を速くしたいと思い、「GPUはどのくらい活用されているのだろう？」と気になり、確認してみることにしました。

ご覧の通り、Ollamaで処理を実行しても、GPUはほとんど使われていません。調べたところ、Linux...]]></description><link>https://zenn.dev/ogiki/articles/90309bebef32dd</link><guid isPermaLink="true">https://zenn.dev/ogiki/articles/90309bebef32dd</guid><pubDate>Mon, 28 Oct 2024 12:41:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z2Bocuv2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPU%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BC%2581Ollama%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E9%2580%259F%25E5%25BA%25A6%25E5%2590%2591%25E4%25B8%258A%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599Windows%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjNiYWMwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村たろう</dc:creator></item><item><title><![CDATA[山手線は本当に「円」で繋がっているのか？GeoPandasで路線図を可視化してみた]]></title><description><![CDATA[
 山手線は実は品川から田端まで!?
都内を訪れる多くの方に馴染み深い山手線ですが、実は「環状線」としてお馴染みの山手線は、複数の路線が繋がって「円」を形成しているのです。意外なことに、山手線の正式な起点は品川駅で、終点は田端駅になっています。

 どの駅がどの路線か可視化してみよう！
今回は、GeoPandasとFoliumを使って、山手線、東北線、東海道線を含む鉄道データを地図上にマッピングしてみました。

路線ごとに色分けされており、黄緑が山手線、水色が東北線、オレンジが東海道線です。このように、3つの路線が繋がって環状運転を実現しているのです！
詳しく見たい方は、こちらのリンクか...]]></description><link>https://zenn.dev/yamadamadamada/articles/5bd1f1ab52e699</link><guid isPermaLink="true">https://zenn.dev/yamadamadamada/articles/5bd1f1ab52e699</guid><pubDate>Mon, 28 Oct 2024 11:43:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yf0H5zyc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B1%25B1%25E6%2589%258B%25E7%25B7%259A%25E3%2581%25AF%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%25AB%25E3%2580%258C%25E5%2586%2586%25E3%2580%258D%25E3%2581%25A7%25E7%25B9%258B%25E3%2581%258C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259FGeoPandas%25E3%2581%25A7%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25AE%25E3%2581%258B%25E3%2581%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZGNmMjJiZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かのかの</dc:creator></item><item><title><![CDATA[Poetryで仮想環境を立てたらVS Codeのインテリジェンスが使えなくなった]]></title><description><![CDATA[
 背景

こんなかんじにインテリジェンスが使えなくなってたので対処方法を掲載。
インタープリタが未設定になってたので、再設定する必要がある。

 ステップ

 1. Poetryの仮想環境のパスを確認する
poetry env info
このコマンドを実行すると、仮想環境のパスが表示される
Virtualenv
Python:         3.12.7
Implementation: CPython
Path:           /home/hoge/Project/tutorial/backend/.venv
Executable:     /home/hoge/Project...]]></description><link>https://zenn.dev/rust_health/articles/bf3e5929000121</link><guid isPermaLink="true">https://zenn.dev/rust_health/articles/bf3e5929000121</guid><pubDate>Mon, 28 Oct 2024 11:36:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ta9SSo6a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%259F%25E3%2582%2589VS%2520Code%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25AA%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:eco%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEYzUEdPalNESV9rVk4yV2dUWDJSeEpzOURWU1lMRDVWMng4ei09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>eco</dc:creator></item><item><title><![CDATA[LocustでDBの負荷テストを行う]]></title><description><![CDATA[
 はじめに
Locust は HTTP リクエストに対する負荷テストを行うことを前提としており、DB への負荷テストを行うためには、少し工夫が必要です。
本記事では、Locust を使って DB に対する負荷テストを行う方法を紹介します。
ここでは、MySQL を使用した DB に対して負荷テストを行う例を示しますが、DB へ接続するモジュールを変更することで、他の DB に対しても同様のテストを行うことができます。

 Locust とは
Locust は、Python で書かれたオープンソースの負荷テストツールです。
Web アプリケーションや API の負荷テストを行うことができ...]]></description><link>https://zenn.dev/torakm/articles/78a3e1c7f0858a</link><guid isPermaLink="true">https://zenn.dev/torakm/articles/78a3e1c7f0858a</guid><pubDate>Mon, 28 Oct 2024 07:55:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fFwgUC1t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Locust%25E3%2581%25A7DB%25E3%2581%25AE%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:torakm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWpwb3BqampCamdqSmw3MFRFcnZKNWZGZncwVUdBNGJxdGpJQXpadDU3N3FnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>torakm</dc:creator></item><item><title><![CDATA[urlopen と requests.get の違いについて]]></title><description><![CDATA[urlopen と requests.get の違いについて説明します。

 1. ライブラリの違い



urllib.request.urlopen

Pythonの標準ライブラリである urllib.request モジュールに含まれています。
デフォルトでPythonに組み込まれており、追加のインストールは不要です。



requests.get

サードパーティ製のライブラリである requests に含まれています。
使用するには pip install requests でインストールが必要です。
公式ドキュメント: Requests: HTTP for Humans™ ...]]></description><link>https://zenn.dev/sousquared/articles/e86fb1bde6fa48</link><guid isPermaLink="true">https://zenn.dev/sousquared/articles/e86fb1bde6fa48</guid><pubDate>Mon, 28 Oct 2024 06:05:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LEzLlf0l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:urlopen%2520%25E3%2581%25A8%2520requests.get%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sousquared%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXYTF2cDBWNTdEM3hXUExZZ0puLTIyaHZ4U0pEQWxPbzFpX1h2PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sousquared</dc:creator></item><item><title><![CDATA[Vertex AIマルチモーダルを用いたミスミ部品の画像検索利用例紹介]]></title><description><![CDATA[
 はじめに
こんにちは。ミスミグループ本社Gateway推進本部の蘇です。
今回はGoogle CloudのVertex AIの気になっている機能を簡単に試してみましたので、
マルチモーダルエンベディングを使用して
画像やテキストをクエリとして渡し、商品画像を検索する例を紹介します。

 インストール
今回はPythonでの実装になりますので、
google-cloud-aiplatform のPython Packageのインストールをする必要があります。
以下のコマンドでインストールを実行します。
pip3 install --upgrade --user "google-clou...]]></description><link>https://zenn.dev/msmtec/articles/54b714cd46484f</link><guid isPermaLink="true">https://zenn.dev/msmtec/articles/54b714cd46484f</guid><pubDate>Mon, 28 Oct 2024 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C40jhFI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%259F%25E3%2582%25B9%25E3%2583%259F%25E9%2583%25A8%25E5%2593%2581%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E6%25A4%259C%25E7%25B4%25A2%25E5%2588%25A9%25E7%2594%25A8%25E4%25BE%258B%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:msmsu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I3ZjQ1OTFkNGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259F%25E3%2582%25B9%25E3%2583%259F%2520DataTech%2520%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyZWYzNWRkZGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>msmsu</dc:creator></item><item><title><![CDATA[AIにアイコン選ばせてみた]]></title><description><![CDATA[
 概要
今回、AIを用いてアイコンを検索するアプリケーションを作ってみました。
アイコン名・タグなどは利用せずにアイコンの形状だけで検索しています。
検索ワードは多言語対応です。日本語でも英語でも検索できます。試していないですが他の主要な言語でも検索できるはずです。
多くの方に試していただきたいので、検索の実行はGPUが使えない環境でもできるようにしています。

 対象読者

アイコン選びで不便さ・大変さを感じているデザイナー

技術の内容は読み飛ばしてもらって構いません


AIを用いた検索技術に興味がある人


 利用した技術
今回のアプリケーションは、以下のアルゴリズムで検索を実...]]></description><link>https://zenn.dev/mutex_inc/articles/4cd65c6e81748c</link><guid isPermaLink="true">https://zenn.dev/mutex_inc/articles/4cd65c6e81748c</guid><pubDate>Mon, 28 Oct 2024 02:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aQS7YU86--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25A4%25E3%2582%25B3%25E3%2583%25B3%25E9%2581%25B8%25E3%2581%25B0%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hodhodhod%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2NmRjMzU1MTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:mutex%2520Official%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYWQxYjUwMTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hodhodhod</dc:creator></item><item><title><![CDATA[AWS 初心者がpythonを使ってリアルタイム文字起こし＋感情分析をする]]></title><description><![CDATA[
 はじめに
こんにちは、toshiki です。
今回はAWSのサービスを使ってリアルタイムの文字起こし＋テキスト感情分析を行ったので、その備忘録としてこの記事を書きました！

 やったこと
1.マイクからの音声をリアルタイムで文字起こし
2.文字起こしされた内容をテキスト感情分析にかける
下記の写真みたいな文字起こしと感情分析ができます


 対象読者

AWS初心者の方
とりあえず文字起こし＋テキスト感情分析したい方


 使用技術

 Amazon Transcribe（文字起こし）
Amazon Transcribe は音声をテキストに変換してくれるサービスです。
Amazon ...]]></description><link>https://zenn.dev/toshiki31/articles/f41a42106f4b01</link><guid isPermaLink="true">https://zenn.dev/toshiki31/articles/f41a42106f4b01</guid><pubDate>Sun, 27 Oct 2024 22:48:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bLvWWYVz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258Cpython%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25EF%25BC%258B%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toshiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlNjI3YTBmZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toshiki</dc:creator></item><item><title><![CDATA[Pythonでやってみる衛星データ解析入門【機械学習＆時系列解析】]]></title><description><![CDATA[📰 概要
衛星データを使って地球環境の変動について観察したいと考えたり、自身の研究に地球規模のマクロな視点を取り入れたいと考えたことはありますか。

本書はGoogle Earth Engine（GEE）というツールを使った機械学習や時系列解析の手法を解説しています。

この機会に是非、衛星データ解析を始めてみませんか。

👫 対象とする読者
・衛星データ解析を扱ったことがないが興味がある人
・機械学習や時系列データ解析に挑戦したい人
・地球環境の変動に興味がある人
・自分の研究に地球規模のマクロな視点を取り入れたい人

💰 販売価格
期間限定で ¥2500→¥800 (約70% OFF!!)で販売しております！

本技術書は随時アップデートされていきます。
一度購入された方はアップデートされたとしても追加料金は発生しませんのでご安心ください。

📰 アップデート情報
2024/10/28: リリースしました！]]></description><link>https://zenn.dev/labcode/books/0b223bf990b383</link><guid isPermaLink="true">https://zenn.dev/labcode/books/0b223bf990b383</guid><pubDate>Sun, 27 Oct 2024 22:21:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YPSfNtBs--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jNmMxMTE0ZjcyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>LabCode（ラボコード）</dc:creator></item><item><title><![CDATA[【Python】 k-hop Clusteringの詳説：ネットワークグラフにおけるクラスタリング手法の実装と解説]]></title><description><![CDATA[
 ネットワーク分析手法：k-hop Clusteringの実装・解説

 k-hop Clusteringとは
k-hop Clusteringは、ネットワークグラフにおけるクラスタリング手法の一つです。この手法の特徴は、ネットワーク上の任意のノードから指定した数（k）のエッジを辿って到達できるノードを1つのクラスタとして抽出できる点にあります。

 具体的な例で見るk-hop Clustering

 1-hopクラスタリングの場合
あるノードから1エッジで到達できるノードのみをクラスタとして抽出します。例えば：

中心ノード「A」から
直接つながっているノード「B」「C」「D」が
...]]></description><link>https://zenn.dev/d_treasure0712/articles/0c5f03fa683f0e</link><guid isPermaLink="true">https://zenn.dev/d_treasure0712/articles/0c5f03fa683f0e</guid><pubDate>Sun, 27 Oct 2024 15:24:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N6FnReka--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%2520k-hop%2520Clustering%25E3%2581%25AE%25E8%25A9%25B3%25E8%25AA%25AC%25EF%25BC%259A%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258B%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnR4b0JVYlhZeklpamlxN181cGc1bXhtSC00dl9HTmFPVGpId1NtQTlqU3I2eW0xZUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たから</dc:creator></item><item><title><![CDATA[BLASTエラーの原因となる制御文字の処理：FASTAファイル修正プログラムの実装・解説]]></title><description><![CDATA[
 制御文字とキャレット表記について

 キャレット表記の基本
キャレット表記は、ASCIIコードにおける制御文字を視覚的に表現するための記法です。


表記方法


^ (キャレット) + アルファベット大文字
例：^A = 制御コード1（Start of Heading：ヘッダ開始）
ASCIIコード0-31の範囲の制御文字を表現
ASCIIコード一覧表



主な使用場面

プログラミング環境でのデバッグ（テキストエディタやプログラミング環境では、特定の制御文字を簡単に参照するためにこの表記が使われます。）
テキスト処理における制御文字の表現
文書校正や特殊文字の確認




 今...]]></description><link>https://zenn.dev/d_treasure0712/articles/6976b8cd268de2</link><guid isPermaLink="true">https://zenn.dev/d_treasure0712/articles/6976b8cd268de2</guid><pubDate>Sun, 27 Oct 2024 15:12:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8GPUZ19Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BLAST%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258B%25E5%2588%25B6%25E5%25BE%25A1%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%259AFASTA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%25BB%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258B%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnR4b0JVYlhZeklpamlxN181cGc1bXhtSC00dl9HTmFPVGpId1NtQTlqU3I2eW0xZUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たから</dc:creator></item><item><title><![CDATA[複数の切り取り画像から元の画像を復元する]]></title><description><![CDATA[
 はじめに
複数の切り取り画像から元画像を復元したかったため、Pythonにやってもらいました。

 目的
複数の切り取り画像を入力として、それらを結合し大きい元画像を出力します。

 インプット

 複数の切り取り画像
前提として、各画像間で共通の箇所が写っていることとします。







 アウトプット

 元画像
以下のようになってほしい


 コード
画像のディレクトリに読み込んだ後に、
1つ目の画像と2つ目の画像の共通する特徴点を算出し、それがマッチするかのように合成する。
その後、合成画像に3つ目の画像、4つ目の画像、…、とどんどん特徴点算出と合成を繰り返し、
ディレクト...]]></description><link>https://zenn.dev/gigi_aaaaa/articles/aa14bb64747def</link><guid isPermaLink="true">https://zenn.dev/gigi_aaaaa/articles/aa14bb64747def</guid><pubDate>Sun, 27 Oct 2024 14:59:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WQ_t51Xw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E5%258F%2596%25E3%2582%258A%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E5%2585%2583%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%25BE%25A9%25E5%2585%2583%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gigi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTFGNFRDbDNVdEh4Z1pGQXU4Yzc4aEp4TGFkWEhQejJwR0tOM1U4RkJONGtFU1dBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gigi</dc:creator></item><item><title><![CDATA[Act 09.Pythonでログ出力を行う]]></title><description><![CDATA[
 はじめに
Act 01. AIで外国為替を自動売買するまでの道のりをベースに学習を進めて行く。
Act 08. Pythonでエラーハンドリングを行うを書いていて、ログ出力に関する学習もした方が良いなと思ったためこの記事を書いている。
loggingモジュールを使っていくわけだが、簡単な使い方しか知らない。
今回は様々なカスタマイズも行う。

 loggerの基本的な使い方
大まかな流れは以下の通り。


loggingモジュールのインポート
ロガーの設定
ログの出力

ということでやっていく。

 1. loggingモジュールのインポート

Act09.py
from loggi...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/04d6e4f5747004</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/04d6e4f5747004</guid><pubDate>Sun, 27 Oct 2024 14:04:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--44axB0VM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252009.Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item></channel></rss>