<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 19 Jan 2025 05:05:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[NestJSではじめるSymbol-SDK]]></title><description><![CDATA[
 Node.js まわりのバージョン

Yarn v4.6.0
Node.js v22.13.0
NestJS v10.0.0


 CLI のインストール

bash
npm install -g @nestjs/cli

※Yarn はグローバルインストール出来なくなった

 NestJS プロジェクト作成
例として test-nestjs というプロジェクトを作成します。

bash
nest new test-nestjs

yarn を使用するので yarn を選択。
⚡  We will scaffold your app in a few seconds..

? Whi...]]></description><link>https://zenn.dev/ccharvestasya/articles/nestjs-symbolsdk</link><guid isPermaLink="true">https://zenn.dev/ccharvestasya/articles/nestjs-symbolsdk</guid><pubDate>Sun, 19 Jan 2025 03:47:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9v7TaSzW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258BSymbol-SDK%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ccHarvestasya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiNGZhYzk3NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ccHarvestasya</dc:creator></item><item><title><![CDATA[Node.js+TypeScriptではじめるSymbol-SDK]]></title><description><![CDATA[
 Node.js まわりのバージョン

Yarn v4.6.0
Node.js v22.13.0


 プロジェクトフォルダの作成と初期化
適当な場所に作成します。

bash
mkdir test-project
cd test-project

yarn が node_modules フォルダを作成するようファイルを作成します。

bash
echo "nodeLinker: node-modules" &gt; .yarnrc.yml

プロジェクトフォルダを初期化します。

bash
yarn init

念のため Node.js などのバージョンのピン留めもしておきます。

...]]></description><link>https://zenn.dev/ccharvestasya/articles/nodejs-symbolsdk</link><guid isPermaLink="true">https://zenn.dev/ccharvestasya/articles/nodejs-symbolsdk</guid><pubDate>Sat, 18 Jan 2025 22:26:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h0ErHmhz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%252BTypeScript%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258BSymbol-SDK%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ccHarvestasya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiNGZhYzk3NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ccHarvestasya</dc:creator></item><item><title><![CDATA[GAS開発者のための日付操作ガイド - GAS + TypeScriptによる日付操作ユーティリティの実装と応用]]></title><description><![CDATA[
 1. はじめに

GAS(Google Apps Script)のプロジェクトにおいて、日付の操作は頻繁に必要となる処理です。
本記事では、GASとTypeScriptを使用した日付操作ユーティリティの実装について解説します。


 2.日付操作ユーティリティ - DateUtilクラスの実装
/**
 * 日付計算のユーティリティクラス
 */
export class DateUtil {
  /**
   * 基準日から指定日数を加算または減算した日付を取得します
   * @param date 基準日
   * @param days 加算する日数（負数の場合は減算）
  ...]]></description><link>https://zenn.dev/yuki_fujisawa/articles/e19e4e74a302f5</link><guid isPermaLink="true">https://zenn.dev/yuki_fujisawa/articles/e19e4e74a302f5</guid><pubDate>Sat, 18 Jan 2025 10:47:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IZN4ePQu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E6%2593%258D%25E4%25BD%259C%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2520-%2520GAS%2520%252B%2520TypeScript%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%2597%25A5%25E4%25BB%2598%25E6%2593%258D%25E4%25BD%259C%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E5%25BF%259C%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%2597%25A4%25E6%25BE%25A4%25E5%258B%2587%25E6%25A8%25B9%2528Yuki%2520Fujisawa%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyOWNiMTQyZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>藤澤勇樹(Yuki Fujisawa)</dc:creator></item><item><title><![CDATA[ReProm：リポジトリをまとめてプロンプト化する CLI]]></title><description><![CDATA[こんにちは、keisukenagakawa です。
この記事では、私が開発した CLI ツール ReProm を紹介します。
ReProm は、指定したディレクトリの構造とファイルの内容をまとめて 1 つの Markdown に出力するためのツールです。ChatGPT などの AI とやりとりをするとき、複数のファイルをいちいちコピペする手間を省き、コードレビューやデバッグを効率化できます。


 なぜ作ったのか
AI（特に ChatGPT など）のコードレビュー機能を活用するとき、以下の点に不便さを感じていました。


複数ファイルの貼り付けが面倒
コードが複数ファイルに分割されている...]]></description><link>https://zenn.dev/keisukenagakawa/articles/83afa361556b1e</link><guid isPermaLink="true">https://zenn.dev/keisukenagakawa/articles/83afa361556b1e</guid><pubDate>Sat, 18 Jan 2025 07:03:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1zAnAaFm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReProm%25EF%25BC%259A%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2520CLI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KeisukeNagakawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NzMwYTY5OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KeisukeNagakawa</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜Laplacianフィルタ（017/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の17本目です。

 前回
https://zenn.dev/nyagato_00/articles/022b7b55b07cd6

 実装

 お題

Laplacianフィルタを実装せよ。
Laplacian（ラプラシアン）フィルタとは輝度の二次微分をとることでエッジ検出を行うフィルタである。
デジタル画像は離散データであるので、x方向・y方向の一次微分は、それぞれ次式で表される。

Ix(x,y) = (I(x+1, y) - I(x,y)) / ((x+1)-x) = I(x+1, ...]]></description><link>https://zenn.dev/nyagato_00/articles/bf0ba1f0cac474</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/bf0ba1f0cac474</guid><pubDate>Sat, 18 Jan 2025 06:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dVilBCFs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259CLaplacian%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25EF%25BC%2588017%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[個人開発したサービスが２日で3 万リーチした話]]></title><description><![CDATA[
 はじめに
こんにちは、noguです。
今回は、私が個人で開発したサービスが、公開からわずか 2 日間で 3 万リーチを達成するという、予想外の出来事についてお話ししたいと思います。
この短い期間で、多くの方々にサービスを知っていただき、実際に利用していただけたことは、私にとって大きな喜びであり、驚きでもありました。
この記事では、その過程や背景、そしてそこから得られた学びについて共有させていただきます。
まずは、以下の投稿をご覧ください。

https://x.com/_nogu66/status/1878042981997125780?ref_src=twsrc^tfw

http...]]></description><link>https://zenn.dev/nogu66/articles/release-satorify-beta-version</link><guid isPermaLink="true">https://zenn.dev/nogu66/articles/release-satorify-beta-version</guid><pubDate>Sat, 18 Jan 2025 04:05:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DjyUovFP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%258C%25EF%25BC%2592%25E6%2597%25A5%25E3%2581%25A73%2520%25E4%25B8%2587%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2581%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nogu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3OGQ3YzgzNTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nogu</dc:creator></item><item><title><![CDATA[英語音声ファイルをWhisperAPIを使用して日本語字幕データに変換する]]></title><description><![CDATA[
 基本機能

音声ファイル（WAVまたはMP3）を受け取り、OpenAI WhisperAPIを使用して文字起こしを行うCLIツール
入力: 音声ファイルパス、言語（デフォルト: 英語）、出力フォーマット（デフォルト: JSON）


 対応フォーマット

入力: .wav、.mp3ファイル
出力: JSON、SRT（字幕）、VTT（Web字幕）形式


 主要な処理フロー

WAVファイルの場合、FFmpegを使用してMP3に変換
OpenAI APIを使用して音声認識を実行
指定された形式（JSON/SRT/VTT）で結果を出力
結果をresultsディレクトリに保存



 使用...]]></description><link>https://zenn.dev/laiso/articles/564a0aa6ca0bfa</link><guid isPermaLink="true">https://zenn.dev/laiso/articles/564a0aa6ca0bfa</guid><pubDate>Fri, 17 Jan 2025 15:15:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vQNfeK5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%258B%25B1%25E8%25AA%259E%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592WhisperAPI%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AD%2597%25E5%25B9%2595%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>laiso</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜Prewittフィルタ（016/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の16本目です。

 前回
https://zenn.dev/nyagato_00/articles/e1c99379da9685

 実装

 お題

Prewittフィルタ(3x3)を実装せよ。
Prewittフィルタはエッジ抽出フィルタの一種であり、次式で定義される。

    (a)縦方向          (b)横方向
      -1 -1 -1          -1 0 1
K = [  0  0  0 ]  K = [ -1 0 1 ]
       1  1  1    ...]]></description><link>https://zenn.dev/nyagato_00/articles/022b7b55b07cd6</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/022b7b55b07cd6</guid><pubDate>Fri, 17 Jan 2025 10:30:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--07MqRanO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259CPrewitt%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25EF%25BC%2588016%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[【個人開発】新卒エンジニアがアニメ投稿サイトを作った話]]></title><description><![CDATA[はじめまして。
2年かけてアニメ投稿サイト(動画投稿サイト)を開発したので、なぜ作成したのかや、技術的な部分について話していきたいと思います。
こちらにもリンクです。
https://anishare.net
こちらにも投稿しています。
https://anishare.fanbox.cc/posts/9202817

 背景と動機
私は投稿サイトで個人制作のアニメーション(indie_anime)をよく見ます。
気になった作品はいいねを押したり、ブックマークに追加して見返しています。
しかし、そのような投稿サイトでは個人が制作したアニメだけを調べたりするような機能はありません。またアニ...]]></description><link>https://zenn.dev/naritate/articles/a3836ab2cfdfff</link><guid isPermaLink="true">https://zenn.dev/naritate/articles/a3836ab2cfdfff</guid><pubDate>Fri, 17 Jan 2025 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SF_jibqI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E6%2596%25B0%25E5%258D%2592%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E6%258A%2595%25E7%25A8%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2582%258A%25E3%2581%259F%25E3%2581%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhNDZlMTcxOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なりたて</dc:creator></item><item><title><![CDATA[Playwrightを使ったWEBアプリのE2Eテスト作成]]></title><description><![CDATA[
 WEBアプリ E2Eテスト


 初めに
現在自分が関わっているWEBアプリ作成プロジェクトでE2Eテストを作成練習した際に学んだことを記事として残しておきます。作成中プロジェクトならではの箇所もあるため、参考にできそうな箇所だけ参考にしてください。

 概要

 目的
エンドツーエンド(E2E)テストとは、ユーザーが実際にアプリを利用する手順をシミュレートすることで、アプリケーション全体の動作を検証するテストです。
コード化して自動化することでプログラミング言語のバージョン変更等の際にも即座に全体が適切に機能しているかを確認することが目的です。
導入に手間が掛かりますが、何かある度...]]></description><link>https://zenn.dev/yumahigashi/articles/3234ba67a88830</link><guid isPermaLink="true">https://zenn.dev/yumahigashi/articles/3234ba67a88830</guid><pubDate>Fri, 17 Jan 2025 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eMaXlnug--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FWEB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEE2E%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%25B1%25E4%25BD%2591%25E7%25A3%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGJmaTB0cTZ6WGFsUmlsZTZIS01tbnVGc0JIdHdzTXFPZ2VJTk9pblhsbTN5UU1Vcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>東佑磨</dc:creator></item><item><title><![CDATA[TypeScriptとpnpmとdockerで自動テストを導入した話]]></title><description><![CDATA[
 環境

バックエンドフレームワーク: hono
フロントフレームワーク: Next.js
ORM: prisma
ランタイム: Node.js
テスト: vitest
dockerランタイム: PodmanDesktop（ファイルシステムにvirtiofsを使用）
PC: MacBookPro M2
DB: TiDB
CI: Github Actions


 2023年にPHPでテストを導入したときの反省点
元々テストが無いコードだったのでユニットテストが書きづらく、インテグレーションテストメインでテストを記述するように導入した。
チームの方々はテスト導入後に挫折せずにテストを書き...]]></description><link>https://zenn.dev/daijinload/articles/fa0dcd219d48c1</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/fa0dcd219d48c1</guid><pubDate>Fri, 17 Jan 2025 05:51:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y9mRUBwc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A8pnpm%25E3%2581%25A8docker%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item><item><title><![CDATA[【Phaser3】画像を用意せずにテクスチャを生成する方法]]></title><description><![CDATA[Phaser3を使ってゲームを開発していると、プロトタイプを作る際に簡単な図形をスプライトとして利用したいことがあると思います。
そんな時に便利なのがPhaser.GameObjects.Graphics.generateTextureです。

 Phaser.GameObjects.Graphics.generateTexture を利用する基本手順

 1. Graphics オブジェクトを生成する
まず、Phaser.GameObjects.Graphics を生成します。
const graphics = this.add.graphics();

 2. 描画を行う
次に、Gr...]]></description><link>https://zenn.dev/wellwich/articles/fd62998caabb04</link><guid isPermaLink="true">https://zenn.dev/wellwich/articles/fd62998caabb04</guid><pubDate>Fri, 17 Jan 2025 00:08:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o2YU3VPL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Phaser3%25E3%2580%2591%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E7%2594%25A8%25E6%2584%258F%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ww%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiYjM0Y2MyN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ww</dc:creator></item><item><title><![CDATA[AbortControllerを知らないなんて]]></title><description><![CDATA[
多くの開発者がAbortControllerを理解していると思っているかもしれませんが、その機能は基本的な用途をはるかに超えています。たとえば、fetchリクエストのキャンセル、イベントリスナーの管理、Reactフックとの連携などです。
本当にAbortControllerの威力を知っていますか？それでは見てみましょう。

 AbortControllerを使ったfetchリクエストのキャンセル
AbortControllerをfetchと一緒に使うことは、最も一般的な用途です。
以下は、AbortControllerを使ってキャンセル可能なfetchリクエストを作成する例です：
fe...]]></description><link>https://zenn.dev/leapcell/articles/09f8ff2b6e018d</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/09f8ff2b6e018d</guid><pubDate>Thu, 16 Jan 2025 17:34:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r0YDP9wT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AbortController%25E3%2582%2592%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜Sobelフィルタ（015/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の15本目です。

 前回
https://zenn.dev/nyagato_00/articles/ebdb8638a44b64

 実装

 お題

Sobelフィルタ(3x3)を実装せよ。
ソーベルフィルタ(Sobelフィルタ)は特定方向（縦や横）のエッジのみを抽出するフィルタであり、次式でそれぞれ定義される。

    (a)縦方向       (b)横方向
       1  2  1           1  0 -1
K = [  0  0  0 ]   K = [ 2  0 ...]]></description><link>https://zenn.dev/nyagato_00/articles/e1c99379da9685</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/e1c99379da9685</guid><pubDate>Thu, 16 Jan 2025 10:53:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jwBxjLR0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259CSobel%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25EF%25BC%2588015%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[[React.js/TypeScript] 管理画面系のサイドバー実装例]]></title><description><![CDATA[
 概要
今までたくさんの企業で管理画面やSaaSのUIを作ってきました。そのたびにサイドバーを実装してきましたが、さすがにそろそろテンプレート化しておこうと思った…というのがこの記事の執筆動機です。
この記事では、サイドバー実装のサンプルコードと、軽微な解説を掲載します。使用技術は React.js / TypeScript / CSS in JS になります。
Vue.js でも TailwindCSS でも、この記事で紹介した考え方自体は流用できると思います。
UI ライブラリは使用していません。管理画面やSaaS開発では、自前で作った方が拡張性があり、複雑なニーズに対応できるため...]]></description><link>https://zenn.dev/tenkei/articles/9c69093e4354ae</link><guid isPermaLink="true">https://zenn.dev/tenkei/articles/9c69093e4354ae</guid><pubDate>Thu, 16 Jan 2025 09:20:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CCKDf-9C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact.js%252FTypeScript%255D%2520%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E7%25B3%25BB%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2589%25E3%2583%2590%25E3%2583%25BC%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTC1MbnhJQkE4eS1Yd2xoS3hwQllvMzlxODB3ZVItMDB2NlVWTkdRdnoyTnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkei</dc:creator></item><item><title><![CDATA[【学習】TypeScriptとJAVAの比較]]></title><description><![CDATA[ある都市の緯度 latitude、経度 longitude が与えられるので、赤道（equator）、本初子午線（prime meridian）を基準として、その都市が東西南北どこに位置しているかを文字列で返す、calculateLocation という関数を作成してください。文字列は「緯度/経度」の順で表記してください。

 TypeScript
function calculateLocation(latitude: number, longitude: number): string {
        return getLatitudeDirection(latitude) +...]]></description><link>https://zenn.dev/milbon/articles/6a94c49c2b9368</link><guid isPermaLink="true">https://zenn.dev/milbon/articles/6a94c49c2b9368</guid><pubDate>Thu, 16 Jan 2025 08:26:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8cgHcPGf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AD%25A6%25E7%25BF%2592%25E3%2580%2591TypeScript%25E3%2581%25A8JAVA%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:milbon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMjg1Mjc4ZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>milbon</dc:creator></item><item><title><![CDATA[トランスコンパイルした JavaScript のエラーが TypeScript のどの部分であるか調べる]]></title><description><![CDATA[
 背景
TypeScript でスクリプトを実装して node で実行する際は一度 JavaScript にトランスコンパイルする必要があります。
トランスコンパイルされた JavaScript のスクリプトは当然ですが TypeScript と記載されているコードが異なりますので JavaScript のコードを実行した時に仮に以下のようなエラーが表示されても TypeScript のコードで同じ行でエラーが起きているわけではありません。
npx tsc foo.ts  # foo.js が作成される
node foo.js  # foo.js を実行 
Error: Not Fou...]]></description><link>https://zenn.dev/cykinso/articles/a58d3199ee3278</link><guid isPermaLink="true">https://zenn.dev/cykinso/articles/a58d3199ee3278</guid><pubDate>Thu, 16 Jan 2025 07:55:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6yogB8BL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%2520JavaScript%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%2520TypeScript%2520%25E3%2581%25AE%25E3%2581%25A9%25E3%2581%25AE%25E9%2583%25A8%25E5%2588%2586%25E3%2581%25A7%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yamasaKit%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmNTQzYzVhYjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Cykinso%2527s%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZDc4NDNmZDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamasaKit</dc:creator></item><item><title><![CDATA[配列とオブジェクトからの型生成]]></title><description><![CDATA[
 この記事の目的
配列とオブジェクトからの型生成について忘れがちなので、生成の方法をと細かい意味をまとめて記憶に留めることを目的としています。

 配列からの型生成
const fruits = ['apple', 'banana', 'orange'] as const

// fruits の型
type Fruits = (typeof fruits)[number]
// "apple" | "banana" | "orange"
const Users = [
  {
    id: 1,
    name: 'John',
  },
  {
    id: 2,
    n...]]></description><link>https://zenn.dev/t_hashi/articles/ceed4febe73c1d</link><guid isPermaLink="true">https://zenn.dev/t_hashi/articles/ceed4febe73c1d</guid><pubDate>Thu, 16 Jan 2025 05:24:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nbKbc2Ec--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A8%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E5%259E%258B%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_hashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JyLVk0Wll5NGd0Z0ljbFhFVUtYX2N4ZlNTaHZFd0NUcldlVkZHSWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_hashi</dc:creator></item><item><title><![CDATA[JavaScript で非破壊的な配列操作する際に、シャローコピーを使うのと非破壊的な配列操作メソッドを使うのとでは何か違いってあるの？]]></title><description><![CDATA[
 はじめに
タイトルにある通りのことが気になって軽く調査＆検証してみました。
具体的な例としては以下のようなことで処理結果に違いはありません。
const ary = [1, 2, 3, 4, 5];

// ソース元配列（ary）をシャローコピーして反転
const copiedAry = [...ary].reverse();

// ES2023で追加された非破壊的メソッド（toReversed）で反転
const nonBreak_ary = ary.toReversed();

console.log(ary, copiedAry, nonBreak_ary);
/*
[1,...]]></description><link>https://zenn.dev/benjuwan/articles/a80df2e0fecdb6</link><guid isPermaLink="true">https://zenn.dev/benjuwan/articles/a80df2e0fecdb6</guid><pubDate>Thu, 16 Jan 2025 02:24:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vunIM_tv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2581%25A7%25E9%259D%259E%25E7%25A0%25B4%25E5%25A3%258A%25E7%259A%2584%25E3%2581%25AA%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E3%2580%2581%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2581%25A8%25E9%259D%259E%25E7%25A0%25B4%25E5%25A3%258A%25E7%259A%2584%25E3%2581%25AA%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%25A7...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:benjuwan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnd2XzJhLTN4SnJmSkN0Ql9wMkkwWUlVaVlTY1ozLTFQZFZoNkxsaUIyRmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>benjuwan</dc:creator></item><item><title><![CDATA[2025-1 JavaScript Tech Talk by KEPPLE CREATORS LAB]]></title><description><![CDATA[こんにちは！KEPPLE CREATORS LAB エンジニアの吉田です。
ケップルでは月に一度、関心のあるフロントエンドの技術やトピックを共有する JavaScript Tech Talk を開催しています。
今回は2024年9月から12月の 4 回にわたり、盛り上がった話題をお届けします！
今回の内容


Convex とは？魅力と課題に迫る！

TypeScript 5.5, 5.6 の新機能について


 Convex とは？魅力と課題に迫る！
Convexは、バックエンド (BaaS) プラットフォームとして注目を集めています。


 1. Convexの魅力
Convexとは...]]></description><link>https://zenn.dev/kepple/articles/e2b9f0c76214d2</link><guid isPermaLink="true">https://zenn.dev/kepple/articles/e2b9f0c76214d2</guid><pubDate>Thu, 16 Jan 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1-f5wpKD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2025-1%2520JavaScript%2520Tech%2520Talk%2520by%2520KEPPLE%2520CREATORS%2520LAB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:riooo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NzkwMTQ0ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kepple%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTExqWVVNdHktdHR0TkZ2ZnZJd1lsOUpBM2tjdUVDRWt3XzlGc3Nmc1FOM3VIU253PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>riooo</dc:creator></item></channel></rss>