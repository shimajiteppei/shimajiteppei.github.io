<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 16 Feb 2025 00:30:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【情報収集の自動化】生成AIにRSSフィードを巡回させてみた]]></title><description><![CDATA[
 背景｜読む記事を探している時間の肥大化
仕事やプライベートでニュースやブログ記事を大量に追いかけていると、「読む記事を探す時間ばかりかかってしまう」という悩みに直面する方も多いのではないでしょうか。僕もRSSフィードを大量に登録しているうちに、記事を探す時間が肥大化してきたことを痛感しました。
そこで今回は生成AI（LLM）を活用して、RSSフィードを自動巡回し、重要度の高そうな記事をAIが選んで通知してくれる仕組みを構築しました。現在、1日あたり約200～500記事をLLMが巡回した結果がメールで届くようになっています。

 アーキテクチャ｜LLM-API（Groq）とGoogle...]]></description><link>https://zenn.dev/mr_dev/articles/a4392122ed19a1</link><guid isPermaLink="true">https://zenn.dev/mr_dev/articles/a4392122ed19a1</guid><pubDate>Sat, 15 Feb 2025 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gL_9qsOy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%2583%2585%25E5%25A0%25B1%25E5%258F%258E%25E9%259B%2586%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2580%2591%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25ABRSS%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25B7%25A1%25E5%259B%259E%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MR%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyMjRjNTlmYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MR</dc:creator></item><item><title><![CDATA[ゆっくりDjango]]></title><description><![CDATA[ChatGPTで生成したゆっくり霊夢とゆっくり魔理沙によるDjango解説です。誤りを含んでいる可能性があります。]]></description><link>https://zenn.dev/hiromichinomata/books/ea0fdae4e560a0</link><guid isPermaLink="true">https://zenn.dev/hiromichinomata/books/ea0fdae4e560a0</guid><pubDate>Sat, 15 Feb 2025 16:49:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0Wx2ocNm--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yYjU5ZjEwZGIwLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Hiromichi NOMATA</dc:creator></item><item><title><![CDATA[【Python】 k-hop Clusteringの詳説：ネットワークグラフにおけるクラスタリング手法の実装と解説！]]></title><description><![CDATA[
 ネットワーク分析手法：k-hop Clusteringの実装・解説

 k-hop Clusteringとは
k-hop Clusteringは、ネットワークグラフにおけるクラスタリング手法の一つです。この手法の特徴は、ネットワーク上の任意のノードから指定した数（k）のエッジを辿って到達できるノードを1つのクラスタとして抽出できる点にあります！

 具体的な例で見るk-hop Clustering

 1-hopクラスタリングの場合
あるノードから1エッジで到達できるノードのみをクラスタとして抽出します。例えば：

中心ノード「A」から
直接つながっているノード「B」「C」「D」が
...]]></description><link>https://zenn.dev/d_treasure0712/articles/5f3b51e4a6d84c</link><guid isPermaLink="true">https://zenn.dev/d_treasure0712/articles/5f3b51e4a6d84c</guid><pubDate>Sat, 15 Feb 2025 15:11:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PWOBppYS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%2520k-hop%2520Clustering%25E3%2581%25AE%25E8%25A9%25B3%25E8%25AA%25AC%25EF%25BC%259A%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258B%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnR4b0JVYlhZeklpamlxN181cGc1bXhtSC00dl9HTmFPVGpId1NtQTlqU3I2eW0xZUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たから</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 20: Race Condition]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day20 の記事です。
https://adventofcode.com/2024/day/20
Day19 の内容はこちら。
https://zenn.dev/yasuharu519/articles/38ffc7cd98ccd3
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 20: Race Condition
今回は CPU が舞台のようです。近くに居た "プログラム" が "レース" を仕掛けてきました。どうやら "Race co...]]></description><link>https://zenn.dev/yasuharu519/articles/f0c43628ffd58e</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/f0c43628ffd58e</guid><pubDate>Sat, 15 Feb 2025 15:06:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Bu5FQtmV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%252020%253A%2520Race%2520Condition%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[tabpy × duckdbを使ってTableau上でSQLを使う。]]></title><description><![CDATA[
 まえがき
Tableau上でSQLを使いたいと思ったことはありませんか？
正直Tableauの計算フィールドでの固有関数の挙動は覚えるしかなくて手間なので何かいい方法はないかと考えていました。
そこでTableau Desktop上でpython版duckdb経由でSQLを使用する方法を考えて試してみました。

 前提
Tableau Desktop(Publicではない)版が必要です。
無料でトライアル版が14日使用できるみたいです。
使用しているpython環境にduckdbがインストールされていることが必要です。

 tabpyのインストール
pip install tabpy...]]></description><link>https://zenn.dev/amana/articles/9da2ab01132973</link><guid isPermaLink="true">https://zenn.dev/amana/articles/9da2ab01132973</guid><pubDate>Sat, 15 Feb 2025 14:57:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0SIHbYdv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tabpy%2520%25C3%2597%2520duckdb%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Tableau%25E4%25B8%258A%25E3%2581%25A7SQL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MjJkN2U5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[Pythonのコンパイラを作りたい #7 - ベンチマークと最適化]]></title><description><![CDATA[こんにちは。前回 (「#6 - ランタイムとメモリ管理（Boehm GC の導入経緯）」) では、Boehm GC を使うことでメモリ管理がどれほど楽になるか、またどのようなメリットがあるかについて説明しました。
今回は少し趣向を変えて、ベンチマークの話題に焦点を当ててみます。コンパイラを自作するうえでは、やはり「実際にどれくらいの速度が出るのか？」は大きな関心事ですよね。ここでは、pyc で簡単なフィボナッチ計算を行い、ほかの言語や実装と比較した結果を紹介します。

 1. フィボナッチ数列のベンチマーク

 1-1. 計測対象: fib(35)

プログラミング言語の性能比較ではお馴...]]></description><link>https://zenn.dev/t3tra/articles/0315b76fd987d2</link><guid isPermaLink="true">https://zenn.dev/t3tra/articles/0315b76fd987d2</guid><pubDate>Sat, 15 Feb 2025 08:46:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VCKU36ot--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2520%25237%2520-%2520%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t3tra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2MDdkNzY3ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t3tra</dc:creator></item><item><title><![CDATA[Jina AIのnode-DeepResearchを試す]]></title><description><![CDATA[
 はじめに
この記事では、Jina AIのnode-DeepResearchを試します。
Jina AIのnode-DeepResearchは以下で公開されています。
https://github.com/jina-ai/node-DeepResearch
ollamaを使うと、ローカルでLLMを使用でき、API料金が発生せず、ローカルで色々と試せます。（Web検索を利用するためのAPI料金は発生します）

 Jina AIのnode-DeepResearchを動かす
https://github.com/jina-ai/node-DeepResearch に従って、試していきます。
...]]></description><link>https://zenn.dev/tossy21/articles/f9b2634791333b</link><guid isPermaLink="true">https://zenn.dev/tossy21/articles/f9b2634791333b</guid><pubDate>Sat, 15 Feb 2025 08:32:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GgWZ1F7v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jina%2520AI%25E3%2581%25AEnode-DeepResearch%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYTdiNWJkY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tossy</dc:creator></item><item><title><![CDATA[競技プログラミングの入出力メモ]]></title><description><![CDATA[
 入力

 1行の整数入力
n = int(input())  # 例: 入力 "5" → n = 5

 1行のスペース区切り整数をリストとして受け取る
arr = list(map(int, input().split()))  # 例: 入力 "1 2 3 4 5" → arr = [1, 2, 3, 4, 5]


input().split() で スペース区切りで分割

map(int, ...) で 文字列を整数に変換

list() で リストに変換


 複数行の入力をリストとして受け取る
n = int(input())  # まず行数を受け取る
arr = [in...]]></description><link>https://zenn.dev/kome471/articles/7fc74aa3998fb1</link><guid isPermaLink="true">https://zenn.dev/kome471/articles/7fc74aa3998fb1</guid><pubDate>Sat, 15 Feb 2025 00:41:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1qSDE0Tp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E6%258A%2580%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MTA3NjM4NTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こめ</dc:creator></item><item><title><![CDATA[書かれたアイパスを撮るだけでWi‑Fi接続＆QR発行🤳Streamlit×Dify×Cloud Runで簡単アプリ実装]]></title><description><![CDATA[
 概要
飲食店やホテル、イベント会場などでよく見かけるWi‑Fi接続情報。
実際に接続する際、ポスターやカードに記載されたSSIDやパスワードを手入力するのは面倒で、ミスも発生しがちです。
こういうやつ（画像のは架空のものなので繋げません）↓

そこで今回、「VTQ Wi‑Fi Reader」（Vision to QR）は、スマホのカメラでWi‑Fi情報が記載された書類やポスターの写真を撮影するだけで、バックエンドのAI（LLM）によって即時に、接続用QRコードを生成してくれるAIエージェントとして開発しました。
本記事では、Streamlitを利用したフロントエンド実装、Difyワー...]]></description><link>https://zenn.dev/ghillie/articles/126ed125ca0444</link><guid isPermaLink="true">https://zenn.dev/ghillie/articles/126ed125ca0444</guid><pubDate>Fri, 14 Feb 2025 11:30:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h_RHyeAW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259B%25B8%25E3%2581%258B%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E6%2592%25AE%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7Wi%25E2%2580%2591Fi%25E6%258E%25A5%25E7%25B6%259A%25EF%25BC%2586QR%25E7%2599%25BA%25E8%25A1%258C%2520Streamlit%25C3%2597Dify%25C3%2597Cloud%2520Run%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDA5NzlhNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アギ</dc:creator></item><item><title><![CDATA[【Python】日々の「freee人事労務」の勤怠登録を自動化する]]></title><description><![CDATA[
 はじめに
「freee人事労務」を日常的に使用している方の中には、毎日の勤怠入力を自動化したいと考えている人もいるでしょう。本記事では、Pythonを用いて「freee人事労務」に自動ログインし、勤怠登録を自動化する方法について解説します。
!
一般的にWebサービスをスクレイピングする場合、利用規約にスクレイピングの可否が記載されています。事前に規約を確認し、適切な方法で自動化を行ってください。


 使用する技術


Python: 自動化スクリプトを作成

Selenium: Webブラウザの操作を自動化

Chromedriver: Chromeブラウザを制御するためのドライ...]]></description><link>https://zenn.dev/ykbone/articles/0ff40c3b3afc6b</link><guid isPermaLink="true">https://zenn.dev/ykbone/articles/0ff40c3b3afc6b</guid><pubDate>Fri, 14 Feb 2025 10:45:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xaaluhqc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%2597%25A5%25E3%2580%2585%25E3%2581%25AE%25E3%2580%258Cfreee%25E4%25BA%25BA%25E4%25BA%258B%25E5%258A%25B4%25E5%258B%2599%25E3%2580%258D%25E3%2581%25AE%25E5%258B%25A4%25E6%2580%25A0%25E7%2599%25BB%25E9%258C%25B2%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykbone%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyYmU2ODQzYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykbone</dc:creator></item><item><title><![CDATA[Pythonでシンプルなパスワードジェネレータを作成する]]></title><description><![CDATA[
 はじめに
こんにちは！今回はPythonを使って、簡単にパスワードを生成するプログラムを作成してみましょう。

 目的
セキュリティを強化するためには、強力なパスワードを使用することが重要です。このプログラムでは、ランダムな文字、数字、特殊文字を組み合わせたパスワードを簡単に生成できます。

 必要なライブラリ
Pythonの標準ライブラリであるrandomとstringを使用しますので、特別なインストールは必要ありません。

 コードの説明
以下がパスワードジェネレータのコードです。
import random
import string

def generate_passwor...]]></description><link>https://zenn.dev/mstng/articles/e273a2120272a2</link><guid isPermaLink="true">https://zenn.dev/mstng/articles/e273a2120272a2</guid><pubDate>Fri, 14 Feb 2025 09:21:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WdbAC7CS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mstng%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVrUWI4S2o0cnl1WHhNZ1FBeXJleTFmOW5JTW1iRmN6UVRzaC1YYk1udWQtNEotYkF2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mstng</dc:creator></item><item><title><![CDATA[Herokuのログを取得し、整形する]]></title><description><![CDATA[
 はじめに
現在監視している Heroku 環境にて、最近はリクエスト数が増えたので、監視用のバッチのためのログ取得処理を実装したので、以下に記します。

 ログ取得
Heroku のログは、Heroku API を使用して取得することができます。
本プログラムでは、error_code と dyno に関心があったので、それらを取得するようにしました。
取得したログは、扱いやすいように pydantic モデルに変換しています。

log_get.py
from typing import Dict, Optional, List
import requests
from datet...]]></description><link>https://zenn.dev/straydog/articles/20fa20448202f3</link><guid isPermaLink="true">https://zenn.dev/straydog/articles/20fa20448202f3</guid><pubDate>Fri, 14 Feb 2025 09:15:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ohxcFTs1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Heroku%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2580%2581%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stray%2520dog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjYzhmZDAzMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stray dog</dc:creator></item><item><title><![CDATA[オーディオ型の振動子を用いた触覚デバイスの実装方法]]></title><description><![CDATA[
 この記事に書いてあること
本記事では、オーディオ型の振動子を用いた触覚デバイスの実装方法について解説します。

 触覚の話
触覚とは、身体を通して外界から加わる圧力や振動などの力学的な刺激を受け取り、それを脳が処理して知覚として成立させる感覚です。人間は一般的に1Hz程度の低周波から数百Hz、さらには数千Hzの高周波帯まで感じ取ることができるとされており、スマートフォンの通知で感じる振動（およそ100～200Hz）は、その代表的な例にあたります。スマートフォンのバイブレーションは、皮膚に直接小刻みな振動や圧力を与えることで認識されますが、こうした周波数帯を変調することで、ざらざらした...]]></description><link>https://zenn.dev/yamarico/articles/8ead36c905e60d</link><guid isPermaLink="true">https://zenn.dev/yamarico/articles/8ead36c905e60d</guid><pubDate>Fri, 14 Feb 2025 09:09:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N0Dfxvac--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AA%25E5%259E%258B%25E3%2581%25AE%25E6%258C%25AF%25E5%258B%2595%25E5%25AD%2590%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E8%25A7%25A6%25E8%25A6%259A%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamarico%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjNjJhMDkzODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamarico</dc:creator></item><item><title><![CDATA[回答を分岐させる簡易RAGスクリプトを組んでみた]]></title><description><![CDATA[
 はじめに
以前保険の窓口に行った際、細かい要望をたくさん出してしまったため、自分に合う保険を探すのに担当の人がすごく時間を使っていて、少し申し訳なく思ったことがありました。
そこで膨大な量の保険商品の中から最適な保険商品を選ぶAIを作ってみようと考えました。
具体的には商品pdfをアップロードしておく事で、通常の生成AIではできない専門的な応答ができるシステムを考えました。
また、保険の質問中に保険以外のことも気になるかもしれないので通常のgeminiとしても動作するようにしてみました。

 仕組み


質問判定　　　: 保険の質問かを判定します。保険に関する質問でないなら手順4に進...]]></description><link>https://zenn.dev/rounda_blog/articles/c0f19cb96ea86c</link><guid isPermaLink="true">https://zenn.dev/rounda_blog/articles/c0f19cb96ea86c</guid><pubDate>Fri, 14 Feb 2025 07:41:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wHO2SvF0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E5%2588%2586%25E5%25B2%2590%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E7%25B0%25A1%25E6%2598%2593RAG%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E7%25B5%2584%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:abe%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4NWFjNjE2ZTAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rounda%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVVUVTRRNnJpQWo0ei1YeTk3X2VSRVNpaUExTXIyTkZDSUUwUVdiczdkb2JaOU53PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>abe</dc:creator></item><item><title><![CDATA[FAISS]]></title><description><![CDATA[
src/FAISS/faiss.py
import faiss
import openai
import numpy as np
import os

class FAISSWrapper:

    def __init__(self, embedding_model: str = "text-embedding-3-small"):
        """
        コンストラクタ。OpenAI APIキーと埋め込みモデルを初期化します。
        """
        self.embedding_model = embedding_model
        se...]]></description><link>https://zenn.dev/yunosuke068/articles/53121d7c0a264f</link><guid isPermaLink="true">https://zenn.dev/yunosuke068/articles/53121d7c0a264f</guid><pubDate>Fri, 14 Feb 2025 04:53:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eB6ku7Oz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:FAISS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yunosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZUxYNl83dzZHbUdMY2pqcTF6OFNxa2ZTQmJVWWJmcXdlcGdSczV5eEZucXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yunosuke</dc:creator></item><item><title><![CDATA[MixPR]]></title><description><![CDATA[
src/MixPR/mixpr.py
import numpy as np

class MixPR:
    """
    Personalized PageRankを用いて文書をランキングするクラス。
    ベクトライズのロジック（TF-IDF or BERT など）はコンストラクタ引数の `vectorizer` で差し替える。
    """
    def __init__(self, vectorizer, alpha=0.85, max_iter=100, tol=1e-6):
        """
        Parameters:
        - vec...]]></description><link>https://zenn.dev/yunosuke068/articles/c7fe5ed8588e78</link><guid isPermaLink="true">https://zenn.dev/yunosuke068/articles/c7fe5ed8588e78</guid><pubDate>Fri, 14 Feb 2025 03:26:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A5qvSC8o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:MixPR%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yunosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZUxYNl83dzZHbUdMY2pqcTF6OFNxa2ZTQmJVWWJmcXdlcGdSczV5eEZucXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yunosuke</dc:creator></item><item><title><![CDATA[Docker Desktopを利用してPytorch環境の構築するメモ]]></title><description><![CDATA[環境を構築するための簡単なメモです。Dockerの仕組みなどの解説は省略します。

 STEP1:GPUドライバをインストール
https://www.nvidia.com/ja-jp/drivers/
「ドライバーの手動検索」より使用するGPUを検索し手順にしたがいドライバーのインストーラーをダウンロードする。基本的には、最新版をダウンロードで問題ない。
インストーラーを実行しドライバーをインストールする。完了後、コマンドプロンプトを起動し以下のコマンドを実行し情報が表示されているとドライバーが問題なくインストールされている。右上の「CUDA Version」が「このCUDAのバージョ...]]></description><link>https://zenn.dev/faceshiba/articles/a82d309aa4f1d9</link><guid isPermaLink="true">https://zenn.dev/faceshiba/articles/a82d309aa4f1d9</guid><pubDate>Fri, 14 Feb 2025 03:08:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F-GrnIo9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Pytorch%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BA%25BA%25E9%259D%25A2%25E6%259F%25B4%25E7%258A%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhNmQxMTQwYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>人面柴犬</dc:creator></item><item><title><![CDATA[スポーツデータサイト一覧(野球編)]]></title><description><![CDATA[スポーツデータの分析に興味があるけれど、「どのサイトを見ればいいのかわからない」「どんなデータが手に入るのか知りたい」と思ったことはありませんか？
野球は、打率や防御率といった基本的なスタッツから、打球速度・回転数・WARなどの高度なセイバーメトリクスまで、多岐にわたるデータが活用されています。しかし、リーグや球団によって公開されているデータの種類は異なり、どのサイトを活用すればよいのか迷うこともあると思います。
この記事では、MLBとNPBのデータが取得できる主要なサイトを紹介します。試合ごとの成績をチェックしたい場合から、詳細なパフォーマンス分析を行いたい場合まで、目的に応じて活用し...]]></description><link>https://zenn.dev/genki_morph/articles/485bc82ffe975b</link><guid isPermaLink="true">https://zenn.dev/genki_morph/articles/485bc82ffe975b</guid><pubDate>Fri, 14 Feb 2025 03:01:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AgmRzY2m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2584%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E4%25B8%2580%25E8%25A6%25A7%2528%25E9%2587%258E%25E7%2590%2583%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:genki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ZDE2MzM0ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>genki</dc:creator></item><item><title><![CDATA[コンテナ内でuvicorn経由でfastAPIを動かす場合のメモ]]></title><description><![CDATA[
 概要
docker内でuvicorn経由でfastAPIを動かす場合のメモです。
loggingの設定や、環境に応じた切り替えなどを考慮して、uvicornの起動をmain.pyから行うようにしました。

 構成
構成は以下の通りです。
app
 ┣ src
 ┃ ┣ main.py
 ┣ Dockerfile
 ┣ docker-compose.yaml
 ┣ log_config.yaml
 ┗ requirements.txt
Dockefileは以下の通りです。
main.pyからuvicornを起動するようにしているので、単純なコマンドになっています。
# ベースイメージと...]]></description><link>https://zenn.dev/kicchan/articles/0006_llyssm_docker_and_uvicorn</link><guid isPermaLink="true">https://zenn.dev/kicchan/articles/0006_llyssm_docker_and_uvicorn</guid><pubDate>Fri, 14 Feb 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vO0iXSAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2586%2585%25E3%2581%25A7uvicorn%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7fastAPI%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kicchan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0NmExYWE4YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kicchan</dc:creator></item><item><title><![CDATA[Djangoでテストデータを用意する]]></title><description><![CDATA[
 概要
半年前に転職して、現職でがっつり Python x Django を使用した開発を行っている。
これまで趣味で使うことや仕事で隙を見て使用することがあったが、これを期にしっかり学んでいきたい。
本記事では、Djangoをでユニットテストを行う上で、テストデータを用意する複数の方法についてそれぞれの特徴を簡単にではあるが整理していきたい。
テストデータを用意する3つの方法として以下を取り上げる。

モデル.objects.create を使用する
フィクスチャ を使用する
FactoryBoy を使用する


 環境

Python : 3.13.0
Django : 5.1.6...]]></description><link>https://zenn.dev/enechange_blog/articles/c562f8ebdff66c</link><guid isPermaLink="true">https://zenn.dev/enechange_blog/articles/c562f8ebdff66c</guid><pubDate>Fri, 14 Feb 2025 01:55:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2AwWm7cb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E7%2594%25A8%25E6%2584%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25B7%25B1%25E6%25BE%25A4%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5YThmZmY3MzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ENECHANGE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZHQyY0NZb0txM29xUzY4RDcyOThGeFhGYjFWSGIyTkNXWVdETT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>深澤ソフトウェア開発ブログ</dc:creator></item></channel></rss>