<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 29 Sep 2025 01:16:49 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Reactで登場するJSXとは]]></title><description><![CDATA[
 はじめに
https://roadmap.sh/react
を通してReactを学習する中でJSXというものが登場した。
しかし、このJSXがよくわかっていないため自分の理解も兼ねて調べたことを整理する。

 JSXって何？
JSXとは「JavaScript XML」の略で、JavaScriptの拡張構文のこと。
JavaScriptファイル内にHTMLのようなコードを記述することができ、Reactコンポーネントを作成するときに、UI構造を視覚的にとらえることができる。
ただし、ブラウザが直接理解できるわけではないため、ビルド時にJavaScriptコードに変換が必要。
たとえば、下...]]></description><link>https://zenn.dev/qoo1000000/articles/9ca6139d35fd0a</link><guid isPermaLink="true">https://zenn.dev/qoo1000000/articles/9ca6139d35fd0a</guid><pubDate>Sun, 28 Sep 2025 14:07:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bjbo_c_S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E7%2599%25BB%25E5%25A0%25B4%25E3%2581%2599%25E3%2582%258BJSX%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Qoo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGtHRXgxSGJfU1ktdXB4TWZKM3RacmFRNU42enBVQ0hheS0xclFya2VjR3FqM29pZ2lEQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Qoo</dc:creator></item><item><title><![CDATA[kuromoji.jsをChromeの拡張機能に入れる]]></title><description><![CDATA[
test.js
    // 拡張機能内の辞書ファイルへのパスを解決する
    // スラッシュから始めることが肝要っぽい
    // 参考：https://qiita.com/ara1yu81/items/d803d1c0623777788182
    const dicPath = '/libraries/kuromoji/dict';
    const chromeDicPath = chrome.runtime.getURL(dicPath);
    kuromoji.builder({ dicPath: chromeDicPath }).build((err, bu...]]></description><link>https://zenn.dev/shin1007/articles/648d57d8430907</link><guid isPermaLink="true">https://zenn.dev/shin1007/articles/648d57d8430907</guid><pubDate>Sun, 28 Sep 2025 07:49:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iGXQIUK4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kuromoji.js%25E3%2582%2592Chrome%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%258E%25E3%2581%25BE%25E5%25B0%258F%25E6%259E%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlMmNiODU2ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねぎま小林</dc:creator></item><item><title><![CDATA[JavaScriptでABC425(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc425

 A - Sigma Cubes
https://atcoder.jp/contests/abc425/tasks/abc425_a
言われた通りfor文で総和を計算してあげればいいと思います
https://atcoder.jp/contests/abc425/submissions/69643260
1分34秒 AC!

 B - Find Permutation 2
https://atcoder.jp/contests/abc425/tasks/abc425_b
Bは愚直……なんだが、これは定期的に発生するJ...]]></description><link>https://zenn.dev/aya_koto/articles/b3a7e14cc349dd</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/b3a7e14cc349dd</guid><pubDate>Sat, 27 Sep 2025 14:04:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6BHRXpXj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC425%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[【編集中】リスト反復処理に使用する reduce についてまとめ]]></title><description><![CDATA[リストの反復処理における reduce は、リストの要素を単一の値に集約する操作です。
これは、各要素を順番に処理しながら、前の処理結果と組み合わせて最終的な1つの結果を生成するというイメージです。

 reduceの仕組み
reduceは通常、以下の3つの要素で構成されます。

 1. 集約する関数
2つの引数をとり、1つの値を返す関数です。
この関数が、リストの各要素をどのように集約するかを定義します。

 2. リスト
処理する要素の集まりです。

 3. 初期値 (optional)
処理を開始する際の最初の値です。
これが指定されない場合、リストの最初の要素が初期値として使われ...]]></description><link>https://zenn.dev/mabo23/articles/4e9c47e705b3ed</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/4e9c47e705b3ed</guid><pubDate>Sat, 27 Sep 2025 10:11:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Viv0tcd4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25B7%25A8%25E9%259B%2586%25E4%25B8%25AD%25E3%2580%2591%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E5%258F%258D%25E5%25BE%25A9%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2520reduce%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[文字列と配列をシュッと分割するユーティリティ divider のご紹介]]></title><description><![CDATA[みなさん、こんにちは！フロントエンドエンジニアの @nyaomaru です！
唐突ですが、文字列の分割、日々やってますよね？
split で十分？うん、8 割は十分。でも、

区切り文字が複数混ざる
固定長でサクッと切りたい

string[] をそのまま処理したい

こういうちょい複雑な場合だと、split + map + 正規表現 + substring の四重苦になりがち。
そこで @nyaomaru/divider。
https://github.com/nyaomaru/divider
区切りを 「文字列」でも「インデックス」でも 指定できて、配列にも直で効く分割ユーティリティ...]]></description><link>https://zenn.dev/nyaomaru/articles/how-to-divide-string</link><guid isPermaLink="true">https://zenn.dev/nyaomaru/articles/how-to-divide-string</guid><pubDate>Sat, 27 Sep 2025 09:25:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I6he8NlU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25A8%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2583%25E3%2581%25A8%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%2520divider%2520%25E3%2581%25AE%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyaomaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNzViM2IxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyaomaru</dc:creator></item><item><title><![CDATA[ESLint v9以降(flat config形式）でeslint-plugin-reactを設定する]]></title><description><![CDATA[
 経緯
!
この記事で扱うESLintのversionはv9.36.0になります。

最近、Reactサービスから離れていたので個人学習を兼ねてReactを構築中に
v9以降でのlint設定（React関連）を行おうとし躓いたので同じ様な事象に遭われた方に
解決の共有またはヒントになれば幸いです。

 躓いた理由

ESLint設定ファイル形式の変更


v9.0.0以降はFlatConfig形式がデフォルトになった
従来の.eslintrc.{js|json|yml}形式は動作しない

v8までは従来形式がデフォルトでFlatConfigは実験的導入の扱い




対応手順が散見して...]]></description><link>https://zenn.dev/w4_3nd0/articles/dd7d1cfdc89a88</link><guid isPermaLink="true">https://zenn.dev/w4_3nd0/articles/dd7d1cfdc89a88</guid><pubDate>Fri, 26 Sep 2025 19:35:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mhlN58x2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%2520v9%25E4%25BB%25A5%25E9%2599%258D%2528flat%2520config%25E5%25BD%25A2%25E5%25BC%258F%25EF%25BC%2589%25E3%2581%25A7eslint-plugin-react%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:endr0id%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFA3aTNROWJhOU1sbGVOQXlBU0xjbjB3Tzc0VEhMLUYzNnJxSTNyUXVkbkFzMkRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>endr0id</dc:creator></item><item><title><![CDATA[Temporal APIの現在地（2025年9月時点）]]></title><description><![CDATA[祝、Firefox通常版でのTemporalリリース。といっても既に4ヶ月くらい経っていますが。
前回の記事:
https://zenn.dev/fabon/articles/e9d4610722b660

 仕様
Temporalは現在stage 3です。仕様バグがちょこちょこ発覚して随時修正されているものの[1]、全体としては安定しています。今後APIのユーザー(一般の開発者)の対応を要する変更が入ることはないでしょう。
なお、Temporalの仕様本体(ECMA-262側)において、ISO8601以外の暦の動作は実装依存となっています。いくら実装依存とはいえ各々のエンジンの計算結果...]]></description><link>https://zenn.dev/fabon/articles/4dbe40896fac73</link><guid isPermaLink="true">https://zenn.dev/fabon/articles/4dbe40896fac73</guid><pubDate>Fri, 26 Sep 2025 19:04:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lJWY21OF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Temporal%2520API%25E3%2581%25AE%25E7%258F%25BE%25E5%259C%25A8%25E5%259C%25B0%25EF%25BC%25882025%25E5%25B9%25B49%25E6%259C%2588%25E6%2599%2582%25E7%2582%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%2581%25E3%2581%25BC%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMThiZjIwMDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふぁぼん</dc:creator></item><item><title><![CDATA[Shai-Huludに汚染されたnpm packageに依存しているかを簡易チェックする]]></title><description><![CDATA[最近、話題のnpmのサプライチェーン攻撃Shai-Huludについての記事。

 感染しているか簡易的に確認したい
自分のプロジェクトがShai-Huludに感染しているかを簡易的に確認したい。

 何を確認すれば良い？
自分のプロジェクトのpackage-lock.jsonやyarn.lockに汚染されたパッケージが含まれているかを確認すれば良い。

 汚染されたパッケージのリストは？
2025/09/26現在、下記のURLのリストが比較的更新されていそう。
https://socket.dev/blog/ongoing-supply-chain-attack-targets-crow...]]></description><link>https://zenn.dev/flyingbarbarian/articles/ddac848ce273bf</link><guid isPermaLink="true">https://zenn.dev/flyingbarbarian/articles/ddac848ce273bf</guid><pubDate>Fri, 26 Sep 2025 14:36:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UwP613c6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Shai-Hulud%25E3%2581%25AB%25E6%25B1%259A%25E6%259F%2593%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fnpm%2520package%25E3%2581%25AB%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%25E3%2582%2592%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:flyingbarbarian%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyNDdlZmU2YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>flyingbarbarian</dc:creator></item><item><title><![CDATA[Vue3のpropsについて調べてみた]]></title><description><![CDATA[
 基本的な使い方
&lt;script setup&gt;内でpropsを受け取るには、definePropsを使用します。これはインポートせずに直接利用できます。

 配列構文
最もシンプルな方法は、propsの名前を文字列の配列で指定するものです。

ChildComponent.vue
&lt;script setup&gt;
// 'message' という名前のpropsを受け取る
const props = defineProps(['message']);

console.log(props.message); // 親から渡された値
&lt;/script&gt;

...]]></description><link>https://zenn.dev/shunsuke_stack/articles/bc2fcfdfa5b6c8</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/bc2fcfdfa5b6c8</guid><pubDate>Fri, 26 Sep 2025 01:08:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--neKrmnIU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AEprops%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[JS で効果音を最適化してみた。]]></title><description><![CDATA[短い時間で複数回鳴らすような効果音がある。
そういった場合、二つの選択肢によってそれは解決できる。
一つは、毎回生成しなおす。
これが一番簡単。
二つ目が、一つのAudioを使いまわす場合。
これは、短い時間で実行しなおすと、音がぶつ切りになる。
audioを生成する場合、その読み込み時間が発生する。
そのため、これを解決する方法を考えた。
最初に複数のAudio要素を作成しておき、それを配列に保管。
呼び出されたら、indexを変えながら再生していく仕組みを作成しました。
これにより、動的読み込みによる処理負荷、
毎回生成する部分での処理軽減ができるのではないかと踏んでいる。
この配列...]]></description><link>https://zenn.dev/kemii/articles/9b896468930dc9</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/9b896468930dc9</guid><pubDate>Thu, 25 Sep 2025 12:38:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aeJK_rYZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%2520%25E3%2581%25A7%25E5%258A%25B9%25E6%259E%259C%25E9%259F%25B3%25E3%2582%2592%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[【JavaScript】分割代入を使って記述を簡略化しよう]]></title><description><![CDATA[
 はじめに
split() 構文を使って取得した配列にアクセスしてその情報を使用していましたが、その方法を使わなくても 分割代入（構造分解） によってスッキリ記述できる方法があります。
その方法について簡単にまとめていきます。

 分割代入

配列から値を取り出して、あるいはオブジェクトからプロパティを取り出して別個の変数に代入することを可能にする JavaScript の構文
※https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Destructuring より引用

具体例を見ていきましょ...]]></description><link>https://zenn.dev/mabo23/articles/aec7346387bbad</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/aec7346387bbad</guid><pubDate>Thu, 25 Sep 2025 10:09:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--joSQqZON--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25A8%2598%25E8%25BF%25B0%25E3%2582%2592%25E7%25B0%25A1%25E7%2595%25A5%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[フロントエンドカンファレンス東京2025 参加レポート]]></title><description><![CDATA[2025年9月21日にAbemaタワーで行われたフロントエンドカンファレンス東京に参加してきました！

 会場到着
会場に到着するとconnpassでの受付を済ませ、スポンサー企業のグッズやパンフレット、ドリンクを受け取ってセッションルームに向かいます。グッズがかわちい


 オープニング

did0es さんの挨拶からカンファレンスが始まりました。
会場案内(手洗い場、Wifiなど)や諸注意があり、最初のセッションを待ちます。

 Bon Voyage! CSS Ecosystem Meets Standards, now?
最初に聞いたセッションはsakuさんのCSSのこれからと将来...]]></description><link>https://zenn.dev/kattu/articles/e977ff28185cbf</link><guid isPermaLink="true">https://zenn.dev/kattu/articles/e977ff28185cbf</guid><pubDate>Wed, 24 Sep 2025 10:12:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vUNlKXYS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25AB%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%25E6%259D%25B1%25E4%25BA%25AC2025%2520%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A3%25E3%2581%25A4%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWx6UmFGRGpuTXgwOEJJZXhjQUFjQUZrQlZiZTEzTUNMeC1pRzI5UklOU2NoRTNDOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かっつー</dc:creator></item><item><title><![CDATA[【JavaScript】型強制についてまとめてみた]]></title><description><![CDATA[
 はじめに
以下のコードで、文字列 pointsList を文字列から数値に変換して計算した結果を配列に格納しています。

 
function calcDistanceList(pointsList){
    return pointsList.map(function(str) {
        let arr = str.split("-");
        let res = Math.abs(arr[0] - arr[1]);
        return res;
    });
}

例えば、pointsList = ["100-200"] を入力として渡すと結果は...]]></description><link>https://zenn.dev/mabo23/articles/825f8a1144f7fc</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/825f8a1144f7fc</guid><pubDate>Wed, 24 Sep 2025 08:40:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Hy806qA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E5%259E%258B%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[Vue3のウォッチャーについて調べてみた]]></title><description><![CDATA[Vue 3 のウォッチャーは、リアクティブなデータの変更を監視し、それに応じて特定の処理（副作用）を実行するための強力な機能です。主に watch と watchEffect の2つの関数が提供されており、それぞれに特徴と最適な利用シーンがあります。


 watch: 特定のデータを監視する

watch 関数は、一つまたは複数の特定のリアクティブなデータソースを監視し、その値が変更されたときにコールバック関数を実行します。より細やかな制御が可能で、副作用の実行条件を明確にしたい場合に適しています。

 基本的な使い方

watch は3つの引数を取ります。


監視対象 (Sourc...]]></description><link>https://zenn.dev/shunsuke_stack/articles/be9654d2edc110</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/be9654d2edc110</guid><pubDate>Wed, 24 Sep 2025 01:31:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u_okbUZd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AE%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%2583%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[Julia の World Age と他の JIT 言語の違いをサンプルコードで比較してみた]]></title><description><![CDATA[
 はじめに
動的言語では「関数を実行中に再定義できる」ことが大きな魅力の一つです。しかし、これを 高性能な JIT 最適化 と両立させるのは簡単ではありません。
Julia はこの問題を解決するために world age という独自の仕組みを採用しています。一方で、Java / .NET / JavaScript / Ruby / Python などの他の JIT 言語は、「推測して最適化 → 壊れたら捨てる」という方式で対応しています。
この記事では、Julia の world age の仕組みと、他の JIT 言語がどのように動的再定義を処理しているかを、サンプルコードとコア概念を...]]></description><link>https://zenn.dev/y_watanabe11/articles/d0cbc3d19a4460</link><guid isPermaLink="true">https://zenn.dev/y_watanabe11/articles/d0cbc3d19a4460</guid><pubDate>Tue, 23 Sep 2025 15:47:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--00CZDv5L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Julia%2520%25E3%2581%25AE%2520World%2520Age%2520%25E3%2581%25A8%25E4%25BB%2596%25E3%2581%25AE%2520JIT%2520%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y-Watanabe11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDAyYTNiOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y-Watanabe11</dc:creator></item><item><title><![CDATA[なぜ、Javaの目標は10日のやっつけ仕事で作られたJavaScriptに全部奪われたのか？]]></title><description><![CDATA[
 はじめに
1990年代半ば、インターネットの黎明期に登場した二つの言語、JavaとJavaScriptは、どちらも「どこでも動く」という夢を背負っていました。
Javaは「Write Once, Run Anywhere（WORA）」のスローガンを掲げ、基幹システムから教育現場に至るまで幅広く採用されました。一方のJavaScriptは、わずか10日で生まれた「ブラウザ用おまけスクリプト」に過ぎませんでした。
しかし30年後、真に「事実上のWORA」を実現したのはJavaではなくJavaScriptでした。なぜこの逆転が起こったのか。その歴史的経緯を主要プレイヤーの動向を踏まえて追っ...]]></description><link>https://zenn.dev/pdfractal/articles/79ec1e7d78be36</link><guid isPermaLink="true">https://zenn.dev/pdfractal/articles/79ec1e7d78be36</guid><pubDate>Tue, 23 Sep 2025 11:16:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---_unIwnn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E3%2580%2581Java%25E3%2581%25AE%25E7%259B%25AE%25E6%25A8%2599%25E3%2581%25AF10%25E6%2597%25A5%25E3%2581%25AE%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A4%25E3%2581%2591%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%2589%25E3%2582%258C%25E3%2581%259FJavaScript%25E3%2581%25AB%25E5%2585%25A8%25E9%2583%25A8%25E5%25A5%25AA%25E3%2582%258F%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pdfractal%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZmJkZmFkY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pdfractal</dc:creator></item><item><title><![CDATA[(PC閲覧推奨)Excel不要！ブラウザだけで完結するセキュアな円グラフ作成ツール「local-pie-chart-maker」を開発した話]]></title><description><![CDATA[
 🚀 まずは触ってみてください！
この記事で紹介するツールのライブデモを用意しました。理屈はあとにして、まずはどんなものか触ってみてください！
👇 ライブデモはこちら 👇
https://hosoyayusaku.github.io/local-pie-chart-maker/


 コピペ用データ
ライブデモをすぐに試せるように、サンプルデータを用意しました。以下の表をコピーして、デモ画面のテキストエリアに貼り付けてみてください。
ID	回答日時	年齢	性別	職業	勤続年数	リモートワークに満足していますか？	リモートワーク頻度	最も重要な要素	生産性の変化	今後の希望
1	2024...]]></description><link>https://zenn.dev/hosoyayusaku/articles/552023f5dd9903</link><guid isPermaLink="true">https://zenn.dev/hosoyayusaku/articles/552023f5dd9903</guid><pubDate>Tue, 23 Sep 2025 08:33:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qWB1MTiI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528PC%25E9%2596%25B2%25E8%25A6%25A7%25E6%258E%25A8%25E5%25A5%25A8%2529Excel%25E4%25B8%258D%25E8%25A6%2581%25EF%25BC%2581%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E5%25AE%258C%25E7%25B5%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2582%25A2%25E3%2581%25AA%25E5%2586%2586%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E4%25BD%259C%25E6%2588%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%258Clocal-pie-chart...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hosoya%2520Yusaku%2520%252F%2520Ci...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMGI2ZmU4ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hosoya Yusaku / CivicTech Developer</dc:creator></item><item><title><![CDATA[イテラブルとは何か調べてみた]]></title><description><![CDATA[
 はじめに
エラーで以下のようなメッセージを見たことがある方も多いはずです。
~ is not iterable ...
この iterable とはなんでしょうか？
この記事で、イテラブルとは何か、その基本についてまとめていきます。

 イテラブルとは？
イテラブル（iterable）とは、反復処理が可能なオブジェクトのことです。
これは、for...of ループを使って、その中の要素を一つずつ順番に取り出せる能力を持つオブジェクトを指します。
ではなぜ、オブジェクトが反復可能なのでしょうか？
それは、内部にイテレーターという仕組みを持っているためです。

 イテラブルなものの例
J...]]></description><link>https://zenn.dev/mabo23/articles/17bb6e3cc0faad</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/17bb6e3cc0faad</guid><pubDate>Tue, 23 Sep 2025 06:54:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G9tvGQQE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[【JavaScript】減量に必要な運動量と運動時間を計算するプログラムを作成  （備忘録）]]></title><description><![CDATA[
 １．はじめに
【JavaScript】BMIを計算するプログラムを作成 （備忘録） の記事内のプログラムを修正し、作成しました。

 ２．サンプルプログラム

Sample.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;link rel="stylesheet" typ...]]></description><link>https://zenn.dev/yama_kawa/articles/10f14c15ab1648</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/10f14c15ab1648</guid><pubDate>Tue, 23 Sep 2025 04:40:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Am35Rb6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ODg5YmQ2Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[XSS対策としてCSPを設定する方法]]></title><description><![CDATA[
 あなたのサイトはXSS対策できていますか？
今回はセキュリティ対策のひとつである**CSP(Content Security Policy)について、解説していこうと思います。
そもそもXSS(クロスサイトスクリプティング)**をご存知でしょうか？
実はXSSにも種類がありこれを理解するところから始まります。
※XSSの種類についての解説は割愛させていただきます
🚧
- 反射型XSS
- 格納型XSS
- DOM Based XSS
CSPによって信頼したコンテンツのみに絞ることでXSS攻撃を大きく軽減できます。
ここから実際にCSPの基礎概念や設定方法を紹介します。
※CSPはXS...]]></description><link>https://zenn.dev/phper8080/articles/dbe2919cc50ff1</link><guid isPermaLink="true">https://zenn.dev/phper8080/articles/dbe2919cc50ff1</guid><pubDate>Tue, 23 Sep 2025 04:04:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UkhhqvJZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XSS%25E5%25AF%25BE%25E7%25AD%2596%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6CSP%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PHPer8080%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDc5YTU1MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>PHPer8080</dc:creator></item></channel></rss>