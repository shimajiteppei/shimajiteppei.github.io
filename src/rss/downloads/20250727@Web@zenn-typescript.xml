<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 27 Jul 2025 08:10:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[新サービス「パケットベース」に公開APIドキュメント設定機能を追加！]]></title><description><![CDATA[パケットベース - Packetsbase

先日個人で開発した新サービス「パケットベース」に、新機能を追加しました！

 概要
「パケットベース」は、組織間・個人間でJSONデータをやりとりでき、データをAPI公開できるサービスです。

今回、公開APIのドキュメント表示機能を追加して、公開APIの使い方や案内を設定できるようにしました。

 準備
せっかくだから、ドキュメントは Markdown で書けるようにします。
「パケットベース」は Markdown を使っていなかったので、モジュールを追加します。
今回は Marked モジュールと highlight.js を使いました。...]]></description><link>https://zenn.dev/yamakazoo/articles/a8593fa4b75f2f</link><guid isPermaLink="true">https://zenn.dev/yamakazoo/articles/a8593fa4b75f2f</guid><pubDate>Sun, 27 Jul 2025 06:30:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9N_GlaKh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2580%258C%25E3%2583%2591%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2580%258D%25E3%2581%25AB%25E5%2585%25AC%25E9%2596%258BAPI%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E8%25A8%25AD%25E5%25AE%259A%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A4%25E3%2583%259E%25E3%2582%25AB%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YTM5ODY2NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヤマカズ</dc:creator></item><item><title><![CDATA[ネイティブ並みの発音を評価せよ：Speechaceでわかる“発音の伸びしろ”]]></title><description><![CDATA[こんにちは@ヒラメです。
今回は、シャドーイングアプリ「シャドマス」がどのように音声評価を実現しているのか、Speechace との出会いから、仕組み、そして今後の活用可能性までを詳しくご紹介します。
https://shadomas.com/

 🌟 Speechace との出会い
我々は、音声変化に特化したシャドーイングアプリを作成するため、カスタマイズ性のある音声評価APIの調査からスタートしました。



サービス名
提供元
主な機能
主な用途
公式リンク




Whisper
OpenAI
・多言語対応・ノイズ耐性・自動翻訳・大規模データで学習
・会議の議事録作成・自動応答シ...]]></description><link>https://zenn.dev/shadomas/articles/df3e482c1327f6</link><guid isPermaLink="true">https://zenn.dev/shadomas/articles/df3e482c1327f6</guid><pubDate>Sun, 27 Jul 2025 02:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n-rXkoWc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E4%25B8%25A6%25E3%2581%25BF%25E3%2581%25AE%25E7%2599%25BA%25E9%259F%25B3%25E3%2582%2592%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%259B%25E3%2582%2588%25EF%25BC%259ASpeechace%25E3%2581%25A7%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E2%2580%259C%25E7%2599%25BA%25E9%259F%25B3%25E3%2581%25AE%25E4%25BC%25B8%25E3%2581%25B3%25E3%2581%2597%25E3%2582%258D%25E2%2580%259D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%2589%25E3%2583%259E%25E3%2582%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MGEwYTAwMDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>シャドマス</dc:creator></item><item><title><![CDATA[React useRefの実装方法と使い所を徹底解説]]></title><description><![CDATA[
 はじめに
ReactのuseRefフックは、DOM要素への直接アクセスや、コンポーネントの再レンダリング間で値を保持するために使用される重要なフックです。この記事では、useRefの実装方法と適切な使い所について詳しく解説します。

 useRefとは
useRefは、Reactフックの一つで、以下の2つの主要な用途があります：

DOM要素への直接アクセス
再レンダリング間での値の保持


 useRefの基本的な実装

 1. DOM要素へのアクセス
import React, { useRef, useEffect } from 'react';

const InputFoc...]]></description><link>https://zenn.dev/tk_niway/articles/react-use-ref-2025-07-27</link><guid isPermaLink="true">https://zenn.dev/tk_niway/articles/react-use-ref-2025-07-27</guid><pubDate>Sun, 27 Jul 2025 01:14:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5WtBHUUo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520useRef%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2589%2580%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk-niway%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWM4NDM4NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk-niway</dc:creator></item><item><title><![CDATA[VS codeの拡張機能「Claude Code Chat」のEnter送信を無効化してCtrl+Enterに変更する方法]]></title><description><![CDATA[
 はじめに
Claude Code Chatは、VS Code内でClaude AIと美しいチャットインターフェースで対話できる素晴らしい拡張機能です。しかし、デフォルトではEnterキーでメッセージが送信されてしまい、改行したい時に不便を感じることがあります。
この記事では、Enter送信を無効化してCtrl+Enter（MacではCmd+Enter）で送信するように修正する方法を紹介します。

 修正内容

 変更するファイル
src/ui.ts の1547行目付近

 修正前のコード
messageInput.addEventListener('keydown', (e) =&g...]]></description><link>https://zenn.dev/tdual/articles/583f94d0e2e603</link><guid isPermaLink="true">https://zenn.dev/tdual/articles/583f94d0e2e603</guid><pubDate>Sat, 26 Jul 2025 15:54:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N2MdfoMX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520code%25E3%2581%25AE%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%258CClaude%2520Code%2520Chat%25E3%2580%258D%25E3%2581%25AEEnter%25E9%2580%2581%25E4%25BF%25A1%25E3%2582%2592%25E7%2584%25A1%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6Ctrl%252BEnter%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tdual%2528%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2587%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUhVMXF4NllvWDZySUhZa19LNXdPb1NhSG03di1GcFlFb3JxMkNxajdaMUFWYkFIaHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tdual(ティーデュアル)</dc:creator></item><item><title><![CDATA[Next.js 15対応 多言語・ダークモード対応SSGテンプレート]]></title><description><![CDATA[この記事は人間が実装を確認し、AIが記事を作成しました。

 概要
このテンプレートは、Next.js 15を使用した静的サイト生成（SSG）に対応し、多言語対応とダークモードを標準装備したWebアプリケーション開発の出発点です。TypeScript、Tailwind CSS、next-intl、next-themesを組み合わせています。
https://nextjs-i18n-themes-ssg-template.vercel.app/ja/


 主な機能

 1. 静的サイト生成（SSG）


output: 'export'によるフルスタティックエクスポート
高速なページロー...]]></description><link>https://zenn.dev/nakamura196/articles/8c072a7d425807</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/8c072a7d425807</guid><pubDate>Sat, 26 Jul 2025 12:37:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t1c7y8_U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252015%25E5%25AF%25BE%25E5%25BF%259C%2520%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25BB%25E3%2583%2580%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E5%25AF%25BE%25E5%25BF%259CSSG%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[PPL法に特化した筋トレ記録アプリを作ってみた]]></title><description><![CDATA[
 💡 PPL-tracker を作ったきっかけ
筋トレの記録、紙やメモアプリじゃ物足りない…。
そんな悩みを解決すべく、PPL法に特化したトレーニング記録アプリを開発しました！
この記事ではアプリの特徴や、開発で意識したポイントを紹介します。
URL
https://ppl-tracker3-fszn.vercel.app/
GitHub
https://github.com/yoscodes/ppl-tracker3


 🏋️‍♂️ PPL-tracker とは？

PPL-trackerはPush（胸・肩・三頭）／Pull（背中・二頭）／Leg（脚）**という3つのカテゴリに分け...]]></description><link>https://zenn.dev/4o7i1/articles/9f3441c92dda14</link><guid isPermaLink="true">https://zenn.dev/4o7i1/articles/9f3441c92dda14</guid><pubDate>Sat, 26 Jul 2025 08:59:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TDliYjUi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PPL%25E6%25B3%2595%25E3%2581%25AB%25E7%2589%25B9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E7%25AD%258B%25E3%2583%2588%25E3%2583%25AC%25E8%25A8%2598%25E9%258C%25B2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yosei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDRlNGYxM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yosei</dc:creator></item><item><title><![CDATA[Zodのダミーデータ生成ライブラリのZockerがイケてる]]></title><description><![CDATA[最近、ZockerというZodのスキーマ通りのダミーデータを自動生成してくれるとてもイケてるライブラリを知りました。
https://zocker.sigrist.dev/

 使い方
公式ドキュメントそのままですが、zocker(schema).generate()でいい感じにテストデータが生成されます。
import { z } from "zod/v4";
import { zocker } from "zocker";

const person_schema = z.object({
    name: z.string(),
    age: z.number(),
    ...]]></description><link>https://zenn.dev/ikoamu/articles/e1994b853c52bb</link><guid isPermaLink="true">https://zenn.dev/ikoamu/articles/e1994b853c52bb</guid><pubDate>Sat, 26 Jul 2025 07:20:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i72EWfWa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zod%25E3%2581%25AE%25E3%2583%2580%25E3%2583%259F%25E3%2583%25BC%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2594%259F%25E6%2588%2590%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AEZocker%25E3%2581%258C%25E3%2582%25A4%25E3%2582%25B1%25E3%2581%25A6%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shotaro%2520Aoki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiZGM5Y2E2MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shotaro Aoki</dc:creator></item><item><title><![CDATA[Canva CLIってなに！？ カスタムアプリ作ってCanvaの左ナビに追加して利用できた！]]></title><description><![CDATA[!
人が書いてるよ！


 けっきょく、何ができたの？
作ったソースを登録して、Canvaの左メニューに追加してアプリとして利用できるよ！
わたしはてっきりソースCLIベースでデザインできるものだと思ってたんだよ！！

 経緯
わたしはCanvaを登録したことがありますが
ほとんど使ったことがありません！
何となーく理解の中、CanvaCLIが出ていたのでこれを機に
触ってみようと思います

 事前準備
CanvaCLIを利用するには以下が必要です

Node.js v18.20.4 or v20.17.0
npm v9 pr v10
Canvaのアカウント
※Canvaアカウント取得が...]]></description><link>https://zenn.dev/mohy_nyapan/articles/fac1d7d3f30d7d</link><guid isPermaLink="true">https://zenn.dev/mohy_nyapan/articles/fac1d7d3f30d7d</guid><pubDate>Fri, 25 Jul 2025 14:17:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q_Yk0QJE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Canva%2520CLI%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%2581%25EF%25BC%259F%2520%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6Canva%25E3%2581%25AE%25E5%25B7%25A6%25E3%2583%258A%25E3%2583%2593%25E3%2581%25AB%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A2%25E3%2583%2592%25E3%2581%25AB%25E3%2582%2583%25E3%2581%25B1%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYzVlOGJiNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>モヒにゃぱん</dc:creator></item><item><title><![CDATA[リトライ管理はEffect.tsを推奨したい (Effect.ts Schedule)]]></title><description><![CDATA[
 リトライが必要だ
ウェブアプリケーションを作る上で、外部サービスを利用するとき、リトライについて考える必要があります。
たとえば、クラウドサービスを使う上でも、一瞬500エラーを返すけれども、次の瞬間にやりなおせばうまくいくことがあります。
こうしたとき、それがショットのリクエスト内のことであれば終了してもよいのかもしれませんが、ロングランであれば、サービスのユーザー体験に影響します。
そのようなとき、リトライするように設計することがウェブサービス開発者には求められます。[1]

 既存のパッケージライブラリの課題
具体名を挙げることはしないが、従来のパッケージには下記のような課題が...]]></description><link>https://zenn.dev/optimind/articles/effect-schedule-is-the-best-for-retry</link><guid isPermaLink="true">https://zenn.dev/optimind/articles/effect-schedule-is-the-best-for-retry</guid><pubDate>Fri, 25 Jul 2025 10:04:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VvQASZlQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AFEffect.ts%25E3%2582%2592%25E6%258E%25A8%25E5%25A5%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520%2528Effect.ts%2520Schedule%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:luma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjY2ZmM2Q5YzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OPTIMIND%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lnRFRSQVhGMGJ1cUs3cXg4NGdUYlVNU3RlZnVVekdiN0p0Q0hWRFE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luma</dc:creator></item><item><title><![CDATA[文字列を区切ると空文字が生成される]]></title><description><![CDATA[const text = 'なんかのエラーです。もう一度懲りずにやり直してください。';
const sentence = text.split('。');
console.log(sentence);
// (3) ['なんかのエラーです', 'もう一度懲りずにやり直してください', '']
最後に空文字ができるの、なぜなのかよく分からず...
日本語が原因なのかと思いましたが、関係ないようです
const text = 'nankanoeradesu.mouichidokorizuniyarinaoshitekudasai.';
const sentence = text.split...]]></description><link>https://zenn.dev/tanaa/articles/e48a460fb8c699</link><guid isPermaLink="true">https://zenn.dev/tanaa/articles/e48a460fb8c699</guid><pubDate>Fri, 25 Jul 2025 09:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CwKd4UmS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E5%258C%25BA%25E5%2588%2587%25E3%2582%258B%25E3%2581%25A8%25E7%25A9%25BA%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E7%2594%259F%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxNWJiOGQ5NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tana</dc:creator></item><item><title><![CDATA[SaaSプロダクトのKubernetesマニフェスト管理をcdk8s化して運用性・保守性を大幅改善しました]]></title><description><![CDATA[こんにちは、エンジニアの齊藤です。
私が携わっているプロダクトでは、複数の旅行会社向けにSaaSサービスを提供しており、Kubernetes(k8s)でWebアプリケーションやバッチジョブを運用しています。嬉しいことに導入してくださるお客様が増えてきたのですが、各顧客に要求されるリソース量や細かな設定値が異なっているため、顧客数の増加に伴い運用負荷が高まってきていたという側面がありました。
具体的には、k8sマニフェストの管理が問題となっていました。k8sを用いてアプリをデプロイするためにはk8sマニフェストを用意する必要がありますが、我々のプロダクトでは細かな設定値の異なる複数の顧客に...]]></description><link>https://zenn.dev/forcia_tech/articles/20250711_rsaito_cdk8s</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/20250711_rsaito_cdk8s</guid><pubDate>Fri, 25 Jul 2025 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m_ySGZXC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SaaS%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AEKubernetes%25E3%2583%259E%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592cdk8s%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E9%2581%258B%25E7%2594%25A8%25E6%2580%25A7%25E3%2583%25BB%25E4%25BF%259D%25E5%25AE%2588%25E6%2580%25A7%25E3%2582%2592%25E5%25A4%25A7%25E5%25B9%2585%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[大規模PJでAI駆動開発。Cursor Agentの品質とは？]]></title><description><![CDATA[
 はじめに
こんにちは。エンジニア 兼 講師のShotaです。
普段はエンジニアとしてAIツールを実案件に適用しながら開発を行い、同時に講師として得られた知見を体系化して受講生の方にお伝えする活動をしています。
AIツールを実案件に適用する際に事前に知っておくべき実践的なTipsのシリーズ第2回目。今回のテーマは「Agentモードの品質とは？」です。
前回解説した、新規開発に利用するAIツールのAgentモード。「〇〇アプリ作ってみた」という紹介記事は数多くありますが、実際に出力されるコードの品質を詳しく分析した事例はまだ少ないのが現状です。
AIツールは個人開発や小規模PJでの利用に...]]></description><link>https://zenn.dev/shotafukuyama/articles/890e8178cfda7d</link><guid isPermaLink="true">https://zenn.dev/shotafukuyama/articles/890e8178cfda7d</guid><pubDate>Fri, 25 Jul 2025 02:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x5K8id41--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1PJ%25E3%2581%25A7AI%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2582Cursor%2520Agent%25E3%2581%25AE%25E5%2593%2581%25E8%25B3%25AA%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Fukuyama%25EF%25BD%259CUde...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjMDQ5ZmY1NDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota Fukuyama｜Udemyベストセラー講師</dc:creator></item><item><title><![CDATA[TanStack Routerで実現する高度なクエリパラメータ管理]]></title><description><![CDATA[
 はじめに
ReactアプリケーションでURLクエリパラメータを扱う際に直面する課題として、型安全性の欠如、複雑なデータ構造の扱いづらさ、デフォルト値の管理、そしてパフォーマンスの最適化などがあります。
既存のルーティングライブラリ（React Router、Next.js、Expo Routerなど）は基本的なuseSearchParamsやuseLocalSearchParamsフックを提供していますが、これらは手動での型変換、文字列処理、バリデーションが必要で、開発者体験を大きく損なっています。
本記事では、TanStack Routerが提供する高度なクエリパラメータ管理機能、...]]></description><link>https://zenn.dev/tsuboi/articles/c76fc09315bdd1</link><guid isPermaLink="true">https://zenn.dev/tsuboi/articles/c76fc09315bdd1</guid><pubDate>Thu, 24 Jul 2025 11:38:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fINKFH1M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TanStack%2520Router%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E9%25AB%2598%25E5%25BA%25A6%25E3%2581%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsuboi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMmU3Zjg2MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsuboi</dc:creator></item><item><title><![CDATA[TypeScriptの自分用技術スタック]]></title><description><![CDATA[
 概略
すごい基本的なことを記録しています。

 判定

 指定した文字を含むかどうかを判定
const isMatch = str.includes("指定文字");

 指定した文字（複数）を含むかどうかを判定
const specialChars = ['.', '*']
const isMatch = specialChars.some(char =&gt; str.includes(char));

 処理分岐

 truthyならTrue、falsyならFalaseにする
// metaが存在し、meta.errorがtruthyならtrue
const isError =...]]></description><link>https://zenn.dev/noelsun/articles/f3cd6700bb77f4</link><guid isPermaLink="true">https://zenn.dev/noelsun/articles/f3cd6700bb77f4</guid><pubDate>Thu, 24 Jul 2025 10:17:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pVGGVZOi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noelsun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEpJT01tVEphcHlKMUMxU3ZrZGpoX1p1R29tYklscy1Cc2xlb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noelsun</dc:creator></item><item><title><![CDATA[NuxtのuseFetchのカスタマイズが思いのほか面倒だった]]></title><description><![CDATA[useFetchのbaseURLオプションを毎度書くのが非常に面倒なので、ラッパーコンポーザブルをサクッと書こうとしたら意外難しかったのでメモ。
まずnuxt.config.tsにbaseURLオプションを指定しておく。

nuxt.config.ts
export default defineNuxtConfig({
  runtimeConfig: {
    public:{
      baseURL: "http://example.com/",
    }
  }
}

ラッパーコンポーザブルuseApi.tsを試しに👇のように書くと、useFetchにオプションを渡すときに...]]></description><link>https://zenn.dev/artovenry/articles/9355403a8a9290</link><guid isPermaLink="true">https://zenn.dev/artovenry/articles/9355403a8a9290</guid><pubDate>Thu, 24 Jul 2025 09:05:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HqhG_OMS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt%25E3%2581%25AEuseFetch%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%258C%25E6%2580%259D%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25BB%25E3%2581%258B%25E9%259D%25A2%25E5%2580%2592%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:artovenry%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUU4RHlBeVhMbFZ1dG5mbnBiZmY5cEVrOVVYWVVMVWQyOUplYkc1TjNBTkE4U1Z3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>artovenry</dc:creator></item><item><title><![CDATA[テックブログ始めました]]></title><description><![CDATA[
 まとめ

ウェザーニューズのテックブログを開設しました
エンジニア、広報、法務による多角的なレビューを導入します
一連の流れをシステマチックにするため、GitHub Actions を利用した自動化を図っています
システム構築にあたり Vibe/Agentic Coding を最大限活用しました


 はじめに
はじめまして、株式会社ウェザーニューズ陸上気象事業部の Hoshock です。
全社のモダン開発・クラウド化を推進しており、直近では新卒の開発研修リーダーを務めています。
この度、表題の通りウェザーニューズのテックブログを開設しました。
このブログでは、ウェザーニューズの開発...]]></description><link>https://zenn.dev/weathernews/articles/b47082b365c8ca</link><guid isPermaLink="true">https://zenn.dev/weathernews/articles/b47082b365c8ca</guid><pubDate>Thu, 24 Jul 2025 05:45:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BQUEpTXh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hoshock%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OTYyNThkZjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Weathernews%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwNjAzM2NlZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hoshock</dc:creator></item><item><title><![CDATA[SWRの再取得を疎結合に通知する、イベント駆動のReact設計パターン]]></title><description><![CDATA[
 はじめに
ReactでSPAを開発していると、ある画面での操作が別のコンポーネントに影響を与えるという場面に頻繁に出くわします。
たとえば、以下のようなケースです：

商品の並び替えが完了したら、商品一覧を再取得したい
アイテムの削除や追加後に、他のビューのデータも更新したい

こうしたときに、SWRの mutate() を使えばうまくいきそうに思えますが、実際にはいくつかの課題があります。
この記事では、Contextや状態管理ライブラリに頼らず、依存を増やさずに実現できる方法として、超軽量なEventEmitterパターンをご紹介します。

 mutateの限界："グローバルに呼...]]></description><link>https://zenn.dev/kra8/articles/ff7fbf6a3c629d</link><guid isPermaLink="true">https://zenn.dev/kra8/articles/ff7fbf6a3c629d</guid><pubDate>Thu, 24 Jul 2025 01:52:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TXH9BpPS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SWR%25E3%2581%25AE%25E5%2586%258D%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E7%2596%258E%25E7%25B5%2590%25E5%2590%2588%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E9%25A7%2586%25E5%258B%2595%25E3%2581%25AEReact%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kra8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lWZnhseVJ2ajMtVG1sU1VWNDY0NHd6Z3QtV3FmaVRHQ0xrNzdpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kra8</dc:creator></item><item><title><![CDATA[Mastraワークフローの型安全性と変更容易性を高める設計指針]]></title><description><![CDATA[
 はじめに
こんにちは、atamaplus の takei です。
最近、趣味や業務でエージェントフレームワークであるMastra のワークフロー機能[1]を約 1 ヶ月ほど使ってみました。
実際に使ってみて非常に便利である一方で、適切に設計しないと型安全性や変更容易性（保守性）に課題が生じやすいと感じました。
特に以下のような課題に直面しました。

ステップ[2] の中で getInitData[3] や runtimeContext[4] を使うと型推論が効かず、型安全でないコードになる
ステップがワークフロー定義に依存し、ワークフローの変更や他のワークフローでのステップの再利用が...]]></description><link>https://zenn.dev/atamaplus/articles/f558f854fe715d</link><guid isPermaLink="true">https://zenn.dev/atamaplus/articles/f558f854fe715d</guid><pubDate>Thu, 24 Jul 2025 01:07:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FTjuZFOn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E3%2581%25A8%25E5%25A4%2589%25E6%259B%25B4%25E5%25AE%25B9%25E6%2598%2593%25E6%2580%25A7%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258B%25E8%25A8%25AD%25E8%25A8%2588%25E6%258C%2587%25E9%2587%259D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yutake27%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTM3M2I1YWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:atama%2520plus%2520techblog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNTc2ZTM0OTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yutake27</dc:creator></item><item><title><![CDATA[[TypeScript]乱数文字列を生成する]]></title><description><![CDATA[!
この記事は「[Dart]乱数文字列を生成する」をTypeScript用に書き換えたものです.

https://zenn.dev/toms74209200/articles/dart-random-string

JavaScript でよく見る乱数文字列を生成する関数は以下のようなものでしょう.
function generateRandomString(length) {
    const chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let result = "";
...]]></description><link>https://zenn.dev/toms74209200/articles/typescript-random-string</link><guid isPermaLink="true">https://zenn.dev/toms74209200/articles/typescript-random-string</guid><pubDate>Thu, 24 Jul 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OfOvNTkx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%25E4%25B9%25B1%25E6%2595%25B0%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toms%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLV3Rva3h5eWFxT0M5ajlpQXhVQjF1NVlndDV3QUprRjVEc0lXcEVDNnVoUD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toms</dc:creator></item><item><title><![CDATA[Promiseとモナド： then と async/await の選び方]]></title><description><![CDATA[何度目の議論かという感じですが、全員がこうすべきという主張ではなく、あくまで自分の意見を残すためのドキュメントです。

 tl;dr
async/await と then は表面的には等価ですが、設計や保守の観点では明確なトレードオフがあります。
制約が強いほど安全性が高く、予期せぬ副作用を避けやすくなります。
そのため、原則として関数合成（then）を採用し、どうしても中間変数が必要な箇所のみ async によるdo記法を用いるべきだと考えています。

 Promise とモナド：then と async/await の選び方
Promise や一般的なモナドを扱う際、主に2種類の記法...]]></description><link>https://zenn.dev/unhappychoice/articles/b46ee85439beb1</link><guid isPermaLink="true">https://zenn.dev/unhappychoice/articles/b46ee85439beb1</guid><pubDate>Wed, 23 Jul 2025 23:03:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LmCT3sEN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Promise%25E3%2581%25A8%25E3%2583%25A2%25E3%2583%258A%25E3%2583%2589%25EF%25BC%259A%2520then%2520%25E3%2581%25A8%2520async%252Fawait%2520%25E3%2581%25AE%25E9%2581%25B8%25E3%2581%25B3%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuji%2520Ueki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2htc0V1eUFJV0pMZjZCTGdTM1VweG5INnU5N0RCTHlrRkhXZmg5Q2t3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuji Ueki</dc:creator></item></channel></rss>