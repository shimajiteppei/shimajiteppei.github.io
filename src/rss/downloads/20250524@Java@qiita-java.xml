<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-05-24T20:30:29+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2030207</id>
    <published>2025-05-24T20:30:29+09:00</published>
    <updated>2025-05-24T20:30:29+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hiuchida/items/742e117dbf14c0727127"/>
    <url>https://qiita.com/hiuchida/items/742e117dbf14c0727127</url>
    <title>new int[n]のnの最大値</title>
    <content type="html">Javaで配列をメモリ確保する場合、要素数の最大はいくつだろうか。
たまたま見つけた2013/09の記事では、32ビットJVMで0x3fffffff - 3 (= 1,073,741,820)、64…</content>
    <author>
      <name>hiuchida</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2030133</id>
    <published>2025-05-24T16:54:01+09:00</published>
    <updated>2025-05-24T16:54:01+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/juehara-crypto/items/b293102d6a4d68e926b1"/>
    <url>https://qiita.com/juehara-crypto/items/b293102d6a4d68e926b1</url>
    <title>📘【Struts2 Vol.9.xxxシリーズ総まとめ】実務で活かす！入力バリデーション・型変換リファレンス集</title>
    <content type="html">📌 はじめに
Struts2を用いた業務システムにおいて、「正しい値を正しく処理する力」 はアプリケーションの信頼性と保守性を支える根幹です。
本シリーズVol.9では、入力バリデーションと型変換に…</content>
    <author>
      <name>juehara-crypto</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2030122</id>
    <published>2025-05-24T16:22:53+09:00</published>
    <updated>2025-05-24T16:22:53+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/juehara-crypto/items/b8b3b4c67d884f0b7262"/>
    <url>https://qiita.com/juehara-crypto/items/b8b3b4c67d884f0b7262</url>
    <title>🌟 Vol.9.0〜9.11 総まとめ：Struts2 バリデーション編（実務レベルの入力チェック設計／実装／UX／Ajax連携）</title>
    <content type="html">本シリーズ「Vol.9.xxx」では、Struts2における入力バリデーションの全体像を実務目線で解説してきました。
validate()・XML定義・国際化・UI改善・Ajax活用まで、網羅的かつ…</content>
    <author>
      <name>juehara-crypto</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2030116</id>
    <published>2025-05-24T16:06:07+09:00</published>
    <updated>2025-05-24T16:09:01+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/juehara-crypto/items/7d33c9cd812b37153c12"/>
    <url>https://qiita.com/juehara-crypto/items/7d33c9cd812b37153c12</url>
    <title>📘 Vol.9.11：【Struts2】Ajax×バリデーション連携編 〜 クライアント×サーバーで UX＆保守性を両立するハイブリッド構成 〜</title>
    <content type="html">Struts2によるバリデーション実装の集大成として、Ajaxとの連携によるバリデーション制御を解説します。
本記事では、サーバーサイドの robust な検証処理を維持しながら、フロント側での応答…</content>
    <author>
      <name>juehara-crypto</name>
    </author>
  </entry>
</feed>
