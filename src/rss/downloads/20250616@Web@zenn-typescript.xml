<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 16 Jun 2025 06:59:34 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[設計作成アプリを自作してみる]]></title><description><![CDATA[
 はじめに
変化が起きない時代よりも変化の激しい時代の方が面白いと感じているAIエンジニアです。
歴史的に見ると変化のスパン（感覚や周期）はどんどん短くなっているらしいです。
なかなか良い時代を生きている気がします。
取り残されないように注意しつつ、楽しんでいきたいと思います。
さて、生成AI活用に関するセミナーで開発用の設計を作成するツールを見て衝撃を受けました。
無性に作りたくなったのでアプリ開発の勉強をしつつ作ってみた、という感じの記事です。
フロントエンドはReact + TypeScriptを触って半年程度、バックエンドは初挑戦レベルの人の記事です。
私はGPTのAPI登録を...]]></description><link>https://zenn.dev/goals_techblog/articles/d96121d4e4966c</link><guid isPermaLink="true">https://zenn.dev/goals_techblog/articles/d96121d4e4966c</guid><pubDate>Mon, 16 Jun 2025 06:04:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q_VsUhYL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%25AD%25E8%25A8%2588%25E4%25BD%259C%25E6%2588%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kei%2520TAKAHATA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0ZmMzNjliMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Goals%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjg4MDE4MTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kei TAKAHATA</dc:creator></item><item><title><![CDATA[大規模 Node.js サーバーに潜むパフォーマンス上のリスクを Event Loop から理解する]]></title><description><![CDATA[潜んでいるリスク、一番苦手なリスクです！どうも、whatasoda です。
モノリシックなサービスでは、サービスの成長とともに 1 つのアプリケーションの中にさまざまな性質の処理が混在するようになります。Node.js のようなシングルスレッドで処理が実行されるランタイムでは、複数の処理を走らせる場合に 1 つしかないスレッドを取り合う形で互いの処理を待機させ合うような振る舞いをすることがあります。
技術スタックを TypeScript に統一しているダイニーでは当然バックエンドの API サーバーを Node.js 上で実行しています。過去、「注文の受付」や「会計処理」といったリアルタ...]]></description><link>https://zenn.dev/dinii/articles/f09d21542871ae</link><guid isPermaLink="true">https://zenn.dev/dinii/articles/f09d21542871ae</guid><pubDate>Mon, 16 Jun 2025 05:08:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JBN3bZzq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%2520Node.js%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E6%25BD%259C%25E3%2582%2580%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E4%25B8%258A%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%2520Event%2520Loop%2520%25E3%2581%258B%25E3%2582%2589%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:whatasoda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNTVhMGJiNDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Dinii%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlZWE3MDkzNTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>whatasoda</dc:creator></item><item><title><![CDATA[Next.jsのApp Routerでライブラリに頼らない多言語対応]]></title><description><![CDATA[
 はじめに
以前、こちらの記事を書いた時は昔だったのでPages Routerが前提でまだ自前でi18n対応するのは簡単でした
https://zenn.dev/steelydylan/articles/nextjs-with-i18n
最近はNext.jsのApp RouterでWebアプリを作るので、作ったサイトを国際化対応したのですが、ライブラリの選定に悩みました。
昔みたいにクライアントコンポーネントだけが前提ではなく、サーバーコンポーネントとクライアントコンポーネントがApp Routerでは混在しているので、単純にhooksを使うだけでは解決できないからです！
そのため、最...]]></description><link>https://zenn.dev/progate/articles/app-router-i18n-without-library</link><guid isPermaLink="true">https://zenn.dev/progate/articles/app-router-i18n-without-library</guid><pubDate>Sun, 15 Jun 2025 22:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OP9GlOrq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AEApp%2520Router%25E3%2581%25A7%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AB%25E9%25A0%25BC%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Godai%2520Hori%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzOTZjNjhlM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Progate%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2MzlkZTY4MGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Godai Hori</dc:creator></item><item><title><![CDATA[スプレッド構文を１行で理解する【Javascript / Typescript 初心者向け】]]></title><description><![CDATA[スプレッド構文の使い方が初心者の頃はよく分かっておらず、Webで調べてみても難しい説明ばかりでなかなか理解が進まなかった記憶があるので、
簡単な文言を使って１行でスプレッド構文の使い方を説明したいと思い、記事にしました。

 解説
スプレッド構文を1行で説明すると、
配列やオブジェクトの外側の括弧 ( [], {} ) を取り除くことです。
具体的に説明すると、arrと[...arr]は同じ配列を表し、objと{...obj}は同じオブジェクトを表すことになります。
// 配列の場合
const arr = [1, 2, 3];
console.log(arr); // [1, 2, 3...]]></description><link>https://zenn.dev/kanamo/articles/39e8da9c41025d</link><guid isPermaLink="true">https://zenn.dev/kanamo/articles/39e8da9c41025d</guid><pubDate>Sun, 15 Jun 2025 22:23:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IJLJK5UH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%25A7%258B%25E6%2596%2587%25E3%2582%2592%25EF%25BC%2591%25E8%25A1%258C%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Javascript%2520%252F%2520Typescript%2520%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25AA%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxMmMwN2YyM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かなも</dc:creator></item><item><title><![CDATA[drizzle-llm ~自然言語で指示できる、ビルド時SQL生成~]]></title><description><![CDATA[飲み会で「もうSQLはLLMに書いてもらう方が良さそうですね〜ガハハ」という会話があったので、drizzle-orm向けの仕組みを作ってみました。
https://github.com/iwamatsu0430/drizzle-llm
https://www.npmjs.com/package/drizzle-llm

 できること
自然言語でクエリロジックを書くと、LLMがSQLを生成してくれます。
ビルド時に生成する仕組みなので、一度生成してしまえば実行ごとにお金がかかることはありません。
また、クエリ自体はSQLファイルで保存されるため必要に応じて修正できますし、型安全性をある程度...]]></description><link>https://zenn.dev/iwmat/articles/ca0021791f4b4a</link><guid isPermaLink="true">https://zenn.dev/iwmat/articles/ca0021791f4b4a</guid><pubDate>Sun, 15 Jun 2025 22:00:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wRfHNyMH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:drizzle-llm%2520%7E%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E6%258C%2587%25E7%25A4%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%2581%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2599%2582SQL%25E7%2594%259F%25E6%2588%2590%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iwmat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxMDdhMzA0NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iwmat</dc:creator></item><item><title><![CDATA[【react/typescript】propsの渡し方をミスると大変なことに！？(気がついたことのまとめ)]]></title><description><![CDATA[みなさん、こんにちは。
てるし〜です。
今回、propsの渡し方をミスると大変なことになってしまうのでは？という記事です。
完璧な説明ができないとは思いますが、少しでも意識付けしていただければと記事にします。
!
最近暑くなってきましたね。
みなさん、熱中症等には気をつけてください！🥵


 私自身がやっているpropsの渡し方
今回、簡単なソースを用意しました。
まず、AComponentというコンポーネントを用意しました。

a-components.tsx
interface Props {
  username: string;
}

export function ACompo...]]></description><link>https://zenn.dev/terusi/articles/46abffaaf7f002</link><guid isPermaLink="true">https://zenn.dev/terusi/articles/46abffaaf7f002</guid><pubDate>Sun, 15 Jun 2025 16:10:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P8o4ORJI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590react%252Ftypescript%25E3%2580%2591props%25E3%2581%25AE%25E6%25B8%25A1%25E3%2581%2597%25E6%2596%25B9%25E3%2582%2592%25E3%2583%259F%25E3%2582%25B9%25E3%2582%258B%25E3%2581%25A8%25E5%25A4%25A7%25E5%25A4%2589%25E3%2581%25AA%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25EF%25BC%2581%25EF%25BC%259F%2528%25E6%25B0%2597%25E3%2581%258C%25E3%2581%25A4%25E3%2581%2584%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2M5MzkyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるし〜</dc:creator></item><item><title><![CDATA[React Native + Expo Go + Firebaseでアプリ開発＃１]]></title><description><![CDATA[
 はじめに
この「でぶろぐ」について
初心者エンジニアが四苦八苦しながら個人開発していく過程をつらつら書きます。
備忘録のようなものです。。。
&nbsp;
React Native + Expo Go + Firebaseでチャットアプリ開発 ～開発環境構築編～
&nbsp;

 開発環境
フロントエンド

Node.jsとnpm
React Native
Expo Go
TypeScript

バックエンド

Google Firebase
&nbsp;


 開発環境の構築
Windows環境にVisual Studio Code、Node.jsがインストールされていることが前提...]]></description><link>https://zenn.dev/moony0111/articles/4172577f566369</link><guid isPermaLink="true">https://zenn.dev/moony0111/articles/4172577f566369</guid><pubDate>Sun, 15 Jun 2025 14:08:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vr7mlznH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Native%2520%252B%2520Expo%2520Go%2520%252B%2520Firebase%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2583%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2585%25E3%2581%25AB%25E3%2581%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YTMzMTRlMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むぅにぃ</dc:creator></item><item><title><![CDATA[ツリーシェイキングと副作用 ツリーシェイキングが効く時と効かない時]]></title><description><![CDATA[
 用語の整理：「ビルド」と「バンドル」
一般的に「ビルド」は、ソースコードを本番用に変換する一連の工程全体（トランスパイル・圧縮・バンドルなどを含む広義の用語）を指します。
一方「バンドル」は、その中の一工程で、複数のファイルやモジュールを1つまたは少数のファイルにまとめる処理です。ツリーシェイキングもこのバンドル工程の中で行われます。

補足：「ビルド」と「バンドル」の関係
「ビルド」は、ソースコードを本番用に変換・最適化する全体の工程を指し、その中に「バンドル」（複数ファイルの結合）や「トランスパイル」「圧縮」などが含まれます。
「バンドル」は「ビルド」の一工程（または一形態）であ...]]></description><link>https://zenn.dev/illionillion/articles/2025-06-14-tree-shaking-and-side-effect</link><guid isPermaLink="true">https://zenn.dev/illionillion/articles/2025-06-14-tree-shaking-and-side-effect</guid><pubDate>Sun, 15 Jun 2025 13:31:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4rujHP9s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2584%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E5%2589%25AF%25E4%25BD%259C%25E7%2594%25A8%2520%25E3%2583%2584%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258F%25E6%2599%2582%25E3%2581%25A8%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVQMXV1aHVjMjhGSms3b1JxbHdRQ3BQUncyblVUMlp2SWpmYUN0VHhkM1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sei</dc:creator></item><item><title><![CDATA[TypeScriptで 関数型プログラミング x DDD を実現する]]></title><description><![CDATA[本記事はZennの記事投稿コンテスト「TypeScriptでやってみた挑戦・学び・工夫」の参加記事となっています。
https://zenn.dev/contests/contest2025ts

 なぜこのテーマを選んだのか
私は業務でF#という言語を用いて、DDD(ドメイン駆動開発)、関数型プログラミングを実践しています。練度を上げ、 エンジニアとしてステップアップしたい！ と思っています。
そこで最近話題になっていた、「Domain Modeling Made Functional」を読み、関数型プログラミング(F#)とDDDを組み合わせたアプローチを学んだので、「TypeScri...]]></description><link>https://zenn.dev/maaaashi/articles/aea1a85753acf6</link><guid isPermaLink="true">https://zenn.dev/maaaashi/articles/aea1a85753acf6</guid><pubDate>Sun, 15 Jun 2025 11:42:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YKTFlOL2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%2520%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2520x%2520DDD%2520%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2583%25BC%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4OTIwNGNhZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まーしー</dc:creator></item><item><title><![CDATA[ハッシュ関数を TypeScript で学ぶ]]></title><description><![CDATA[
 ハッシュ関数とは
データを要約(digest)したいことがあります。要約言っても「なんかサイズがでかい」とか「赤色の面積が多い画像」とかではありません。データから特定の、指紋のような値を計算したいのです。人間にとっての指紋は、どの人が持つ指紋なのかを特定できる役割があります。それと同じように、データにとっての指紋があると便利なのです。
ハッシュ関数は、あるデータを入力として固定長の値を出力する関数です。入力するデータを平文、その出力のことをハッシュ値と呼びます。ハッシュ値はビット列です。ハッシュ値のサイズは関数のアルゴリズムによって異なります。
例えば Hello World という...]]></description><link>https://zenn.dev/stin/articles/161ebd7d45089b3446ee4e0d86dbcf92</link><guid isPermaLink="true">https://zenn.dev/stin/articles/161ebd7d45089b3446ee4e0d86dbcf92</guid><pubDate>Sun, 15 Jun 2025 08:39:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hlugNiUK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%2520TypeScript%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25A6%25E3%2581%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMTEyZmJmM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すてぃん</dc:creator></item><item><title><![CDATA[TypeScriptのEnumを卒業して型安全性を高める - Union Typeによるリファクタリング]]></title><description><![CDATA[
 はじめに
TypeScript で開発を進める際、定数値の管理にEnumを使用している方もいらっしゃるのではないでしょうか。
しかし、実際のプロダクト開発では、Enum が原因で型安全性が損なわれたり、予期しないバグが発生することがあります。
本記事では、実際に遭遇した Enum の課題と、Union Type を活用した解決方法について紹介します。

 Enum 使用時の課題
Enum を使用していた当初、以下のような問題に遭遇しました。


実行時の型安全性の欠如


予期しない値の混入


また、遭遇はしませんでしたが、Enum のリバースマッピングによる混乱も考慮する必要があ...]]></description><link>https://zenn.dev/shdev/articles/c862aef9320bd8</link><guid isPermaLink="true">https://zenn.dev/shdev/articles/c862aef9320bd8</guid><pubDate>Sun, 15 Jun 2025 08:34:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1M4wEFAh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AEEnum%25E3%2582%2592%25E5%258D%2592%25E6%25A5%25AD%25E3%2581%2597%25E3%2581%25A6%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258B%2520-%2520Union%2520Type%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroki%2520Sugiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhMjI0Mjc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroki Sugiyama</dc:creator></item><item><title><![CDATA[CDKTF使ってみたので感想ですの]]></title><description><![CDATA[CDKTFを使ってみました．
n番煎じですが，やったこと，感想を書きます．

 CDKTFとは
すでにZennに投稿されてる記事の方がわかりやすいと思いますし，自分の理解が誤っている気もするのですが，HCLを直接記述せずに（この記事を書いている時点だと）TypeScript，Python，Java，C#，Goで記述してTerraform経由で各種プロバイダでの構築ができるものです．

 メリット
Terraformを使えるインフラエンジニアやSREなどの専門の人が，プロジェクトや社内にいれば良いですが，いない場合でもソフトウェアエンジニアが馴染みのある言語でインフラ構築もできることだそう...]]></description><link>https://zenn.dev/toratti/articles/e32b86e18fee13</link><guid isPermaLink="true">https://zenn.dev/toratti/articles/e32b86e18fee13</guid><pubDate>Sun, 15 Jun 2025 01:01:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8g7FjNxX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDKTF%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2584%259F%25E6%2583%25B3%25E3%2581%25A7%25E3%2581%2599%25E3%2581%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とらっち</dc:creator></item><item><title><![CDATA[TypeScript で any 型より unknown 型を使うべき理由]]></title><description><![CDATA[TypeScript で型定義がどうにもならないときに、とりあえず any を使ってませんか？any 型は便利な逃げ道ですが型安全性を完全に放棄する危険な選択です。
そこで使いたいのが unknown 型です。同じように「何でも受け入れる」役割を果たしながら、TypeScript の型システムの恩恵を受けることができます。
この記事では、なぜ unknown 型が any 型より優れているのかを、実際のコード例と共に解説します。

 any 型が引き起こす 3 つの問題

 TypeScript の型チェック機能が完全に無効化される
any 型を使うと、TypeScript が型安全性を...]]></description><link>https://zenn.dev/m0t0taka/articles/bc27fa340f1f84</link><guid isPermaLink="true">https://zenn.dev/m0t0taka/articles/bc27fa340f1f84</guid><pubDate>Sun, 15 Jun 2025 00:55:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rOb9gZnh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520any%2520%25E5%259E%258B%25E3%2582%2588%25E3%2582%258A%2520unknown%2520%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25B9%25E3%2581%258D%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258E%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxZTJhNzliZWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぎー</dc:creator></item><item><title><![CDATA[ReactとTypeScriptでコールバック関数を理解しよう]]></title><description><![CDATA[
みなさんこんにちは。
最近はTypeScriptとReactを使ったフロントエンドのコードを書くことが増えてきました。まだまだ初学者なのですが、何かを調べていると「コールバック関数」という言葉をよく目にします。意味が曖昧なままだったので、この機会に整理して覚えようと思います。
最初は、async/awaitやuseMemo、useCallbackを使う場面でよく耳にする印象でした。


 コールバック関数とは

コールバック関数は、引数として他の関数に渡され、その関数の中で必要に応じて呼び出される関数です。呼び出されるタイミングは関数の処理の途中や後、あるいは非同期イベントが発生した時...]]></description><link>https://zenn.dev/sho0226/articles/1d93c7ee8a0ac3</link><guid isPermaLink="true">https://zenn.dev/sho0226/articles/1d93c7ee8a0ac3</guid><pubDate>Sat, 14 Jun 2025 19:13:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y4HBnwyg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8TypeScript%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzM2Y4ZjVhN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょう</dc:creator></item><item><title><![CDATA[AI SDKでLLMの出力の型を制御する]]></title><description><![CDATA[この記事ではVercelのAI SDKを利用して，LLMの出力を制御する方法を紹介します．

 AI SDKとは
AI SDKはVercelが提供しているツールキットで，TypeScriptでAIを活用したアプリケーションを作成するための様々な機能を含んでいます．
その特徴として，例えば，

OpenAIやAnthropic，Grokなど様々なLLMモデルについて統一的な取り扱いを可能にしている
型安全で構造化された出力管理を可能にする
マルチモーダルに対応している
外部APIや関数をLLMから呼び出すことが可能になっている

などの点が挙げられます．
ここでは特に，型安全な出力が得られ...]]></description><link>https://zenn.dev/hiromu_ushihara/articles/ec09e502c85895</link><guid isPermaLink="true">https://zenn.dev/hiromu_ushihara/articles/ec09e502c85895</guid><pubDate>Sat, 14 Jun 2025 17:41:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pQgIAa9U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%2520SDK%25E3%2581%25A7LLM%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hir%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0k0aEMzQ3pUejlLY215RDVDV3FBUTRNNnkxbnhRTHVvcnVHVlpmRzR0YnlvUFVBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hir</dc:creator></item><item><title><![CDATA[Reactの書き方について思ったこと]]></title><description><![CDATA[
 はじめに
先日公開した「君たちはReactをどうやってRuby on Railsに載せるべきか？」の中で、ReactをRailsに載せるモダンな最適解はReact Router SPA modeを使うことだろうという話をしました。
これをより簡単にするためにreact_router_rails_spa gemも用意し、さらにデモも用意しました(rrrails.castle104.com)。
このデモを作りながら、「そもそもReactってどうやって書くべきなんだろう？」 について色々考えたので、ここで簡単に紹介したいと思います。

ページ指向APIとテーブル指向APIについて
Reac...]]></description><link>https://zenn.dev/naofumik/articles/05c62dd87721da</link><guid isPermaLink="true">https://zenn.dev/naofumik/articles/05c62dd87721da</guid><pubDate>Sat, 14 Jun 2025 17:04:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n8htqmJP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naofumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2REcDFoU0toZ2VzbmhuSl9mQmNyYU1vNnR1dHJrWUYyY3hld2JGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naofumi</dc:creator></item><item><title><![CDATA[React・Next.js・TypeScriptのキャッチアップのために、荒唐無稽なリモート理由を診断してくれるアプリを作成しました。]]></title><description><![CDATA[
 始めに
リモートワーク、それは昨今のWebエンジニアにとって、切っても切り離せないだろう。
リモートワークに関して、人によって考え方もバラバラだ。
それなのに、最近リモートワークを否定する企業も多くなった。
推進派だろうと、否定派だろうと、
それでもリモートワークは、
エンジニアにとって1つの手段であるはずだ。
だから、1つの対抗策として、このアプリを作成した。
https://remote-diagnosis-app.vercel.app/
このアプリはそれっぽいリモート理由を診断してくれる
後はその理由を、Slack等で上司に連絡するだけだ。
これで、後は自由気儘なリモートワーク...]]></description><link>https://zenn.dev/hiiragi/articles/create_remote-diagnosis-app</link><guid isPermaLink="true">https://zenn.dev/hiiragi/articles/create_remote-diagnosis-app</guid><pubDate>Sat, 14 Jun 2025 13:55:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AINEc_hH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2583%25BBNext.js%25E3%2583%25BBTypeScript%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2580%2581%25E8%258D%2592%25E5%2594%2590%25E7%2584%25A1%25E7%25A8%25BD%25E3%2581%25AA%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E7%2590%2586%25E7%2594%25B1%25E3%2582%2592%25E8%25A8%25BA%25E6%2596%25AD%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25A2...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259F%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlNTNhZjcxZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>柊</dc:creator></item><item><title><![CDATA[n8nをCloud Runにサクッと（Supabase x Pulumi）]]></title><description><![CDATA[この記事では、オープンソースのワークフロー自動化ツール「n8n」を、GCPのサーバーレス環境であるCloud Runにサクッとデプロイする方法を紹介します。
データベースにはSupabase、IaCツールにはPulumiを使っていきます。

 はじめに
最近、個人的にn8nをよく触っています。
これ、プログラミングが苦手な自分みたいな奴でも、ノードを繋いでいくだけで本格的な自動化ワークフローが作れちゃう優れものなんです。
このn8nはセルフホスト用にDockerイメージが公式から提供されているので、「これ、どこかのサーバーレス環境にサクッとデプロイできたらもっと便利だな」と考えました。
...]]></description><link>https://zenn.dev/sonicmoov/articles/1308fd9ce78555</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/1308fd9ce78555</guid><pubDate>Sat, 14 Jun 2025 13:23:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LvUeU-xo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:n8n%25E3%2582%2592Cloud%2520Run%25E3%2581%25AB%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25EF%25BC%2588Supabase%2520x%2520Pulumi%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takemo101%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDBmZGFmNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takemo101</dc:creator></item><item><title><![CDATA[Mastraで作ったAIサービスを実運用する上で困った点]]></title><description><![CDATA[
 はじめに
Mastraを使うと、簡単にLLMをつなげたWorkflowや各種Toolsを連携したAgentを作る事ができます。ドキュメントも充実しており、ドキュメントを参照するMCPサーバも提供されているので、簡単にそれっぽいものが作れてします。最高！
一方で、動作させるだけではなくデプロイメント、テスト、LLMの出力の品質など、サービスを実運用する上では困った事がたくさんあったので、今回はその内容と自分が行った対策についてまとめようと思います！

 成果物
本題の説明をわかりやすくするために、まずはMastraで作った成果物を共有します。サービスは以下のようなLINE BOTで２つ...]]></description><link>https://zenn.dev/k_koheyi/articles/07429bdfd47eaf</link><guid isPermaLink="true">https://zenn.dev/k_koheyi/articles/07429bdfd47eaf</guid><pubDate>Sat, 14 Jun 2025 11:59:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_e5VHDlR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAI%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E5%25AE%259F%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E4%25B8%258A%25E3%2581%25A7%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k_kohey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZjVlNTJmMDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k_kohey</dc:creator></item><item><title><![CDATA[Saas開発に使用した技術スタック(初期バージョン)]]></title><description><![CDATA[
 開発したSaas
私は先日以下のSaasを開発し、デモ版のリリースを行いました。
https://top.sophina.biz
このSaasはソフトウェア開発現場(主にアジャイル開発)のおいて

エンジニアによる人的ミスの削減
仕様のすれ違いの削減
進捗の把握ミスの削減
要件をタスク(チケット)に落とし込む時間の削減
新規プロジェクトメンバーが管理に慣れるまでの時間削減

を行い、素早い開発サイクルを実現させることのできるサービスです。
今現在クローズトベータの参加者を募集しております。
参加していただいた方には

ユーザーコミュニティへの招待
特別プランのご紹介

をさせていただ...]]></description><link>https://zenn.dev/asahi_tech_dev/articles/24eb9348299595</link><guid isPermaLink="true">https://zenn.dev/asahi_tech_dev/articles/24eb9348299595</guid><pubDate>Sat, 14 Jun 2025 11:58:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bGuHpAO0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Saas%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2528%25E5%2588%259D%25E6%259C%259F%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Asahi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGlPanJya2dDMFB4anhhaWVaU0JCY1pVdk4wTHpDeWZHOERfRlRaeDZBLXpRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Asahi</dc:creator></item></channel></rss>