<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 13 Jul 2025 03:20:26 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[MCP ServerをPostmanでサクッとテストする（CloudRun x Pulumi x FastMCP）]]></title><description><![CDATA[
 はじめに
主要なAPI開発プラットフォームであるPostman に MCP (Model Context Protocol) サーバーをテストする機能が追加されました。これにより、自作のMCPサーバーの動作確認が格段に手軽になっています。
この記事では、Zennの記事を取得する簡単なMCPサーバーをFastMCPで作成し、Google Cloud Runにデプロイ、そしてPostmanでテストするまでの一連の流れをハンズオン形式で解説します。インフラの構築にはPulumiを使用し、IaC (Infrastructure as Code) を実践していきます。
今回作成したリポジトリは...]]></description><link>https://zenn.dev/sonicmoov/articles/5654926a8ff2f2</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/5654926a8ff2f2</guid><pubDate>Sun, 13 Jul 2025 03:07:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U1Y7U4PV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520Server%25E3%2582%2592Postman%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588CloudRun%2520x%2520Pulumi%2520x%2520FastMCP%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takemo101%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDBmZGFmNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takemo101</dc:creator></item><item><title><![CDATA[Go言語とTypeScriptで学ぶ重複除去アルゴリズム完全ガイド]]></title><description><![CDATA[
 はじめに
配列やスライスから重複要素を除去する処理は、プログラミングにおいて非常によく使われる基本的なアルゴリズムです。本記事では、Go言語とTypeScriptを使って重複除去の実装方法を詳しく解説し、両言語の特徴や違いについても学んでいきます。
重複除去問題を通じて、効率的なアルゴリズムの考え方と実装のベストプラクティスを身につけることができます。

 問題設定
以下の要件を満たす関数を実装してみましょう。
要件：

入力：整数のスライス/配列
出力：重複を除去した整数のスライス/配列（元の順序を保持）
例：[1, 2, 2, 3, 1, 4] → [1, 2, 3, 4]


...]]></description><link>https://zenn.dev/tkm_mkzk/articles/64d533a519a8f8</link><guid isPermaLink="true">https://zenn.dev/tkm_mkzk/articles/64d533a519a8f8</guid><pubDate>Sun, 13 Jul 2025 01:36:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mhDp_Jaa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A8TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E9%2587%258D%25E8%25A4%2587%25E9%2599%25A4%25E5%258E%25BB%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2582%25AB%25E3%2583%2585%25E3%2582%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNHVtSFhENC0tMVhkWG04Z1JZRGFQdVJnUWZWTEs3LWY1aVNETDA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミカヅキ</dc:creator></item><item><title><![CDATA[TypeScriptで学ぶデザインパターン：Factory Methodパターン]]></title><description><![CDATA[
 はじめに
デザインパターンは、ソフトウェア設計において繰り返し発生する問題に対する解決策のテンプレートです。今回はその中でも特に有用な「Factory Methodパターン」をTypeScriptで実装しながら解説します。

 Factory Methodパターンとは
Factory Methodパターンは、オブジェクトの生成をサブクラスに委ねることで、クライアントコードと具象クラスの結合を緩和する創造的なデザインパターンです。

 基本的な実装
まずはシンプルな例から見ていきましょう。
abstract class Creator {
  public abstract facto...]]></description><link>https://zenn.dev/maronekadasper/articles/b3cb331da4147b</link><guid isPermaLink="true">https://zenn.dev/maronekadasper/articles/b3cb331da4147b</guid><pubDate>Sat, 12 Jul 2025 17:37:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1blOW1Bb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25EF%25BC%259AFactory%2520Method%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODJiMGQyYzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mk</dc:creator></item><item><title><![CDATA[bun + typescript + Koyeb でDiscord bot作成]]></title><description><![CDATA[bun + typescript + Koyebで簡単なdiscord botを作成しました
「すみそー！」に反応して「すみそー！」を返します

すみそー！
sumisoなので「すみそー！」と鳴きます。sumisoなので。
https://github.com/sumisoc0db8c/e8dbcd-discord-bot/tree/zenn公開

 構成
node.jsより爆速のall-in-one toolkitであるbunを使用しました
とくに設定せずにそのままtypescriptが利用できます
https://bun.sh/
デプロイ先はKoyeb
無料で構築可能です
しかし無料...]]></description><link>https://zenn.dev/sumiso_c0db8c/articles/2b81d96fd48606</link><guid isPermaLink="true">https://zenn.dev/sumiso_c0db8c/articles/2b81d96fd48606</guid><pubDate>Sat, 12 Jul 2025 11:16:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qz3m7nKj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:bun%2520%252B%2520typescript%2520%252B%2520Koyeb%2520%25E3%2581%25A7Discord%2520bot%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumiso_c0db8c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTF6aUQtcjdoeWs1RDJBSUJqcTVJQWZCSENWRFIzSG1kTXFmS0Q5eXVxdm9VRGMxYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumiso_c0db8c</dc:creator></item><item><title><![CDATA[【やばい】kintoneにHash RouterでReact SPAを注入したら自在にルーティングできた件]]></title><description><![CDATA[
 いいからこれを見ろ

!?!?!?!?!?!?!?!!??!?!?!?!?!?!?!!??!?!?!?!?!?!?!?

 はじめに
私は士業の事務所でkintone周りを担当しているただの事務員（元）です。
こう言うのとか作ってます（宣伝）
https://zenn.dev/parmenion/articles/798b649c235d24
kintoneではReact RouterのBrowser Routerが利用できず、せいぜいペライチのルーティング等が全くないページを貼り付ける程度のカスタマイズをしていました。
しかし、もしkintoneでReact Routerが利用でき...]]></description><link>https://zenn.dev/parmenion/articles/0ef87548e605e1</link><guid isPermaLink="true">https://zenn.dev/parmenion/articles/0ef87548e605e1</guid><pubDate>Sat, 12 Jul 2025 08:58:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7V0_rq----/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%2584%25E3%2581%25B0%25E3%2581%2584%25E3%2580%2591kintone%25E3%2581%25ABHash%2520Router%25E3%2581%25A7React%2520SPA%25E3%2582%2592%25E6%25B3%25A8%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E8%2587%25AA%25E5%259C%25A8%25E3%2581%25AB%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2591%25E3%2583%25AB%25E3%2583%25A1%25E3%2583%258B%25E3%2582%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzdjMDBhZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>パルメニオン</dc:creator></item><item><title><![CDATA[【ハンズオン】React Native + Supabaseで作る！認証付きTodoアプリ開発入門]]></title><description><![CDATA[
 はじめに
React Nativeの学習を始めたいけれど、何から作れば良いか分からない...。そんなあなたのために、モダンなバックエンドサービス Supabase を利用した「認証付きTodoアプリ」の開発手順を、ゼロから丁寧に解説します。
この記事を終える頃には、あなたは認証機能とデータベースを連携させた、本格的なクロスプラットフォームアプリの作り方をマスターしているでしょう。

 この記事で作るもの


認証機能: メールアドレスとパスワードでのサインアップ＆ログイン

Todo管理: ログインユーザーに紐づいたTodoの登録・一覧表示・更新・削除 (CRUD)

リアルタイム更...]]></description><link>https://zenn.dev/makiinfra/articles/a3b1c2d0e9f8a7</link><guid isPermaLink="true">https://zenn.dev/makiinfra/articles/a3b1c2d0e9f8a7</guid><pubDate>Sat, 12 Jul 2025 05:06:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4mmCXj0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E3%2580%2591React%2520Native%2520%252B%2520Supabase%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2581%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258DTodo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%258D%25E3%2581%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwNTY5MTk2ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まきの</dc:creator></item><item><title><![CDATA[AWS CDK S3静的ウェブサイトホスティング構築 TypeScript]]></title><description><![CDATA[
 はじめに
AWS CDKの学習をするためにAWSの基礎的なサービスを使用した構築を実践してみることにしました。
今回はAmazon S3の静的ウェブサイトホスティング機能を使用してhtmlページを公開します。
https://aws.amazon.com/jp/s3/

 環境
OS：Windows11
IDE：VScode
リポジトリ：GitHub

 構築

 GitHubリポジトリの作成
※コードをリモートリポジトリで管理しない場合は本手順を飛ばしてかまいません。
前準備としてgitのインストールやGitHubアカウントの作成などが必要です。
https://zenn.dev/...]]></description><link>https://zenn.dev/michinoku/articles/42c45f187ac06b</link><guid isPermaLink="true">https://zenn.dev/michinoku/articles/42c45f187ac06b</guid><pubDate>Fri, 11 Jul 2025 12:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cndaX8qB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520S3%25E9%259D%2599%25E7%259A%2584%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E6%25A7%258B%25E7%25AF%2589%2520TypeScript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%25A1%25E3%2581%25AE%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZjFlMGFjYmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みちのく</dc:creator></item><item><title><![CDATA[Supergatewayでstdio MCPサーバーをHTTP/SSEに変換する]]></title><description><![CDATA[本記事では、stdioベースのMCPサーバーを、Supergatewayを用いてHTTP(SSE)通信に対応させる手法を紹介します。MCPサーバーをGCPやCloud Run上にデプロイすることを想定した構成例を示しながら、Supergateway導入のメリット・具体的なDocker構成・クライアント接続方法まで一通りカバーします。

 モチベーション
MCPサーバーはトランスポート層としてstdio transportとStreamable HTTP transportがサポートされています。[1]
MCPサーバーをコンテナ等にデプロイして一般公開したい場合や、認証機能を追加してセキュ...]]></description><link>https://zenn.dev/yuarth/articles/0ef5140be20b8f</link><guid isPermaLink="true">https://zenn.dev/yuarth/articles/0ef5140be20b8f</guid><pubDate>Fri, 11 Jul 2025 09:58:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j_Y678Ip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supergateway%25E3%2581%25A7stdio%2520MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592HTTP%252FSSE%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuarth%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhZGMwMWJlNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuarth</dc:creator></item><item><title><![CDATA[【4: 安全】Mastra.ai の安全性調査レポート]]></title><description><![CDATA[
 【4: 安全】Mastra.ai の安全性調査レポート

対象AIサービス: Mastra.ai TypeScript AIエージェントフレームワーク
公式URL: https://mastra.ai/

安全性レベル: 4（安全） - セルフホスト版を推奨


 エグゼクティブ・サマリー
法務判定：導入可（セルフホスト版推奨）+ 技術的優位性を評価
技術判定：TypeScript生態系における先進的なフレームワーク、真のオープンソース性を確認
厚黒学的リスク：軽微（18項目中4項目のみ該当）
地政学的リスク：低（米国企業、元Gatsby創設者チーム）
最終判定理由：完全セルフホスト...]]></description><link>https://zenn.dev/n_hiraoka/articles/zenn-mastra-250708</link><guid isPermaLink="true">https://zenn.dev/n_hiraoka/articles/zenn-mastra-250708</guid><pubDate>Fri, 11 Jul 2025 04:37:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7FBfnJ4q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25904%253A%2520%25E5%25AE%2589%25E5%2585%25A8%25E3%2580%2591Mastra.ai%2520%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E8%25AA%25BF%25E6%259F%25BB%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B3%25E5%25B2%25A1%25E6%2586%25B2%25E4%25BA%25BA%25EF%25BC%2588Norito%2520Hiraoka%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHRVNXl0b2x2dllDWldiUzFXckFReldJem9aM0otcVB3SEhvZ2E2TjVjUFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>平岡憲人（Norito Hiraoka）</dc:creator></item><item><title><![CDATA[判定式をいい感じに関数化して再利用、合成可能にしたい！]]></title><description><![CDATA[
 はじめに
プログラムの制御フローの最小単位ともいえる「条件分岐」、そしてこれを駆動させるのが「判定式」(str === ""やnum &gt; 0など)。これは多くの場合、例示したような単純な比較ロジックであり、それゆえにベタ書きしがちです。しかし、こういうプリミティブで重要なロジックだからこそ関数化して再利用を促進すると、より柔軟で堅牢な実装ができるんじゃないかと最近思っています。

 判定式をどう関数化するか
例えば以下のような判定式があったとして、それらを単純に関数化するとこんな感じになるんじゃないかと思います。

str === ""
user.age &gt; 18
x =...]]></description><link>https://zenn.dev/ispec_inc/articles/e11b6a21a25132</link><guid isPermaLink="true">https://zenn.dev/ispec_inc/articles/e11b6a21a25132</guid><pubDate>Fri, 11 Jul 2025 03:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ra1m0J_4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%25A4%25E5%25AE%259A%25E5%25BC%258F%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E5%2586%258D%25E5%2588%25A9%25E7%2594%25A8%25E3%2580%2581%25E5%2590%2588%25E6%2588%2590%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:s.kato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmN2Y5YzE4ZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ispec%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlOTEwZDc3Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s.kato</dc:creator></item><item><title><![CDATA[もう「JavaScript」って名前やめない？]]></title><description><![CDATA[TypeScriptがある現代において、JavaScriptはもはや凡人が書くべきものではなくなっています。プロジェクト内のJavaScriptはTypeScriptで置き換えられ、「TS」もしくは「DT」バッジのないnpmパッケージは白い目で見られ、TypeScriptをそのまま実行できるDenoやBunが登場し、Node.jsにすらTypeScriptの大部分の構文のサポートが入り、⸺そういう時代です。
生JavaScriptを書くのをやめるだけでなく、JavaScriptの名前を出すこと自体をやめ、代わりにTypeScriptと呼びませんか。実行時の挙動の話であってもです。Type...]]></description><link>https://zenn.dev/yuhr/articles/8014536d20d4f9</link><guid isPermaLink="true">https://zenn.dev/yuhr/articles/8014536d20d4f9</guid><pubDate>Fri, 11 Jul 2025 03:11:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u4r0ldhH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%2586%25E3%2580%258CJavaScript%25E3%2580%258D%25E3%2581%25A3%25E3%2581%25A6%25E5%2590%258D%25E5%2589%258D%25E3%2582%2584%25E3%2582%2581%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuhr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l2U2lnclBGSkhIOTRLRnhjWDk1d3Z1d3pMZnVKc091MUI4Nkg2PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuhr</dc:creator></item><item><title><![CDATA[実務未経験コーダーからフロントエンドエンジニアに挑戦している話]]></title><description><![CDATA[
 なぜこの記事を書いたか
zennやQiitaの記事を見ると実務未経験からエンジニアになった人は多いけど 現在進行系で目指してる人の記事はあまり見つからなかったのでそういう人の参考になったり、繋がったりできたらいいなと思ったのでこの記事を書きました。

 私の経歴
工業高校 電気科卒
デザイン系専門学校 WEB専攻卒
新卒でWEBで制作会社のスタートアップにコーダーとして入社
(スキルは デザイン力少し,HTML,CSS,JSが読める程度,CMSも少し)
会社の意向でフロントエンドエンジニアになるため学習中 ←なう
特に特別な資格を持っているわけでもなく特別な能力があるわけでもないごく...]]></description><link>https://zenn.dev/imaihayato/articles/b480b78d35103c</link><guid isPermaLink="true">https://zenn.dev/imaihayato/articles/b480b78d35103c</guid><pubDate>Fri, 11 Jul 2025 00:35:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--imP875kx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E6%259C%25AA%25E7%25B5%258C%25E9%25A8%2593%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2581%258B%25E3%2582%2589%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2596%25B0%25E5%258D%2592%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmZWQzZDVmMGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>新卒エンジニア</dc:creator></item><item><title><![CDATA[[Nuxt.js] SPAで起こるリビジョンのズレ問題とその解決方法]]></title><description><![CDATA[
 はじめに
現在、Nuxt.jsを使ってSPA（Single Page Application）としてフロントエンドを構築しています。その中で、ユーザーが長時間アプリを開いたままにすることで発生する「リビジョンの不整合」問題に直面しました。この記事では、その問題の背景と、実際に導入した対策について紹介します。


 🐛 なぜリビジョンの不整合が起こるのか？
SPA（Single Page Application）では、初回アクセス時に1つのHTMLと、JavaScriptやCSSなどの静的ファイルが読み込まれます。その後はページ遷移しても画面全体が再読み込みされることはなく、クライアン...]]></description><link>https://zenn.dev/ota_rg/articles/63425bd8361b84</link><guid isPermaLink="true">https://zenn.dev/ota_rg/articles/63425bd8361b84</guid><pubDate>Thu, 10 Jul 2025 22:03:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i8HoriiL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNuxt.js%255D%2520SPA%25E3%2581%25A7%25E8%25B5%25B7%25E3%2581%2593%25E3%2582%258B%25E3%2583%25AA%25E3%2583%2593%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25BA%25E3%2583%25AC%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JoMmNKTGROM2VuNFFWSFFPR09IeW1EMnZuMy1lanJZMmNWUE9aPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takumi</dc:creator></item><item><title><![CDATA[application/json-seq 対応の ストリーム を作成したので json-seq-stream として公開しました。]]></title><description><![CDATA[
 application/json-seq
皆さんは RFC7464 ... JavaScript Object Notation (JSON) Text Sequences は知っておられますでしょうか？ mime-type だと application/json-seq です。
原文はここ
https://datatracker.ietf.org/doc/html/rfc7464
日本語訳はここ
https://tex2e.github.io/rfc-translater/html/rfc7464.html
で、これ 何が嬉しいかというと JSON の配列だと シリアライザーが有限...]]></description><link>https://zenn.dev/juners/articles/3f87ebd8e22bae</link><guid isPermaLink="true">https://zenn.dev/juners/articles/3f87ebd8e22bae</guid><pubDate>Thu, 10 Jul 2025 15:08:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ncJznX8F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:application%252Fjson-seq%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%2520%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A0%2520%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%2520json-seq-stream%2520%25E3%2581%25A8%25E3%2581%2597...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[TypeScriptで学ぶヘキサゴナルアーキテクチャ 〜リファクタリング実践記〜]]></title><description><![CDATA[
 1. はじめに
書籍 単体テストの考え方/使い方 を読みました。
この書籍の内容が非常に参考になったので、この書籍に書かれている考え方を実践したくなりました。
そこで、TypeScriptでサンプルコードを作成し、ヘキサゴナルアーキテクチャを意識したリファクタリングを行うことにしました。
この記事では、本リファクタリングを通じて、ヘキサゴナルアーキテクチャの理解を深めることを目的としています。

 2. サンプルコードの概要
サンプルコードは、動物の鳴き声を判定するアプリケーションです。
下記内容をインプットにして GitHub Copilot に初期実装を生成してもらいました。
m...]]></description><link>https://zenn.dev/ko_uema2/articles/449928e7b9095a</link><guid isPermaLink="true">https://zenn.dev/ko_uema2/articles/449928e7b9095a</guid><pubDate>Thu, 10 Jul 2025 15:07:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VvBBPoj8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2598%25E3%2582%25AD%25E3%2582%25B5%25E3%2582%25B4%25E3%2583%258A%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%2520%25E3%2580%259C%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E5%25AE%259F%25E8%25B7%25B5%25E8%25A8%2598%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%25A4%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkFFWXN0a1UtbWo0UWF6Y2RDcGpxMUhEZFlxb0RrcHp6cVUzT29iTUdsb3Vnaj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まっつー</dc:creator></item><item><title><![CDATA[Aprender社で主に使用しているWebフロントエンドライブラリ紹介]]></title><description><![CDATA[
 はじめに
!
本記事は投稿当時（2025 年 7 月時点）の情報となります。今後追記・変更の可能性があります。

Aprender 社（以下、当社）に入社後、 Web フロントエンド開発に携わる中で、今まで実務での使用経験がなかったライブラリに触れる機会が多くなりました。
個人的に実務で使用している技術スタックを整理していく中で、それぞれの選定理由や実際の使用感について知見が蓄積されたため、今回記事として共有します。
バックエンドやモバイル開発についてはまだ経験が浅いため、今回は Web フロントエンドに焦点を当てて紹介します！

 おおまかなライブラリ構成
現時点（2025 年 7...]]></description><link>https://zenn.dev/aprender/articles/9f8c3e435f7d8e</link><guid isPermaLink="true">https://zenn.dev/aprender/articles/9f8c3e435f7d8e</guid><pubDate>Thu, 10 Jul 2025 06:06:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VpsnzBA0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Aprender%25E7%25A4%25BE%25E3%2581%25A7%25E4%25B8%25BB%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BWeb%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:miruo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNWYyNmY1YjUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aprender%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5YjI2YzljOGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miruo</dc:creator></item><item><title><![CDATA[SRP認証クライアントの実装と備忘メモ]]></title><description><![CDATA[
ユーザー認証について検討した時に、暗号化されていない通信路を介してでもユーザ名とパスワードを使って認証可能なSRP(Secure Remote Password)プロトコルがあることを知りました。AWS Cognito等でも利用できるらしく良さそうだと思ったので何番煎じなのかはわかりませんが内容を理解すべく自分でTypeScriptのライブラリを作成しました。有名なSRPにはSRP-3とSRP-6aがあるようですが、SRP-6aを実装しています。実装を通じて理解したSRP認証の流れのポイントを備忘メモとして残しておきます。

 成果物
https://github.com/scirex...]]></description><link>https://zenn.dev/scirexs/articles/c79c9477e7dae6</link><guid isPermaLink="true">https://zenn.dev/scirexs/articles/c79c9477e7dae6</guid><pubDate>Wed, 09 Jul 2025 21:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vezC6mRg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SRP%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E5%2582%2599%25E5%25BF%2598%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:scirexs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BiazJHVGtaaklCQV9TTzVGSW55bVU0TFNuaGtlanZ3aW15OUhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>scirexs</dc:creator></item><item><title><![CDATA[TypeScriptで「今は使わない変数」を退避するスマートな方法]]></title><description><![CDATA[
 はじめに
TypeScriptで開発していると、こんな状況に出くわすことはありませんか？

変数は定義したけど、今はまだ使わない。でも将来的に使う予定がある。
でもそのままだと、未使用の変数エラーが出てしまう…。

特に、TypeScript + ESLint環境では、no-unused-varsルールに引っかかってしまいます。コメントアウトしても関連コードが消えてしまうし、無意味にログ出力するのもイマイチ。
この記事では、「一時的に使わない変数」を安全かつ明示的に退避する方法として、_unused 関数を使ったベストプラクティスをご紹介します。

 よくあるNG例
const fo...]]></description><link>https://zenn.dev/oharu121/articles/1cf19eca4a0a19</link><guid isPermaLink="true">https://zenn.dev/oharu121/articles/1cf19eca4a0a19</guid><pubDate>Wed, 09 Jul 2025 15:45:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JLuprU6O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2580%258C%25E4%25BB%258A%25E3%2581%25AF%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25E5%25A4%2589%25E6%2595%25B0%25E3%2580%258D%25E3%2582%2592%25E9%2580%2580%25E9%2581%25BF%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O%2520Haru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdQdmFwaGptVTIwMkxrb29lbU5jcDFRREdnRU40NE5RVTB5U0VKdHBqUUJWSjNQMFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O Haru</dc:creator></item><item><title><![CDATA[TypescriptでPartial型オブジェクトを引数に使う時は気をつけよう！]]></title><description><![CDATA[本日は弊社でprismaをラップして使用している時に起きたインシデントについて皆様にお話しします。
自社への教訓も兼ねまして、皆様への注意喚起になればと思い記事にしました。

 危険なケーススタディ

 Partial型オブジェクトの引数は制約を一つでも満たすとWidened Typeを受け入れる
弊社サービスでは以下のように、ユーザーに運営側からデータを付与できる関数が存在していました。
async function presentItems(args: {
  accountId: string
  where?: Prisma.ItemWhereInput
}) {
    con...]]></description><link>https://zenn.dev/mochicorp/articles/ddad3fb1efd43b</link><guid isPermaLink="true">https://zenn.dev/mochicorp/articles/ddad3fb1efd43b</guid><pubDate>Wed, 09 Jul 2025 14:56:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fTEMDqOj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%25E3%2581%25A7Partial%25E5%259E%258B%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AF%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tkow%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4YjcwYTQyYzQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEMOCHI%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyZmViZjFiZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkow</dc:creator></item><item><title><![CDATA[プロダクト事前予約アプリ:Next.js + SendGridを使用したメール送信入門]]></title><description><![CDATA[## 概要
このプロジェクトでは、架空の新サービス「もくもく React」の事前予約サイトを構築します。  ユーザーが事前予約を行うと、予約確認メールが自動送信され、管理者にも通知が届くようにします。
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/pre-launch-app</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/pre-launch-app</guid><pubDate>Wed, 09 Jul 2025 10:17:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DpFjcshp--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lZjhjYmVjNThmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item></channel></rss>