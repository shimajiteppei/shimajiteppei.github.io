<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 28 Aug 2025 04:46:38 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Python＋Streamlitで属性別価格感度を可視化 - Van Westendorp PSM分析 #2]]></title><description><![CDATA[
 📌はじめに
前回はこの手法を、価格に対する消費者の主観的な受容範囲を可視化するVan Westendorp分析を紹介しました。
しかし、年齢や価値観、購買スタイルによって、適正価格の感覚は人によって異なることが予想されます。
そこで本記事では、Van Westendorp分析を 属性に基づきグループを分けて実施し、
ターゲット別の価格感度を可視化する方法 を紹介します。
前回のおさらい：Van Westendorpとは❓
Van Westendorp Price Sensitivity Meter（PSM分析）は、
価格に対する消費者の受け止め方を可視化するための手法です。
消費者に...]]></description><link>https://zenn.dev/swatchp/articles/5081b0a081728d</link><guid isPermaLink="true">https://zenn.dev/swatchp/articles/5081b0a081728d</guid><pubDate>Thu, 28 Aug 2025 04:16:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BZqaVz8U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25EF%25BC%258BStreamlit%25E3%2581%25A7%25E5%25B1%259E%25E6%2580%25A7%25E5%2588%25A5%25E4%25BE%25A1%25E6%25A0%25BC%25E6%2584%259F%25E5%25BA%25A6%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2520-%2520Van%2520Westendorp%2520PSM%25E5%2588%2586%25E6%259E%2590%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Swatch-p%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YTg2ZTBmZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Swatch-p</dc:creator></item><item><title><![CDATA[Pythonの型ヒントについて初心者が知るべきことを解説する]]></title><description><![CDATA[
 はじめに
初投稿にしては渋い内容だが、Pythonの型ヒントについて解説したい。
例えば、あなたが新たにプロジェクトにアサインされたとて、この関数を見て、すぐに正しく使えるだろうか？
def authenticate_user(credentials, token):
・credentialsって何？ユーザー名とパスワードの辞書？特定のクラスのオブジェクト
・tokenって文字列？それとも何かのオブジェクト？
・戻り値は何が返ってくるの？True/False？ユーザー情報？
こういった疑問が湧いてくるはずだ。
Pythonは動的型付け言語であり、コードが大規模になるにつれて「この変数...]]></description><link>https://zenn.dev/start_code/articles/1285ec02f18476</link><guid isPermaLink="true">https://zenn.dev/start_code/articles/1285ec02f18476</guid><pubDate>Thu, 28 Aug 2025 03:48:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XxQBBjUx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E7%259F%25A5%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25EF%25BC%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%2580%25E6%259D%25BE%25E6%259C%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0MmZkYjQ1NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株）スタートコード　松本</dc:creator></item><item><title><![CDATA[PythonのTypedDictとクラスの使い分け]]></title><description><![CDATA[
 はじめに
Pythonで型ヒントを活用する中で、データ構造を定義する方法としてTypedDictとクラス（特にdataclasses）は頻繁に利用されます。両者は似た目的で使えますが、その背景にある設計思想や適したユースケースは異なります。
私自身、どちらを使うべきか迷う場面が多々ありました。この記事では、TypedDictとクラスのそれぞれの特徴を整理し、どのような基準で使い分けるべきか、具体的なコード例を交えながら解説します。

 TypedDictとは
TypedDictは、typingモジュールで提供される機能で、辞書（dict）のキーとその値の型を静的に検査するために使われ...]]></description><link>https://zenn.dev/kromiii/articles/c909fb1528a008</link><guid isPermaLink="true">https://zenn.dev/kromiii/articles/c909fb1528a008</guid><pubDate>Wed, 27 Aug 2025 23:41:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xj1iKcWv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AETypedDict%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroyuki%2520Kuromiya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4ZWM5ZDUwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroyuki Kuromiya</dc:creator></item><item><title><![CDATA[ChatGPTを使ってRustで新しいプログラミング言語をつくり始めた話（if分岐）]]></title><description><![CDATA[
 前回までのおさらい
前回はPyroに「変数定義」を導入しました。
letprというPyro独自の構文をRustのletに変換できるようにし、変数を使ったプログラムを書けるようにしました。
letpr x = 10
print(x)

 今回のテーマ: if分岐
次の一歩として、if分岐を実装しました。
Pyroでは「数値が0以外なら真」というルールで判定しています。
例：
letpr x = 10
if x {
    print("x は 0 以外です")
} else {
    print("x は 0 です")
}

 実装のポイント

AST (Stmt) に If を追加...]]></description><link>https://zenn.dev/collabostyle/articles/4f8776681b3bcb</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/4f8776681b3bcb</guid><pubDate>Wed, 27 Aug 2025 23:34:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JRYQrlgG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Rust%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%25E8%25A9%25B1%25EF%25BC%2588if%25E5%2588%2586%25E5%25B2%2590%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2594%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[遅ればせ: linter/formatter理解メモ]]></title><description><![CDATA[リンターとフォーマッタの違いについて、、理解が進んだのでメモ。
超恥ずかしいことに、あんまり具体的にイメージできずエンジニア6年間やってました。
Python環境での整理です。

 リンター
「その書き方だと動かない可能性がある」とか「ルール違反してるコードがある」とかを
動かす前にチェックする。
if文書きすぎてネストが深くなりすぎてるよ〜〜とかをチェックするのもこっち。
これらを「静的解析」って言うらしいけど、「静的解析」っていう単語が直感的じゃなくてよくわかんないのであんまり好きではない...
例えばこんなことをする⇩

未使用のimport削除
import並び替え
不要な変数削...]]></description><link>https://zenn.dev/kannna5296/articles/2025-08-20-linter-formatter</link><guid isPermaLink="true">https://zenn.dev/kannna5296/articles/2025-08-20-linter-formatter</guid><pubDate>Wed, 27 Aug 2025 15:18:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qj3LQX0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2581%2585%25E3%2582%258C%25E3%2581%25B0%25E3%2581%259B%253A%2520linter%252Fformatter%25E7%2590%2586%25E8%25A7%25A3%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hirosuban%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2OGYzNmU4YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hirosuban</dc:creator></item><item><title><![CDATA[Line Works 掲示板APIを使うpythonライブラリ書いてもらいました。]]></title><description><![CDATA[https://pypi.org/project/line-works-board/
作ってみました。ほとんどCursorに書いてもらっています。
リポジトリは下記
https://github.com/niohx/line-works-board
Service Account認証のみ対応しています。
自分用に作ったライブラリなので、使えないときはどこがだめか教えて下さい。
]]></description><link>https://zenn.dev/yoheikusano/articles/e8c33ab0d3d442</link><guid isPermaLink="true">https://zenn.dev/yoheikusano/articles/e8c33ab0d3d442</guid><pubDate>Wed, 27 Aug 2025 14:01:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QztNwq98--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Line%2520Works%2520%25E6%258E%25B2%25E7%25A4%25BA%25E6%259D%25BFAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586python%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E9%2587%258E%25E6%25B4%258B%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZDIwYTZkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草野洋平</dc:creator></item><item><title><![CDATA[Teamsをもっと便利に！Azureで作るセキュアなRAGボット開発]]></title><description><![CDATA[
 はじめに
Microsoft Teamsは多くの企業で日常的に利用されており、業務の中心的なプラットフォームになっています。しかし、情報がチャネルやファイルに分散し、「必要な資料や決定事項がすぐに見つからない」という課題もあります。
そこで本記事では、Azureのサービス群を活用して、社内ドキュメントに関する質問に答えてくれる RAG（Retrieval-Augmented Generation）対応のTeamsボット を開発した過程を紹介します。特に、シークレット情報を持たせずにマネージドIDを用いてセキュアに認証する構成 に重点を置いています。

 開発環境
今回の開発で利用した...]]></description><link>https://zenn.dev/ryok/articles/develop-teams-rag-bot</link><guid isPermaLink="true">https://zenn.dev/ryok/articles/develop-teams-rag-bot</guid><pubDate>Wed, 27 Aug 2025 13:02:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sThQZbcR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Teams%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A8%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%25EF%25BC%2581Azure%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2582%25A2%25E3%2581%25AARAG%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryok%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3MjU0NDY4YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryok</dc:creator></item><item><title><![CDATA[Streamlit Creatorsに選出いただくまでの話]]></title><description><![CDATA[
 はじめに
データエンジニアの山口歩夢です！
このたび、ご縁があってStreamlit Creatorsのメンバーに選出いただきました。
本記事では、自分がStreamlit Creatorsに選出いただくまでの経緯をまとめてみました。
自分のコメントや感想は、以下のプレスリリースに記載いただきましたので、併せてご覧いただけると幸いです。
https://datumstudio.jp/information/streamlit-creators-2025/

 本題

 Streamlit Creatorsとは
Streamlit Creatorsは、Streamlitが公式に認定して...]]></description><link>https://zenn.dev/dataheroes/articles/029fa3e891cd97</link><guid isPermaLink="true">https://zenn.dev/dataheroes/articles/029fa3e891cd97</guid><pubDate>Wed, 27 Aug 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sub0pKv8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%2520Creators%25E3%2581%25AB%25E9%2581%25B8%25E5%2587%25BA%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A0%25E3%2581%258F%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E5%258F%25A3%25E6%25AD%25A9%25E5%25A4%25A2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDFkYTVlNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Snowflake%2520Data%2520Heroes%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZWQyMjkxYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山口歩夢</dc:creator></item><item><title><![CDATA[Azure OpenAI 40days Day8 — Functions × SignalR でリアルタイム配信（ローカル完走）]]></title><description><![CDATA[
 ✍️ TL;DR

到達点: Functions（Python v1）＋SignalR で LLM 応答を逐次配信し、ブラウザで体感できる状態にした
学び: SignalR 出力は func.Out[str] に JSON、negotiate は **HTTP out (return)** 必須、`"return"` は 単一引用ヒアストリングで JSON 保存
コスト: テストは短文＋gpt4o-mini-chat で極小（入出力トークン×単価）



 🧭 今日のゴール


negotiate で {url, accessToken} を返す

broadcast でメッセージ配...]]></description><link>https://zenn.dev/masau/articles/azure_openai_40days_day8_functions_signalr</link><guid isPermaLink="true">https://zenn.dev/masau/articles/azure_openai_40days_day8_functions_signalr</guid><pubDate>Wed, 27 Aug 2025 07:40:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xt9P2lnb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%252040days%2520Day8%2520%25E2%2580%2594%2520Functions%2520%25C3%2597%2520SignalR%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E9%2585%258D%25E4%25BF%25A1%25EF%25BC%2588...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasaU_Tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTZmODk1MmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MasaU_Tech</dc:creator></item><item><title><![CDATA[[AI Agent Jump Start] 記事一覧]]></title><description><![CDATA[
 はじめに
AI Agent Jump Startとは、AI Agentの基礎から実践まで体系的に学べる技術記事シリーズです。
基礎編では、AI Agentの概念理解からPythonを使った実装まで段階的に解説し、実際に動くエージェントを作成できるようになります。
応用編では、マルチエージェントについてや実際の開発で役立つデザインパターンの選定方法など、より実践的な内容を扱います。
AI Agentの開発を始めたい方から、既存システムに組み込みたい方まで、幅広く活用いただけるコンテンツです。
こちらでは基礎編、応用編それぞれの記事を一覧でご紹介します。


 基礎編

#1 Agent...]]></description><link>https://zenn.dev/dxclab/articles/99f61d9de2744e</link><guid isPermaLink="true">https://zenn.dev/dxclab/articles/99f61d9de2744e</guid><pubDate>Wed, 27 Aug 2025 06:55:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CFSJA9is--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAI%2520Agent%2520Jump%2520Start%255D%2520%25E8%25A8%2598%25E4%25BA%258B%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kamagata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlN2I4MjBlOGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DXC%2520Lab%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDFXZWZzNmFrOEx5U0U3djI2OTY2eE5QUTllUkhDaUdvaVZZbjRsdlVXMkZ0bG5HTT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kamagata</dc:creator></item><item><title><![CDATA[ローカルからのSLURMジョブの投入・監視]]></title><description><![CDATA[
 はじめに
モデルを計算機サーバーで学習させるためにSlurmがよく使われると思います。
そんな中でよく直面するのが

ローカルで書いたスクリプトをサーバにアップロードするのが面倒（Cursorとかあんまり直接繋がないでね...）
ジョブの実行状況をターミナルで squeue を何度も叩いて確認
ジョブが失敗した時のログ探しに時間を取られる
環境変数の設定を間違える

こうした課題を解決するために、ssh-slurmというPythonライブラリを開発しました。
本記事では、ローカル環境からちゃっとSSH経由でSLURMジョブを投入・監視する方法を解説します。
https://githu...]]></description><link>https://zenn.dev/ksterx/articles/ssh-slurm-job-launcher</link><guid isPermaLink="true">https://zenn.dev/ksterx/articles/ssh-slurm-job-launcher</guid><pubDate>Tue, 26 Aug 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oelbZ1EF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AESLURM%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596%25E3%2581%25AE%25E6%258A%2595%25E5%2585%25A5%25E3%2583%25BB%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksterx%25EF%25BC%2588%25E3%2581%2591%25E3%2583%25BC%25E3%2581%2599%25E3%2581%259F%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYWI3YWEzMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksterx（けーすた）</dc:creator></item><item><title><![CDATA[URL contextで技術Docsを要約・抽出する実装パターン]]></title><description><![CDATA[
 はじめに
AI に技術情報を読ませるときの“あるある”は、だいたいこの3つです。


古い情報に引っ張られる（旧仕様・旧記事を拾う）

誤りが混ざる（個人ブログやフォーラムの断片が正解として混入）

一次情報に辿りつけない（公式Docsを直接参照してくれない）

URL context tool は、この根本原因（検索結果の間接参照）を外し、「このURLを読め」 と明示できる公式機能です。
特定URLを追加コンテキストとして渡すだけで、モデルがそのページ内容を取得して回答の根拠に使います。スクレイピング用コードは不要。正確性が最優先の場面（フレームワークの最新仕様、公的情報、製品仕様...]]></description><link>https://zenn.dev/minewo/articles/zenn_gemini_url_context_tool</link><guid isPermaLink="true">https://zenn.dev/minewo/articles/zenn_gemini_url_context_tool</guid><pubDate>Tue, 26 Aug 2025 09:33:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kKin1qFM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URL%2520context%25E3%2581%25A7%25E6%258A%2580%25E8%25A1%2593Docs%25E3%2582%2592%25E8%25A6%2581%25E7%25B4%2584%25E3%2583%25BB%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%25B3%25AF%25E5%25B0%2586%25E5%25A8%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUZk9lanpGZ25VcmdHd3V6MkRLWHY3d1VkbjlLa1VzM0xjeUxGWFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小峯将威</dc:creator></item><item><title><![CDATA[Timedelta型データのsort時の注意]]></title><description><![CDATA[Timedelta型とは，Timestamp型のデータで差をとった時に出てくる型．(他のケースもあるだろうけど)
この型を要素に持つリストをsortしたい時に欠損(NaT)があると予想外の挙動が起きる．
これの具体的な例と改善策を示す．

 timedelta型が出てくるシーン
Timestamp型のデータを作成し，差をとってみる．
date_lateの型はTiemstamp型で，差をとったdeltaの型はTimedelta型．
Timedeltaはこんな感じで登場する．
from datetime import timedelta
import pandas as pd

date_l...]]></description><link>https://zenn.dev/kaise/articles/6c6bccb9ca100b</link><guid isPermaLink="true">https://zenn.dev/kaise/articles/6c6bccb9ca100b</guid><pubDate>Tue, 26 Aug 2025 06:33:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oBIyjOh5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Timedelta%25E5%259E%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AEsort%25E6%2599%2582%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%2584%25E3%2581%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmRidlJCak5fQ3kweDhTWTQ0WWRhcGtHS0tyNGQ5ZFBvTVFjV3RVSDhsT1k0d3hOQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かいせ</dc:creator></item><item><title><![CDATA[any-script-mcp で  Deno や Python で気軽に MCP tool を作る]]></title><description><![CDATA[LayerX でスタッフソフトウェアエンジニアをしている @izumin5210 です。バクラク事業部の Platform Engineering 部 Enabling チームでいろいろしています。
前回紹介したおもちゃに新機能を追加したので自慢させてください。


 3行まとめ


any-script-mcp に shell オプションが追加され、bash 以外でスクリプトを実行できるようになった
例えば Deno や Python を使うことで、third party package を使い LLM を活用するような Tool を YAML 1枚のまま記述できる
何かおもしろい使い...]]></description><link>https://zenn.dev/layerx/articles/bd887445cbcb41</link><guid isPermaLink="true">https://zenn.dev/layerx/articles/bd887445cbcb41</guid><pubDate>Tue, 26 Aug 2025 02:57:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sktSTXo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:any-script-mcp%2520%25E3%2581%25A7%2520%2520Deno%2520%25E3%2582%2584%2520Python%2520%25E3%2581%25A7%25E6%25B0%2597%25E8%25BB%25BD%25E3%2581%25AB%2520MCP%2520tool%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:izumin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2OTFlNjE4YzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LayerX%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pLQnhYeEszZEtUbG80dkZXU04zbWNpU0lvNlRFckpid1M3WUdoeFE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>izumin</dc:creator></item><item><title><![CDATA[map()とfilter()の違い]]></title><description><![CDATA[
 1. map 関数

 意味


「関数を iterable（反復可能オブジェクト）の全要素に適用する」関数。
新しい イテレータ を返す。


 構文
map(function, iterable, ...)


function: 各要素に適用する関数

iterable: 適用対象（リスト、タプル、文字列など）
複数の iterable を渡すと、関数は複数引数を受け取る。


 基本例
nums = [1, 2, 3, 4]
result = map(lambda x: x * 2, nums)

print(list(result))  # [2, 4, 6, 8]

 複...]]></description><link>https://zenn.dev/r3b8bx2/articles/9edf677eb5f2ce</link><guid isPermaLink="true">https://zenn.dev/r3b8bx2/articles/9edf677eb5f2ce</guid><pubDate>Tue, 26 Aug 2025 02:19:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B7R4acSq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:map%2528%2529%25E3%2581%25A8filter%2528%2529%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjZjI1ZjY2YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>R</dc:creator></item><item><title><![CDATA[学習記録_Python実践レシピ(第6章、第4章、第16章)]]></title><description><![CDATA[
 1. __add__ の動き


__add__ は + 演算子をオーバーロードするための特殊メソッド。
例えば：

class Vector:
    def __init__(self, x):
        self.x = x
    def __add__(self, other):
        return Vector(self.x + other.x)

v1 = Vector(10)
v2 = Vector(5)
v3 = v1 + v2   # v1.__add__(v2) が呼ばれる
print(v3.x)    # 15
🔹 ポイント


+ を書いた時...]]></description><link>https://zenn.dev/r3b8bx2/articles/29a6acc753a1f5</link><guid isPermaLink="true">https://zenn.dev/r3b8bx2/articles/29a6acc753a1f5</guid><pubDate>Tue, 26 Aug 2025 02:15:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fIiqO2UL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2_Python%25E5%25AE%259F%25E8%25B7%25B5%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%2594%2528%25E7%25AC%25AC6%25E7%25AB%25A0%25E3%2580%2581%25E7%25AC%25AC4%25E7%25AB%25A0%25E3%2580%2581%25E7%25AC%25AC16%25E7%25AB%25A0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:R%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjZjI1ZjY2YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>R</dc:creator></item><item><title><![CDATA[勤転 -Kinten- 操作マニュアル]]></title><description><![CDATA[Kinten（勤転）は、freee 等の勤怠CSVをExcelの勤怠表テンプレートへ自動転記し、PDF出力にも対応するデスクトップアプリです。
Windows/Mac 両方のOSに対応しています。]]></description><link>https://zenn.dev/tomo0108/books/ec5f0f3e3e1fff</link><guid isPermaLink="true">https://zenn.dev/tomo0108/books/ec5f0f3e3e1fff</guid><pubDate>Mon, 25 Aug 2025 16:07:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cS1BIvBk--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82NjU0YjlhYjA2LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ToMo</dc:creator></item><item><title><![CDATA[【コピペOK】Dify『コード実行』ノード｜ChatGPT/Geminiで失敗しないコード生成方法]]></title><description><![CDATA[
 この記事で解決できること

ChatGPT や Gemini でコードを作ったけど、Dify で動かない😭
「なんか知らないけどエラーが出る」を解決したい
Python よくわからないけど、Dify でコードを使いたい

結論：専用の「魔法の呪文」をコピペして使えば、初心者でも確実に動くコードが作れます！


 なぜ普通に頼むと失敗するの？

 ❌ よくある失敗パターン
ChatGPT に「文字数を数えるコードを書いて」と頼むと、こんなコードが返ってきます：
text = input("文字を入力してください: ")
print(f"文字数は {len(text)} です")
これは...]]></description><link>https://zenn.dev/lnkiai/articles/3290e1cb2fc7b1</link><guid isPermaLink="true">https://zenn.dev/lnkiai/articles/3290e1cb2fc7b1</guid><pubDate>Mon, 25 Aug 2025 15:14:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6Y3iLUTH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259AOK%25E3%2580%2591Dify%25E3%2580%258E%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%25AE%259F%25E8%25A1%258C%25E3%2580%258F%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25EF%25BD%259CChatGPT%252FGemini%25E3%2581%25A7%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2594%259F%25E6%2588%2590%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:inori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiZDY5MDgzMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>inori</dc:creator></item><item><title><![CDATA[RAGとGemini APIで作る！Slack履歴を活用したAIアシスタントの開発]]></title><description><![CDATA[
 Slack履歴を活用したRAGベースのAIアシスタントボットの開発

 はじめに
学校のプロジェクトやチーム活動において、過去の議論や決定事項を即座に参照することは重要です。しかし、Slackの検索機能だけでは、文脈を理解した上での情報検索は困難です。
そこで、チャンネルの履歴を学習し、自然な対話形式で情報を提供できるAIチャットボットを開発しました。このボットは、RAG（Retrieval-Augmented Generation）技術を活用し、過去のメッセージから関連情報を検索・提供します。

 🎯 解決したい課題


情報アクセスの効率化

チャンネル内の過去の議論や決定事項へ...]]></description><link>https://zenn.dev/shahin/articles/30db396ea69ee4</link><guid isPermaLink="true">https://zenn.dev/shahin/articles/30db396ea69ee4</guid><pubDate>Mon, 25 Aug 2025 14:44:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VbbbYWmP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RAG%25E3%2581%25A8Gemini%2520API%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2581Slack%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAI%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AD%25E3%2583%259B%25E3%2583%259E%25E3%2583%25B3%25E3%2580%2580%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%2592%25E3%2583%25B3%25EF%25BC%2588%25E3%2583%25AD%25E3%2583%259B%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%2592%25E3%2583%25B3%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjOTRhYWMwMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ロホマン　シャヒン（ロホマンシャヒン）</dc:creator></item><item><title><![CDATA[Google GenAI SDK の非公式ドキュメント | Gemini / Imagen / Veo を使う]]></title><description><![CDATA[
 はじめに
こんにちは、みなさん Gemini や Imagen といった Google の生成 AI を使っているでしょうか。
先日、画像生成モデルであるところの Imagen を使ってみようと公式ドキュメントを探したのですが、トップに非推奨のライブラリが出てきたり、生成例だけ置いてあり肝心のコードが無いなど情報の取得に苦労したので、ざっくり「どんな事が実現可能か」や「サンプルの実装例」をまとめようと思います。
なお、生成 AI を扱う API の都合上破壊的な変更が多いため、記事の内容は後から修正される可能性があります。
!
以下の内容は 2025 年 8 月現在最新の googl...]]></description><link>https://zenn.dev/prgckwb/articles/google-genai-sdk</link><guid isPermaLink="true">https://zenn.dev/prgckwb/articles/google-genai-sdk</guid><pubDate>Mon, 25 Aug 2025 14:12:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m8V6zcAS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520GenAI%2520SDK%2520%25E3%2581%25AE%25E9%259D%259E%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2520%257C%2520Gemini%2520%252F%2520Imagen%2520%252F%2520Veo%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1MWU5MTZhMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item></channel></rss>