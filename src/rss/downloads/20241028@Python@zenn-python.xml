<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 28 Oct 2024 00:59:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AWS 初心者がpythonを使ってリアルタイム文字起こし＋感情分析をする]]></title><description><![CDATA[
 はじめに
こんにちは、toshiki です。
今回はAWSのサービスを使ってリアルタイムの文字起こし＋テキスト感情分析を行ったので、その備忘録としてこの記事を書きました！

 やったこと
1.マイクからの音声をリアルタイムで文字起こし
2.文字起こしされた内容をテキスト感情分析にかける
下記の写真みたいな文字起こしと感情分析ができます


 対象読者

AWS初心者の方
とりあえず文字起こし＋テキスト感情分析したい方


 使用技術

 Amazon Transcribe（文字起こし）
Amazon Transcribe は音声をテキストに変換してくれるサービスです。
Amazon ...]]></description><link>https://zenn.dev/toshiki31/articles/f41a42106f4b01</link><guid isPermaLink="true">https://zenn.dev/toshiki31/articles/f41a42106f4b01</guid><pubDate>Sun, 27 Oct 2024 22:48:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bLvWWYVz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258Cpython%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25EF%25BC%258B%25E6%2584%259F%25E6%2583%2585%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toshiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlNjI3YTBmZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toshiki</dc:creator></item><item><title><![CDATA[Pythonでやってみる衛星データ解析入門【機械学習＆時系列解析】]]></title><description><![CDATA[📰 概要
衛星データを使って地球環境の変動について観察したいと考えたり、自身の研究に地球規模のマクロな視点を取り入れたいと考えたことはありますか。

本書はGoogle Earth Engine（GEE）というツールを使った機械学習や時系列解析の手法を解説しています。

この機会に是非、衛星データ解析を始めてみませんか。

👫 対象とする読者
・衛星データ解析を扱ったことがないが興味がある人
・機械学習や時系列データ解析に挑戦したい人
・地球環境の変動に興味がある人
・自分の研究に地球規模のマクロな視点を取り入れたい人

💰 販売価格
期間限定で ¥2500→¥800 (約70% OFF!!)で販売しております！

本技術書は随時アップデートされていきます。
一度購入された方はアップデートされたとしても追加料金は発生しませんのでご安心ください。

📰 アップデート情報
2024/10/28: リリースしました！]]></description><link>https://zenn.dev/labcode/books/0b223bf990b383</link><guid isPermaLink="true">https://zenn.dev/labcode/books/0b223bf990b383</guid><pubDate>Sun, 27 Oct 2024 22:21:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YPSfNtBs--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jNmMxMTE0ZjcyLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>LabCode（ラボコード）</dc:creator></item><item><title><![CDATA[【Python】 k-hop Clusteringの詳説：ネットワークグラフにおけるクラスタリング手法の実装と解説]]></title><description><![CDATA[
 ネットワーク分析手法：k-hop Clusteringの実装・解説

 k-hop Clusteringとは
k-hop Clusteringは、ネットワークグラフにおけるクラスタリング手法の一つです。この手法の特徴は、ネットワーク上の任意のノードから指定した数（k）のエッジを辿って到達できるノードを1つのクラスタとして抽出できる点にあります。

 具体的な例で見るk-hop Clustering

 1-hopクラスタリングの場合
あるノードから1エッジで到達できるノードのみをクラスタとして抽出します。例えば：

中心ノード「A」から
直接つながっているノード「B」「C」「D」が
...]]></description><link>https://zenn.dev/d_treasure0712/articles/0c5f03fa683f0e</link><guid isPermaLink="true">https://zenn.dev/d_treasure0712/articles/0c5f03fa683f0e</guid><pubDate>Sun, 27 Oct 2024 15:24:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N6FnReka--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%2520k-hop%2520Clustering%25E3%2581%25AE%25E8%25A9%25B3%25E8%25AA%25AC%25EF%25BC%259A%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258B%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnR4b0JVYlhZeklpamlxN181cGc1bXhtSC00dl9HTmFPVGpId1NtQTlqU3I2eW0xZUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たから</dc:creator></item><item><title><![CDATA[BLASTエラーの原因となる制御文字の処理：FASTAファイル修正プログラムの実装・解説]]></title><description><![CDATA[
 制御文字とキャレット表記について

 キャレット表記の基本
キャレット表記は、ASCIIコードにおける制御文字を視覚的に表現するための記法です。


表記方法


^ (キャレット) + アルファベット大文字
例：^A = 制御コード1（Start of Heading：ヘッダ開始）
ASCIIコード0-31の範囲の制御文字を表現
ASCIIコード一覧表



主な使用場面

プログラミング環境でのデバッグ（テキストエディタやプログラミング環境では、特定の制御文字を簡単に参照するためにこの表記が使われます。）
テキスト処理における制御文字の表現
文書校正や特殊文字の確認




 今...]]></description><link>https://zenn.dev/d_treasure0712/articles/6976b8cd268de2</link><guid isPermaLink="true">https://zenn.dev/d_treasure0712/articles/6976b8cd268de2</guid><pubDate>Sun, 27 Oct 2024 15:12:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8GPUZ19Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BLAST%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258B%25E5%2588%25B6%25E5%25BE%25A1%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%259AFASTA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%25BB%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258B%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnR4b0JVYlhZeklpamlxN181cGc1bXhtSC00dl9HTmFPVGpId1NtQTlqU3I2eW0xZUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たから</dc:creator></item><item><title><![CDATA[複数の切り取り画像から元の画像を復元する]]></title><description><![CDATA[
 はじめに
複数の切り取り画像から元画像を復元したかったため、Pythonにやってもらいました。

 目的
複数の切り取り画像を入力として、それらを結合し大きい元画像を出力します。

 インプット

 複数の切り取り画像
前提として、各画像間で共通の箇所が写っていることとします。







 アウトプット

 元画像
以下のようになってほしい


 コード
画像のディレクトリに読み込んだ後に、
1つ目の画像と2つ目の画像の共通する特徴点を算出し、それがマッチするかのように合成する。
その後、合成画像に3つ目の画像、4つ目の画像、…、とどんどん特徴点算出と合成を繰り返し、
ディレクト...]]></description><link>https://zenn.dev/gigi_aaaaa/articles/aa14bb64747def</link><guid isPermaLink="true">https://zenn.dev/gigi_aaaaa/articles/aa14bb64747def</guid><pubDate>Sun, 27 Oct 2024 14:59:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WQ_t51Xw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E5%258F%2596%25E3%2582%258A%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E5%2585%2583%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%25BE%25A9%25E5%2585%2583%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gigi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTFGNFRDbDNVdEh4Z1pGQXU4Yzc4aEp4TGFkWEhQejJwR0tOM1U4RkJONGtFU1dBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gigi</dc:creator></item><item><title><![CDATA[Act 09.Pythonでログ出力を行う]]></title><description><![CDATA[
 はじめに
Act 01. AIで外国為替を自動売買するまでの道のりをベースに学習を進めて行く。
Act 08. Pythonでエラーハンドリングを行うを書いていて、ログ出力に関する学習もした方が良いなと思ったためこの記事を書いている。
loggingモジュールを使っていくわけだが、簡単な使い方しか知らない。
今回は様々なカスタマイズも行う。

 loggerの基本的な使い方
大まかな流れは以下の通り。


loggingモジュールのインポート
ロガーの設定
ログの出力

ということでやっていく。

 1. loggingモジュールのインポート

Act09.py
from loggi...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/04d6e4f5747004</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/04d6e4f5747004</guid><pubDate>Sun, 27 Oct 2024 14:04:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--44axB0VM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252009.Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item><item><title><![CDATA[Act 08. Pythonでエラーハンドリングを行う]]></title><description><![CDATA[
 はじめに
Act 01. AIで外国為替を自動売買するまでの道のりをベースに学習を進めて行く。
コードを書く上でエラーハンドリングはとても重要になってくる。
このシリーズでは外国為替のデータが必要なため、いつかはどこかのAPIを呼び出し為替データを取得することになる。
APIの呼び出しに失敗した場合にエラーハンドリングを行う必要があるため、今回の内容は身につける必要があることは現時点でも明確。とても重要。
何となくは理解しているが、復習もかねてしっかりと記事を書いていこうと思う。

 エラーハンドリング
エラーハンドリングはtry-exceptを使うことで実現可能。
例えば以下のコー...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/f0b5e300016616</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/f0b5e300016616</guid><pubDate>Sun, 27 Oct 2024 12:40:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r1NN2chP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252008.%2520Python%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item><item><title><![CDATA[[ライフハック]ラズパイピコで照明のオンオフをする]]></title><description><![CDATA[ラズパイピコを使って、↓を作りました。
https://twitter.com/tw_kotatu/status/1850501610784608300

 😟困ったこと
スイッチでしか制御できない照明があり、手元で操作できないかと。


 🤔検討
前にSwitchBotなど既製品で対応しましたが、以下の点で断念しました。

スイッチ側のカバーが外れてしまう（家のスイッチの問題）
スイッチが複数あるため、台数を買うにはなかなか出費が多い

ラズパイピコとSG90が大量に余っていたため、それを組み合わせて実現することにしました。

 💡やったこと


利用者は、スマホから照明制御のリクエス...]]></description><link>https://zenn.dev/kotaproj/articles/pico_light_sg90</link><guid isPermaLink="true">https://zenn.dev/kotaproj/articles/pico_light_sg90</guid><pubDate>Sun, 27 Oct 2024 11:43:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2GUwwC7f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2595%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%255D%25E3%2583%25A9%25E3%2582%25BA%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2594%25E3%2582%25B3%25E3%2581%25A7%25E7%2585%25A7%25E6%2598%258E%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2582%25AA%25E3%2583%2595%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kotaproj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyNWExMWJmZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kotaproj</dc:creator></item><item><title><![CDATA[Pythonで地図上のスタートからゴールまでの経路を自動で出す]]></title><description><![CDATA[
 はじめに
複雑な地図の中で、任意のスタートから任意のゴールへの最短経路を出すといったことを私用でやりたかったため、Pythonにやってもらいました。

 目的
地図、スタート、ゴールから最短経路を自動で算出し可視化します。

 インプット

 地図
障害物を0、道を1以上の数値で二値化した画像。
前提として画像処理は完了しているものとします。
例としてポケモンのミアレシティのマップを画像処理して用意しました。
障害物は黒(=0)、道は白(=255)に対応します。


 スタート
GUIで上記の地図の道上をクリックして座標(X, Y)を取得します。

 ゴール
同上

 アウトプット
...]]></description><link>https://zenn.dev/gigi_aaaaa/articles/9e5e3fed5b9452</link><guid isPermaLink="true">https://zenn.dev/gigi_aaaaa/articles/9e5e3fed5b9452</guid><pubDate>Sun, 27 Oct 2024 11:41:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UgPyW8T1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B4%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E7%25B5%258C%25E8%25B7%25AF%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gigi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTFGNFRDbDNVdEh4Z1pGQXU4Yzc4aEp4TGFkWEhQejJwR0tOM1U4RkJONGtFU1dBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gigi</dc:creator></item><item><title><![CDATA[久しぶりのC問題，なんとか解けた]]></title><description><![CDATA[今回は，AtCoder Beginner Contest 377 C 問題を解いた際のメモを残しておきます．
C 問題は久しぶりに解いたのですが，なんとか自力で解けました．

 AtCoder Beginner Contest 377 C

https://atcoder.jp/contests/abc377/tasks/abc377_c

 回答
今回は，与えられた条件をそのまま実装することで解くことができました．
n, m = map(int, input().split())
coordinates = set(tuple(map(int, input().split())) fo...]]></description><link>https://zenn.dev/os515/articles/atcoder-abc377-c</link><guid isPermaLink="true">https://zenn.dev/os515/articles/atcoder-abc377-c</guid><pubDate>Sun, 27 Oct 2024 11:11:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7OxEnmH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B9%2585%25E3%2581%2597%25E3%2581%25B6%25E3%2582%258A%25E3%2581%25AEC%25E5%2595%258F%25E9%25A1%258C%25EF%25BC%258C%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A8%25E3%2581%258B%25E8%25A7%25A3%25E3%2581%2591%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:soso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXhTVFZ2dEMxc1c4N3NudWhKSVp0YTVMUWpsMUR5VW1YVTl5UFY2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soso</dc:creator></item><item><title><![CDATA[【FastAPI】poetryでライブラリを追加時にエラーが発生する]]></title><description><![CDATA[
 背景
docker &amp; FastAPIでライブラリを追加したい時があると思います。
# 以下を打っても
poetry add pinecone-client
# こちらのエラーが出てしまう。
zsh: command not found: poetry

 対処法
# ライブラリを入れて
curl -sSL https://install.python-poetry.org | python3 -

# パスを通す
export PATH="$HOME/.local/bin:$PATH"

# パスが通っていたら、以下が出るはず
poetry --version

 その後D...]]></description><link>https://zenn.dev/doshirote/articles/2d5bfe81b477eb</link><guid isPermaLink="true">https://zenn.dev/doshirote/articles/2d5bfe81b477eb</guid><pubDate>Sun, 27 Oct 2024 10:30:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_pwN3NKN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FastAPI%25E3%2580%2591poetry%25E3%2581%25A7%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E6%2599%2582%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%258A%2595%25E8%25B3%2587%25E3%2583%25AD%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODY0NWMwOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>投資ロウトの技術ブログ</dc:creator></item><item><title><![CDATA[Act 07. Pythonのクラスとオブジェクト指向プログラミング]]></title><description><![CDATA[
 はじめに
Act 01. AIで外国為替を自動売買するまでの道のりをベースに学習を進めて行く。
普段はインフラ屋だからPythonが楽しくて楽しくて。
今日もきっちり学んでしっかりと記事を書いていこうー
今まで業務でdefを使うことはあったがclassを使うことはあまりなかった。
Pythonではclassというものが存在し、それを使うことでいくつか利点があるらしい。
ChatGTPさんに聞いたところ、以下のような回答を貰った。
Pythonにおけるclass（クラス）を使う利点はいくつかあります。以下に主要なポイントを挙げます。


カプセル化: クラスを使うことで、データ（属性）...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/27b605bd36fdc0</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/27b605bd36fdc0</guid><pubDate>Sun, 27 Oct 2024 07:56:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zyq2woQ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252007.%2520Python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25A8%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item><item><title><![CDATA[【コード全公開】物理をグラフィカルに学習・教育するための物理シミュレータの紹介と使い方]]></title><description><![CDATA[
 1. 概要
本文書では、自作の物理シミュレータを用いて運動方程式のシミュレーションを行う方法を解説します（以下のYouTubeの動画のようなシミュレーションが出来るようになります）。
コードは全公開しているため、自由に改変していただきご自身の活動に役立ててほしいと思っております。
https://www.youtube.com/watch?v=o2QZctsSqnk
私自身、高校で物理を学び、大学・大学院では人工衛星のシミュレーションに取り組んできました。振り返ると、もう8年以上物理に触れてきており、見慣れた運動方程式であれば挙動を頭の中で予測できるようになってきました。
そんな経験...]]></description><link>https://zenn.dev/hattori_sat/articles/simulator-processing-python</link><guid isPermaLink="true">https://zenn.dev/hattori_sat/articles/simulator-processing-python</guid><pubDate>Sun, 27 Oct 2024 07:31:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EoZu8MiW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2585%25A8%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591%25E7%2589%25A9%25E7%2590%2586%25E3%2582%2592%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AB%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E6%2595%2599%25E8%2582%25B2%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2589%25A9%25E7%2590%2586%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hattori-sat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiYjZkYmRjZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hattori-sat</dc:creator></item><item><title><![CDATA[Djangoトラブル対処法めも]]></title><description><![CDATA[
 CSRF検証に失敗したため、リクエストは中断されました。
Djangoの管理画面にアクセスしてユーザ名とパスワードでログインしたら「CSRF検証に失敗したため、リクエストは中断されました。」と表示されてアクセス出来なかった。
ネットで調べると、{% csrf_token %}を記述しましょうというのは沢山あったのですが、既に書いてある・・
もう少し調べてみるとありました！
settings.pyのCSRF_TRUSTED_ORIGINSの値が間違っていました・・・
参考URL:https://noauto-nolife.com/post/django-csrf-trusted-ori...]]></description><link>https://zenn.dev/codek2/articles/27e601e8cfc665</link><guid isPermaLink="true">https://zenn.dev/codek2/articles/27e601e8cfc665</guid><pubDate>Sun, 27 Oct 2024 07:18:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MLjNvuuN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%25E3%2582%2581%25E3%2582%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Udemy%25E3%2583%25BB%25E4%25BC%2581%25E6%25A5%25AD%25E3%2583%25BB%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWJNcXYyNnJHY2xGVDEtOURITHVZTjhrWUpWOVN1aTJWYmxkNU9aejljTmtNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Udemy・企業・オンラインプログラミングスクール講師♪codek2</dc:creator></item><item><title><![CDATA[GitHub ActionsでTwitterに記事を投稿する自動化スクリプト]]></title><description><![CDATA[
 TL;DR
GitHub Actionsを利用して、特定のMarkdownファイルが更新された際に自動でTwitterに投稿するスクリプトを作成する方法について解説します。

 GitHub ActionsでTwitterに記事を投稿する自動化スクリプト
この記事では、GitHub Actionsを使用して、特定のMarkdownファイルが変更された時に自動でTwitter（X）に投稿するスクリプトの構成と注意点、改善点について詳しく解説します。
この記事は以下の二つの続きのような記事です。
https://zenn.dev/masuda1112/articles/2024-10-2...]]></description><link>https://zenn.dev/masuda1112/articles/2024-10-27-post-x-by-github-actions</link><guid isPermaLink="true">https://zenn.dev/masuda1112/articles/2024-10-27-post-x-by-github-actions</guid><pubDate>Sun, 27 Oct 2024 06:09:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CejUz5oD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7Twitter%25E3%2581%25AB%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%2599%25E3%2582%258B%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%2599%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0NTVjYzI0NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まっすー</dc:creator></item><item><title><![CDATA[Twitter API（X）へのツイート投稿の実践ガイド]]></title><description><![CDATA[
 TL;DR
このガイドでは、Pythonを使用してTwitter APIにツイートを投稿する方法を解説します。OAuth 1.0a認証を利用し、安全に認証情報を管理しながらリクエストを送信します。

 Twitter API（X）へのツイート投稿の実践ガイド

 概要
このガイドでは、Pythonを使用してTwitter API（現在はXとして知られています）にツイートを投稿する方法を解説します。OAuth 1.0a認証を用いて認証を行い、ツイートを自動的に投稿するためのコードを紹介します。

 必要なライブラリ
まず、以下のライブラリをインストールする必要があります。これにより、H...]]></description><link>https://zenn.dev/masuda1112/articles/2024-10-26-craete-post-by-python</link><guid isPermaLink="true">https://zenn.dev/masuda1112/articles/2024-10-26-craete-post-by-python</guid><pubDate>Sun, 27 Oct 2024 05:43:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Bk-SKqQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2520API%25EF%25BC%2588X%25EF%25BC%2589%25E3%2581%25B8%25E3%2581%25AE%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E6%258A%2595%25E7%25A8%25BF%25E3%2581%25AE%25E5%25AE%259F%25E8%25B7%25B5%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%2599%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0NTVjYzI0NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まっすー</dc:creator></item><item><title><![CDATA[MLMによるLUKEのドメイン適応]]></title><description><![CDATA[
 はじめに
機械学習エンジニアをしています、ishi2kiです。
今回は、日本語の事前学習済みモデルLUKEに対してドメイン適応を行う方法について説明します。
必要知識

Pythonの基礎知識
PyTorchの基礎知識
自然言語処理の基礎知識


 使用技術・用語

 LUKE
日本で開発されたTransformerベースのエンコーダモデルです。
Entity (固有表現) の埋め込みを適切に行えるように学習したものですが、Entityに関するタスク以外でも様々なタスクにおいて、他の事前学習済みモデルよりも高い性能を発揮しています。
日本語の事前学習済みモデルも公開されており、今回は...]]></description><link>https://zenn.dev/ishi2ki/articles/luke_domain_adaptation</link><guid isPermaLink="true">https://zenn.dev/ishi2ki/articles/luke_domain_adaptation</guid><pubDate>Sun, 27 Oct 2024 04:32:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U__TvNmK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MLM%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BLUKE%25E3%2581%25AE%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E9%2581%25A9%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ishi2ki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMmZhZjBjOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ishi2ki</dc:creator></item><item><title><![CDATA[pythonデータ分析のためのemacs設定の大枠とemacs-jupyterによるjupyter-REPLの紹介]]></title><description><![CDATA[
 はじめに
普段emacsではpythonを使用してデータ分析や､orgを使用してタスク管理､メモ書きをしている｡ emacsでデータ分析を行う上でのpython関連の設定に何が必要かの大枠を示し､ あまり記事がないemacs-jupyterによる画像が表示できるjupyter-REPLを紹介したい｡
注意:パッケージ名は本来jupyterだと思われるが､jupyterだと他のjupyterと混同するので､この記事ではorganization名のemacs-jupyterと呼ぶ (https://github.com/emacs-jupyter/jupyter)
注意2:emacs-j...]]></description><link>https://zenn.dev/nonamecat/articles/6d7d3a7fbe6cbd</link><guid isPermaLink="true">https://zenn.dev/nonamecat/articles/6d7d3a7fbe6cbd</guid><pubDate>Sun, 27 Oct 2024 02:50:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VzSFrAgN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEemacs%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AE%25E5%25A4%25A7%25E6%259E%25A0%25E3%2581%25A8emacs-jupyter%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258Bjupyter-REPL%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nonamecat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwNDI1N2I5MmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nonamecat</dc:creator></item><item><title><![CDATA[Zスコアの基礎と応用：データ分析での活用とPython実装方法]]></title><description><![CDATA[Zスコアはデータ分析において、多くのシーンで利用される重要な指標です。以下では、より読みやすくなるようにZスコアの説明を行い、具体的な業務での活用例、他の統計処理との比較を交えながら解説します。


 Zスコアの基本

 Zスコアとは？
Zスコアは、データの分布に基づいて、あるデータ点が平均からどれだけ離れているかを標準偏差（データの散らばり具合を表す指標）の単位で示すものです。
例えば、Zスコアが1の場合、平均から1標準偏差だけ離れていることを意味し、同様にZスコアが-2の場合、平均より2標準偏差だけ下の位置にあることを示します。
これにより、データポイントがデータ全体の中で相対的にど...]]></description><link>https://zenn.dev/hayato/articles/462d23fd8550e2</link><guid isPermaLink="true">https://zenn.dev/hayato/articles/462d23fd8550e2</guid><pubDate>Sat, 26 Oct 2024 10:59:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---3vugqTA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Z%25E3%2582%25B9%25E3%2582%25B3%25E3%2582%25A2%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%25A8%25E5%25BF%259C%25E7%2594%25A8%25EF%25BC%259A%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%25A8Python%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BC%258A%25E5%258B%25A2%25E9%259A%25BC%25E4%25BA%25BA%2520%257C%2520%2540hayatoise%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhNTMzYWNiMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>伊勢隼人 | @hayatoise</dc:creator></item><item><title><![CDATA[AtCoderのテストと提出を自動化する【Python × VSCode】]]></title><description><![CDATA[!
同じ記事をQiitaでも公開しています！


AtCoderのテストを自動化し、さらに自動で提出できるように環境を整えました。
!
生成AIはコードのコメント付けにのみ使用しています。


 1. 目的

テストをするときにいちいちコピペをするのが面倒なので、テストを自動化したい。
あわよくば、提出もコマンドラインで行いたい。
できるだけシンプルに（当社比）行いたい。


 2. 課題

参考になりそうな記事はどれも３年以上前のもので、古い。
自分の環境にぴったり合う記事はないので、試行錯誤する必要がある。

システムケースをダウンロードしたいが、参考になる記事が少ない。


 3....]]></description><link>https://zenn.dev/0w0kaomoji/articles/cd50ada8c2d3c2</link><guid isPermaLink="true">https://zenn.dev/0w0kaomoji/articles/cd50ada8c2d3c2</guid><pubDate>Sat, 26 Oct 2024 10:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vCYDXHsH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A8%25E6%258F%2590%25E5%2587%25BA%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Python%2520%25C3%2597%2520VSCode%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0w0_kaomoji_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZWU0ZDJiMjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>0w0_kaomoji_</dc:creator></item></channel></rss>