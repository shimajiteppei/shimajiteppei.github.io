<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 05 Jan 2025 09:36:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【v4からv5に切り替わる大変な時に勉強してるあなたへ】Svelteの基本的な書き方]]></title><description><![CDATA[
 はじめに
皆さん、こんにちは。
今回はSvelteの基本的な使い方をご紹介します。最近Svelteはバージョンが上がり新しくルーンという表現が追加されました。この書き方の違いについても掲載していきます。
https://svelte.dev/docs/svelte/v5-migration-guide

 雛形の作成とエディタの設定

 概要


npm create vite@latestで雛形を作成
VSCodeに「Svelte for VS Code」を追加

npm run devでアプリの起動
WebブラウザでSvelteを気軽に試す（Playground）

Svelte...]]></description><link>https://zenn.dev/peter_norio/articles/65409d3a6469f0</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/65409d3a6469f0</guid><pubDate>Sun, 05 Jan 2025 08:54:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TRhiJSIY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590v4%25E3%2581%258B%25E3%2582%2589v5%25E3%2581%25AB%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2582%258F%25E3%2582%258B%25E5%25A4%25A7%25E5%25A4%2589%25E3%2581%25AA%25E6%2599%2582%25E3%2581%25AB%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25B8%25E3%2580%2591Svelte%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[NestJSを使ったRBAC権限システムの設計：手順を追ったガイド]]></title><description><![CDATA[

 前書き
バックエンド管理システムでは、アクセス制御や個別のユーザーインターフェイスが必須です。例えば、スーパ管理者はすべてのページを閲覧でき、通常ユーザーは A および B ページにアクセスでき、VIP ユーザーは A、B、C、D ページを閲覧できます。これらの機能の背後には、以下の 3 つの重要な概念が設計されています。


ユーザー: 基本的な単位、例: Alice、Bob、Charlie。

ロール: ユーザーは 1 つ以上のロールを持つことができます。例えば、Alice は通常ユーザーと VIP の両方のロールを持つ場合があります。

権限: ロールには複数の権限が関連付け...]]></description><link>https://zenn.dev/leapcell/articles/367498a7f2d4e7</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/367498a7f2d4e7</guid><pubDate>Sun, 05 Jan 2025 06:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aJtxRA8R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FRBAC%25E6%25A8%25A9%25E9%2599%2590%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25EF%25BC%259A%25E6%2589%258B%25E9%25A0%2586%25E3%2582%2592%25E8%25BF%25BD%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[reduce の使用例を振り返る【JavaScript】]]></title><description><![CDATA[明けましておめでとうございます！
JavaScriptの基礎力を上げようと、年末年始休暇を利用してプログラミングの問題を解いていました。
その中で、reduceメソッドの使い方を覚えたのですが、それ以降の問題はreduceが使いたくなってしまい、できるだけreduceを使って問題を解いていました。新しい技を覚えたら使いたくなりますよね笑
しかし落ち着いて考えてみると、そんなにあちこちでreduceを使うのが本当により良い選択だったのかは定かではありません。
そこで、今回は実際に書いたコードを3つ振り返り、本当にreduceを使うべきだったのか、他の選択肢はどんなものだったのかといったこと...]]></description><link>https://zenn.dev/miki_do/articles/b98d31712b32f6</link><guid isPermaLink="true">https://zenn.dev/miki_do/articles/b98d31712b32f6</guid><pubDate>Sun, 05 Jan 2025 05:41:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TyiQ2viF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reduce%2520%25E3%2581%25AE%25E4%25BD%25BF%25E7%2594%25A8%25E4%25BE%258B%25E3%2582%2592%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258B%25E3%2580%2590JavaScript%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2582%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhOTllOTFjNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミキ</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#１３ GSAP ScrollTrigger１】]]></title><description><![CDATA[
 【#１３ GSAP ScrollTrigger１】
YouTube: https://youtu.be/XkvGJGJDlCU
https://youtu.be/XkvGJGJDlCU
今回からScrollTriggerについて解説していきます。
まずは、準備と初期設定から始めます。
https://gsap.com/docs/v3/Plugins/ScrollTrigger/

index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8" /&g...]]></description><link>https://zenn.dev/web_life_ch/articles/09bb9ba3188aa9</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/09bb9ba3188aa9</guid><pubDate>Sun, 05 Jan 2025 04:52:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TcTTv8hl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2591%25EF%25BC%2593%2520GSAP%2520ScrollTrigger%25EF%25BC%2591%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[【テストフレームワーク】Jestとは【テスト自動化】]]></title><description><![CDATA[
 Jestとは
Facebookが開発したJavaScriptのテストフレームワーク
特にReactアプリケーションのテストに適しており、簡単にセットアップできることから広く使用されている
Jestは、ユニットテスト、統合テスト、エンドツーエンドテストなど、さまざまな種類のテストをサポートしている

 メリット

 1. 簡単なセットアップ

初期設定がシンプルで、新しいプロジェクトにも既存のプロジェクトにも簡単に導入可能


 2. 豊富な機能

モック機能やスナップショットテストなど、テストを書くための豊富な機能が用意されている


 3. 高速な実行

並列テストの実行やキャッシ...]]></description><link>https://zenn.dev/nineball/articles/fed3975c25e559</link><guid isPermaLink="true">https://zenn.dev/nineball/articles/fed3975c25e559</guid><pubDate>Sun, 05 Jan 2025 04:27:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QuumYFaM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2580%2591Jest%25E3%2581%25A8%25E3%2581%25AF%25E3%2580%2590%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nineball%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3YWM1ZTllYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nineball</dc:creator></item><item><title><![CDATA[[js] imgのonLoadをPromiseで検知する方法 (customElements)]]></title><description><![CDATA[例えばimgタグで404が返ってきた画像を差し替える時やなんかにとりあえず使える。
customElementsを使ってPromiseをプロパティに設定しておくことで、ほぼ確実にonLoadを追加してPromiseを別スコープのJavaScriptから確認できる。
window.customElements.define("async-img", class extends HTMLImageElement {
  constructor() {
    super();
    this.whileLoad = new Promise((resolve, reject) =&gt; {...]]></description><link>https://zenn.dev/xofeulb/articles/0cb126ee8a6544</link><guid isPermaLink="true">https://zenn.dev/xofeulb/articles/0cb126ee8a6544</guid><pubDate>Sat, 04 Jan 2025 22:53:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pb53QnM7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bjs%255D%2520img%25E3%2581%25AEonLoad%25E3%2582%2592Promise%25E3%2581%25A7%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520%2528customElements%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%255E.%252C.%255E%2520BlueFox%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjODY1MTRmYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>^.,.^ BlueFox</dc:creator></item><item><title><![CDATA[URLSearchParamsを積極的に使いたい]]></title><description><![CDATA[
 きっかけ
fetch関数などURLを扱う際に、パラメータにキーとバリューを設定するケースが多々あると思います。それに関して開発時にChatGPTがご指南してくれたURLSearchParamsはなかなか便利だなと思って、ブログに残したいと思い作成しました。

 URLSearchParamsを使わない書き方
URLを自分の思い通りに加工する際、以前はテンプレートリテラルを使って下記の様に記述していました。

example1.js
const country = encodeURI("germany");
const city = encodeURI("berlin");
const...]]></description><link>https://zenn.dev/tkg_reis/articles/9248e95b054f01</link><guid isPermaLink="true">https://zenn.dev/tkg_reis/articles/9248e95b054f01</guid><pubDate>Sat, 04 Jan 2025 15:39:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---rDNfnZi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URLSearchParams%25E3%2582%2592%25E7%25A9%258D%25E6%25A5%25B5%25E7%259A%2584%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUNxMXVoX1dFUE8yS21IbW9JSENHU3Q4Zk5TNnJSbkl6UGw1enhnQlpjd3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkg</dc:creator></item><item><title><![CDATA[Javascriptで文字列圧縮]]></title><description><![CDATA[!
この記事は以前公開していたブログの2021-06-19の記事からの転載です

Javascriptで文字列圧縮処理を自作したのでメモしておきます

 経緯
てきとーに作ったパズルゲームでは各ステージデータを圧縮してURLの後ろにくっつけてます
今までは某ライブラリで圧縮解凍していたのですがライセンス表記が見つけられず、これはアウトかもしれないと思い別のライブラリへ変更することにしました
要件は以下

ライブラリが大きくないこと
圧縮後はURLにくっつけやすいこと
圧縮前はステージデータに使う/^[0-9,]+$/を満たしていればOK

色々ライブラリを漁ってみたんですが、ほとんどがパ...]]></description><link>https://zenn.dev/utubo/articles/js-p-data-compressor</link><guid isPermaLink="true">https://zenn.dev/utubo/articles/js-p-data-compressor</guid><pubDate>Sat, 04 Jan 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xoVmV0qF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E5%259C%25A7%25E7%25B8%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2581%25A4%25E3%2581%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3F5Zk1SQlNsWVZucEdRSHFuSWYyWUxGRVQzNzZ1T3ZhLXYwMWl3enc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うつぼ</dc:creator></item><item><title><![CDATA[Express.js徹底解説]]></title><description><![CDATA[
ExpressはNode.jsで極めて一般的に使用されるウェブサーバーアプリケーションフレームワークです。基本的に、フレームワークとは特定のルールに則ったコード構造であり、2つの重要な特性を持っています：

それはAPIをカプセル化し、開発者がよりビジネスコードの記述に集中できるようにします。
それは既に定義されたプロセスと標準仕様を持っています。

Expressフレームワークの主要機能は以下の通りです：

様々なHTTPリクエストに応答するためのミドルウェアを設定できます。
異なる種類のHTTPリクエストアクションを実行するためのルートテーブルを定義します。
テンプレートにパラメー...]]></description><link>https://zenn.dev/leapcell/articles/3fdd20aa5aaae3</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/3fdd20aa5aaae3</guid><pubDate>Sat, 04 Jan 2025 12:57:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b_xHT8bl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Express.js%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[ぷよぷよプログラミングをGodotで実装 01 コード理解（基盤とgame.js）]]></title><description><![CDATA[
 はじめに
ぷよぷよプログラミングを利用して、Godotでパズルゲームの作り方の基礎を一緒に学んでいこうと思います。YouTubeでもこの記事の内容に沿ってゲームを作っているので、動画を見ながら取り組んでみてください。
ぷよぷよプログラミングは、プログラミング学習環境『Monaca Education』において、セガが展開するアクションパズルゲーム『ぷよぷよ』をプログラミング学習できる教材です。 製品版と同じ画像素材を利用して、世界中で使われるコンピュータ言語を使い、プロが使う開発環境で本物のプログラミングを無料で楽しむことが出来るコンテンツです。
ぷよぷよプログラミングは主にプログラ...]]></description><link>https://zenn.dev/yurinchi/articles/77241679201f44</link><guid isPermaLink="true">https://zenn.dev/yurinchi/articles/77241679201f44</guid><pubDate>Sat, 04 Jan 2025 06:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IjxCxTUj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25B7%25E3%2582%2588%25E3%2581%25B7%25E3%2582%2588%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592Godot%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%252001%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2590%2586%25E8%25A7%25A3%25EF%25BC%2588%25E5%259F%25BA%25E7%259B%25A4%25E3%2581%25A8game.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2582%258A%25E3%2582%2593%25E3%2581%25A1%25E3%2581%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG5mTmtnd0NObm1POTVBUlRkMWRMcU9vM2JiMWotcEViRVdHMlBxLS04UktHWnVTOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーりんちぃ</dc:creator></item><item><title><![CDATA[BootStrap モーダルウィンドウ]]></title><description><![CDATA[
 BootStrap

 モーダルウィンドウ


]]></description><link>https://zenn.dev/v6qh2bxj/articles/2890d6ba5a5d25</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/2890d6ba5a5d25</guid><pubDate>Fri, 03 Jan 2025 14:50:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UOBwuasa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BootStrap%2520%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[fullPage.jsで水平スライドを自動再生する方法]]></title><description><![CDATA[
 はじめに &amp; 初期デモ
この記事では、ページ上の1つまたは複数の水平スライダーを自動でアニメーションさせる設定を、fullPage.jsでどのように行うかを解説します。
説明を飛ばして例をすぐに見たい方はこちらのコードペンをご覧ください：
こちらのコードペンでデモを確認できます。


 チュートリアル
デモの動作を理解したい方のために説明を始めます。

 a) afterLoad コールバック
ここでは、afterLoadコールバックを使用します。このコールバックに記述した内容は、垂直セクション間を移動するたびに実行されます。詳細はfullPage.jsドキュメントに記載され...]]></description><link>https://zenn.dev/alvarotrigo/articles/9f18b42fbb41e7</link><guid isPermaLink="true">https://zenn.dev/alvarotrigo/articles/9f18b42fbb41e7</guid><pubDate>Fri, 03 Jan 2025 09:37:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RiML67Jm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fullPage.js%25E3%2581%25A7%25E6%25B0%25B4%25E5%25B9%25B3%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%2586%258D%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Alvaro%2520Trigo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZTc5MDBkNTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Alvaro Trigo</dc:creator></item><item><title><![CDATA[TypeScript で Web 開発をする際の候補メモ]]></title><description><![CDATA[更新ログ

2025/01/04 Git Hooks ツールの Lefthook を追記
2025/01/05 フロントエンドの状態管理に XState を追記

各リンクテキストを対象名がわかりやすい形式に変更





 概要
以前のプロジェクトで使っていたり、進行中に差し替えまでは出来ないけど次使うならこれを使おうと思っていたライブラリやツールなどが、いざ新しくプロジェクトを作ろうと初期構築を始めたら色々と失念している事ってよくありませんか？
最近実際それがあり、個別のページにわかれて技術メモはとってあったりするのですが探しながらは手間なのとブクマしただけのものもあるので、インデッ...]]></description><link>https://zenn.dev/akineko/articles/f611a806947c96</link><guid isPermaLink="true">https://zenn.dev/akineko/articles/f611a806947c96</guid><pubDate>Fri, 03 Jan 2025 02:29:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qMA5PFr4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520Web%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2580%2599%25E8%25A3%259C%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akineko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3MWFkNDUwODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akineko</dc:creator></item><item><title><![CDATA[contentful.jsのv10から登場した2つのクライアントチェーン修飾子について解説]]></title><description><![CDATA[
 この記事で解説すること

contentful.jsを使ったエントリーの取得
contetful.jsでフィールドにReferencesのあるエントリーを取得したときの動作
クライアントチェーン修飾子のwithoutLinkResolutionとwithoutUnresolvableLinksについて解説


 contentful.jsを使ったエントリーの取得
contentful.jsはCDA(Content Delivery API) と CPA(Content Preview API)を利用するためのjavascriptのクライアントライブラリです。
このライブラリを使用する...]]></description><link>https://zenn.dev/nagatsukey/articles/8c6f451f9b82a0</link><guid isPermaLink="true">https://zenn.dev/nagatsukey/articles/8c6f451f9b82a0</guid><pubDate>Thu, 02 Jan 2025 18:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GtlmQzkr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:contentful.js%25E3%2581%25AEv10%25E3%2581%258B%25E3%2582%2589%25E7%2599%25BB%25E5%25A0%25B4%25E3%2581%2597%25E3%2581%259F2%25E3%2581%25A4%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E4%25BF%25AE%25E9%25A3%25BE%25E5%25AD%2590%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nagatsukey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p4NmpCYnVoYjA5VHFhcGdzTUpmeXM0bXp0YmktdTNPRFo4VlgyPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nagatsukey</dc:creator></item><item><title><![CDATA[英語学習サイト ✏️eigopencil.com をリリースしました。]]></title><description><![CDATA[
 アプリケーションの説明
eigopencil.comは、英語のライティングができるスペースを提供します。

 なぜこれを作ったか
自分の英語力向上のために開発しました。

 サイトURL,README
https://eigopencil.com/question
https://github.com/KazumaWada/eigopencil#eigopencilcom

 使用技術
フロントエンド: HTML/CSS/Tailwind CSS
バックエンド: Ruby on Rails
データベース: PostgreSQL
インフラ: Docker
デプロイに使用したソフトウェア...]]></description><link>https://zenn.dev/kazumawada/articles/3ffb67eb690290</link><guid isPermaLink="true">https://zenn.dev/kazumawada/articles/3ffb67eb690290</guid><pubDate>Thu, 02 Jan 2025 10:36:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YYekFRjU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%258B%25B1%25E8%25AA%259E%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%2520%2520eigopencil.com%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25BA%25E3%2583%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4NzZiNmIwYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カズマ</dc:creator></item><item><title><![CDATA[console.logについて理解していますか？]]></title><description><![CDATA[
 はじめに
console.log()を使っていますか？
コンソールデバッグをしない派の人もまったく使わないことはないでしょう。
https://developer.mozilla.org/ja/docs/Web/API/console/log_static
// 文字列を渡すと表示される
console.log("Hello, world!"); // Hello, world
わかりやすいですね。
// オブジェクトも表示する
console.log({ name: "Taro" }); // { name: 'Taro' }
オブジェクトも表示します。
では、これはどう表示される...]]></description><link>https://zenn.dev/ncdc/articles/you-dont-know-console-log</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/you-dont-know-console-log</guid><pubDate>Thu, 02 Jan 2025 09:00:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sXUt8AZZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:console.log%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ratmie%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvci5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ratmie</dc:creator></item><item><title><![CDATA[setInterval() の引数にアロー関数を使う【個人学習まとめ】]]></title><description><![CDATA[
 setInterval()って？
構文
setInterval(関数,待ち時間);
第一引数に待ち時間(ミリ秒)が経過するたびに実行する関数本体を指定する。
第二引数に待ち時間を指定する(省略可。省略した場合は0になる)。
!
ここからはLeetCodeの「2725. Interval Cancellation」の回答中にやらかしたことをもとに書きます。
fn: 問題から与えられた関数
args: 問題から与えられた配列
t: インターバル時間


 間違い例
実際に自分がやらかしたコード。
setInterval(fn(...args),t);
このように書くと、fnが即座に実行さ...]]></description><link>https://zenn.dev/o0rororo0o/articles/b52b1042301f2b</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/b52b1042301f2b</guid><pubDate>Thu, 02 Jan 2025 05:52:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wc4hfx3S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:setInterval%2528%2529%2520%25E3%2581%25AE%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%25AD%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[[神機能]React Compilerに触れてみた]]></title><description><![CDATA[
 React Compilerとは
React Compilerは、Metaが開発した新しいコンパイラで、ビルド時のみに実行されるツールであり、Reactアプリを自動的に最適化してくれます。
https://ja.react.dev/learn/react-compiler

 React Compilerの特徴
React Compilerの一番大きな機能としては、useMemoやuseCallback、React.memoを使わずとも、パフォーマンスの最適化をしてくれる機能かと思います。
メモ化は適用し忘れたり、誤って適用したりしてしまうことも多いので、その部分を意識しなくていいと...]]></description><link>https://zenn.dev/ryohei0509/articles/43aee8aa41f65f</link><guid isPermaLink="true">https://zenn.dev/ryohei0509/articles/43aee8aa41f65f</guid><pubDate>Wed, 01 Jan 2025 08:48:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b_65rqAk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25A5%259E%25E6%25A9%259F%25E8%2583%25BD%255DReact%2520Compiler%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hukuryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2JhYWM4YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hukuryo</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#１２ GSAP Sample３ Drower Menu Animation２】]]></title><description><![CDATA[
 【#１２ GSAP Sample３ Drower Menu Animation２】
YouTube: https://youtu.be/KhjZQdOJpn8
https://youtu.be/KhjZQdOJpn8
今回も引き続きGSAPを使用して、
ドロワーメニューを作成していきます。
今回は、JSの部分を実装します。
まずは、CSSを変更して、
メニューを閉じた状態にします。

css/main.css
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html,
body {
  width: 100%;
 ...]]></description><link>https://zenn.dev/web_life_ch/articles/9c36d71969b832</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/9c36d71969b832</guid><pubDate>Wed, 01 Jan 2025 06:08:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8cAoGKUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2591%25EF%25BC%2592%2520GSAP%2520Sample%25EF%25BC%2593%2520Drower%2520Menu%2520Animation%25EF%25BC%2592%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[Leafletで位置情報の現在地をマーカーで常時更新してみた]]></title><description><![CDATA[Leafletのプラグイン「UserMarker」使用と「navigator.geolocation.watchPosition」使って、位置情報の現在地をマーカーで常時更新してみました。
実装すると以下のようになります。


 まずは全体のコード
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
&lt;meta name="viewport" ...]]></description><link>https://zenn.dev/ausssxi/articles/4fa3311a1a6f6a</link><guid isPermaLink="true">https://zenn.dev/ausssxi/articles/4fa3311a1a6f6a</guid><pubDate>Wed, 01 Jan 2025 00:43:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z_RvVifx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Leaflet%25E3%2581%25A7%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%25AE%25E7%258F%25BE%25E5%259C%25A8%25E5%259C%25B0%25E3%2582%2592%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25A7%25E5%25B8%25B8%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2586%2585%25E7%2594%25B0%25E5%258E%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjNDgzNzUzOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>内田厚</dc:creator></item></channel></rss>