<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 28 Jan 2025 00:08:34 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Konwinski Prize コンペティション分析ノート]]></title><description><![CDATA[
 はじめに
このノートブックでは、KaggleのKonwinski Prize コンペティションのデータ分析と基本的な理解を目指します。

 コンペティションの概要

GitHubの新規Issueの90%を解決できるAIの開発が目標
賞金総額: $1,225,000
オープンソースコードとオープンウェイトモデルのみが対象
評価期間: 2024年12月11日 - 2025年3月12日



 false}
# 必要なライブラリのインポート
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
impo...]]></description><link>https://zenn.dev/sunwood_ai_labs/articles/konwinski-prize-competition-analysis</link><guid isPermaLink="true">https://zenn.dev/sunwood_ai_labs/articles/konwinski-prize-competition-analysis</guid><pubDate>Mon, 27 Jan 2025 17:54:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZLwI1LE1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Konwinski%2520Prize%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%2588%2586%25E6%259E%2590%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdpSmVyNldLVlpKLUd4N054QWVuSFVtYXQ3MUhhd1NXaU5hRG5FTnZiMXZZdHBIaGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item><item><title><![CDATA[MLflowでモデルの登録、stagingをルールベースで行う section1]]></title><description><![CDATA[
 本記事の立ち位置
MLflowによるモデル管理のベストプラクティスを探るための一つ目の記事にしたいと考えている。
MLflowには学習の記録であるExperimentsと、Modelsが存在する。


Experimentsは文字通り訓練の記録であるが、 ModelsはModel自体を管理することができる。
このコンセプトについては別記事にまとめることにし、本記事ではあくまでもざっくりとしたコードの説明と使い方に関しての記載に止める。
まずモデルを管理する上で以下のプロセスを踏んでいくことが考えられる。

訓練を記録する
訓練の結果をモデルに登録する
モデルを選定し producti...]]></description><link>https://zenn.dev/hirayuki/articles/a65b15957a634e</link><guid isPermaLink="true">https://zenn.dev/hirayuki/articles/a65b15957a634e</guid><pubDate>Mon, 27 Jan 2025 15:42:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vXHubJkq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MLflow%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E7%2599%25BB%25E9%258C%25B2%25E3%2580%2581staging%25E3%2582%2592%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2586%2520section1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hirayuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYmU5ZDM0OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hirayuki</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 19: Linen Layout]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day19 の記事です。
https://adventofcode.com/2024/day/19
Day18 の内容はこちら。
https://zenn.dev/yasuharu519/articles/a1569d4b96c9a1
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 19: Linen Layout
今回の舞台は温泉です。温泉に来たにも関わらず、入場料を支払うのに必要なお金を持っていないことに気づきました。仕方なく帰ろうとして...]]></description><link>https://zenn.dev/yasuharu519/articles/38ffc7cd98ccd3</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/38ffc7cd98ccd3</guid><pubDate>Mon, 27 Jan 2025 15:28:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nP6vH-V---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%252019%253A%2520Linen%2520Layout%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[【初心者向け】Pythonの仮想環境構築]]></title><description><![CDATA[Pythonで開発を行う際に、仮想環境は欠かせない存在です。複数のプロジェクトで異なるバージョンのライブラリを使用したり、依存関係を管理したりする際に、仮想環境は非常に役立ちます。
この記事では、Pythonの初心者の方でも理解できるように、仮想環境の作成方法を具体的な手順を解説していきます。仮想環境のメリットも紹介しますので、ぜひ参考にしてください。

 仮想環境(venv)
venvとは、仮想環境と呼ばれるもので、Pythonのプロジェクトごとに独立した実行環境を作成するためのツールです。Pythonをインストールすると標準で利用できます。

 なぜ仮想環境が必要なのか？

複数のプ...]]></description><link>https://zenn.dev/yogurt/articles/db4f99fb9d542b</link><guid isPermaLink="true">https://zenn.dev/yogurt/articles/db4f99fb9d542b</guid><pubDate>Mon, 27 Jan 2025 11:37:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RD107V7Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmFiYWU4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨーグルト</dc:creator></item><item><title><![CDATA[顔認証と目線認証で自動でログイン(Python,MediaPipe)]]></title><description><![CDATA[こんにちは。大学生エンジニアの豆太郎です。
今回は、顔認証と目線認証を行って自動ログインできるシステムを開発したので、紹介したいと思います。


 作ったシステムの概要

 顔認証と目線認証を使って、自動でログインすることができるアプリ
とくに本アプリでは、目線認証において視線の方向だけでなく、まばたきでの入力も行えるようにすることで、目線認証において目を動かすことが難しい人や斜視の人でも、より手軽に目線認証を行えるようにしました。


 作ろうと思った動機
近年では、顔認証を使った本人の確認が、銀行のATMシステムや自動入国審査、スマートフォンのログインなどで広く使われるようになってい...]]></description><link>https://zenn.dev/mametaro/articles/face_recognition0127</link><guid isPermaLink="true">https://zenn.dev/mametaro/articles/face_recognition0127</guid><pubDate>Mon, 27 Jan 2025 09:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vyypJEI6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A1%2594%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25A8%25E7%259B%25AE%25E7%25B7%259A%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2528Python%252CMediaPipe%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B1%2586%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjMzQyZmQwYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>豆太郎</dc:creator></item><item><title><![CDATA[FastAPI入門 「Hello FastAPI!」 まで。]]></title><description><![CDATA[https://github.com/CA01971020/fastapi
自己紹介
フロントエンドを中心に勉強している情報系の専門学生3年生（2025年1月27日現在）です。
フルスタックでWEBアプリ開発できるようになりたくてバックエンド勉強中です。
https://hii-site.vercel.app/
https://github.com/CA01971020


 前提

Python実行環境


 ディレクトリ構成
ディレクトリ構成は以下の通りです。
/
├─ api
│  └─ main.py
├─ env
├─ .gitignore
└─ README.md

 mai...]]></description><link>https://zenn.dev/aputech/articles/bad52ee80f2cc2</link><guid isPermaLink="true">https://zenn.dev/aputech/articles/bad52ee80f2cc2</guid><pubDate>Mon, 27 Jan 2025 09:48:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r7QW3Xqf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E5%2585%25A5%25E9%2596%2580%2520%25E3%2580%258CHello%2520FastAPI%2521%25E3%2580%258D%2520%25E3%2581%25BE%25E3%2581%25A7%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2583%25BC%2540%25E6%2583%2585%25E5%25A0%25B1%25E7%25B3%25BB%25E5%25AD%25A6%25E7%2594%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4NGM3YTBlZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひー@情報系学生</dc:creator></item><item><title><![CDATA[Python Tkinter を使ってみる]]></title><description><![CDATA[Tkinter を用いたプログラム事例を紹介する。]]></description><link>https://zenn.dev/damyarou/books/00f56ee74805fb</link><guid isPermaLink="true">https://zenn.dev/damyarou/books/00f56ee74805fb</guid><pubDate>Mon, 27 Jan 2025 09:13:29 GMT</pubDate><dc:creator>damyarou</dc:creator></item><item><title><![CDATA[【Python・Pysparkで学ぶ！】データ分析の基礎【深掘分析②エントリーの有無】]]></title><description><![CDATA[
 【深掘分析②エントリーの有無】
↓エントリー情報付きトランザクションテーブル(entry_transaction_table)のサンプル



brand_id
brand_name
industory
pay_method
entry_flg
transaction_count
pay_mean_raw
pay_mean_without_tax




brand0001
佐藤レストラン
food
card
0
2
3135
2850


brand0001
佐藤レストラン
food
card
1
3
7187
6533


brand0003
高橋カフェ
food
cache
0...]]></description><link>https://zenn.dev/taiking/articles/30b50fb626ae6b</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/30b50fb626ae6b</guid><pubDate>Mon, 27 Jan 2025 09:06:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oPK6-LPf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPyspark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2580%2590%25E6%25B7%25B1%25E6%258E%2598%25E5%2588%2586%25E6%259E%2590%25E2%2591%25A1%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25AE%25E6%259C%2589%25E7%2584%25A1%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[HuggingFace(PyTorch)のモデルをRAM / VRAMから解放する方法]]></title><description><![CDATA[こんにちは。今回は、一度ロードしたHuggingFaceのモデルをアンロードして、CPU RAMとGPU VRAMぞれぞれについてメモリ解放する方法について書いていきます。
HuggingFaceと書きましたが、本記事で紹介する方法は、PyTorchモデルにおいても利用できます。
いくつか試行錯誤したので、まずはメモリ解放する方法について結論から述べ、そのあとでどのような方法を試したかや、メモリ解放の仕組みについて解説していきます。
検証コードは以下のリポジトリにDocker付きで用意してあります。
https://github.com/mjun0812/hf-model-cleanup...]]></description><link>https://zenn.dev/mjun0812/articles/d1167b6bcef177</link><guid isPermaLink="true">https://zenn.dev/mjun0812/articles/d1167b6bcef177</guid><pubDate>Mon, 27 Jan 2025 09:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A2aVj15m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HuggingFace%2528PyTorch%2529%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592RAM%2520%252F%2520VRAM%25E3%2581%258B%25E3%2582%2589%25E8%25A7%25A3%25E6%2594%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%258A%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NmNjYzA5MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もりりん</dc:creator></item><item><title><![CDATA[AtCoder ABC390解説(Python)]]></title><description><![CDATA[Python緑コーダーによる、ABC390（2025/01/25実施）の解説です！
今後は、時々解説を書いていこうと思います。

 A問題
実際に、入れ替える値ごとにシミュレーションしてみましょう。
A = [int(x) for x in input().split()]

for i in range(4):
    # `a_temp = A` とすると、Aの値が変わってしまうので注意
    a_temp = A.copy()

    # A[i]とA[i+1]を入れ替える（そのために一時的に保存）
    temp = a_temp[i]
    a_temp[i] = a_...]]></description><link>https://zenn.dev/takechi_s/articles/atcoder-abc390</link><guid isPermaLink="true">https://zenn.dev/takechi_s/articles/atcoder-abc390</guid><pubDate>Mon, 27 Jan 2025 08:34:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7GBGdpJ4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:AtCoder%2520ABC390%25E8%25A7%25A3%25E8%25AA%25AC%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2583%25BC%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS282Vk5hSnU0WU5WQ3ZHb0lQME5NV3oxODY5MXFheGRJZHROZXdSZ1lwQ1g5eHpKYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たーけ</dc:creator></item><item><title><![CDATA[Globe-ingの技術スタック]]></title><description><![CDATA[
 はじめに
みなさん、はじめまして。Globe-ingのCTOを務める上田です。
この度、弊社テックブログを立ち上げることになりました。第一弾の記事では、私たちが開発中のプロダクト「オクタゴン」と「AIコンサルタント」の紹介と、それらを支える技術的な選択についてお話しします。


 開発中のプロダクトについて
現在、Globe-ingでは2つのプロダクトラインを構想・開発しています。

 1. 「オクタゴン」
コンサルタントが長年培ってきたノウハウを自動化・SaaS化し、幅広い企業に素早く提供することを目指したプロダクト群です。例えば、以下のプロダクトを開発しています。


セールスス...]]></description><link>https://zenn.dev/globeing/articles/glb-tech-stack</link><guid isPermaLink="true">https://zenn.dev/globeing/articles/glb-tech-stack</guid><pubDate>Mon, 27 Jan 2025 06:14:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PahVhFEJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Globe-ing%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kueda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxZWQ3MTE4MTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Globe-ing%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyOWJhYzk3ZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kueda</dc:creator></item><item><title><![CDATA[GolangでUnion型を実現！型の柔軟性を最大限に活かす3つの方法]]></title><description><![CDATA[
 はじめに
Golang（以下Go）は、シンプルで高速なプログラミングを実現するために設計された言語です。しかし、Goには他の言語で一般的なUnion型のサポートがありません。そのため、複合型を扱いたい場合、Goの特徴を活かした方法で工夫する必要があります。
この記事では、Union型的なことをGoで実現するための方法を詳しく解説します。初学者の方でも理解しやすいように、コード例や実用的なシナリオを交えながら説明します。


 Union型とは？
Union型は、1つの変数が複数の型のうちどれか1つを持つことを許容する型です。例えば、TypeScriptやPythonでは以下のように書...]]></description><link>https://zenn.dev/daiten/articles/0276f69f817461</link><guid isPermaLink="true">https://zenn.dev/daiten/articles/0276f69f817461</guid><pubDate>Mon, 27 Jan 2025 05:38:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HvR7vyHj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Golang%25E3%2581%25A7Union%25E5%259E%258B%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581%25E5%259E%258B%25E3%2581%25AE%25E6%259F%2594%25E8%25BB%259F%25E6%2580%25A7%25E3%2582%2592%25E6%259C%2580%25E5%25A4%25A7%25E9%2599%2590%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%25993%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daitenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MzllZjg1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daitenn</dc:creator></item><item><title><![CDATA[Mypyとそれ以外のリンターを比較してみる。]]></title><description><![CDATA[Pythonのtype checkerとしてMypyを利用する事は多いと思いますが、その他リンターとの関係性を調査してみました。
サンプルコード
from typing import NewType

UserId = NewType('UserId', int)

def get_user_name(user_id: UserId):# ① Rerun Typeが存在しない。
    return f"User: {user_id}"

def main() -&gt; None:
    id = UserId(1)
    user_name=get_user_name(id)
 ...]]></description><link>https://zenn.dev/zenn_tkc/articles/d92526dffc80f1</link><guid isPermaLink="true">https://zenn.dev/zenn_tkc/articles/d92526dffc80f1</guid><pubDate>Mon, 27 Jan 2025 04:17:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IlkQwUEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mypy%25E3%2581%25A8%25E3%2581%259D%25E3%2582%258C%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2FiNjJjYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkc</dc:creator></item><item><title><![CDATA[Python学習帳]]></title><description><![CDATA[Python勉強したことメモ、随時更新]]></description><link>https://zenn.dev/tabirider/books/tr-python-study-notebook</link><guid isPermaLink="true">https://zenn.dev/tabirider/books/tr-python-study-notebook</guid><pubDate>Mon, 27 Jan 2025 03:52:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eOmjBjMN--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci85YTJhMWJkMDA4LmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>tabirider</dc:creator></item><item><title><![CDATA[GPUをレンタルしてJ-Moshiを使ってみた]]></title><description><![CDATA[最近話題になっている音声対話モデル「J-Moshi」が、日本語で人間のように自然な会話ができそうです。
https://x.com/atsumoto_ohashi/status/1882633871176630595
モデルはHFに公表されています。
https://github.com/nu-dialogue/j-moshi
https://github.com/kyutai-labs/moshi
スペックに関して、24GB以上のVRAMを搭載したGPUが必要のようです。

While we hope that the present codebase will work on Win...]]></description><link>https://zenn.dev/mathewchan/articles/d90550d49c1d14</link><guid isPermaLink="true">https://zenn.dev/mathewchan/articles/d90550d49c1d14</guid><pubDate>Mon, 27 Jan 2025 02:50:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---bQoA-v4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPU%25E3%2582%2592%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6J-Moshi%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mathew%2520Chan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzMTljYjI1ZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mathew Chan</dc:creator></item><item><title><![CDATA[Rust製の高速Linter・Formatter「Ruff」の初心者向け解説]]></title><description><![CDATA[
 RuffでPythonコードをLint・Format
会社で、同僚にPythonコードのLint（コードの静的解析）、Format（コード整形）にRuffが便利と教えてもらいました。
Pythonに関しては、ずっとLintにはFlake8を使って、VS Codeの拡張機能への組み込みとGitHub ActionsでPull Requestに対しての自動チェックを実施していました（詳細は、こちらの記事を参照ください）。
Ruffに関しては、Flake8からの乗り換えコストもあるので、わざわざ新たに覚えて使う必要はないかと思っていたのですが、調べて少し使ってみるとRuffに色々とメリット...]]></description><link>https://zenn.dev/mkj/articles/4e6833e71b267c</link><guid isPermaLink="true">https://zenn.dev/mkj/articles/4e6833e71b267c</guid><pubDate>Mon, 27 Jan 2025 02:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fWyxAfIr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A3%25BD%25E3%2581%25AE%25E9%25AB%2598%25E9%2580%259FLinter%25E3%2583%25BBFormatter%25E3%2580%258CRuff%25E3%2580%258D%25E3%2581%25AE%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2582%2589%25E3%2581%2582%25E3%2581%2592%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2NGM3ZTBkMzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%259D%25BE%25E5%25B0%25BE%25E7%25A0%2594%25E7%25A9%25B6%25E6%2589%2580%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>からあげ</dc:creator></item><item><title><![CDATA[【GraphRAG】-  No module named graphrag.index.__main__; の対処方法]]></title><description><![CDATA[
 執筆日
2025/1/27

 発生事象
GrapghRAGのプロジェクトの初期化をする際に、以下のエラーが。
&gt;python -m graphrag.index --init --root ./
No module named graphrag.index.__main__; 'graphrag.index' is a package and cannot be directly executed

 原因
graphragのバージョンが原因でした。
graphrag==1.2.0

 対処方法
GraphRAG == 0.4.0以上の場合は、以下のコマンドで実施する。

ワ...]]></description><link>https://zenn.dev/headwaters/articles/96e9f5fa915aa9</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/96e9f5fa915aa9</guid><pubDate>Mon, 27 Jan 2025 02:42:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9CGRVxdi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GraphRAG%25E3%2580%2591-%2520%2520No%2520module%2520named%2520graphrag.index.__main__%253B%2520%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmODg5YTRhYzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item><item><title><![CDATA[PythonCall.jlでJuliaからOptunaを使う]]></title><description><![CDATA[
 はじめに
Juliaのコード中でOptunaを使う方法について紹介します．
同様の試みは

で行われています．
こちらで紹介されている方法はPythonからJuliaを起動して値を受け取るような方法のため，値を取得するたびにJuliaを起動し直す余分な時間が発生します．
今回はPythonCall.jlを使って繰り返しJuliaを起動することなく，JuliaでOptunaを使う方法を紹介します．
PythonCall.jlはJuliaからPythonの函数などを呼び出すためのパッケージで，Optuna以外のPythonパッケージにも使用可能です．
本記事はPythonCall.jlの...]]></description><link>https://zenn.dev/ultimatile/articles/pythoncall-julia-optuna</link><guid isPermaLink="true">https://zenn.dev/ultimatile/articles/pythoncall-julia-optuna</guid><pubDate>Sun, 26 Jan 2025 16:43:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N7YWjo07--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PythonCall.jl%25E3%2581%25A7Julia%25E3%2581%258B%25E3%2582%2589Optuna%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ultimatile%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwYzIwNmEzMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ultimatile</dc:creator></item><item><title><![CDATA[sparkの計算結果に再現性が無く嵌った話(dropDuplicates)]]></title><description><![CDATA[
 結論
dropDuplicatesを使うと結果に対して再現性がなくなるので注意が必要。

 詳細
Dropduplicatesは重複を無くす列をした際に、どの行を残すかはランダムになります。
また、pandasのdrop_duplicatesと異なり、「先頭を残す」等のオプションはありません。
（理由の記述はなかったのですが、各nodeに散った各情報を集計するのは spark上は大変なのでしょうか？）

 サンプルコード
from pyspark.sql import functions as F

data = [
    (1, "value_1a"),
    (1, "val...]]></description><link>https://zenn.dev/hirayuki/articles/db0abada8c380f</link><guid isPermaLink="true">https://zenn.dev/hirayuki/articles/db0abada8c380f</guid><pubDate>Sun, 26 Jan 2025 15:43:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fc3QO76---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:spark%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AB%25E5%2586%258D%25E7%258F%25BE%25E6%2580%25A7%25E3%2581%258C%25E7%2584%25A1%25E3%2581%258F%25E5%25B5%258C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2528dropDuplicates%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hirayuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYmU5ZDM0OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hirayuki</dc:creator></item><item><title><![CDATA[pytestユースケースまとめてみた]]></title><description><![CDATA[
 きっかけ
社内勉強会リクエストがあったのでまとめてたんですが、これ普通に忘備録として記事にしといてもいんじゃねと思って書きました。

 すぐ動確したい人向け
以下参考ください。
https://github.com/akki-F/pytest-handson.git
※vscodeによるdevconainerを使用しています。

 1. 基本的な3Aパターンと例外テスト

 基本的な3Aパターン

 概要
3Aパターンは、テストコードを構造化するための基本的なパターン。

Arrange: テストの準備
Act: テスト対象の実行
Assert: 結果の検証


 コード例
http...]]></description><link>https://zenn.dev/akkif/articles/778228586020f6</link><guid isPermaLink="true">https://zenn.dev/akkif/articles/778228586020f6</guid><pubDate>Sun, 26 Jan 2025 14:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rROdzwGv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pytest%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akkif%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjgyZTcwMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akkif</dc:creator></item></channel></rss>