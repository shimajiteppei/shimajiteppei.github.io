<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 26 Apr 2025 01:37:05 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Djangoのチュートリアルをやってみた感想]]></title><description><![CDATA[Djangoのチュートリアルを一通りやってみたので、感想を書ます。
なお、pythonの仮想環境はuvを使用しました。

 良かった点

 データベースの扱い
データベースの扱いがとても楽でした。
クラスを作成して、appとして登録してマイグレーションコマンド打つ。
これだけでデータモデルを作れる手軽さに感動しました。

 adminページが多機能
最初にDjangoのプロジェクトを作成した際に、adminページが出来上がっているのが良かったです。
フィールド追加などのカスタマイズも簡単だったので、データの管理はやりやすそうでした。

 驚いた点

 ディレクトリ構成がえ？ってなる
今回...]]></description><link>https://zenn.dev/yut_wq/articles/c1dbc4b6599ad4</link><guid isPermaLink="true">https://zenn.dev/yut_wq/articles/c1dbc4b6599ad4</guid><pubDate>Sat, 26 Apr 2025 01:32:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ytQ5RsjH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YT%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHhoaTdpLUpwaHdzY21VRFRSMGh0ZzFGd1ZXMDA1S3IyeV9RVzZFWXZNNEU2YndxVjg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YT</dc:creator></item><item><title><![CDATA[PythonでロードバイクのFITファイルを分析・可視化する]]></title><description><![CDATA[こんにちは！ロードバイクに乗る皆さん、日々の走行データ、どう活用していますか？ Garmin Connect や Strava などのサービスも素晴らしいですが、「自分でデータをいじってみたい！」「もっと自由に分析したい！」と思ったことはありませんか？
この記事では、Pythonを使ってロードバイクの走行データ（FITファイル）を読み込み、基本的な情報を分析・視覚化する方法を解説します。プログラミングで、あなたのサイクリングライフをもっと豊かにしてみませんか。

 この記事を読むとできるようになること:
• FITファイルから走行データをPythonで読み込む方法
• pandas を使...]]></description><link>https://zenn.dev/pincolo/articles/620b1c793cf69d</link><guid isPermaLink="true">https://zenn.dev/pincolo/articles/620b1c793cf69d</guid><pubDate>Fri, 25 Apr 2025 19:15:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KiIJlVQW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%25AEFIT%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%2588%2586%25E6%259E%2590%25E3%2583%25BB%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMmRjOWM3YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピンコロ</dc:creator></item><item><title><![CDATA[AI系のコーディング基礎的お作法まとめ]]></title><description><![CDATA[!
これは知っておこうね、という初学者向けの駄文です。


 「美しい」コード
一般に、「美しさ」には主観が多分に含まれる。芸術作品であるとか、俳優さん女優さんに対して使う場合は特にそうだろう。しかし、こと数学の証明だとかコーディングといったものに対して使用される場合、そうしたものたちは基本的に一定のルールに従っていることがほとんどだ。

 「美しい」コードとはどんなもの？
美しいコードは読みやすい。
どのファイルにどの機能の関数があるか分かりやすく、保守性が高い。
そうであるから、1週間後・1ヶ月後の自分がみてもすぐその内容を思い出せるし、何より他人に見せても恥ずかしくない。

 「美...]]></description><link>https://zenn.dev/tsei/articles/9ddaf42d187b3b</link><guid isPermaLink="true">https://zenn.dev/tsei/articles/9ddaf42d187b3b</guid><pubDate>Fri, 25 Apr 2025 14:40:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hzjZ3ijN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E7%25B3%25BB%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%258A%25E4%25BD%259C%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:T_Tsei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViNGY0ZWI3MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>T_Tsei</dc:creator></item><item><title><![CDATA[感想文という名のAIコーディングの進化]]></title><description><![CDATA[#女子大学生がチャットGPT使って百日毎日アプリの制作チャレンジしたらエンジニア就職できた話
https://www.amazon.co.jp/dp/4296071068?ref=ppx_yo2ov_dt_b_fed_asin_title
テーマはAIコーディングについてだ、書籍のコーディングで使ってるチャットGPTが二年前のもので私が三時間程度で作ったオセロと比較する。
コード見ないと確実に言えないがクオリティは私のオセロ方が高い、これは私の性能よりもチャットGPTやGeminiの性能差だろう。加えて私がいきなりAIコーディングをするのでなくプロゲートやら書籍で「勉強」してる点も大きな...]]></description><link>https://zenn.dev/rurihari/articles/8d19480b4b49a1</link><guid isPermaLink="true">https://zenn.dev/rurihari/articles/8d19480b4b49a1</guid><pubDate>Fri, 25 Apr 2025 14:39:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f0oj0rxQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2584%259F%25E6%2583%25B3%25E6%2596%2587%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E5%2590%258D%25E3%2581%25AEAI%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:python%25EF%25BC%2590%25E5%25B9%25B4%25E7%2594%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXpKNW1OZU91aWhfWjI2V0VnZ096QTZPZGhBd09raHByUjJMNjFzTnRoVnpvVVloRDNUQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>python０年生</dc:creator></item><item><title><![CDATA[Git操作ミスで消えたLLM連携コードの復旧（開発日記 No.056）]]></title><description><![CDATA[!
この記事はgemini-2.5-pro-exp-03-25によって自動生成されています。


 関連リンク

前回の開発日記


 はじめに
昨日は、note API経由での記事投稿を断念し、開発日記をMarkdownファイルとして生成・保存する方針に切り替えました。関連するコードの修正や不要ファイルの削除を行い、新しいフローの準備を進めました。
今日はこの新しい方針に基づき、システム全体の動作を確認し、完成に向けて必要な作業を進めていきます。まずはEnd-to-End (E2E) テストから始めることにしました。

 背景と目的
新しい方針では、開発日記のMarkdownファイルを...]]></description><link>https://zenn.dev/centervil/articles/2025-04-25_056_dev-diary</link><guid isPermaLink="true">https://zenn.dev/centervil/articles/2025-04-25_056_dev-diary</guid><pubDate>Fri, 25 Apr 2025 09:34:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qa4ai3ey--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Git%25E6%2593%258D%25E4%25BD%259C%25E3%2583%259F%25E3%2582%25B9%25E3%2581%25A7%25E6%25B6%2588%25E3%2581%2588%25E3%2581%259FLLM%25E9%2580%25A3%25E6%2590%25BA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%25BE%25A9%25E6%2597%25A7%25EF%25BC%2588%25E9%2596%258B%25E7%2599%25BA%25E6%2597%25A5%25E8%25A8%2598%2520No.056%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:centervil%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YlVZNXZiN0NvbG1TN0tPQmhqQ2M5V3lIRXYwVVhwZ2YyY2wxYTc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>centervil</dc:creator></item><item><title><![CDATA[【Python】回帰分析とは何か？]]></title><description><![CDATA[回帰分析は、データの中から関係性を見つけ出す統計手法です。
今回は、初心者にもわかりやすく回帰分析の基本を説明します。

 回帰分析とは？
回帰分析とは、あるデータ（説明変数）から別のデータ（目的変数）を予測するための手法です。
たとえば、勉強時間から試験の点数を予測したり、広告費から売上を予測したりする時に使います。
データ間の関係を数式で表すことで、未来の予測ができるようになります。

 なぜ回帰分析が役立つのか？
回帰分析を使うと、以下のようなことができるようになります：

データ間の関係性を理解できる
将来の値を予測できる
どの要素が結果に大きく影響しているかを知ることができる
...]]></description><link>https://zenn.dev/hovinci/articles/d7a2a9feddc8b2</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/d7a2a9feddc8b2</guid><pubDate>Fri, 25 Apr 2025 02:47:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ml_EYXAx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E5%259B%259E%25E5%25B8%25B0%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[【OpenAI】Batch APIでコストを抑えて大量処理する]]></title><description><![CDATA[
 Batch API

OpenAIのBatch APIは、非同期で大量のリクエストをまとめて送ることができるAPIです。
処理結果がすぐに返ってこない代わりに、費用が半額ほどに抑えられるので、大量に処理したい &amp; 急ぎではない といった場面では使用しています。



項目
内容




入力ファイルサイズ上限
200MB


リクエスト数上限
50,000件


対応エンドポイント

/v1/chat/completions/v1/embeddings/v1/completions/v1/responses



処理時間
最大24時間


出力保持期限
30日間





...]]></description><link>https://zenn.dev/buenotheebiten/articles/2be9dfb974b51f</link><guid isPermaLink="true">https://zenn.dev/buenotheebiten/articles/2be9dfb974b51f</guid><pubDate>Fri, 25 Apr 2025 02:11:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2aUaQnp1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OpenAI%25E3%2580%2591Batch%2520API%25E3%2581%25A7%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2581%25A6%25E5%25A4%25A7%25E9%2587%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25B3%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmsxNTdHd0N1cnllbWI1dnp5OGNKQkh6cTRTZ0JnOE9yempFREp5UG56ZUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えびてん</dc:creator></item><item><title><![CDATA[開発チーム・AIチーム間のシステム境界と責任境界について]]></title><description><![CDATA[
 はじめに
こんにちは。AI Shift バックエンドエンジニアの木村です。
私たちのプロダクトでは開発チーム（フロント、バック、インフラ）とAIチーム（自然言語処理、音声対話など）が共同して開発しています。
開発プロセスの中で開発チームのバックエンドエンジニアとAIチームが連携することが多く、その中で感じた課題や改善案、実際に現在行なっていることをまとめてみました。

 背景と目的
私たちのプロダクトは音声対話に関わるプロダクトで、AIチームの専門性とバックエンドエンジニアの専門性をどう効率よく連携させるかという課題がありました。
それまで2パターンの連携方法を試していました。


...]]></description><link>https://zenn.dev/aishift/articles/e58916ba5dd7c7</link><guid isPermaLink="true">https://zenn.dev/aishift/articles/e58916ba5dd7c7</guid><pubDate>Fri, 25 Apr 2025 00:01:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4frxD5WU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25BBAI%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%2593%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E5%25A2%2583%25E7%2595%258C%25E3%2581%25A8%25E8%25B2%25AC%25E4%25BB%25BB%25E5%25A2%2583%25E7%2595%258C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kamiru%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNDQwNmNlMGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AI%2520Shift%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlN2EyZjUwMzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kamiru</dc:creator></item><item><title><![CDATA[FastAPI × SupabaseでSNSデータを安全に保存する構成を作った話]]></title><description><![CDATA[
 FastAPI × SupabaseでSNSデータを安全に保存する構成を作った話
Vue × FastAPIでSNSダッシュボードを作っていたとき、ふとこんな疑問が。
「あれ、このデータ、アプリ閉じたら全部消えるんじゃ……？」
最初はローカルメモリで管理していたSNSのKPIデータですが、蓄積してこそ意味がある！と思い立ち、Supabase × FastAPIでの永続化に挑戦してみました。
この記事では、


SupabaseとFastAPIの接続方法


テーブル設計とRLS（Row Level Security）対応


JWTとの連携ポイント


つまずいた実装トラブル
をまと...]]></description><link>https://zenn.dev/tfuji/articles/c3c8976d4daa68</link><guid isPermaLink="true">https://zenn.dev/tfuji/articles/c3c8976d4daa68</guid><pubDate>Thu, 24 Apr 2025 23:52:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CcllA3Ta--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25C3%2597%2520Supabase%25E3%2581%25A7SNS%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMjVlOTIxMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>メープルシロップ</dc:creator></item><item><title><![CDATA[FastAPI-MCPで任意のツール名を設定する]]></title><description><![CDATA[前回はFastAPI‐MCPを使って初めてのMCPサーバーを構築しました。
https://zenn.dev/kmiura55/articles/fastapi-mcp-starting
で、この記事があまりにもバズってしまい今まで書いた記事の中で一番ファボがついていましたｗ
これでMCPを完全理解した！ということで、自分でもMCPを使ったアプリケーションを実装していましたが、その中で詰まったことを小ネタ的に紹介します。

 きっかけ
本格的に複数のエンドポイントを用意してからMCPサーバーを起動して、Claude Desktopと接続すると以下のエラーが出ました。

どうやらClaud...]]></description><link>https://zenn.dev/kmiura55/articles/fastapi-mcp-tool-name</link><guid isPermaLink="true">https://zenn.dev/kmiura55/articles/fastapi-mcp-tool-name</guid><pubDate>Thu, 24 Apr 2025 16:39:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LB31O0A4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI-MCP%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E5%2590%258D%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KMiura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlZjZkNWJmMGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KMiura</dc:creator></item><item><title><![CDATA[【Python／Tkinter】新た(？)なGUIデザイナー「Gluonix Designer」]]></title><description><![CDATA[
 Tkinterを視覚的に
https://github.com/nucleonautomation/Gluonix-Designer
Gluonix Designerとは、Tkinterの「GUIデザイナー」です。文字を連ねて画面を作る方法が主であるTkinterですが、GUIデザイナーを使えば、視覚的な操作によって画面を作ることができます。画面をコードで記述する労力が低減されるでしょう。
TkinterのGUIデザイナーにはPAGEというものもありますが、使い勝手は異なるものになります。選択肢が増えるというのはなんと好いことでありましょう。

Gluonix Designer使用イ...]]></description><link>https://zenn.dev/amenaruya/articles/65348e5cf93ff0</link><guid isPermaLink="true">https://zenn.dev/amenaruya/articles/65348e5cf93ff0</guid><pubDate>Thu, 24 Apr 2025 16:04:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2PKFTQFX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25EF%25BC%258FTkinter%25E3%2580%2591%25E6%2596%25B0%25E3%2581%259F%2528%25EF%25BC%259F%2529%25E3%2581%25AAGUI%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2580%258CGluonix%2520Designer%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:amenaruya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwZDg5YWZmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>amenaruya</dc:creator></item><item><title><![CDATA[【AtCoder解説】ABC081B - Shift Only を解いた記録]]></title><description><![CDATA[本記事は、AtCoder の問題を解いて得た知見を記録するための学習ログです。
毎回1問ずつ、「何を考えて解いたか」「どう実装したか」「学んだこと」を簡単にまとめていきます。

 問題概要
奇数になるまで2でわる問題

 解放とコード
n =input()
s = [*map(int, input().split())]
count = 0
while True:
  for i in range(len(s)):
    if s[i] % 2 == 1:
      break
    s[i] = int(s[i] / 2)
  else:
    count += 1
    c...]]></description><link>https://zenn.dev/miso_devlog/articles/28841d9f1324b2</link><guid isPermaLink="true">https://zenn.dev/miso_devlog/articles/28841d9f1324b2</guid><pubDate>Thu, 24 Apr 2025 13:55:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nWg5m5yf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AtCoder%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591ABC081B%2520-%2520Shift%2520Only%2520%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%259D%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzFzVnc2Q3E5c3hNZWg4NDNBY2FyYnBOTDNJWUhhT3ZRQXFGTi1Qb21wRUpBeTB3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みそログ</dc:creator></item><item><title><![CDATA[Python アルゴリズム学習 Day 3：線形探索アルゴリズムの計算量分析（実践編）]]></title><description><![CDATA[
 はじめに
前回の記事では「Big O 記法の基礎」として、アルゴリズムの効率性を評価するための理論的な概念について学習しました。今回は「線形探索アルゴリズムの計算量分析」として、理論だけでなく実際に手を動かして計算量を測定し、理解を深めていきます。
本記事の完全なソースコードはgithub リポジトリを参照してください。

 線形探索アルゴリズムの計算量とは
線形探索は、配列の先頭から順番に要素を調べていき、目的の値を探すシンプルなアルゴリズムです。その計算量は以下のように特徴づけられます：


最良のケース (Best Case)

目的の要素が配列の先頭にある場合
比較回数: 1...]]></description><link>https://zenn.dev/kenchang198/articles/b02a13ae57a6fc</link><guid isPermaLink="true">https://zenn.dev/kenchang198/articles/b02a13ae57a6fc</guid><pubDate>Thu, 24 Apr 2025 10:23:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--08dF-0ps--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E5%25AD%25A6%25E7%25BF%2592%2520Day%25203%25EF%25BC%259A%25E7%25B7%259A%25E5%25BD%25A2%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E9%2587%258F%25E5%2588%2586%25E6%259E%2590%25EF%25BC%2588%25E5%25AE%259F%25E8%25B7%25B5%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kenchang198%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZTc2ODBmZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kenchang198</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-401｜B - Unauthorized]]></title><description><![CDATA[
 設問ページ

🔗ABC-401 B - Unauthorized



 提出結果
def getInt():
    return int(input())


def getStringRow(N):
    return [input() for _ in range(N)]


def main():
    N = getInt()
    S = getStringRow(N)

    stat = 0
    error = 0
    for a in S:
        if a == "login":
            stat = 1
        ...]]></description><link>https://zenn.dev/hyperdb/articles/429434122e0c0a</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/429434122e0c0a</guid><pubDate>Thu, 24 Apr 2025 09:05:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tiLun3Ur--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-401%25EF%25BD%259CB%2520-%2520Unauthorized%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-401｜A - Status Code]]></title><description><![CDATA[
 設問ページ

🔗ABC-401 A - Status Code



 提出結果
def getString():
    return input()


def main():
    S = getString()

    print("Success" if 200 &lt;= int(S) &lt;= 299 else "Failure")


if __name__ == "__main__":
    main()
``
]]></description><link>https://zenn.dev/hyperdb/articles/1a23fd626da2f7</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/1a23fd626da2f7</guid><pubDate>Thu, 24 Apr 2025 09:05:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---KB08vPF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-401%25EF%25BD%259CA%2520-%2520Status%2520Code%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[【Python】WSLでPythonのグラフを表示しようとしたときのエラー（DISPLAY環境変数）]]></title><description><![CDATA[今日は、WindowsのWSL（Windows Subsystem for Linux）でPythonプログラムを動かしていて、グラフを表示しようとしたときに出たエラーについてお話しします。

 どんな問題が起きたのか？
WindowsでXLaunchというソフトを使って、WSL上でPythonのmatplotlibというグラフを描くライブラリを使ったプログラムを動かそうとすると、こんなエラーが出ました：
Exception: couldn't connect to display "10.255.255.254:0.0"
これは、「画面に表示しようとしたけど、表示する場所（ディスプレイ...]]></description><link>https://zenn.dev/hovinci/articles/fcb075c6f39b6d</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/fcb075c6f39b6d</guid><pubDate>Thu, 24 Apr 2025 03:43:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ha_Stk4j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591WSL%25E3%2581%25A7Python%25E3%2581%25AE%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25EF%25BC%2588DISPLAY%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[ArchivematicaのPreservation planningにおいて、Normalizationのルールを追加する]]></title><description><![CDATA[
 概要
ArchivematicaのPreservation planningにおいて、Normalizationのルールを追加する方法の備忘録です。

 背景
拡張子が.jpgである画像をArchivematicaに投入した際、以下のようにFormatがJPEGのものに対してtifファイルを保存用に作成するルールを用意しているにもかかわらず、tifファイルが作成されないことがありました。

そこで、以下のような履歴の画面から、タスクの内容を確認しました。

結果は以下です。

具体的には以下のような記載になっており、該当するルールが存在しない、ということが記載されています。
File...]]></description><link>https://zenn.dev/nakamura196/articles/f0a1ce3481c9a7</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/f0a1ce3481c9a7</guid><pubDate>Wed, 23 Apr 2025 23:31:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qAFIq2FZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Archivematica%25E3%2581%25AEPreservation%2520planning%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581Normalization%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[AWS CDK Python × uv × Docker で実現する複数の Lambda Function の Monorepo 管理]]></title><description><![CDATA[
 はじめに
色々なツールを AWS Lambda で作り、各ツールのコードを管理するリポジトリの数がどんどん増えてきた時に思いました。「そうだ Monorepo しよう。」
そんな中、Python のパッケージ管理ツールで「uv がアツい」という噂を聞いた時に思いました。「そうだ uv 使おう。」
AWS CDK も Python を使えば、インフラからアプリケーションコードまで全て Python で統一できると気づいた時に思いました。「そうだ インフラからアプリコードまで全部 Monorepo にして uv で管理しよう。」
このブログでは、実際にやってみて実現できた方法をシェアしま...]]></description><link>https://zenn.dev/where/articles/f2fc3caf93ec6c</link><guid isPermaLink="true">https://zenn.dev/where/articles/f2fc3caf93ec6c</guid><pubDate>Wed, 23 Apr 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lh3vSaym--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520Python%2520%25C3%2597%2520uv%2520%25C3%2597%2520Docker%2520%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%2520Lambda%2520Function%2520%25E3%2581%25AE%2520M...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yendoooo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1ZThlODg2OTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Penetrator%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1pIMi0wVWlCN2lZaUJidUZiN3lYVlU2YnRrdFJvb09WY3RVU3BiazBITHRtNlA4ZFo9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yendoooo</dc:creator></item><item><title><![CDATA[FastAPI × JWTで認証付きAPIを作ってVueとつないだ話]]></title><description><![CDATA[
 FastAPI × JWTで認証付きAPIを作ってVueとつないだ話

 🔹 1. 導入文（エピソード）
最近、近所のパン屋さんで顔なじみの店員さんができた。
最初は「毎朝同じ時間にクロワッサン買う人」として認識されてたっぽいんだけど、ある日ついに言われた。

「いつもこの時間ですね！常連さんですね☺️」

それを聞いてふと思った。
「“認証”って、こういうことかもな」と。

Web開発では、「誰がアクセスしてるか？」を識別する仕組みがとても大事で、それを担うのが**認証（Authentication）**という仕組み。
最近、SNSのフォロワーを可視化するダッシュボードをVue +...]]></description><link>https://zenn.dev/tfuji/articles/1a7e11aa3d7a65</link><guid isPermaLink="true">https://zenn.dev/tfuji/articles/1a7e11aa3d7a65</guid><pubDate>Wed, 23 Apr 2025 22:45:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pJk_YG2p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25C3%2597%2520JWT%25E3%2581%25A7%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258DAPI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6Vue%25E3%2581%25A8%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A0%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMjVlOTIxMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>メープルシロップ</dc:creator></item><item><title><![CDATA[DockerでDjangoを構築しよう]]></title><description><![CDATA[Dockerは今や効率的な開発や安定する本番環境の構築に欠かせない技術となってきました。
そこで、今回はDockerを使ってアプリ開発をしていきます。
身につければ効率的な環境構築ができるので今のうちに身につけておきましょう！
noteでも記事を書いてます！
https://note.com/kenquichi

 Dockerとは？
Dockerはコンテナ型仮想環境用のプラットフォームで、軽量で高速に動作します。

 Dockerの概要
DockerではPythonやPostgresqlなどのリソースがまとめられたパッケージをコンテナと呼び、それらを組み合わせることでアプリを構築できま...]]></description><link>https://zenn.dev/headwaters/articles/0ff2e65239546d</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/0ff2e65239546d</guid><pubDate>Wed, 23 Apr 2025 13:57:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YTBPjWR7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Django%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25B1%25E3%2583%25B3%25E5%2590%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTlSRFk5eEFXaDBwVGgyZnNJX0w2VnFXZmFfYWR4NG9Oc1JhQ1BVV3hkenNGa3hDLW49czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ケン吉</dc:creator></item></channel></rss>