<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 17 Jan 2025 06:42:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ZorinOSにnvidiaのドライバを入れる]]></title><description><![CDATA[
 実はデフォで入ってる
ZorinOSはデフォルトでNVIDIAのドライバが入っています。
しかしながら、私はプリインストールを信用していない!!のと最新ではないので手動でインスコしていこう。

 諸々の確認

cat os-release
PRETTY_NAME="Zorin OS 17.2"
NAME="Zorin OS"
VERSION_ID="17"
VERSION="17.2"
VERSION_CODENAME=jammy
ID=zorin
ID_LIKE="ubuntu debian"
HOME_URL="https://zorin.com/os/"
SUPPORT_URL...]]></description><link>https://zenn.dev/ziaensochan/articles/dc1138d96f6472</link><guid isPermaLink="true">https://zenn.dev/ziaensochan/articles/dc1138d96f6472</guid><pubDate>Thu, 16 Jan 2025 17:26:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5OD8Q5oY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ZorinOS%25E3%2581%25ABnvidia%25E3%2581%25AE%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2590%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:samenoko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwMTk3ZDBkN2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>samenoko</dc:creator></item><item><title><![CDATA[WindowsからLinuxサーバーをコマンドで操作！]]></title><description><![CDATA[今回は、WindowsのPowerShellからLinuxサーバーのコマンドを実行し、
サーバーを再起動する方法を解説します。
この記事では、特に自動化にフォーカスし、
再起動時のパスワード入力を不要にする設定や
公開鍵認証の設定方法をわかりやすく説明します。

 手順の概要

sudoコマンド実行時のパスワード入力を不要にする
SSH接続を公開鍵認証にする
PowerShellスクリプトを作成する


 ①sudoコマンド実行時のパスワード入力を不要にする
Linuxサーバーで sudo を使用する場合、
通常はパスワードが求められます。
しかし、自動化ではこれを避ける必要があります。...]]></description><link>https://zenn.dev/subqru/articles/4e48c8532a1289</link><guid isPermaLink="true">https://zenn.dev/subqru/articles/4e48c8532a1289</guid><pubDate>Thu, 16 Jan 2025 13:23:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Jq6apzkx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%258B%25E3%2582%2589Linux%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7%25E6%2593%258D%25E4%25BD%259C%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:subqru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxMWZiZGJiODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>subqru</dc:creator></item><item><title><![CDATA[Dockerでlinuxの勉強のための環境を構築する方法]]></title><description><![CDATA[
 はじめに
linuxのペンギンが可愛いので、linuxの勉強を始めたみなさんこんにちは。
この記事ではlinuxの勉強のための環境をDockerを用いて構築する方法を紹介します。

 対象読者

linuxの勉強をしたい方
Dockerを使ってみたい方
linuxのペンギンが好きな方


 結論

docker-compose.yaml
version: '3.8'

services:
  rocky-linux:
    image: rockylinux:9
    container_name: rocky-linux-container
    ports:
      -...]]></description><link>https://zenn.dev/09250852/articles/c259cf4a365001</link><guid isPermaLink="true">https://zenn.dev/09250852/articles/c259cf4a365001</guid><pubDate>Wed, 15 Jan 2025 13:25:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CzCj1m-v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7linux%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2FmNDgwMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とつ</dc:creator></item><item><title><![CDATA[Yoctoでパッチを作成する]]></title><description><![CDATA[Yoctoでパッチを充てるレシピを作ったときに少しはまったのでメモ。
自分でパッチを作成するときの手順です。作ろうとしたときに少し戸惑ったのでメモ。

パッチを充てる
以下のコマンドを実行します。使用されるソースが展開されます。この時、ほかにパッチを充てるレシピがあればそのパッチが適用された状態で展開されます。

bitbake  &lt;package名&gt; -c devshell

ソースの修正
次に展開されたソースに修正を加えます。
加えたらコミットします。

git add .
git commit -m "コメント"

パッチの作成
コミットしたらpatchファイルを以下の...]]></description><link>https://zenn.dev/kobayutapon/articles/bbb2a1db670c6a</link><guid isPermaLink="true">https://zenn.dev/kobayutapon/articles/bbb2a1db670c6a</guid><pubDate>Wed, 15 Jan 2025 12:29:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jWNTiYZC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Yocto%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2583%25E3%2583%2581%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%2590%25E3%2583%25A6%25E3%2582%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2J6SVJNTHZLREJYd0NFYUQyaDctMktyYk9rU3F5NjNLSWtodEk3UzlMQmZvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>コバユタ</dc:creator></item><item><title><![CDATA[EC2インスタンスにPingが通らず疎通確認ができない時の対処法]]></title><description><![CDATA[
 はじめに
こんにちは。今回は、AWSのLinux EC2インスタンスにPingを試みた際に疎通確認ができず、その原因と解決方法について記載します。

 背景
サーバーへの疎通確認をする際にpingコマンドを利用することはよくあると思います。AWSでLinuxのインスタンスを立てた際に例の如く試してみたのですが、残念ながらPingが通りませんでした。
ping ec2-54-199-142-193.ap-northeast-1.compute.amazonaws.com
PING ec2-54-199-142-193.ap-northeast-1.compute.amazonaws.c...]]></description><link>https://zenn.dev/yu_shi/articles/f4c73b5b975521</link><guid isPermaLink="true">https://zenn.dev/yu_shi/articles/f4c73b5b975521</guid><pubDate>Wed, 15 Jan 2025 08:44:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gg-hpcfy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:EC2%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25ABPing%25E3%2581%258C%25E9%2580%259A%25E3%2582%2589%25E3%2581%259A%25E7%2596%258E%25E9%2580%259A%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYjE3YTcwYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆうし</dc:creator></item><item><title><![CDATA[LinuC Level1を取ったよログ]]></title><description><![CDATA[
 1. はじめに

文系でIT関連の専門教育を受けていないので、おさらいも兼ねてLinuCを受験したログ

バックエンドはLaravel、フロントはReactを触ることが多い
必要に応じてAWSのインフラ含めて構築したり...
業務でDockerを使っているのでLinuxに触れてはいるが、よく使うコマンド以外はあまり知らないので苦手意識がある




 2. LinuC101とLinuC102について

主にLinux関連の基礎知識が問われる試験
LinuC Level1を取得するには、101と102の両方に受かる必要がある


101: Linuxの基本操作、システムアーキテクチャ、...]]></description><link>https://zenn.dev/watarunakayama/articles/f66cedd85b9620</link><guid isPermaLink="true">https://zenn.dev/watarunakayama/articles/f66cedd85b9620</guid><pubDate>Wed, 15 Jan 2025 04:07:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xklLjxVe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LinuC%2520Level1%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%25E3%2583%25AD%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvdy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru</dc:creator></item><item><title><![CDATA[ローカルから GitLab に SSH 接続する方法]]></title><description><![CDATA[ローカル環境から GitLab に SSH 接続する方法を解説します。想定環境は Linux です。

 まずは公式ドキュメントを確認

GitLab の公式ドキュメントには、SSH 接続の手順が詳細に記載されています。困ったときは、以下のリンクを参考にしてください。
Use SSH keys to communicate with GitLab | GitLab
ただし、公式ドキュメントは非常に詳細で、すべての情報が必要とは限りません。本記事では、「ローカルから GitLab に SSH 接続する」という目標に必要な手順だけを簡潔に説明します。

 手順


 1. git confi...]]></description><link>https://zenn.dev/hagifly/articles/ed17a7f71c5970</link><guid isPermaLink="true">https://zenn.dev/hagifly/articles/ed17a7f71c5970</guid><pubDate>Wed, 15 Jan 2025 03:34:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yxDn-H0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%2520GitLab%2520%25E3%2581%25AB%2520SSH%2520%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Asher%2520Ishikawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjFlNzZlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Asher Ishikawa</dc:creator></item><item><title><![CDATA[Starship で使う Nerd Fonts のアイコンフォントを調べる方法]]></title><description><![CDATA[
 はじめに
この記事では、Starship などの Powerline 系プロンプトをカスタマイズするときに使う Nerd Fonts のアイコンフォントを調べる方法について解説します。
例として、Starship を使ってプロンプト表示をカスタマイズしたものが次の図になります。いろいろなアイコンフォントがあったので試しに表示してみたものです。

Nerd Fonts を使ったプロンプト
なお、色付きの絵文字は Nerd Fonts 以外のフォントでも対応しているものです。色がついていないものは Nerd Fonts がインストールされた環境でないと正しく表示されません。
ちなみに、こ...]]></description><link>https://zenn.dev/hiro345/articles/20250114_starship</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250114_starship</guid><pubDate>Tue, 14 Jan 2025 10:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wTiPPUEE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Starship%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2520Nerd%2520Fonts%2520%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[AIエディター Cursor を Ubuntu 24.04にインストール]]></title><description><![CDATA[参考サイトです
https://dev.to/mhbaando/how-to-install-cursor-the-ai-editor-on-linux-41dm

 1. Cursorをダウンロード
https://www.cursor.com/

 2. libfuse2をインストール
sudo apt-get install libfuse2
他のディストリビューションだとこの行程は必要ないとか(確認していません)。
Ubuntuでは「Fuse」が非推奨なため「libfuse2」をインストールします。

 3. 権限を変更
バージョンは自分がダウンロードしたものに替えてください。
...]]></description><link>https://zenn.dev/mizki/articles/36535a1b75ab81</link><guid isPermaLink="true">https://zenn.dev/mizki/articles/36535a1b75ab81</guid><pubDate>Mon, 13 Jan 2025 14:35:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wZxQskPi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%25BC%2520Cursor%2520%25E3%2582%2592%2520Ubuntu%252024.04%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:WaterWood%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MF90R0d6NnBqR3I2bEdrMS1pZTUtOGRnTmZLU2Zra0dOXzcxYWxzZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>WaterWood</dc:creator></item><item><title><![CDATA[変なオタクPCたち]]></title><description><![CDATA[
 概要
私はガジェットオタクではないのですが、逆張りオタクなので他人と違うものを使うのは結構好きです。
本記事では、MacBookなんて使ってられんというかわいそうな人たちが興味を持つかもしれない製品たちを紹介します。
ちなみに、全部買って検証したわけではないので安全性は保証しません。

 紹介

 Framework
まずは有名どこから。パーツが送られてきてそれを自分で組み立てるプラモみたいなPCです。
各種ポートとかもバラで売ってるので、自分で好きに付けたり外したりできます。
https://frame.work/

 StarLabs systems
これも割と有名どこ。Linu...]]></description><link>https://zenn.dev/sum3sh1/articles/df47c74423f227</link><guid isPermaLink="true">https://zenn.dev/sum3sh1/articles/df47c74423f227</guid><pubDate>Mon, 13 Jan 2025 13:47:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eTB5bjt9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%2589%25E3%2581%25AA%25E3%2582%25AA%25E3%2582%25BF%25E3%2582%25AFPC%25E3%2581%259F%25E3%2581%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumeshi_kun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwM2EzNzkyNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumeshi_kun</dc:creator></item><item><title><![CDATA[nixosのwslで vscode remote-wsl を起動する]]></title><description><![CDATA[皆さんnixは使っていますか。
!
nix-community/nixos-vscode-serverによると WSL supportはまだ完全には機能していないようです。


 NixOSとは
Nixは他のディストリビューションと異なった特徴を持っているOSです。
まずパッケージをインストールするには、コードを書いて実行する必要があります。
Linuxを作るうえで大切な home directoryの内容やsystemdの管理もコードから定義できます。

 コードとして管理されるOSのメリットとして

どの環境でも同じ環境を再現することができます。
nixosを理解している前提になりま...]]></description><link>https://zenn.dev/tositada/articles/dd0645b5f35beb</link><guid isPermaLink="true">https://zenn.dev/tositada/articles/dd0645b5f35beb</guid><pubDate>Mon, 13 Jan 2025 07:46:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--saJ4GPty--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nixos%25E3%2581%25AEwsl%25E3%2581%25A7%2520vscode%2520remote-wsl%2520%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tositada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqd1FPYmhFZkxNaTVBMnBxQnZ5Wmgzbi1jVXVIZnhleXdvaHJIb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tositada</dc:creator></item><item><title><![CDATA[CentOS Stream 10 で KDE Plasma 6 を利用する]]></title><description><![CDATA[
 1. インストールメディアの入手
CentOS Stream 10 x64 向けはこの辺からダウンロード
823M くらいのでよい。
https://mirror.stream.centos.org/10-stream/BaseOS/x86_64/iso/


 2. Minimal Install
CentOS Stream 10 をインストール
インストール時の画面遷移は省く
Minimal Install を選択


 3. EPEL の導入
インストール完了後、CLIでログインする。
元情報 Getting Started with EPEL
https://docs.fed...]]></description><link>https://zenn.dev/yodoy/articles/f3d83b142aba35</link><guid isPermaLink="true">https://zenn.dev/yodoy/articles/f3d83b142aba35</guid><pubDate>Sun, 12 Jan 2025 15:46:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YHcSL64R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CentOS%2520Stream%252010%2520%25E3%2581%25A7%2520KDE%2520Plasma%25206%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ZmU5YzVmZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よど</dc:creator></item><item><title><![CDATA[Snapの作り方]]></title><description><![CDATA[
 初めに

本記事では、Snapパッケージの作り方について紹介します。
"Hello World!"と出力するhello.shをSnapでパッケージングして実行します。


 実行環境

本記事ではWSLを使用します。
　- Ubuntu20.04


 事前準備

Snapcraftをインストールします。

$ sudo apt install snapcraft

 snapcraft.yamlの作成

Snapcraftのインストールが完了したら、作業用のディレクトリを作成して、snapcraft.yamlを生成します。

$ mkdir workspace
$ cd works...]]></description><link>https://zenn.dev/matsuo_1938/articles/a23f9ca728d625</link><guid isPermaLink="true">https://zenn.dev/matsuo_1938/articles/a23f9ca728d625</guid><pubDate>Sun, 12 Jan 2025 02:01:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0YA4H9zO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Snap%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4YWZlN2NhNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Matsuo</dc:creator></item><item><title><![CDATA[AppImageを自前で作る方法]]></title><description><![CDATA[
 はじめに
本記事ではAppImageを自前で作る方法について初歩的な箇所を記載します。
AppImageとは、Linuxで単一のファイルに自己完結的にアプリをバンドルできる仕様です。
デスクトップアプリがメインのイメージですが、CLIツールでもなんでもバンドルできます。事例としては、ImageMagickがAppImage版を配布しており、Linuxで使う場合は便利です。
ElectronやTauriのようなデスクトップフレームワークではAppImageへのバンドル環境が備わっていますが、本記事の内容を理解すると自前でも「自作ツールや、他の人の作ったツールなどをバンドルしてLinux...]]></description><link>https://zenn.dev/shimarisu_121/articles/76c1a0d73770ec</link><guid isPermaLink="true">https://zenn.dev/shimarisu_121/articles/76c1a0d73770ec</guid><pubDate>Sat, 11 Jan 2025 20:21:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0jBZwWXV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppImage%25E3%2582%2592%25E8%2587%25AA%25E5%2589%258D%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimarisu_121%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyYTA5YjFmMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimarisu_121</dc:creator></item><item><title><![CDATA[Docker環境で動かしているMisskeyデータベースのバックアップ自動化(rclone→GoogleDrive)]]></title><description><![CDATA[前書いた記事の方法でやると、Input/outputエラーが出るようになりGitHubで公開しているスクリプトも変えたので書き直しです。
この記事でやること
・Misskeyデータベースのバックアップ→GoogleDriveに投げるのを自動化
・バックアップ通知をDiscordに飛ばす
Discordウェブフックの作成方法はこの記事では説明しませんが簡単なので大丈夫！

 rclone導入
sudo apt update
sudo apt install rclone

 rclone設定
ザッと適当に説明していますが対話式なのであまり難しくない
rclone config
# nを選択...]]></description><link>https://zenn.dev/harumaki2000/articles/2fd3b2d804ddbd</link><guid isPermaLink="true">https://zenn.dev/harumaki2000/articles/2fd3b2d804ddbd</guid><pubDate>Sat, 11 Jan 2025 10:03:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_VzbUXjj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BMisskey%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2528rclone%25E2%2586%2592GoogleDrive%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:harumaki2000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW5iWFNoMlRaUXQ1d29DN19KZzV1U0xKT0xTS1lDYXo1aVA0Z0l1MU1pREVKakNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>harumaki2000</dc:creator></item><item><title><![CDATA[Snapとsnapcraftについて]]></title><description><![CDATA[
 初めに

本記事では、Linuxのパッケージ管理ツールであるSnapと、Snapを作成するためのsnapcraftについて紹介します。


 Snapとは

SnapはLinux用のソフトウェアパッケージの管理とアプリケーションのデプロイを行うツールです。
UbuntuやRedHat等の多くのLinuxディストリビューションで利用することが出来ます。


 Snapの特徴

 1.サンドボックス化

Snapのパッケージは完全にサンドボックス化されており、
他のアプリケーションやシステムとは完全に隔離されて動作するため、既存のシステムに影響を与えることはありません。


 2.自己完...]]></description><link>https://zenn.dev/matsuo_1938/articles/d69ccc51e9dd85</link><guid isPermaLink="true">https://zenn.dev/matsuo_1938/articles/d69ccc51e9dd85</guid><pubDate>Sat, 11 Jan 2025 04:08:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XamSeBMZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snap%25E3%2581%25A8snapcraft%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4YWZlN2NhNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Matsuo</dc:creator></item><item><title><![CDATA[Linuxのパスワード有効期限を設定・無効化する方法【初心者向け解説】]]></title><description><![CDATA[
 Linuxのパスワード有効期限を設定・無効化する方法【初心者向け解説】


 1. はじめに

Linuxでは、セキュリティ対策の一環として、ユーザーアカウントのパスワードに有効期限を設定することが一般的です。パスワード有効期限を設定することで、ユーザーが定期的にパスワードを変更するよう促せます。
一方、管理アカウントなど、特定のユーザーに対して有効期限の制限をかけたくないケースも存在します。

 2. パスワード有効期限の基礎

パスワード有効期限やアカウント管理の情報は、/etc/shadow というファイルで管理されています。通常、管理者権限（sudoなど）を持っているユーザー...]]></description><link>https://zenn.dev/uepon/articles/adfa8e52bc95ad</link><guid isPermaLink="true">https://zenn.dev/uepon/articles/adfa8e52bc95ad</guid><pubDate>Fri, 10 Jan 2025 08:33:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0mLcjGNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2581%25AE%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E6%259C%2589%25E5%258A%25B9%25E6%259C%259F%25E9%2599%2590%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%25BB%25E7%2584%25A1%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIVW4zSmVfbW43ZlowbXlNVXRtOXpyLWZ1S0J3YjVTVUhnMXJWSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ue</dc:creator></item><item><title><![CDATA[【Terraform】Ubuntuにインストールしよう]]></title><description><![CDATA[IaC(Infrastructure as Code)のツールとして人気のあるTerraform
今回は、そんなTerraform を Ubuntu にインストールしてみたいと思います

 インストール方法
公式 HPより以下３つのコマンドを実行します
$ wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
$ echo "deb [signed-by=/usr/share/keyrings/...]]></description><link>https://zenn.dev/kuuki/articles/terraform-ubuntu-install</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/terraform-ubuntu-install</guid><pubDate>Fri, 10 Jan 2025 05:35:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--esHj59Br--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Terraform%25E3%2580%2591Ubuntu%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[【Ubuntu】LTS版のNode.jsをインストールしてみる]]></title><description><![CDATA[Ubuntu で node コマンドが使えなくなりました。。。
そもそも前から使えていたか微妙ですが、node コマンドが使えるようにしていきます！

 エラー
node コマンドを実行すると、このようなエラーが出ました。
~$ node -v
-bash: /usr/bin/node: cannot execute binary file: Exec format error

 原因調査
エラー文で調べてみると、
node の実行ファイルが OS(Ubuntu)に対応していないこと
が原因のようです。

 バージョンを確認してみる
// sudo apt install nodejs...]]></description><link>https://zenn.dev/kuuki/articles/ubuntu-install-lts-nodejs</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/ubuntu-install-lts-nodejs</guid><pubDate>Fri, 10 Jan 2025 05:12:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zhmRvRBv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ubuntu%25E3%2580%2591LTS%25E7%2589%2588%25E3%2581%25AENode.js%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[【Ubuntu】Dockerをインストールする]]></title><description><![CDATA[UbuntuでDockerが使いたいのでインストールしてみます。
調べてみると、Docker の公式ドキュメント内に手順があったので、それ通りにやってみます
https://docs.docker.com/engine/install/ubuntu/
こちらのapt リポジトリを使用してインストールする方法をやっていきます

 バージョン




バージョン




Ubuntu
22.04




 apt リポジトリのセットアップ

 インストールに必要なパッケージを準備
// パッケージの更新
$ sudo apt-get update
...
Fetched 6186 kB in...]]></description><link>https://zenn.dev/kuuki/articles/ubuntu-install-docker</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/ubuntu-install-docker</guid><pubDate>Fri, 10 Jan 2025 05:12:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3IWYqoXk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ubuntu%25E3%2580%2591Docker%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item></channel></rss>