<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2024-10-26T17:39:47+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1928062</id>
    <published>2024-10-26T17:39:47+09:00</published>
    <updated>2024-10-26T17:39:47+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/EngiBeer/items/d27898d29dfa0ecac92e"/>
    <url>https://qiita.com/EngiBeer/items/d27898d29dfa0ecac92e</url>
    <title>Preconditions入門〜引数や状態チェックをよりKotlinらしく〜</title>
    <content type="html">はじめに
Kotlinで、関数の引数やデータの状態をチェックして不正であれば例外をスローしたい場面がありますよね。
今まで、何も考えずif文でチェックしてExceptionをthrowする書き方をし…</content>
    <author>
      <name>EngiBeer</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1928039</id>
    <published>2024-10-26T16:52:08+09:00</published>
    <updated>2024-10-26T16:58:00+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kitasann-blog/items/23fdedabfd9637da92ab"/>
    <url>https://qiita.com/kitasann-blog/items/23fdedabfd9637da92ab</url>
    <title>繰り返し二乗法と逆元をKotlinで実装</title>
    <content type="html">はじめに
KotlinでAtCoderに取り組んでいます。
Kotlin標準のMath.powはdouble or float型にて計算するため扱いにくいのでLong型対応のものを実装しました。(参考…</content>
    <author>
      <name>kitasann-blog</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1927886</id>
    <published>2024-10-26T09:51:06+09:00</published>
    <updated>2024-10-26T09:51:06+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tobira-code/items/88b226b5479b2947df95"/>
    <url>https://qiita.com/tobira-code/items/88b226b5479b2947df95</url>
    <title>Kotlin onEachでbreak / continueをおこなう</title>
    <content type="html">はじめに
いつも忘れてしまうのでonEachでbreak / continueする方法を記載します
continue
@￰onEachでbreakできます。
具体例で説明します。2がスキップ(*1)…</content>
    <author>
      <name>tobira-code</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1925517</id>
    <published>2024-10-20T16:14:16+09:00</published>
    <updated>2024-10-20T16:20:18+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/sdkei/items/45c5e602e6579c0694be"/>
    <url>https://qiita.com/sdkei/items/45c5e602e6579c0694be</url>
    <title>【Kotlin】EnumMap を使いやすくする</title>
    <content type="html">課題
Kotlin でコレクションなどを Map 型に変換することはよくあるでしょう。
そのときにキーが enum 型であることもよくあるでしょう。
enum class MyEnum { A, B…</content>
    <author>
      <name>sdkei</name>
    </author>
  </entry>
</feed>
