<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 25 Feb 2025 02:36:34 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Svelte + Hono + Turso でAIプランニングツール「Plathlo」を爆速開発した話]]></title><description><![CDATA[
 はじめに
フローチャート形式で様々なシナリオを想定したプランニングやタスクの進行管理ができる「Plathlo（プラスロ）」というサービスをリリースしたので、開発背景、技術選定、工夫した点など、技術的な側面にフォーカスして紹介します。
https://plathlo.com

 Plathloとは？
https://x.com/kosei_28/status/1893716581575705004
Plathloは、タスク（判断が不要な作業）と分岐（シナリオ選択）を組み合わせることで、柔軟な計画設計を可能にするツールです。従来のタスク管理ツールとは異なり、以下のような特徴があります。
...]]></description><link>https://zenn.dev/kosei28/articles/plathlo-release</link><guid isPermaLink="true">https://zenn.dev/kosei28/articles/plathlo-release</guid><pubDate>Tue, 25 Feb 2025 02:08:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a2336Bap--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte%2520%252B%2520Hono%2520%252B%2520Turso%2520%25E3%2581%25A7AI%25E3%2583%2597%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%258CPlathlo%25E3%2580%258D%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kosei28%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYjJhNjZjOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kosei28</dc:creator></item><item><title><![CDATA[Next.jsでReactを強化！SSRとRSCの基礎を学ぶ]]></title><description><![CDATA[最近Reactを勉強し始めて、ようやくアプリを一つ作成できるようになりました。そんな時に最近よく聞く単語「SSRって何？」「Next.jsって必要なの？」「RSC??」そんな疑問を最近感じ改めて調べることにしました

 Web開発で感じていた課題
あるWebサービスを作ることになり、Reactを使って開発を始めましたが、いくつかの問題に直面します：

表示が遅い！

// よくある従来のReactコンポーネント
function ProductList() {
  const [products, setProducts] = useState&lt;Product[]&gt;([]);...]]></description><link>https://zenn.dev/xronotech/articles/102198ac625588</link><guid isPermaLink="true">https://zenn.dev/xronotech/articles/102198ac625588</guid><pubDate>Mon, 24 Feb 2025 23:29:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IOqNMRc6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7React%25E3%2582%2592%25E5%25BC%25B7%25E5%258C%2596%25EF%25BC%2581SSR%25E3%2581%25A8RSC%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mizukich%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMTJiODY3MzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEXronotech%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2Q2bUgzdERkMVhVWlI3TU5obG1PcWRRSlNMWVVKbE9KNWQ3dXhhRWVxQXJDbDJoVDQ9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizukich</dc:creator></item><item><title><![CDATA[ドーナッツが"use client"を制する鍵？]]></title><description><![CDATA[React Server Components（以下、RSC）の文脈で、「どのコンポーネントをServer ComponentにするのかClient Componentにするのか判断に迷うからひとまずツリーの一番上で"use client"にしちゃえばうんぬん・・・」、ということを風の噂で聞きつけたので、よくあるClient Componentがドーナッツになれる例えを身につけると幸せになれるんじゃないかという話をします。（ドーナッツ？何を言っているんだろう）（もうすでに擦られた内容だとも思いますが、意外と存在しないのかなと詳しく調べもせずに筆を執っています）（要出典）
想定読者は、ある...]]></description><link>https://zenn.dev/tell_y/articles/708e1b69fe93ec</link><guid isPermaLink="true">https://zenn.dev/tell_y/articles/708e1b69fe93ec</guid><pubDate>Mon, 24 Feb 2025 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JT1oP8Vf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2583%25BC%25E3%2583%258A%25E3%2583%2583%25E3%2583%2584%25E3%2581%258C%2522use%2520client%2522%25E3%2582%2592%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%25E9%258D%25B5%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Teruhisa%2520-%2520T6ADEV%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNDg5NTAyZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Teruhisa - T6ADEV</dc:creator></item><item><title><![CDATA[TypeScriptの再帰的型システムを駆使した複雑な数式の計算]]></title><description><![CDATA[
 はじめに
Webアプリケーション開発の現場では、ユーザーが直感的にUI上で作成した数式や計算式をデータベースに保存し、必要に応じて動的に計算する仕組みが求められるケースが増えています。
特に、複数のデータベース上の数値を組み合わせた複雑な計算を、ユーザーの意図通りに実現する際、従来の文字列ベースの実装ではパーサーの開発やエラー処理が非常に煩雑になりがちです。
本プロジェクトにおいても、以下の要件がありました：

ユーザーがUIで作成した数式をデータベースに保管したい
数式の計算に必要な数値データは既にデータベース上に存在し、動的な処理が求められる
文字列を用いたパーサー実装や、エラー...]]></description><link>https://zenn.dev/codeciao/articles/2f12b94cff623d</link><guid isPermaLink="true">https://zenn.dev/codeciao/articles/2f12b94cff623d</guid><pubDate>Mon, 24 Feb 2025 21:17:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UCzndwKk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%2586%258D%25E5%25B8%25B0%25E7%259A%2584%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E9%25A7%2586%25E4%25BD%25BF%25E3%2581%2597%25E3%2581%259F%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E6%2595%25B0%25E5%25BC%258F%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Daiki0613%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNWI1NzhlNWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:codeciao%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5NmZmOTMwODMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daiki0613</dc:creator></item><item><title><![CDATA[【個人サイト開発ログ】レスポンシブなグローバルナビゲーションバーを作った]]></title><description><![CDATA[今回からは、前回立ち上げた個人サイトの機能開発を行なっていきます。

 今回の開発内容について
サイトの全画面共通のナビゲーションを追加したいと思います。
今のホーム画面は以下のようになっています。

記事の詳細画面に遷移するとヘッダーが付与されていますが、サイトロゴしかありません。

ヘッダーロゴに加えて、Home ページ、Works ページ、Blog ページ、Profile ページ、Contact ページにそれぞれ遷移できるようにナビゲーションを作成します。
イメージは以下のような感じです。


 必要なものを準備する


リンク先のページ作成
App Router を採用しているた...]]></description><link>https://zenn.dev/yadonn/articles/fd48361ee74475</link><guid isPermaLink="true">https://zenn.dev/yadonn/articles/fd48361ee74475</guid><pubDate>Mon, 24 Feb 2025 17:17:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DWGVy60Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%2596%25E3%2581%25AA%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2583%258A%25E3%2583%2593%25E3%2582%25B2%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YADON%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkOTAyMjM0YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YADON</dc:creator></item><item><title><![CDATA[[Next.js]Next.jsではtry-catchしない方が無難]]></title><description><![CDATA[
 はじめに
ReactとNext.jsは、フレームワーク内部でthrowを活用しています。例えば、以下のようなケースが該当します。

Suspense は Promise を throw することで実現されている
RSCで使えるnotFound() はエラーを throw する関数である

そのため、安易にtry-catchを使うとフレームワークの機能を意図せずキャッチしてしまい、期待通りの動作にならないことがあります。
本記事では、Next.jsのRSC（React Server Components）でtry-catchを避けるべき理由と、その代替手段について解説します。

 対象...]]></description><link>https://zenn.dev/urotea/articles/6320efaf9bc78e</link><guid isPermaLink="true">https://zenn.dev/urotea/articles/6320efaf9bc78e</guid><pubDate>Mon, 24 Feb 2025 16:19:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VXL37GQe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNext.js%255DNext.js%25E3%2581%25A7%25E3%2581%25AFtry-catch%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E3%2581%258C%25E7%2584%25A1%25E9%259B%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:urotea%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>urotea</dc:creator></item><item><title><![CDATA[PDFから画像を取得する]]></title><description><![CDATA[PDF.js でPDFファイルから内部画像を取得するための備忘録です。

 環境

pdfjs-dist v4.10.38
React 19.0.0
Typescript 5.7.2


 読み込み
今回はブラウザで動作するようにします。
Viteを使用するため、こちらを参考にworkerの設定をします。
import {
  getDocument,
  GlobalWorkerOptions
} from 'pdfjs-dist'
GlobalWorkerOptions.workerSrc = new URL(
  "pdfjs-dist/build/pdf.worker.min.m...]]></description><link>https://zenn.dev/nannou/articles/2f1d56b271fc6c</link><guid isPermaLink="true">https://zenn.dev/nannou/articles/2f1d56b271fc6c</guid><pubDate>Mon, 24 Feb 2025 14:03:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Goz6m2z9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PDF%25E3%2581%258B%25E3%2582%2589%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nannou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nannou</dc:creator></item><item><title><![CDATA[【個人開発1作目】時間管理アプリ「TickTockTask」を10日間でリリースしました！🚀]]></title><description><![CDATA[こんにちは！普段はコーダーとして活動していますが、今回初めて個人開発にチャレンジしました。
使用した技術はNext.js、React、TypeScript、Tailwind CSS。正直、これらの技術はあまり慣れていませんでしたが、試行錯誤しながら**約10日間（実装時間は18時間ほど）**でリリースできたので、その体験を共有します。


 🎯 作ったもの - TickTockTask

「TickTockTask」は、現在の時刻と登録したタスクまでの残り時間をアナログとデジタルで表示する時間管理アプリです。
以下のような悩みを持つ人に向けて開発しました。

子どもに時計の読み方を教えた...]]></description><link>https://zenn.dev/kyooheeey/articles/ccb75854c9b075</link><guid isPermaLink="true">https://zenn.dev/kyooheeey/articles/ccb75854c9b075</guid><pubDate>Mon, 24 Feb 2025 10:43:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zbCr3axI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA1%25E4%25BD%259C%25E7%259B%25AE%25E3%2580%2591%25E6%2599%2582%25E9%2596%2593%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2580%258CTickTockTask%25E3%2580%258D%25E3%2582%259210%25E6%2597%25A5%25E9%2596%2593%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyooheeey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d1R1hmRHhWRl9nQnNJckhnQ1VSMWk2bHhnOXFpLUVtNDdmd3Y3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyooheeey</dc:creator></item><item><title><![CDATA[zodスキーマからOpenAPIドキュメントを生成して、型安全なプロジェクトを構築しよう]]></title><description><![CDATA[
 フロントエンド及びバックエンドがTypeScriptである場合の設計例を紹介したい
こんにちは！sonicmoovエンジニアのchiakiです。
本記事では、

REST APIで使用されるデータモデルやパラメータ定義
APIエンドポイントのメタ情報

といった内容をOASではなくTypeScriptで一元管理するために、@asteasolutions/zod-to-openapiを使用した設計例を紹介したいと思います！
https://github.com/asteasolutions/zod-to-openapi

 ディレクトリ構成
今回はお問い合わせフォームや一覧といった画面...]]></description><link>https://zenn.dev/sonicmoov/articles/how-to-use-zod-to-openapi</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/how-to-use-zod-to-openapi</guid><pubDate>Mon, 24 Feb 2025 08:20:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EBi7jcY6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zod%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%258B%25E3%2582%2589OpenAPI%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:chiaki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNDIxNTllYTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chiaki</dc:creator></item><item><title><![CDATA[AI Agentを使ってSolanaでNFTを自動生成してくれるチャットを開発してみる]]></title><description><![CDATA[
 はじめに
先日、Solanaで急激にAI Agentのシェアを伸ばしている【SendAI】の日本コミュニティをゆうきさんをはじめとしたSolanaに強い方達と立ち上げました。
https://x.com/sendaifunjapan/status/1890919938094719013
そしてその2週間後にメンバー第1号としてSolana Developer Hubで登壇することになりました！
https://lu.ma/soldevhub-14
今回のSolana Developer HubはRWA×DePinがテーマということなので、SendAIを使うとこんなに簡単にNFTを発行...]]></description><link>https://zenn.dev/mameta29/articles/402a4fe2fa319e</link><guid isPermaLink="true">https://zenn.dev/mameta29/articles/402a4fe2fa319e</guid><pubDate>Mon, 24 Feb 2025 07:58:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e_e31sR4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%2520Agent%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Solana%25E3%2581%25A7NFT%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mameta_zk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FzbE45OV9GR0RoRWJpbGxfZHl0dGNTcUhmQTd4VUh2bFo0TDZNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mameta_zk</dc:creator></item><item><title><![CDATA[TS/JSでセミコロンをつけないスタイル（No-Semi）について]]></title><description><![CDATA[TypeScriptやJavaScriptにおいて、文末にセミコロンをつけないスタイル（以下「No-Semiスタイル」）の現在の普及状況について、最近の調査資料が見つからなかったため、独自に調べてみました。コーディングスタイルを検討する際の参考になれば幸いです。

 背景
Cursor ComposerやClineなどのコーディングAIを使ってTypeScriptの開発をしていると、Lint設定でNo-Semiスタイルを指定しているにもかかわらず、Composerがセミコロンありのコードを生成してしまうため、毎回Lintエラーが発生することがあります。
この問題は「TypeScriptで...]]></description><link>https://zenn.dev/sparkleai_blog/articles/346593f3b32405</link><guid isPermaLink="true">https://zenn.dev/sparkleai_blog/articles/346593f3b32405</guid><pubDate>Mon, 24 Feb 2025 06:48:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rAbpZ1sX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%252FJS%25E3%2581%25A7%25E3%2582%25BB%25E3%2583%259F%25E3%2582%25B3%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25EF%25BC%2588No-Semi%25EF%25BC%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:delhi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmMDAxYWM3ZjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sparkle%2520AI%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODc0Y2EyNmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>delhi</dc:creator></item><item><title><![CDATA[Deno DeployとDiscordenoを使って怠惰な自分とサヨナラするためのDiscord Botを作った]]></title><description><![CDATA[!
100%正しい情報であると保証はできません。
間違いや、抜けている部分、エラーなどがありましたら、教えていただけると幸いです。


 Discordeno

 Discordenoとは


Discordenoは、Denoランタイム上で動作するDiscord APIラッパーで、TypeScriptで書かれています。


Node.jsベースのDiscord.jsと異なる点で大きいものは、 コンパイル不要で、TypeScriptのまま実行することができるところです。


デメリットとして、一部のnpmライブラリをそのまま使用することができないこと、Node.js環境での実行を前提とした...]]></description><link>https://zenn.dev/loootus/articles/3613f148f0e2be</link><guid isPermaLink="true">https://zenn.dev/loootus/articles/3613f148f0e2be</guid><pubDate>Mon, 24 Feb 2025 03:19:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--umy8xu_l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%2520Deploy%25E3%2581%25A8Discordeno%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2580%25A0%25E6%2583%25B0%25E3%2581%25AA%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A8%25E3%2582%25B5%25E3%2583%25A8%25E3%2583%258A%25E3%2583%25A9%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEDiscord%2520Bot%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlNGMxODYyODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れんれん</dc:creator></item><item><title><![CDATA[Next.js+NextAuthでログイン済み時だけ参照できる機能を作る]]></title><description><![CDATA[前回はDBでセッションを保持しました。今回はアクセス毎にセッションを確認して、ログインしていたら利用できる機能を作ります。
NextAuthではサーバサイドでsessionを確認する手段がなさそうでした。
以下などはサーバーサイドで使えそうだったが現行バージョンだと廃止された？
https://next-auth.js.org/configuration/nextjs
どのユーザーからのアクセスか？特定する必要があり
Cookieでセッショントークンを授受しているようで使います。

 CookieからSessionToken文字列を取得
GETリクエストで受け取ったCookieの中からa...]]></description><link>https://zenn.dev/kaikusakari/articles/b7d7f7dc434d2e</link><guid isPermaLink="true">https://zenn.dev/kaikusakari/articles/b7d7f7dc434d2e</guid><pubDate>Sun, 23 Feb 2025 17:19:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p8FsZwBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252BNextAuth%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%25B8%2588%25E3%2581%25BF%25E6%2599%2582%25E3%2581%25A0%25E3%2581%2591%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E8%258B%2585%2520%25E5%25BF%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNDVmZjk5MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草苅 快</dc:creator></item><item><title><![CDATA[Multi-Agent Orchestratorを使用したAI旅行プランナーの構築]]></title><description><![CDATA[インテリジェントなAIアプリケーションの構築には、多くの場合、複数の専門AIエージェントの連携が必要です。この記事では、Multi-Agent Orchestratorフレームワークを使用して高度な旅行プランニングシステムを作成する方法を紹介し、複数のAIエージェントが協力して詳細な旅行プランを作成する方法を解説します。

 Multi-Agent Orchestratorの概要
Multi-Agent Orchestratorは、複雑な会話における複数のAIエージェントを管理・調整するために設計されたオープンソースフレームワークです。主な特徴は以下の通りです：

複数のAIエージェント...]]></description><link>https://zenn.dev/sunwood_ai_labs/articles/ai-trip-planner-with-multi-agent-orchestrator</link><guid isPermaLink="true">https://zenn.dev/sunwood_ai_labs/articles/ai-trip-planner-with-multi-agent-orchestrator</guid><pubDate>Sun, 23 Feb 2025 15:24:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EkJv0E7W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Multi-Agent%2520Orchestrator%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAI%25E6%2597%2585%25E8%25A1%258C%25E3%2583%2597%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdpSmVyNldLVlpKLUd4N054QWVuSFVtYXQ3MUhhd1NXaU5hRG5FTnZiMXZZdHBIaGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item><item><title><![CDATA[eslint-plugin-importで秩序のあるフロントエンド開発を実現する]]></title><description><![CDATA[
 導入
フロントエンド開発では、モジュール間の無秩序な依存関係が発生すると、コードの可読性やメンテナンス性が低下します。特に、チーム開発においてはプロジェクトの設計思想やディレクトリ戦略のコンテキストが遵守されず形骸化されてしまうと、リファクタリングやスケールが困難になります。
eslint-plugin-importを活用することで、予期しない依存関係を静的解析によって防ぐことができます。
https://github.com/import-js/eslint-plugin-import

 ディレクトリ戦略と依存関係の制限
今回はBulletproof-reactアーキテクチャのよ...]]></description><link>https://zenn.dev/hidenorioka/articles/62b7afaef78f32</link><guid isPermaLink="true">https://zenn.dev/hidenorioka/articles/62b7afaef78f32</guid><pubDate>Sun, 23 Feb 2025 14:21:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dUQbL2Id--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:eslint-plugin-import%25E3%2581%25A7%25E7%25A7%25A9%25E5%25BA%258F%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hidenorioka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliODMxMWNmMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hidenorioka</dc:creator></item><item><title><![CDATA[WhisperのAPIコストを格段に下げる方法]]></title><description><![CDATA[
 WhisperのAPIコストを格段に下げる方法 — Cloudflare Workers AI活用ガイド
Whisperはローカル環境で実行すれば費用はかかりませんが、GPUなどのハードウェアが必要なため、処理速度や運用コストの面で課題があります。そこで今回は、OpenAIの公式APIを利用した場合の $0.006 / minute (rounded to the nearest second) というコストに対し、Cloudflare Workers AIを利用することで $0.0005 per audio minute (1日あたり約4時間分の無料枠あり) という低コストで運用す...]]></description><link>https://zenn.dev/lami/articles/b16706ca0e66b1</link><guid isPermaLink="true">https://zenn.dev/lami/articles/b16706ca0e66b1</guid><pubDate>Sun, 23 Feb 2025 12:55:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aubvj0ap--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Whisper%25E3%2581%25AEAPI%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%25A0%25BC%25E6%25AE%25B5%25E3%2581%25AB%25E4%25B8%258B%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Lami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WVNLRmVwVzU2eXdpMlUxenZ4MU5ud1JQOWNFM1dIcGQtTjRFaWJYNXM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Lami</dc:creator></item><item><title><![CDATA[New Architectureを整理]]></title><description><![CDATA[
 はじめに
LT で React Native のことを話そうと思って勉強しており、せっかくなので Zenn にも残しておきます！以下のスクラップに勉強のメモ書きがあります。 (もう少し更新続けます！)
https://zenn.dev/link/comments/5a62539c2a3378
間違ってるところがあればスクラップかコメントからご指摘頂けるととても助かります 🙇
分かりづらいこと、分からないことがある場合も一生懸命調べて回答するのでコメントお願いします 🙇

 New Architecture 概要

React Native の基盤となるシステムが C++で書き直された...]]></description><link>https://zenn.dev/toki_dev/articles/0ead165c91968c</link><guid isPermaLink="true">https://zenn.dev/toki_dev/articles/0ead165c91968c</guid><pubDate>Sun, 23 Feb 2025 10:17:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cWJBh71b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:New%2520Architecture%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmszY2M3YkJuWTBrcDVvckFfS0pJUW5IMUMzT2JrYlB0TEpRYzFXLWlKUEZydmpnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toki</dc:creator></item><item><title><![CDATA[TypeScriptでthrowされたエラーにValibotで型をつける]]></title><description><![CDATA[TypeScriptには、かならずunknownな型が割り当てられる値があります。それはthrowされた値です。
try {
  doSomething();
} catch (error) {
  // ここではerrorはunknown型になる
}
JavaScriptでは Errorオブジェクトに限らずどのような値でもthrowすることができるので、catchで捉えた値には必然的に unknown 型が割り当てられます。
勿論、下のコードのようにinstanceofを使ってnarrowing(絞り込み)をすることはできるのですが、Errorに限らず細かくエラーハンドリングしたい時に...]]></description><link>https://zenn.dev/anatoo/articles/a708b00171f758</link><guid isPermaLink="true">https://zenn.dev/anatoo/articles/a708b00171f758</guid><pubDate>Sun, 23 Feb 2025 09:19:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wgeLyV64--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7throw%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25ABValibot%25E3%2581%25A7%25E5%259E%258B%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:anatoo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2SlMxT0IydDYtVXJEdi0wM1VCUkhZbWdDUFM2UGxpQ1JQVVI1PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>anatoo</dc:creator></item><item><title><![CDATA[GmailをTypeScriptとLINE Messaging APIを用いてLINEに自動転送してみた]]></title><description><![CDATA[タイトルの通り、GmailをLINE Messaging APIを用いてLINEに転送するGASアプリを、TypeScriptを用いて作ってみたので紹介する。
https://github.com/tsukuboshi/gas-gmail-to-line

 前提条件
今回はGAS開発にasideというツールを使用し、TypeScriptを用いて開発を行っている。
TypeScriptで開発する事で、型安全性を保ちながらバックエンド開発を進める事ができるためオススメしたい。
https://github.com/google/aside
また今回はLINEへの通知用APIとして、LINE...]]></description><link>https://zenn.dev/tsukuboshi/articles/gas-gmail-to-line</link><guid isPermaLink="true">https://zenn.dev/tsukuboshi/articles/gas-gmail-to-line</guid><pubDate>Sun, 23 Feb 2025 06:39:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6zxTkClm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gmail%25E3%2582%2592TypeScript%25E3%2581%25A8LINE%2520Messaging%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6LINE%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25BC%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYTViZjg0M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくぼし</dc:creator></item><item><title><![CDATA[vee-validateのバリテーションエラーをリアルタイムに表示する]]></title><description><![CDATA[vee-validate v4を使用している際に、Enterキーを押したりカーソルの選択を外さないと
バリテーションエラーが表示されなかったり、入力しても古いバリテーションエラーが
表示された時の対処法を書きます

ここで記載のない部分のコードがどのようになっているのかを知りたい場合は、
こちらの記事を見てください
https://zenn.dev/sayasurvey/articles/4269b418e6516f
対処法はTextfieldなどのコンポーネントで下記の記載を追加するだけです
&lt;script setup lang="ts"&gt;
import { configu...]]></description><link>https://zenn.dev/sayasurvey/articles/79c4dc0e3037ac</link><guid isPermaLink="true">https://zenn.dev/sayasurvey/articles/79c4dc0e3037ac</guid><pubDate>Sun, 23 Feb 2025 06:00:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jg4-ChpE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vee-validate%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sayasurvey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlZWjNSbWJhQXZFaU91cXJGMld3OTRGdlMzX2hJWGhPTFFwcHlHV1RTNGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sayasurvey</dc:creator></item></channel></rss>