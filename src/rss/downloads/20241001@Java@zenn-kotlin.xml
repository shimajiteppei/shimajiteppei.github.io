<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 01 Oct 2024 00:28:33 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Intellijを使用して上手に問題に対処する方法]]></title><description><![CDATA[
 はじめに
このページは、
普段バックエンドのコードを書いてる私が何か問題が発生したときにJetbrainsのIDEを使用して速やかに発生元を突き止め、対処する方法を書いたものです。
言い換えると、問題が起きたときにコードを眺める際の私のルーチンワークを紹介します。
Java、Kotlin、PHPしか仕事では使わないので他は不明ですが、多分一緒です。
これを書いてる端末がmacなのでキーはmacです。
graphql-kotlinのコードを使いながら書いていこうと思います。

 なぜ書くのか
問題が発生したときに、その機能の入口からコードに潜る人を観測したため。
入口から特定しに行くな...]]></description><link>https://zenn.dev/moneyforward/articles/df0b1f8199aa81</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/df0b1f8199aa81</guid><pubDate>Mon, 30 Sep 2024 06:25:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MTgpyuJr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Intellij%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%258A%25E6%2589%258B%25E3%2581%25AB%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AB%25E5%25AF%25BE%25E5%2587%25A6%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sh-ogawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dQMUxWY0xrRDB3M0E3clJtNWdQRWxmUVA2aDBUdjdDakpoLXRQU3c9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sh-ogawa</dc:creator></item><item><title><![CDATA[androidでconnect-kotlinを使ってみる]]></title><description><![CDATA[株式会社バニッシュ・スタンダードでアプリエンジニア(主にandroid)をやっている中本です。
弊社ではバックエンドのAPIの一部をconnectというライブラリを用いて実装しています。
バックエンド↔︎アプリのAPIでもconnect使って実装してみたいよねという話になり、試しにconnect-kotlinのチュートリアルに沿って疎通を確認してみました。ほぼドキュメント通りではありますが、実際にAndroid Studioでの実装方法を書いていきます。

 connectとは？
ConnectとはBufという組織によって開発されたブラウザとgRPC互換のHTTP APIを構築するための...]]></description><link>https://zenn.dev/vs_blog/articles/d2cf991cb10117</link><guid isPermaLink="true">https://zenn.dev/vs_blog/articles/d2cf991cb10117</guid><pubDate>Mon, 30 Sep 2024 01:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rvBBo4ex--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:android%25E3%2581%25A7connect-kotlin%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25B8%25AD%25E6%259C%25AC%25E5%2581%25A5%25E5%25A4%25AA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOTFhMjZiZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2590%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25BB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSldHVWczZUV1SnhNbnlQVS1ycHhvR3JINkxHR3NmZVRDN3c4bzEtUWZXX1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>中本健太</dc:creator></item><item><title><![CDATA[FlutterでHomeWidgetを表示させる]]></title><description><![CDATA[Flutterでhome_widgetというプラグインを使用してiOSとAndroidでHomeWidgetを表示させたので備忘録として残しておきます。



 home_widgetプラグインをインストール
pubspec.yaml ファイルに home_widgetを追加
https://pub.dev/packages/home_widget/versions/0.7.0

 iOS

 Xcodeでアプリにウィジェットを追加
以下のサイトを参考にXcodeでアプリにWidget Extension(Widget拡張機能)を追加します
https://docs.page/abaus...]]></description><link>https://zenn.dev/tarakosuziko/articles/4c221c37bece39</link><guid isPermaLink="true">https://zenn.dev/tarakosuziko/articles/4c221c37bece39</guid><pubDate>Sun, 29 Sep 2024 01:23:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vxbzKLA6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flutter%25E3%2581%25A7HomeWidget%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2593%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YmMwQ010MmRRUU1vQnpreHlmampLenE3ZVpxc2dXQzdTYWtrREVOUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おこめ</dc:creator></item><item><title><![CDATA[ロック画面でも位置情報を取得する]]></title><description><![CDATA[
 はじめに
以前AndroidでGPSを取得するアプリを作成しましたが、アプリを閉じたりロック画面にすると取得できないものでした
以前作ったもの↓
https://zenn.dev/nenfa/articles/d9258d1f92573a
そこで今回は以前作ったものを改良してフォアグラウンドサービスにしていきます

 フォアグラウンドサービスとは
簡単に言うとユーザーが明示的に認識できる状態で実行されるサービスです
通知を表示することでサービスが動作中と認識できるようになっています
詳しくはAndroidDevelopersへ↓
https://developer.android.c...]]></description><link>https://zenn.dev/nenfa/articles/656c9aee41729d</link><guid isPermaLink="true">https://zenn.dev/nenfa/articles/656c9aee41729d</guid><pubDate>Fri, 27 Sep 2024 09:53:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uH5iwpaH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25A7%25E3%2582%2582%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B4%25E6%2599%25AE%2540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDc2ZDJmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>年普@</dc:creator></item><item><title><![CDATA[Kotlin の標準ライブラリで UUID が使えるようになりました]]></title><description><![CDATA[Kotlin 2.0.20 からついに Kotlin の標準ライブラリとして UUID が使えるようになりました。
https://kotlinlang.org/docs/whatsnew2020.html#support-for-uuids-in-the-common-kotlin-standard-library
!
ただし、現時点では Experimental となっています。
利用する際は、 @ExperimentalUuidApi の Annotation か -opt-in=kotlin.uuid.ExperimentalUuidApi のコンパイルオプションを付与する必要が...]]></description><link>https://zenn.dev/yumemi_inc/articles/kotlin-multiplatform-uuid</link><guid isPermaLink="true">https://zenn.dev/yumemi_inc/articles/kotlin-multiplatform-uuid</guid><pubDate>Wed, 25 Sep 2024 03:55:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2aCM_w9y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520%25E3%2581%25AE%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%2520UUID%2520%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ykws%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0M2I0Mzk2NzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykws</dc:creator></item><item><title><![CDATA[GoogleMapsComposeのMarkerComposableを使ってみる]]></title><description><![CDATA[
 0. はじめに
スペースマーケットのAndroidニキことseoです。
JetpackComposeが浸透して時間が経ちます。
Compose創世記からXMLからの置き換えを進めている方々は、
当時のComposeの技術ではこれは実現できなさそう・めんどくさそうだな、
と後回しにした箇所があったりしないでしょうか？
今回は、「あのときあきらめた、あれ、あるよ」という話です。
地図を扱うアプリの場合、GoogleMapsComposeは必ず採用しているかと思います。
ちょうど1年前の23年8月ごろにv2.14.0よりMarkerComposableが追加されました！
弊社スペースマーケ...]]></description><link>https://zenn.dev/spacemarket/articles/f7aed2939ce70f</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/f7aed2939ce70f</guid><pubDate>Tue, 24 Sep 2024 08:55:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oE0M5ACz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoogleMapsCompose%25E3%2581%25AEMarkerComposable%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Baek%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyNmI2MWE5NzMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Baek</dc:creator></item><item><title><![CDATA[型クラスパターン]]></title><description><![CDATA[
 型クラスパターンとは
型クラスパターンは、KotlinやJavaのようなインターフェースを使う言語において、Scala, Rust, Haskellなどで使われる型クラスの利点を得る手法です。
これから紹介する型クラスパターンは、単にインターフェースを使う場合に比べて、次のような利点があります。

特定のstatic関数を持つことを抽象化できる

ファクトリーメソッドや型変換など


既存の型に対しても抽象化を適用できる

プリミティブな型やライブラリによって提供される型など



!
型クラスを言語機能として持つ言語は通常インターフェースを持ちませんが、型クラスパターンはインターフ...]]></description><link>https://zenn.dev/esnir/articles/typeclass-pattern</link><guid isPermaLink="true">https://zenn.dev/esnir/articles/typeclass-pattern</guid><pubDate>Mon, 23 Sep 2024 07:52:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jVA39yNi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2593%25E3%2581%2599%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwNzU3NzQ4MGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りんす</dc:creator></item><item><title><![CDATA[AndroidにおけるInstall Referrer APIについてのまとめ]]></title><description><![CDATA[
 Install Referrer APIとは
リファラー情報をAndroid側で取得するためのAPI。かつてはAPIではなくBroadcastで取得する方法があったが今はこの１つのみ。
公式に記載の通り、Play Storeからインストール後90日以内はアプリを再インストールしない限りは同じリファラー情報が返ってくる。Broadcastの時と違ってインストール直後に..という機能は備わっていないので、もしインストール直後初回だけInstal Referrer APIから取得したいならPreferenceなどの値（初回かどうか）に応じての工夫してあげる必要がありそう。

 Instal...]]></description><link>https://zenn.dev/tarobu/articles/0a8d30338e8795</link><guid isPermaLink="true">https://zenn.dev/tarobu/articles/0a8d30338e8795</guid><pubDate>Mon, 23 Sep 2024 00:34:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--38QBt_3E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BInstall%2520Referrer%2520API%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%25B6%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjZGU4Y2MwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たろぶー</dc:creator></item><item><title><![CDATA[[KMP]Android+iOSでFirebase Storageから画像を取ってくるまで]]></title><description><![CDATA[
 環境

macOS Sonoma14.5
Android Studio Koala Feature Drop | 2024.1.2
Xcode  Version 15.4

Kotlin Multiplatformの環境構築については他に記事がそれなりにあるので既にできているものとして省略します。
また、全体コードはGitHubで公開しています。
https://github.com/arashiyama11/FirebaseExample

 何を作るか
サンプルプロジェクトとして、Firebase Storageから画像を取ってきて表示するシンプルなAndroid/iOSアプリを...]]></description><link>https://zenn.dev/arashiyama/articles/022bb2efce017a</link><guid isPermaLink="true">https://zenn.dev/arashiyama/articles/022bb2efce017a</guid><pubDate>Sat, 21 Sep 2024 04:52:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mRobOCIb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BKMP%255DAndroid%252BiOS%25E3%2581%25A7Firebase%2520Storage%25E3%2581%258B%25E3%2582%2589%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:arashiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0NTQ3YzUyMDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>arashiyama</dc:creator></item><item><title><![CDATA[[Android] Javascript Interface]]></title><description><![CDATA[
 Javascript Interfaceとは？
スマホアプリ内にウェブページを埋め込むwebViewを使う際、
フロントエンドのコードがスマホアプリのネイティブコードを叩く手段が提供されている。
それがJavascriptInterface

 使い方導入

 kotlin実装
class MyJavascriptInterfaces {
    @JavascriptInterface
    fun hello(){
        Log.i("webViewApp", "Hello, World")
    }
}
というJavascript Interfaceを搭載したクラ...]]></description><link>https://zenn.dev/holndal/articles/056541ef383f6c</link><guid isPermaLink="true">https://zenn.dev/holndal/articles/056541ef383f6c</guid><pubDate>Sat, 21 Sep 2024 02:26:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aVSS591T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%255BAndroid%255D%2520Javascript%2520Interface%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:holndal%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmODIzYzU4MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>holndal</dc:creator></item><item><title><![CDATA[脱プログラマー初心者]]></title><description><![CDATA[
 概要
このページは筆者が業務や勉強している際にプログラムの書き方で学んだことを書いているサイトです。現在サーバーサイドKotlinを使用して業務を行っているので、Kotlinを使用してプログラムを書いていこうと思います。
※サンプルの型定義は適当に記載しています

 参考資料

良いコード/悪いコードで学ぶ設計入門

https://gihyo.jp/book/2022/978-4-297-12783-1


現場で役立つシステム設計の原則

https://gihyo.jp/book/2017/978-4-7741-9087-7


リファクタリング（第2版）既存のコードを安全に改...]]></description><link>https://zenn.dev/suguru_3u/articles/f63d67134267fc</link><guid isPermaLink="true">https://zenn.dev/suguru_3u/articles/f63d67134267fc</guid><pubDate>Fri, 20 Sep 2024 05:44:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L43dzxEQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2584%25B1%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2583%25BC%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%25A1%25E3%2582%25AC%25E3%2583%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NjMwMzhiNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マルメガネ</dc:creator></item><item><title><![CDATA[Spring Boot + KotestでTestcontainersを活用する方法：@ServiceConnectionを使ったテスト構築]]></title><description><![CDATA[以下の記事を読み、Spring Bootのv3.1.0から@ServiceConnectionが導入されたというのを知り、Kotestでも使えないかと試したので記事にします。
https://www.docker.com/blog/spring-boot-application-testing-and-development-with-testcontainers/
公式のTestcontainersの章ではJUnit 5用の@Testcontainersの使用例が多く、Kotestでは使えないかもと過去の自分と同じように感じている方の助けになれば幸いです。
https://docs.s...]]></description><link>https://zenn.dev/yamachoo/articles/spring-testcontainers-kotest</link><guid isPermaLink="true">https://zenn.dev/yamachoo/articles/spring-testcontainers-kotest</guid><pubDate>Tue, 17 Sep 2024 07:45:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ggAKHy8d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%2520%252B%2520Kotest%25E3%2581%25A7Testcontainers%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%259A%2540ServiceConnec...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZmVjZGFjYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヤマチュー</dc:creator></item><item><title><![CDATA[WearOSで心拍数を取る]]></title><description><![CDATA[
 はじめに
WearOSで取ることができる心拍数を取得していく

 コード本体
長いので折りたたみ
MainActivity.kt
MainActivity.kt
package com.nenfuat.getheartrateapplication.presentation

import android.Manifest
import android.content.Context
import android.content.pm.PackageManager
import android.hardware.Sensor
import android.hardware.Senso...]]></description><link>https://zenn.dev/nenfa/articles/b5595d6e6a608c</link><guid isPermaLink="true">https://zenn.dev/nenfa/articles/b5595d6e6a608c</guid><pubDate>Sat, 14 Sep 2024 09:13:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y5SVWCp0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WearOS%25E3%2581%25A7%25E5%25BF%2583%25E6%258B%258D%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B9%25B4%25E6%2599%25AE%2540%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZDc2ZDJmY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>年普@</dc:creator></item><item><title><![CDATA[Jetpack Compose × UiAutomator で詰まった時の備忘録]]></title><description><![CDATA[
 TestTag が見つからない

 事象
UI テストを記述していて testTag() を Modifier にセットしているのにも関わらず、UiAutomator の By.res() で見つからなかった。

 解決策
上位の階層で testTagsAsResourceId を有効にすることで UiAutomator に testTag() を伝播させることができるとのこと。
Scaffold(
    // Enables for all composables in the hierarchy.
    modifier = Modifier.semantics {
    ...]]></description><link>https://zenn.dev/u_chan/articles/f1a35391ec3a2f</link><guid isPermaLink="true">https://zenn.dev/u_chan/articles/f1a35391ec3a2f</guid><pubDate>Sat, 14 Sep 2024 08:43:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eSnUeLiF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520Compose%2520%25C3%2597%2520UiAutomator%2520%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYTk3ODY3ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーちゃん</dc:creator></item><item><title><![CDATA[Dagger Hilt でスマートにモックに差し替える]]></title><description><![CDATA[よくやりたくなるのが、モック用の product flavor の時のみに、通信をモックした UseCase や Repository を利用したいというもの。且つ、モック用のクラスはプロダクションのコードに含めたくない。
flavor 毎に Dagger のモジュールを作って当該クラスのインスタンスを @Provides で定義しつつ、モック用の flavor だけモックのレスポンスを返すようにすればよいが、一つのクラスをモックするのに全 flavor のモジュールに @Provides の定義を記載してメンテしていかないとといけないので煩雑である。
その解決として、次のような inl...]]></description><link>https://zenn.dev/yumemi_inc/articles/e3050976878503</link><guid isPermaLink="true">https://zenn.dev/yumemi_inc/articles/e3050976878503</guid><pubDate>Tue, 10 Sep 2024 12:23:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5_piHHOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dagger%2520Hilt%2520%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E5%25B7%25AE%25E3%2581%2597%25E6%259B%25BF%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hkusu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MzAxMTgwMzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%2586%25E3%2582%2581%25E3%2581%25BF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d3b3ZhZFBoRm53Ump5NFBMN0MyU3d6UkYxSmRId0ZoZDRLQU1ab0E9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hkusu</dc:creator></item><item><title><![CDATA[UnityでAndroidのCameraX APIを利用して動画撮影する]]></title><description><![CDATA[

 はじめに
今回は Android の CameraX API を用いて、Unity アプリにカメラ撮影機能を実装する方法について書きたいと思います。
これを実装した背景は、Google が主催する Gemini を利用したコンペに応募するためのアプリ開発に必要だったからです。
実際に動かしてみた動画は以下です。Unity アプリが起動し、画面にはカメラのプレビューが表示されていませんが、実際に動画撮影が出来ていることが分かります。
https://x.com/edo_m18/status/1820597679388525032
Android Studio を利用した通常の And...]]></description><link>https://zenn.dev/meson/articles/android-camerax-library-for-unity</link><guid isPermaLink="true">https://zenn.dev/meson/articles/android-camerax-library-for-unity</guid><pubDate>Tue, 10 Sep 2024 02:34:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v_T7YVVv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unity%25E3%2581%25A7Android%25E3%2581%25AECameraX%2520API%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%258B%2595%25E7%2594%25BB%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MESON%2520Tech%2520Blog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NWFhYzQzZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MESON Tech Blog</dc:creator></item><item><title><![CDATA[Androidでカスタムフォントを使いたい]]></title><description><![CDATA[アプリ開発する時大抵デフォルトのフォントのまま開発すると思う
しかし、アプリにアクセントをつけたい時にフォントを変えたい時もあると思うのでメモ
デフォルトだと
端末デフォルトのフォント
指定できるのはsans-serif, serif, monospace, cursive
その他のフォントが使いたい時は下記のgoogle fontsから好きなを選びダウンロードする
https://fonts.google.com/
Android Studioでresディレクトリでfontディレクトリを新規追加しダウンロードしたファイルを入れる
アプリ内でフォントを指定できるようにする
object ...]]></description><link>https://zenn.dev/giglancer/articles/229f95efdab556</link><guid isPermaLink="true">https://zenn.dev/giglancer/articles/229f95efdab556</guid><pubDate>Sun, 08 Sep 2024 15:09:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XvFhE4VK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmZlZTVlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo</dc:creator></item><item><title><![CDATA[【完全版】3ヶ月でAndroidエンジニアを目指すためのロードマップ]]></title><description><![CDATA[
 はじめに
ご覧いただきありがとうございます。Gonです！
Androidアプリ開発の世界へようこそ！
今回は、友人がAndroidエンジニアを目指すと聞いて実践的なロードマップを作ってみることにしました。
僕自身、Javaのレガシーなシステム開発からキャリアをスタートしましたが、働き方の自由度や仕事の楽しさを求めて、独学でKotlinを学び、Androidアプリ開発へとスキルチェンジしました。
フリーランスのAndroidエンジニアとしては3年以上働いていますが、基本的にフルリモートで働けるためすごく自由度が高いですし、単価も上がりやすく、何より楽しんで仕事できてます。
「どこから始...]]></description><link>https://zenn.dev/masashiii/articles/1b5598a089bac5</link><guid isPermaLink="true">https://zenn.dev/masashiii/articles/1b5598a089bac5</guid><pubDate>Sun, 08 Sep 2024 04:07:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bfEn9ASK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E7%2589%2588%25E3%2580%25913%25E3%2583%25B6%25E6%259C%2588%25E3%2581%25A7Android%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgyM2JjZmIzMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gon</dc:creator></item><item><title><![CDATA[Kotlin OKHttp]]></title><description><![CDATA[
 👤対象者

androidで、HTTP通信をやってみたい人
OKHttpなるものを試したい人

Android開発でAPI通信するライブラリといえば、Retrofitが有名なパッケージですがOKHttpなるものあるようです。
気になるので試したみた👩‍⚕️
(offical)[https://square.github.io/okhttp/]
HTTP is the way modern applications network. It’s how we exchange data &amp; media. Doing HTTP efficiently makes your stuf...]]></description><link>https://zenn.dev/joo_hashi/articles/046b6831386826</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/046b6831386826</guid><pubDate>Fri, 06 Sep 2024 22:27:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hb5KHarP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Kotlin%2520OKHttp%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[LLMを試してみる]]></title><description><![CDATA[
 どんなものか？
LLM（Large Language Model）とは、大規模言語モデルのことを指します。以下にLLMの主要な特徴と重要性についてまとめます：


定義：
LLMは膨大な量のテキストデータを学習し、人間の言語を理解・生成できる人工知能モデルです。


特徴：

大量のデータで学習：インターネット上の文章や書籍など、膨大なテキストデータを使用
自然言語処理：人間の言語を高度に理解し、生成できる
多機能：翻訳、要約、質問応答、文章生成など多様なタスクをこなせる



代表的なモデル：

GPT（Generative Pre-trained Transformer）シリーズ...]]></description><link>https://zenn.dev/joo_hashi/articles/c60ed65e04f1ae</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/c60ed65e04f1ae</guid><pubDate>Thu, 05 Sep 2024 21:51:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--957f1cQM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item></channel></rss>