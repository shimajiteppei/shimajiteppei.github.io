<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 23 Jun 2025 07:43:18 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[大体なんでも接続する VS Code の Node.js 用デバッガーを気軽に使いたい]]></title><description><![CDATA[VS Code でデバッグを行う場合、ググったり AI に質問すると launch.json を作成する方法が上位に表示されます(されないこともあります)。しかし、状況によっては事前に設定を作るのは少しばかり手間に感じることもあります。

実験用に作った .js .ts ファイルの挙動を確認したい場合

npm run test でちょっとだけ変数の内容を確認したい場合

今回の記事は VS Code + Node.js の組み合わせにおいて、組み込みのデバッガーで気軽にデバッグする方法のメモとなります。

 気軽にデバッグする方針
VS Code でのデバッグは「各言語用のデバッグアダ...]]></description><link>https://zenn.dev/hankei6km/articles/simple-nodejs-debugging-vscode</link><guid isPermaLink="true">https://zenn.dev/hankei6km/articles/simple-nodejs-debugging-vscode</guid><pubDate>Sun, 22 Jun 2025 13:11:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PmSirLUD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E4%25BD%2593%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A7%25E3%2582%2582%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2520VS%2520Code%2520%25E3%2581%25AE%2520Node.js%2520%25E7%2594%25A8%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AC%25E3%2583%25BC%25E3%2582%2592%25E6%25B0%2597%25E8%25BB%25BD%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hankei6km%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NzEwMGYzNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hankei6km</dc:creator></item><item><title><![CDATA[AppleのLiquid GlassをSvelteで再現してみた]]></title><description><![CDATA[こんにちは。
AppleのWWDC25で発表された新しいUI、Liquid Glassにびっくりしました。
https://www.youtube.com/watch?t=601&amp;v=0_DjDdfqtUE
動画にある通り、ガラスのような見た目のボタンやアイコンを新たなデザインとして発表しました。
これを見た途端CSSで再現したいと思いました。
ということで、Liquid GlassをCSSで再現してSvelteコンポーネントにしてnpmで公開するまでです。

 使い方
本題の前に、使い方を説明します。
Svelteの環境をViteなどで構築した後、以下のコマンドでインストールし...]]></description><link>https://zenn.dev/tozaburo/articles/liquid-glass-svelte</link><guid isPermaLink="true">https://zenn.dev/tozaburo/articles/liquid-glass-svelte</guid><pubDate>Sun, 22 Jun 2025 11:34:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AdxhtKnd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apple%25E3%2581%25AELiquid%2520Glass%25E3%2582%2592Svelte%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tozaburo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlZWRmNGVkNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tozaburo</dc:creator></item><item><title><![CDATA[ローカルで編集してリモートでビルドするJSC開発用スクリプト]]></title><description><![CDATA[JavaScriptCoreはx84_64とarm64以外にも実はARMv7をサポートしている[1]
自分の手元にある環境はx84_64とarm64だけで、ARMv7マシン[2]はとある会社がホストしているssh可能なマシンを貸してもらっている。そのマシンは性能は良いので特に問題なくJSCをビルドできる。しかし地理的に遠いためかレイテンシがやばくて、そのマシン上でWebKitのソースコードを編集するのはストレスがすごい。こういうの普通どうするの？
普通にどうするのかわからないので、自分のローカルのx86_64マシンでソースコードを編集し、ARMv7のマシンにsshしてそっちでビルドして開...]]></description><link>https://zenn.dev/sosukesuzuki/articles/2fc200e56d8adf</link><guid isPermaLink="true">https://zenn.dev/sosukesuzuki/articles/2fc200e56d8adf</guid><pubDate>Sun, 22 Jun 2025 10:19:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hInJDQbM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E7%25B7%25A8%25E9%259B%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2599%25E3%2582%258BJSC%25E9%2596%258B%25E7%2599%25BA%25E7%2594%25A8%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sosuke%2520Suzuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kzVm5WZHo2MC1CT3lMTS1VVnZaNmdNSDJlTlp1T0lTa1owT3lyNnc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sosuke Suzuki</dc:creator></item><item><title><![CDATA[JavaScriptで数字を計算してみるだけの回]]></title><description><![CDATA[前回は、JavaScriptで文字を出してみるだけ、という話をしました。今回はその続きで、数字を使って簡単な計算をしてみます。
まずはまた、ブラウザを開いてください。そして前回と同じように「検証」から「Console」を出します。そこに、こんな感じで書いてみてください。
console.log(1 + 1);
エンターキーを押すと、結果が出るはずです。おそらく「2」と表示されましたよね。はい、足し算できました。
じゃあ、いろいろ試してみましょう。
console.log(10 - 3);
console.log(4 * 5);
console.log(20 / 4);
それぞれ、引き算、...]]></description><link>https://zenn.dev/mergelog/articles/ec58f0463dc416</link><guid isPermaLink="true">https://zenn.dev/mergelog/articles/ec58f0463dc416</guid><pubDate>Sun, 22 Jun 2025 02:17:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PRYmYu-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E6%2595%25B0%25E5%25AD%2597%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AE%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2583%2594%25E3%2583%2590%25E3%2583%25A9%25E7%25AE%25A1%25E7%2590%2586%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YjEyOGQ4NTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カピバラ管理人</dc:creator></item><item><title><![CDATA[値渡し、ポインタ渡し、オブジェクト渡し、参照渡しの言語別対応表と用語説明]]></title><description><![CDATA[関数の実引数に変数を指定したとき、仮引数にどんな渡し方ができるかの言語別対応表と、関連用語の説明を書いてみました。
値渡しと参照渡しの理解の助けになりましたら幸いです。
!
「オブジェクト渡し」はWikipediaにある「参照の値渡し」で記載しています。


 言語別対応表



＼ 渡し方　 ＼言語　＼

値渡し(値コピー)&nbsp;

ポインタ渡し(ポインタ値コピー値共有)

参照の値渡し(参照値コピーオブジェクト共有)

参照渡し(コピーなし変数共有)




C#
できる(int arg)
できる(int *arg)
できる(Object arg)
できる(ref int ar...]]></description><link>https://zenn.dev/shiracamus/articles/7d0b9e65e92e67</link><guid isPermaLink="true">https://zenn.dev/shiracamus/articles/7d0b9e65e92e67</guid><pubDate>Sat, 21 Jun 2025 23:29:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EXucpA4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%2581%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%2581%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25B8%25A1%25E3%2581%2597%25E3%2580%2581%25E5%258F%2582%25E7%2585%25A7%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E5%2588%25A5%25E5%25AF%25BE%25E5%25BF%259C%25E8%25A1%25A8%25E3%2581%25A8%25E7%2594%25A8%25E8%25AA%259E%25E8%25AA%25AC%25E6%2598%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiracamus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shiracamus</dc:creator></item><item><title><![CDATA[mjsファイルとは？ 🧐]]></title><description><![CDATA[!
.mjs ファイルは、JavaScriptのECMAScript Modules (ES Modules) 形式であることを明示するためのファイル拡張子です。ES Modulesは、現代のJavaScriptで推奨されるモジュールシステムであり、import と export 文を使用してモジュールを管理します。📦


 .mjs ファイルが登場した背景 📜
歴史的に、Node.jsなどのJavaScript実行環境では CommonJS という異なるモジュールシステムが広く使われてきました。CommonJSでは require() と module.exports を使用します。
...]]></description><link>https://zenn.dev/mk_mokumoku/articles/81f2a350957758</link><guid isPermaLink="true">https://zenn.dev/mk_mokumoku/articles/81f2a350957758</guid><pubDate>Sat, 21 Jun 2025 17:52:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dnpENuUs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:mjs%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B8%25A1%25E9%2582%258A%25E7%2590%25A2%25E8%25B3%2587%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0lhVUpwcVRGRGRZVFc5eW9lUHlzY1dLWllGb2pocmJHRFczWW9sU2JldllsdFhYR2I9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>渡邊琢資</dc:creator></item><item><title><![CDATA[ESNextについて 🚀]]></title><description><![CDATA[!
ESNext（いーえすねくすと）は、JavaScriptの次期バージョンを指す総称です。毎年新しい仕様がリリースされるECMAScriptの、まだ正式に承認されていない、開発中の機能を指すことが多いです。つまり、将来JavaScriptに実装される可能性のある、新しい構文やAPIなどを指します。✨

ESNextは、JavaScriptをより強力に、より便利にするための進化の最前線と言えますね！ 💪

 ESNextのサンプルコードと使用した場合・使用しなかった場合の比較 💡
ここでは、ESNextの代表的な機能の一つである「Null合体演算子 (Nullish Coalescing...]]></description><link>https://zenn.dev/mk_mokumoku/articles/20715d307f3158</link><guid isPermaLink="true">https://zenn.dev/mk_mokumoku/articles/20715d307f3158</guid><pubDate>Sat, 21 Jun 2025 17:19:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vnsBhanD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:ESNext%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B8%25A1%25E9%2582%258A%25E7%2590%25A2%25E8%25B3%2587%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0lhVUpwcVRGRGRZVFc5eW9lUHlzY1dLWllGb2pocmJHRFczWW9sU2JldllsdFhYR2I9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>渡邊琢資</dc:creator></item><item><title><![CDATA[JavaScriptのmoment-timezoneでUnixtimeに変換する]]></title><description><![CDATA[
 はじめに
JavaScriptのmoment-timezoneライブラリを使って、日時をUnixtimeに変換する機会がありました。
タイムゾーンやサマータイムについても調べたので、moment-timezoneライブラリの使い方と併せて、本記事で紹介します。


 Unixtimeとは？
Unixtimeとは、1970年1月1日（UTC）午前0時0分0秒を起点として、そこから何秒経過したかを整数で表した時刻のことです。
Unixtimeは、タイムゾーンやサマータイムの影響を受けずに、世界中で一意に時刻を表現できます。


 主な用途



用途
説明




データベースのタイムス...]]></description><link>https://zenn.dev/s_t_taka/articles/072c18f7fff9d0</link><guid isPermaLink="true">https://zenn.dev/s_t_taka/articles/072c18f7fff9d0</guid><pubDate>Sat, 21 Jun 2025 14:01:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HfbnNE-E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEmoment-timezone%25E3%2581%25A7Unixtime%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s.taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnlCRWFmZnRjdUQ5akxjVHZpM0JDaWstZHZ1OFQ3MXg1S2VDQy1VbzlpbHhlWVdnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s.taka</dc:creator></item><item><title><![CDATA[JavaScriptでABC411(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc411

 A - Required Length
https://atcoder.jp/contests/abc411/tasks/abc411_a
「Pの長さ ≧ L」かどうかでYes/Noの出力を変えれればそれでOK。
私は三項演算子を使っていますが、初心者向け想定解法はたぶんif-else文
https://atcoder.jp/contests/abc411/submissions/66924961
0分56秒 AC!

 B - Distance Table
https://atcoder.jp/contests/...]]></description><link>https://zenn.dev/aya_koto/articles/da6267670ebb03</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/da6267670ebb03</guid><pubDate>Sat, 21 Jun 2025 13:48:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RAZiVmlh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC411%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[【JavaScript】??（Null合体演算子）と || の違いを解説]]></title><description><![CDATA[
 はじめに
JavaScriptで「値がないときにデフォルト値を使う」ための書き方として、
次のようなコードを見たことはありませんか？
const name = input || 'ゲスト';
このような書き方は、||（論理和）を使った「ショートサーキット評価」と呼ばれます。
左側の値が「falsy（偽とみなされる値）」なら、右側の値が使われるという便利な構文です。

詳しくは、以下の記事で解説しています👇
JavaScriptのtruthyとfalsyとは？ショートサーキット評価もあわせて解説

しかし、実務では「空文字（''）や0は有効な値として扱いたい」というケースもあります。
...]]></description><link>https://zenn.dev/fd2025/articles/61b480dcd8713e</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/61b480dcd8713e</guid><pubDate>Sat, 21 Jun 2025 10:25:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kE7lGiGn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%253F%253F%25EF%25BC%2588Null%25E5%2590%2588%25E4%25BD%2593%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25EF%25BC%2589%25E3%2581%25A8%2520%257C%257C%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[アップロードした画像をBASE64で保存する]]></title><description><![CDATA[ゲームとかでキャラメイクする機能があって、キャラ画像をアップして設定できないだろうか。
Plicyのようなブラウザゲーム、DLして遊ぶRPGツクールMZみたいなものを想定します。
WEBサーバならファイル保存すればよいと思います。名前が被らないようにする方が課題。
こういうゲーム環境ではファイルとして保存するのは難しいと思うので、BASE64にします。
どちらもHTML表示ができるので、まずは画像データを何とか覚えておくが目標。
※ ツクールとして反映するには別のテクニックが必要で、私は今は持ってません・・・。
今回考えた事：
アップロードした画像をBASE64の形で保存したい。
BAS...]]></description><link>https://zenn.dev/yam776/articles/d3c70e0efa7027</link><guid isPermaLink="true">https://zenn.dev/yam776/articles/d3c70e0efa7027</guid><pubDate>Sat, 21 Jun 2025 00:06:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NDTmKqKN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592BASE64%25E3%2581%25A7%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1VzTUtRSm5lVndyVEFLZUVkMzZlS3MtY0NyQXVaamVGQTgzT05Ya0VDaU9ZZ3lnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やまだ</dc:creator></item><item><title><![CDATA[Web Serial APIでFlexiSpot昇降デスクをブラウザから制御する]]></title><description><![CDATA[
 Web Serial APIでFlexiSpotE8昇降デスクをブラウザから制御する

 はじめに
FlexiSpotの昇降デスクを使っている方は多いと思いますが、「物理リモコンではなく、パソコンから直接制御できたら便利だろうな」と思ったことはありませんか？
今回、Web Serial APIを使ってFlexiSpot昇降デスクをWebブラウザから直接制御できるツールを(claudeが)作成しました。
引用: flexispot公式


 作ったもの

https://junnakarai.github.io/flexispot-web-controller/
FlexiSpot W...]]></description><link>https://zenn.dev/junnakarai/articles/a91f03729b8319</link><guid isPermaLink="true">https://zenn.dev/junnakarai/articles/a91f03729b8319</guid><pubDate>Fri, 20 Jun 2025 14:16:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LEdPBu6h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%2520Serial%2520API%25E3%2581%25A7FlexiSpot%25E6%2598%2587%25E9%2599%258D%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%258B%25E3%2582%2589%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvai5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun</dc:creator></item><item><title><![CDATA[Google Mapの埋め込みURLからマップへのリンクを生成する]]></title><description><![CDATA[Google Mapの埋め込みURLは、直接URLを表示しようとすると
The Google Maps Embed API must be used in an iframe.
と表示され地図が見られません。
このURLをなんとかしてGoogleマップに辿り着きたかった。
まあ埋め込みコードを表示しさえすれば「拡大地図を表示」からマップに飛べるんだけどね


 今回試す地図
https://maps.app.goo.gl/6mN8vZxF9Vk3ZWUS6

 埋め込みコード・埋め込みURL
&lt;iframe src="https://www.google.com/maps/embe...]]></description><link>https://zenn.dev/tobigumo/articles/76d45cdf622196</link><guid isPermaLink="true">https://zenn.dev/tobigumo/articles/76d45cdf622196</guid><pubDate>Fri, 20 Jun 2025 11:23:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A2OzYi9j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Map%25E3%2581%25AE%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BFURL%25E3%2581%258B%25E3%2582%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%25B8%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tobigumo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliMzVjMzA2YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tobigumo</dc:creator></item><item><title><![CDATA[MCPサーバーでTSDocを参照出来るようにする]]></title><description><![CDATA[
 はじめに
近年、ClaudeをはじめとしたLLMの進化はめざましく、日々の開発補助や設計検討など、ソフトウェアエンジニアリングのあらゆる場面で利用されるようになってきました。
しかし、LLMの持つ知識は訓練データのカットオフ時点までのものに限られているという制約があります。これにより、比較的新しいOSSライブラリを使用する際、LLMがそのライブラリを正しく理解・活用できないという問題が発生します。
例えば、弊社で最近公開した@praha/byethrowというResult型ライブラリがあります。これはneverthrowなどにインスパイアされた軽量・シンプルなAPIを提供するType...]]></description><link>https://zenn.dev/praha/articles/f4c3b59c69c680</link><guid isPermaLink="true">https://zenn.dev/praha/articles/f4c3b59c69c680</guid><pubDate>Fri, 20 Jun 2025 04:46:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4He9BL54--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7TSDoc%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E5%2587%25BA%25E6%259D%25A5%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Karibash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiZDIyMmFjMTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PrAha%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Karibash</dc:creator></item><item><title><![CDATA[初学者がWebRTCでプロダクト開発できるようになるまで【第1回：WebRTCの概要と仕組み】]]></title><description><![CDATA[
 はじめに
「ブラウザだけでビデオ通話やリアルタイム通信ができる」と聞いて興味を持ったものの、WebRTCって結局何ができるの？どんな仕組みなの？という疑問をお持ちの方も多いのではないでしょうか。
この連載では、筆者がひょんなことからWebRTC使ったプロダクトを開発することになり、完全初心者の状態から実際にプロダクトを実装し、様々な問題に対処できるようになるまでの過程で理解したことを、順を追ってお伝えしていこうと思います。
連載全体の流れ：


【今回】 - WebRTCの概要と仕組み
接続の仕組み - シグナリングとP2P接続確立
ビデオ通話アプリを作成
トラブルシューティングと運...]]></description><link>https://zenn.dev/taketo45/articles/3d41c4466cc054</link><guid isPermaLink="true">https://zenn.dev/taketo45/articles/3d41c4466cc054</guid><pubDate>Fri, 20 Jun 2025 04:00:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Neb-cUDc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2581%258CWebRTC%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2580%2590%25E7%25AC%25AC1%25E5%259B%259E%25EF%25BC%259AWebRTC%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2581%25A8%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Guy_take%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNDU3YWZjNDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Guy_take</dc:creator></item><item><title><![CDATA[AIツールが開発者のモチベーションに与える影響とは？JetBrainsの心理学的アプローチ]]></title><description><![CDATA[

 はじめに
みなさんこんにちは。JetBrains公式代理店NATTOSYSTEMの私です。
JetBrainsの研究チーム（DXおよびHAX：Human-AI eXperience）は、AIツールが開発者の動機づけやウェルビーイングに与える影響を調査しています。本記事では、従来の「生産性中心」の視点ではなく、心理的ニーズに着目した分析をまとめました。
参照：Software Developers on AI: Insights and Opportunities (JetBrains Blog)


 理論的枠組み：自己決定理論（Self-Determination Theory,...]]></description><link>https://zenn.dev/nattosystem_jp/articles/7408c2a833b2e6</link><guid isPermaLink="true">https://zenn.dev/nattosystem_jp/articles/7408c2a833b2e6</guid><pubDate>Fri, 20 Jun 2025 03:46:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--006UgGeW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2581%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AB%25E4%25B8%258E%25E3%2581%2588%25E3%2582%258B%25E5%25BD%25B1%25E9%259F%25BF%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FJetBrains%25E3%2581%25AE%25E5%25BF%2583%25E7%2590%2586%25E5%25AD%25A6%25E7%259A%2584%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%25B0%25E3%2581%25AD%25E3%2581%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYWQxMDhjNTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BENATTOSYSTEM%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねばねば</dc:creator></item><item><title><![CDATA[34万行規模な Rails app を Webpack から esbuild へ移行した話]]></title><description><![CDATA[こんにちは、Freelance Developer の天海です。
お仕事で関わってるTAIANでやった34万行大規模な Rails app を Webpack から高速な JavaScript バンドラーである esbuild に移行したことを紹介します。この移行により、ビルド時間とメモリ使用量を大幅に削減し、パフォーマンスを向上させました。
⚡ 自動リビルド（2.48倍高速）
⚡ 本番ビルド（2.42倍高速）
⚡ frontend ビルド（115.79倍高速）
⚡ メモリ使用量（22.9%削減）


 やったこと

jsbundling-rails で webpacker を置き換え
...]]></description><link>https://zenn.dev/taian/articles/c04c7e9bbf67ce</link><guid isPermaLink="true">https://zenn.dev/taian/articles/c04c7e9bbf67ce</guid><pubDate>Fri, 20 Jun 2025 00:55:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qcSp_tNK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:34%25E4%25B8%2587%25E8%25A1%258C%25E8%25A6%258F%25E6%25A8%25A1%25E3%2581%25AA%2520Rails%2520app%2520%25E3%2582%2592%2520Webpack%2520%25E3%2581%258B%25E3%2582%2589%2520esbuild%2520%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25A4%25A9%25E6%25B5%25B7%2520%25E3%2581%25AF%25E3%2582%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MWVkNzdkZjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TAIAN%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p6bktoOHFaT0tidW1HbzBuenpWeWhpZExnWEh4WjZNT3dqMmh2aHAwPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>天海 はら</dc:creator></item><item><title><![CDATA[Javascriptっていいよね]]></title><description><![CDATA[JavaScriptって言葉、聞いたことある人は多いと思います。けど、実際に「何するものなの？」って聞かれると、なんとなく分かってるようで分からない。そんな人向けに、すごく簡単に説明してみます。
ざっくり言うと、JavaScriptはウェブサイトに「動き」をつけるためのものです。
たとえば、ボタンを押したら画像が切り替わるとか、文字を入力したら自動でチェックしてくれるとか。ああいうのって、ただの文字や画像だけじゃできないんですよね。そこで活躍するのがJavaScriptです。
ウェブサイトって、いくつかのパーツでできてます。まず「HTML」っていうのがあって、これは文章とか見出しとか、ペ...]]></description><link>https://zenn.dev/mergelog/articles/97f2283c168c2b</link><guid isPermaLink="true">https://zenn.dev/mergelog/articles/97f2283c168c2b</guid><pubDate>Thu, 19 Jun 2025 13:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BJ2b0-Jo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%2584%25E3%2582%2588%25E3%2581%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2583%2594%25E3%2583%2590%25E3%2583%25A9%25E7%25AE%25A1%25E7%2590%2586%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YjEyOGQ4NTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カピバラ管理人</dc:creator></item><item><title><![CDATA[オプショナルチェイニング (`?.`) メモ]]></title><description><![CDATA[
 ✅ 概要
オプショナルチェイニング（?.）は、JavaScript/TypeScript の構文で、
null または undefined の可能性があるプロパティに安全にアクセスするための演算子。


 ✅ 書き方と意味
const value = obj?.prop


obj が null または undefined の場合 → value は undefined になる（エラーにならない）

obj が存在すれば obj.prop の値を返す



 ✅ よくある使用例

 1. ネストしたオブジェクトの安全なアクセス
const user = { profile: { na...]]></description><link>https://zenn.dev/komdoroid/articles/b46109e94c0367</link><guid isPermaLink="true">https://zenn.dev/komdoroid/articles/b46109e94c0367</guid><pubDate>Thu, 19 Jun 2025 13:32:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S836ahQA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A7%25E3%2582%25A4%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2520%2528%2560%253F.%2560%2529%2520%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kom%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjMmEzNTUxOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kom</dc:creator></item><item><title><![CDATA[カンタンなWebツールはAIに作らせよう]]></title><description><![CDATA[こんにちはAtaroです。この頃暑いですね。とある事情で自転車を30分間こいだのですが、汗びっしょりになってしまいました。昔の6月って暑かったっけ...?
そんなことはさておき、今回は近頃自分が実践しているLLMを用いたカンタンなWebツールの自作について解説していきたいと思います

 カンタンなWebツールならAIで作れる時代
ちょっとした物事とかを解決してくれるWebツールってインターネットにあふれてますよね
文章の文字数を数えてくれるアプリとか、1GBって何MBだっけとか、MarkDownのテーブルをHTMLのテーブルに変換したいとか...etc
今までだったらWebツールをググっ...]]></description><link>https://zenn.dev/ataro16180/articles/3bc236e03b871f</link><guid isPermaLink="true">https://zenn.dev/ataro16180/articles/3bc236e03b871f</guid><pubDate>Thu, 19 Jun 2025 12:13:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OFEkr7Sa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AB%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%25AAWeb%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AFAI%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%2589%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ataro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1OTNmYWRkMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ataro</dc:creator></item></channel></rss>