<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 03 Mar 2025 00:50:28 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[エンジニアのためのポートフォリオアプリを作った話「DevProfile」]]></title><description><![CDATA[
 DevProfile
https://devprofile-tau.vercel.app/

 使い方
このように自分のリンクを各種SNSに貼り付けることで、自分のプロフィールを紹介することができます。


 Next.jsとSupabaseを使用したスキル管理アプリの構築
この記事では、Next.jsとSupabaseを使用して、ユーザーが自分のスキルを管理できるプロフィール管理アプリケーションの構築方法について説明します。このアプリケーションでは、スキルの追加、編集、削除、並べ替えが可能で、ユーザー認証にはOAuthを利用します。

 技術スタック


Next.js: フロント...]]></description><link>https://zenn.dev/utan0907/articles/e833aee816aaf9</link><guid isPermaLink="true">https://zenn.dev/utan0907/articles/e833aee816aaf9</guid><pubDate>Sun, 02 Mar 2025 22:18:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eQKFdxeT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%258CDevProfile%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbjlhQkptd2R1YS1LTGlUTkJRSlhyU0JDNThnUHJOS0xCRW0tTUk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuta</dc:creator></item><item><title><![CDATA[コールバック関数について調べてみる]]></title><description><![CDATA[chatGPTを使ってコールバック関数について調べてみました。
現在のレベル
「コールバック関数って、関数内で呼び出される関数のことでしょ？」
「なんかPromiseの登場によって使わてもよくなったやつ？」


（質問）コールバック関数について、初学者でも分かるように説明してください。




コールバック関数（callback function）とは、ある処理が終わった後に「次に実行するために呼ばれる関数」のことです。簡単に言うと、「関数の中に渡す、後で実行される関数」 です。




 ■コールバック関数を使う理由



通常、プログラムは上から下に順番に実行されますが、コールバック...]]></description><link>https://zenn.dev/masato24524/articles/1e7fe29f12aa33</link><guid isPermaLink="true">https://zenn.dev/masato24524/articles/1e7fe29f12aa33</guid><pubDate>Sun, 02 Mar 2025 13:24:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lZvHqigE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhYzUxMTE3YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masato</dc:creator></item><item><title><![CDATA[[加筆中]メモ帳でも作れるDuckDB-wasmを使ったcsv→parquet変換ツール・他]]></title><description><![CDATA[DuckDBの名前も2024年に比べて良く聞くようになってきました。
なのでここでDuckDB-wasmを使用したツールについての本も出してみようと思い書き始めた次第です。
ただ色んな導入へのハードル(VScodeの導入、npm installなども含め)がある方も多いと思います。
そこでとりあえずメモ帳でも作れるシンプルなHTML・CSS・Javascript(とSQL少し)を使って色々なツールを作って書いていけたらと思います。
(自分が初心者なので自己学習のため細かすぎたり、間違いがある可能性が十分にあり加筆や修正を行うことになると思います。ご了承ください。)]]></description><link>https://zenn.dev/amana/books/ab18580c90ce26</link><guid isPermaLink="true">https://zenn.dev/amana/books/ab18580c90ce26</guid><pubDate>Sun, 02 Mar 2025 08:21:18 GMT</pubDate><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[setTimeout vs Promise どっちが先？ JavaScriptの実行順序を解説]]></title><description><![CDATA[
 はじめに
あなたは下記のJavaScriptのコードを見て、どの順番でコンソールに文字が出力されるかわかりますか？
setTimeout(() =&gt; {
  console.log('setTimeout')
}, 0)

Promise.resolve().then(() =&gt; {
  console.log('Promise')
})

console.log('hoge')
私は hoge → setTimeout → Promise の順に出力されると思っていましたが、実際は hoge → Promise → setTimeout になります。
これを最近知って困...]]></description><link>https://zenn.dev/ryutaro_h/articles/5895be77eba1af</link><guid isPermaLink="true">https://zenn.dev/ryutaro_h/articles/5895be77eba1af</guid><pubDate>Sun, 02 Mar 2025 03:55:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--33Yt-F2I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:setTimeout%2520vs%2520Promise%2520%25E3%2581%25A9%25E3%2581%25A3%25E3%2581%25A1%25E3%2581%258C%25E5%2585%2588%25EF%25BC%259F%2520JavaScript%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E9%25A0%2586%25E5%25BA%258F%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryutaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyYjlkMTUzNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryutaro</dc:creator></item><item><title><![CDATA[SSG向け日本語対応の全文検索エンジンを作りました(5) - 使いやすい検索にしたい！]]></title><description><![CDATA[
第一回 日本語で検索したい！

第二回 英語でももちろん検索したい！

第三回 打ち間違いしても検索したい！

第四回 WebGPUで検索したい！

第五回 使いやすい検索にしたい！(今回)

前回のあらすじ！あいまい検索の高性能化を模索していたぼくは、GPUによる検索のオフロードという手法があることを知りました。GPUのアーキテクチャを確認し、WebGPUの長い作法とバッファの扱いの難しさを超え、なんとかWGSLでbitapを実装することができました。プロファイル結果に不明な点はあれど、CPUで実行するbitapに比べ、10倍程度の高速化を達成できました。
以下のサイトで、ぼくが作成...]]></description><link>https://zenn.dev/lulliecat/articles/fdecd7dae36f89</link><guid isPermaLink="true">https://zenn.dev/lulliecat/articles/fdecd7dae36f89</guid><pubDate>Sun, 02 Mar 2025 02:43:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yN4l2cuh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSG%25E5%2590%2591%25E3%2581%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25285%2529%2520-%2520%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lulliecat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYmM0MzgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lulliecat</dc:creator></item><item><title><![CDATA[リアクティブを保ちつつ複数のcheckboxを一つの配列にまとめる]]></title><description><![CDATA[
 実装イメージ

動的に生成したcheckboxのグループと値を、一つのオブジェクトに連携してます。

 コード

vue.js
&lt;script setup&gt;
let queries = ref({});// オブジェクトを宣言
let checkboxes = `{group:name,boxes:[value1,value2]},{group2:name,boxes:[]...}といった感じのオブジェクト`;
checkboxes.forEach((checkbox) =&gt; {
    Object.assign(queries.value, { [checkbo...]]></description><link>https://zenn.dev/210neon/articles/b56e9a675b2e3f</link><guid isPermaLink="true">https://zenn.dev/210neon/articles/b56e9a675b2e3f</guid><pubDate>Sat, 01 Mar 2025 22:09:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ez1g3-5y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A1%25E3%2581%25A4%25E3%2581%25A4%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEcheckbox%25E3%2582%2592%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NettoNeon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlNGZhNmYxMjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NettoNeon</dc:creator></item><item><title><![CDATA[textarea大きさ自動変更ごり押し実装]]></title><description><![CDATA[
 ざっくりとした概要
ページロード時に実行。
textareaのすべての要素をコピーしたdiv要素を作成する。
すべて変換される
以下コード

   window.addEventListener('load', function(){
              // すべてのtextareaを取得
      console.log("load：リソースファイルを全て読み込みました。");
      const textareas = document.querySelectorAll('textarea');

        textareas.forEach(textare...]]></description><link>https://zenn.dev/kemii/articles/72d7f6167d8b55</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/72d7f6167d8b55</guid><pubDate>Sat, 01 Mar 2025 21:52:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tI_bUEK6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:textarea%25E5%25A4%25A7%25E3%2581%258D%25E3%2581%2595%25E8%2587%25AA%25E5%258B%2595%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2594%25E3%2582%258A%25E6%258A%25BC%25E3%2581%2597%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[型 '{ children: ReactNode; }' には型 'IntrinsicAttributes' と共通のプロパティがありません]]></title><description><![CDATA[
 タイトルのエラー文について
&lt;Provider&gt;部分の問題のようです

layout.tsx
import Provider from "./Provider";

export default function Layout({
  children,
}: {
  children: React.ReactNode;
}) {
  return &lt;Provider&gt;{children}&lt;/Provider&gt;;
}


Provider.tsx
export default function Provider() {}


 解決方法

Prov...]]></description><link>https://zenn.dev/wakki/articles/9d9ec7820cecbb</link><guid isPermaLink="true">https://zenn.dev/wakki/articles/9d9ec7820cecbb</guid><pubDate>Sat, 01 Mar 2025 19:06:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ztq0kcb7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%2520%2527%257B%2520children%253A%2520ReactNode%253B%2520%257D%2527%2520%25E3%2581%25AB%25E3%2581%25AF%25E5%259E%258B%2520%2527IntrinsicAttributes%2527%2520%25E3%2581%25A8%25E5%2585%25B1...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkOTg4YTEyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワッキー</dc:creator></item><item><title><![CDATA[GASで毎月最初の営業日に処理を実行したい]]></title><description><![CDATA[Daily Blogging70日目
たとえば、2025年11月の場合だと
11月1日：土曜日
11月2日：日曜日
11月3日：月曜日(文化の日)
11月4日：火曜日←ここで処理を実行したい！
※トリガーは毎日実行するものとするよ

 コード
最終的にこんな感じになりました
function isNoticeDay(today, year, month) {
  // MEMO: 第一営業日に通知
  const firstBusinessDay = getFirstBusinessDay(year, month);

  if (today.toDateString() !== fir...]]></description><link>https://zenn.dev/shoan/articles/7ea72a32da46c3</link><guid isPermaLink="true">https://zenn.dev/shoan/articles/7ea72a32da46c3</guid><pubDate>Sat, 01 Mar 2025 11:19:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LA2ORrN_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%25E3%2581%25A7%25E6%25AF%258E%25E6%259C%2588%25E6%259C%2580%25E5%2588%259D%25E3%2581%25AE%25E5%2596%25B6%25E6%25A5%25AD%25E6%2597%25A5%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlpJckNTX1JkYlRYSXpVU204TmRlRGx3UG9xMWtteVhtcUV6WVdkQUxlPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sho</dc:creator></item><item><title><![CDATA[LogTape 0.9.0 リリース：同期設定APIとランタイム互換性の向上]]></title><description><![CDATA[LogTape 0.9.0のリリースを発表できることを嬉しく思います！このバージョンでは、さまざまなJavaScript環境での柔軟性を高めながら、一般的なユースケースでの設定を簡素化する重要な改善が含まれています。

 新機能

 同期設定API：セットアップの簡素化
同期バージョンの設定関数が追加されました：


configureSync()：LogTapeを同期的に設定

disposeSync()：LogTapeリソースを同期的に破棄

resetSync()：LogTape設定を同期的にリセット

これらの関数は、非同期操作が不要なシナリオ向けに、よりシンプルなAPIを提供し...]]></description><link>https://zenn.dev/hongminhee/articles/98989e400c5fcf</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/98989e400c5fcf</guid><pubDate>Sat, 01 Mar 2025 10:13:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2n9skZgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LogTape%25200.9.0%2520%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E5%2590%258C%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259AAPI%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E4%25BA%2592%25E6%258F%259B%25E6%2580%25A7%25E3%2581%25AE%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[SSG向け日本語対応の全文検索エンジンを作りました(4) - WebGPUで検索したい！]]></title><description><![CDATA[
第一回 日本語で検索したい！

第二回 英語でももちろん検索したい！

第三回 打ち間違いしても検索したい！

第四回 WebGPUで検索したい！(今回)
第五回 使いやすい検索にしたい！


前回のおさらい！そもそも転置インデックスを作る必要すらなく線形探索で十分な性能が出ることがわかりました。やることがなくなってしまった私は、苦し紛れに新しい機能、あいまい検索を導入しました。基本的なアルゴリズムであるbitapの実装を行い、それがちゃんと遅いことを確認（？）したのちに、英語はトライを導入、日本語はbigram一致数の緩和を行うことであいまい検索を1ms以下で実現できました。しかし、...]]></description><link>https://zenn.dev/lulliecat/articles/9a92836ef90dc1</link><guid isPermaLink="true">https://zenn.dev/lulliecat/articles/9a92836ef90dc1</guid><pubDate>Sat, 01 Mar 2025 09:23:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IqEtzukn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSG%25E5%2590%2591%25E3%2581%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25284%2529%2520-%2520WebGPU%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lulliecat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYmM0MzgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lulliecat</dc:creator></item><item><title><![CDATA[Web Audio APIにおけるユーザーインタラクションと音声再生の実装]]></title><description><![CDATA[ブラウザでは、ユーザーが明示的に操作しない限り、音声の自動再生が制限 されています。
これは、ユーザーエクスペリエンスを考慮したブラウザのポリシーによるもの。
この制限を回避するには、適切な AudioContext の管理とイベント処理が必要。
本記事では、ReactアプリケーションでWeb Audio APIを用いて音声を適切に再生する方法を解説します。
公式ドキュメント
https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API
https://developer.chrome.com/blog/autoplay/
...]]></description><link>https://zenn.dev/kome471/articles/6e10749aabff19</link><guid isPermaLink="true">https://zenn.dev/kome471/articles/6e10749aabff19</guid><pubDate>Sat, 01 Mar 2025 08:15:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bBTm14e9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%2520Audio%2520API%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E9%259F%25B3%25E5%25A3%25B0%25E5%2586%258D%25E7%2594%259F%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MTA3NjM4NTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こめ</dc:creator></item><item><title><![CDATA[JavaScript関数の実行メカニズム：エンジンから CPU までの旅]]></title><description><![CDATA[JavaScriptプログラミングにおいて、関数は基本的な構成要素です。しかし、function myFunc() { ... } と書いたコードが実際にどのように実行されるのか、その内部的なプロセスについて深く理解している開発者は多くありません。この記事では、JavaScriptエンジンが関数を実行する過程を、コードの解析から実際のCPU実行までステップバイステップで解説します。

 JavaScriptエンジンとは
JavaScriptエンジンとは、JavaScriptコードを解釈し実行するためのソフトウェアコンポーネントです。主要なJavaScriptエンジンには以下のようなものが...]]></description><link>https://zenn.dev/soze/articles/00d158c3669cd2</link><guid isPermaLink="true">https://zenn.dev/soze/articles/00d158c3669cd2</guid><pubDate>Sat, 01 Mar 2025 07:53:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0Puf10H_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E3%2583%25A1%25E3%2582%25AB%25E3%2583%258B%25E3%2582%25BA%25E3%2583%25A0%25EF%25BC%259A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2581%258B%25E3%2582%2589%2520CPU%2520%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%2597%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keyser%2520soze%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNGQ1NDMzNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keyser soze</dc:creator></item><item><title><![CDATA[JavaScriptの舞台裏: エンジン開発者たちが支える言語の進化]]></title><description><![CDATA[JavaScriptの進化の裏には、C++で書かれたJavaScriptエンジンの開発者たちの不断の努力があります。この関係性を深掘りしていきましょう。

 JavaScriptエンジンとは
JavaScriptエンジンとは、JavaScriptコードを解析し、実行するプログラムです。主要なJavaScriptエンジンには以下のようなものがあります：


V8 - Google Chrome、Node.jsで使用

SpiderMonkey - Mozillaが開発、Firefoxで使用

JavaScriptCore - Appleが開発、Safariで使用

Chakra - かつて...]]></description><link>https://zenn.dev/soze/articles/7d393a72e4b159</link><guid isPermaLink="true">https://zenn.dev/soze/articles/7d393a72e4b159</guid><pubDate>Sat, 01 Mar 2025 06:37:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Xqn9Pbs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E8%2588%259E%25E5%258F%25B0%25E8%25A3%258F%253A%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%259F%25E3%2581%25A1%25E3%2581%258C%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keyser%2520soze%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNGQ1NDMzNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keyser soze</dc:creator></item><item><title><![CDATA[@solana/spl-tokenを使わずに phantom wallet からSPLトークンを送信する]]></title><description><![CDATA[JavaScriptを使ったSPLトークンの送信プログラムについて解説します。
Phantomを始めとした wallet api に関するドキュメントでは、@solana/web3.jsを使った例はみられますが、そのほとんどはSOLを送信するための実装になっています。
SOLはSolanaチェーン上でのネイティブトークンなので確かに使い勝手はいいです。
しかし同様に、SPLトークン(Solana Program Library)を扱うニーズも高いです。
そこでSPLトークンをweb3.jsのみで扱う例として、本記事を執筆します。
同じようなツールを開発する際の一助となれば幸いです。
前提...]]></description><link>https://zenn.dev/kawason/articles/3010d03c71b2b3</link><guid isPermaLink="true">https://zenn.dev/kawason/articles/3010d03c71b2b3</guid><pubDate>Fri, 28 Feb 2025 08:49:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xcKpeHUT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2540solana%252Fspl-token%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25AB%2520phantom%2520wallet%2520%25E3%2581%258B%25E3%2582%2589SPL%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2582%258F%25E3%2581%259D%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hBUC1KbHJHMnNrV2pVMm93T0hXbUNwdVNzdk9YUGNLWlpESThNWXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かわそん</dc:creator></item><item><title><![CDATA[個人開発勉強①のコード内容理解]]></title><description><![CDATA[今回は前回の記事でClaudeに出力してもらったコードを理解することに努めようと思う。
https://zenn.dev/bousoumelon/articles/95762672907362

 index.htmlの理解

index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &l...]]></description><link>https://zenn.dev/bousoumelon/articles/a08f030cfbbf60</link><guid isPermaLink="true">https://zenn.dev/bousoumelon/articles/a08f030cfbbf60</guid><pubDate>Fri, 28 Feb 2025 06:20:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IZUSk8kA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E5%258B%2589%25E5%25BC%25B7%25E2%2591%25A0%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2586%2585%25E5%25AE%25B9%25E7%2590%2586%25E8%25A7%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259A%25B4%25E8%25B5%25B0%25E3%2583%25A1%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2591%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZjE4NVl1LXZ2aHVlOW9GVXFkbXBlR3FOcWFWVU5UWDRrYVM0dUd5cWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>暴走メロンパン</dc:creator></item><item><title><![CDATA[追伸:  AsyncIterator.withResolvers は ReadableStream 内のメソッドを外部化した方が作りやすい？]]></title><description><![CDATA[前回 あんなに長いコードを書いていたのに、よくよく考えると ReadableStream も asyncIterator が実装されていることを思い出したのでもっと簡単に書けることに気が付きました。
https://streams.spec.whatwg.org/#rs-asynciterator
具体的には ReadableStream の内部で使われている ReadableStreamDefaultController を使うとですね。
https://developer.mozilla.org/ja/docs/Web/API/ReadableStreamDefaultControl...]]></description><link>https://zenn.dev/juners/articles/cc71f5bcaea28d</link><guid isPermaLink="true">https://zenn.dev/juners/articles/cc71f5bcaea28d</guid><pubDate>Fri, 28 Feb 2025 03:04:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PT5-7CDv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25BF%25BD%25E4%25BC%25B8%253A%2520%2520AsyncIterator.withResolvers%2520%25E3%2581%25AF%2520ReadableStream%2520%25E5%2586%2585%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[ES Modules (ESM) と CommonJS (CJS)ってなに？JavaScriptのモジュールシステムの歴史]]></title><description><![CDATA[
 🌐 モジュールシステムってなに？



モジュールシステム は、プログラムを小さな部品（モジュール）に分割して、必要な時だけ使える仕組みだよ。
例えば、Reactのコンポーネントや、ユーティリティ関数を別ファイルにして import / require するあの仕組み！



 🕰️ なぜモジュールシステムが必要？

昔のJavaScript（例えば jQuery を使ってた時代）は、すべてのコードが一つの巨大なファイルにまとまっていたんだ。

 🚫 問題点


コードが増えると 管理が大変。
変数名がかぶると バグが起きやすい。
再利用可能なコード（例えば 関数やクラス）を、他のプ...]]></description><link>https://zenn.dev/soze/articles/6ac793b1974682</link><guid isPermaLink="true">https://zenn.dev/soze/articles/6ac793b1974682</guid><pubDate>Fri, 28 Feb 2025 02:29:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AVyp4yuc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ES%2520Modules%2520%2528ESM%2529%2520%25E3%2581%25A8%2520CommonJS%2520%2528CJS%2529%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259FJavaScript%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keyser%2520soze%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNGQ1NDMzNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keyser soze</dc:creator></item><item><title><![CDATA[js タグ機能スクリプト　紹介]]></title><description><![CDATA[function search(str){
  let parent = document.getElementById('link_section');
  let cNodes = parent.children; // 要素ノードのみを取得
  
  for (let i = 0; i &lt; cNodes.length; i++) {
    let element = cNodes[i];
    if (element.classList.contains(str)) {
        element.style.display = "block";
    } else...]]></description><link>https://zenn.dev/kemii/articles/924d22d432289d</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/924d22d432289d</guid><pubDate>Fri, 28 Feb 2025 00:24:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UQpkJaBS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:js%2520%25E3%2582%25BF%25E3%2582%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2580%2580%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[Temporal APIの現在地（2025年2月時点）]]></title><description><![CDATA[
 はじめに
Temporal APIは、一言で要約すると「JavaScriptの日付・時間の処理をまともにする」ためのプロポーザル(仕様提案)です。
この記事では、Temporalについて「今どういう状態なのか」「今すぐ使うにはどうすればいいのか」「今すぐ使う場合に注意すべきことは何か」といった情報を提供します。

 仕様
Temporalは現在stage 3です。
https://github.com/tc39/proposal-temporal
2024年6〜9月にかけて巨大な仕様変更(normative change)があったものの、2025年現在Temporalは仕様として「ほ...]]></description><link>https://zenn.dev/fabon/articles/e9d4610722b660</link><guid isPermaLink="true">https://zenn.dev/fabon/articles/e9d4610722b660</guid><pubDate>Thu, 27 Feb 2025 10:29:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kSlYHlkx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Temporal%2520API%25E3%2581%25AE%25E7%258F%25BE%25E5%259C%25A8%25E5%259C%25B0%25EF%25BC%25882025%25E5%25B9%25B42%25E6%259C%2588%25E6%2599%2582%25E7%2582%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%2581%25E3%2581%25BC%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMThiZjIwMDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふぁぼん</dc:creator></item></channel></rss>