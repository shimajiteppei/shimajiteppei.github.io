<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-03-31T16:50:54+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2006628</id>
    <published>2025-03-31T16:50:54+09:00</published>
    <updated>2025-03-31T16:50:54+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/reliya1541/items/e71b3adcfe0d97a916c6"/>
    <url>https://qiita.com/reliya1541/items/e71b3adcfe0d97a916c6</url>
    <title>ビット演算を活用して処理速度を高速化する方法 (for TypeScript)</title>
    <content type="html">初め
%演算じゃなくビット演算で最適化をすることでどのくらい高速化するのか気になってテストしました。
Code
const startTime1 = performance.now();
const…</content>
    <author>
      <name>reliya1541</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2006578</id>
    <published>2025-03-31T15:09:06+09:00</published>
    <updated>2025-03-31T15:33:48+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/k_bobchin/items/6c1dfb2ff2edbfb24607"/>
    <url>https://qiita.com/k_bobchin/items/6c1dfb2ff2edbfb24607</url>
    <title>オブジェクトの key が存在しなければ、デフォルト値を返すオブジェクト</title>
    <content type="html">この記事は何か
TypeScript でオブジェクトの存在しないプロパティにアクセスしたときに、undefinedの代わりにデフォルト値を返す関数を実装してみました。
ES2015 のProxyオブ…</content>
    <author>
      <name>k_bobchin</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2006508</id>
    <published>2025-03-31T12:35:46+09:00</published>
    <updated>2025-03-31T12:37:19+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/chamudi/items/a214176c8dbba965be91"/>
    <url>https://qiita.com/chamudi/items/a214176c8dbba965be91</url>
    <title>2025年時点でもAxiosは必要？</title>
    <content type="html">モダンJavaScript開発の初期において、Axiosはネイティブのfetch() APIと比較して便利な機能を提供するHTTPリクエストライブラリとして広く採用されてきました。しかし、2025年…</content>
    <author>
      <name>chamudi</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2006503</id>
    <published>2025-03-31T12:23:53+09:00</published>
    <updated>2025-03-31T12:23:53+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/CRUD5th/items/fa2d618eba48c621abac"/>
    <url>https://qiita.com/CRUD5th/items/fa2d618eba48c621abac</url>
    <title>JavaScriptにおける型安全設計：JSDocとTypeScriptによる静的検査と漸進的導入の戦略</title>
    <content type="html">概要
JavaScriptは本来、動的型付き言語であり、実行時まで型の検査が行われない。
その柔軟性の裏には、「いつでも何でも通ってしまう」という危険が潜んでいる。
この問題に対して、以下のような手…</content>
    <author>
      <name>CRUD5th</name>
    </author>
  </entry>
</feed>
