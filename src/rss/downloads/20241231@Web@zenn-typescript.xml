<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 31 Dec 2024 06:36:38 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[手を動かして理解するBranded Type]]></title><description><![CDATA[
 この記事の内容

Branded Typeの概要を知ることができる。
実際にBranded Typeを作成済みのソースコードに適用することで、手を動かして理解する。


 はじめに
Branded Typeとは、TypeScriptにおける型の安全性を高めるためのテクニックの一つです。基本的には、プリミティブ型にブランド（目印）を付与することで、同じプリミティブ型でも異なる型として扱うことを可能にします。
この記事では私が文章読んでいるだけだと腹落ちできなかったので、実際に既存のリポジトリをBranded Typeに適用することでありがたみを理解しようとする試みです。

 Brand...]]></description><link>https://zenn.dev/sui_water/articles/abdce537c48f9e</link><guid isPermaLink="true">https://zenn.dev/sui_water/articles/abdce537c48f9e</guid><pubDate>Tue, 31 Dec 2024 02:39:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3FRxS_xC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2589%258B%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258BBranded%2520Type%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MGQ1MWNkOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スイ</dc:creator></item><item><title><![CDATA[タイプセーフなStorage API管理 + Svelte]]></title><description><![CDATA[
 導入
LocalStorageやSessionStorageといったStorage APIは非常に便利な存在ですが、数値やオブジェクトを格納しようとすると型定義が曖昧になりがちです。
また、いちいちシリアライズ、デシリアライズを噛ませるのもネックになります。
そこで今回は、Storage APIをより便利に扱うラッパーライブラリを作成したので紹介します。

 @jill64/typed-storage
https://github.com/jill64/typed-storage

 string型
まずは、型指定なし（string型）から説明します。
typedStorageにキー...]]></description><link>https://zenn.dev/jill64/articles/0acfe33323156b</link><guid isPermaLink="true">https://zenn.dev/jill64/articles/0acfe33323156b</guid><pubDate>Tue, 31 Dec 2024 02:32:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oIAFytqD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%25BB%25E3%2583%25BC%25E3%2583%2595%25E3%2581%25AAStorage%2520API%25E7%25AE%25A1%25E7%2590%2586%2520%252B%2520Svelte%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jill64%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkhvRWlDNlllZ2R6cGxwZ2xPQnVaN2V5akFPSUMtVExwQUpIMFg2NERIZWl3Z1dLTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jill64</dc:creator></item><item><title><![CDATA[TypeScript×クリーンアーキテクチャで簡単なタスク管理アプリを作成した]]></title><description><![CDATA[n 番煎じかもしれませんがクリーンアーキテクチャについての学習のアウトプットも兼ねて TypeScript で簡単なタスク管理アプリケーションを作成しました。
https://github.com/guitarinchen/clean-architecture-todo-app

 使用技術


TypeScript (言語)

Hono (Web フレームワーク)

Prisma (ORM)

Biome (linter, formatter)


 ディレクトリ構成
上層レイヤから infrastructure, presentation, application, domain の...]]></description><link>https://zenn.dev/guitarinchen/articles/818922fec11cc5</link><guid isPermaLink="true">https://zenn.dev/guitarinchen/articles/818922fec11cc5</guid><pubDate>Tue, 31 Dec 2024 01:46:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---e-lrsb0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25C3%2597%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:guitarinchen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMjdmMGEzNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>guitarinchen</dc:creator></item><item><title><![CDATA[JWT認証ってなんなん【Expressを用いた使用例】]]></title><description><![CDATA[
 JWTとは
JSON Web Tokenの略。
ユーザの認証と認可に使用されるトークンベースの認証方法
JWTによりユーザの識別情報や権限情報を含むトークンを生成し、
それをクライアント-サーバー間でやり取りすることで、安全に認証情報を保持するしくみ

 JWTを使うメリット
ユーザ特有のIDと、共通の秘密鍵を組み合わせJWTを生成することで以下のようなメリットがある


セキュリティの強化
秘密鍵は、JWTトークンの署名と検証に使用されるため、トークンの改ざんを防止できる。
正しい秘密鍵がなければ、トークンを生成したり安全性を保てない。


ユーザーの識別
JWTのペイロードにユー...]]></description><link>https://zenn.dev/nineball/articles/43b1ce18f5e75e</link><guid isPermaLink="true">https://zenn.dev/nineball/articles/43b1ce18f5e75e</guid><pubDate>Mon, 30 Dec 2024 23:22:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZQ7pppWo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JWT%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25AA%25E3%2582%2593%25E3%2580%2590Express%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E4%25BD%25BF%25E7%2594%25A8%25E4%25BE%258B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nineball%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3YWM1ZTllYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nineball</dc:creator></item><item><title><![CDATA[第八話：画像認識する方法]]></title><description><![CDATA[
AI活用を検討中で、既存のデータセットを活用し、風景・建物・食べ物を検出したい。モジュール開発で精度検証しながら研究に活用、PC（Windows）での利用を想定しております。ご対応可能でしょうか？

今回もお問い合わせいただいた内容から厳選し、問題解決していきます。
ここでは、Google Cloud Vision APIを使って、アップロードした画像から風景、建物、食べ物を検出するシンプルな例を示していきます。
また、前回チャットボット用にメニューのOneとTwoを活用しましたので、今回はThreeのページに開発していきます。

それでは、Let’s Go!!

 1. Google...]]></description><link>https://zenn.dev/takayamasashi/articles/61061b534f94a6</link><guid isPermaLink="true">https://zenn.dev/takayamasashi/articles/61061b534f94a6</guid><pubDate>Mon, 30 Dec 2024 18:35:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--romZfwlB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AC%25AC%25E5%2585%25AB%25E8%25A9%25B1%25EF%25BC%259A%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E8%25B0%25B7%25E6%2598%258C%25E5%25BF%2597-%25E3%2583%2596%25E3%2583%25AB%25E3%2583%2586%25E3%2583%258A%25E3%2582%25B5%25E3%2582%25B9Inc.%25E4%25BB%25A3%25E8%25A1%25A8%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高谷昌志-ブルテナサスInc.代表</dc:creator></item><item><title><![CDATA[指定のディレクトリ下をブラウザ上で探索可能にする GitHubActions を作った]]></title><description><![CDATA[
 概要
Generate Directory Listing Action という GitHubActions を作った。
https://github.com/yKicchan/generate-directory-listing-action
細かい使い方についてはREADMEへどうぞ(この記事では触れない)

 なにができるの？
文字にするとタイトルの通り「指定のディレクトリ下をブラウザ上で探索可能にする」となる。
Repository にある Demo を見てもらえるとどういう意味かわかりやすいと思う。
Demoの画像


具体的には以下の通り

指定のディレクトリ以下を探索
...]]></description><link>https://zenn.dev/ykicchan/articles/f42b708fa332a4</link><guid isPermaLink="true">https://zenn.dev/ykicchan/articles/f42b708fa332a4</guid><pubDate>Mon, 30 Dec 2024 16:27:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XCWpsL_J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E4%25B8%258B%25E3%2582%2592%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E6%258E%25A2%25E7%25B4%25A2%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2520GitHubActions%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2581%259D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDgxZmEzY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きっちゃそ</dc:creator></item><item><title><![CDATA[React FlowでControlsに独自のボタンを追加する方法]]></title><description><![CDATA[
 React FlowでControlsに独自のボタンを追加する方法
React Flowのデフォルトのコントロールパネルにはzoomin, zoomout, fitview, toggle interactiveの4つのボタンが表示されている。そこに独自のボタンを追加する方法を知ったのでメモ。

 React Flowとは
フローチャートや組織図などのチャートを簡単に描くことができるコンポーネント

公式ページより
A customizable React component for building node-based editors and interactive diagra...]]></description><link>https://zenn.dev/mitate_gengaku/articles/react-flow-add-control-button</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/react-flow-add-control-button</guid><pubDate>Mon, 30 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l6pFFZ4K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Flow%25E3%2581%25A7Controls%25E3%2581%25AB%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[React FlowでControlsの既存のボタンを置き換える方法]]></title><description><![CDATA[
 React FlowでControlsの既存のボタンを置き換える方法
React Flowのデフォルトのコントロールパネルにはzoomin, zoomout, fitview, toggle interactiveの4つのボタンが表示されている。その4つのボタンのスタイルやアイコンが気に入らない場合、置き換えることができることを知ったのでメモ。

 React Flowとは
フローチャートや組織図などのチャートを簡単に描くことができるコンポーネント

公式ページより
A customizable React component for building node-based edit...]]></description><link>https://zenn.dev/mitate_gengaku/articles/react-flow-replace-default-button</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/react-flow-replace-default-button</guid><pubDate>Mon, 30 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7Mz7svw2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Flow%25E3%2581%25A7Controls%25E3%2581%25AE%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%2592%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[宣言的プログラミングと配列メソッドの活用：JavaScriptのコードをより良くする]]></title><description><![CDATA[JavaScriptにおける配列操作は、フロントエンドからバックエンドまで幅広い開発現場で日常的に行われる重要なタスクです。
従来の手続き型なループ処理に加え、map、sort、reduceといった宣言的な配列メソッドを活用することで、コードの可読性や保守性を向上させることが可能です。
本記事では、宣言的プログラミングの概念と、mapやreduceといったメソッドがどのように抽象化を提供し、「何をするか」に集中できるのかについても深掘りします。

 宣言的プログラミングとは
宣言的プログラミングは、「何を達成したいか」をコードで表現するプログラミングパラダイムです。
具体的な手順や操作の...]]></description><link>https://zenn.dev/fitness_densuke/articles/declarative_programming_and_array_methods</link><guid isPermaLink="true">https://zenn.dev/fitness_densuke/articles/declarative_programming_and_array_methods</guid><pubDate>Mon, 30 Dec 2024 09:48:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QqD2DoKa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%25A3%25E8%25A8%2580%25E7%259A%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E9%2585%258D%25E5%2588%2597%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25EF%25BC%259AJavaScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E8%2589%25AF%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tamtam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4YzUxYzNmMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tamtam</dc:creator></item><item><title><![CDATA[CLI で TODO を管理する]]></title><description><![CDATA[
 TODO を何で管理するか問題
みなさんは TODO を管理するときにどんなものを使っていますか？
筆者はジプシーで、古くは手書きでノートや付箋に書いたり、 Slack の自分の times/DM に書いたり、notion に書いたり、GitHub の issue はどうか、Chrome の拡張はどうか...と様々な手法を取ってきました。
ただ、どれも長くは続きませんでした。
todo 1つは大したことないサイズですが、
役職上、細々としたものが非同期かつ同時並行で走っているのでチケット化しなくてもメモはしておきたいところです。
手書きだとその場になかったり持ち歩く必要があったり、 ...]]></description><link>https://zenn.dev/seventhseven07/articles/ddac898532bacc</link><guid isPermaLink="true">https://zenn.dev/seventhseven07/articles/ddac898532bacc</guid><pubDate>Mon, 30 Dec 2024 00:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jBp-G4pX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLI%2520%25E3%2581%25A7%2520TODO%2520%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shumpei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyY2ZhOWM5YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shumpei</dc:creator></item><item><title><![CDATA[文字列は実質Any問題に対するKotlinのアプローチ 〜TypeScriptのBranded Typesを添えて〜]]></title><description><![CDATA[
 文字列は実質Any
例えば従業員IDを管理するemp_123456_idと部署IDを管理するdep_123456_idがあるとします。
これを文字列として扱った場合、コードとしては以下のようになります。
val employeeId = "emp_123456_id"
val departmentId = "dep_123456_id"
ですが、これらは文字列のためこのように従業員IDと部署IDを間違って代入できてしまいます。
val employeeId = "dep_123456_id"
val departmentId = "emp_123456_id"
これは両方とも文字列の...]]></description><link>https://zenn.dev/yskn_sid25/articles/ff9514a99ea811</link><guid isPermaLink="true">https://zenn.dev/yskn_sid25/articles/ff9514a99ea811</guid><pubDate>Sun, 29 Dec 2024 23:04:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nG07GiQ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AF%25E5%25AE%259F%25E8%25B3%25AAAny%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258BKotlin%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2520%25E3%2580%259CTypeScript%25E3%2581%25AEBranded%2520Types%25E3%2582%2592%25E6%25B7%25BB%25E3%2581%2588%25E3%2581%25A6%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1OTY4ZjJmNWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[どこでも簡単にHTMLのサニタイズ with Svelte]]></title><description><![CDATA[
 導入
カスタムHTMLのレンダリングはXSSの危険性があるので慎重になるのは言わずもがな。
一般的にフロントエンドでは最強のサニタイズライブラリDOMPurifyを使うのが鉄板ですが、これだけでは色々と不足点が出てくるので色々ライブラリを作りました。
https://github.com/cure53/DOMPurify

 サーバーサイドでもサニタイズしたい
モダンなフロントエンドというかBFFアーキテクチャではSSRが使われますが、先述のDOMPurifyはDOMを使用するのでサーバーでは使用できません。では、どうするかというとJSDOMを使って無理やりサーバー上にDOMを作成し...]]></description><link>https://zenn.dev/jill64/articles/20c4cfe535ba99</link><guid isPermaLink="true">https://zenn.dev/jill64/articles/20c4cfe535ba99</guid><pubDate>Sun, 29 Dec 2024 19:54:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ymtQ5EGM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25A7%25E3%2582%2582%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABHTML%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%258B%25E3%2582%25BF%25E3%2582%25A4%25E3%2582%25BA%2520with%2520Svelte%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jill64%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkhvRWlDNlllZ2R6cGxwZ2xPQnVaN2V5akFPSUMtVExwQUpIMFg2NERIZWl3Z1dLTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jill64</dc:creator></item><item><title><![CDATA[Svelte5で`Complex binding patterns require an ...`エラーが発生した時の応急対処]]></title><description><![CDATA[
 一旦JSDocを使いましょう

 何が起きたか
svelte-sanitizeをSvelte5にアップデートしていたところ以下のようなコードでエラーが発生。
&lt;script lang="ts"&gt;
  import { sanitize } from '@jill64/universal-sanitizer'

  let {
    html,
    options = undefined
  }: {
    html: string
    options?: Parameters&lt;typeof sanitize&gt;[1]
  } = $props()

...]]></description><link>https://zenn.dev/jill64/articles/8c4142794e053a</link><guid isPermaLink="true">https://zenn.dev/jill64/articles/8c4142794e053a</guid><pubDate>Sun, 29 Dec 2024 18:49:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gik0fXll--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte5%25E3%2581%25A7%2560Complex%2520binding%2520patterns%2520require%2520an%2520...%2560%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jill64%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkhvRWlDNlllZ2R6cGxwZ2xPQnVaN2V5akFPSUMtVExwQUpIMFg2NERIZWl3Z1dLTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jill64</dc:creator></item><item><title><![CDATA[VOICEVOX エンジンを Docker で立ち上げて、音声をダウンロードする]]></title><description><![CDATA[
 はじめに
VOICEVOX は、商用・非商用問わず無料で利用できるテキスト読み上げソフトです。VOICEVOX エンジンを Docker で簡単に立ち上げ、TypeScript を使って音声ファイルをダウンロードする方法を紹介します。

 Docker Compose で VOICEVOX を起動する
まず、以下の docker-compose.yml ファイルを準備します。

docker-compose.yml
version: '3.8'
services:
  voicevox_engine:
    image: voicevox/voicevox_engine:cpu-u...]]></description><link>https://zenn.dev/sorutonookage/articles/3fe6544347aa9e</link><guid isPermaLink="true">https://zenn.dev/sorutonookage/articles/3fe6544347aa9e</guid><pubDate>Sun, 29 Dec 2024 12:53:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---ne3gZL5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VOICEVOX%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%2520Docker%2520%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%25A6%25E3%2580%2581%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BD%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4MWZjNDA5ZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ソルト</dc:creator></item><item><title><![CDATA[WailsとAngularでのデスクトップアプリの作り方]]></title><description><![CDATA[
 はじめに
今回はWailsというGo製のWeb技術でデスクトップアプリを作れるフレームワークを使ってAngularアプリをデスクトップアプリ化する手順を示します。
各フレームワークの公式サイトは以下の通りです。
https://wails.io/ja/
https://angular.jp/

 Wailsとは
Wailsは、Go言語で軽量かつ高速なデスクトップアプリケーションを開発できるフレームワークです。Web開発の知識を活かしつつ、高効率なアプリ開発が可能です。
以下のような特徴があります。[1]

ネイティブなメニュー、ダイアログ、テーマ、透過処理を使用可能です
Window...]]></description><link>https://zenn.dev/neko3cs/articles/dev-desktopapp-with-wails-and-angular</link><guid isPermaLink="true">https://zenn.dev/neko3cs/articles/dev-desktopapp-with-wails-and-angular</guid><pubDate>Sun, 29 Dec 2024 08:08:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ymlLMZpp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wails%25E3%2581%25A8Angular%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:neko3cs%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzNzM0NmNjNmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>neko3cs</dc:creator></item><item><title><![CDATA[Gemini APIで画像解析を試す（TypeScriptサンプル付き）]]></title><description><![CDATA[
 はじめに
この記事では、Geminiモデルに画像を投稿して解析する方法をTypeScriptで解説します。プロジェクトの構築には軽量で高速なJavaScriptランタイムであるBunを使用しています。また、ローカル画像ファイルの読み込み、Google Generative AIを利用した画像解析、そして料金体系についても説明します。

 必要な準備
以下の手順を事前に行ってください。

プロジェクトの作成:

bun create ts
cd ts

依存関係のインストール:

bun add @google/generative-ai
bun add dotenv

Google ...]]></description><link>https://zenn.dev/sorutonookage/articles/246099ae5da021</link><guid isPermaLink="true">https://zenn.dev/sorutonookage/articles/246099ae5da021</guid><pubDate>Sun, 29 Dec 2024 08:05:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ibMIyZZB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemini%2520API%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E8%25A7%25A3%25E6%259E%2590%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%25EF%25BC%2588TypeScript%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E4%25BB%2598%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BD%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4MWZjNDA5ZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ソルト</dc:creator></item><item><title><![CDATA[React Native×Expoに入門する]]></title><description><![CDATA[
 はじめに
どうも！最近、手を動かしながら学ぶことで理解が深まることを実感しているshigeです。
この記事では最近注目を集めているReact Nativeを学ぶために、ToDoアプリを作成する過程を解説します。
私と同じように、これからReact Nativeを始める方にとって、少しでも役に立つ内容になれば幸いです。

 今回作成するToDoアプリ
以下が今回作成したToDoアプリの動作イメージです。

GitHubでソースコードも公開していますので、ぜひ参考にしてください。
ソースコードを見る

 動作環境

マシン : M1 MacBookAir
Node.js：v20.14.0...]]></description><link>https://zenn.dev/5hige99/articles/bf1f81d15861ec</link><guid isPermaLink="true">https://zenn.dev/5hige99/articles/bf1f81d15861ec</guid><pubDate>Sun, 29 Dec 2024 02:20:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nyHBbYFI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Native%25C3%2597Expo%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shige%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyNzA1YWYzZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shige</dc:creator></item><item><title><![CDATA[未使用であることを示す変数 アンダーバー(_)【個人学習まとめ】]]></title><description><![CDATA[
 引数のアンダーバー(_)
JavaScriptにおいて、引数にアンダーバー(_)が使われることがある。
これは、未使用であることを示す。(自分は初めて見たが、一般的な使い方らしい)
new Promise((_,reject) =&gt; {
    setTimeout(() =&gt; {
        reject("制限時間!");
    },500);
});
Promiseは第一引数に成功状態を示すresolve、第二引数に失敗状態を示すrejectが必要。
上記の例では、タイムアウト後にPromiseを拒否したいだけなので、成功状態を示すresolveは必要ないため...]]></description><link>https://zenn.dev/o0rororo0o/articles/ba7bb47d3a2251</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/ba7bb47d3a2251</guid><pubDate>Sun, 29 Dec 2024 02:19:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uW8ChXul--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%25AA%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%2582%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E7%25A4%25BA%25E3%2581%2599%25E5%25A4%2589%25E6%2595%25B0%2520%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%2528_%2529%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[TypeScriptで実践するドメイン駆動設計（DDD）]]></title><description><![CDATA[
 初めに

 モチベーション
私はこれまでドメイン駆動設計で設計されたシステムの開発案件に参画した経験はありますが、1からドメイン駆動設計で設計での設計を行った経験がありませんでした。そのため個人でシステムを開発している際に設計に悩むことがあり、自身で1からドメイン駆動設計ベースの設計ができるようになることを目指して学習を進め、その過程で得た知見をまとめています。
特に以下のような点に焦点を当てています。

ドメイン駆動設計の理論をTypeScriptのコードベースで理解する
既存のドメイン駆動設計システムを理解するだけでなく、新規設計ができるようになるための知識の整理


 ドメイン...]]></description><link>https://zenn.dev/masakifukunishi/articles/0823a25f9a4713</link><guid isPermaLink="true">https://zenn.dev/masakifukunishi/articles/0823a25f9a4713</guid><pubDate>Sun, 29 Dec 2024 01:13:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hpgEvRWn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2599%25E3%2582%258B%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E9%25A7%2586%25E5%258B%2595%25E8%25A8%25AD%25E8%25A8%2588%25EF%25BC%2588DDD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNzRiZjhiN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki</dc:creator></item><item><title><![CDATA[React MapLibre で AWS の地形データを表示する！]]></title><description><![CDATA[
 ⛳ Goal

Next.js で作ったアプリ上に react-map-gl を使い MapLibre で地形データを3Dで表示させたい

 環境

Next.js: 15.1.3

React: 19.0.0

TypeScrip: 5.7.2

maplibre-gl: 4.7.1

react-map-gl: 7.1.8



 🐕 Step

react-map-gl を使って MapLibre の地図を表示させる
AWS が公開している 地形データ (Terrain タイル) を表示させる
地形タイル (Terrain Layer) を 3D 表示にする


 1. 🗺️ ...]]></description><link>https://zenn.dev/kikiki_kiki/articles/f60927e05e9c3f</link><guid isPermaLink="true">https://zenn.dev/kikiki_kiki/articles/f60927e05e9c3f</guid><pubDate>Sat, 28 Dec 2024 13:32:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oHRSMiOI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520MapLibre%2520%25E3%2581%25A7%2520AWS%2520%25E3%2581%25AE%25E5%259C%25B0%25E5%25BD%25A2%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KiKiKi%2520KiKi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMWU4OWU5ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KiKiKi KiKi</dc:creator></item></channel></rss>