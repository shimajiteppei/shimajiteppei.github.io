<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 31 Aug 2025 00:16:33 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[eslint-seatbelt で段階的にESLintルールを厳しくする]]></title><description><![CDATA[
 はじめに
ESLintのルールを既存のコードベースに適用する際、一度に厳格なルールを導入すると大量のエラーが発生し、チームの開発効率に影響を与えがちです。
そこでeslint-seatbeltというツールで段階的にルールを厳しくできることを知り、実際に素振りしてみました。
https://www.notion.com/ja/blog/how-we-evolved-our-code-notions-ratcheting-system-using-custom-eslint-rules

 eslint-seatbelt とは
eslint-seatbeltは、ESLintルールを段階的...]]></description><link>https://zenn.dev/tetoteto/articles/eslint-seatbelt-progressive-linting</link><guid isPermaLink="true">https://zenn.dev/tetoteto/articles/eslint-seatbelt-progressive-linting</guid><pubDate>Sat, 30 Aug 2025 23:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--294HNpcq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:eslint-seatbelt%2520%25E3%2581%25A7%25E6%25AE%25B5%25E9%259A%258E%25E7%259A%2584%25E3%2581%25ABESLint%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%258E%25B3%25E3%2581%2597%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TetoTeto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlIN1NhY21HVFFmR3hWQ1d2R01nX29ETVR0WU82UXJ6WGg1Z3dZOUs4VWRJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TetoTeto</dc:creator></item><item><title><![CDATA[【フロントエンド向け】JWTの安全な保管場所とCSRF・XSS対策の技術解説]]></title><description><![CDATA[
 はじめに
Webアプリケーションで広く利用されるJWTなどの認証トークンですが、その保管場所はセキュリティを大きく左右します。この記事では、localStorageを利用する際のリスクを解説し、HttpOnly属性付きクッキーとCSRFトークンを組み合わせた、堅牢なセキュリティ対策のロジックを技術的に解説します。


 1. なぜlocalStorageは危険なのか (XSSの脅威)
localStorageへのトークン保存は実装が容易なため広く使われますが、XSS（クロスサイト・スクリプティング）攻撃に対して脆弱です。


XSS攻撃の概要: 攻撃者がウェブサイトの脆弱性を利用して...]]></description><link>https://zenn.dev/wyuma/articles/4c9ca1eedca8e9</link><guid isPermaLink="true">https://zenn.dev/wyuma/articles/4c9ca1eedca8e9</guid><pubDate>Sat, 30 Aug 2025 17:03:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XGyHHZMs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591JWT%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E4%25BF%259D%25E7%25AE%25A1%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25A8CSRF%25E3%2583%25BBXSS%25E5%25AF%25BE%25E7%25AD%2596%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fanda.dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkZjJmOWZjMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fanda.dev</dc:creator></item><item><title><![CDATA[Cloudflare WorkerのRPC Bindingをmonorepoかつ型付きでやるtips]]></title><description><![CDATA[皆さん、CloudflareでWorkerをService Bindingする時、こう思ったことはないですか？
wrangler typesで生成されたworker-configuration.d.tsにRPC Bindingの適切な型がねぇ、と。
env.HogeService.fetch()しか無い、定義した関数がintellisenseに出てこない。めんどい。私はずっとそう思っていました。
しかし7月29日にリリースされたwrangler@4.26.1にて、これが解決されました。やったぜ。

 tl;dr
wranglerのglobal option, --configを使う[1]...]]></description><link>https://zenn.dev/sev3e3e/articles/1d890fb4d1a925</link><guid isPermaLink="true">https://zenn.dev/sev3e3e/articles/1d890fb4d1a925</guid><pubDate>Sat, 30 Aug 2025 15:18:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---g1BQ6VJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Worker%25E3%2581%25AERPC%2520Binding%25E3%2582%2592monorepo%25E3%2581%258B%25E3%2581%25A4%25E5%259E%258B%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25A7%25E3%2582%2584%25E3%2582%258Btips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sev3e3e%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzMzJhMzVkOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sev3e3e</dc:creator></item><item><title><![CDATA[SolanaのPlaygroundで遊ぼう]]></title><description><![CDATA[
 1. はじめに
Solanaを使ったサービスが世に多く出回っています。そこでエンジニアとして気になるのが、どうやってこういったサービスを作るのか？です。私もこの辺初心者で継続学習中の身です。いろいろ調べていく中でまずはSolanaが用意しているPlaygroundを使ってブラウザ上でいじってみるのが良さそうだということがわかりました。この記事ではPlaygroundを使って最低限のコーディングを試せたらと思います。
内容としては、Walletを作成して、WalletにSOLを入金、Walletの情報をTypeScriptで確認してみる、となります。
この記事は、下記Solana公式の...]]></description><link>https://zenn.dev/acntechjp/articles/17330bb6c8cb92</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/17330bb6c8cb92</guid><pubDate>Sat, 30 Aug 2025 14:29:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tz_gcSE6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Solana%25E3%2581%25AEPlayground%25E3%2581%25A7%25E9%2581%258A%25E3%2581%25BC%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%259E%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%2520%2528Masanori%2520Yos...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MzkwNDBmYjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マッサン (Masanori Yoshida)</dc:creator></item><item><title><![CDATA[あっ、こんなところにEffect-TSが]]></title><description><![CDATA[みなさん、先日流行っていたこの記事は読みましたか？素晴らしい記事でしたね。
エラーハンドリングをして、パフォーマンスを考慮し、保守性とテスタビリティも担保して、信頼性も踏まえたコードを書こうとすると、どうしてもドメインロジックと副作用が混ざってコードが複雑になってしま、、、いいえ、私たちにはEffectがあります。
https://effect.website/
というわけでEffectの宣伝記事です。元の記事のコードを引用していますが、それを非難する意図はなく（相当きれいなコードだと思います）、Effectで書くとこうなるよという紹介のために引用させていただきます。
元のコード
// ...]]></description><link>https://zenn.dev/2_daiki_ando/articles/b9bdb8195e1c73</link><guid isPermaLink="true">https://zenn.dev/2_daiki_ando/articles/b9bdb8195e1c73</guid><pubDate>Sat, 30 Aug 2025 14:03:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ce1m5pOv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%25A3%25E3%2580%2581%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%25E3%2581%25ABEffect-TS%25E3%2581%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ando%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUVEME9QU3pVcHpaQlY0VzMzWXRsZkFMTEdoR0lzOVNBaVJRaG05YkhRVVFJbWtnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ando</dc:creator></item><item><title><![CDATA[tree-sitterを使ってコードをインデックスする際のチャンクを自動で最適化する]]></title><description><![CDATA[前回に引き続き、最近書いているOSSの話です。
前回↓
https://zenn.dev/ushironoko/articles/7001411d4dca41

 コードをインデックスする際の問題点
普通にコンテンツを読み込んでチャンクに分割する時は、指定されたチャンクサイズとチャンクオーバーラップの値を見て、単純な文字数で分割されます。この際、オーバーラップに指定した数値の分だけ隣り合うチャンクは文字が重複するように分割されます。
const chunks = chunkText(text, {
  size: 50, // characters per chunk
  overlap...]]></description><link>https://zenn.dev/ushironoko/articles/dc0e3cf6775951</link><guid isPermaLink="true">https://zenn.dev/ushironoko/articles/dc0e3cf6775951</guid><pubDate>Sat, 30 Aug 2025 11:45:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---vZbUUds--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tree-sitter%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ushironoko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czSUk4bU84NDZtd1FFeVFhUXVDWVVQd1lFam9kMWZTOUNQNWRVdFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ushironoko</dc:creator></item><item><title><![CDATA[Mastra/Next.jsで作るモデレータAIが治安維持するSNS]]></title><description><![CDATA[!
この記事は人間が書き、記事の校正に生成AIを使用しています。


 はじめに
先日社内ハッカソンがありまして、
そこでAIエージェントを組み込んだSNSアプリを作ってみたので紹介します。
なおハッカソンへは個人参加で、成果物の提出までに費やした時間は、
インフラの設定とかも含めて開発に9時間、ドキュメントや動画作成に1時間くらいです。

 成果物

 リポジトリ
https://github.com/n-yokomachi/failnet_app

 このアプリについて
作ったものはこんな感じのSNS風Webアプリです。
「失敗談ややらかし話を共有することで学びに変えていこう」という...]]></description><link>https://zenn.dev/yokomachi/articles/20250830_mastra_moderator_ai_agent</link><guid isPermaLink="true">https://zenn.dev/yokomachi/articles/20250830_mastra_moderator_ai_agent</guid><pubDate>Sat, 30 Aug 2025 10:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OVsXqD3c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%252FNext.js%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BFAI%25E3%2581%258C%25E6%25B2%25BB%25E5%25AE%2589%25E7%25B6%25AD%25E6%258C%2581%25E3%2581%2599%25E3%2582%258BSNS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yoko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNGQ5NzI1ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoko</dc:creator></item><item><title><![CDATA[Vite + TypeScript で作る Chrome 拡張（MV3）Step3]]></title><description><![CDATA[
 chrome.storage の“汎用ラッパ”を作る
Step3 ではデータ保存（chrome.storage）が汎用的に使用できるモジュールを追加していきます。
Options に簡単なフォームを用意して greeting と age を保存・読込・削除できるようします。
また、Popup で保存済みの値を表示し、変更を自動反映（watch）されるようにします。
これで基本的な storage 操作がマスター出来るようになる想定です。

 1. 汎用ストレージラッパを追加
sync、local、session それぞれの storage の操作を汎用的に行えるラッパを作成します。
...]]></description><link>https://zenn.dev/igusaya/articles/347c565dfd7a02</link><guid isPermaLink="true">https://zenn.dev/igusaya/articles/347c565dfd7a02</guid><pubDate>Sat, 30 Aug 2025 10:24:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6UGNnj3N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%2520Chrome%2520%25E6%258B%25A1%25E5%25BC%25B5%25EF%25BC%2588MV3%25EF%25BC%2589Step3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BA%2595%25E8%258D%2589%25E5%25B1%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zm1YM2hHSGpEWFJmZEhCaS1VcXR2N1pQTEdBQzg4bDc1Z0xCdjZFVG11Z1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>井草屋</dc:creator></item><item><title><![CDATA[ブラウザだけで「録音して保存する」]]></title><description><![CDATA[個人開発でブラウザだけで完結する録音→保存が必要になったので、その実装をまとめます。


 方針（結論）


getUserMedia でマイク権限＆音声ストリーム取得

MediaRecorder で録音開始/停止と Blob 生成

URL.createObjectURL で即時プレビュー／ダウンロード




 最小コード
// 1) マイクからストリーム取得（ヒント付き）
const stream = await navigator.mediaDevices.getUserMedia({
  audio: { echoCancellation: true, noiseSuppre...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/6a7575d7c33df2</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/6a7575d7c33df2</guid><pubDate>Sat, 30 Aug 2025 08:36:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s-YZ1sNk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2580%258C%25E9%258C%25B2%25E9%259F%25B3%25E3%2581%2597%25E3%2581%25A6%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyNWU1NGMxYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tats</dc:creator></item><item><title><![CDATA[React Hook Formを勉強したばかりの人がやりがちな誤った実装パターン3選]]></title><description><![CDATA[
 はじめに
私自身がReactを勉強したてで、バリデーション実装のためにReact Hook Formを勉強した際に経験した誤った実装パターンについて紹介します。
誤った実装パターンで覚えてしまうと読みにくいコードになったり、チーム開発で他のエンジニアに迷惑がかかる可能性があります。実際に私の現場でも、誤った実装が積み重なり大規模なリファクタが必要になったことがありました

 React Hook Formとは
Reactでフォームを扱う際、バリデーションや入力管理を楽にしてくれるライブラリが React Hook Formです。公式ドキュメントにも「パフォーマンスが良い」「記述量が減...]]></description><link>https://zenn.dev/nekonoko2323/articles/02e2f8575e5987</link><guid isPermaLink="true">https://zenn.dev/nekonoko2323/articles/02e2f8575e5987</guid><pubDate>Sat, 30 Aug 2025 07:35:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V5q98u7D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hook%2520Form%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%259F%25E3%2581%25B0%25E3%2581%258B%25E3%2582%258A%25E3%2581%25AE%25E4%25BA%25BA%25E3%2581%258C%25E3%2582%2584%25E3%2582%258A%25E3%2581%258C%25E3%2581%25A1%25E3%2581%25AA%25E8%25AA%25A4%25E3%2581%25A3%25E3%2581%259F%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B33%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%2593%25E3%2581%25AE%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEdQNTAyVHBEQV9BbXBmOXUyTDk1aUQ0aHJzNFBnTkxCSTQtMEtabE82LW1CemRjTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねこのこ</dc:creator></item><item><title><![CDATA[ZodやValibotで書いたスキーマの型のテストを書く(Vitestで)]]></title><description><![CDATA[ZodやValibotは、unknownなデータを検証した上でTypeScriptの型をつけてくれる便利なライブラリですが、複雑なスキーマを書いてるとそのスキーマからどういう型になるのかテストを書きたくなりませんか? 私はなります。
例えば次のようなValibotのスキーマを書くと、InferInputでそのスキーマの型をとり出す事ができます。
import * as v from 'valibot';

const schema = v.object({
  name: v.string(),
});

// スキーマから { name: string }　という型を取り出せる
typ...]]></description><link>https://zenn.dev/relayhub/articles/0faf0ab523a841</link><guid isPermaLink="true">https://zenn.dev/relayhub/articles/0faf0ab523a841</guid><pubDate>Sat, 30 Aug 2025 07:22:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pO45qg8r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zod%25E3%2582%2584Valibot%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2528Vitest%25E3%2581%25A7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:anatoo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiMGEyM2I2ZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:RelayHub%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2SlMxT0IydDYtVXJEdi0wM1VCUkhZbWdDUFM2UGxpQ1JQVVI1PXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>anatoo</dc:creator></item><item><title><![CDATA[「作りたいものがない」を脱出：生成AI×無料APIを用いて2時間でミニアプリを作る]]></title><description><![CDATA[エンジニアとして向上心は持っていて場数を踏みたいけど、作りたいものがなくて手を動かして何かを実装する機会に恵まれないのは、エンジニアあるあるの1つなのではないでしょうか？
何を作るか全く決めてない状態から生成AI(ChatGPT5)と対話して1つの成果物を作るまでに実際に辿ったフローをかいつまんで記事にしてみたいと思います。

 導入
私の現在の仕事は、Next.jsを使ったフロントエンドの実装なので、
それを使って何かを実装できればと考えました。
そこで、最初はこんな問いを生成AIに投げてみました。

私は現在フロントエンドエンジニアとして働いていて、Next.jsを普段は触っています...]]></description><link>https://zenn.dev/ohimusdev46301/articles/f352c403a65987</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/f352c403a65987</guid><pubDate>Sat, 30 Aug 2025 06:09:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oBFKmF47--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2581%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%258D%25E3%2582%2592%25E8%2584%25B1%25E5%2587%25BA%25EF%25BC%259A%25E7%2594%259F%25E6%2588%2590AI%25C3%2597%25E7%2584%25A1%25E6%2596%2599API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A62%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7%25E3%2583%259F%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[react-routerでデータ取得場所に迷ったときのメモ]]></title><description><![CDATA[!
この記事は筆者自身が開発中のメモ書きをChatGPTに構成してもらったものを少し調整した記事になります。一部文章に違和感がある部分はご了承ください🙇‍♂️


 はじめに
個人開発でメモアプリを作っていて、「編集フォームの初期値（既存ノート）をどこで取得するか」で迷走しました。最初はページ側で全部やっていたのですが、React Router v7 の loader と Suspense + &lt;Await&gt; に寄せたら気持ちよく落ち着いた、という記録です。

 最初の実装
最初はページに入ってから useParams で id を取り、ページ内のカスタムフックで fetch...]]></description><link>https://zenn.dev/tamon_kondo/articles/9ff454133cdfa5</link><guid isPermaLink="true">https://zenn.dev/tamon_kondo/articles/9ff454133cdfa5</guid><pubDate>Sat, 30 Aug 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hb05NcGa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react-router%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E8%25BF%25B7%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t.k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1WWoxNXZlTDl0VE9pd0p0VHVZSXUyNENJMkJuOG1MYkhNcjFvN2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.k</dc:creator></item><item><title><![CDATA[AWSのAIエディタKiroを触ってみた]]></title><description><![CDATA[
 Kiroとは

Kiroは「vibe codingをviable codeへ」と進化させるAIエージェント搭載のIDE
2025年7月にAWSがリリースした
VSCodeライクのエディタで、AIの仕様駆動開発が魅力

https://kiro.dev/

 料金体系
現状（2025/7/17）の料金体系は以下のようです。
https://kiro.dev/pricing/


KIRO FREE

インタラクションが50回まで
SpecsやAgent hooksなどの基本機能は使用可能



KIRO PRO

インタラクションが1000回まで



KIRO PRO+

インタラク...]]></description><link>https://zenn.dev/ryome/articles/dfe62ba65a10af</link><guid isPermaLink="true">https://zenn.dev/ryome/articles/dfe62ba65a10af</guid><pubDate>Sat, 30 Aug 2025 00:16:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T6yU3esf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E3%2581%25AEAI%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BFKiro%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryome%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZNnRKMExiZTFHTnlzbWo0UXJNLXM4VWd4WHNTTC16dmhoak10NXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryome</dc:creator></item><item><title><![CDATA[【個人開発】底値表アプリを開発した話]]></title><description><![CDATA[
 概要

底値表アプリ（Price Table）は、商品の価格情報を手軽に管理できるWebアプリ
PWA対応によりオフラインでも利用可能
PCだけでなくモバイルにも対応
データのエクスポート/インポートはJSON形式
GitHub Pagesで無料公開・運用中


 底値表アプリを作った背景
私はかなりの節約家で普段からレシートを持ち帰って家計簿をつけています。
節約家な私は 商品を1円でも安く買いたい ので、家計簿と一緒に買った商品の価格比較をExcelで行っていました。
そんなある日、スーパーで買い物をしていた時に「その場でスマホを使って価格を記録して残しておくアプリがあれば良いの...]]></description><link>https://zenn.dev/ryome/articles/85b6054751f4a1</link><guid isPermaLink="true">https://zenn.dev/ryome/articles/85b6054751f4a1</guid><pubDate>Sat, 30 Aug 2025 00:16:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1G1-8Hnj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E5%25BA%2595%25E5%2580%25A4%25E8%25A1%25A8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryome%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZNnRKMExiZTFHTnlzbWo0UXJNLXM4VWd4WHNTTC16dmhoak10NXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryome</dc:creator></item><item><title><![CDATA[OpenAPI 定義の管理方法を zod-to-openapi に変えた]]></title><description><![CDATA[弊社内では OpenAPI 定義の管理をかなり長い間 multi-file-swagger を使って行っていました。
yamlを分割して管理するのですが制約や課題も多く、この管理方法にはずっと不満があったのですが、別の何かに乗り換えようにも書き換えのコストがのしかかり、ずっと後回しになっていました。
しかし、Claude Code といった開発者の良き相棒が登場したこともあり、書き換えのコストに対するハードルはグッと下がったと言えます。ちょうど新規にAPI定義を生やすタイミングであったこともあり、これを契機と考え、思い切って管理方針を変えることにしました。

 課題
multi-file...]]></description><link>https://zenn.dev/kei_acarroll/articles/a2d18868638f0c</link><guid isPermaLink="true">https://zenn.dev/kei_acarroll/articles/a2d18868638f0c</guid><pubDate>Fri, 29 Aug 2025 11:06:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VbIQtbOF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAPI%2520%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%2520zod-to-openapi%2520%25E3%2581%25AB%25E5%25A4%2589%25E3%2581%2588%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NmFmMDQxMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kei</dc:creator></item><item><title><![CDATA[Honoを使ってシンプルなCRUD機能を持つAPIを作成]]></title><description><![CDATA[
 内容
Honoを使用してOpenapiに沿った形式でSwagger-uiでテストができるようなCRUD機能を持つAPIを作成する

 目的
自分でCRUD機能を実装する際にどんな順番で実装してたかを伝わるように書きたかった

 環境構築

パッケージマネージャ: pnpm

jsランタイム: Bun



 プロジェクト作成

 Hello world
$ pnpm create hono@latest .
bun, Yes, pnpmの順番で選択してください．

index.ts
import { Hono } from 'hono';

const app = new Hono(...]]></description><link>https://zenn.dev/nkawa0818/articles/b3c44f0f40e869</link><guid isPermaLink="true">https://zenn.dev/nkawa0818/articles/b3c44f0f40e869</guid><pubDate>Fri, 29 Aug 2025 10:46:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RRmeMP0b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AACRUD%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4API%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nkawa0818%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGxvTm1jcElaTW5keHR4M3M0NURvZmJYNU5SV1JDTHRfZGROSDF3TmtUaEFlZllyZ0c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nkawa0818</dc:creator></item><item><title><![CDATA[Mastra × MCPでドキュメント作成を自動化してみる]]></title><description><![CDATA[
 はじめに
こんにちは、新卒2年目エンジニアの紺谷です。
私はここ1年ほどSaaSプロダクトの運用保守チームで働いています。
普段は顧客や非エンジニアの社員からの問い合わせ対応（プロダクトの仕様の確認やバグ発生時の調査など）や、プロダクトや業務フローを改善していくための開発などをしています。
こういった仕事をやっていくにはプロダクトに使われている技術スタックについての理解はもちろん、プロダクトそのものの使い方や日々刻々と変わっていく仕様を把握したり、その業界特有の複雑なビジネスロジックを理解していくことが欠かせません。
そういったノウハウはドキュメントにまとめ、他のメンバーやこれからチ...]]></description><link>https://zenn.dev/forcia_tech/articles/20250815_mastra_agent_creation_tutorial_kontani</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/20250815_mastra_agent_creation_tutorial_kontani</guid><pubDate>Fri, 29 Aug 2025 04:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1u_fMnh0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%2520%25C3%2597%2520MCP%25E3%2581%25A7%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[Effect-Tsいいよ みんなも使おう Effect Effect]]></title><description><![CDATA[こんにちは、FLINTERSの石橋です。日頃Webアプリケーションを作っています。好きなPostgreSQL拡張はPostGISです。
弊社菅野がTypeScript界のZIOことEffectを布教しています（ブログ記事）。わたしも最近使い始めたのですが、とにかく便利でハイな気分になったので紹介記事です。

 エラーハンドリングが強い
TypeScript(JavaScript)の鬼門ことエラーハンドリングですが、Effectは型パラメータでエラーが表現されます。
         ┌─── Represents the success type
         │        ┌─...]]></description><link>https://zenn.dev/flinters_blog/articles/14981767173c7d</link><guid isPermaLink="true">https://zenn.dev/flinters_blog/articles/14981767173c7d</guid><pubDate>Fri, 29 Aug 2025 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jYrxh_OC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Effect-Ts%25E3%2581%2584%25E3%2581%2584%25E3%2582%2588%2520%25E3%2581%25BF%25E3%2582%2593%25E3%2581%25AA%25E3%2582%2582%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%2520Effect%2520Effect%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:123ishibashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwOWYxNGE2ZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FLINTERS%2520BLOG%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNDA3MTk2NjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>123ishibashi</dc:creator></item><item><title><![CDATA[Next.js サーバーアクションの bind の挙動を整理する]]></title><description><![CDATA[Next.js のサーバーアクションを使っていて、bind の書き方がよくわからないと感じることがありました。
特に「引数はどう渡るのか」「null って何なのか」が最初はつかみにくかったです。
この記事ではそれを順番に整理します。

 サーバーアクションに引数を渡す方法
サーバーアクションをフォームに渡すとき、次のように bind を使って引数を埋め込めます。
&lt;form action={updateUser.bind(null, userId)}&gt;
  &lt;input name="name" /&gt;
  &lt;button type="submit"&gt;Sa...]]></description><link>https://zenn.dev/ud/articles/7dd54bb3ce0452</link><guid isPermaLink="true">https://zenn.dev/ud/articles/7dd54bb3ce0452</guid><pubDate>Thu, 28 Aug 2025 23:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6e4C0W9w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%2520bind%2520%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:UD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwUGh4NnVtTjRvcWJINjdRbjFvOTY3WlNEWl9vWnNXLTZpQW1LZGVzPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>UD</dc:creator></item></channel></rss>