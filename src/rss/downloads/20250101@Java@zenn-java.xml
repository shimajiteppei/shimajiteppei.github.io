<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 01 Jan 2025 00:20:24 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Spring Data JPAによるソート（複合キーのソート付き）]]></title><description><![CDATA[spring-bootを使った中での躓いたことや調べたことのメモです。

 環境

java: 8
spring-boot: 2.0.1
spring-data-jpa: 2.0.7


 前提
以下のEntityで考えます
@Entity
public class Entity {
  @Id
  private int Id;

  private String name;

  private int position;

  // Getter, Setter省略
}

 List&lt;T&gt; findAll(Sort sort)

JpaRepositoryを継承したin...]]></description><link>https://zenn.dev/shikazuki/articles/c864ac51dcbdf52554cf</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/c864ac51dcbdf52554cf</guid><pubDate>Tue, 31 Dec 2024 13:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h0kNoSsN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Data%2520JPA%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588%25E8%25A4%2587%25E5%2590%2588%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[swagger-codegen-cliで生成したコードが好みでなかったときの対処法]]></title><description><![CDATA[
 困ったこと
外部サービスが提供しているSwagger Specでjava-clientのコードをswagger-codegen-cliで生成して使っていました。
swagger-codegen-cliのバージョンを上げて再作成したところ、BooleanのgetterがgetXXXではなくisXXXに変わってしまいました。

 状況

swagger-codegen-cliのv2.2.3を以前使ったが、新しいSwagger Specでは正しく生成できない。(ビルドエラーになる)
v2.2.3 -&gt; v2.3.1に変更（current stable）


 テンプレートをカスタマイ...]]></description><link>https://zenn.dev/shikazuki/articles/bd2bf488194c295fec0b</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/bd2bf488194c295fec0b</guid><pubDate>Tue, 31 Dec 2024 13:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X5cXeTwA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:swagger-codegen-cli%25E3%2581%25A7%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258C%25E5%25A5%25BD%25E3%2581%25BF%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[Thymeleafでth:include, th:replace, th:insert, th:fragmentの組み合わせ別使用法]]></title><description><![CDATA[
 前置き

 追記(2019/6/29)
th:includeはthymeleaf3.0から非推奨になっています。コメントにて指摘いただきました。ありがとうございます。
現時点では廃止になるような記載はありませんが、th:includeは使用しないほうがよさそうです。

 Thymeleafって何？
javaのフレームワークであるSpringをやろう！とした場合、おそらくよく使われるであろうViewテンプレートがThymeleafです。
このThymeleafではパーツごとにテンプレートファイルを作成することもでき、th:includeやth:replaceやth:insertを使って...]]></description><link>https://zenn.dev/shikazuki/articles/2c7dfd88e98827a800b5</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/2c7dfd88e98827a800b5</guid><pubDate>Tue, 31 Dec 2024 13:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vfcchWI4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Thymeleaf%25E3%2581%25A7th%253Ainclude%252C%2520th%253Areplace%252C%2520th%253Ainsert%252C%2520th%253Afragment%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[Java | Spring Boot | API Gateway]]></title><description><![CDATA[
 Java Spring Boot

 Routing
Spring Bootアプリケーションでは、HTTPリクエストをルーティングするために、@RestControllerや@Controllerアノテーションを使用してコントローラを定義する。これにより、異なるエンドポイントへのルーティングが可能となる。
@RestController
public class MyRouter {

    @GetMapping("/service1")
    public String handleService1() {
        return "Service 1 Response...]]></description><link>https://zenn.dev/v6qh2bxj/articles/6e884173bc0910</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/6e884173bc0910</guid><pubDate>Sun, 29 Dec 2024 21:38:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ho35T2VE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Java%2520%257C%2520Spring%2520Boot%2520%257C%2520API%2520Gateway%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[Java | Spring Boot | 統合開発環境（IDE）を使用せずに構築する手順]]></title><description><![CDATA[
 Java

 Spring Boot を統合開発環境（IDE）を使用せずに構築する手順

 1. JDKのインストール
Spring Bootを実行するためには、Java Development Kit (JDK) が必要なため、
以下の手順でJDKをインストールする。


Oracle JDK または OpenJDK をダウンロードしてインストールする。Amazon CorrettoでもOK。
インストール後、環境変数 JAVA_HOME を設定し、PATH に bin ディレクトリを追加する。

# bashの場合（Linux/Mac）
export JAVA_HOME=/pat...]]></description><link>https://zenn.dev/v6qh2bxj/articles/4040226cdba39f</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/4040226cdba39f</guid><pubDate>Sun, 29 Dec 2024 20:15:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w2kZApai--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%257C%2520Spring%2520Boot%2520%257C%2520%25E7%25B5%25B1%25E5%2590%2588%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2588IDE%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[Java | Spring Boot | 依存性の注入 | DIコンテナ]]></title><description><![CDATA[
 Java

 Spring Bootの"DIコンテナ"

"DIコンテナ"を理解するには、依存性の注入（DI：Dependency Injection）についての理解が必要。Spring Bootでの依存性の注入（DI：Dependency Injection）は、"DIコンテナ"が自動的に注入している。



Spring Bootでは、クラスを「コンポーネント」として扱い、これらのコンポーネントが互いに依存する場合に、DIコンテナがその依存関係を自動的に注入している。これにより、手動でインスタンスを作成する必要がなくなり、コードがクリーンで保守しやすくなる。




項目
内容
...]]></description><link>https://zenn.dev/v6qh2bxj/articles/7b08e13a73bfd2</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/7b08e13a73bfd2</guid><pubDate>Sun, 29 Dec 2024 16:02:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2LZcpE1Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%257C%2520Spring%2520Boot%2520%257C%2520%25E4%25BE%259D%25E5%25AD%2598%25E6%2580%25A7%25E3%2581%25AE%25E6%25B3%25A8%25E5%2585%25A5%2520%257C%2520DI%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[Java | 依存性注入(DI) | 直行性（Loose Coupling）]]></title><description><![CDATA[
 Java
「依存性注入（DI）」と「直行性（Loose Coupling）」は異なる概念だが、密接に関連している。依存性注入（DI）は、コードの直行性を高めるための手段の1つであり、依存性注入（DI）を適用することで、クラス間の依存関係を緩やかにし、コードの可読性やテストの容易さを向上させることができる。

 直行性（Loose Coupling）
直行性（Loose Coupling）とは、クラスやモジュール間の依存関係を示す。「直行性が高い」場合は、あるクラスが他のクラスに強く依存していないため、変更が容易で、テストや再利用がしやすくなる。

 依存性（Dependency）とは...]]></description><link>https://zenn.dev/v6qh2bxj/articles/29667f633c616b</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/29667f633c616b</guid><pubDate>Sun, 29 Dec 2024 15:06:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dOCRh589--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%257C%2520%25E4%25BE%259D%25E5%25AD%2598%25E6%2580%25A7%25E6%25B3%25A8%25E5%2585%25A5%2528DI%2529%2520%257C%2520%25E7%259B%25B4%25E8%25A1%258C%25E6%2580%25A7%25EF%25BC%2588Loose%2520Coupling%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[SQLエラーにもう悩まない！参照カーソル利用で非効率なプログラム内での文字列組み立てから卒業しよう]]></title><description><![CDATA[
 ごあいさつ
こんにちは、「エイジ＠フジワーランド」です
フリーでパッケージシステムのOEM供給やってます、最近暇なので時給でSESやってます
年末年始でSESはお休みですが、フリーはいつでも休みでいつでも仕事です(深い意味は少しあり)
さて今回はOracle参照カーソルの話です

 プログラム内でSQL文字列を組み立てるのはもうやめよう
プログラム内でSQL文を文字列結合して組み立てるのは柔軟性が高いように思えますが、以下のような問題点があります

 1. 実行時しかSQLエラーがわからない

実行するまでエラーがわからないのは効率悪いです、WHERE条件を変更したりSELECT項目...]]></description><link>https://zenn.dev/fujiwaaaland/articles/c0bcc64e559518</link><guid isPermaLink="true">https://zenn.dev/fujiwaaaland/articles/c0bcc64e559518</guid><pubDate>Sun, 29 Dec 2024 14:10:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qcnfq_Br--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQL%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%2582%25E3%2581%2586%25E6%2582%25A9%25E3%2581%25BE%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581%25E5%258F%2582%25E7%2585%25A7%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%25A7%25E9%259D%259E%25E5%258A%25B9%25E7%258E%2587%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E5%2586%2585%25E3%2581%25A7%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25B5%2584%25E3%2581%25BF%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%258B%25E3%2582%2589%25E5%258D%2592%25E6%25A5%25AD%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A8%25E3%2582%25A4%25E3%2582%25B8%2540%25E3%2583%2595%25E3%2582%25B8%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUItQ3ZzWm5DMmlJX2RZVDVNMTdJcm9QZ2dqTGdTdl9mWkRiZXN2NjJvRWpDajAtU3I3UT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>エイジ@フジワーランド</dc:creator></item><item><title><![CDATA[java.time.format.DateTimeParseException の対処法]]></title><description><![CDATA[
 環境
Open JDK 23.0.1

 Unable to obtain {Temporal} from TemporalAccessor

 エラーが発生するコード例
DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy年M月d日[ H:mm]");

LocalDateTime withTime = LocalDateTime.parse("2025年1月2日 03:45", formatter);
// ↓ DateTimeParseExceptionが発生する
LocalDateTime withou...]]></description><link>https://zenn.dev/nafuka11/articles/java-datetime-parse-exception</link><guid isPermaLink="true">https://zenn.dev/nafuka11/articles/java-datetime-parse-exception</guid><pubDate>Sun, 29 Dec 2024 06:26:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9ZrAd5qh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:java.time.format.DateTimeParseException%2520%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nafuka11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4ZDQyMjFhNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nafuka11</dc:creator></item><item><title><![CDATA[Java | ORACLE以外のJDK | Amazon Corretto]]></title><description><![CDATA[
 Java

 ORACLE以外のJDK

 Amazon Corretto





Corretto は、Amazon の長期サポートを含む Open Java Development Kit (OpenJDK) のビルド。
Corretto は、"Java Technology Compatibility Kit (TCK)" を使用して Java SE 規格に準拠するようにしていることが認証されており、Linux、Windows、および macOS で使用できる。




]]></description><link>https://zenn.dev/v6qh2bxj/articles/59d24d83b126c3</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/59d24d83b126c3</guid><pubDate>Sat, 28 Dec 2024 19:24:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qMCVHu_s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%257C%2520ORACLE%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AEJDK%2520%257C%2520Amazon%2520Corretto%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[Java | Maven | Project Object Model (POM) | pom.xml]]></title><description><![CDATA[
 Java

 Maven

 pom.xml


]]></description><link>https://zenn.dev/v6qh2bxj/articles/fa707a61fabdb8</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/fa707a61fabdb8</guid><pubDate>Sat, 28 Dec 2024 19:18:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZVtOhlmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%257C%2520Maven%2520%257C%2520Project%2520Object%2520Model%2520%2528POM%2529%2520%257C%2520pom.xml%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[Java | ダブルディスパッチ]]></title><description><![CDATA[
 Java

 ダブルディスパッチ

]]></description><link>https://zenn.dev/v6qh2bxj/articles/7985f702b9ee3a</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/7985f702b9ee3a</guid><pubDate>Sat, 28 Dec 2024 18:50:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9_9Ln2r6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%257C%2520%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B9%25E3%2583%2591%25E3%2583%2583%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[AWS CodeBuildで手動インストールしたJDKを利用する]]></title><description><![CDATA[発生は稀だと思いますが、Javaアプリケーションのbuildで利用しているJDKをAWS Codebuildのimageに手動インストールする必要が生じました。
英語文献も含めていくつか記事があったのですが、AWS公式の処理を真似た点において、本記事が一番確実な方法と思われます。(2024/12時点)
過去の同様の内容にトライしている記事
amazon web services - How to install different Java OpenJDK version on AWS CodeBuild standard image - Stack Overflow
利用したimage...]]></description><link>https://zenn.dev/takeaki_m/articles/ed40ec038de69f</link><guid isPermaLink="true">https://zenn.dev/takeaki_m/articles/ed40ec038de69f</guid><pubDate>Sat, 28 Dec 2024 06:28:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aVuz3Bdu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CodeBuild%25E3%2581%25A7%25E6%2589%258B%25E5%258B%2595%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259FJDK%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:take%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NGUxN2RmODYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>take</dc:creator></item><item><title><![CDATA[Spring AIでAzure Cosmos DBのベクトル検索を試す]]></title><description><![CDATA[
 概要
Azure Cosmos DBがベクトル検索できるようになり、Spring AIとも統合されました。
https://devblogs.microsoft.com/cosmosdb/announcing-azure-cosmos-db-integration-with-spring-ai-and-langchain4j/
簡単なRAGを通じてSpring AIとAzure Cosmos DB、Azure OpenAI Serviceを用いたベクトル検索を試してみます。

 コード例
今回のコード例は次のリポジトリのspring-ai-cosmos-vector-store-ex...]]></description><link>https://zenn.dev/backpaper0/articles/5f6edf59de42b9</link><guid isPermaLink="true">https://zenn.dev/backpaper0/articles/5f6edf59de42b9</guid><pubDate>Tue, 24 Dec 2024 15:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EdSVX3n3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520AI%25E3%2581%25A7Azure%2520Cosmos%2520DB%25E3%2581%25AE%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2582%2589%25E3%2581%258C%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h1Q0xBRjd4OC16dVN4NXl1MXU2OTJDWEVhR0s5MWxKZWhjQXU5cVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うらがみ</dc:creator></item><item><title><![CDATA[Spring Boot 3.4.0で追加された MockMvcTester が便利]]></title><description><![CDATA[Spring Boot 3.4.0 から、AssertJがクラスパスに含まれている場合に MockMvcTester が利用可能になりました。これにより、リクエストとアサーションを流れるように記述でき、テストコードが読みやすくなります。

 コントローラー例
以下のコントローラーのテストを書きます。
@RestController
@RequestMapping("/api")
class SampleController {

    @GetMapping("/hello")
    fun hello(): ResponseEntity&lt;String&gt; {
      ...]]></description><link>https://zenn.dev/sukechannnn/articles/ec2eef03efa9d0</link><guid isPermaLink="true">https://zenn.dev/sukechannnn/articles/ec2eef03efa9d0</guid><pubDate>Tue, 24 Dec 2024 06:42:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zY4WzIi---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25203.4.0%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%2520MockMvcTester%2520%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sukechannnn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzOTljNjM5YmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sukechannnn</dc:creator></item><item><title><![CDATA[Java SE Bronze問題集（黒本）を解いてみた]]></title><description><![CDATA[!
この記事は BABY JOB Advent Calendar 2024 の 24 日目の記事です。


 はじめに
Java SE Bronze[1]と調べると「プログラミング未経験者向け」や「Java初学者向け」とあります。
そんな中、未経験からJavaエンジニアとしてのキャリアをスタートして約5年が経った今、Java SE Bronzeの黒本を解いてみてつまづいたポイントや感じたことを紹介したいと思います。

 なぜJava SE Bronzeの問題を解こうと思ったのか
Javaエンジニアとして5年が経ち、なぜJava Silver[2]やJava Gold[3]ではなくJava...]]></description><link>https://zenn.dev/babyjob/articles/62ccac9aba79cf</link><guid isPermaLink="true">https://zenn.dev/babyjob/articles/62ccac9aba79cf</guid><pubDate>Mon, 23 Dec 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pm0rs3WA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520SE%2520Bronze%25E5%2595%258F%25E9%25A1%258C%25E9%259B%2586%25EF%25BC%2588%25E9%25BB%2592%25E6%259C%25AC%25EF%25BC%2589%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yamade%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODk4NDRkMDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BABY%2520JOB%2520%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1NWRkNDI3MGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamade</dc:creator></item><item><title><![CDATA[フレームワークの概要・インストール方法を詳しく解説[後半:Java EEについて]]]></title><description><![CDATA[
 はじめに
エンジニア転職をしもうすぐ２か月、、、
まだまだ分からない、聞いたことはあるけど説明できない、用語と中身が一致していない、色んなことが起き続けています。
今回はその中で「聞いたことはあるけど説明は出来ない」ゾーンに居座り続けているフレームワークについて理解を深めたいと思います。
今回も学習メモ＆所感です🥺

 1. フレームワークとは？
IT業界で用いられるフレームワークとは、アプリケーション開発においてよく利用される機能をあらかじめパーツとして備えた枠組みのことです。
フレームワークには、一般的なアプリケーション開発に活用される「アプリケーションフレームワーク」や、Web...]]></description><link>https://zenn.dev/takeda_kaho/articles/959b80db25add1</link><guid isPermaLink="true">https://zenn.dev/takeda_kaho/articles/959b80db25add1</guid><pubDate>Mon, 23 Dec 2024 07:53:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D2DBQdUO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%25A9%25B3%25E3%2581%2597%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%255B%25E5%25BE%258C%25E5%258D%258A%253AJava%2520EE%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takepanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZWRlZDIyZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takepanda</dc:creator></item><item><title><![CDATA[見て理解するジェネリクス 基礎から共変・反変までバッチリ習得]]></title><description><![CDATA[Java を題材に、ジェネリクスについて「あー、理解したっぽい」を目指します。

使用言語は Java ですが、この Book は特定の言語の文法書ではありません。ジェネリクスの概念そのものの理解を目指します。

ジェネリクスについて曖昧な人も、ジェネリクスについて今必要ないと思っている人にも読んでもらいたいと思い書きました。

40 枚以上の図を見ながら、目次の順にステップアップで理解していきましょう。
]]></description><link>https://zenn.dev/suzuki_hoge/books/2024-12-generics-7649c6a0a47667</link><guid isPermaLink="true">https://zenn.dev/suzuki_hoge/books/2024-12-generics-7649c6a0a47667</guid><pubDate>Mon, 23 Dec 2024 03:13:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ib_JRMlw--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yYzMzNGY5NTI5LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ほげさん</dc:creator></item><item><title><![CDATA[Arquillianを活用したJava EE アプリテストの実践]]></title><description><![CDATA[
 はじめに
こんにちは、ウェルスナビでバックエンド開発を担当している田中です。
この記事はウェルスナビ アドベントカレンダー 2024の23日目の記事です。
この記事では、Arquillianを使ったテストの実行について紹介します。具体的には、テスト環境の構築から実行までのプロセスや、直面した問題を解決するためのアプローチについて説明します。

 対象読者
この記事は、以下の読者を対象としています。


Java開発者: Java EEやJakarta EEを使用している開発者で、テスト自動化に興味がある方。特に、テストフレームワークに関心があり、Arquillianを使ったテストの実...]]></description><link>https://zenn.dev/wn_engineering/articles/d8f10592331097</link><guid isPermaLink="true">https://zenn.dev/wn_engineering/articles/d8f10592331097</guid><pubDate>Mon, 23 Dec 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OV0KyXh8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Arquillian%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FJava%2520EE%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:h_tanaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MzZjZWRmZjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:WealthNavi%2520Engineeri...%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEVabllKb3lMZklqNXBpRlpfQUk0VzI1R3BUWExLTlpTa3V6VU9tZVFQWlM5aGl3PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>h_tanaka</dc:creator></item><item><title><![CDATA[【Java】クイックソート]]></title><description><![CDATA[この記事は、「新・明解Javaで学ぶアルゴリズムとデータ構造」を読んで学んだことを、個人的な備忘録目的でまとめています。
ただし、本を参考にして自分なりに構成やコードを変更しているためご注意ください。
アルゴリズムの詳細や解説は是非参考書をお手に取って読まれてください。

【リンク紹介】
・Javaで学ぶアルゴリズムとデータ構造
・これまで書いたシリーズ記事一覧


 クイックソート
package chap06;

import java.util.Scanner;

public class QuickSort {
	
	//--- 配列の要素a[idx1]とa[idx2]の値を交換...]]></description><link>https://zenn.dev/youken/articles/2bb58176d80edb</link><guid isPermaLink="true">https://zenn.dev/youken/articles/2bb58176d80edb</guid><pubDate>Mon, 23 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_neFordX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:youken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Mzc2MDk0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>youken</dc:creator></item></channel></rss>