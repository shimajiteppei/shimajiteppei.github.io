<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 11 Mar 2025 07:18:47 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Azureを使ってDjangoアプリのデプロイをしてみた。]]></title><description><![CDATA[
 初めに

Python, Azureの初学者です。
Python, Djangoのキャッチアップをしています。
Azureに詳しい先輩がおり、せっかくなのでAzure（無料枠）を使ってデプロイしてみることにしました。


 使用技術

Python3.12
Django
Azure


 概要

今回の流れを説明します。
アプリの作成(Githubにpush済み)と、microsoft Azureにログインできているところから始めます。


AzureでWeb Serviceの作成。
Github Actionsを使った自動デプロイ。
デプロイ後に本番環境で表示するまで。


 実装...]]></description><link>https://zenn.dev/monaka0309/articles/59f568059b873d</link><guid isPermaLink="true">https://zenn.dev/monaka0309/articles/59f568059b873d</guid><pubDate>Tue, 11 Mar 2025 05:36:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B1DmiuYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Django%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25AA%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OTBkYzczMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もなか</dc:creator></item><item><title><![CDATA[【Python・PySparkで学ぶ！】RDBとは？を理解する。]]></title><description><![CDATA[
 RDBとは？

 RDBが満たす特徴は次の通りです。

 1. データがテーブル（表）で管理されている
「各テーブルは行(レコード)と列(カラム) を持つ。」

 2. テーブル同士がリレーション(関係)を持つ
「RDBでは、キー(主キー・外部キー) を使って、異なるテーブルのデータ同士を関連付ける」

 3. キー(主キー・外部キー)が設定されている
「各テーブルに、レコードを一意に識別する主キー(PK) がある。」
「別のテーブルのデータを参照する外部キー(FK) がある。」
上記の性質を理解するために、RDBではないテーブルをご紹介します。

 RDBではないテーブル　例) 1...]]></description><link>https://zenn.dev/taiking/articles/937ea87a46e129</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/937ea87a46e129</guid><pubDate>Tue, 11 Mar 2025 05:33:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NxPq3LbL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPySpark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591RDB%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[Python インスタンス生成時の例外スローを回避する]]></title><description><![CDATA[
 Python インスタンス生成時の例外スローを回避する
通常、Python でクラスのインスタンスを生成する際、__init__ メソッド内で例外がスローされることがあります。しかし、特定の条件下でインスタンス生成を避けたい場合や、例外をスローせずに None を返したい場合があります。本記事では、これを実現する3つの方法を紹介します。

クラスメソッドを使う方法
ファクトリー関数を使う方法

__new__ を使う方法



 1. クラスメソッドを使う方法
クラスメソッドを使うことで、インスタンス生成時のバリデーションを行い、失敗した場合に None を返すことができます。
cl...]]></description><link>https://zenn.dev/kangaerokusoga/articles/05ae3976a5e576</link><guid isPermaLink="true">https://zenn.dev/kangaerokusoga/articles/05ae3976a5e576</guid><pubDate>Mon, 10 Mar 2025 14:38:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PNV4Wuv2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E7%2594%259F%25E6%2588%2590%25E6%2599%2582%25E3%2581%25AE%25E4%25BE%258B%25E5%25A4%2596%25E3%2582%25B9%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E5%259B%259E%25E9%2581%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jadm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTJnS1FKaUIyeG83MjltZmJPMG0zVlhXRDAtUG9EeVhqLURXUF9FSDhTbl85WFRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jadm</dc:creator></item><item><title><![CDATA[【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）]]></title><description><![CDATA[プログラミングを始める時、最初に書くのが「Hello World」プログラムです。これは画面に「Hello World」という文字を表示する、最もシンプルなプログラムです。この記事では、3つの主要なプログラミング言語でHello Worldを書く方法を解説します。

 なぜHello Worldから始めるの？
Hello Worldプログラムには、以下のような意義があります：


最小限のコードで動作確認ができる

開発環境が正しく設定されているか確認できる
プログラムの基本的な構造を理解できる



プログラミングの第一歩として最適

成功体験を得やすい
言語の基本的な文法に触れられる...]]></description><link>https://zenn.dev/homatsu_tech/articles/40e7bfdfa62eae</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/40e7bfdfa62eae</guid><pubDate>Mon, 10 Mar 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l9vQ6VSI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Hello%2520World%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25EF%25BC%2588Python%252C%2520JavaScript%252C%2520Java%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZWQ1ZGYyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[Pythonのコンパイラを作りたい #8 - オブジェクトモデルの構築]]></title><description><![CDATA[こんにちは。前回(#7.5 - プロジェクト名の変更とレイアウト再構成(番外編))までで「字句解析 -&gt; AST 変換 -&gt; LLVM IR 化」や、プリミティブ型のボクシング/アンボクシングによる高速化などを一通り整備してきました。
今回は、ついに 本格的な「オブジェクト指向モデル」の導入 についてお話しします。具体的には、classobject.c / instanceobject.c / methodobject.c / functionobject.c といったファイルを新しく作成し、CPython に近い仕組みでクラス・インスタンス・メソッドを再現し始めました。
こ...]]></description><link>https://zenn.dev/t3tra/articles/0a88c8a389fe43</link><guid isPermaLink="true">https://zenn.dev/t3tra/articles/0a88c8a389fe43</guid><pubDate>Mon, 10 Mar 2025 10:10:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zFK_Ph2n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2520%25238%2520-%2520%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t3tra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2MDdkNzY3ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t3tra</dc:creator></item><item><title><![CDATA[Pythonのリスト内包表記（List Comprehension）をマスターしよう]]></title><description><![CDATA[
 はじめに
Pythonのリスト内包表記は、リストを簡潔に作成するための強力な機能です。通常のforループよりもシンプルで可読性が高く、実行速度も向上します。特に、大量のデータを処理する際に役立ち、短いコードで効率的に処理できます。本記事では、基本から応用までを分かりやすく解説します。

 1. リスト内包表記の基本

まずは、基本的な書き方を見てみましょう。
[処理 for 要素 in リスト]
この方法を使うと、forループを使わずに一行でリストを作成できます。

 0から9までのリストを作る

[i for i in range(10)]
出力
[0, 1, 2, 3, 4, 5...]]></description><link>https://zenn.dev/tryeverything/articles/a0027_list_comprehension</link><guid isPermaLink="true">https://zenn.dev/tryeverything/articles/a0027_list_comprehension</guid><pubDate>Mon, 10 Mar 2025 10:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UErSmSYT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E5%2586%2585%25E5%258C%2585%25E8%25A1%25A8%25E8%25A8%2598%25EF%25BC%2588List%2520Comprehension%25EF%25BC%2589%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%2593%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDc5YTUwMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たんさん</dc:creator></item><item><title><![CDATA[【Python】毎月300円かかる時計を作った話。]]></title><description><![CDATA[
 注意
普通こんなにかかりません。
どんな手順で作ったのかを書いていきます。

 環境

Raspberry Pi Model.B

OS: Raspberry Pi Lite
Program: Python




 経緯
普段作業しているデスクの周りに時計がなく、いつもPCの時計を見ていたが、それでは味気ないと思って作るに至った。
使えるものとしては、余っていたラズパイ一台と、17インチの液晶パネル。

 制作
まずは、ラズパイにOSを入れる。
以前GUI版のOSを入れたが、まともに動作せずすぐに墓の中へ。
今回は反省し、CUI版のRaspberry Pi Liteをインストール。...]]></description><link>https://zenn.dev/enumh/articles/b57a67aebcaa78</link><guid isPermaLink="true">https://zenn.dev/enumh/articles/b57a67aebcaa78</guid><pubDate>Mon, 10 Mar 2025 09:57:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SwqHhfHn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%25AF%258E%25E6%259C%2588300%25E5%2586%2586%25E3%2581%258B%25E3%2581%258B%25E3%2582%258B%25E6%2599%2582%25E8%25A8%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258B%25B1%25E6%2595%25B0%25E5%25AD%2597%25E3%2581%25AF%25E5%258D%258A%25E8%25A7%2592%25E3%2581%25A7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzMmVlNjI4YjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>英数字は半角で</dc:creator></item><item><title><![CDATA[複数人で楽しめるインタラクティブビンゴゲーム！FlaskとHTMLでルーレット機能付きWebアプリを作成しよう]]></title><description><![CDATA[
 はじめに
Pythonで簡単に作成できるビンゴゲームを紹介します。このアプリケーションは、複数のプレイヤーが参加できるように設計されており、各プレイヤーが固有のビンゴカードを持ちます。また、ルーレット機能には回数制限を設けて、戦略性を高めたゲームプレイを実現しています。
この記事では、Flaskを使ったバックエンドと、HTMLおよびJavaScriptを使ったフロントエンドの実装方法をステップバイステップで説明します。

 完成イメージ
このプロジェクトでは、以下の機能を持つビンゴゲームを実装します:

各プレイヤーごとに固有のビンゴカードを生成
ルーレットによる番号選択機能
ルーレ...]]></description><link>https://zenn.dev/mstng/articles/4937709654e1ce</link><guid isPermaLink="true">https://zenn.dev/mstng/articles/4937709654e1ce</guid><pubDate>Mon, 10 Mar 2025 06:15:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4c06r0it--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E6%2595%25B0%25E4%25BA%25BA%25E3%2581%25A7%25E6%25A5%25BD%25E3%2581%2597%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2583%2593%25E3%2583%25B3%25E3%2582%25B4%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25EF%25BC%2581Flask%25E3%2581%25A8HTML%25E3%2581%25A7%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%25E4%25BB%2598%25E3%2581%258DWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mstng%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVrUWI4S2o0cnl1WHhNZ1FBeXJleTFmOW5JTW1iRmN6UVRzaC1YYk1udWQtNEotYkF2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mstng</dc:creator></item><item><title><![CDATA[2025-03-10 Docker環境で動く日記変換ツールの構築]]></title><description><![CDATA[
 はじめに
今日は、diary_converter.pyの動作確認のためのDocker環境構築に取り組みました。このツールは開発日記をZenn公開用の記事に変換するもので、Google Gemini APIを利用しています。ローカル環境での実行ではなく、Docker環境での実行に焦点を当てることで、環境依存の問題を解決し、より安定した動作を実現することができました。

 開発の流れ
開発は以下の流れで進めました：


Dockerfileの作成：Python 3.9をベースイメージとして、必要なパッケージをインストールする環境を構築しました。

docker-compose.ymlの設...]]></description><link>https://zenn.dev/centervil/articles/2025-03-10-diary-converter-docker-environment</link><guid isPermaLink="true">https://zenn.dev/centervil/articles/2025-03-10-diary-converter-docker-environment</guid><pubDate>Mon, 10 Mar 2025 05:23:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--In--jXPq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2025-03-10%2520Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E6%2597%25A5%25E8%25A8%2598%25E5%25A4%2589%25E6%258F%259B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:centervil%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YlVZNXZiN0NvbG1TN0tPQmhqQ2M5V3lIRXYwVVhwZ2YyY2wxYTc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>centervil</dc:creator></item><item><title><![CDATA[【Python】@classmethodについて]]></title><description><![CDATA[@classmethodはPythonのデコレータの一つで、インスタンスメソッドではなくクラスメソッドを定義するために使用されます。
通常のインスタンスメソッドは、クラスのインスタンス（オブジェクト）に対して呼び出され、第一引数として自動的にそのインスタンス（慣習的にselfと名付けられる）を受け取ります。一方、クラスメソッドはクラス自体に対して呼び出され、第一引数としてクラス自体（慣習的にclsと名付けられる）を受け取ります。
例えば：
class MyClass:
    count = 0
    
    def __init__(self, name):
        sel...]]></description><link>https://zenn.dev/hovinci/articles/b6c2b2402a61ea</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/b6c2b2402a61ea</guid><pubDate>Mon, 10 Mar 2025 03:23:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oeTLshIz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%2540classmethod%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[Hugging Faceにデータセットをアップロードする方法]]></title><description><![CDATA[
 前提
Hugging Faceのアカウント登録しましょう!

 方法
まずは以下にアクセス
https://huggingface.co/new-dataset

 1. リポジトリ作成
個人アカウントに作成する場合は右上のアカウントアイコンから以下を選択

組織アカウントに作成する場合は、組織アカウントの画面にアクセスして以下を選択


データセット名を適当に入力して、ライセンスはUnknownを選択します。

一般公開したくないのでPrivateにします。



 2. アップロード
作成されたリポジトリの「Files and Versions」→「Add file」→「Uplo...]]></description><link>https://zenn.dev/headwaters/articles/bacc9b7966ed7d</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/bacc9b7966ed7d</guid><pubDate>Sun, 09 Mar 2025 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tFYHa_Xq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hugging%2520Face%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ikebowsan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNTM1ZTc4OGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikebowsan</dc:creator></item><item><title><![CDATA[🚀Qdrant入門！爆速で始めるベクトル検索データベース]]></title><description><![CDATA[ベクトル検索データベースの新星、Qdrant（クオドラント）について分かりやすく解説します。


 🧠 はじめに
最近、機械学習や生成AIの流行で「ベクトル検索」という言葉を聞く機会が増えましたよね。
でも、
「ベクトル検索ってそもそも何？」
「Qdrantってどんな特徴があるの？」
「他のデータベースと何が違うの？」
そんな疑問をスッキリ解消していきましょう！

 🌟 この記事でわかること


Qdrantの基本的な概要と特徴


Qdrantを利用したベクトル検索の仕組み


Qdrantが活躍するユースケース


簡単な使い方・導入方法



 📌 ベクトル検索ってそもそも何？
ベ...]]></description><link>https://zenn.dev/taksnr/articles/10ba0a6ae209cf</link><guid isPermaLink="true">https://zenn.dev/taksnr/articles/10ba0a6ae209cf</guid><pubDate>Sun, 09 Mar 2025 15:10:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--26MKy83u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520Qdrant%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2581%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsubura%2520Tamashiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkNmFhYjY4NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsubura Tamashiro</dc:creator></item><item><title><![CDATA[odeintを使ってLorenz方程式を解いてみる]]></title><description><![CDATA[
 はじめに
今回は、scipyのodeintというものを用いて、Lorenz方程式を解いてみます。odeintの使い方について詳しくまとまっているものがあまりなかったので、各パラメタについてもまとめていこうと思います。

 使用するライブラリなど
今回使用するライブラリなどは以下の通りです。
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

 odeintの使用方法
odeintの使用法はとても簡単で、以下のような引数があります。
sol = odeint(fun...]]></description><link>https://zenn.dev/ryanphys/articles/aad7401d7fe794</link><guid isPermaLink="true">https://zenn.dev/ryanphys/articles/aad7401d7fe794</guid><pubDate>Sun, 09 Mar 2025 13:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qXiuoRKk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:odeint%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Lorenz%25E6%2596%25B9%25E7%25A8%258B%25E5%25BC%258F%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cal%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2Mjk5MGVlZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cal</dc:creator></item><item><title><![CDATA[DuckDBブログ読解と気になった機能について#1]]></title><description><![CDATA[
 まえがき
DuckDBのブログ更新の頻度がすごいですね...!
今まで単発気味に記事投稿していたのですが、ちょっと追いつけなくなりそうになってます🫠
そこで今回からDuckDBのブログについてや追加機能で気になったものをピックアップして試したりするまとめ記事を投稿しようと思います。

 Parquet Bloom Filters in DuckDB　を調べながら読み解く
https://duckdb.org/2025/03/07/parquet-bloom-filters-in-duckdb.html
について所々の単語について自分で調べながら読んでいきます。
(解釈が間違っている可...]]></description><link>https://zenn.dev/amana/articles/b88aeb1a165cd1</link><guid isPermaLink="true">https://zenn.dev/amana/articles/b88aeb1a165cd1</guid><pubDate>Sun, 09 Mar 2025 10:50:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T317CoyQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DuckDB%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2581%25A8%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25231%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MjJkN2U5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[【Python・PySparkで学ぶ！】broadcast()でデータ結合を最適化しよう！処理効率向上]]></title><description><![CDATA[
 はじめに、結合するデータを確認する
↓決済データ(transaction_data)



tran_id
pay_method
tran_dt
user_id
brand_id
pay_amount_raw
pay_amount_without_tax




101
code
2025/01/03 06:48:03
user000007
brand0003
1540
1400


102
cache
2025/01/04 22:27:16
user000001
brand0001
6050
5500


103
code
2025/01/08 03:22:07
user00000...]]></description><link>https://zenn.dev/taiking/articles/ba8b8fb293c199</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/ba8b8fb293c199</guid><pubDate>Sun, 09 Mar 2025 09:16:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4oC4xKw9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPySpark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591broadcast%2528%2529%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%25B5%2590%25E5%2590%2588%25E3%2582%2592%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25E5%2587%25A6%25E7%2590%2586%25E5%258A%25B9%25E7%258E%2587%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[Mistral OCR APIを使ってPDFをMarkdownファイルに変換してみた！（画像埋め込み対応🚀）]]></title><description><![CDATA[
 1. はじめに

つい先日、フランスのAIスタートアップ企業であるMistral AIから、新しいOCR技術を活用したAPI「Mistral OCR」が発表されました。PDFのテキストや画像、数式、表などを高精度に認識できるとのことで、かなり話題になっています。
実際に試してみたところ、Markdown形式への変換がスムーズで、思った以上に実用的でした！
この記事では、Mistral OCR APIを使ってPDFファイルをMarkdownファイルに変換する方法を紹介します。

 2. Mistral OCR とは


 公式ページ

 リリースニュース
https://mistral...]]></description><link>https://zenn.dev/rynskrmt/articles/123d022aee4728</link><guid isPermaLink="true">https://zenn.dev/rynskrmt/articles/123d022aee4728</guid><pubDate>Sun, 09 Mar 2025 08:07:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2zSSnWdC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mistral%2520OCR%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6PDF%25E3%2582%2592Markdown%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%25EF%25BC%2588%25E7%2594%25BB%25E5%2583%258F%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%25E5%25AF%25BE%25E5%25BF%259C%2520%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rynskrmt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkVZeGR6V05aRHl4R1FxV0lVeVJoM3VIUmVLMjRoNGRDVkhSYU83S3ZJT3J2U292RT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rynskrmt</dc:creator></item><item><title><![CDATA[【マニュアル】kintai_tool]]></title><description><![CDATA[『kintai_tool』は、freeeから取得した勤怠データを自動で規定のExcelフォーマットに転記するツールです。
また、Windows・macOSの両方に対応しています。

手作業での入力を減らし、効率的な勤怠管理を実現します！]]></description><link>https://zenn.dev/tomo0108/books/0c77481aae6591</link><guid isPermaLink="true">https://zenn.dev/tomo0108/books/0c77481aae6591</guid><pubDate>Sun, 09 Mar 2025 08:03:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X4ycp_AE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zNjBiYjg1ZThkLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ToMo</dc:creator></item><item><title><![CDATA[【Python・PySparkで学ぶ！】JSONファイルをデータフレーム化(ネストなし)]]></title><description><![CDATA[
 はじめに、APIを叩いてみる。

郵便番号検索API
import requests
res = requests.get("https://zipcloud.ibsnet.co.jp/api/search?zipcode=1000001")
print(f"リクエストステータス : {res.status_code}")
print("------------")
print(res.text)
print("------------")
res_json = res.json()


レスポンス結果
リクエストステータス : 200
------------
{
	"messag...]]></description><link>https://zenn.dev/taiking/articles/a626ff64dc1b76</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/a626ff64dc1b76</guid><pubDate>Sun, 09 Mar 2025 07:33:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lf2RUkhV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPySpark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591JSON%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E5%258C%2596%2528%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AA%25E3%2581%2597%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[【Python・PySparkで学ぶ！】explode(array())で繰り返し属性を解消し、正規化しよう]]></title><description><![CDATA[↓配信マスタ(event_mail_mst)のサンプル

上記のような配信データを集約したCSVテーブルが存在すると仮定します。

 ◾️要望
とある日の朝会MTGにて、クライアントから次のような要望を頂きました。

 『"配信マスタ"のKPIが繰り返し属性になっているため、これを解消したい』
本稿では、クライアントからの要望に答えながら、 繰り返し属性の解消 について学びます。
よろしくお願いいたします。

 ◾️AsIs(現状把握)
エンジニアとクライアント間の認識に相違があるとアウトプットのイメージに相違が発生します。
はじめに、 データアセスメントの観点から論点を提示し、クライア...]]></description><link>https://zenn.dev/taiking/articles/eb716a3395438a</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/eb716a3395438a</guid><pubDate>Sun, 09 Mar 2025 05:12:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4RuhzyRZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPySpark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591explode%2528array%2528%2529%2529%25E3%2581%25A7%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E5%25B1%259E%25E6%2580%25A7%25E3%2582%2592%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2597%25E3%2580%2581%25E6%25AD%25A3%25E8%25A6%258F%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[リスキリングとしての取り組み（2025/3：第1週）]]></title><description><![CDATA[2025年3月第1週（2025/3/2～2025/3/8）にリスキリング（プログラミング）として取り組んだことをまとめました。

 ＜Topic＞
PC環境の刷新でスペック向上したChrome OS Flex環境を活用すべく、OS標準のPythonを最新化しつつ、Visual Studio Code含めた開発環境として再整備
以前、システム開発業務で調査したnumpyやkde等のライブラリ環境も順次整備していく想定

 詳細は、GitHubを参照ください

 【3/2】


＜Database＞ SQL Server Management Studio を 21.0.85 Preview...]]></description><link>https://zenn.dev/tatsukiyoshi/articles/846747df7ae1bf</link><guid isPermaLink="true">https://zenn.dev/tatsukiyoshi/articles/846747df7ae1bf</guid><pubDate>Sun, 09 Mar 2025 04:55:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s4C0Q5wY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AE%25E5%258F%2596%25E3%2582%258A%25E7%25B5%2584%25E3%2581%25BF%25EF%25BC%25882025%252F3%25EF%25BC%259A%25E7%25AC%25AC1%25E9%2580%25B1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25BE%25B0%25E8%2581%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlRwMzFwR2w4eEFqS3YtSlVsQVgyRnUyZDBCSU9OaEJFNG9TTGJSQWtVXzE0UktwVnM0QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>辰聖</dc:creator></item></channel></rss>