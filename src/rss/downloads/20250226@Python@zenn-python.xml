<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 26 Feb 2025 05:10:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[StremlitをWindowsネイティブ環境で実行するまでのStep by step]]></title><description><![CDATA[
 最初に
このテキストは、姫路IT系勉強会で出た話題を受けて書いたテキストの転載です。
勉強会で、プログラミングについてなにも知らないWindowsユーザーから「PythonのStreamlitが実行できない」という相談があって書いたため、迷わないように環境を限定して書いています。また、筆者はDebian GNU/LinuxユーザーでWindowsには不慣れなため、記述に間違いがある可能性もあります。お気づきの点がありましたらコメントをお願いします。
姫路IT系勉強会は、兵庫県姫路市にて毎月第3土曜日に開催しているITエンジニア向け勉強会です。勉強会については、さくらインターネットのさ...]]></description><link>https://zenn.dev/nogajun/articles/aad5a57c9b000e</link><guid isPermaLink="true">https://zenn.dev/nogajun/articles/aad5a57c9b000e</guid><pubDate>Wed, 26 Feb 2025 02:29:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cqPS8hOO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stremlit%25E3%2582%2592Windows%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AEStep%2520by%2520step%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2581%258C%25E3%2581%259F%25E3%2581%2598%25E3%2582%2585%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p0SzRzanNIWHlCaFh6a3JHeHY0Q3V4UFBTdW9adHFxR1pHc0hnekUwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>のがたじゅん</dc:creator></item><item><title><![CDATA[LeetCode #1221 Split a String in Balanced Strings]]></title><description><![CDATA[
 問題概要
入力値：s (Balanced strings)
出力値：the maximum number of balanced strings (int)
問題のリンク

 入力例
Input: s = "RLRRLLRLRL"
Output: 4

 解答例1
計算量：O(n)
Python
class Solution(object):
    def balancedStringSplit(self, s):
        """
        :type s: str
        :rtype: int
        """
        current_val...]]></description><link>https://zenn.dev/pirika/articles/a387b4a624ab36</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/a387b4a624ab36</guid><pubDate>Wed, 26 Feb 2025 00:15:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BikzPGcR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520%25231221%2520Split%2520a%2520String%2520in%2520Balanced%2520Strings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[チートシート②正規表現で扱う文字パターン35選！]]></title><description><![CDATA[
 代表的な文字列パターン



 日付 (Date)



形式例
2025-02-10 (ISO 8601)
02/10/2025 (米国形式)
10.02.2025 (欧州形式)


規則

数字で構成され、年・月・日が含まれる
区切りはハイフン -、スラッシュ /、ピリオド . など


正規表現例

\d{4}[-/\.]\d{2}[-/\.]\d{2}






 メールアドレス (Email Address)



形式例
example@example.com
user.name+tag@domain.co.jp


規則

ローカル部分（example）とドメイン部分...]]></description><link>https://zenn.dev/taiking/articles/0c0901d779882d</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/0c0901d779882d</guid><pubDate>Tue, 25 Feb 2025 15:45:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oUkuoLhI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E2%2591%25A1%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2586%25E6%2596%2587%25E5%25AD%2597%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B335%25E9%2581%25B8%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[チートシート①PySaprkのデータ処理手順Driver,Catalist,Task,Job,...]]></title><description><![CDATA[
 Pysaprkの内部処理

 データフレームからカラム抽出までの流れ

 タイトル：Spark DataFrameの処理🏠
（データがシステムに入力され、処理が始まるところからスタート）

 Scene 1: データの入力
💾 データソース「トランザクションデータをロードしてください！（Job）」
👨‍💻 Driverノード「かしこまりました！処理計画 （Stage） を立てます！」
→ ここで「Job」が発生！

 Scene 2: Driverノードが処理計画を作成
👨‍💻 Driverノード「処理は3つのステージ （Stage） に分けるぞ！」
📜 処理計画 （Stages）
...]]></description><link>https://zenn.dev/taiking/articles/e9a0ba099d4433</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/e9a0ba099d4433</guid><pubDate>Tue, 25 Feb 2025 15:45:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uu6VHoNr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E2%2591%25A0PySaprk%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2587%25A6%25E7%2590%2586%25E6%2589%258B%25E9%25A0%2586Driver%252CCatalist%252CTask%252CJob%252C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[uv + FastAPI + Hypercorn なアプリを K8S にデプロイする]]></title><description><![CDATA[
 tl;dr

uv を使う限りでは、uv の公式イメージが既にあるので Dockerfile を作るのはすごい楽ちん
コンテナレジストリにイメージをアップロード出来れば、後は kubectl apply すれば良い


 前文

 やりたいこと
K8S の練習で、自前の Dockerfile を使ったサービスを K8S にデプロイしてみたい。
そのためしてみる。

 前提

Ubuntu 24.04 + microk8s 環境
uv が入っていること


 デプロイへの道

 依存パッケージのインストール
uv init
uv add fastapi hypercorn pydant...]]></description><link>https://zenn.dev/argi_berri/articles/b734c6bdc4c7dc</link><guid isPermaLink="true">https://zenn.dev/argi_berri/articles/b734c6bdc4c7dc</guid><pubDate>Tue, 25 Feb 2025 15:08:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1teNAJ5Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%2520%252B%2520FastAPI%2520%252B%2520Hypercorn%2520%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%2520K8S%2520%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ARGIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYWQwM2NmMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ARGIA</dc:creator></item><item><title><![CDATA[Pythonで学ぶクリーンアーキテクチャ入門]]></title><description><![CDATA[
 はじめに
リーディング・エッジ社で、エンジニアをしている和泉と申します。
今回はクリーンアークテクチャについて記事を書きたいと思います。
ソースコードは、以下のGitHubリポジトリに保存しておりますのでご確認頂ければと思います。

GitHubリポジトリ

さて、クリーンアーテクチャと聞いてどのようなイメージを持ちますでしょうか？
よく使われる図として以下があるかと思います。

クリーンアーキテクチャの一番重要なポイントは、以下だと私は考えております。

各種クラスの依存関係を明確に分けて配置すること。
依存関係が逆転する場合は、インターフェースを利用すること。

上記を守って開発...]]></description><link>https://zenn.dev/izumi_toshinori/articles/1237f5586db353</link><guid isPermaLink="true">https://zenn.dev/izumi_toshinori/articles/1237f5586db353</guid><pubDate>Tue, 25 Feb 2025 14:56:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g9329X7j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Izumi%2520Toshinori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5MTgzNzUwYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Izumi Toshinori</dc:creator></item><item><title><![CDATA[ローカルのPDFファイルを引用して回答してくれるエージェントを作った]]></title><description><![CDATA[
 僕は自分が見たことしか信じない
これは元サッカー選手の内田篤人選手の言葉です。
私たちは昨今のAIの急速な発展により、簡単に幅広い情報にアクセスできるようなりました。わからないことはとりあえず雑に聞けば、常にそこそこの回答が返ってきます。
しかし、業務の特性上「そこそこ」の回答で満足できないことも多いでしょう。特に専門性や正確性が求められる領域で仕事をしている場合、本当にその情報が正しいのかを自分の目で確かめることが重要になってきます。
例えば弊社は、電子カルテのクラウド化支援やAIを活用した病院DX推進を事業として行なっています。医療システムを構築し提供するためには、国が出している...]]></description><link>https://zenn.dev/ispec_inc/articles/local-pdf-agent</link><guid isPermaLink="true">https://zenn.dev/ispec_inc/articles/local-pdf-agent</guid><pubDate>Tue, 25 Feb 2025 04:46:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vvw3cMoH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEPDF%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%25BC%2595%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%259B%259E%25E7%25AD%2594%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yusuke%2520Yamada%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmN2Y5YzE4ZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ispec%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjOTgwOTZjODkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke Yamada</dc:creator></item><item><title><![CDATA[Morphで遊ぶ：環境構築編]]></title><description><![CDATA[こんにちは！kirigayaです
今回はapp作成フレームワークのmorphで遊んでいきます
PCはMacです
さっそく環境を作っていきます

 morphを動作させるために必要なものをインストール

Node.jsのバージョンを複数管理できるnvm(Node Version Manager)という管理ツールをインストールします。

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash

Node.js（LTS（Long Term Support））をインストール

nvm inst...]]></description><link>https://zenn.dev/snow_owl/articles/b9c6396519e4ec</link><guid isPermaLink="true">https://zenn.dev/snow_owl/articles/b9c6396519e4ec</guid><pubDate>Mon, 24 Feb 2025 14:12:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GO146yvk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Morph%25E3%2581%25A7%25E9%2581%258A%25E3%2581%25B6%25EF%25BC%259A%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kirigaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNGYxNzkwNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kirigaya</dc:creator></item><item><title><![CDATA[【Python・Pysparkで学ぶ！】データ分析の基礎【データ分析の最適化②withColumn()とselect()】]]></title><description><![CDATA[
 【Python・Pysparkで学ぶ！】データ分析の基礎【データ分析の最適化②withColumn()とselect()】
df = (
    spark.read.parquet("s3://sample/df.csv")
    .withColumn("y",fn.date_format(fn.col("date"), "yyyy"))
    .withColumn("m",fn.date_format(fn.col("date"), "mm"))
    .withColumn("d",fn.date_format(fn.col("date"), "dd"))
    ....]]></description><link>https://zenn.dev/taiking/articles/de4269fd87108b</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/de4269fd87108b</guid><pubDate>Mon, 24 Feb 2025 13:47:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6g5226eF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPyspark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2580%2590%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E2%2591%25A1withColumn%2528%2529%25E3%2581%25A8selec...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[uvのworkspace機能を活用した複数のPythonパッケージの管理について]]></title><description><![CDATA[
 はじめに
本記事では、Pythonのパッケージ管理ツール uvが提供するworkspace機能を活用し、1つのリポジトリ内で複数のPythonパッケージを効率的に管理する方法を紹介します。

 workspacesとは？
workspace機能は、大規模なコードベースを複数のパッケージに分割して管理するための仕組みです。
私は初めて出会いましたが、cargoやnpmなど他言語のパッケージ管理ツールにも類似の機能が存在するそうです。
uvのworkspace には以下の特徴があります。


単一のロックファイルで全パッケージの依存関係を管理
→ 1つのuv.lockで全体を管理できるた...]]></description><link>https://zenn.dev/diia/articles/ec436940bef30a</link><guid isPermaLink="true">https://zenn.dev/diia/articles/ec436940bef30a</guid><pubDate>Mon, 24 Feb 2025 13:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lalD6wMs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%25E3%2581%25AEworkspace%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:diia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVBmZi04WUs0LUFYeFJOTE1qcWloLWZERDhzSUkwdHhWVXpJdTJCS2oyYjh2ZGExdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>diia</dc:creator></item><item><title><![CDATA[AIボドゲソムリエ🎲Gemini2.0×Dify×Flaskで作る推薦エージェント]]></title><description><![CDATA[
 概要
ボードゲームを始めたいけど、何を選べばいいか分からない...。
そんな経験はありませんか？？
ボードゲームには、プレイ人数やプレイ時間、ゲームの難易度など、考慮すべき要素が多くあります。
初心者にとって、これらの条件を満たす最適なゲームを見つけるのは結構大変だったりしますよね！
そこで今回作った「ボードゲームソムリエのサイハラさん」は、プレイ人数やプレイ時間などの簡単な質問に答えるだけで、AIが最適なボードゲームを提案してくれるチャットエージェントです！
サイハラさん開発にあたり、フロントエンドではPythonのWeb開発フレームワークのFlaskとJavaScript、バック...]]></description><link>https://zenn.dev/ghillie/articles/fcb896886d25f1</link><guid isPermaLink="true">https://zenn.dev/ghillie/articles/fcb896886d25f1</guid><pubDate>Mon, 24 Feb 2025 12:57:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b0aXE4U2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2583%259C%25E3%2583%2589%25E3%2582%25B2%25E3%2582%25BD%25E3%2583%25A0%25E3%2583%25AA%25E3%2582%25A8%2520Gemini2.0%25C3%2597Dify%25C3%2597Flask%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E6%258E%25A8%25E8%2596%25A6%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDA5NzlhNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アギ</dc:creator></item><item><title><![CDATA[教育・研究向けの架空検索ログを生成するPythonパッケージ]]></title><description><![CDATA[最近Devinがすごいので、前から作りたかったものを色々作っています。
今回は教育・研究用に、架空の検索ログ生成をするLogfakerというパッケージを公開したので紹介します。
https://github.com/rilmayer/logfaker

 なぜLogfakerを作ったのか
検索システムの研究や教育において、自分の欲しい感じのテストデータ（特に日本語）が不足していることに不満を持っておりました。
プライバシーやビジネスの観点から実際の検索ログを使用することはなかなか難しく、かといって手動で作成するのは非常に手間がかかります。
Logfakerは、この課題を解決するために開発...]]></description><link>https://zenn.dev/rilmayer/articles/2b114f7fb88f81</link><guid isPermaLink="true">https://zenn.dev/rilmayer/articles/2b114f7fb88f81</guid><pubDate>Mon, 24 Feb 2025 11:32:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dyVBTOJS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2595%2599%25E8%2582%25B2%25E3%2583%25BB%25E7%25A0%2594%25E7%25A9%25B6%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E6%259E%25B6%25E7%25A9%25BA%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:furufuru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEV093LWxiZ2t5TEUxdnpSLU11QjFYczY5SUhCbmtNOVVEU2FoSGc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>furufuru</dc:creator></item><item><title><![CDATA[Pythonでエクセルの差分検出ツールを作ってみよう]]></title><description><![CDATA[PythonでA列とB列を比較して差分部分を赤字にするツールを作成する方法をまとめようと思います
ツールはCopilotを使用して作成しております
参考サイトではpywin32というパッケージを使用しており、MacOSでは使用できなかったため、
MacOSでも同じようなことができるように作成してみました
こちらのコードはMacOS、windowsともに動作します

 参考サイト
https://qiita.com/dbc_spr/items/92a16313fed44e703565

 サンプルファイルの内容

 ツール使用前


 ツール使用後


 開発環境
M1 Mac
MacOS...]]></description><link>https://zenn.dev/sayasurvey/articles/ee7fc25652fd1e</link><guid isPermaLink="true">https://zenn.dev/sayasurvey/articles/ee7fc25652fd1e</guid><pubDate>Mon, 24 Feb 2025 08:10:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mwxVVsEH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sayasurvey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlZWjNSbWJhQXZFaU91cXJGMld3OTRGdlMzX2hJWGhPTFFwcHlHV1RTNGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sayasurvey</dc:creator></item><item><title><![CDATA[ラグランジュ補間とその応用(Shamirの秘密分散法)]]></title><description><![CDATA[
 はじめに
最近、数値解析の講義を受講したluna_moonlightです。この記事では、ラグランジュ補間のPythonによる実装とその応用例について解説していきたいと思います。

 多項式補間
ラグランジュ補間の前にまず多項式補間について解説していきます。
i \neq j \Rightarrow x_i \neq x_jを満たすN + 1個の点(x_0, y_0), (x_1, y_1), \dots, (x_N, y_N)から、このN + 1個の点を通るN次多項式p_N(x) = a_0 + a_1 x + a_2 x ^ 2 + \dots + a_N x^Nを求めることをN次...]]></description><link>https://zenn.dev/luna_moonlight/articles/e940a948a5b401</link><guid isPermaLink="true">https://zenn.dev/luna_moonlight/articles/e940a948a5b401</guid><pubDate>Mon, 24 Feb 2025 06:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DXNhX24z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A5%25E8%25A3%259C%25E9%2596%2593%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%2528Shamir%25E3%2581%25AE%25E7%25A7%2598%25E5%25AF%2586%25E5%2588%2586%25E6%2595%25A3%25E6%25B3%2595%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luna_moonlight%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMThlMWEzMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luna_moonlight</dc:creator></item><item><title><![CDATA[LangGraph : LangMemによる記憶管理の基本]]></title><description><![CDATA[
 LangMemとは
LangMem は、2025年2月に発表された LangGraph ツールチェーン SDK に含まれるライブラリで、主に LLM エージェントの「長期記憶」を管理するための専用 API を提供します。
https://blog.langchain.dev/langmem-sdk-launch/
LangMem はデータの永続化機能と連携するものの、「永続化するデータ（記憶）の管理（追加・更新・削除）」が目的であり、永続化そのものが主目的ではありません。
LangGraph には、すでに「Checkpointer」と「Store」という永続化の仕組みが存在します。L...]]></description><link>https://zenn.dev/hakoten/articles/5790e567da4b3a</link><guid isPermaLink="true">https://zenn.dev/hakoten/articles/5790e567da4b3a</guid><pubDate>Mon, 24 Feb 2025 04:58:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nr_UqFpx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangGraph%2520%253A%2520LangMem%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E8%25A8%2598%25E6%2586%25B6%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hakotensan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNGM1MmE4MWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hakotensan</dc:creator></item><item><title><![CDATA[【AWS】LoadBalancer(ALB)×Cognitoによるオーソライザー認証時の転送ヘッダーをローカルでモックした話]]></title><description><![CDATA[
 目的
AWSでCognitoとALBを使ったオーソライザー認証を実装する機会があった。
その際に認証後のバックエンド側に転送されるヘッダーがAWS特有のものであり、ローカルとクラウド上で実装のコードを分ける必要があった。
現在、AWSをローカルモックするサービスは複数存在するが、本記事の要件であるALBとCognitoでのオーソライザー認証についてはローカルで再現する手順は存在していなかった。
そこでオープンソースに使えるツールを開発することでログイン後にアクセストークンやidTokenを認証必須のエンドポイントに強制的に付与し転送するアプリケーションを作成することにした。
http...]]></description><link>https://zenn.dev/takuyanakahara/articles/a6c6c595ebf6aa</link><guid isPermaLink="true">https://zenn.dev/takuyanakahara/articles/a6c6c595ebf6aa</guid><pubDate>Mon, 24 Feb 2025 03:00:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3BNkrPao--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%25E3%2580%2591LoadBalancer%2528ALB%2529%25C3%2597Cognito%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25AA%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B6%25E3%2583%25BC%25E8%25AA%258D%25E8%25A8%25BC%25E6%2599%2582%25E3%2581%25AE%25E8%25BB%25A2%25E9%2580%2581%25E3%2583%2598%25E3%2583%2583%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E3%2583%25A2...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuya%2520Nakahara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1NqSjY5Qmw1WDk3SmpVR1pfcnN0R2lySHNpR2NGdld2MDYteU1pNTEzT0JmLT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takuya Nakahara</dc:creator></item><item><title><![CDATA[【Python】競プロで使えるかもしれない小ネタ5選（Array編）]]></title><description><![CDATA[
 １．リストをシフトしながら循環させる
nums = [1,2,3,4,5]
l = len(nums)
print(nums)    # [1, 2, 3, 4, 5]

"""
{特定のインデックス} % l によってインデックスの範囲が 0～l-1 の範囲に収まる
ことを利用してリストを循環させます。
"""
for i in range(l - 1):
    print([nums[(i + j) % l] for j in range(1, l + 1)])
    """
    [2, 3, 4, 5, 1]
	[3, 4, 5, 1, 2]
	[4, 5, 1, 2,...]]></description><link>https://zenn.dev/nsystk/articles/b8bdc2fd7efce8</link><guid isPermaLink="true">https://zenn.dev/nsystk/articles/b8bdc2fd7efce8</guid><pubDate>Mon, 24 Feb 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GR1rQP4f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF5%25E9%2581%25B8%25EF%25BC%2588Array%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nose%2520Yoshitaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMmE3NDQ1MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nose Yoshitaka</dc:creator></item><item><title><![CDATA[COCOEvalのコードを読んで学んだこと]]></title><description><![CDATA[
 はじめに
私は普段仕事で機械学習関連の開発を担当しています。
今まで何度か物体検出モデルの作成を担当することがあり、その度に評価コードをどうやって実装すればいいか迷いながら結局は都度自前で実装することでお茶を濁していました。というのもpycocotoolsで取得できる評価指標(AP, AR)はよりももう少し直感的に把握しやすいものを使いたいなと感じており、COCOEvalの実装を読み込むことと自分で実装することを天秤にかけて後者を選んでいました。(COCOEvalの実装はnumpyの配列をつかって実装されており、読み始めた途端にnumpy配列の軸迷子になっていました。。)
このままで...]]></description><link>https://zenn.dev/fg450sa/articles/857d3479edaf3b</link><guid isPermaLink="true">https://zenn.dev/fg450sa/articles/857d3479edaf3b</guid><pubDate>Mon, 24 Feb 2025 00:33:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--djY7rTCW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:COCOEval%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kojiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyNGE2YTcyYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kojiro</dc:creator></item><item><title><![CDATA[超初心者のための Django 入門 〜日記アプリを作りながら学習しよう〜]]></title><description><![CDATA[「DjangoでWebアプリを作ってみたいけど、なんだか難しそう…」「Djangoでプログラミングって、自分にもできるのかな？」

この書籍は、DjangoでWebアプリ開発に初めて挑戦する全ての人のために書きました。

本書では、Pythonというプログラミング言語を使い、業界でも広く活用されている強力なWebフレームワーク、Djangoを学びます。

日記アプリという身近な題材を通して、Djangoの基本から実践的な応用までを、実際のコードや画面イメージを交えて丁寧に解説していきます。

]]></description><link>https://zenn.dev/hamaup/books/7de894c0bc660d</link><guid isPermaLink="true">https://zenn.dev/hamaup/books/7de894c0bc660d</guid><pubDate>Sun, 23 Feb 2025 18:39:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QH7mQyEN--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kZGY5NDA5ZmRkLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hamaup</dc:creator></item><item><title><![CDATA[Multi-Agent Orchestratorを使用したAI旅行プランナーの構築]]></title><description><![CDATA[インテリジェントなAIアプリケーションの構築には、多くの場合、複数の専門AIエージェントの連携が必要です。この記事では、Multi-Agent Orchestratorフレームワークを使用して高度な旅行プランニングシステムを作成する方法を紹介し、複数のAIエージェントが協力して詳細な旅行プランを作成する方法を解説します。

 Multi-Agent Orchestratorの概要
Multi-Agent Orchestratorは、複雑な会話における複数のAIエージェントを管理・調整するために設計されたオープンソースフレームワークです。主な特徴は以下の通りです：

複数のAIエージェント...]]></description><link>https://zenn.dev/sunwood_ai_labs/articles/ai-trip-planner-with-multi-agent-orchestrator</link><guid isPermaLink="true">https://zenn.dev/sunwood_ai_labs/articles/ai-trip-planner-with-multi-agent-orchestrator</guid><pubDate>Sun, 23 Feb 2025 15:24:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EkJv0E7W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Multi-Agent%2520Orchestrator%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAI%25E6%2597%2585%25E8%25A1%258C%25E3%2583%2597%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdpSmVyNldLVlpKLUd4N054QWVuSFVtYXQ3MUhhd1NXaU5hRG5FTnZiMXZZdHBIaGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item></channel></rss>