<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 05 Aug 2025 11:58:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【120FPS問題の解決策】 gsap.ticker を使用してアニメーションを60FPSで制御する]]></title><description><![CDATA[requestAnimationFrameは、JavaScriptで滑らかなアニメーションを実現する際、ブラウザの描画サイクルに同期してコールバック関数を実行する非常に便利なAPIです✅
https://developer.mozilla.org/ja/docs/Web/API/Window/requestAnimationFrame
しかし、近年、リフレッシュレートが120Hzやそれ以上のディスプレイが普及する中で、このAPIを適切に使用しないと、アニメーションが意図せず2倍の速さで実行されてしまう「120FPS問題」が発生してしまいます。

 requestAnimationFram...]]></description><link>https://zenn.dev/kurichan/articles/c340af84e9e1e7</link><guid isPermaLink="true">https://zenn.dev/kurichan/articles/c340af84e9e1e7</guid><pubDate>Tue, 05 Aug 2025 10:47:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vl5x8YrY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590120FPS%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%25E3%2580%2591%2520gsap.ticker%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%259260FPS%25E3%2581%25A7%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258A%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjN2IzM2RiNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くりちゃん</dc:creator></item><item><title><![CDATA[JetBrains 2025.2ぞくぞくリリース！AI Assistantと価格改定まとめ]]></title><description><![CDATA[
 はじめに
こんにちは。JetBrains公式代理店NATTOSYSTEMのねばねばです。
みなさん、Jetbrains各種製品の2025.2バージョンが猛暑をふきとばす勢いでぞくぞくリリースされています。
今回はJetBrainsが2025年8月に発表したAI Assistant 2025.2新機能と、各種IDE製品の2025.2リリース情報、価格改定のニュースについて紹介いたします。


 JetBrains AI Assistant 2025.2の注目ポイント

 ✅ プロジェクトルールでAIにプロジェクト固有の指示を出せる
プロジェクトごとの命名規則やコーディングスタイルを設定...]]></description><link>https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</link><guid isPermaLink="true">https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</guid><pubDate>Tue, 05 Aug 2025 07:32:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4q0-u19--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JetBrains%25202025.2%25E3%2581%259E%25E3%2581%258F%25E3%2581%259E%25E3%2581%258F%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%2581AI%2520Assistant%25E3%2581%25A8%25E4%25BE%25A1%25E6%25A0%25BC%25E6%2594%25B9%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%25B0%25E3%2581%25AD%25E3%2581%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYWQxMDhjNTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BENATTOSYSTEM%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねばねば</dc:creator></item><item><title><![CDATA[【Max9】Max9に実装されたJavaScript v8まとめ]]></title><description><![CDATA[
 Max9のv8でできること


 v8 / v8ui 基本オブジェクト


v8 : Max パッチ内で汎用 JavaScript オブジェクトを作成し、高速な V8 エンジンで実行できる。

v8ui : v8 と同じ機能に加え、mgraphics や sketch を用いたカスタム描画・インタラクション UI を構築できる。
旧 js / jsui より実行速度が大幅に向上し、大規模ロジックや複雑な UI でもパフォーマンスを確保できる。 


 JavaScript 言語機能（ES6+）


let/const、アロー関数、分割代入、テンプレートリテラル、スプレッド演算子など ...]]></description><link>https://zenn.dev/dsgarage/articles/48576b39c5d445</link><guid isPermaLink="true">https://zenn.dev/dsgarage/articles/48576b39c5d445</guid><pubDate>Tue, 05 Aug 2025 05:55:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9L8QsW3C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Max9%25E3%2580%2591Max9%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FJavaScript%2520v8%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2595%25E3%2582%2593%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2NzQ1N2RlMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つかさんさん</dc:creator></item><item><title><![CDATA[JavaScriptの曖昧な型を愛でる会]]></title><description><![CDATA[― typeof null === "object" に乾杯―

JavaScript の型システムはシュレディンガーの猫より多忙である[1]。箱を開けても閉めても、とりあえず鳴き声だけは聞こえる。



 0. TL;DR を TL;DR と呼べない長さで


typeof null が 'object': 1995 年のタイポが 30 年寝かされワイン化[2]。

NaN !== NaN: 自己否定を習得した数値。哲学科卒の数学者が泣いた。

[] + {} と {} + [] は真逆の結果。演算子より先に人生を見直そう。

0 == "0" だが 0 === "0" ではない。ダイ...]]></description><link>https://zenn.dev/4_4_rest/articles/848c9365d22ba8</link><guid isPermaLink="true">https://zenn.dev/4_4_rest/articles/848c9365d22ba8</guid><pubDate>Tue, 05 Aug 2025 04:49:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iKZQedqG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E6%259B%2596%25E6%2598%25A7%25E3%2581%25AA%25E5%259E%258B%25E3%2582%2592%25E6%2584%259B%25E3%2581%25A7%25E3%2582%258B%25E4%25BC%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%25A8%25E4%25BC%2591%25E7%25AC%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOGY1YTNlZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>全休符</dc:creator></item><item><title><![CDATA[Vue でテンプレートとロジックを切り分ける | Vue3]]></title><description><![CDATA[
 概要
Vue でウェブアプリケーションを作っているときに、&lt;script&gt;（ロジック）の部分は違うんだけど、&lt;template&gt;（テンプレート）の部分は一緒、ということがあった。そこで、テンプレートとロジックを切り分けて、テンプレートは一つのファイルで使いまわして、ロジックは個々のファイルで管理できるよう構造を考えた。コンポーネントを使えばいいようなものだが、そうすると、テンプレート部分が全てコンポーネントに行ってしまう。テンプレートでは、いくつかのコンポーネントをすでに使用しており、もしテンプレートをコンポーネントにしてしまうと、コンポーネントからコンポーネ...]]></description><link>https://zenn.dev/bbsfish/articles/74fb455977bb33</link><guid isPermaLink="true">https://zenn.dev/bbsfish/articles/74fb455977bb33</guid><pubDate>Tue, 05 Aug 2025 03:44:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OfcTouZT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%2520%25E3%2581%25A7%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A8%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E5%2588%2587%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%25E3%2582%258B%2520%257C%2520Vue3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y.%2520HSD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSS1ZeDZXOGNtbm1hTFhWM25SNC1QYnFWbTdDVkJ3RXdrT2czUlNnWjlOPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y. HSD</dc:creator></item><item><title><![CDATA[Vue でスクロールイベントを作成する | Vue3（Options API）]]></title><description><![CDATA[
 概要
Vue でウェブアプリケーションを構築しているときに、ユーザのスクロールを検知してトップへ戻るボタンを表示したり、メニューバーを表示/非表示したりと、やることが多かったので、その時のメモ。

 コード

App.vue
export default {
  data() {
    return {
      lastScrollY: 0, // 前回のスクロール位置
    };
  },
  methods: {
    handleScroll() {
      const currentScrollY = window.scrollY; // 現在のスクロール位置
...]]></description><link>https://zenn.dev/bbsfish/articles/91fcc5371f0393</link><guid isPermaLink="true">https://zenn.dev/bbsfish/articles/91fcc5371f0393</guid><pubDate>Mon, 04 Aug 2025 15:44:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kjpKGqCI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%2520%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2520%257C%2520Vue3%25EF%25BC%2588Options%2520API%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y.%2520HSD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSS1ZeDZXOGNtbm1hTFhWM25SNC1QYnFWbTdDVkJ3RXdrT2czUlNnWjlOPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y. HSD</dc:creator></item><item><title><![CDATA[ダウンロード欄にファイル項目追加されたことをcookieで検出する方法]]></title><description><![CDATA[
 はじめに
「経緯」の項目は長いので飛ばしてよい！！
後で、気になったら読めばよい

 ざっくり、この記事で書いてる内容
ざっくり、この記事で書いてるのは、ダウンロード処理だと
画面のリロードが走らないから、全体スピナーを表示したときに、
画面のリロードで勝手に消えることが期待できない
blobをダウンロードするようなfetch()を使ったajax系の処理でダウンロードを実装していれば
比較的、簡単に、全体スピナーの表示／非表示を差し込める
しかし、formのsubmitや、aタグのhrefでバックエンドのダウンロード処理を実行してるケースでは
全体スピナーを差し込んだときに、全体スピ...]]></description><link>https://zenn.dev/tazzae999jp/articles/4b34efd99045fd</link><guid isPermaLink="true">https://zenn.dev/tazzae999jp/articles/4b34efd99045fd</guid><pubDate>Mon, 04 Aug 2025 13:26:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iYb74ShX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%25AC%2584%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E9%25A0%2585%25E7%259B%25AE%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592cookie%25E3%2581%25A7%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25A4%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwZmVjMjAxYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たつお</dc:creator></item><item><title><![CDATA[JavaScriptでオブジェクト配列のユニーク処理はSetではできません。]]></title><description><![CDATA[
 問題：Setによるユニーク処理が期待通りに動かない
配列のユニーク処理といえばSetを使ったワンライナーが定番ですが、オブジェクト配列では期待通りに動きません。
const users = [
  {id: 1, name: "田中"},
  {id: 2, name: "山田"},
  {id: 1, name: "田中"}
];
const uniqueUsersWithSet = [...new Set(users)];
console.log(uniqueUsersWithSet.length); // 3 ← 期待は2なのに...

 原因：オブジェクトの比較は参照ベース
...]]></description><link>https://zenn.dev/third_tech/articles/95819364032bad</link><guid isPermaLink="true">https://zenn.dev/third_tech/articles/95819364032bad</guid><pubDate>Mon, 04 Aug 2025 11:35:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--915UK7G6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%258B%25E3%2583%25BC%25E3%2582%25AF%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AFSet%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ueno%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNGYzMzMzZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BETHIRD%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2MDIwN2EyYzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ueno</dc:creator></item><item><title><![CDATA[【JavaScript】スタックトレースの読み方]]></title><description><![CDATA[
 node inorderTraversalTest.js を実行した結果
/Users/mavo/project/algorithm-solutions/binary-tree/problems/10_inorderTraversal/js/src/inorderTraversal.js:10
        arr.push(node.data);
            ^

TypeError: Cannot read properties of undefined (reading 'push')
    at inorderTraversalHelper (/Users/m...]]></description><link>https://zenn.dev/mabo23/articles/fe2cfa7d858f8c</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/fe2cfa7d858f8c</guid><pubDate>Mon, 04 Aug 2025 11:02:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0yCWyNq4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[Intersection Observer で画面外のCSSアニメーションを停止してパフォーマンスを改善する]]></title><description><![CDATA[CSSアニメーションのanimation-iteration-count: infiniteを指定して、無制限にアニメーションを繰り返している要素は画面外であってもアニメーションが実行され続けます。
画面外での不要なアニメーションを制御して無駄なCPU・GPUリソース消費を抑えましょう✅
特にCSSアニメーション多用しているWEBサイトでは効果的かもしれません🙆‍♂️

 Intersection Observer で画面外のCSSアニメーションを制御するコードと実装例


 Intersection Observer を使用して画面内・画面外の判定をする
要素が画面外の時の判定はInt...]]></description><link>https://zenn.dev/kurichan/articles/416e5292703516</link><guid isPermaLink="true">https://zenn.dev/kurichan/articles/416e5292703516</guid><pubDate>Mon, 04 Aug 2025 10:37:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eSJ6qzoj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Intersection%2520Observer%2520%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E5%25A4%2596%25E3%2581%25AECSS%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%2581%259C%25E6%25AD%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258A%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjN2IzM2RiNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くりちゃん</dc:creator></item><item><title><![CDATA[js templete 挿入用コード]]></title><description><![CDATA[

(function() {
  
let html_text_string = `    &lt;div class="replace"&gt;
         &lt;div class="bbb"&gt;

            &lt;p&gt;aaaaaa&lt;/p&gt;
            &lt;p&gt;aaaaaa&lt;/p&gt;
            &lt;p&gt;aaaaaa&lt;/p&gt;
            &lt;p&gt;aaaaaa&lt;/p&gt;
            &lt;p&gt;aaaaaa&lt;/p&gt...]]></description><link>https://zenn.dev/kemii/articles/fb32ca702ef5d0</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/fb32ca702ef5d0</guid><pubDate>Mon, 04 Aug 2025 09:18:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HD1i6_lP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:js%2520templete%2520%25E6%258C%25BF%25E5%2585%25A5%25E7%2594%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[『JavaScript関数型プログラミング 複雑性を抑える発想と実践法を学ぶ』を読んだ 03]]></title><description><![CDATA[02からのつづき

 Part 2: 関数型デザインとコーディング
...

 第5章 複雑性を抑えるデザインパターン

本章のテーマ

命令型エラー処理における問題
コンテナ（コンテキスト）を利用して不正なデータへのアクセスを防ぐ
ファンクターをデータ変換のメカニズムとして実装する
合成を容易にするデータ型としてモナドを理解する
モナド型を使ってエラー処理戦略を整理する
モナド型を挟む（インタリーブする）、合成する


関数型プログラミングでのエラー処理について

関数型プログラミングへの思い込み

関数型プログラミングは、数値計算上の学術的な課題を解決するためのパラダイムではない
ま...]]></description><link>https://zenn.dev/shimpei_takeda/articles/e333187ff8005d</link><guid isPermaLink="true">https://zenn.dev/shimpei_takeda/articles/e333187ff8005d</guid><pubDate>Mon, 04 Aug 2025 06:06:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1NLhU4Lt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258EJavaScript%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2520%25E8%25A4%2587%25E9%259B%2591%25E6%2580%25A7%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2582%258B%25E7%2599%25BA%25E6%2583%25B3%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%25E6%25B3%2595%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%258F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%252003%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shimpei%2520TAKEDA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NjIzYjY5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shimpei TAKEDA</dc:creator></item><item><title><![CDATA[『JavaScript関数型プログラミング 複雑性を抑える発想と実践法を学ぶ』を読んだ 02]]></title><description><![CDATA[01からのつづき

 Part 2: 関数型デザインとコーディング

Part 1では、「なぜ関数型なのか」「なぜJavaScriptなのか」に回答した
Part 2では、実世界の問題を解決することを目的とする

「関数型を理解する」ことがどういうことなのかを学ぶ
第3章では、容易に把握できるコードを作成することを目標とする


map, reduce, filterなどの宣言的で抽象化された関数を利用する
関数型のスタイルで再帰を利用する方法も紹介する


第4章では、第3章で学んだ概念を関数のパイプライン化に適用して、開発を合理化したり、ポイントフリースタイルでプログラムを記述したり...]]></description><link>https://zenn.dev/shimpei_takeda/articles/0570a46218dc12</link><guid isPermaLink="true">https://zenn.dev/shimpei_takeda/articles/0570a46218dc12</guid><pubDate>Mon, 04 Aug 2025 06:04:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mNM8_Z7Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258EJavaScript%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2520%25E8%25A4%2587%25E9%259B%2591%25E6%2580%25A7%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2582%258B%25E7%2599%25BA%25E6%2583%25B3%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%25E6%25B3%2595%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%258F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%252002%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shimpei%2520TAKEDA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NjIzYjY5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shimpei TAKEDA</dc:creator></item><item><title><![CDATA[『JavaScript関数型プログラミング 複雑性を抑える発想と実践法を学ぶ』を読んだ 01]]></title><description><![CDATA[
JavaScriptでの関数型プログラミングの実践をさらに深掘りするために、本書を手に取りました。
本書はかなり網羅的な内容でした。
一冊目として手に取ると網羅的すぎてオエッとなってしまうかもしれませんが、ひととおり関数型プログラミングの書籍を読んでからだと、ばらばらだった知識が体系的に整理されていくのでオススメです。特にテストやイベント駆動・非同期処理への関数型のアプローチについては非常に実践的でした。

 序文

著者が大学生や大学院生だったときは、オブジェクト指向デザインが中心だった
新しい言語が、ソフトウェアの課題へアプローチする方法に対して異なる視点を提供してくれるように、新...]]></description><link>https://zenn.dev/shimpei_takeda/articles/58fb8f88e9b14d</link><guid isPermaLink="true">https://zenn.dev/shimpei_takeda/articles/58fb8f88e9b14d</guid><pubDate>Mon, 04 Aug 2025 06:04:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5X46XJa7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258EJavaScript%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2520%25E8%25A4%2587%25E9%259B%2591%25E6%2580%25A7%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2582%258B%25E7%2599%25BA%25E6%2583%25B3%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%25E6%25B3%2595%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%258F%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A0%252001%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shimpei%2520TAKEDA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NjIzYjY5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shimpei TAKEDA</dc:creator></item><item><title><![CDATA[JavaScriptでABC417 (A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc417

 A - A Substring
https://atcoder.jp/contests/abc417/tasks/abc417_a
そういうことをするメソッドがあった気がしますが、パッと思い出せなかったので魂のArray.prototype.shift()
脳筋すぎる
あとから検索しました
たぶんString.prototype.slice()ですね
console.log(S.slice(A, -B))をすればよさそうです。
(ただし、Bが0だと吹っ飛ぶので分岐つけましょう。普通にif文でもいいし、三項演算子で第...]]></description><link>https://zenn.dev/aya_koto/articles/899da635169749</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/899da635169749</guid><pubDate>Sat, 02 Aug 2025 13:42:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z0IhUjrp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC417%2520%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[GraphQLの「Resolver並行性・I/O並列性」の言語別実装比較(JS, Go, Ruby, PHP)]]></title><description><![CDATA[
 はじめに
GraphQLは柔軟なデータ取得を可能にする一方で、N+1問題やI/Oによるレスポンス遅延が課題になることが多いです。
このような課題を解決するために、各言語・ライブラリが「Resolverの並行実行」や「I/Oの並列化」などの工夫をしています。しかし、その実装方式は言語ごとにかなり違いがあります。
この記事では、graphql-js（Node.js）、graphql-go（Go）、graphql-ruby（Ruby）、graphql-php（PHP）の主要なGraphQLサーバー実装を比較します。

 なぜResolverの並行性が必要なのか

GraphQLでは、クライ...]]></description><link>https://zenn.dev/shunjuio/articles/39accac452a5f5</link><guid isPermaLink="true">https://zenn.dev/shunjuio/articles/39accac452a5f5</guid><pubDate>Sat, 02 Aug 2025 06:40:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vh063Yix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GraphQL%25E3%2581%25AE%25E3%2580%258CResolver%25E4%25B8%25A6%25E8%25A1%258C%25E6%2580%25A7%25E3%2583%25BBI%252FO%25E4%25B8%25A6%25E5%2588%2597%25E6%2580%25A7%25E3%2580%258D%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E5%2588%25A5%25E5%25AE%259F%25E8%25A3%2585%25E6%25AF%2594%25E8%25BC%2583%2528JS%252C%2520Go%252C%2520Ruby%252C%2520PHP%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:saboyutaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MGZmNGMxMGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%25E6%2598%25A5%25E7%25A7%258B%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k2dGhDeVExUnVRN0Fvd3NGLUNIM1dXZXVxWHk5UEpnYVBtMmViPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saboyutaka</dc:creator></item><item><title><![CDATA[何を作ろうか、、]]></title><description><![CDATA[こんにちは。最近投稿ができていなくて申し訳ありませんでした。なんで投稿できていないかというと言い訳みたいになるんですが（ほんとに言い訳）何を作ろうか悩んでいてですね、、、、
それでこの記事を見てくれた方はコメントなどで＊＊＊をつくったら？とコメントしてくれると励みにもなるのでとてもうれしいです！（あんまり難しいのにはしないで）
]]></description><link>https://zenn.dev/ak0331/articles/0f6374c798cbbb</link><guid isPermaLink="true">https://zenn.dev/ak0331/articles/0f6374c798cbbb</guid><pubDate>Sat, 02 Aug 2025 02:33:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1P1NiWg_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%258B%25E3%2580%2581%25E3%2580%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ak0331%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NTdjZjk1YzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ak0331</dc:creator></item><item><title><![CDATA[【初心者向け】TypeScript環境構築：これだけでOK！]]></title><description><![CDATA[
 TypeScript環境構築ガイド【初心者向け】

「TypeScriptを始めてみたいけど、どうやって環境構築すればいいか分からない…」
という方向けに、TypeScriptの基本的な環境構築手順をわかりやすく解説します。
この記事の手順に沿って進めるだけで、すぐに開発を始められます。



 1. 必要なツールの準備
TypeScriptで開発を始めるには、以下のツールが必要です。


Node.js
JavaScriptの実行環境です。TypeScriptで書いたコードを最終的に実行するためには必須です。


npm/yarn
パッケージ管理ツールです。Node.jsをインスト...]]></description><link>https://zenn.dev/yu_fu/articles/5ea822e915bbf4</link><guid isPermaLink="true">https://zenn.dev/yu_fu/articles/5ea822e915bbf4</guid><pubDate>Fri, 01 Aug 2025 17:01:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OOkYrv8v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591TypeScript%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%259A%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7OK%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0ZDE0NTNmNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーふー</dc:creator></item><item><title><![CDATA[PR提出前にやるリファクタリング]]></title><description><![CDATA[PR出す前に最低限やって欲しいと思っているリファクタリングメモ

リファクタリング (refactoring) とは、コンピュータプログラミングにおいて、プログラムの外部から見た動作を変えずにソースコードの内部構造を整理することである。
https://ja.wikipedia.org/wiki/リファクタリング_(プログラミング)


 想定

期待の新人君
JavaScript / TypeScript
フロントエンド


 嗅覚を研ぎ澄ませる🐶
次の匂いがしたらリファクタリングを検討してみる

不可思議な名前
重複したコード
長い関数
長いパラメータリスト
複雑なループ
甘えたコメ...]]></description><link>https://zenn.dev/morimorig3/articles/301b09f80337f3</link><guid isPermaLink="true">https://zenn.dev/morimorig3/articles/301b09f80337f3</guid><pubDate>Fri, 01 Aug 2025 07:12:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hmyEg1hK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PR%25E6%258F%2590%25E5%2587%25BA%25E5%2589%258D%25E3%2581%25AB%25E3%2582%2584%25E3%2582%258B%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:morimorig3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwOTQyMzMwZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>morimorig3</dc:creator></item><item><title><![CDATA[JavaScriptを深く知る旅 #1：ホイスティングってなに？]]></title><description><![CDATA[
 はじめに
最近 React を学んでいる中で、React の開発者である Dan Abramov さんの記事を読み、自分自身もまったく同じことを感じました。
JavaScript や TypeScript を強みにしていきたいと考えている自分にとって、やはり JavaScript の基礎をしっかり理解することが欠かせない！！そんな思いが強くなり、この記事を書くことにしました。
これからしばらく、JavaScript に関する学びをアウトプットしていこうと思っています。
第1回は「ホイスティング（巻き上げ）」についてです。
参照元：What is JavaScript made of?...]]></description><link>https://zenn.dev/yuji6523/articles/js-deep-dive-1-hoisting</link><guid isPermaLink="true">https://zenn.dev/yuji6523/articles/js-deep-dive-1-hoisting</guid><pubDate>Fri, 01 Aug 2025 04:11:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H7XZarYS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%2592%25E6%25B7%25B1%25E3%2581%258F%25E7%259F%25A5%25E3%2582%258B%25E6%2597%2585%2520%25231%25EF%25BC%259A%25E3%2583%259B%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjMzIxNGViMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuji</dc:creator></item></channel></rss>