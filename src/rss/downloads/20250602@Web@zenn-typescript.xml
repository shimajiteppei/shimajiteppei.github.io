<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 02 Jun 2025 08:42:06 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[QAエンジニアがWebアプリケーションフロントエンドのテストコードを書いてみる（vitest browser mode編）]]></title><description><![CDATA[
 はじめに
ReactなどのWebアプリケーションフレームワークを用いたフロントエンド開発経験ゼロのQAエンジニアが、Webアプリケーションのテストコードを書いてみるシリーズです。
背景として、エンジニアに対して、「テストコードを書いてください」とよくお願いしてしまいます。しかし、エンジニアから「テストコードを書くので書き方を教えてください」と返答されると、それに答えられるスキルがないので、自分なりに簡単なWebアプリケーションのコードとそれを対象としたテストコードを書いてみることにしました。
本書では、テストフレームワークであるvitestのbrowser modeを使ったテストコー...]]></description><link>https://zenn.dev/jyoppomu/articles/e4c9b7b2d398c4</link><guid isPermaLink="true">https://zenn.dev/jyoppomu/articles/e4c9b7b2d398c4</guid><pubDate>Mon, 02 Jun 2025 08:02:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j6pD3jqJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:QA%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258CWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588vitest%2520browser%2520mo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2520Yoshida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dWTk8taTFaYXc2blBpeUpQQi16cHN5SXRycEFBeDhObk9OajUxYUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuki Yoshida</dc:creator></item><item><title><![CDATA[TypeScriptでクイックソートを実装する]]></title><description><![CDATA[
 クイックソートとは？
クイックソートとはソートアルゴリズムの一種で、ランダムに並んでいるデータを昇順または降順に並び替えることができます。
クイックソートでは、以下の操作を繰り返し行い、並び替えを実現します。
① ピボットと呼ばれる基準値を決め、ピボットより大きいグループと小さいグループに分ける
② ① で分けたそれぞれのグループでピボットを決めて、そのピボットより大きいグループと小さいグループに分ける
クイックソートの時間計算量は、ピボットの決め方にもよりますが、ほとんどのケースで O(n log n)となり、バブルソート、選択ソート、挿入ソートなどの O(n^2) の効率の悪いソ...]]></description><link>https://zenn.dev/lincwell_inc/articles/33cc4109eb7bc3</link><guid isPermaLink="true">https://zenn.dev/lincwell_inc/articles/33cc4109eb7bc3</guid><pubDate>Mon, 02 Jun 2025 05:23:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ChgvKGvm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:oreo2990%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkNzA3MDZjNTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Linc%2527well%252C%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlZWE4N2IyOGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oreo2990</dc:creator></item><item><title><![CDATA[Rust製Vite組み込みビルドツールRolldownを試す]]></title><description><![CDATA[
 Rollupの反対でRolldownなのか？
仕事でフロントエンドを扱うとき、
ビルドツールにviteを使う機会は非常に多い
viteはvuejsのビルドツールと思われがちだが、
どの構成でもプラグインでビルドできるうえ、
esbuildベースなので速度も速い
ただ、フロントの規模が大きくなっていくと、
esbuildのGo実装に限界が見えてくる
現状仕事ではビルドに１０～３０秒かかるので微妙にストレスだ
そこでviteに組み込む方向でRustベースのrollupを開発されていたものを試してみた
それが rolldown
そして一年ぐらい経ってそれがviteに組み込まれる動きになった...]]></description><link>https://zenn.dev/dozo/articles/84985b0e64b0a6</link><guid isPermaLink="true">https://zenn.dev/dozo/articles/84985b0e64b0a6</guid><pubDate>Mon, 02 Jun 2025 00:41:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k1_jZGoB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A3%25BDVite%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABRolldown%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dozo</dc:creator></item><item><title><![CDATA[AIを活用してTypeScriptのpath aliasを相対パスへ一括変換するスクリプトを生成]]></title><description><![CDATA[TypeScript のプロジェクトで path alias を使って @/components/Button のような書き方をしていましたが、プロジェクトの都合により path alias を廃止し相対パスへ統一することになりました[1]。
しかし大量の import 文を手動で変換することは現実的でありません。そこで AI を活用して変換スクリプトを生成し、一括で変換した事例を紹介します。
// 変換前
import { Button } from "@/components/ui/button"
import { useAuth } from "@/hooks/useAuth"

...]]></description><link>https://zenn.dev/typebase_dev/articles/ai-typescript-path-alias-converter</link><guid isPermaLink="true">https://zenn.dev/typebase_dev/articles/ai-typescript-path-alias-converter</guid><pubDate>Sun, 01 Jun 2025 22:49:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PfSXSOBg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6TypeScript%25E3%2581%25AEpath%2520alias%25E3%2582%2592%25E7%259B%25B8%25E5%25AF%25BE%25E3%2583%2591%25E3%2582%25B9%25E3%2581%25B8%25E4%25B8%2580%25E6%258B%25AC%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuki%2520Terashima%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwOWU5MTQ2MTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Typebase%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTY4MjVhZmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuki Terashima</dc:creator></item><item><title><![CDATA[Biome2.0 β版でGritQLを使った独自Lintルールを作成する]]></title><description><![CDATA[
 はじめに
最近、Biome2.0についてアナウンスがありました！
https://biomejs.dev/blog/biome-v2-0-beta/
この中の機能として特に注目すべきものが、以下です。

Plugins: You can write custom lint rules using GritQL.

GritQLを使用して、独自のルールを作成することが可能になり、ESLintのようなプラグイン作成が今後増えていきそうです！
https://biomejs.dev/ja/linter/plugins/

 GritQLとは？
GritQLは、コードの探索やリンティング、修...]]></description><link>https://zenn.dev/watahaya/articles/1f5f56780aee7b</link><guid isPermaLink="true">https://zenn.dev/watahaya/articles/1f5f56780aee7b</guid><pubDate>Sun, 01 Jun 2025 14:44:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ugOBmxdI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome2.0%2520%25CE%25B2%25E7%2589%2588%25E3%2581%25A7GritQL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%258B%25AC%25E8%2587%25AALint%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Isco%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2MDllZGQ4M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Isco</dc:creator></item><item><title><![CDATA[minify の効果を最大限に引き出す TypeScript コードを書く]]></title><description><![CDATA[
 はじめに
2024年の11月に、札幌で開催された「クラメソさっぽろIT勉強会(仮) #6」という勉強会がありまして、そのライトニングトーク枠に登壇してきました。
タイトルは「minifyの効果を最大限に引き出すTypeScriptコードを書く」です。

昨今のフロントエンド開発では、TypeScriptを使ってコーディングし、それをトランスパイルしてできたJavaScriptファイルのサイズを minify によって削減するのが一般的でしょう。そうしたときに、ふと 「TypeScript の書き方を工夫したら、もっと minify が効率的に効くようになるかも?」 と思いたち、型安全...]]></description><link>https://zenn.dev/j_sakamoto/articles/1b5e1d563b1c30</link><guid isPermaLink="true">https://zenn.dev/j_sakamoto/articles/1b5e1d563b1c30</guid><pubDate>Sun, 01 Jun 2025 14:10:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RCNyUuLn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:minify%2520%25E3%2581%25AE%25E5%258A%25B9%25E6%259E%259C%25E3%2582%2592%25E6%259C%2580%25E5%25A4%25A7%25E9%2599%2590%25E3%2581%25AB%25E5%25BC%2595%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%2520TypeScript%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540jsakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVX243dnJ5ZFlLb2NxdUhSUkIxSGZ4NGpVekNsdGNmZ290R2hfNWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@jsakamoto</dc:creator></item><item><title><![CDATA[【Reactbits】ShinyTextコンポーネントの実装ガイド]]></title><description><![CDATA[
 ShinyTextコンポーネントの実装ガイド

 概要
ShinyTextは、テキストに光沢のあるアニメーション効果を追加するReactコンポーネントです。グラデーションが左から右に流れるように動き、テキストに輝きを与えます。

 完成イメージ


 プロジェクト構成
シンプルなNext.jsプロジェクトでの実装例を紹介します。
my-app/
├── src/
│   ├── components/
│   │   └── ShinyText/
│   │       ├── ShinyText.tsx
│   │       └── index.ts
│   ├── pages/...]]></description><link>https://zenn.dev/ho_ri/articles/e5a8d595f318cb</link><guid isPermaLink="true">https://zenn.dev/ho_ri/articles/e5a8d595f318cb</guid><pubDate>Sun, 01 Jun 2025 13:24:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IFReT_IY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Reactbits%25E3%2580%2591ShinyText%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hol1kgmg%2520%2528%25E3%2581%25BB%25E3%2582%258A%25E3%2581%258B%25E3%2582%258F%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NmM0YjRmYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hol1kgmg (ほりかわ)</dc:creator></item><item><title><![CDATA[WindowsでNode.jsのimportにC:から始まるパスは使えない話]]></title><description><![CDATA[
 開発環境

OS: Windows11
tsx@4.19.4
TypeScript@5.8.3
discord.js@14.19.3
Node.js@22.16.0


 経緯
discord.jsのガイド「Command handling」を見ながらコードを書いていて、個人的にCommonJSよりもES Modulesのほうが好きなので、ガイドの内容をES Modules形式に置き換えながら進めていたところ
import fs from "node:fs/promises";
import path from "node:path";
import url from "node:u...]]></description><link>https://zenn.dev/mizuyaya/articles/90dca740223318</link><guid isPermaLink="true">https://zenn.dev/mizuyaya/articles/90dca740223318</guid><pubDate>Sun, 01 Jun 2025 12:15:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZZdscb1z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7Node.js%25E3%2581%25AEimport%25E3%2581%25ABC%253A%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258B%25E3%2583%2591%25E3%2582%25B9%25E3%2581%25AF%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MizuYaYa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSU4tUDU2N0F0cTB4WWZCc0lSWmRpbzZnZWQ4U3MtbDRCMnNtTzBQaU1ralpvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MizuYaYa</dc:creator></item><item><title><![CDATA[.d.tsファイルをちゃんと使うために必要な知識]]></title><description><![CDATA[.d.tsファイルとは、TypeScriptにおいて型定義ファイルと呼ばれるファイルのことです。残念なことに、.d.tsファイルは誤った使い方をされているのを見かけることがあります。そこで、この記事では、.d.tsファイルを正しく使うために必要な知識を解説します。

 .d.tsファイルとは
.d.tsファイルについては、とりあえずTypeScript公式による以下の説明を読んでください（Announcing TypeScript 5.5から引用）。

Declaration files (a.k.a. .d.ts files) describe the shape of existin...]]></description><link>https://zenn.dev/uhyo/articles/use-d-ts-correctly</link><guid isPermaLink="true">https://zenn.dev/uhyo/articles/use-d-ts-correctly</guid><pubDate>Sun, 01 Jun 2025 11:48:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dlB0Y3j---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:.d.ts%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uhyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjYjFlMDJlNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uhyo</dc:creator></item><item><title><![CDATA[TS で Effect System を作ってみた]]></title><description><![CDATA[実装はここ https://jsr.io/@mizchi/domain-types@0.0.8

 あらすじ
https://zenn.dev/mizchi/articles/main-is-composite-function
https://zenn.dev/mizchi/articles/domain-modeling-by-generator

 使い方
npm と jsr に公開しておいた。 Node/Deno どっちでも使える。
基本的な発想として、ある program の実行とは AsyncGenerator&lt;Effect&gt; あるいは Generator&lt;...]]></description><link>https://zenn.dev/mizchi/articles/ts-effect-system-more</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ts-effect-system-more</guid><pubDate>Sat, 31 May 2025 23:56:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ron6wffp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%2520%25E3%2581%25A7%2520Effect%2520System%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[学習記録アプリ: useMemo と useCallback によるパフォーマンス最適化入門]]></title><description><![CDATA[## 概要
このハンズオン形式の資料では、1 週間の学習時間を管理・可視化するアプリを構築します。
作業時間をグラフで可視化し、カテゴリー別や全体での合計作業時間を算出します。
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/weekly-study-log</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/weekly-study-log</guid><pubDate>Sat, 31 May 2025 18:42:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Za7QNfdA--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kY2FhNWEwYTQwLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[割り勘計算機: Zustand によるグローバルな状態管理入門]]></title><description><![CDATA[## 概要
このハンズオン形式の資料では、割り勘計算機を構築します。
メンバーを登録し、支払い記録を入力することで、最適な精算方法を画面に表示します。
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/warikan-calculator</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/warikan-calculator</guid><pubDate>Sat, 31 May 2025 18:42:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sk5_9aaX--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zOWY4YmJlMGFjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[リアルタイムチャットアプリ: Socket.IO を使用したリアルタイム通信入門]]></title><description><![CDATA[## 概要
このハンズオン形式の資料では、Gather や Ovice などのバーチャルオフィスアプリのような、リアルタイムチャットアプリを構築します。
現在参加しているメンバーのみが、リアルタイムにチャットを送信・閲覧できるように実装します！
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/sakana-office</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/sakana-office</guid><pubDate>Sat, 31 May 2025 18:42:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OZQpjmpc--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81YjdiNWU5NDMzLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[レビュー掲載アプリ: Gemini AI 連携で shadcn/ui 入門]]></title><description><![CDATA[## 概要
このハンズオン形式の資料では、レビュー掲載アプリを構築します。
アプリでは、レビューのリストをカードで表示することができます。
また、アプリ内にAIを組み込み、全てのレビューを踏まえた要約を表示する実装も紹介します。
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/review-analysis-app</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/review-analysis-app</guid><pubDate>Sat, 31 May 2025 18:42:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8LoCLWLb--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wYWIxNjA4NjAzLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[プロフィールサイト: Framer Motion による React アニメーション入門]]></title><description><![CDATA[## 概要
このプロジェクトでは、アニメーションを活用した、インタラクティブなプロフィールサイトを構築します。天気 API と連携し、自分が拠点とする地域の天気に応じて、画面の表示を動的に変化させます。
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/profile-site-motion</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/profile-site-motion</guid><pubDate>Sat, 31 May 2025 18:42:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HwqEfMZj--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hODM5N2YwNjI1LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[次世代のUIフレームワークQwikで自作のUUID短縮ライブラリを試せるサイトを作ってみた]]></title><description><![CDATA[
 はじめに
株式会社YOSHINANIに外部技術顧問として参加している、株式会社INFLUのNakano as a Serviceです。
先日、私はUUIDをBase58でエンコードすることで短縮するライブラリ 「uuid58」 を開発・公開しました。
https://zenn.dev/yoshinani_dev/articles/001be9fd0377b3
https://github.com/nakanoasaservice/uuid58
これがありがたいことに結構バズったので、このライブラリを手軽に試せるプレイグラウンドサイトを開発することにしました。
こちらが今回作成したプレ...]]></description><link>https://zenn.dev/yoshinani_dev/articles/bcb0ad18e75bac</link><guid isPermaLink="true">https://zenn.dev/yoshinani_dev/articles/bcb0ad18e75bac</guid><pubDate>Sat, 31 May 2025 15:42:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sKTQJ4ph--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AEUI%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFQwik%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%25AEUUID%25E7%259F%25AD%25E7%25B8%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Nakano%2520as%2520a%2520Service%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhMjMyNjAxN2QuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:YOSHINANI%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lrTHp0c1hkMHVUN3dhQ1FwWTBtQ3JfbzVKbnFJUkE1U1BFV1gxPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakano as a Service</dc:creator></item><item><title><![CDATA[【TypeScript】satisfies演算子]]></title><description><![CDATA[そんなのあったんだーと最近知ったsatisfies演算子について。

 satisfiesって何？
satisfies は「ある値が特定の型を満たしているかチェックする」ための演算子です。
TypeScript4.9で導入されました。（3年前か...）
https://devblogs.microsoft.com/typescript/announcing-typescript-4-9-beta/#the-satisfies-operator
const array1: (string | number)[] = [1, 2, 3];
const array2 = [1, 2, 3] s...]]></description><link>https://zenn.dev/ncdc/articles/8c4b1ef585baf6</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/8c4b1ef585baf6</guid><pubDate>Sat, 31 May 2025 14:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1OQjngys--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591satisfies%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fumi</dc:creator></item><item><title><![CDATA[TypeScriptで引数によって戻り値の型を変えてみた【条件付き型 × ジェネリクス】]]></title><description><![CDATA[本記事では、条件付き型（Conditional Types） と ジェネリクス を使って引数の値に応じて返す型を変える方法を紹介します。

 やりたいこと
例えば "dog" という引数が渡されたら Dog 型を返し、"cat" の場合は Cat 型を返すような関数を作りたい。

 条件付き型で定義する
まずは型を定義します。
type Dog = { kind: "dog"; bark(): void };
type Cat = { kind: "cat"; meow(): void };

export type AnimalType&lt;T&gt; = T extends "do...]]></description><link>https://zenn.dev/ncdc/articles/683df5910575c9</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/683df5910575c9</guid><pubDate>Sat, 31 May 2025 14:54:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tikIS_gC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%2588%25E3%2581%25A3%25E3%2581%25A6%25E6%2588%25BB%25E3%2582%258A%25E5%2580%25A4%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2590%25E6%259D%25A1%25E4%25BB%25B6%25E4%25BB%2598%25E3%2581%258D%25E5%259E%258B%2520%25C3%2597%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fumi</dc:creator></item><item><title><![CDATA[Next.js v15.3にGoogle Analyticsを導入するガイド]]></title><description><![CDATA[
 はじめに
先日、React で、実践的なスキルチェックができる、
学習のお題まとめサイトを、公開しました 🐾
https://react-road.b13o.com/
デザイン・仕様に基づいて、
実際に、React アプリを構築するサービスです！
さて、
継続的な、プロダクトの改善には、ユーザーの反応・行動を理解することが欠かせません。
なので、今回は、Next.js v15.3 で Google Analytics を導入したので、基礎的な内容をまとめました！
時間の節約になれば、嬉しいです 🙌

 Google Analytics とは？
https://developers.g...]]></description><link>https://zenn.dev/b13o/articles/tutorial-ga-nextjs</link><guid isPermaLink="true">https://zenn.dev/b13o/articles/tutorial-ga-nextjs</guid><pubDate>Sat, 31 May 2025 12:25:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OmocGynN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520v15.3%25E3%2581%25ABGoogle%2520Analytics%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazzyfrog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYWE3NjM3NGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:b13o%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMzRmZDk1NTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[NestJSに入門してみた]]></title><description><![CDATA[
 はじめに

 NestJSとは

Node.js上で動作するバックエンドフレームワーク
TypeScriptで作られている
Express(Node.jsのフレームワーク)をコアに作られている


 NestJSを使用するメリット

TypeScriptを使用している為、型の恩恵を受けられる
Expressの機能やライブラリを使用する事ができる
Nest CLIでコマンドを入力して操作が可能


 NestJSを使用するデメリット

他のバックエンドフレームワークに比べるとユーザーが少ない為、情報量が少ない
公式ドキュメントが日本語に非対応


 Nest CLIについて
NestJ...]]></description><link>https://zenn.dev/tspk/articles/995d7cd127c62d</link><guid isPermaLink="true">https://zenn.dev/tspk/articles/995d7cd127c62d</guid><pubDate>Sat, 31 May 2025 09:56:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kj1jyzNN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B7%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRaUk5ISjNvUTRveHRBeGZBcVh5Y2RlVV9HbUxldnlQVUFiNUhMcU4ybUVZVVpsM2E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぷっけ</dc:creator></item></channel></rss>