<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 10 Oct 2024 09:08:05 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[環境構築の方法（docker）]]></title><description><![CDATA[
 docker基礎

 そもそもdokcerとは
イメージ：自分のパソコンとは別に新しくパソコンを作ることができるもの

 なぜ使うのか
ファイル自体がパソコンの役割をするので同じ記述のファイルを使用することで同じ環境でアプリケーションを開発できる

 使うファイル


Dockerfile：青のクジラ
イメージ：パソコン本体


docker-compose.yml：赤のクジラ
イメージ：パソコンの管理者



 環境構築編
【Dockerfile】


FROM
イメージ：使いたい言語を選ぶ感じ
#FROM 言語など:バージョン
FROM python:3.11 
FROM php...]]></description><link>https://zenn.dev/kate0418/articles/a39dd0d0531475</link><guid isPermaLink="true">https://zenn.dev/kate0418/articles/a39dd0d0531475</guid><pubDate>Thu, 10 Oct 2024 06:46:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Asqe2Mzq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588docker%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%2583%25E3%2581%25A8%25EF%25BE%2583%25EF%25BE%259E%25EF%25BD%25BD%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OWNhMjkxZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けぃとﾃﾞｽ。</dc:creator></item><item><title><![CDATA[ChatGPTと同様のUIを提供するOSSであるLibreChatを動かしてみた]]></title><description><![CDATA[
 3行サマリー

自社でゼロからLLMサービスのUIを運用するのは大変なのでLibreChatを調査してみます。
LibreChatをエンタープライズ利用に使えそうかを検証してみました。
LibreChat + Ollama (Gemma2)を使ってプライベートなLLMサービスを作ってみました。


 LibreChatの特徴
一言でいうと、ChatGPTのOSSバージョンです。
カスタマイズ性が高く、ユーザーは自分のニーズに合わせて機能やプラグインを追加できます。


 ライセンス
MIT Licenseなので商用利用可能です。
!
MIT Licenseの特徴

自由な使用: MI...]]></description><link>https://zenn.dev/minedia/articles/librechat-ollama</link><guid isPermaLink="true">https://zenn.dev/minedia/articles/librechat-ollama</guid><pubDate>Thu, 10 Oct 2024 00:52:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G-dr1yyp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A8%25E5%2590%258C%25E6%25A7%2598%25E3%2581%25AEUI%25E3%2582%2592%25E6%258F%2590%25E4%25BE%259B%25E3%2581%2599%25E3%2582%258BOSS%25E3%2581%25A7%25E3%2581%2582%25E3%2582%258BLibreChat%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Matsukura%2520Yuki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5ODUyZjZkYzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2diQWZWd2dLbmhzWjJZdGgyY2k1c2hveDdQWHl5UUVaN0MyV2JkQ0E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Matsukura Yuki</dc:creator></item><item><title><![CDATA[最新手法で学ぶDockerfile：マルチステージビルドとGoを活用した最適化]]></title><description><![CDATA[
 はじめに
本記事では、シンプルなGoプログラムをDockerを使って効率的にビルドおよび実行する方法を解説します。Dockerfileを利用し、以下の最新の手法を適用することで、コンテナイメージの最適化と実行環境の軽量化を実現します。

キャッシュを利用してビルド速度を向上させる
マルチステージビルドで依存関係とビルドを分離
レイヤーの最小化によるイメージサイズの削減
軽量なDebianベースのイメージの利用


 プログラムの概説
今回扱うGoプログラムは、非常にシンプルな「Hello World」を表示するものです。main.goは以下のような内容となっています。
package...]]></description><link>https://zenn.dev/exmedia/articles/go-dockerfile-latest-best-practices-2024</link><guid isPermaLink="true">https://zenn.dev/exmedia/articles/go-dockerfile-latest-best-practices-2024</guid><pubDate>Tue, 08 Oct 2024 14:08:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oYdbMNWF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E6%2596%25B0%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6Dockerfile%25EF%25BC%259A%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A8Go%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:exMedia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNzZmZjNmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>exMedia</dc:creator></item><item><title><![CDATA[Mattermostをローカルでビルドする]]></title><description><![CDATA[
 Mattermostとは
Slackのオープンソースバージョンのようなもので、UIや機能も非常にSlackに近いです。

https://mattermost.com/

 ビルドの手順
ここからは、実際にMattermostのGitHubのソースコードを使ってローカルでビルドする手順を書いて行きます。
https://github.com/mattermost

 1. リポジトリをforkしてcloneする
以下のmattermostのリポジトリに移動して、forkボタンを押します。

!
forkとはそのリポジトリを自分のワークスペースにコピーすることです。

すると自分のワー...]]></description><link>https://zenn.dev/masan_eeic/articles/5f7441be8a3567</link><guid isPermaLink="true">https://zenn.dev/masan_eeic/articles/5f7441be8a3567</guid><pubDate>Tue, 08 Oct 2024 12:37:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a2FefJW3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mattermost%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2583%25BC%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyZDM0ODFhZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まーさん</dc:creator></item><item><title><![CDATA[Python 3.13リリースに伴うpip installのエラーとその解決策]]></title><description><![CDATA[
 問題の概要(error: subprocess-exited-with-error)
docker compose buildコマンドを実行した際に、以下のような pip install エラーが発生するようになりました：
Collecting tokenizers&gt;=0.13.0 (from anthropic-&gt;-r requirements.txt (line 3))
  Downloading tokenizers-0.20.0.tar.gz (337 kB)
  Installing build dependencies: started
  Installin...]]></description><link>https://zenn.dev/shirochan/articles/40d230a3256692</link><guid isPermaLink="true">https://zenn.dev/shirochan/articles/40d230a3256692</guid><pubDate>Tue, 08 Oct 2024 12:34:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LKrEpvAF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.13%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E4%25BC%25B4%25E3%2581%2586pip%2520install%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shirochan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmdPdXkwaXpkYmFSWl90VWZQc2tlWWRFNWNiQjFZVzVSRDlyMk94QXNLcjAxd3IzSjI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shirochan</dc:creator></item><item><title><![CDATA[ハッカソン中にlaravelをazureで１２時間以上かけてでぷろいした話]]></title><description><![CDATA[
 はじめに
学部３年のよわよわ学生が、AzureでLaravelをデプロイする方法をまとめました。
学生のハッカソン中にやったことをまとめています。
１２時間以上やったので，どれが正解かわからないところの方が多いです．．．
蛇足が多いですが、ご容赦ください。m(__)m
構成図はこんな感じです。

※以下の命名規則はかなり適当になっております。ちゃんと調べて命名しましょう。
名前付け規則を定義する
Azure リソースの省略形の例

 前提
Azureサブスクリプションを用意する。
※今回は学生用のプランを使用
https://azure.microsoft.com/ja-jp/fre...]]></description><link>https://zenn.dev/yanai/articles/deploy-azure-laravel</link><guid isPermaLink="true">https://zenn.dev/yanai/articles/deploy-azure-laravel</guid><pubDate>Tue, 08 Oct 2024 07:06:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h0JS-tyG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AB%25E3%2582%25BD%25E3%2583%25B3%25E4%25B8%25AD%25E3%2581%25ABlaravel%25E3%2582%2592azure%25E3%2581%25A7%25EF%25BC%2591%25EF%25BC%2592%25E6%2599%2582%25E9%2596%2593%25E4%25BB%25A5%25E4%25B8%258A%25E3%2581%258B%25E3%2581%2591%25E3%2581%25A6%25E3%2581%25A7%25E3%2581%25B7%25E3%2582%258D%25E3%2581%2584%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yanai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjNWU0YWI2NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yanai</dc:creator></item><item><title><![CDATA[マッチングアプリ個人開発したら逮捕されかけた話]]></title><description><![CDATA[
 はじめに
自社開発企業のAI部門でインターンしている25卒のエンジニアです。
フロント、バックエンド、インフラ、AIなど色んな分野に興味を持って開発しています！
最近は個人開発で収益を上げて生活する、「Indie Hacker」のような生き方に憧れています。
将来は個人アプリを当てて、島で悠々自適に暮らしたいと思っています🏝️🏝️🏝️

 マッチングアプリを作ろうと思った経緯

何を隠そう、自分の出会いを増やしたかったから
周りの大学の友達で「彼氏欲しい〜、彼女欲しい〜」と言ってる人がいる
自分の大学限定でマッチングアプリ作ったら、安心感もあるしハッピーではないかと考えた
アプリの名...]]></description><link>https://zenn.dev/shoheiweb/articles/448e7b7c73356f</link><guid isPermaLink="true">https://zenn.dev/shoheiweb/articles/448e7b7c73356f</guid><pubDate>Mon, 07 Oct 2024 04:14:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XmVg6Hnh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E9%2580%25AE%25E6%258D%2595%25E3%2581%2595%25E3%2582%258C%25E3%2581%258B%25E3%2581%2591%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2583%25BC%25E3%2581%25B8%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZTUwMzRhYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょーへー</dc:creator></item><item><title><![CDATA[VS Code 開発コンテナー（Dev Container）で Nest.js アプリのデバッグ]]></title><description><![CDATA[
 はじめに
VS Code で Docker コンテナーを開発コンテナーとして使うためには、開発コンテナー機能に対応する Docker コンテナーへ「Visual Studio Code をアタッチする」のが手軽です。開発コンテナーがどういうものか理解して慣れるためには、この方法が便利なのですが、本格的に開発コンテナーを使いたいとなってきたら devcontainer.json ファイルを用意して、開発コンテナー専用の Docker イメージを使うのが良いです。
ここでは、VS Code 開発コンテナー（Dev Container）のための devcontainer.json を用意す...]]></description><link>https://zenn.dev/hiro345/articles/20241003_dvc_nestjs</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241003_dvc_nestjs</guid><pubDate>Mon, 07 Oct 2024 00:10:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8rBNe0dV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2583%25BC%25EF%25BC%2588Dev%2520Container%25EF%25BC%2589%25E3%2581%25A7%2520Nest.js%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[[Baker link. Dev] RustとRP2040マイコンでLチカしてみた-環境構築編-]]></title><description><![CDATA[
 はじめに
本記事はBaker link. Tutrial を参考にしています。詳細については、そちらをご確認ください。

 開発環境
Baker link. Dev
Docker ( Rancher Desktop by SUSE)
Visual Studio Code
probe-rs

 環境構築の流れ

 Rancher DesktopとVisual Stdio Codeのインストール
Rancher Desktop、Visual Studio Codeは、公式リンクのインストーラーでインストールできます。
Rancher Desktop 公式リンク
Visual Studio...]]></description><link>https://zenn.dev/baker_link_lab/articles/c7e7b271f021a4</link><guid isPermaLink="true">https://zenn.dev/baker_link_lab/articles/c7e7b271f021a4</guid><pubDate>Sun, 06 Oct 2024 09:36:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wEFzxRhc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BBaker%2520link.%2520Dev%255D%2520Rust%25E3%2581%25A8RP2040%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2581%25A7L%25E3%2583%2581%25E3%2582%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F-%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Baker%2520link.%2520Lab%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNzkyZGRhODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Baker link. Lab</dc:creator></item><item><title><![CDATA[Dockerのプロキシ設定(daemon(client), コンテナ両方分けて書いてあるよ)]]></title><description><![CDATA[Dockerをプロキシ配下で利用すること人は多々多々多々いると思います。
で、"docker proxy" とかでググると、以下ページが最初に引っかかって、pullできないじゃん。。。
ってなるので、、、
プロキシサーバを使うように Docker を設定
特にプロキシの設定って最初にやって、間あくから忘れちゃうんだよね。。

 コンテナ側のプロキシ設定
↑のページの設定。
これは、コンテナが起動したときに環境変数にプロキシの設定を自動的に埋め込んでくれる設定
~/.docker/config.jsonに以下のように記載。
{
 "proxies":
 {
   "default":
  ...]]></description><link>https://zenn.dev/summer_fb/articles/525a63883e3890</link><guid isPermaLink="true">https://zenn.dev/summer_fb/articles/525a63883e3890</guid><pubDate>Sun, 06 Oct 2024 08:27:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x-0Jo-jb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25A8%25AD%25E5%25AE%259A%2528daemon%2528client%2529%252C%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E4%25B8%25A1%25E6%2596%25B9%25E5%2588%2586%25E3%2581%2591%25E3%2581%25A6%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2582%25E3%2582%258B%25E3%2582%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:summer%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MC00QWxicjV1OXRYWFZ4V2dpNkIwOWE4Yl9FX0xjOTB5cmRXMEVRYjA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>summer</dc:creator></item><item><title><![CDATA[nomadでdockerの -p 8080:80 を実現する設定]]></title><description><![CDATA[
 はじめに
いつもDockerで設定していたポートフォワード設定をNomadで同様に設定するにはどうしたらいいんだ？と思って調べたのでメモ。

 Dockerではこうしてた
まずはDockerの-pのおさらい。

-p IP:ホスト側ポート:コンテナ側ポート
https://docs.docker.jp/v1.11/engine/userguide/networking/default_network/binding.html

たとえば、nginxのDockerイメージは80番で待ち受けているので、外部から8080番でアクセスさせたい場合は以下の通り。
$ docker run --...]]></description><link>https://zenn.dev/thr/articles/a0f0fa8480f185</link><guid isPermaLink="true">https://zenn.dev/thr/articles/a0f0fa8480f185</guid><pubDate>Sun, 06 Oct 2024 04:08:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uh3vWSDR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nomad%25E3%2581%25A7docker%25E3%2581%25AE%2520-p%25208080%253A80%2520%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>thr</dc:creator></item><item><title><![CDATA[Docker環境でJavaをデコンパイルする。]]></title><description><![CDATA[Windows11のDocker環境上でJava Decompiler（https://github.com/eikendev/java-decompiler）を使ってjarをデコンパイルします。
※以下のJavaのデコンパイルツールが使われています。

CFR
Fernflower
Krakatau
Procyon


 環境
Windows 11 Pro 23H2
WLS 2.1.5.0（Ubuntu 22.04.1 LTS）
Docker Desktop 4.29.0
Visual Studio Code

 １．docker runコマンドで実行する場合

 ①フォルダ構成
以下...]]></description><link>https://zenn.dev/zenn369/articles/4295640a43081f</link><guid isPermaLink="true">https://zenn.dev/zenn369/articles/4295640a43081f</guid><pubDate>Sat, 05 Oct 2024 05:25:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0M6z6kGL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Java%25E3%2582%2592%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zenn369%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHFuU0doMi1rRTZzTk1KVnk5VzZBal9sZWZJZE1OV01DX183YTlVUW4zPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zenn369</dc:creator></item><item><title><![CDATA[コピペでrails開発環境の構築をする]]></title><description><![CDATA[
 構築手順
1.プロジェクトディレクトリを作成する
mkdir minimum-rails-kit
cd minimum-rails-kit
2.GemfileとGemfile.lockを作成する
touch Gemfile Gemfile.lock
vi Gemfile

Gemfile
source 'https://rubygems.org'
gem 'rails', '~&gt;7.0.0'

3.Dockerfileを作成する

Dockerfile
FROM ruby:3.1

# 必要なパッケージをインストール
RUN apt-get update -qq &amp;&a...]]></description><link>https://zenn.dev/msyxxxt/articles/7sby7ba44myq</link><guid isPermaLink="true">https://zenn.dev/msyxxxt/articles/7sby7ba44myq</guid><pubDate>Fri, 04 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5w-thEct--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2581%25A7rails%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHdnZ0Q4WmpxVDVJTDFaSS1VSnBmbWlRX0pYd1QzNEQ4aFFFbUVFZVJaOVU4WUxnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まさや</dc:creator></item><item><title><![CDATA[Docker(moby/moby)リポジトリにおけるGo言語の変数名頻度分析]]></title><description><![CDATA[
 はじめに
Dockerはコンテナ技術のデファクトスタンダードとなっており、そのコアとなるmoby/mobyリポジトリは多くの開発者にとって学習の宝庫です。今回は、このリポジトリ内で使用されているGo言語のグローバル変数名とローカル変数名を分析し、頻出する変数名をリストアップしました。その結果から、コードのスタイルや開発者の習慣について考察してみたいと思います。

 変数名の出現頻度ランキング
以下がmoby/mobyリポジトリ内で最も多く使用されている変数名とその出現回数です。
err: 50789
_: 19968
ok: 7589
i: 6629
n: 5788
b: 5598
...]]></description><link>https://zenn.dev/exmedia/articles/moby_repo_go_var_freq_analysis</link><guid isPermaLink="true">https://zenn.dev/exmedia/articles/moby_repo_go_var_freq_analysis</guid><pubDate>Fri, 04 Oct 2024 14:39:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5yF-7DkG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2528moby%252Fmoby%2529%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BGo%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E5%25A4%2589%25E6%2595%25B0%25E5%2590%258D%25E9%25A0%25BB%25E5%25BA%25A6%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:exMedia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNzZmZjNmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>exMedia</dc:creator></item><item><title><![CDATA[GPU不要！DockerでGemma 2 JPNを動かす]]></title><description><![CDATA[
 はじめに
昨日、Googleから新しい日本語対応のテキスト生成モデル「Gemma 2 JPN」がリリースされました。このモデルは、Gemma 2 2Bを日本語テキストに合わせてファインチューニングしたもので、特に日本語での自然なテキスト生成が強化されています。小さなモデルなので、GPUがない環境でもGemma 2 JPNを簡単に試せるのではないかと思い、Dockerを使ってチャットボットを構築してみました。
本記事では、このチャットボットのセットアップ手順と、実際に試した様子を紹介します。
こちらからクローンして動かせます。
https://github.com/takoyaki-3...]]></description><link>https://zenn.dev/takoyaki3/articles/cec7c816a7722f</link><guid isPermaLink="true">https://zenn.dev/takoyaki3/articles/cec7c816a7722f</guid><pubDate>Fri, 04 Oct 2024 10:42:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B7lFRH1e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPU%25E4%25B8%258D%25E8%25A6%2581%25EF%25BC%2581Docker%25E3%2581%25A7Gemma%25202%2520JPN%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2593%25E3%2582%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0NWIzZjgwZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たこやき</dc:creator></item><item><title><![CDATA[ローカルのwebサーバーに自分が指定したドメインでアクセスする。]]></title><description><![CDATA[
 概要
ローカルサーバーのURLをlocalhost→mylocalhost.comにしてみたくなったのでやってみた。

 手順

クライアントPCのhostsファイルを編集
ローカルサーバーを立てる
ブラウザでmylocalhost.comを叩いてみる


 クライアントPCのhostsファイルを編集
C:\Windows\System32\drivers\etc\hostsを編集します。
localhostのIPアドレス127.0.0.1とドメインmylocalhost.comを紐づけます。
# Copyright (c) 1993-2009 Microsoft Corp.
#
#...]]></description><link>https://zenn.dev/minato_dev/articles/329016b2129bad</link><guid isPermaLink="true">https://zenn.dev/minato_dev/articles/329016b2129bad</guid><pubDate>Fri, 04 Oct 2024 05:02:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jCodwzl8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEweb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E8%2587%25AA%25E5%2588%2586%25E3%2581%258C%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kanure%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmYjQ5ZWJjZWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kanure</dc:creator></item><item><title><![CDATA[Ubuntu上でJohn the Ripperを使ってPDFのパスワードを解析する]]></title><description><![CDATA[
 背景とツールの概要
知人から連絡をもらった。
自身が過去にかけたパスワードがわからず、PDFファイルの中身を見れなくなってしまっている。もしなにか技術的な対処方法で開けられるなら開けてもらえないか、と。
そこで少し対応方法を検討し、今回はセキュリティ界隈でもCTF(Capture The Flag)などで度々使われるツールである、John the Ripper（以下JtR）を使って解析することにした。
https://www.openwall.com/john/
JtRは、有名なBrute-force（総当たり）だけでなく、比較的一般的なパスワードを使っている場合に効率的に解析できる...]]></description><link>https://zenn.dev/tkhm/articles/20241003-john-the-ripper-c4fae155</link><guid isPermaLink="true">https://zenn.dev/tkhm/articles/20241003-john-the-ripper-c4fae155</guid><pubDate>Thu, 03 Oct 2024 14:24:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M9ksB__8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%25E4%25B8%258A%25E3%2581%25A7John%2520the%2520Ripper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6PDF%25E3%2581%25AE%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViMDc0YmU5YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はむ</dc:creator></item><item><title><![CDATA[MacのDocker環境でMovable Typeインストール]]></title><description><![CDATA[
 環境

MacBook Air（Apple M3）
Makeコマンド（3.81）→Macはデフォで入っている
Perl（5.30.3）→Macはデフォで入っている
Docker Desktop for Mac　（インストール手順は割愛）


 手順

MT開発版をダウンロード
https://www.sixapart.jp/inquiry/movabletype/personal_download.html
ここではMT-8.0.4.zip

mt-devを公式githubからダウンロード
https://github.com/movabletype/mt-dev


/archiv...]]></description><link>https://zenn.dev/t_oishi/articles/2a176ccd934ba1</link><guid isPermaLink="true">https://zenn.dev/t_oishi/articles/2a176ccd934ba1</guid><pubDate>Thu, 03 Oct 2024 09:42:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K7ZbGuPB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Movable%2520Type%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MjUyOTY4MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taka</dc:creator></item><item><title><![CDATA[GitHub Actionsで Docker イメージのキャッシュと docker run する方法]]></title><description><![CDATA[GitHub Actions 上の CI をしていてプロダクションで Docker イメージを実行する場合に、CI のテストを実行する環境をできるだけプロダクションに寄せたいという気持ちになることがあります。
Actions の YAML を工夫してセットアップするのもいいのですが、「そもそも Dockerfile があるならこれでテストを実行してしまえばいいよね」という発想を多くの方はするのではないかなと思います。
ここでは、この発想をあまりストレージのコストを掛けたくないというのをモチベーションに GitHub Actions のキャッシュを利用する方法で Docker イメージをキ...]]></description><link>https://zenn.dev/k2wanko/articles/60c195cc4bff0a</link><guid isPermaLink="true">https://zenn.dev/k2wanko/articles/60c195cc4bff0a</guid><pubDate>Wed, 02 Oct 2024 21:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FjGoeEBW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7%2520Docker%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25A8%2520docker%2520run%2520%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2582%25AD%25E3%2583%2581%25E3%2583%25BC%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h3dEJpcG9IY3hCYndzajJ5bFFjdkZfd2NHa2otald4bGFSQ2FxOU5VPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>コキチーズ</dc:creator></item><item><title><![CDATA[Docker コンテナ上で ~/.bashrc が実行されない場合でも node にPATHを通す方法]]></title><description><![CDATA[
 やりたいこと
nodenvはインストールの過程で ~/.bashrc にPATHやevalを追記するが、
bash -c '...' で実行されるコマンドは ~/.bashrc を通らないため、nodeが使えないことがある。
そこで、~/.bashrc を実行せずともnodeにPATHを通して実行できるようにした。
例えば、Railsサーバーの起動の際には下記のようなコマンドをdocker-compose.ymlに書くことが多い。
このようなケースでもnodeにPATHを通すのが今回の目的。
/bin/bash -c "rm -f tmp/pids/server.pid &amp;&...]]></description><link>https://zenn.dev/the96pm/articles/109c740ae97389</link><guid isPermaLink="true">https://zenn.dev/the96pm/articles/109c740ae97389</guid><pubDate>Wed, 02 Oct 2024 14:38:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0OTel7nN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E4%25B8%258A%25E3%2581%25A7%2520%7E%252F.bashrc%2520%25E3%2581%258C%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25A7%25E3%2582%2582%2520node%2520%25E3%2581%25ABPATH%25E3%2582%2592%25E9%2580%259A%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:the96%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliNWNkNDJmNmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>the96</dc:creator></item></channel></rss>