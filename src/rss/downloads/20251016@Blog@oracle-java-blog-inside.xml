<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="https://inside.java/feed.xml" rel="self" type="application/atom+xml" /><link href="https://inside.java/" rel="alternate" type="text/html" /><updated>2025-10-16T08:03:48+00:00</updated><id>https://inside.java/feed.xml</id><title type="html">insidejava</title><subtitle>News and views from members of the Java team at Oracle</subtitle><entry><title type="html">Structured Concurrency in Action</title><link href="https://inside.java/2025/10/16/devoxxbelgium-structured-concurrency-action/" rel="alternate" type="text/html" title="Structured Concurrency in Action" /><published>2025-10-16T00:00:00+00:00</published><updated>2025-10-16T00:00:00+00:00</updated><id>https://inside.java/2025/10/16/DevoxxBelgium-Structured-Concurrency-Action</id><content type="html" xml:base="https://inside.java/2025/10/16/devoxxbelgium-structured-concurrency-action/"><![CDATA[<div class="youtube-embed">
    <iframe src="https://www.youtube.com/embed/IosvCU9qM5M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>
</div>

<p><em>In Java 25, the structured concurrency API sees its fifth preview with considerable changes over previous iterations. With chances being good that it will finalize without a further overhaul, let’s put it into action and explore how to:</em></p>

<ul>
  <li><em>structure concurrent code</em></li>
  <li><em>process and propagate errors and cancellation</em></li>
  <li><em>observe thread relationships</em></li>
  <li><em>refactor from a reactive approach</em></li>
</ul>

<p><em>After this presentation you’ll be ready to put the structured concurrency API into action in your project.</em></p>

<p>Recorded at <a href="https://devoxx.be/">Devoxx Belgium 2025</a>.</p>]]></content><author><name>[&quot;NicolaiParlog&quot;]</name></author><category term="JDK 25" /><category term="Loom" /><summary type="html"><![CDATA[In Java 25, the structured concurrency API sees its fifth preview with considerable changes over previous iterations. With chances being good that it will finalize without a further overhaul, let's put it into action and explore how to: structure concurrent code, process and propagate errors and cancellation, observe thread relationships, and refactor from a reactive approach. After this presentation you'll be ready to put the structured concurrency API into action in your project.]]></summary></entry><entry><title type="html">Java for AI</title><link href="https://inside.java/2025/10/14/devoxxbelgium-java-for-ai/" rel="alternate" type="text/html" title="Java for AI" /><published>2025-10-14T00:00:00+00:00</published><updated>2025-10-14T00:00:00+00:00</updated><id>https://inside.java/2025/10/14/DevoxxBelgium-Java-For-AI</id><content type="html" xml:base="https://inside.java/2025/10/14/devoxxbelgium-java-for-ai/"><![CDATA[<div class="youtube-embed">
    <iframe src="https://www.youtube.com/embed/hBffN0xW784" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>
</div>

<p><em>Many Java features, existing and future, can meet the demands of AI. Existing features include the Foreign Function and Memory API and the Vector API.</em> 
<em>Future features include those proposed by Project Valhalla and Project Babylon.</em></p>

<p><em>This presentation will discuss these features and how they might be used by Java libraries and applications to build competitive AI solutions.</em></p>

<p>Recorded at <a href="https://devoxx.be/">Devoxx Belgium 2025</a>.</p>]]></content><author><name>[&quot;PaulSandoz&quot;]</name></author><category term="AI" /><category term="Babylon" /><category term="Panama" /><category term="Valhalla" /><summary type="html"><![CDATA[Many Java features, existing and future, can meet the demands of AI. Existing features include the Foreign Function and Memory API and the Vector API. Future features include those proposed by Project Valhalla and Project Babylon. This presentation will discuss these features and how they might be used by Java libraries and applications to build competitive AI solutions.]]></summary></entry><entry><title type="html">Pattern Matching, Under the Microscope</title><link href="https://inside.java/2025/10/13/devoxxbelgium-pattern-matching/" rel="alternate" type="text/html" title="Pattern Matching, Under the Microscope" /><published>2025-10-13T00:00:00+00:00</published><updated>2025-10-13T00:00:00+00:00</updated><id>https://inside.java/2025/10/13/DevoxxBelgium-Pattern-Matching</id><content type="html" xml:base="https://inside.java/2025/10/13/devoxxbelgium-pattern-matching/"><![CDATA[<div class="youtube-embed">
    <iframe src="https://www.youtube.com/embed/hcWKRfRR-7Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>
</div>

<p><em>Project Amber has introduced pattern matching into the Java language, improving both safety and expressiveness of our programs.</em>
<em>With JEP 507 set to lift restrictions on primitive types in instanceof and switch, pattern matching is positioned as the foundation of safe cast conversions across all Java types.</em> 
<em>But what does this mean for the language, its safety guarantees, and how we test runtime conditions?</em></p>

<p><em>This session takes an in-depth look at the fundamental concepts of exhaustiveness, unconditionality, applicability, remainder, and examine the distinction between exact and inexact conversions as introduced by JEP 507. With practical code comparisons and visual explanations, we will see how these patterns drive safer code and enable innovative language features on the horizon.</em></p>

<p>Recorded at <a href="https://devoxx.be/">Devoxx Belgium 2025</a>.</p>]]></content><author><name>[&quot;AngelosBimpoudis&quot;]</name></author><category term="Amber" /><category term="Java Language" /><summary type="html"><![CDATA[Project Amber has introduced pattern matching into the Java language, improving both safety and expressiveness of our programs. With JEP 507 set to lift restrictions on primitive types in instanceof and switch, pattern matching is positioned as the foundation of safe cast conversions across all Java types. But what does this mean for the language, its safety guarantees, and how we test runtime conditions? This session takes an in-depth look at the fundamental concepts of exhaustiveness, unconditionality, applicability, remainder, and examine the distinction between exact and inexact conversions as introduced by JEP 507. With practical code comparisons and visual explanations, we will see how these patterns drive safer code and enable innovative language features on the horizon.]]></summary></entry><entry><title type="html">“Just Make All Exceptions Unchecked” - Live Q&amp;amp;A from Devoxx</title><link href="https://inside.java/2025/10/09/devoxxstream/" rel="alternate" type="text/html" title="“Just Make All Exceptions Unchecked” - Live Q&amp;amp;A from Devoxx" /><published>2025-10-09T00:00:00+00:00</published><updated>2025-10-09T00:00:00+00:00</updated><id>https://inside.java/2025/10/09/DevoxxStream</id><content type="html" xml:base="https://inside.java/2025/10/09/devoxxstream/"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/lnfnF7otEnk?si=W4LFfi3oOSkfiU_3" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>

<p><em>Java’s error handling is driven by exceptions, a big part of which is the distinction between checked and unchecked exceptions. This comes with hurdles that lead many Java developers to prefer unchecked exceptions and wondering whether checked exceptions where a mistake. In this conversation, Stuart Marks and Nicolai Parlog discuss exactly that.</em></p>

<p><em>Make sure to check the <a href="https://www.youtube.com/playlist?list=PLX8CzqL3ArzUvHkalk8nmJ-VtXg_ML_qE">Devoxx 2025 playlist</a>.</em></p>]]></content><author><name>[&quot;StuartMarks&quot;, &quot;NicolaiParlog&quot;]</name></author><category term="Java Language" /><summary type="html"><![CDATA[Java's error handling is driven by exceptions, a big part of which is the distinction between checked and unchecked exceptions. This comes with hurdles that lead many Java developers to prefer unchecked exceptions and wondering whether checked exceptions where a mistake. In this conversation, Stuart Marks and Nicolai Parlog discuss exactly that.]]></summary></entry><entry><title type="html">Unlock Powerful Insights with Java Management Service: Introducing Analyze Applications and Major Management Enhancements</title><link href="https://inside.java/2025/10/08/jms-analyze-applications/" rel="alternate" type="text/html" title="Unlock Powerful Insights with Java Management Service: Introducing Analyze Applications and Major Management Enhancements" /><published>2025-10-08T00:00:00+00:00</published><updated>2025-10-08T00:00:00+00:00</updated><id>https://inside.java/2025/10/08/jms-analyze-applications</id><content type="html" xml:base="https://inside.java/2025/10/08/jms-analyze-applications/"><![CDATA[<p><img class="webfeedsFeaturedVisual" src="/images/thumbnail/code.jpg" style="display: none;" /></p>]]></content><author><name>[&quot;AurelioGarciaRibeyro&quot;]</name></author><category term="Oracle" /><category term="Cloud" /><summary type="html"><![CDATA[We’re excited to announce a significant new release of Oracle Java Management Service (JMS), led by the breakthrough Analyze Applications capability and complemented by major enhancements for managing modern Java fleets—including advanced task scheduling, and expanded support for Java workloads in Kubernetes and with Oracle’s Enterprise Performance Pack.]]></summary></entry><entry><title type="html">Java and AI: Powering Scalable, Enterprise-Grade Intelligence</title><link href="https://inside.java/2025/10/07/java-and-ai-powering-enterprise-intelligence/" rel="alternate" type="text/html" title="Java and AI: Powering Scalable, Enterprise-Grade Intelligence" /><published>2025-10-07T00:00:00+00:00</published><updated>2025-10-07T00:00:00+00:00</updated><id>https://inside.java/2025/10/07/java-and-ai-powering-enterprise-intelligence</id><content type="html" xml:base="https://inside.java/2025/10/07/java-and-ai-powering-enterprise-intelligence/"><![CDATA[<p align="center">
<img alt="Oracle AI World" src="/images/oracle-ai-world-2025.webp" width="75%" />
</p>

<p><a href="https://www.oracle.com/ai-world/"><strong>Register Now for Oracle AI World</strong></a></p>

<p>Oracle continues to thoughtfully invest in flagship conferences that help decision makers adopt value-added solutions and technologies enabling long-lasting enterprise value. This year, Oracle expands its flagship event portfolio with Oracle AI World, THE can’t-miss opportunity where business leaders can learn why organizations worldwide are flocking to embrace Oracle’s latest AI innovations, as well as gain practical tips and insights to drive immediate impact by unlocking the full potential of artificial intelligence.</p>

<p>Oracle’s AI initiatives and solutions are complemented by ongoing investments in Java. AI is transforming industries, driving new revenue opportunities, and redefining customer experiences. But as enterprises move beyond experimentation into large-scale deployment, the technology foundations that power AI become critically important. This is where Java plays a central role. Trusted by millions of developers and embedded deeply in enterprise systems worldwide, Java provides a proven programming language and platform for delivering AI solutions that are not only innovative, but also scalable, secure, and sustainable in production.</p>

<h2 id="enterprise-ready-scalability">Enterprise-Ready Scalability</h2>

<p>AI initiatives succeed or fail based on their ability to scale. Training a model in a lab is very different from deploying it across a global business ecosystem. Modern features give organizations the ability to handle the massive data volumes and real-time processing demands of AI workloads. Whether it’s running predictive analytics across millions of customer interactions or enabling intelligent fraud detection in financial transactions, Java enables organizations to build mission-critical applications that offer consistent performance running at scale.</p>

<h2 id="seamless-integration-with-existing-systems">Seamless Integration with Existing Systems</h2>

<p>For most organizations, AI cannot exist in isolation—it must be woven into core business systems already built on Java. From banking platforms to retail supply chains and telecommunications networks, Java powers mission-critical applications worldwide. Leveraging AI within these environments becomes significantly more efficient when the same programming language and runtime platform are used. This reduces integration complexity, accelerates time-to-value, and ensures AI solutions work harmoniously with existing infrastructure.</p>

<h2 id="a-broad-ecosystem-for-ai-innovation">A Broad Ecosystem for AI Innovation</h2>

<p>The Java ecosystem extends beyond just platform, supporting other languages like Scala and Clojure. This polyglot flexibility allows enterprises to choose the right tools for their AI initiatives while retaining the reliability of the Java platform. Emerging solutions such as Deeplearning4j, Tribuo, and Langchain4J provide production-ready frameworks and libraries for machine learning, while also integrating seamlessly with enterprise data pipelines. These tools empower organizations to move quickly from AI experimentation to operational deployment without having to reinvent their technology stack.</p>

<h2 id="real-world-use-cases-across-industries">Real-World Use Cases Across Industries</h2>

<p>Java-driven AI is already delivering measurable business outcomes across industries:</p>

<ul>
  <li><strong>Financial services</strong>: Real-time fraud detection and risk management systems built on Java leverage AI to protect billions in transactions every day.</li>
  <li><strong>Healthcare</strong>: Java-based solutions enable AI-powered diagnostics and patient monitoring at scale, ensuring reliability in mission-critical scenarios.</li>
  <li><strong>Retail and e-commerce</strong>: AI models integrated into Java-driven supply chain systems optimize inventory, improve logistics, and enhance customer personalization.</li>
  <li><strong>Telecommunications</strong>: AI-enhanced Java systems manage massive data streams from IoT and 5G networks, ensuring quality of service and predictive maintenance.</li>
</ul>

<h2 id="javas-ai-roadmap">Java’s AI Roadmap</h2>

<p>With 30 years of battle-tested reliability and compatibility and a thriving ecosystem of AI libraries to choose from, the Java Platform is a great choice for building AI workloads, but the recent and future roadmap is making it even better. <a href="/tag/Panama">Project Panama</a> has introduced features to better interface with native AI libraries like Tensorflow and perform vector computations, <a href="/tag/Loom">Project Loom</a> is making concurrency easy again, <a href="/tag/Babylon">Project Babylon</a> aims to make Java development on GPUs easier, and <a href="/tag/Amber">Project Amber</a> makes the language concise, expressive, and data-oriented. The future has never been brighter for Java!</p>

<h2 id="experience-java-at-oracle-ai-world">Experience Java at Oracle AI World</h2>

<p>To immerse yourself into the endless possibilities Java offers in the ever-expanding AI ecosystem, stop by the Java booth on the expo floor and attend a curated collection of value-added sessions delivered by recognized Java executives at Oracle:</p>

<h3 id="wednesday-oct-15">Wednesday, Oct 15</h3>

<p><strong><a href="https://www.oracle.com/ai-world/">Everything You Need to Know About Artificial Intelligence and the Java Platform</a></strong><br />
Session ID: LRN2991<br />
Speaker: Donald Smith (VP, Product Management, Java Platform Group, Oracle)<br />
Time: 9:45 AM - 10:30 AM PDT<br />
Room: Marco Polo 803, Level 1</p>

<p><strong><a href="https://www.oracle.com/ai-world/">Industry Perspectives of AI Innovation with Java</a></strong><br />
Session ID: PAN2990<br />
Speaker: Chad Arimura (VP, Developer Relations, Java Platform Group, Oracle)<br />
Time: 2:15 PM - 3:00 PM PDT<br />
Room: Titian 2205, Level 2</p>

<p><strong><a href="https://www.oracle.com/ai-world/">AI and Security: The Present and Future of the Java Platform</a></strong><br />
Session ID: LRN3057<br />
Speaker: Bernard Traversat (VP, Software Development, Java Platform Group, Oracle)<br />
Time: 4:45 PM - 5:30 PM PDT<br />
Room: Marco Polo 802, Level 1</p>

<h3 id="thursday-oct-16">Thursday, Oct 16</h3>

<p><strong><a href="https://www.oracle.com/ai-world/">Elevate Your Emerging AI Solutions with Java</a></strong><br />
Session ID: LRN3058<br />
Speaker: Chad Arimura (VP, Developer Relations, Java Platform Group, Oracle)<br />
Time: 11:30 AM - 12:15 PM PDT<br />
Room: Marco Polo 802, Level 1</p>

<p><a href="https://www.oracle.com/ai-world/"><strong>Register Now for Oracle AI World</strong></a></p>]]></content><author><name>[&quot;SharatChander&quot;]</name></author><category term="Oracle" /><summary type="html"><![CDATA[Oracle's AI initiatives and solutions are complemented by ongoing investments in Java. AI is transforming industries, driving new revenue opportunities, and redefining customer experiences. But as enterprises move beyond experimentation into large-scale deployment, the technology foundations that power AI become critically important. This is where Java plays a central role.]]></summary></entry><entry><title type="html">Evolving ZGC’s Pointer Color Palette #JVMLS</title><link href="https://inside.java/2025/10/06/jvmls-zgc-colored-pointers/" rel="alternate" type="text/html" title="Evolving ZGC’s Pointer Color Palette #JVMLS" /><published>2025-10-06T00:00:00+00:00</published><updated>2025-10-06T00:00:00+00:00</updated><id>https://inside.java/2025/10/06/JVMLS-ZGC-Colored-Pointers</id><content type="html" xml:base="https://inside.java/2025/10/06/jvmls-zgc-colored-pointers/"><![CDATA[<div class="youtube-embed">
    <iframe src="https://www.youtube.com/embed/y_QeST7Axrw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>
</div>

<p><em>The practice of coloring pointers is a core DNA element of ZGC. There are different ways of coloring a pointer and picking an appropriate one is of crucial importance for the algorithm.</em> 
<em>As the complexity of our ZGC art increases, its color palette evolves with it, allowing it to describe more nuanced shades.</em> 
<em>This presentation goes into a little bit more detail how the ZGC choice of paint has evolved from non-generational to generational ZGC, but also how it has evolved further to prepare for the next step in the evolution of ZGC: thread-local GC.</em></p>

<p><em>Make sure to check <a href="https://www.youtube.com/playlist?list=PLX8CzqL3ArzUOgZpIX6GsoRhPbnij-sco">the JVMLS 2025 playlist</a>.</em></p>]]></content><author><name>[&quot;ErikOsterlund&quot;]</name></author><category term="GC" /><category term="HotSpot" /><summary type="html"><![CDATA[The practice of coloring pointers is a core DNA element of ZGC. There are different ways of coloring a pointer and picking an appropriate one is of crucial importance for the algorithm. As the complexity of our ZGC art increases, its color palette evolves with it, allowing it to describe more nuanced shades. This presentation goes into a little bit more detail how the ZGC choice of paint has evolved from non-generational to generational ZGC, but also how it has evolved further to prepare for the next step in the evolution of ZGC: thread-local GC.]]></summary></entry><entry><title type="html">The Inside Java Newsletter: Java 25 is Live!</title><link href="https://inside.java/2025/10/03/inside-java-newsletter/" rel="alternate" type="text/html" title="The Inside Java Newsletter: Java 25 is Live!" /><published>2025-10-03T00:00:00+00:00</published><updated>2025-10-03T00:00:00+00:00</updated><id>https://inside.java/2025/10/03/Inside-Java-Newsletter</id><content type="html" xml:base="https://inside.java/2025/10/03/inside-java-newsletter/"><![CDATA[<p><img class="webfeedsFeaturedVisual" src="/images/thumbnail/code.jpg" style="display: none;" /></p>]]></content><author><name>[&quot;JimGrisanzio&quot;]</name></author><category term="Oracle" /><category term="Community" /><summary type="html"><![CDATA[The Inside Java Newsletter for September 2025 focuses on a series of technical videos about Java 25. We also have updates on Java User Groups, developer events, learning resources, community podcasts, and content from the Java Platform Group. Visit learn.java, dev.java, and inside.java for multimedia content for developers, learners, educators, and customers. See the archives, subscribe, and send to a friend!]]></summary></entry><entry><title type="html">Oracle Java Extension for Visual Studio Code Version 24.1.2 Is Now Available!</title><link href="https://inside.java/2025/10/01/java-vscode-extension-update/" rel="alternate" type="text/html" title="Oracle Java Extension for Visual Studio Code Version 24.1.2 Is Now Available!" /><published>2025-10-01T00:00:00+00:00</published><updated>2025-10-01T00:00:00+00:00</updated><id>https://inside.java/2025/10/01/java-vscode-extension-update</id><content type="html" xml:base="https://inside.java/2025/10/01/java-vscode-extension-update/"><![CDATA[<p>New Java Platform Extension for VS Code Release</p>

<p><img class="webfeedsFeaturedVisual" style="display: none;" src="/images/thumbnail/duke-vscode.jpg?251525955" /></p>]]></content><author><name>[&quot;ArvindAprameya&quot;]</name></author><category term="Oracle" /><summary type="html"><![CDATA[New Java Platform Extension for VS Code Release]]></summary></entry><entry><title type="html">Episode 40 “Amber &amp;amp; Valhalla - Incremental Design and Feature Arcs” with Brian Goetz</title><link href="https://inside.java/2025/09/28/podcast-040/" rel="alternate" type="text/html" title="Episode 40 “Amber &amp;amp; Valhalla - Incremental Design and Feature Arcs” with Brian Goetz" /><published>2025-09-28T00:00:00+00:00</published><updated>2025-09-28T00:00:00+00:00</updated><id>https://inside.java/2025/09/28/Podcast-040</id><content type="html" xml:base="https://inside.java/2025/09/28/podcast-040/"><![CDATA[<p><img class="webfeedsFeaturedVisual" style="display: none;" src="/images/thumbnail/ChadMic.jpg?246939422" /></p>

<p><br /></p>
<iframe title="Libsyn Player" style="border: none" src="//html5-player.libsyn.com/embed/episode/id/38338155/height/90/theme/custom/thumbnail/yes/direction/forward/render-playlist/no/custom-color/000000/" height="90" width="100%" scrolling="no"></iframe>

<div class="youtube-embed">
<iframe src="https://www.youtube.com/embed/guuOLbgO-U0?si=8Ljsi_VsSsKpaZ9n" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</div>

<p><br /></p>

<p>OpenJDK projects such as Amber and Valhalla are renowned for their careful and methodical approach to designing and introducing new features to the Java platform.</p>

<p>In this episode, <a href="https://inside.java/u/NicolaiParlog/">Nicolai Parlog</a> is joined by <a href="https://inside.java/u/BrianGoetz/">Brian Goetz</a>, Java Language Architect at Oracle and lead of both Project Amber and Project Valhalla. Brian shares insights and updates on these influential initiatives as they discuss Amber’s upcoming feature arc, Valhalla’s plans for null-restriction, and more.</p>

<p>Make sure to also check the <strong>Duke’s Corner podcast</strong> on <a href="https://dev.java/duke/corner/">dev.java</a>.</p>

<p><br /></p>

<h3 id="show-notes">Show Notes</h3>

<ul>
  <li><a href="https://openjdk.org/projects/amber/">Project Amber</a></li>
  <li><a href="https://inside.java/tag/amber">More on Amber</a></li>
  <li><a href="https://openjdk.org/projects/valhalla/">Project Valhalla</a></li>
  <li><a href="https://inside.java/tag/valhalla">More on Valhalla</a></li>
</ul>

<h3 id="additional-resources">Additional resources</h3>
<ul>
  <li><a href="https://dev.java">Dev.java</a> : The Destination for Java Developers</li>
  <li><a href="https://openjdk.java.net/">OpenJDK</a></li>
  <li><a href="https://www.oracle.com/java/">Oracle Java</a></li>
</ul>

<p>For more episodes, check out <a href="https://inside.java/podcast">Inside Java</a>, our <a href="https://www.youtube.com/playlist?list=PLX8CzqL3ArzV_hXbRevwzrXSMcGNzhxiZ">YouTube playlist</a>, and follow <a href="https://twitter.com/java">@Java</a> on Twitter.</p>

<p>Contact us <a href="https://inside.java/about/">here</a>.</p>]]></content><author><name>[&quot;BrianGoetz&quot;, &quot;NicolaiParlog&quot;]</name></author><category term="Amber" /><category term="Valhalla" /><summary type="html"><![CDATA[In this episode, Nicolai Parlog is joined by Brian Goetz, Java Language Architect at Oracle and lead of both Project Amber and Project Valhalla. Brian shares insights and updates on these influential initiatives as they discuss Amber’s upcoming feature arc, Valhalla’s plans for null-restriction, and more.]]></summary></entry></feed>