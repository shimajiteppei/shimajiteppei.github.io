<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 03 Apr 2025 09:41:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[型の絞りこみ【個人学習まとめ】]]></title><description><![CDATA[
 型による絞り込み
特定の条件において、変数の型をより具体的な型へ絞り込むことができます。
TypeScript の型チェッカーに変数の型がもともと指定されていた型や推論された型よりも狭い範囲であることを伝えることができます。
このことを型の絞り込み(Narrowing)と呼び、

代入による絞り込み
型ガード

の 2 種類があります。
Narrowing

 代入による型の絞り込み
変数に値を代入する時に、代入される型の値に基づいて変数の型を絞り込むことができます。
実際のコードで確認してみましょう。
let x = Math.random() &gt; 0.1 ? 1 : "こん...]]></description><link>https://zenn.dev/o0rororo0o/articles/9d4f06e13d7b83</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/9d4f06e13d7b83</guid><pubDate>Thu, 03 Apr 2025 08:09:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fAvFj671--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2581%25AE%25E7%25B5%259E%25E3%2582%258A%25E3%2581%2593%25E3%2581%25BF%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[TypeScript/React/Next.jsおすすめ学習資料のご紹介]]></title><description><![CDATA[
 はじめに
今回は、現代のWBE開発で最も使用されている言語/フレームワークであるTypeScript/React/Next.jsについて学ぶために、私がおすすめしたい学習資料についてご紹介したいと思います。
非常に有用で、初心者から中級者、上級者まで幅広い層に向けた内容が含まれていますので、時間を見つけて是非読んでみてください。
※TypeScript/React/Next.jsって何？という方のために、簡単に以下にそれぞれご説明いたします。


TypeScript
Microsoftが開発した、JavaScriptを拡張したプログラミング言語。JavaScriptに比べ、型安全性...]]></description><link>https://zenn.dev/acntechjp/articles/e8e54ee201f77e</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/e8e54ee201f77e</guid><pubDate>Thu, 03 Apr 2025 07:25:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lsOlbDwn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%252FReact%252FNext.js%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E5%25AD%25A6%25E7%25BF%2592%25E8%25B3%2587%25E6%2596%2599%25E3%2581%25AE%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuuichi%2520Eguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3Y2NiYzY2YjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuuichi Eguchi</dc:creator></item><item><title><![CDATA[Firebase Functions Gen 2 で Hono を動かす]]></title><description><![CDATA[
 はじめに
Cloud Functions for Firebase で Hono を使おうとして調べると、以下のような先駆者の記事が出てくる。
https://zenn.dev/singularity/articles/firebase-hono
https://zenn.dev/kazuph/articles/ee51d6cf08d620
先駆者の記事は大変参考になるが、一方ここで紹介されている記述方法は 第1世代の記述であり、以下のように公式で推奨している第2世代の記述ではない。
https://firebase.google.com/docs/functions/version...]]></description><link>https://zenn.dev/takanari_dev/articles/2025-03-29-firebase-functions-gen2-with-hono</link><guid isPermaLink="true">https://zenn.dev/takanari_dev/articles/2025-03-29-firebase-functions-gen2-with-hono</guid><pubDate>Thu, 03 Apr 2025 04:40:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HmjqE6An--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520Functions%2520Gen%25202%2520%25E3%2581%25A7%2520Hono%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takanari%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNDg2NWU2NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takanari</dc:creator></item><item><title><![CDATA[Model Context Protocol（MCP）で天気情報ツールを自作する - クイックスタートチュートリアル実践]]></title><description><![CDATA[こんにちは、岡本秀高です。今回はModel Context Protocol（MCP）の公式クイックスタートチュートリアルを読みながら実装してみた経験について共有します。以前は公式が過去に提供していたセットアップコマンドを使った方法を紹介しました。今回はMCPの公式チュートリアルをほぼそのままなぞる形で実装していきます。最後に少しだけコードを読んでみた部分についても紹介しています。

 MCPとは？
Model Context Protocol（MCP）は、AIモデルと外部ツールを連携させるためのプロトコルです。Claudeなどの大規模言語モデルに、APIやデータベースなど外部リソースに...]]></description><link>https://zenn.dev/digitalcube/articles/dc82928f4ac251</link><guid isPermaLink="true">https://zenn.dev/digitalcube/articles/dc82928f4ac251</guid><pubDate>Thu, 03 Apr 2025 01:08:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LLRfweyw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Model%2520Context%2520Protocol%25EF%25BC%2588MCP%25EF%25BC%2589%25E3%2581%25A7%25E5%25A4%25A9%25E6%25B0%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2520-%2520%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Okamoto%2520Hidetaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2U1ZTFlODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDFLSlFZQ1Q2d2JmNlB6dnA3eGJ6Q3QtN3I3SjZ5aWlQaGU2QlJfVlhuQWg3aVdBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Okamoto Hidetaka</dc:creator></item><item><title><![CDATA[【反省】バッチの実装を誤って、盛大にご迷惑をおかけしてしまった話]]></title><description><![CDATA[やらかしてしまいました。今回は業務における失敗談をお話しようと思います。

 何をやらかしたか
バッチの実装を誤った結果多数のユーザーにメールを重複送信してしまい、ユーザーはもちろん社内のカスタマーサクセスチーム、開発チームにもご迷惑をおかけしてしまいました。

 技術スタック

typescript
Prisma
Mysql


 バッチの要件
特定のステータスを持つユーザーに対して、以下の処理を行うバッチです

ステータスの更新 ※更新すること次のバッチの対象から外れる
その他の処理 ※本題から逸れるので省きます
メール送信を行う


 どんな実装をしたか
流れとしてはこんな感じ

...]]></description><link>https://zenn.dev/maya_honey/articles/efbcb8f6bd01f0</link><guid isPermaLink="true">https://zenn.dev/maya_honey/articles/efbcb8f6bd01f0</guid><pubDate>Wed, 02 Apr 2025 23:22:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hDS8A190--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%258F%258D%25E7%259C%2581%25E3%2580%2591%25E3%2583%2590%25E3%2583%2583%25E3%2583%2581%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E8%25AA%25A4%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E7%259B%259B%25E5%25A4%25A7%25E3%2581%25AB%25E3%2581%2594%25E8%25BF%25B7%25E6%2583%2591%25E3%2582%2592%25E3%2581%258A%25E3%2581%258B%25E3%2581%2591%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maya%2520honey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1YzYwZWM4NzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maya honey</dc:creator></item><item><title><![CDATA[118. Pascal's Triangle]]></title><description><![CDATA[整数 numRows が与えられたとき、パスカルの三角形の最初の numRows 行を返します。
パスカルの三角形では、各数値はその直上にある2つの数値の合計です。以下の図のようになります。

 例 1:


入力: numRows = 5


出力: [[1], [1,1], [1,2,1], [1,3,3,1], [1,4,6,4,1]]



 例 2:


入力: numRows = 1


出力: [[1]]



 制約:

1 &lt;= numRows &lt;= 30



]]></description><link>https://zenn.dev/idapan/articles/ba328d72be2595</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/ba328d72be2595</guid><pubDate>Wed, 02 Apr 2025 21:19:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zmPKNmvd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:118.%2520Pascal%2527s%2520Triangle%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[#77　⭕️❌ゲームで学ぶビット演算]]></title><description><![CDATA[
 ⭕️❌ゲームで学ぶビット演算
今回はタイトルの通り、⭕️❌ゲームの作成を通じてビット演算を学んでいきたいと思います

 ビット演算とは

ビット演算（bitwise operation）とは、主にコンピュータ上で行われる演算の一つで、対象データをビット列（2進数の0と1の羅列）とみなして、ビットの移動やビット単位の論理演算などを行うもの。

IT用語辞典 e-words【ビット演算】より引用
引用元の説明にある通り、ビット列に対して論理演算を行うことを指し、省メモリ化や処理の高速化などの恩恵を受けられる可能性があります
デメリットとしてはコードの可読性が落ちることが挙げられます

 ...]]></description><link>https://zenn.dev/nxted_sapporo/articles/526de940287483</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/526de940287483</guid><pubDate>Wed, 02 Apr 2025 14:06:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PbXSrJmX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252377%25E3%2580%2580%2520%2520%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E6%25BC%2594%25E7%25AE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[【Typescript】as const って結局何？型推論との違いと使いどころを徹底解説]]></title><description><![CDATA[
 ✍️ はじめに
実務で 型アサーション＝ as const を使うことはよくあります。実務でも as const を使用しているコードをよく見たり、自分も使っていましたが今まで深く考えずに使っていました。
最近、『【初学者向け】具体例で学ぶTypeScript練習問題集』の問題を解いているときに、以下の問題に出会いました：
【Lv.3】オブジェクトのインデックス
そのときふと、「そもそも as const って何をしてるんだっけ？」「なぜ付けたほうがいいの？」と疑問に思いました。
本記事では as const の役割と、通常の型推論との違いを整理していきます。

 🔍 as cons...]]></description><link>https://zenn.dev/sato_frontend/articles/4ca0a1b5837f59</link><guid isPermaLink="true">https://zenn.dev/sato_frontend/articles/4ca0a1b5837f59</guid><pubDate>Wed, 02 Apr 2025 13:49:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wMxDUODD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Typescript%25E3%2580%2591as%2520const%2520%25E3%2581%25A3%25E3%2581%25A6%25E7%25B5%2590%25E5%25B1%2580%25E4%25BD%2595%25EF%25BC%259F%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%25A9%25E3%2581%2593%25E3%2582%258D%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sato_frontend%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwNzYyOThkNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sato_frontend</dc:creator></item><item><title><![CDATA[認証サービス Clerk の紹介と導入【React】]]></title><description><![CDATA[
 はじめに
React/Next.js で、認証・認可を実装するには、さまざまなソリューションが存在します 🫐
自前で実装するというのも１つの選択肢ですが、
セキュアな認証システムを一から構築するには、多くの時間と労力、そして継続的なメンテナンスが必要になります。
なので、認証周りは、外部のサービス・ライブラリを導入するケースが多いですよね。

Firebase auth
supabase auth
Lucia
Auth.js
Auth0
Clerk

など、が有名どころでしょうか。
その中でも、今回は認証サービス Clerk について調査したので、基礎的な内容をまとめました！
時間の...]]></description><link>https://zenn.dev/b13o/articles/tutorial-clerk</link><guid isPermaLink="true">https://zenn.dev/b13o/articles/tutorial-clerk</guid><pubDate>Wed, 02 Apr 2025 13:20:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g9wQR46A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2520Clerk%2520%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2580%2590React%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazzyfrog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYWE3NjM3NGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:b13o%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMzRmZDk1NTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[React + TypeScript + Vite で Wasmを触ってみるメモ]]></title><description><![CDATA[環境

ubuntu 22.04 LTS
bun 1.0.14
vite 5.0.0
typescript 5.2.2
react 18.2.0
wabt 1.0.32

bunのインストール。
curl -fsSL https://bun.sh/install | bash
が、以下のコマンドで環境作成が途中までで止まってしまう...。
bun create vite vite-react-wasm-example
もしかして、と思ってnpmとNode.jsをインストール。（こちらを参考にしています）
sudo apt install -y nodejs npm
sudo npm i ...]]></description><link>https://zenn.dev/yoshi333/articles/c289c1b923daad</link><guid isPermaLink="true">https://zenn.dev/yoshi333/articles/c289c1b923daad</guid><pubDate>Wed, 02 Apr 2025 11:47:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WjZWBCJG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520TypeScript%2520%252B%2520Vite%2520%25E3%2581%25A7%2520Wasm%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2580%2580%25E3%2581%2595%25E3%2580%2580%25E3%2581%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2YjZlYzgyODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>う　さ　ぽ</dc:creator></item><item><title><![CDATA[Neon（旧Vercel PostgreSQL）の紹介と導入【Next.js】]]></title><description><![CDATA[
 はじめに
先日、Next.js の勉強会で、データベース連携の実装について取り上げました 🫐

Supabase
Firebase

上記などは、有名でしょうか。
自前での構築不要で、簡単に DB を導入できるサービスは、
新規プロダクトの立ち上げにおいて、便利です。
その中でも、今回はNeon DB について調査したので、基礎的な内容をまとめました！
時間の節約になれば、嬉しいです 🙌

 Neon（旧 Vercel PostgreSQL）とは？
https://neon.tech/
Neon は、サーバーレスで設計された PostgreSQL データベースサービスです。
簡単に、...]]></description><link>https://zenn.dev/b13o/articles/tutorial-neon</link><guid isPermaLink="true">https://zenn.dev/b13o/articles/tutorial-neon</guid><pubDate>Wed, 02 Apr 2025 11:35:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z35wV1Jy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Neon%25EF%25BC%2588%25E6%2597%25A7Vercel%2520PostgreSQL%25EF%25BC%2589%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2580%2590Next.js%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazzyfrog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYWE3NjM3NGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:b13o%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMzRmZDk1NTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[関数型の互換性(引数)【個人学習まとめ】]]></title><description><![CDATA[
 関数型の互換性(反変)
!
「互換性」ではなく「反変」が正しいです。
前回の記事[1]に引き続き、私が学習に使っている本では「互換性」という表現を使用しているため、本記事でも同様に「互換性」という表現を使用します。

前回の記事では戻り値の型に関する互換性(共変)を学習しました。
今度は引数の型について学習します。できるだけ単純にするために、戻り値の型に互換性があると仮定して確認してみましょう。

 引数の型
実際に確認する前に、引数の型となる 2 種類のインターフェイスPersonとTeacherを定義します。
interface Person {
  name: string;
...]]></description><link>https://zenn.dev/o0rororo0o/articles/505d3791fa8308</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/505d3791fa8308</guid><pubDate>Wed, 02 Apr 2025 04:19:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LgMXCZWg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2581%25AE%25E4%25BA%2592%25E6%258F%259B%25E6%2580%25A7%2528%25E5%25BC%2595%25E6%2595%25B0%2529%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[React Nativeでローカルデータを手軽に永続的に保存する方法（Expo対応）]]></title><description><![CDATA[
 はじめに
こんにちは！React Nativeアプリでデータをローカルに保存する方法はいくつかあります。データの種類や用途に応じて最適な選択肢を選ぶことで、アプリのパフォーマンスや使い勝手が向上します。本記事では、Expo環境で使える代表的な方法を比較し、それぞれの特徴や適したユースケースを紹介します！
!
上記にも記載していますがExpoを使用することを大前提に話を進めていきます。
(執筆中はExpo 52です)


 永続的に保存するとはどういうことか
「データを永続的に保存する」とは、アプリを閉じたり、デバイスを再起動してもデータが消えないようにすることを指します。通常、Rea...]]></description><link>https://zenn.dev/gemcook/articles/c18ff75216d800</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/c18ff75216d800</guid><pubDate>Wed, 02 Apr 2025 02:59:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GSznMF_1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Native%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E6%25B0%25B8%25E7%25B6%259A%25E7%259A%2584%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588Expo%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A6%25E3%2582%2593%25E3%2582%2580%25E3%2581%2599%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwZDNlZDBmODguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てんむす</dc:creator></item><item><title><![CDATA[React Tokyo トレンドレポート #4: Formの話がしたい！]]></title><description><![CDATA[こんにちは！React Tokyoサポートメンバーのふるしょうです。
React TokyoのDiscordサーバーでは、Reactに関する最新技術の動向から、日々の開発で直面する具体的な課題まで、メンバー間で活発な情報共有が日々交わされています。
React TokyoトレンドレポートはDiscordサーバー内の情報・質問小部屋で盛り上がったトピックを定期的にまとめて紹介するレポートです！
過去の3回の記事はこちら
https://zenn.dev/react_tokyo/articles/db90a5397364aa
https://zenn.dev/react_tokyo/arti...]]></description><link>https://zenn.dev/react_tokyo/articles/0d373fe1178452</link><guid isPermaLink="true">https://zenn.dev/react_tokyo/articles/0d373fe1178452</guid><pubDate>Wed, 02 Apr 2025 02:56:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H4Wo3bz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Tokyo%2520%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2520%25234%253A%2520Form%25E3%2581%25AE%25E8%25A9%25B1%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NGYyYjY2ODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:React%2520Tokyo%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmQ5N2Q0NmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるしょう</dc:creator></item><item><title><![CDATA[@modelcontextprotocol/create-serverを使って、MCPサーバーを自作してみよう]]></title><description><![CDATA[この記事では、ClaudeやCursor、ClineなどでAIアシスタントの機能を拡張できる Model Context Protocol (MCP) Server を自作する方法の一つとして、@modelcontextprotocol/create-serverを利用する方法を紹介します。
!
注意: @modelcontextprotocol/create-typescript-serverはGitHub上で「Public archive」状態となっています。そのため、MCPのSDKバージョンや実装が古くなっている問題を抱えています。
そのため、この記事で紹介する手順は、「v0 -&...]]></description><link>https://zenn.dev/digitalcube/articles/b134c264859d74</link><guid isPermaLink="true">https://zenn.dev/digitalcube/articles/b134c264859d74</guid><pubDate>Wed, 02 Apr 2025 00:42:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s7ethRIy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2540modelcontextprotocol%252Fcreate-server%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Okamoto%2520Hidetaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2U1ZTFlODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDFLSlFZQ1Q2d2JmNlB6dnA3eGJ6Q3QtN3I3SjZ5aWlQaGU2QlJfVlhuQWg3aVdBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Okamoto Hidetaka</dc:creator></item><item><title><![CDATA[リッチテキストエディタ→Markdown変換ツールを作ってみた]]></title><description><![CDATA[
 はじめに
今回は、Next.jsとBlockNoteを組み合わせて開発した、NotionライクなリッチテキストエディタからMarkdown形式で記事を出力できるツールについて紹介します。
Markdownによる技術記事執筆を、より直感的で快適にすることを目的としたアプリケーションです。
https://to-md.vercel.app/

 使用した技術

Next.js
Tailwind CSS
Block Note
supabase
shadcn/ui

ほか

 プロジェクトについて

 本プロジェクトは、BlockNoteで作成したリッチテキストを、Markdown形式に変換...]]></description><link>https://zenn.dev/kamiya0811/articles/0ecb6850bba543</link><guid isPermaLink="true">https://zenn.dev/kamiya0811/articles/0ecb6850bba543</guid><pubDate>Tue, 01 Apr 2025 16:27:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TIxOhtCc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2581%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E2%2586%2592Markdown%25E5%25A4%2589%25E6%258F%259B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGdUZEVwMUNDTFpRVmxiZktheXlVYWNCUURvVER3Umg5M2xBV3pvQkg5RkdSa1FRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaito</dc:creator></item><item><title><![CDATA[自分だけの GitHub Copilot を開発してみよう]]></title><description><![CDATA[
 はじめに
本記事では、VS Code 拡張機能を活用し、GitHub Copilot 用のカスタム コマンドを開発する手順を詳しく解説します。
拡張機能作成の基礎から、カスタム コマンドの実装、LLM との連携、さらには配布方法まで、実践的な内容を網羅していますので、ぜひ最後までお付き合いください。
現状、GitHub Copilot には以下のようなコマンドが用意されています（参考）。


@azure：Azure サービスに関するコンテキストと支援を提供します。

@github：GitHub 固有の Copilot スキルを利用可能にします。

@terminal：VS Cod...]]></description><link>https://zenn.dev/microsoft/articles/develop-your-github-copilot</link><guid isPermaLink="true">https://zenn.dev/microsoft/articles/develop-your-github-copilot</guid><pubDate>Tue, 01 Apr 2025 16:13:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sp1_b_Vl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AE%2520GitHub%2520Copilot%2520%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:momosuke%2520%257C%2520Ryosuke...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDNiN2I3OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Microsoft%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ODc4NmI0NjguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>momosuke | Ryosuke Hyakuta</dc:creator></item><item><title><![CDATA[Neovim0.11 x tsgoでTSファイルの型チェックをする]]></title><description><![CDATA[この記事はVim駅伝の2025-04-02の記事です。
前回の記事は静カニさんのvimmerになったです。


MicrosoftがTypeScriptの関連ツールをGOに移植することがニュースになりました。10倍くらい速いらしいです。
https://www.publickey1.jp/blog/25/typescriptgo10.html
この記事では、これをNeovimから呼び出して型チェックします。
こちらのリポジトリで公開されています。直接実行可能な形では提供されていないので、クローンしてきてビルドしましょう。submodulesもあるのでクローンには少し時間を要します。
ht...]]></description><link>https://zenn.dev/vim_jp/articles/1ad3c4c7bfb218</link><guid isPermaLink="true">https://zenn.dev/vim_jp/articles/1ad3c4c7bfb218</guid><pubDate>Tue, 01 Apr 2025 15:03:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NWcuGao3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Neovim0.11%2520x%2520tsgo%25E3%2581%25A7TS%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kawarimidoll%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YzllYzNiYzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:vim-jp%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzNzlhYzhkODYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kawarimidoll</dc:creator></item><item><title><![CDATA[【チートシート】JavaScriptのforループ難しすぎ！？まとめてみた]]></title><description><![CDATA[
 はじめに
JavaScript, TypeScriptにはループを実現する方法がいくつもあり、ユースケースによって最適なものが異なります。
今では理解できるようになりましたが、初心者の頃はループの書き方が多すぎてどれを使っていいのかわからず、適切でない使用方法をしていたことがありました。
forループの種類を誰かに説明するにはあまりにパターンが多く、まとまっている記事も見当たらなかったため、この記事でまとめます。
ぜひチートシートとしてご活用ください！
!
簡単のため配列という言葉を使っていますが、SetなどのIterableなオブジェクトでも同様の処理ができます。
サンプルコードは...]]></description><link>https://zenn.dev/bmth/articles/for-loop-is-difficult</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/for-loop-is-difficult</guid><pubDate>Tue, 01 Apr 2025 14:59:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--leV7s1EV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2580%2591JavaScript%25E3%2581%25AEfor%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E9%259B%25A3%25E3%2581%2597%25E3%2581%2599%25E3%2581%258E%25EF%25BC%2581%25EF%25BC%259F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZTk3NzVhNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[zod と2年間戦ってきて便利だった機能を晒すスレ]]></title><description><![CDATA[zod と付き合い始めてもうすぐ2年が経過しようとしていますが未だに「こいつなしでは俺はもう生きていけない」という状態です。
そしてこの間で結構 zod の取り扱いの knowledge が貯まってきたので、一旦ここで放出してみようと思います。
ちなみに他の方の「これ便利やでw」も知りたいのでこのタイトルにしました。

 transform 前のモデルの型情報を取りたい
zod には transform という関数があり、任意のスキーマを変形したり拡張したりすることができます。
以下のサンプルコードの例で言うと、hoge というキーを入力として受取りその文字列長を hogeLength ...]]></description><link>https://zenn.dev/huequica/articles/zod_knowledges</link><guid isPermaLink="true">https://zenn.dev/huequica/articles/zod_knowledges</guid><pubDate>Tue, 01 Apr 2025 12:50:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VN-OVVdm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zod%2520%25E3%2581%25A82%25E5%25B9%25B4%25E9%2596%2593%25E6%2588%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25A6%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%2599%2592%25E3%2581%2599%25E3%2582%25B9%25E3%2583%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Haru_Yakumo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDRUNJM2xDR3ZjNWNrYWN6QVFIcm5QeTZTS2VsX3lZOFNKM05jMVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Haru_Yakumo</dc:creator></item></channel></rss>