<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 16 Mar 2025 09:44:29 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Rescale のジョブを任意の経過時間後に自動停止する]]></title><description><![CDATA[
 この記事について
この記事では, Rescale REST API を使用して, Rescale のジョブを任意の経過時間後に停止させる作業を自動化します

 事前準備: Embedded Job API Key
この記事中のジョブでは, Embedded Job API Key を使用します。この機能を有効化していない場合は, Rescale の人（営業、技術）に相談したり, Rescale Support にサポートリクエストを出したりして有効化します

 背景
Rescale のジョブを, 途中で自動的に止めたいというケースがあるかと思います。例えば、ベンチマークテストをすると...]]></description><link>https://zenn.dev/cloudyfluid/articles/24f01e6f327e5f</link><guid isPermaLink="true">https://zenn.dev/cloudyfluid/articles/24f01e6f327e5f</guid><pubDate>Sun, 16 Mar 2025 09:28:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U4Qfbsvj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rescale%2520%25E3%2581%25AE%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596%25E3%2582%2592%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E7%25B5%258C%25E9%2581%258E%25E6%2599%2582%25E9%2596%2593%25E5%25BE%258C%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E5%2581%259C%25E6%25AD%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cloudyfluid%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3M2I2MzU3NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cloudyfluid</dc:creator></item><item><title><![CDATA[ABC397 C Variety Split Easy (Python)]]></title><description><![CDATA[
 ABC397 C Variety Split Easy (Python)

 目的

コンテスト中に私自身が回答できなかった問題について、振り返り、理解を深めるための記事です。
初心者のため誤解している部分も多いかと思いますが、理解不足の点はその旨記載しています。


 問題
https://atcoder.jp/contests/abc397/tasks/abc397_c

 自分の回答


maeに一旦全部リストの中身を詰めて、pop()でリストの後ろから取り出し、setの長さを見ることで組み合わせ数を確認する
結果はTLE。listの長さ分pop()を繰り返したり、前半のset...]]></description><link>https://zenn.dev/miso253udon/articles/da89053a77e733</link><guid isPermaLink="true">https://zenn.dev/miso253udon/articles/da89053a77e733</guid><pubDate>Sun, 16 Mar 2025 08:47:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MnydgXs1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:ABC397%2520C%2520Variety%2520Split%2520Easy%2520%2528Python%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miso253oudon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MTQ0ODZlMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miso253oudon</dc:creator></item><item><title><![CDATA[（雑多なメモ）報酬が連続値の場合のオフ方策評価の精度検証]]></title><description><![CDATA[
 執筆背景
CtoC EC サイトにおいて、出品者に売れそうな商品をおすすめしたり、購入者にクーポンを配ったりしたい。その効果を予測したり最適化したりしたい。特に直接的なKPIである利益を予測対象にしたい。この問題をオフ方策評価を使って解くことが可能か考えたい。
オフ方策評価で解くメリットは、直接的に最適化したい KPI を最適化出来ることと考える。

 問題の定式化

 最適化したい KPI 定義
商品が購入されることにより得られる利益とする。

 データの観測構造をモデル化
商品の特徴量を x で表す。行動は a \in \mathcal{A} で表す（行動は例えば出品者に商品をお...]]></description><link>https://zenn.dev/shuto51/articles/9c6a1372f957ce</link><guid isPermaLink="true">https://zenn.dev/shuto51/articles/9c6a1372f957ce</guid><pubDate>Sun, 16 Mar 2025 08:18:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z3Ez0nhN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2588%25E9%259B%2591%25E5%25A4%259A%25E3%2581%25AA%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%2589%25E5%25A0%25B1%25E9%2585%25AC%25E3%2581%258C%25E9%2580%25A3%25E7%25B6%259A%25E5%2580%25A4%25E3%2581%25AE%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2595%25E6%2596%25B9%25E7%25AD%2596%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25AE%25E7%25B2%25BE%25E5%25BA%25A6%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:s_takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODZkNGIxMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s_takahashi</dc:creator></item><item><title><![CDATA[GBDT系モデルで生存予測分析]]></title><description><![CDATA[こんにちは。LLMが流行っていますが、たまにはGBDT系のモデルも思い出してあげて下さい。
先日kaggle上で、生存予測分析がお題の「CIBMTR - Equity in post-HCT Survival Predictions」というコンペが開催されました(通称CIBMTR)。個人的に、生存予測分析をお馴染みのGBDT系モデルに落とし込む方法がとても勉強になったので、公開ノートブックや上位ソリューションにおける手法を備忘録がてらここにまとめておこうかと思います。なお、生存予測分析におけるそれぞれの手法や理論の深掘りは行いませんので、ご了承ください。

 導入

 生存予測分析の簡単...]]></description><link>https://zenn.dev/sqrt4kaido/articles/328f92a6a41dbe</link><guid isPermaLink="true">https://zenn.dev/sqrt4kaido/articles/328f92a6a41dbe</guid><pubDate>Sun, 16 Mar 2025 04:37:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eLEFfdjA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GBDT%25E7%25B3%25BB%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E7%2594%259F%25E5%25AD%2598%25E4%25BA%2588%25E6%25B8%25AC%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sqrt4kaido%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmMzA4MmI3MjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sqrt4kaido</dc:creator></item><item><title><![CDATA[OpenManusでGemma3使ってみた]]></title><description><![CDATA[
 はじめに
最近、新たに登場した大規模言語モデルの「Gemma3」を試す機会があった。軽量かつローカル環境でも比較的動かしやすいとのことで、実際に動かしてみたいと考えた。一方、以前から気になっていたオープンソースの汎用エージェントシステム「OpenManus」も、ちょうど試す機会を探していたため、同時に試して相性や使い勝手を確かめることにした。
本記事は、これら2つを初めて導入したときの手順や注意点を整理した備忘録である。Gemma3 と OpenManus の基本的な使い方や簡単な連携実行の流れを示す。

 実行環境

Windows11 home

CPU: Intel(R) Co...]]></description><link>https://zenn.dev/t_sumida/articles/3f07b3a8b45aab</link><guid isPermaLink="true">https://zenn.dev/t_sumida/articles/3f07b3a8b45aab</guid><pubDate>Sun, 16 Mar 2025 03:23:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cmXe_sYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenManus%25E3%2581%25A7Gemma3%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:T_Sumida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huWDJaTTN1NkFPWWlDZzNWMWxmdHRiS1pmQVo3Sk5UMU8xeXg2cVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>T_Sumida</dc:creator></item><item><title><![CDATA[超初心者のための FastAPI 入門 〜AI チャットボットを開発しよう〜]]></title><description><![CDATA[Django は機能が多すぎて複雑そう、Flask はシンプルだけど本格的なアプリを作れるか不安...
非同期処理とかRESTful APIとか、難しい概念が多くて躊躇している...

本書では、Python の最新フレームワーク「FastAPI」を使って、複雑な設定や難解な概念に躓くことなく、すぐに実用的なアプリケーションを作り始められます。

特にAIチャットアプリという具体的なプロジェクトを通して学ぶことで、環境構築から機能実装、テストまでの全工程を体験。AIとの連携方法も含め、単なる知識の習得ではなく、FastAPIで開発するスキルが身につきます。

FastAPIの直感的な操作感と高いパフォーマンスを活かし、短時間で達成感を味わえるよう設計されています。古いやり方に固執せず、最新の技術に挑戦することで、効率よく、しかも楽しく開発を進めましょう！

さあ、FastAPIで親しみやすいWeb開発の世界へ飛び込んでみましょう！]]></description><link>https://zenn.dev/hamaup/books/482d1320ad9400</link><guid isPermaLink="true">https://zenn.dev/hamaup/books/482d1320ad9400</guid><pubDate>Sat, 15 Mar 2025 20:56:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BItM-HB1--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lMmFiZjlhNTYyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hamaup</dc:creator></item><item><title><![CDATA[Poetryを1.8.x -> 2系に変更する]]></title><description><![CDATA[
 なぜ記事にしたか
2系にすることで、コマンドなどいろいろ変更点があるようなのでまとめていって、最終的に新規プロジェクトを作成し、開発できるようになることを確認する。

 インストール（asdf）
$ asdf plugin-update poetry
$ asdf install poetry 2.1.1
$ asdf global poetry 2.1.1
$ asdf reshim poetry
$ poetry --version
Poetry (version 2.1.1)
!
Setting virtualenvs.prefer-active-python does not...]]></description><link>https://zenn.dev/icck/articles/e40273673bc107</link><guid isPermaLink="true">https://zenn.dev/icck/articles/e40273673bc107</guid><pubDate>Sat, 15 Mar 2025 15:00:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zss1tAu4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%25E3%2582%25921.8.x%2520-%253E%25202%25E7%25B3%25BB%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:icck%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmYTRiZDQ3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>icck</dc:creator></item><item><title><![CDATA[Pythonの基礎と最新トレンド]]></title><description><![CDATA[Pythonは、プログラミング世界で最も人気のある言語の一つです。その簡単さと自然な記述法により、初心者にも触れやすく、中級以上のエンジニアにとっても役立つ工具です。この記事では、Pythonの基礎から最新トレンドまでを解説します。
Pythonの基礎
基本的な概念
Pythonは、オープンソース型のスクリプト言語で、複数のプラットフォームで動作することが可能です。ウェブアプリ、ゲーム開発、データサイエンス、AIなど、様々な分野で役立っています。
Pythonの特徴
人間が理解しやすい記述法
スクリプト型言語で、コンパイルが必要なし
インタプリタ型言語
多様なライブラリが利用可能
大規模...]]></description><link>https://zenn.dev/otsuka99/articles/0c54fb54cb8e62</link><guid isPermaLink="true">https://zenn.dev/otsuka99/articles/0c54fb54cb8e62</guid><pubDate>Sat, 15 Mar 2025 13:10:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AEK0vXlr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%25A8%25E6%259C%2580%25E6%2596%25B0%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:otsuka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXFoLTdjeG5LMlUwUnYwRTJJNExMc3JVMFVBN0t0YU9kWkJUWG1WSjcwemlUbkVBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>otsuka</dc:creator></item><item><title><![CDATA[【初心者向け】簡単な電卓アプリを作ってみよう！（Python編）]]></title><description><![CDATA[プログラミング学習の定番として、電卓アプリの作成があります。この記事では、Pythonを使って基本的な四則演算（足し算、引き算、掛け算、割り算）ができる電卓アプリを作成する方法を、初心者向けにステップバイステップで解説します。

 目標とする機能
今回作成する電卓アプリには、以下の機能を実装します：

二つの数値の入力を受け付ける
四則演算（+、-、*、/）の選択
計算結果の表示
続けて計算するかどうかの選択
エラー処理（ゼロ除算、不正な入力など）


 Step 1: 基本構造の作成
まずは、プログラムの基本的な構造を作成します。
def main():
    print("=== ...]]></description><link>https://zenn.dev/homatsu_tech/articles/516ea1cfaa71e6</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/516ea1cfaa71e6</guid><pubDate>Sat, 15 Mar 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iypSGeDG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E9%259B%25BB%25E5%258D%2593%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25EF%25BC%2588Python%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZWQ1ZGYyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[クラウドに頼らないIaC入門〜Vagrant + Linux VMで作る自分だけの実験場〜]]></title><description><![CDATA[
 1. はじめに

本記事をご覧頂き、ありがとうございます。
クラウド環境を構築するためのガイドとなるべく、作成しました。
筆者はGCPの使用経験がありますが、まずは特定のクラウド環境に依存しない形で構築をすすめます。
今回はVagrantとゲストOSをUbuntuで構築します。
最初に、Vagrantは、開発環境の自動化ツール で、仮想マシン（VM）の作成・管理を簡単にできる特徴があります。
特に、以下の点でメリットがあります：
✅ 環境構築が一瞬 → Vagrantfile を1つ用意すれば、環境を統一できる
✅ クラウド環境のローカル版が作れる → Terraformと組み合わせ...]]></description><link>https://zenn.dev/kazuma0606/articles/2632c1f05f2df1</link><guid isPermaLink="true">https://zenn.dev/kazuma0606/articles/2632c1f05f2df1</guid><pubDate>Sat, 15 Mar 2025 09:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---NjC3Pwx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2581%25AB%25E9%25A0%25BC%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584IaC%25E5%2585%25A5%25E9%2596%2580%25E3%2580%259CVagrant%2520%252B%2520Linux%2520VM%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AE%25E5%25AE%259F%25E9%25A8%2593%25E5%25A0%25B4%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25BA%25E3%2583%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1ZjkwNWYyMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カズマ</dc:creator></item><item><title><![CDATA[Python で SHA-256 をフルスクラッチで実装する]]></title><description><![CDATA[
 はじめに
この記事では Python で SHA-256 をフルスクラッチで実装したときのソースコードの説明を記載します。
ソースコードは以下のリポジトリにあります。
https://github.com/shu-kitamura/python-sha-256
!
本記事では、SHA-256のアルゴリズムの説明は記載しません。
わかりやすく説明している記事があるので、以下の記事などをご参照ください。

https://qiita.com/takaminmin/items/698dad16a0d3a654b7e5

 SHA-256 とは
SHA-256 は、入力データから 256 ビ...]]></description><link>https://zenn.dev/shu_kitamura/articles/0b10d9ffa795ed</link><guid isPermaLink="true">https://zenn.dev/shu_kitamura/articles/0b10d9ffa795ed</guid><pubDate>Sat, 15 Mar 2025 05:48:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IVHAgZqJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%2520SHA-256%2520%25E3%2582%2592%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2581%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Skit%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjZjhiN2M4YmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Skit</dc:creator></item><item><title><![CDATA[Poetry × 深層学習：Macでのdocker環境構築]]></title><description><![CDATA[
 概要
初めてのzenn記事です。
poetryを使うと、 poetry lock するだけで依存関係の正確なバージョンを記録するためのロックファイルが生成されるため、requirements.txtやpyproject.tomlに適当にdependencyにライブラリを追加するケースと比べて、安心してライブラリの管理できます。
ただ、Mac OSでtorchなどの環境をインストールしようとするとロックファイルを生成する際に依存関係を解決できなかったり、仮に依存関係を解決できてもインストール時にエラーになったりします。
実際に、poetry側でも下記のissueのように放置されています...]]></description><link>https://zenn.dev/bamboo_nova/articles/acef07560c63d6</link><guid isPermaLink="true">https://zenn.dev/bamboo_nova/articles/acef07560c63d6</guid><pubDate>Sat, 15 Mar 2025 05:36:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zA-zI4eg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%2520%25C3%2597%2520%25E6%25B7%25B1%25E5%25B1%25A4%25E5%25AD%25A6%25E7%25BF%2592%25EF%25BC%259AMac%25E3%2581%25A7%25E3%2581%25AEdocker%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25A1%2580%25E5%25A8%2581%25E8%258F%25AF%25E6%2588%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1NTQ1MjgwNzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>血威華我</dc:creator></item><item><title><![CDATA[OpenAI の 新しいAPI "Responses API" について]]></title><description><![CDATA[
 執筆日
2025/03/15

 概要
今週火曜日(2025/03/11)にOpenAIから、新しいAPIの発表がありました。既存のChat APIによるシンプルな会話と、エージェント構築のためのAssistants APIの機能を統合してより使いやすく進化させたResponses APIです。先日GPT-4.5が発表されたところでしたがそちらは高級モデルで、API利用してシステム構築目的に使うには少し……という感じでした。一方こちらは、同日に発表されたAgent SDKと合わせて最近のLLMのエージェント化の潮流に乗っていてシステム開発を更に便利にするのに重要な新機能であると感じま...]]></description><link>https://zenn.dev/headwaters/articles/a749b44923c061</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/a749b44923c061</guid><pubDate>Sat, 15 Mar 2025 05:06:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--65ijXPN---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E3%2581%25AE%2520%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584API%2520%2522Responses%2520API%2522%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[【全部解ける？】Python基礎 10本ノック]]></title><description><![CDATA[
 問題1
次のコードの出力結果はどうなりますか？
a = 13
b = 5
c = a // b

print(c)

選択肢
1. 2.6
2. 3
3. 8
4. 2

解答

2

解説: a // b は整数部分のみを出力します。
また、その他の選択肢に関しては

2.6 は a / b
3 は a % b
8 は a - b

で出力することができます。
!
割り算は常にfloat型になることに注意しましょう。

In
print(20/5)



Out
4.0





 問題2
次のコードの出力結果はどうなりますか？
s1, s2, s3 = "a", "", 1

p...]]></description><link>https://zenn.dev/python_academia/articles/0fc665912a7663</link><guid isPermaLink="true">https://zenn.dev/python_academia/articles/0fc665912a7663</guid><pubDate>Sat, 15 Mar 2025 04:53:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nwW2FcSA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2585%25A8%25E9%2583%25A8%25E8%25A7%25A3%25E3%2581%2591%25E3%2582%258B%25EF%25BC%259F%25E3%2580%2591Python%25E5%259F%25BA%25E7%25A4%258E%252010%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Python%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2587%25E3%2583%259F%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NzE0ZDdkNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Pythonアカデミア</dc:creator></item><item><title><![CDATA[【Google Colab入門】無料でPythonを動かせる！基本の使い方]]></title><description><![CDATA[Google Colaboratory（Google Colab）は、Googleが提供する無料のクラウドベースのPython実行環境です。インストール不要で、Jupyter Notebookのようにコードを書いて実行できます。さらに、無料でGPUやTPUを使うことも可能です。
本記事では、Google Colabの基本的な使い方を解説します。


 ✅ Google Colabとは？

Google Colab（コラボ） は、クラウド上でPythonを実行できる環境です。

 💡 Google Colabの特徴

無料（制限あり）
インストール不要（ブラウザだけでOK）
Jupyter...]]></description><link>https://zenn.dev/oit2003/articles/d4c965ab58a878</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/d4c965ab58a878</guid><pubDate>Sat, 15 Mar 2025 02:39:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FWVclisn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Google%2520Colab%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25A7Python%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259B%25E3%2582%258B%25EF%25BC%2581%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[【導入編】#1: a-Shell(mini) アプリでアプリをつくる【Rubicon-ObjC】]]></title><description><![CDATA[
 はじめに
iPhone, iPad の無料アプリa-Shell でアプリを制作します。プログラミング言語は、Swift や Objective-C ではなく Python となります。
!
App Store へ公開はできません


 全 3 部構成の第 1 部です
この記事を含め、3 部構成で解説をします。
記事内の掲載コードは、コピーして貼り付ければ動くようにしています。


【導入編】#1: a-Shell(mini) アプリでアプリをつくる【Rubicon-ObjC】

(今回はここ)
1 ファイルのみの簡易な実装
a-Shell 実行の大まかな流れ



【準備編】#2: ...]]></description><link>https://zenn.dev/pometa/articles/c7c8d21a6c5187</link><guid isPermaLink="true">https://zenn.dev/pometa/articles/c7c8d21a6c5187</guid><pubDate>Sat, 15 Mar 2025 02:34:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WyNdqANV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25B0%258E%25E5%2585%25A5%25E7%25B7%25A8%25E3%2580%2591%25231%253A%2520a-Shell%2528mini%2529%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E3%2580%2590Rubicon-ObjC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259D%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25B3%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YWQ4Nzc5MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ポメラニアン太郎</dc:creator></item><item><title><![CDATA[【制作編】#3: a-Shell(mini) アプリでアプリをつくる【Rubicon-ObjC】]]></title><description><![CDATA[
 はじめに
a-Shell で、SF Symbols の一覧を出す簡単なアプリをつくります。


今まで紹介したパッケージライブラリを使い、端末内にある SF Symbols データの取り出し、表示までをハンズオン形式で実装していきます。
!
App Store へ公開はできません


 全 3 部構成の第 3 部です
この記事を含め、3 部構成で解説をします。
記事内の掲載コードは、コピーして貼り付ければ動くようにしています。


【導入編】#1: a-Shell(mini) アプリでアプリをつくる【Rubicon-ObjC】

1 ファイルのみの簡易な実装
a-Shell 実行の大...]]></description><link>https://zenn.dev/pometa/articles/b362af314c0cd2</link><guid isPermaLink="true">https://zenn.dev/pometa/articles/b362af314c0cd2</guid><pubDate>Sat, 15 Mar 2025 02:34:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4QtnzFX5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%25B6%25E4%25BD%259C%25E7%25B7%25A8%25E3%2580%2591%25233%253A%2520a-Shell%2528mini%2529%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A6%25E3%2582%2599%25E3%2582%25A2%25E3%2583%2595%25E3%2582%259A%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E3%2580%2590Rubicon-ObjC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259D%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25B3%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YWQ4Nzc5MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ポメラニアン太郎</dc:creator></item><item><title><![CDATA[【準備編】#2: a-Shell(mini) アプリでアプリをつくる【Rubicon-ObjC】]]></title><description><![CDATA[
 はじめに
iPhone, iPad の無料アプリa-Shell を使って、UIKit を呼び出し、アプリをつくります。
!
App Store へ公開はできません

今回の View の表示結果は、前回と変わりありません。1 ファイル（singleFileSample.py）だったコードをパッケージ化し、煩雑さの回避、取り回しをよくするのが目的です。
今後訪れるアプリ開発においても、実装したいコードに集中できる利点もあります。

分割作業と同時にコードの説明をします。不明瞭な部分の解決に繋がれば幸いです。

 全 3 部構成の第 2 部です
この記事を含め、3 部構成で解説をします。...]]></description><link>https://zenn.dev/pometa/articles/a3f471d667f997</link><guid isPermaLink="true">https://zenn.dev/pometa/articles/a3f471d667f997</guid><pubDate>Sat, 15 Mar 2025 02:34:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P-FKCXRU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25BA%2596%25E5%2582%2599%25E7%25B7%25A8%25E3%2580%2591%25232%253A%2520a-Shell%2528mini%2529%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E3%2580%2590Rubicon-ObjC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259D%25E3%2583%25A1%25E3%2583%25A9%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25B3%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5YWQ4Nzc5MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ポメラニアン太郎</dc:creator></item><item><title><![CDATA[Browser-Use-Web-UIをDockerで試しました]]></title><description><![CDATA[私は、Windows11で、Browser Use Web UIを使おうとしました。
でも、このようなエラーが出ました。
エラーの一部を掲載します。
(web-ui) PS D:\○○\browser-use\web-ui&gt; copy .env.example .env                         
(web-ui) PS D:\○○\browser-use\web-ui&gt; python webui.py --ip 127.0.0.1 --port 7788     
INFO     [browser_use] BrowserUse logging se...]]></description><link>https://zenn.dev/masaru21/articles/bf6c99be708f9f</link><guid isPermaLink="true">https://zenn.dev/masaru21/articles/bf6c99be708f9f</guid><pubDate>Sat, 15 Mar 2025 00:45:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--intXJlVR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Browser-Use-Web-UI%25E3%2582%2592Docker%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonely_creator_m%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lonely_creator_m</dc:creator></item><item><title><![CDATA[リアルタイム文字起こしアプリをstreamlitで作成してみよう！]]></title><description><![CDATA[最近、テック系イベントのブースでリアルタイム文字起こしのデモを見る機会があって、whisperとstreamlitでローカル環境のみで実行出来たら面白いなと思い作成してみましたClaude君に作成してもらいました。

 文字起こし画面

*カラオケしてます

 github
https://github.com/tsuzukia21/st-realtime-transcribe

 streamlit-webrtc
streamlitで画像/音声処理をリアルタイムで行うカスタムコンポーネントを作成されている方がいましたので、それを使って音声を取り込みます。
https://zenn.de...]]></description><link>https://zenn.dev/tsuzukia/articles/ca4704708c1066</link><guid isPermaLink="true">https://zenn.dev/tsuzukia/articles/ca4704708c1066</guid><pubDate>Fri, 14 Mar 2025 15:31:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LmJXP5R---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592streamlit%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TSUZUKIA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYmY4NGExNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TSUZUKIA</dc:creator></item></channel></rss>