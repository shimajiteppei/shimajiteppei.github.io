<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 13 May 2025 00:37:28 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[なぜ生成AIはTypeScriptでコードを書くのか？AI駆動開発に必要な最低限のTypeScript知識]]></title><description><![CDATA[
 TypeScriptはAI駆動開発に必須？
AI駆動スタイルでwebサイトやwebアプリを開発しようとした時に、TypeScriptが即時に選ばれた経験ありませんか？
もちろん条件や環境によっては他言語が選ばれますが、私は技術選定をお任せにした上で個人開発を行ってみると、ほぼすべてのプロジェクトでTypeScriptが選ばれました。

↑先日作ったwebアプリの言語選定(別途記事にする予定です)
私自身「JavaScriptをより扱いやすくした言語？」くらいの認識しかなかったのでこれを機に色々と調べてみたのですが、TypeScriptはAIにとって非常に扱いやすい言語 のようです。
...]]></description><link>https://zenn.dev/headwaters/articles/20250508-typescript-ai-development</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/20250508-typescript-ai-development</guid><pubDate>Mon, 12 May 2025 23:23:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2GlnJ8an--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AFTypeScript%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259FAI%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2581%25AETypeScript%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%259B%25E3%2581%25A8%25E3%2581%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyZGJmYjNkNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>せとぅ</dc:creator></item><item><title><![CDATA[#96　JavaScriptのシャローコピーとディープコピーについて]]></title><description><![CDATA[
 はじめに
Reactでイミュータブルを意識して実装をするにはImmerというライブラリを使うと良いということで色々調べてみると、オブジェクトのコピーに関して曖昧な理解をしていたことを実感しました。
そこで今回は、JavaScriptのシャローコピーとディープコピーについて備忘録としてまとめていきたいと思います。

 シャローコピー

 シャローコピーとは
MDN Web Docs 用語集では以下のように説明されています。

オブジェクトのシャローコピーとは、コピーがコピー元のオブジェクトとプロパティにおいて同じ参照を共有する（同じ基礎値を指す）コピーのことを指します。その結果、コピー...]]></description><link>https://zenn.dev/nxted_sapporo/articles/78ce70590400a4</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/78ce70590400a4</guid><pubDate>Mon, 12 May 2025 13:55:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IK-Jlt1D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252396%25E3%2580%2580JavaScript%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2597%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[[メモ]: ??と||演算子のメモ]]></title><description><![CDATA[
 ??と||ような演算子のメモ
たまに使用するときに間違えるので簡単なメモ

 ??

ECMAScript2020(ES11)で追加された比較的新しい文法
左辺の値がnullかundefinedのときだけ右辺の値を返す
基本は左辺の値を返す

const result = user ?? "John Doe";
// userがnull | undefinedのときはJohn Doe"
// それ以外はuserを返す

 ||

論理和演算子
オペランドの値が1つでもtrueがある場合、trueになる。

false, 0, "", NaN, nullまたはundefinedはfal...]]></description><link>https://zenn.dev/mitate_gengaku/articles/js-nullish-operator-memo</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/js-nullish-operator-memo</guid><pubDate>Mon, 12 May 2025 13:12:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s9Ve-BCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E3%2583%25A1%25E3%2583%25A2%255D%253A%2520%253F%253F%25E3%2581%25A8%257C%257C%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[React Email で HTML メールを作成・送信する]]></title><description><![CDATA[
 React Email とは
https://react.email/
React Email は、React コンポーネントを使用してメールテンプレートを構築するためのフレームワークです。
HTML メールの複雑さを抽象化し、開発者が使い慣れた React でメールを作成できるようにするものです。
主な特徴は以下です。

React ベース: 使い慣れた React コンポーネントでメールを設計
レスポンシブ対応: 様々なデバイスでの表示に最適化
再利用可能なコンポーネント: 一貫したデザインを実現
型安全: TypeScript によるサポート
プレビュー機能: 開発中にリアルタ...]]></description><link>https://zenn.dev/microcms/articles/94d7f0b87fe31c</link><guid isPermaLink="true">https://zenn.dev/microcms/articles/94d7f0b87fe31c</guid><pubDate>Mon, 12 May 2025 11:47:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4DgBlW8D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Email%2520%25E3%2581%25A7%2520HTML%2520%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2583%25BB%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3NWY4MDNiMWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEmicroCMS%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGU2OTJiOTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山とコード</dc:creator></item><item><title><![CDATA[manabaの期日前リマインドをお手軽に実装した話]]></title><description><![CDATA[
 経緯
うちの大学ではLMSとしてmanabaが導入されています。
しかしながらですね、このmanabaくん結構曲者でして、、、
なにかと言いますと、
「課題の締め切りが近くなったら通知してくれる機能がない！！」
ええ、そうなんです。多分学生でも一番欲しい機能No1になるくらいの機能がないんですよね。
このせいで、何度課題を逃したことか
ということで、この期日前通知が届く様にGASを少し作ったので紹介。

 前提
manabaのAPI(そもそもない)だったり、ページを直接スクレイピングしたりすると、わんちゃんサーバーダウンに繋がりかねないので、課題公開時にメールとして届く文章から必要な...]]></description><link>https://zenn.dev/seiwell/articles/a39fab80cdb146</link><guid isPermaLink="true">https://zenn.dev/seiwell/articles/a39fab80cdb146</guid><pubDate>Mon, 12 May 2025 08:19:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---3jYmzzT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:manaba%25E3%2581%25AE%25E6%259C%259F%25E6%2597%25A5%25E5%2589%258D%25E3%2583%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ruis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5MGVkYzQxMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ruis</dc:creator></item><item><title><![CDATA[トークンのコントラクトアドレスから価格を取得]]></title><description><![CDATA[JavaScriptはウェブの開発において欠かせないプログラミング言語です。
Web開発初心者でもチュートリアルを見ながら簡単に学べるのが最大の魅力。
DEXをいじる時はPythonよりJavaScriptの方が全然扱いやすいです。
下記を参考に
https://docs.uniswap.org/sdk/v3/overview
npm i --save @uniswap/v3-sdk
npm i --save @uniswap/sdk-core
をインストール。
]]></description><link>https://zenn.dev/satorusugaya/articles/67d3828c392950</link><guid isPermaLink="true">https://zenn.dev/satorusugaya/articles/67d3828c392950</guid><pubDate>Mon, 12 May 2025 05:02:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8-6HNtBc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E4%25BE%25A1%25E6%25A0%25BC%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258F%2585%25E8%25B0%25B7%25E8%25A6%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiYzQ5NDA0ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>菅谷覚</dc:creator></item><item><title><![CDATA[「e.preventDefault()」とは？]]></title><description><![CDATA[
 e.preventDefault()とは
submitイベントでフォームの送信ボタンを押すとブラウザのデフォルト動作でページがリロードされてしまいます。
こちらのリロードを防げるためにはe.preventDefault()が必要です。
const handleSubmit = async (e: React.FormEvent&lt;HTMLFormElement&gt;) =&gt; {
    e.preventDefault(); // ✅リロード防止
    //...フォームの内容をJSで処理（例：fetchでAPIに送信）
};


フォーム送信時にページリロードなしで、...]]></description><link>https://zenn.dev/hyoni/articles/4e0873fa961a46</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/4e0873fa961a46</guid><pubDate>Mon, 12 May 2025 03:50:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gea3ck8---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258Ce.preventDefault%2528%2529%25E3%2580%258D%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[JavaScriptにおける undefined と null の違いを整理する]]></title><description><![CDATA[
 はじめに
JavaScriptを学び始めたときに、undefined と null の違いでつまずいたことはありませんか？
私自身、最初はどちらも「値がない」状態のように見えて、
どう使い分けるべきなのか混乱していました。
本記事では、undefined と null の違いを、
基本の考え方から実務での使い分けまで整理してみます。

 1. undefined とは
undefined は、「まだ値が代入されていない」ことを表す値です。

 例：変数を宣言しただけの状態
let name;
console.log(name); // undefined
変数 name は宣言されて...]]></description><link>https://zenn.dev/fd2025/articles/a29cf92a9e12db</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/a29cf92a9e12db</guid><pubDate>Mon, 12 May 2025 00:09:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pmhHzT9g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%2520undefined%2520%25E3%2581%25A8%2520null%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[UUIDを絵文字にするライブラリを作った]]></title><description><![CDATA[
 概要
暇つぶしにネットサーフィンをしていて、次のような記事を見つけました。こちらの記事では、UUIDをBase58にエンコードすることで、URLをスッキリさせるライブラリが紹介されています。
https://zenn.dev/yoshinani_dev/articles/001be9fd0377b3
スッキリするのは素敵ですが、無機質な文字の羅列では愛が足りないと感じたので、UUIDをすべて絵文字で表現するライブラリを作成してみました。

 どんな感じ
たとえば、こんな無機質なUUIDが：
https://example.com/resource/87040469-7443-4416...]]></description><link>https://zenn.dev/pompompudding/articles/b930ef9e72fc81</link><guid isPermaLink="true">https://zenn.dev/pompompudding/articles/b930ef9e72fc81</guid><pubDate>Sun, 11 May 2025 14:40:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L7fbQHmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UUID%25E3%2582%2592%25E7%25B5%25B5%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4MzA0N2JiZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アルパカ</dc:creator></item><item><title><![CDATA[【完全無料化】GSAP有料だったプラグインの中で気になってたもの使ってみたまとめ📚]]></title><description><![CDATA[先日Webflow のサポートにより、GSAP ライブラリ全体が 100 % 無料になり個人・商用を問わず利用可能との発表がありました。これまで使う機会がなかった有料プラグインに絞って、今回改めて使い方などを気になったものを解説してみます。

 SplitText
HTML要素内のテキストを個々の文字、単語、行（それぞれが新しく作成された要素）に分割することができます。スクリーンリーダーへの自動アクセシビリティ、表示効果のためのマスク、レスポンシブな再分割など、高度な設定が可能になります。

 使い方
分割したい要素に対して SplitText.create() を実行します。
デフォル...]]></description><link>https://zenn.dev/nami_y/articles/9c40552d8a0743</link><guid isPermaLink="true">https://zenn.dev/nami_y/articles/9c40552d8a0743</guid><pubDate>Sun, 11 May 2025 14:15:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--78x2P2xu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E7%2584%25A1%25E6%2596%2599%25E5%258C%2596%25E3%2580%2591GSAP%25E6%259C%2589%25E6%2596%2599%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259F%25E3%2582%2582%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nami_y%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hyQ2tIb0hXWWNUWDBGeHRoakFhU3hIUExSSVJjcXkxaThCUFdNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nami_y</dc:creator></item><item><title><![CDATA[【Vue.js】DBの内容をセレクトボックスに表示させる]]></title><description><![CDATA[
 完成イメージ

DBの内容をフロントエンド（Vue）で表示させる

 【前提】環境構築が完了していること
https://zenn.dev/code_journey_ys/articles/9dab988afbca82
https://zenn.dev/code_journey_ys/articles/a76166094f9e3c
ここから、Django側でモデル → シリアライザー → ビューの順で記述する。

 １．【Django】モデルの作成
backend/api/models.pyの内容
backend/api/models.py
from django.db import...]]></description><link>https://zenn.dev/code_journey_ys/articles/162b9a95b06ff8</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/162b9a95b06ff8</guid><pubDate>Sun, 11 May 2025 10:10:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lJORlcKK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue.js%25E3%2580%2591DB%25E3%2581%25AE%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E3%2582%25BB%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[TypeScript 配列メソッド]]></title><description><![CDATA[
 📝よく使いそうなやつメモ( ..)φ
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array

 concat
2 つ以上の配列を結合するために使用します。
このメソッドは既存の配列を変更せず、新しい配列を返します。
const array1: number[] = [1, 2, 3, 4, 5];
const array2: number[] = [6, 7, 8, 9, 10];
const array3: number[] = array1.concat(array2...]]></description><link>https://zenn.dev/tspk/articles/915761a3011219</link><guid isPermaLink="true">https://zenn.dev/tspk/articles/915761a3011219</guid><pubDate>Sun, 11 May 2025 07:47:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zt0JIgZ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E9%2585%258D%25E5%2588%2597%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B7%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRaUk5ISjNvUTRveHRBeGZBcVh5Y2RlVV9HbUxldnlQVUFiNUhMcU4ybUVZVVpsM2E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぷっけ</dc:creator></item><item><title><![CDATA[JavaScriptでGitHub APIを実行しリポジトリのスター数を取得する]]></title><description><![CDATA[
 １．はじめに
ポートフォリオなどにGitHubリポジトリのスター数を載せる際、以下のように画像形式で掲載することが多いかと思います。
一方で、WEBページに直接文字列として取得したい場合、下記方法は使用できません。
![img.shields.io](https://img.shields.io/github/stars/zenn-dev =150x)

そこで、今回はGitHubリポジトリのスター数を取得するJavaScriptコードを紹介します。
以下2パターン用意してみました。

特定のリポジトリのスター数を取得する
全リポジトリを合わせた総スターを取得する

ただし、GitH...]]></description><link>https://zenn.dev/is0383kk/articles/da866db55e6758</link><guid isPermaLink="true">https://zenn.dev/is0383kk/articles/da866db55e6758</guid><pubDate>Sat, 10 May 2025 16:56:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WB6_kIKP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7GitHub%2520API%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E6%2595%25B0%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZDIwMDdjOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨ</dc:creator></item><item><title><![CDATA[『RPGツクールMZ』[ピクチャの表示]を調べてみた]]></title><description><![CDATA[『RPGツクールMZ』関連記事 目次
『RPGツクールMZ』の[ピクチャの表示][ピクチャの移動][ピクチャの回転][ピクチャの色調変更][ピクチャの消去]といったピクチャ関連イベントコマンドがコアスクリプト(JavaScript)でどのように実装されているかを調べます。
ピクチャは利用要求が高い割におざなりな作りのコマンドで、その辺もーちょっと便利になるように改造したプラグイン作れないものかな、と思いまして。
というか⋯すでにいくつもあるような気もしますが。
例によって『RPGツクールMZ』非公式JavaScriptリファレンス のページにクラスなどリンクします。
難しい単語は『RPG...]]></description><link>https://zenn.dev/tonbi/articles/a4aa5a08744f55</link><guid isPermaLink="true">https://zenn.dev/tonbi/articles/a4aa5a08744f55</guid><pubDate>Sat, 10 May 2025 14:04:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rKkt3Dfl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258ERPG%25E3%2583%2584%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25ABMZ%25E3%2580%258F%255B%25E3%2583%2594%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25AE%25E8%25A1%25A8%25E7%25A4%25BA%255D%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2581%25B3%2540%25E9%25B3%25B6%25E5%25B6%258B%25E5%25B7%25A5%25E6%2588%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBYl9FRlAtZm9RQU1pN1VoM3hzYkNyQXZUSTZjUDFkZGJJMWJrPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんび@鳶嶋工房</dc:creator></item><item><title><![CDATA[JavaScriptでABC405(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc405

 A - Is it rated?
https://atcoder.jp/contests/abc405/tasks/abc405_a
言われた通りifの条件を書くだけ
https://atcoder.jp/contests/abc405/submissions/65630962
1分40秒 AC
遅いって、2分もかけるんじゃないよこれに

 B - Not All
https://atcoder.jp/contests/abc405/tasks/abc405_b
「実際にやってみた」すればOK
一回誤読して「どこで...]]></description><link>https://zenn.dev/aya_koto/articles/c63aa2256ee0af</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/c63aa2256ee0af</guid><pubDate>Sat, 10 May 2025 13:54:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wjJnMJnp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC405%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[高校情報Ⅰ JavaScript]]></title><description><![CDATA[高校生の情報の教科書　実教出版 令和4年1月20日発行の　「情報Ⅰ javaScript」
を読んだので書評をここに書く。
https://www.jikkyo.co.jp/book/detail/22023322

 出版社について
実教出版という名前の出版社は聞いたことがない人が多いと思うが、
工業高校向けの情報工学の本をシリーズで出している唯一の出版社です。
採算が合わないせいか、工業高校の情報の教科書を出せるところがないのでしょう。
工業高校は全国で56校しかないので、
そのうち情報科がある高校というと結構限られていると思います。
工業高校全てに情報科があるとして、
一冊あたり、...]]></description><link>https://zenn.dev/oto/articles/1ed01b2c9299b3</link><guid isPermaLink="true">https://zenn.dev/oto/articles/1ed01b2c9299b3</guid><pubDate>Sat, 10 May 2025 13:41:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XiPsRn96--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E6%25A0%25A1%25E6%2583%2585%25E5%25A0%25B1%25E2%2585%25A0%2520JavaScript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otogawa%2520Katsutoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiZTMxMWQ2YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Otogawa Katsutoshi(oto)</dc:creator></item><item><title><![CDATA[LeetCode #14. Longest Common Prefixやってみた]]></title><description><![CDATA[
 問題 (Easy)
Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".
→ 詳細

 問題を理解する (5分)
文字列が入った配列を受け取り、そのすべての要素の中の文字列の始まりが共通である最長の文字を返す。
例）
Input: strs = ["flower","flow","flight"]
Output: "fl"

 解き方を日本語で組み立てる...]]></description><link>https://zenn.dev/akinko0915/articles/93aa666247f375</link><guid isPermaLink="true">https://zenn.dev/akinko0915/articles/93aa666247f375</guid><pubDate>Sat, 10 May 2025 12:58:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7Ym8lhcp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520%252314.%2520Longest%2520Common%2520Prefix%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akinko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSy13cHdwSE5jYThHWWJKMHBCb0NRU3A3WFlZd3Q0Wjc5SFY3clVhWENIUmFpSTlXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akinko</dc:creator></item><item><title><![CDATA[Next.jsのインフラ構成案]]></title><description><![CDATA[
 Next.js × AWSで実現するWebアプリのインフラ構成
こんにちは、オアシステクノロジーズの古本です！
今回は Next.jsをAWSにデプロイする際の構成パターンと実装の考え方 について紹介します。


 🏗 インフラ構成の代表パターン3選

 ① 静的ホスティング構成（SSG + CDN）


next export でビルドし、S3 + CloudFrontでホスティング
シンプル・安価で高速
完全静的なWebサイト向き（LPやドキュメント）


 ② Lambda@Edge構成（VercelライクなSSR構成）


serverless-next.js などで構築
グ...]]></description><link>https://zenn.dev/oasys/articles/b1cec4ed947c62</link><guid isPermaLink="true">https://zenn.dev/oasys/articles/b1cec4ed947c62</guid><pubDate>Sat, 10 May 2025 11:30:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LcPlEWA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2583%25A9%25E6%25A7%258B%25E6%2588%2590%25E6%25A1%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMGUxYmY0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オアシステクノロジーズ</dc:creator></item><item><title><![CDATA[【JavaScript】string -> booleanへの変換]]></title><description><![CDATA[
 1. 厳密等価演算子を使う
一番お手軽かもしれないです.
const str = 'true';
const bool = (str === 'true');
console.log(bool); // true ✅

const str2 = 'false';
const bool2 = (str2 === 'true');
console.log(bool2); // false ✅
大文字小文字を区別したくなければtoLowerCase()を付ければいいです.

 2. JSON.parse()を使う
こんな方法もあります. 個人的にはちょっとキモく感じる.
const str...]]></description><link>https://zenn.dev/r64/articles/2fab206e817d42</link><guid isPermaLink="true">https://zenn.dev/r64/articles/2fab206e817d42</guid><pubDate>Sat, 10 May 2025 09:10:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hqcq7AKt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591string%2520-%253E%2520boolean%25E3%2581%25B8%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ruka64%2528%25E3%2582%258B%25E3%2581%258B%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBiZDlmOWU5NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ruka64(るか)</dc:creator></item><item><title><![CDATA[Jestで非同期のテスト方法について]]></title><description><![CDATA[
 はじめに
Jestの基礎はざっくり理解したので、非同期テスト方法の方法ついて学びたいと思いました。
Jestの基礎がある程度分かっている方が対象になります。

 この記事で学べること
async/awaitを使用した非同期の場合や、コールバック関数を使用した場合のテストケースの作成方法について学べます。

 動作環境

OS：macOS Sequoia 15.1.1
Node.js：22.6.0
npm：10.8.2
Jest：29.7.0


 インストール方法
Jestの環境構築についてはこちらをご確認ください。

 基本的な使い方
非同期のテストの場合はtest関数にasync...]]></description><link>https://zenn.dev/tsubasa0509/articles/779ff3382bade6</link><guid isPermaLink="true">https://zenn.dev/tsubasa0509/articles/779ff3382bade6</guid><pubDate>Sat, 10 May 2025 08:34:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sPwftl6X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TSUBASA_KK%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TSUBASA_KK</dc:creator></item></channel></rss>