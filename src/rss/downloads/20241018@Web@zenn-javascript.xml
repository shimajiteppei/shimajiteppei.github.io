<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 18 Oct 2024 07:36:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[配列操作]]></title><description><![CDATA[
 まとめ

 配列操作/push, pop
push とは配列の末尾(後ろ)に新しい要素を追加するためのメソッド
fruits = ['apple', 'orange', 'banana'];
console.log(fruits);
fruits.push('strawberry');
console.log(fruits);
//["apple", "orange", "banana", "strawberry"]
popメソッドを使って配列の最後の要素を削除する
fruits = ['apple', 'orange', 'banana'];
console.log(fruits)...]]></description><link>https://zenn.dev/akanesi/articles/02cf06510d2dfe</link><guid isPermaLink="true">https://zenn.dev/akanesi/articles/02cf06510d2dfe</guid><pubDate>Fri, 18 Oct 2024 01:52:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wt3D5_Y2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%25A4%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YjYyNWJhZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みつい</dc:creator></item><item><title><![CDATA[Web Components を実装して理解する]]></title><description><![CDATA[
 Web Components とは
Web Components は、再利用可能なカプセル化された オリジナルの HTML タグを作成できる技術です。
Web 標準の技術で、モダンブラウザではサポート済みの技術となっています。
この技術を使うことで、React や Vue など特定のフレームワークに依存しない標準化されたコンポーネントを作成することができます。
Web Components を理解する上で主要な技術は以下の3つです。

 カスタム要素
カスタム要素は、独自のHTMLタグを定義し、再利用可能なコンポーネントを作成するための仕組みです。
これにより、アプリケーションに必要...]]></description><link>https://zenn.dev/t0daaay/articles/f3a91b3167a059</link><guid isPermaLink="true">https://zenn.dev/t0daaay/articles/f3a91b3167a059</guid><pubDate>Fri, 18 Oct 2024 01:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xxbhlpyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%2520Components%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzZjZlYWU1ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つじ</dc:creator></item><item><title><![CDATA[Vue3 + Vite + JavaScript でプロジェクト作成]]></title><description><![CDATA[
 はじめに
Vue CLI から Vite に移行することにしました。噂の通り Vite はとても速いです！タイトルは「Vue3 + Vite + JavaScript でプロジェクト作成」としましたが恐らく Vue や JavaScript 以外も同じです。

 環境

Ubuntu Server
Node v22.9.0
npm


 プロジェクト作成手順

プロジェクトの作成$ npm create vite@latest
後は画面に従ってプロジェクト名 (この例では「your_project_name」) やフレームワーク (この例では 「Vue」)、Variant (この例で...]]></description><link>https://zenn.dev/15bluefortran/articles/e81ebee62896a2</link><guid isPermaLink="true">https://zenn.dev/15bluefortran/articles/e81ebee62896a2</guid><pubDate>Thu, 17 Oct 2024 21:43:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PAXX8y-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%2520%252B%2520Vite%2520%252B%2520JavaScript%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:K%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlKaklHWTlqc3JjcFhuZFctLVlvVlJxNkFROXlicmhiN1AxVlV2aHJxT0VzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>K</dc:creator></item><item><title><![CDATA[マツコの知らないJavascriptと派生言語の世界]]></title><description><![CDATA[
 JavaScriptの歴史
JavaScriptは1995年にBrendan Eichによって開発されました。最初はNetscape Navigatorというウェブブラウザに組み込まれ、インタラクティブなウェブページを作成するためのスクリプト言語として設計されました。当初は「Mocha」という名前でしたが、後に「LiveScript」、そして最終的に「JavaScript」と改名されました。名前の由来には、当時人気があったプログラミング言語「Java」の名前を借りてマーケティング効果を狙った背景がありますが、技術的にはJavaとは異なる言語です。

 ECMAScriptとの関係
J...]]></description><link>https://zenn.dev/qitaaa/articles/4c7c12e5a1c17d</link><guid isPermaLink="true">https://zenn.dev/qitaaa/articles/4c7c12e5a1c17d</guid><pubDate>Thu, 17 Oct 2024 14:07:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HKgGUTya--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%2584%25E3%2582%25B3%25E3%2581%25AE%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584Javascript%25E3%2581%25A8%25E6%25B4%25BE%25E7%2594%259F%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E4%25B8%2596%25E7%2595%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qitar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmZGNmMTg3OTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qitar</dc:creator></item><item><title><![CDATA[Vueについて④（リアクティブについて）]]></title><description><![CDATA[Vueについて③からの続き
ひとまずおさらいです。
Vue.jsはリアクティビティシステムになっていないJavaScriptに対して
Vueが提供している、ref関数というものを使用してデータの受け渡しを楽にします。
そのやり方は
&lt;script setup&gt;
import { ref } from 'vue'

let number = ref(9999)
const title = ref('Nyan programer')
const info = ref({
  nyans: 100,
  churu: 4
})

&lt;/script&gt;

&lt;templ...]]></description><link>https://zenn.dev/y_usausa/articles/62f64c6891fa13</link><guid isPermaLink="true">https://zenn.dev/y_usausa/articles/62f64c6891fa13</guid><pubDate>Thu, 17 Oct 2024 12:32:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BJKIabkT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E2%2591%25A3%25EF%25BC%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyan_pro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NGRiZDM2ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyan_pro</dc:creator></item><item><title><![CDATA[JavaScriptにおける非同期処理、Promise、エラーハンドリングの基本]]></title><description><![CDATA[
 はじめに
Webアプリケーション開発において、非同期処理は避けて通れない重要なトピックです。特に画像の読み込みやAPIリクエストなど、時間のかかる操作を扱う際に適切な非同期処理が不可欠です。この記事では、非同期処理の基本、Promiseの活用、そしてエラーハンドリングについて解説します。

 非同期処理の基本
JavaScriptは単一スレッドで動作しますが、非同期処理を利用することで、長時間かかる処理を待たずに次の処理を実行できます。
console.log("Start");
setTimeout(() =&gt; {
  console.log("Timeout");
}, 0...]]></description><link>https://zenn.dev/sarap422/articles/01d9b27c1ff16c</link><guid isPermaLink="true">https://zenn.dev/sarap422/articles/01d9b27c1ff16c</guid><pubDate>Thu, 17 Oct 2024 02:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8sSsv6RE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2581Promise%25E3%2580%2581%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarap422%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarap422</dc:creator></item><item><title><![CDATA[【JavaScript】jQueryで実装していたコードをVanilla JSに書き換え]]></title><description><![CDATA[
 やること
Enterキーを押したときに次の入力フィールドに自動的にフォーカスを移動させる機能を実装しています。
jQueryで実装しているものをVanila JSに書き直してみます。

 jQuery
$(":input").on("keydown", function (event) {
    if (event.which === 13 &amp;&amp; !$(this).is("textarea, :button, :submit")) {
        event.stopPropagation();
        event.preventDefault();

...]]></description><link>https://zenn.dev/zead/articles/3ed3c672721de2</link><guid isPermaLink="true">https://zenn.dev/zead/articles/3ed3c672721de2</guid><pubDate>Thu, 17 Oct 2024 01:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cy_oH1UP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591jQuery%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592Vanilla%2520JS%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tomiyama%252Cmasahiko%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMTI4MzAyMjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B8%25E3%2583%25BC%25E3%2583%2589%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlEYkk1RmFrN0NoQlBCbnVJWWliNkFGS0hSUnk3dUd4aFBDTTVWMFpqOWhmT3NBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomiyama,masahiko</dc:creator></item><item><title><![CDATA[Vueについて③（クリック時の処理とリアクティビティ）]]></title><description><![CDATA[Vue②から続き
何かを押したら何かの処理が実行されるという処理を書いていきます。
例えば&lt;button&gt;ボタン&lt;/button&gt;を&lt;template&gt;に追加し、ボタンが押されたら何か実行されるというのを作ります。
&lt;button&gt;タグに属性として@を付けて、その後にイベントの名前（今回はclick)をつけて、属性値に実行したい関数名を記入します。
今回の関数は増えるという意味のincrimentを付けて、ボタンがクリックされたらconsole.logにクリック！という文字が出るようにします。
&lt;script setup&gt;
co...]]></description><link>https://zenn.dev/y_usausa/articles/bc10e76a7e8a7e</link><guid isPermaLink="true">https://zenn.dev/y_usausa/articles/bc10e76a7e8a7e</guid><pubDate>Wed, 16 Oct 2024 14:03:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uvgrJB1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E2%2591%25A2%25EF%25BC%2588%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E6%2599%2582%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyan_pro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NGRiZDM2ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyan_pro</dc:creator></item><item><title><![CDATA[Programmable Search Engineで入力欄が複数]]></title><description><![CDATA[忘れないうちにメモしとこうという走り書き。
走り書きでもいいからとりあえず残す癖をつけようという偉い俺。
ググるのも面倒だったってのはあるけど
Programmable search engine
検索結果は1つだけど入力エリアを複数設けたい場合は
&lt;div class='gcse-searchbox' gname='sitesearch'&gt;&lt;/div&gt;
を設置せずこう。
searchForms.forEach((searchForm) =&gt; {
    searchForm.addEventListener('submit', (e) =&gt; hand...]]></description><link>https://zenn.dev/cyocun/articles/e70aed9e62045b</link><guid isPermaLink="true">https://zenn.dev/cyocun/articles/e70aed9e62045b</guid><pubDate>Wed, 16 Oct 2024 13:00:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z4-ij_bd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Programmable%2520Search%2520Engine%25E3%2581%25A7%25E5%2585%25A5%25E5%258A%259B%25E6%25AC%2584%25E3%2581%258C%25E8%25A4%2587%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cyocun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWN29XNGpTMlJqRFhZU1lPUGtJMVVxTDhFdWRFM05VQXVwdFJmc0w4PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cyocun</dc:creator></item><item><title><![CDATA[k6 DevTools recorder を使ってみた]]></title><description><![CDATA[
 k6 DevTools recorder とは
k6 のブラウザテストのスクリプトを生成してくれるツール（Chrome 拡張機能）です。
Chrome DevTools Recorder を使って記録したフローをスクリプトに変換してくれます。
https://grafana.com/docs/k6/latest/using-k6/test-authoring/create-tests-from-recordings/using-the-devtools-recorder/

 使ってみる
Create a script from a recording に使い方が書いてあります。
C...]]></description><link>https://zenn.dev/z63d/articles/0da90534fe5964</link><guid isPermaLink="true">https://zenn.dev/z63d/articles/0da90534fe5964</guid><pubDate>Wed, 16 Oct 2024 12:00:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q4S1uO8s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:k6%2520DevTools%2520recorder%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:z63d%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMTEyYTA4OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>z63d</dc:creator></item><item><title><![CDATA[その js の設定ファイル補完効くかもよ]]></title><description><![CDATA[
 はじめに
Next.js のプロジェクトを作成すると、設定ファイルの next.config.js にこんな記述があります。

next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {};

この JSDoc コメントの @type タグは値に型を付与することができます。
import('next').NextConfig 部分はインポート型と呼ばれ TypeScript の型定義ファイルから型をインポートして取得することができます。
このコメントがあるおかげでエディタは宣言された変数の型...]]></description><link>https://zenn.dev/k0rosuke/articles/35e1fbd83719a0</link><guid isPermaLink="true">https://zenn.dev/k0rosuke/articles/35e1fbd83719a0</guid><pubDate>Wed, 16 Oct 2024 09:30:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LfUsT3nd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2581%25AE%2520js%2520%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25A3%259C%25E5%25AE%258C%25E5%258A%25B9%25E3%2581%258F%25E3%2581%258B%25E3%2582%2582%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:korosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmODcxM2MxMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>korosuke</dc:creator></item><item><title><![CDATA[JavaScriptのプロトタイプチェーンをちょっと理解する]]></title><description><![CDATA[
 1. はじめに
JavaScriptはプロトタイプベースのオブジェクト指向言語であり、そのコアにはプロトタイプチェーンという概念が存在します。上級者として、プロトタイプチェーンの内部メカニズムを深く理解することで、コードのパフォーマンス最適化や高度なデザインパターンの実装が可能になります。本記事では、プロトタイプチェーンの詳細とその応用について解説します。

 2. プロトタイプの基本概念

 __proto__とprototypeの違い


__proto__：各オブジェクトが持つ内部プロパティで、そのオブジェクトのプロトタイプを参照します。

prototype：関数オブジェクト...]]></description><link>https://zenn.dev/tcool/articles/a13eb7b43dd7e8</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/a13eb7b43dd7e8</guid><pubDate>Tue, 15 Oct 2024 13:25:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ik4wh32u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[Bun で JavaScript からC言語を実行する]]></title><description><![CDATA[
 はじめに
JavaScriptはウェブ開発で広く使われていますが、場合によっては低レベルの処理や高性能な計算が必要になることがあります。そんなときに役立つのが、C言語との連携です。Bunは高速なJavaScriptランタイムであり、FFI（Foreign Function Interface）をサポートしています。本記事では、JavaScriptプログラマ向けにBunを使ってC言語のコードを実行する方法を解説します。

 FFIとは
FFI（Foreign Function Interface）は、あるプログラミング言語から別の言語で書かれた関数やライブラリを呼び出すための仕組みです...]]></description><link>https://zenn.dev/tcool/articles/4525aece77bcaf</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/4525aece77bcaf</guid><pubDate>Tue, 15 Oct 2024 13:18:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WFBjNpRK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bun%2520%25E3%2581%25A7%2520JavaScript%2520%25E3%2581%258B%25E3%2582%2589C%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[Vueについて②（ファイル、JSのデータ表示方法）]]></title><description><![CDATA[では今回から数回にわたってVueの特徴を見ていきます。
まず初めにメインファイルはindex.htmlで、その中の
 &lt;script type="module" src="/src/main.js"&gt;&lt;/script&gt;
でsrcフォルダのmain.jsのJavaScriptが実行されます。
ここまでは普通のJavaScript。
そしてmain.jsの内容は最初に名前付きimport文で
import { createApp } from 'vue'
を書き込みます。
これはViteがnode_modulesの中にあるVueフォルダの中のcreateAppからim...]]></description><link>https://zenn.dev/y_usausa/articles/05d8157740b35a</link><guid isPermaLink="true">https://zenn.dev/y_usausa/articles/05d8157740b35a</guid><pubDate>Tue, 15 Oct 2024 12:35:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_ztc7nRL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E2%2591%25A1%25EF%25BC%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2580%2581JS%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25A1%25A8%25E7%25A4%25BA%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyan_pro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NGRiZDM2ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyan_pro</dc:creator></item><item><title><![CDATA[JavaScript の Map 型をちょっと理解する]]></title><description><![CDATA[JavaScriptでデータを管理するとき、キーと値のペアを扱うことがよくあります。その際に便利なのがMap型です。Mapは、従来のObjectと似ていますが、より柔軟で強力な機能を持っています。
この記事では、Mapの基本的な使い方から、オブジェクトや配列をキーにする方法、そしてWebプログラミングでの実践的な活用例まで、具体的な例を使ってわかりやすく解説します。


 1. Mapとは何か？
Mapは、キーと値のペアを管理するデータ構造です。Objectと似ていますが、次のような特徴があります。


あらゆる型のキーが使える：文字列、数値、オブジェクト、配列、関数など、どんな型でもキ...]]></description><link>https://zenn.dev/tcool/articles/228edb365b1a3a</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/228edb365b1a3a</guid><pubDate>Tue, 15 Oct 2024 12:33:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OQmuNrmv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2581%25AE%2520Map%2520%25E5%259E%258B%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[JavaScriptで作る！ミニ言語のインタプリタ（５）〜JSONでプログラムを書く〜]]></title><description><![CDATA[
 はじめに
前回の記事では、組み込み関数の実装を行い、インタプリタが標準出力などを扱えるように拡張しました。今回は前回予告していた通り、JSON形式のプログラムを読み込んで実行できるようにします。
これまではJavaScriptで直に抽象構文木を記述していたため、「自作言語のプログラム」を外部に記述することは（evalなどを使わない限り）できませんでした。しかし、今回の拡張によってJSONとしてプログラムを記述しておき、必要に応じて読み込むことができるようになります。

 プログラムの記述例
まず、前回の記事で扱ったプログラムを再掲します。
const program = new Pr...]]></description><link>https://zenn.dev/nextbeat/articles/4fba4a70c2a6c3</link><guid isPermaLink="true">https://zenn.dev/nextbeat/articles/4fba4a70c2a6c3</guid><pubDate>Tue, 15 Oct 2024 02:38:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mamgptHW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2581%25E3%2583%259F%25E3%2583%258B%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25EF%25BC%2588%25EF%25BC%2595%25EF%25BC%2589%25E3%2580%259CJSON%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kmizu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MzM5NTFkZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:nextbeat%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YlNka1h3ZXdRZENWdDRvbHk0OUkyNkgyNi1IS2k0R2phNGdJdno9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmizu</dc:creator></item><item><title><![CDATA[学習のすすめになるJS（TypeScript）ライブラリ2選]]></title><description><![CDATA[
 素朴なライブラリを読むのは学習に大変おすすめ
ReactやVueのない純粋なJavaScriptコードを見るのであればこれらの素朴なライブラリをチェックするのは学習の面からとても大変おすすめです。
そんな初心者や読みやすく、意外に知られていない（筆者も今日知りました）ライブラリをいくつか紹介します。
これらのコードは1ファイル、index.ts を読むだけで、いわゆるフロントエンドフレームワークやライブラリに左右されない素朴なTypeScript(JavaScript)のコードを見ることができます。
知られていないといっても開発元はGitHubであり、一定の品質は担保されていると思っ...]]></description><link>https://zenn.dev/osiro/articles/f6bb1748305ce5</link><guid isPermaLink="true">https://zenn.dev/osiro/articles/f6bb1748305ce5</guid><pubDate>Tue, 15 Oct 2024 01:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EfnsM7KO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258BJS%25EF%25BC%2588TypeScript%25EF%25BC%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA2%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:webuilder240%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxNWM3OGQwOWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OSIRO%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5OWUzODgyNWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>webuilder240</dc:creator></item><item><title><![CDATA[Deno v2がリリース🎉 - Deno v1.0.0の頃からの変化と現在のプラクティスについて]]></title><description><![CDATA[Deno v2が正式にリリースされました🎉
https://deno.com/blog/v2.0
https://www.youtube.com/watch?v=d35SlRgVxT8
この記事では、Deno v1.0.0リリース時点からDeno v2.0.0までのリリースに渡って起きた大きな変更などについて、当時の状況と比較しつつまとめます。

 GoスタイルAPIの見直し - Web標準への準拠を高める

 Deno v1.0.0時点でのDenoのAPIの設計について
Deno v1.0.0の時点ではDenoにおける様々なAPIやコマンドなどがGoの影響を強く受けていました:
例)
...]]></description><link>https://zenn.dev/uki00a/articles/deno-v2-what-has-changed-from-v1</link><guid isPermaLink="true">https://zenn.dev/uki00a/articles/deno-v2-what-has-changed-from-v1</guid><pubDate>Mon, 14 Oct 2024 23:21:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h-ughzyX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%2520v2%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%2520%2520-%2520Deno%2520v1.0.0%25E3%2581%25AE%25E9%25A0%2583%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E5%25A4%2589%25E5%258C%2596%25E3%2581%25A8%25E7%258F%25BE%25E5%259C%25A8%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uki00a%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlMzg5NzFkZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uki00a</dc:creator></item><item><title><![CDATA[高階関数(map/filter)]]></title><description><![CDATA[
 map
各要素を変更したい配列.map(各要素を変更したい配列の各要素 =&gt; 変更処理);
→戻り値は、各要素に変更処理が加えられた新しい配列


test.js
let list1 = [1, 2, 3, 4, 5, 6, 7];

console.log(list1.map(x =&gt; x * x));
// [1, 4, 9, 16, 25, 36,49]

console.log(list1);
// [1, 2, 3, 4, 5, 6, 7]


 filter
検索対象の配列.filter(検索対象の配列の各要素 =&gt; bool値を返す関数);
→戻り値は...]]></description><link>https://zenn.dev/417yr/articles/5faa18d4a729c6</link><guid isPermaLink="true">https://zenn.dev/417yr/articles/5faa18d4a729c6</guid><pubDate>Mon, 14 Oct 2024 17:35:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fW1ydlOG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%2528map%252Ffilter%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:417yr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5NDJhY2ViOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>417yr</dc:creator></item><item><title><![CDATA[Biomeを簡単に導入してみた。]]></title><description><![CDATA[
 Biomeとは何か
公式ドキュメントの最初のページにはこのように書いてありました。

Web開発のためのたった1つのツールチェーン

ざっと見た感じだと、以下のような特徴を持つ。

JavaScript、TypeScript、JSX、JSON、CSS、GraphQLのためのformatter
Rust製故にかなり高速なformatter
Prettierとの互換性が97%
シンプルなオプション設定

公式ドキュメントのトップページスクショしてみた↓

何か良さそうな感じが、ぷんぷんするので早速触ってみます。

 Biomeの導入
使用FW：Next.js
IDE：VSCode
パッケ...]]></description><link>https://zenn.dev/nifumafu/articles/d70f1ea990fe68</link><guid isPermaLink="true">https://zenn.dev/nifumafu/articles/d70f1ea990fe68</guid><pubDate>Mon, 14 Oct 2024 14:49:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EEjBMfoJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nifumafu%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXZVb3ktcF9Nb3FTc3JnQnNIblU1ekN0MnItNWFkRDZoXzNSRGE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nifumafu🍊</dc:creator></item></channel></rss>