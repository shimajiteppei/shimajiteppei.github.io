<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 20 May 2025 09:46:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[小さなツールを作って考える、生成AIとの向き合いかた]]></title><description><![CDATA[フェアリーデバイセズ株式会社プロダクト開発部のCubbitです。この生成AIブームの隆盛に伴い、生成AIでコーディングを補助するツールが次々と登場しています。自分の職能のようなものの価値が薄れつつあることを少し寂しく感じつつも、便利なものであれば利用していきたいという気持ちから、私も日々キャッチアップに勤しんでいます。今回は、個人的にClineを試し、AIコーディングツールへの向き合い方を探ったことについて書いていきたいと思います。

 Cline/Claudeを試してみる
https://github.com/cline/cline
ClineはVisual Studio Codeの拡...]]></description><link>https://zenn.dev/fairydevices/articles/2ecb820a00f37f</link><guid isPermaLink="true">https://zenn.dev/fairydevices/articles/2ecb820a00f37f</guid><pubDate>Tue, 20 May 2025 08:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UFGjafkL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B0%258F%25E3%2581%2595%25E3%2581%25AA%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%2581%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25A8%25E3%2581%25AE%25E5%2590%2591%25E3%2581%258D%25E5%2590%2588%25E3%2581%2584%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Cubbit%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MjE4ODkwNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25BB%25E3%2582%25BA%25E5%2585%25AC%25E5%25BC%258F%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLaUg0Z2lyTG1GTHA2N1R0b2RhczF4bVVDaXFHZVZ1RzJjR2VvPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Cubbit</dc:creator></item><item><title><![CDATA[Cloudflare WorkersとD1でreact-router v7, drizzle-orm, valibot, conformメモ]]></title><description><![CDATA[備忘録メモ。
一旦動かすことができたのですが、しばらく別件に取り掛かりたいために、メモとして残します。

 新規プロジェクト
$ npx create-react-router@latest --template remix-run/react-router-templates/cloudflare-d1

(中略)

         create-react-router v7.6.0

   dir   Where should we create your new project?
         ./example_react-router_cloudflare-worker...]]></description><link>https://zenn.dev/craneduck/articles/ff36a7fa8e7495</link><guid isPermaLink="true">https://zenn.dev/craneduck/articles/ff36a7fa8e7495</guid><pubDate>Tue, 20 May 2025 07:31:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VJ5AeE4X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%25E3%2581%25A8D1%25E3%2581%25A7react-router%2520v7%252C%2520drizzle-orm%252C%2520valib...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDVkNWY1NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クレーンダック</dc:creator></item><item><title><![CDATA[初心者がNext.jsとSupabaseで日記アプリを公開するまで]]></title><description><![CDATA[
 はじめに
この日記アプリは、Web開発を始めたばかりの自分が「本当に動くものを作りたい」と思って始めたものです。
使った技術は Next.js と Supabase。React経験者であれば馴染みやすいですが、Supabaseの認証やStorageなどは初めて触る部分も多く、試行錯誤しながら進めました。
この記事は、自分があとから復習できるように、そして これから始める人が少しでも楽になるように 書いています。


 作ったもの
簡単な日記アプリを作りました。
主な機能

メールリンクによるログイン認証
投稿（テキスト）

画面イメージ（スクリーンショット予定）

ログイン画面
投稿...]]></description><link>https://zenn.dev/shworld/articles/e36bc73e57270c</link><guid isPermaLink="true">https://zenn.dev/shworld/articles/e36bc73e57270c</guid><pubDate>Tue, 20 May 2025 05:44:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IZKZBQTz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CNext.js%25E3%2581%25A8Supabase%25E3%2581%25A7%25E6%2597%25A5%25E8%25A8%2598%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shworld%25EF%25BD%259CAI%2520%25C3%2597%2520%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E9%2596%258B%25E7%2599%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3YmMyYjQ0NGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shworld｜AI × フルスタック開発</dc:creator></item><item><title><![CDATA[Next.jsでOGP画像＋ALTを動的に生成する]]></title><description><![CDATA[
 TL;DR
❌ opengraph-image.tsxだけでは動的なALT設定は不可能
⭕️ opengraph-image.tsxでOGP画像作成 + generatemetadata()でALT生成　の合わせ技でALTも動的に設定可能！

 背景
Next.jsではv13.3.0からOGP画像をコードで動的に生成できるようになりました。
opengraph-image.tsx(もしくはtwitter-image.tsx)をpage.tsxと同じ階層に置くだけでOGP画像を作成してくれるという優れものです。
具体的なコードを見てみましょう。

app/posts/[slug]/op...]]></description><link>https://zenn.dev/kofrah/articles/d7dcc67e01b8cd</link><guid isPermaLink="true">https://zenn.dev/kofrah/articles/d7dcc67e01b8cd</guid><pubDate>Tue, 20 May 2025 03:46:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tWAzk4QW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7OGP%25E7%2594%25BB%25E5%2583%258F%25EF%25BC%258BALT%25E3%2582%2592%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kofrah%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljNmY2YzBlYWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kofrah</dc:creator></item><item><title><![CDATA[MCPサーバーの受け入れテスト]]></title><description><![CDATA[Model Context Protocol(MCP) のサーバーは公式がSDKを提供しています. 言語にもよりますがSDKのおかげでMCPサーバーにかかわるコードは1ファイルに収まる程度, 非常に簡単に実装することができます. とはいえ書き捨てのツールのつもりが社内展開されてしまうといったこと, あると思います. そうなってしまうと, 依存関係の更新などのメンテナンスや機能追加が必要になってきます. そのため初めから受け入れテストを実装しておくと安心です. MCPサーバーの受け入れテストは簡単に実装することができます.
単体テストは?
MCPサーバー特有の単体テストを考えると, JSO...]]></description><link>https://zenn.dev/toms74209200/articles/acceptance-test-for-mcp</link><guid isPermaLink="true">https://zenn.dev/toms74209200/articles/acceptance-test-for-mcp</guid><pubDate>Tue, 20 May 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1MR2GXgF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E5%258F%2597%25E3%2581%2591%25E5%2585%25A5%25E3%2582%258C%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toms%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLV3Rva3h5eWFxT0M5ajlpQXhVQjF1NVlndDV3QUprRjVEc0lXcEVDNnVoUD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toms</dc:creator></item><item><title><![CDATA[PrismaをAWS X-Rayで分析できるようにしてみる]]></title><description><![CDATA[LambdaなどでX-Rayを有効にするのは簡単に出来るので、最近は有効にすることが多いのですが、DBアクセスによく使うPrismaの部分も対象に出来ないかと試行錯誤してみました。
多少無理やり感はあるのですが、分析できるようには出来たので、備忘と共有として残しておきます。

 PrismaのX-Ray組み込みコード
早速ですが、下記がコードになります。
import AWSXRay from 'aws-xray-sdk'

const prisma = new PrismaClient({
  log: [{ level: 'query', emit: 'event' }],
}).$...]]></description><link>https://zenn.dev/playree/articles/58f26086025589</link><guid isPermaLink="true">https://zenn.dev/playree/articles/58f26086025589</guid><pubDate>Mon, 19 May 2025 13:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ssbe48vQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2582%2592AWS%2520X-Ray%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:playree%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzc1OVNMOTM4THJqcFl0OUxnSUZKS2NlYThMTVEwbkwyS3oteFBxbUcyQTB3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>playree</dc:creator></item><item><title><![CDATA[HeyGen と Pipecat(OpenAI API使用) を連携させて対話可能なAIアバターを作成する]]></title><description><![CDATA[
こんにちは🤗@denwaya34です。
本記事では、HeyGen と OpenAI のSpeech To Text, Text To Speech APIを連携させて、対話型アバター動画を作成する方法を紹介します😉

 導入
簡単にHeyGenとPipecatの概要を説明します。

 HeyGenとは
HeyGen は AI 駆動の動画生成プラットフォームです。
テキストやスクリプトを入力するだけでアバター動画を作成できます。
【HeyGen について説明してるYoutube動画】
https://www.youtube.com/watch?v=KkQoMtp7IKs
【News】
5...]]></description><link>https://zenn.dev/denwaya/articles/heygen-pipecat</link><guid isPermaLink="true">https://zenn.dev/denwaya/articles/heygen-pipecat</guid><pubDate>Mon, 19 May 2025 12:04:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OJhb37YC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HeyGen%2520%25E3%2581%25A8%2520Pipecat%2528OpenAI%2520API%25E4%25BD%25BF%25E7%2594%25A8%2529%2520%25E3%2582%2592%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E5%25AF%25BE%25E8%25A9%25B1%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAAI%25E3%2582%25A2%25E3%2583%2590%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:denwaya34%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3NGM2YzM3MGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>denwaya34</dc:creator></item><item><title><![CDATA[TypeScriptの型のみで四則演算を実装する]]></title><description><![CDATA[
 TypeScriptの型のみで四則演算を実装する
型のみで四則演算を実装したので使った文法などのメモ

 実際の画面


 コード
そこまで高度なことはしていないと思うので、今回使った文法のみメモします。

 BuildArray&lt;A&gt; extends [...BuildArray&lt;B&gt;, ...infer Rest]


BuildArray&lt;B&gt;で配列を生成し、...で配列の要素を展開

infer Restで残りの要素をRestという型変数に推論

BuildArray&lt;A&gt; extends ~でA配列は[...BuildArra...]]></description><link>https://zenn.dev/mitate_gengaku/articles/type-level-arithmetic-operations</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/type-level-arithmetic-operations</guid><pubDate>Mon, 19 May 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RvyQhXSy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7%25E5%259B%259B%25E5%2589%2587%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[TypeScriptの型のみでシンプルなOXゲームを作ってみた]]></title><description><![CDATA[
 TypeScriptの型のみでシンプルなOXゲームを作ってみた
先日見かけたこの記事に衝撃を受けた。自由な型を設計できるTypeScriptのとりこになった。(けんた食堂さん風)

自分も型のみで何か作ってみたいと思いシンプルなOXゲームを実装しました。

 コード
色々な型を組み合わせることで実現しました。そこまで高度なことはしていないと思うので、今回使った文法のみメモします。
/**
 * 空のマス型
 */
type EmptyCell = " ";

/**
 * ユーザー型
 */
type Player = "O" | "X";

/**
 * 指定できるインデックス型
...]]></description><link>https://zenn.dev/mitate_gengaku/articles/type-level-tic-tac-toe</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/type-level-tic-tac-toe</guid><pubDate>Mon, 19 May 2025 09:59:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aQ6UodhC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AAOX%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[研究を始めた話１]]></title><description><![CDATA[
 宿主特異性を知るためのデータ集めとまとめ

 前提
いわゆる「きのこ」と呼ばれる菌類（ここから先は「きのこ」とは言わず菌類といいます）に寄生する菌類の一つとしてHypomycesというものがあります。私は現在、論文を読みその論文に基づく表を作ったりと、Hypomycesと寄生される側である宿主（「しゅくしゅ」と読みます）の関係性について研究といっては大げさかもしれませんが模索しつつ調べているところです。

 目的
Hypomyces sp.(sp.は種を表します。Hypomycesにも色んな種があることがわかります)　が何の菌類（種・属）に対応関係があるのかを知るために、論文から持っ...]]></description><link>https://zenn.dev/ysouth/articles/b98c06ff250603</link><guid isPermaLink="true">https://zenn.dev/ysouth/articles/b98c06ff250603</guid><pubDate>Mon, 19 May 2025 07:20:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nmy6-w9n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A0%2594%25E7%25A9%25B6%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%25E8%25A9%25B1%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:1m4nim%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlODQ3ZjkzMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>1m4nim</dc:creator></item><item><title><![CDATA[Asynchronous & Synchronous]]></title><description><![CDATA[
 聞き慣れない単語だが
Asynchronous &amp; Synchronous聞き慣れない単語ですね。非同期処理のPromiseとasync/awaitと同期処理なら知っている。海外の動画でiOSの学習をしていたときに出てきました。
実はこれ知ってる表現でした。
MDNに解説があったので読んでいただけるとご理解いただけると思います。

 Asynchronous （非同期）
公式より引用

非同期 (asynchronous) という用語は、 2 つ以上のオブジェクトやイベントが同時に存在しない、または起こらない、すなわち同期していないことを表します。複数の関連のあることが、前回...]]></description><link>https://zenn.dev/forgehack/articles/b1a6fdd779d97f</link><guid isPermaLink="true">https://zenn.dev/forgehack/articles/b1a6fdd779d97f</guid><pubDate>Mon, 19 May 2025 00:20:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dMlQpXU5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Asynchronous%2520%2526%2520Synchronous%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORGEHACK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkY3Z3hwejdDYVBET0xfT0N1d2hTcTl5VTFHXy1iRnlRQ0FwYzc5Q2FVUFVfekRTMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORGEHACK</dc:creator></item><item><title><![CDATA[GPT Codex を使って TypeScript 型パズルゲームを作ってみた]]></title><description><![CDATA[
 作ったもの
今回は、TypeScript の型を学べるパズル形式の Web アプリを作成しました。クイズ形式で型定義の正解を導き出すことで、型への理解を深めることができます。
使用した技術スタックは、Next.js、Monaco Editor、TypeScript、ESLint に加えて、GPT Codex（ChatGPT Pro）と Cursor です。実装は主に Codex に支援してもらいながら、プロジェクトの初期設計から UI 実装、型ロジックの確認までを進めました。
実際の画面は、Monaco Editor を使ってエディタ上で型を記述し、正しい型に修正できれば「正解」にな...]]></description><link>https://zenn.dev/sakupanda/articles/15ab4780cf102c</link><guid isPermaLink="true">https://zenn.dev/sakupanda/articles/15ab4780cf102c</guid><pubDate>Sun, 18 May 2025 13:26:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X3UfOEGG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GPT%2520Codex%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520TypeScript%2520%25E5%259E%258B%25E3%2583%2591%25E3%2582%25BA%25E3%2583%25AB%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2581%258F%25E3%2581%2595%25E3%2581%258F%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNWVjODkzMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さくさくパンダ</dc:creator></item><item><title><![CDATA[React開発での絶対パス設定まとめ]]></title><description><![CDATA[React でコンポーネントをインポートするたびに ../ を繰り返していて、見づらい・修正が大変と感じたことはありませんか？
この記事では、import useStyles from "../components/styles"; のような相対パスではなく、import useStyles from "components/styles"; のような絶対パスでインポートする設定方法を紹介します。

 ✅ やりたいこと
例えば以下のような構成のとき：
├── App.tsx
├── components/
│ └── styles.ts
通常は以下のような相対パスになります。
impor...]]></description><link>https://zenn.dev/leegrey/articles/7690d298f97d3d</link><guid isPermaLink="true">https://zenn.dev/leegrey/articles/7690d298f97d3d</guid><pubDate>Sun, 18 May 2025 13:24:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FjU3wbba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%25AE%25E7%25B5%25B6%25E5%25AF%25BE%25E3%2583%2591%25E3%2582%25B9%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GlobalPaws%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwNTcxOWUyM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GlobalPaws</dc:creator></item><item><title><![CDATA[TypeScript未経験者の学習方法]]></title><description><![CDATA[
 この記事は何?
この記事は記事投稿コンテスト　TypeScriptでやってみた挑戦・学び・工夫の投稿記事です。
TypeScript未経験だった私が学習を決めたきっかけ、学習方法を書いています。
私と同じようなTypeScript未経験の方の何か参考になるかもしれないと思ったので記事を書くことにしました。

 著者の技術バックボーン
私の仕事は医療機器の組込みソフトウェア開発です。プログラミング言語はC、C++を23年間、使ってきました。C、C++でマイコンやマイコンに接続されたデバイスを制御し、装置を動かすことが目的です。
これまでTypeScriptの経験はありません。後述の学習...]]></description><link>https://zenn.dev/k_abe/articles/ts_learning_start</link><guid isPermaLink="true">https://zenn.dev/k_abe/articles/ts_learning_start</guid><pubDate>Sun, 18 May 2025 12:55:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jNuTY3qI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E6%259C%25AA%25E7%25B5%258C%25E9%25A8%2593%25E8%2580%2585%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2598%25BF%25E9%2583%25A8%25E8%2580%2595%25E4%25BA%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwNmIzMTg4YTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>阿部耕二</dc:creator></item><item><title><![CDATA[【備忘】IntelliJでTypeScriptが読み込まれない]]></title><description><![CDATA[
 困っていたこと


TypeScriptのプロジェクトをIntelliJで開くと、なぜかTypeScriptとして読み込んでくれない。



静的チェックの結果をみると、TypoScriptとして認識されているようでした。




 解決方法
「IntelliJ IDEA &gt; Settings &gt; エディター &gt; ファイルタイプ」
TypoScript Filesの「ファイル名のパターン」を全て削除



TypeScriptの方に「*.ts」を追加



Typescriptとして認識されている。



同じ事象で困ってる人の助けになれば幸いです。


]]></description><link>https://zenn.dev/ramenpanda/articles/0721c085db9b2f</link><guid isPermaLink="true">https://zenn.dev/ramenpanda/articles/0721c085db9b2f</guid><pubDate>Sun, 18 May 2025 10:14:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xtqk3C2t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E3%2580%2591IntelliJ%25E3%2581%25A7TypeScript%25E3%2581%258C%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25A1%25E3%2583%25B3%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkNDBiOWVhODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラーメンぱんだ</dc:creator></item><item><title><![CDATA[Typescript 関数の理解を深める]]></title><description><![CDATA[日頃プログラミングをしていてTypescriptの関数について理解を深めたいなと思い記事を書きました。
内容は僕が理解不足だったり深めたい箇所がメインですのでそこをご了承いただけると嬉しいです！

 void関数における早期returnについて
戻り値の型がvoidである関数においても、returnによる処理の中断が可能です。
この性質を活用することで、条件によって処理を早期に終了させ、不要なネストや処理の継続を避けることができます。
function doSomething(): void {
  if (someCondition) return;
  console.log("続行...]]></description><link>https://zenn.dev/you_ik/articles/a1f48acb35f6ec</link><guid isPermaLink="true">https://zenn.dev/you_ik/articles/a1f48acb35f6ec</guid><pubDate>Sun, 18 May 2025 09:56:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KO67HafI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%2520%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2582%2592%25E6%25B7%25B1%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25AB%25E3%2581%25B5%25E3%2581%2581%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjYTY1YmYwYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨルシカふぁん</dc:creator></item><item><title><![CDATA[Angular Signalsで柔軟なeffect管理を実現する拡張パターン]]></title><description><![CDATA[Angular Signalの effect は便利ですが、ちょっとした落とし穴もあります。特に「同じ値を再セットしたときに反応しない」点は、実装中に引っかかる人も多いのではないでしょうか？
例えば、以下のようなコードを考えてみましょう：
@Component({...})
class ExampleComponent {
  page = signal&lt;number&gt;(0);

  constructor() {
    effect(() =&gt; {
      // pageの値が変更されたときに実行される
      console.log('page chang...]]></description><link>https://zenn.dev/rdlabo/articles/0fe0824fc702d0</link><guid isPermaLink="true">https://zenn.dev/rdlabo/articles/0fe0824fc702d0</guid><pubDate>Sun, 18 May 2025 05:42:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C4uDteON--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular%2520Signals%25E3%2581%25A7%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AAeffect%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%258B%25A1%25E5%25BC%25B5%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A6%258A%25E5%258E%259F%25E6%2598%258C%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPaXJOMUlrUWZNc0J2Vlljc1NzOGRGYW9USjV1TnZNTHF5TUp4cWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>榊原昌彦</dc:creator></item><item><title><![CDATA[Vibe CodingでYoutubeのダウンロードアプリを作成してみた]]></title><description><![CDATA[こんにちは。JavaScript/TypeScriptをほんの少しだけ触ったことがあるだけのただのニートです。
今回は、Vibe Codingで「YouTubeのダウンロードアプリ」をAI（Claude 3.7 sonnet）に全部やらせて作ってみたので、その体験談をまとめてみます。

 きっかけ
YouTubeの動画をダウンロードしたいな～と思って、まずは既存のWebサービスやアプリを色々探してみたんですが、
・ソフトのインストールが必要だったり(こういうソフトは怪しいものが多い)
・Web上のやつはやたら遅かったり
・広告が多かったり
と、なかなか「これだ！」というものが見つからず。...]]></description><link>https://zenn.dev/miyabitti256/articles/vibe-youtube-downloader</link><guid isPermaLink="true">https://zenn.dev/miyabitti256/articles/vibe-youtube-downloader</guid><pubDate>Sun, 18 May 2025 05:39:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XcG4guuC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vibe%2520Coding%25E3%2581%25A7Youtube%25E3%2581%25AE%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyabitti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjVmZThjM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyabitti</dc:creator></item><item><title><![CDATA[React + Tailwind CSS でコンポーネントを改善してみた]]></title><description><![CDATA[
 はじめに
以前、以下の記事でReact + Tailwindを使ったシンプルなボタンコンポーネントの実装について紹介しました：
👉 React + Tailwind CSS でコンポーネントを作ってみた
当時の実装はPropsベースで状態を切り替える基本的なものでしたが、以下のような問題点がありました。

 ❌ 旧実装の課題点


スタイルの定義がハードコードで、型安全性が弱い


クラス名が文字列連結で可読性・保守性が低い


onClick の型が any でTypeScriptの恩恵が薄い


ref や as による柔軟なレンダリングができない


Composition（ア...]]></description><link>https://zenn.dev/au/articles/c101fcb20e579f</link><guid isPermaLink="true">https://zenn.dev/au/articles/c101fcb20e579f</guid><pubDate>Sun, 18 May 2025 04:41:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tCEjM1sE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520Tailwind%2520CSS%2520%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:K.nishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkMmI2N2ZkOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>K.nishi</dc:creator></item><item><title><![CDATA[Vue の <component> と <keep-alive>：動的コンポーネントの切り替えと状態の保持]]></title><description><![CDATA[
 はじめに
Vue の &lt;component&gt; タグは、動的にコンポーネントを切り替える便利な方法です。
例えば「タブ切り替え」や「ページの差し替え」などで使われます。
さらに &lt;keep-alive&gt; と組み合わせることで、切り替えたコンポーネントの状態を保持することも可能です。
本記事では、以下の2点を中心に解説します：


&lt;component :is="..."&gt; の使い方

&lt;keep-alive&gt; の挙動と使い所


 &lt;component&gt; の基本
Vue の &lt;component&gt; タグを使うと、変...]]></description><link>https://zenn.dev/tspk/articles/d64a7c0add87c8</link><guid isPermaLink="true">https://zenn.dev/tspk/articles/d64a7c0add87c8</guid><pubDate>Sun, 18 May 2025 03:01:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sp3JL4UD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%2520%25E3%2581%25AE%2520%253Ccomponent%253E%2520%25E3%2581%25A8%2520%253Ckeep-alive%253E%25EF%25BC%259A%25E5%258B%2595%25E7%259A%2584%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%25E3%2581%25A8%25E7%258A%25B6%25E6%2585%258B%25E3%2581%25AE%25E4%25BF%259D%25E6%258C%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B7%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRaUk5ISjNvUTRveHRBeGZBcVh5Y2RlVV9HbUxldnlQVUFiNUhMcU4ybUVZVVpsM2E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぷっけ</dc:creator></item></channel></rss>