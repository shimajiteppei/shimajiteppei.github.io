<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 09 Jan 2025 07:00:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[『browser-use-webui』で始めるブラウザ操作の自動化入門]]></title><description><![CDATA[
 はじめに
本記事では、AIエージェントを活用してブラウザ操作を自動化するツール 「browser-use-webui」 の概要と基本的な使い方を説明します。
繰り返しのブラウザ操作を減らす一手段として、セットアップ方法から簡単な使用例まで順を追って解説します。

 browser-use-webuiの概要

 レポジトリ
https://github.com/browser-use/web-ui

 概要
browser-use-webui は、以下のような特徴を持つブラウザ操作自動化ツールです。


シンプルな指示で動作: 「特定ページにアクセスして入力 → ボタンクリック → 結...]]></description><link>https://zenn.dev/yosh1/articles/browser-use-webui-automation</link><guid isPermaLink="true">https://zenn.dev/yosh1/articles/browser-use-webui-automation</guid><pubDate>Thu, 09 Jan 2025 02:02:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gDORAUvx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258Ebrowser-use-webui%25E3%2580%258F%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yosh1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNGVjNjdhZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yosh1</dc:creator></item><item><title><![CDATA[djangorestframework-camel-caseの導入方法]]></title><description><![CDATA[
 概要
djangorestframework-camel-caseはDRFでJSONレスポンスを返すとき、自動的にキーをキャメルケースに変換してくれるライブラリです。
https://github.com/vbabiy/djangorestframework-camel-case

 例
たとえば、ユーザ情報を返却するAPIを叩いたとき

response.json
 {
 	username: "Yuji",
 	created_at: "2025-01-01",
 }

これが、こうなります。

response.json
 {
  	username: "Yuji",
  	c...]]></description><link>https://zenn.dev/evesquare2/articles/a61976455dc0d5</link><guid isPermaLink="true">https://zenn.dev/evesquare2/articles/a61976455dc0d5</guid><pubDate>Thu, 09 Jan 2025 00:21:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W2EoLJdH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:djangorestframework-camel-case%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:evesquare%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIyMjRmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>evesquare</dc:creator></item><item><title><![CDATA[pythonをチャッピー(ChatGPT)に教えてもらう (Excel自動化ツール) #3]]></title><description><![CDATA[
 はじめに
しばらく実務でコーディングの機会がなかったので、定期的にChatGPTから課題をもらって、それを解くことでコーディングの習慣を取り戻したいと思います。

 チャッピー（ChatGPT）から与えられた課題
課題: Excel自動化ツール
課題概要: 売上データが格納されたExcelファイルを読み込み、月ごとに集計を行う
ステップ:
1. openpyxlライブラリを使ってExcelファイルを読み込み。
2. 月ごとにデータを集計し、売上額を計算。
3. 加工したデータを新しいExcelファイルとして保存。
難易度: 中級
使用するライブラリ: openpyxl, pandas...]]></description><link>https://zenn.dev/joaan/articles/fd02df4d481ace</link><guid isPermaLink="true">https://zenn.dev/joaan/articles/fd02df4d481ace</guid><pubDate>Wed, 08 Jan 2025 22:53:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kgxMsO-S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2594%25E3%2583%25BC%2528ChatGPT%2529%25E3%2581%25AB%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2520%2528Excel%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2529%2520%25233%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%25A7%25E3%2582%25A2%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMGZlZWIzNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジョアン</dc:creator></item><item><title><![CDATA[Python3エンジニア認定実践試験の勉強をするよ その3]]></title><description><![CDATA[
 はじめに
Python実践レシピに沿って学習します。

 以前の記事


Python3エンジニア認定実践試験の勉強をするよ その1
Python環境、コーディング規約、型ヒント

Python3エンジニア認定実践試験の勉強をするよ その2
Python言語仕様


 今回の範囲



章
タイトル
問題数
問題割合
備考




8
日付と時刻の処理
2
5.0%
8.4 dateutilは除く


9
データ型とアルゴリズム
5
12.5%
9.3 bisectは除く9.5 pprint は除く




 日付と時刻の処理: 日付と時刻 - datetimeモジュール

 覚えて...]]></description><link>https://zenn.dev/pion24/articles/python_cert_practice_no3</link><guid isPermaLink="true">https://zenn.dev/pion24/articles/python_cert_practice_no3</guid><pubDate>Wed, 08 Jan 2025 20:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OLyXFDfq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E5%25AE%259F%25E8%25B7%25B5%25E8%25A9%25A6%25E9%25A8%2593%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%2520%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tok%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlY2NlOTYzZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tok</dc:creator></item><item><title><![CDATA[WSLでpipが動かないし、インストールできなかった]]></title><description><![CDATA[いろいろあって方針転換をした後、Pythonを使うことになったのですが、最近パソコンを新調したため中身が何も入っておらず、WSLのインストールから始まりました。その際に、なぜかpipが動いてくれず、少々手間取ったためどなたかの助けになればと思いここに記しておきます。

 Update&amp;Upgrade
sudo apt update
sudo apt upgrade
解決しました。
]]></description><link>https://zenn.dev/m20138/articles/fed8677866bc50</link><guid isPermaLink="true">https://zenn.dev/m20138/articles/fed8677866bc50</guid><pubDate>Wed, 08 Jan 2025 12:28:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZV-ii099--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E3%2581%25A7pip%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2597%25E3%2580%2581%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonlyboy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3YmViY2Y5MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lonlyboy</dc:creator></item><item><title><![CDATA[AWS Lambda での SDK クライアントの初期化：パフォーマンスと効率を最大化する]]></title><description><![CDATA[AWS Lambdaを使用してサーバーレスアプリケーションを構築する際、パフォーマンスの最適化は非常に重要です。Lambda関数の実行中に頻繁に行われる操作の1つに、AWSソフトウェア開発キット（SDK）の初期化があります。この記事では、Lambdaハンドラー関数の外部でAWS SDKを初期化することの利点と、それによるパフォーマンス向上について説明します。

 コールドスタートとウォームスタート
Lambda関数には、コールドスタートとウォームスタートの2種類の実行パターンがあります。コールドスタートは、関数のインスタンスが初めて起動されるときや、一定時間使用されなかった後に再度起動さ...]]></description><link>https://zenn.dev/tn_a/articles/7090fb6191d13f</link><guid isPermaLink="true">https://zenn.dev/tn_a/articles/7090fb6191d13f</guid><pubDate>Wed, 08 Jan 2025 11:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YplUQOJp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Lambda%2520%25E3%2581%25A7%25E3%2581%25AE%2520SDK%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25EF%25BC%259A%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25A8%25E5%258A%25B9%25E7%258E%2587%25E3%2582%2592%25E6%259C%2580%25E5%25A4%25A7%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dasu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4MDcxYWUyMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dasu</dc:creator></item><item><title><![CDATA[【Python】【pandas】json_normalize()がよくわからない年頃]]></title><description><![CDATA[https://pandas.pydata.org/docs/reference/api/pandas.json_normalize.html
世界がおかしいのか、私がおかしいのか。
この関数の挙動がおかしいのか、私の理解がおかしいのか。

 1.インターフェース概要

pandas.json_normalize(data, record_path=None, meta=None, meta_prefix=None, record_prefix=None, errors='raise', sep='.', max_level=None)

凖構造化JSONデータをフラットテーブルに正規化...]]></description><link>https://zenn.dev/xenon135yen/articles/f5271ed908b420</link><guid isPermaLink="true">https://zenn.dev/xenon135yen/articles/f5271ed908b420</guid><pubDate>Wed, 08 Jan 2025 11:26:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5EEy8Ii5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2580%2590pandas%25E3%2580%2591json_normalize%2528%2529%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%25B9%25B4%25E9%25A0%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A1%25E3%2583%25A2%25E3%2581%258C%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AE%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNGY4ZTljZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>メモがわりのなにか</dc:creator></item><item><title><![CDATA[こんにちは]]></title><description><![CDATA[
 大学院生のASAです
こんにちは、大学で理論物理を研究しているASAです。
もうすぐM2になるということで、情報系の友人の勧めもあり、こういうアウトプットの場を設けてみようということでアカウントを作りました。
研究で技術系サイトに非常に助けられたので、備忘録も兼ねてこれから色々と投稿していこうと思います。
なるべく無いようには気をつけますが、間違った記述などがあれば申し訳ありません。ぜひご指摘してください。
では ^^

(カオスですね！！)
]]></description><link>https://zenn.dev/babymon/articles/self_produce</link><guid isPermaLink="true">https://zenn.dev/babymon/articles/self_produce</guid><pubDate>Wed, 08 Jan 2025 10:36:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2YKGSMN5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AB%25E3%2581%25A1%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ASA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhN2FkMjgxZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ASA</dc:creator></item><item><title><![CDATA[医薬品マスタを簡単に取得するpythonライブラリ「jp-medicine-master」の紹介]]></title><description><![CDATA[医療データの分析を行ううえで、医薬品マスタなどの各種マスタは欠かせません。
複数のベンダーによって医薬品マスタが販売されていますが、高額のため個人には手が出せなかったり、新薬発売や薬価改定によりすぐに古いデータになってしまったり、といった課題があります。
一方、大元のマスタは厚生労働省や診療報酬支払基金といった公的機関が公開しており無償で利用可能ですが、ファイルの形式がまちまちだったりレイアウト上の問題で使用前にひと手間かかるものが多いです。
jp-medicine-masterは、その課題を解決するためのPythonライブラリです。このライブラリを使うことで、日本で使用されている医薬品...]]></description><link>https://zenn.dev/shiro46/articles/666011fe1c8ea4</link><guid isPermaLink="true">https://zenn.dev/shiro46/articles/666011fe1c8ea4</guid><pubDate>Wed, 08 Jan 2025 06:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X7pwGarv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258C%25BB%25E8%2596%25AC%25E5%2593%2581%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258Bpython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258Cjp-medicine-master%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SHIRO</dc:creator></item><item><title><![CDATA[NDBオープンデータの分析を手軽に行えるpythonライブラリ「jp-ndb-medicine」の紹介]]></title><description><![CDATA[NDBオープンデータとは、厚生労働省が提供している医療データベース「NDB」のうち、誰でも二次利用できるよう一般向けに公開されている統計資料のことです。
利用までにかなり手間と時間がかかるNDBと比べて、NDBオープンデータは申請不要ですぐに利用できるため、医療データの分析をやってみたい個人や業務に役立てたい企業にとってはとても有用な資料となっています。（詳細は厚生労働省HP）
しかしながら、NDBオープンデータはExcelの表形式で提供されていて、人間には理解できてもプログラムでは処理しづらい形式となっています。そのため、pythonやRで分析する時は前処理が必要になります。
jp-n...]]></description><link>https://zenn.dev/shiro46/articles/0aa03bf070f86c</link><guid isPermaLink="true">https://zenn.dev/shiro46/articles/0aa03bf070f86c</guid><pubDate>Wed, 08 Jan 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--97TjowdC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NDB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E8%25A1%258C%25E3%2581%2588%25E3%2582%258Bpython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2580%258Cjp-ndb-medicine%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SHIRO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMWE5N2ZlNGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SHIRO</dc:creator></item><item><title><![CDATA[複数ベンダーのLLMログを集約した統計グラフをSlackに日次通知する（Cloudflare AI Gateway/Python）]]></title><description><![CDATA[
 はじめに
年あらため、Cloudflare AI Gatewayを使いはじめました。
https://zenn.dev/hosaka313/scraps/8cada897c94e90
エンドポイントを差し替えることで、複数ベンダーのLLMのログを統合できる代物です。
たとえば、以下のようなデータが取れます。

各リクエストの概要

時系列グラフ
ベンダーをまたがる集約ログは、異常検知や生成AIの利用促進のKPIになり、地味に重要です。筆者も似たようなプロキシをApps Script/Spreadsheetで自作したり、オープンソースのllm.reportを試したこともありました。[1...]]></description><link>https://zenn.dev/ptna/articles/265d330cabd901</link><guid isPermaLink="true">https://zenn.dev/ptna/articles/265d330cabd901</guid><pubDate>Tue, 07 Jan 2025 23:15:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uDG6yOik--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25AELLM%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E9%259B%2586%25E7%25B4%2584%25E3%2581%2597%25E3%2581%259F%25E7%25B5%25B1%25E8%25A8%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592Slack%25E3%2581%25AB%25E6%2597%25A5%25E6%25AC%25A1%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Cloudflare%2520AI%2520Gateway...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hosaka313%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNDZkNWFmNTAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%2585%25A8%25E6%2597%25A5%25E6%259C%25AC%25E3%2583%2594%25E3%2582%25A2%25E3%2583%258E%25E6%258C%2587%25E5%25B0%258E%25E8%2580%2585%25E5%258D%2594%25E4%25BC%259A%25EF%25BC%2588%25E3%2583%2594%25E3%2583%2586%25E3%2582%25A3%25E3%2583%258A%25EF%25BC%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvTjJRYzJRN1V1ZnM1X29EblNkWkt4OFNPSWUzOTBaQTRSTDVOPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hosaka313</dc:creator></item><item><title><![CDATA[pythonをチャッピー(ChatGPT)に教えてもらう (ログ解析ツールの作成) #2]]></title><description><![CDATA[
 はじめに
しばらく実務でコーディングの機会がなかったので、定期的にChatGPTから課題をもらって、それを解くことでコーディングの習慣を取り戻したいと思います。

 チャッピー（ChatGPT）から与えられた課題
課題：ログ解析ツールの作成
課題概要: サーバーログ(ApacheやNginxのログファイルなど)を解析して、
エラーメッセージ(HTTPステータスコード500, 404 など)の頻度をカウントし、
結果をCSV形式で出力するプログラムを作成します。
ステップ:

ログファイルを読み込み、行ごとに解析する。
正規表現を使ってエラーメッセージを抽出。
エラーメッセージの出現頻...]]></description><link>https://zenn.dev/joaan/articles/8da817d8f600d6</link><guid isPermaLink="true">https://zenn.dev/joaan/articles/8da817d8f600d6</guid><pubDate>Tue, 07 Jan 2025 22:46:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1poBudQX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2582%2592%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2594%25E3%2583%25BC%2528ChatGPT%2529%25E3%2581%25AB%25E6%2595%2599%25E3%2581%2588%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2520%2528%25E3%2583%25AD%25E3%2582%25B0%25E8%25A7%25A3%25E6%259E%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2529%2520%25232%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%25A7%25E3%2582%25A2%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMGZlZWIzNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジョアン</dc:creator></item><item><title><![CDATA[PyTorchのAutograd（自動微分）機能を概観する]]></title><description><![CDATA[
 本記事の概要
本記事では、PyTorchの機能の1つであるAutograd（自動微分）について解説し、簡単な実装例を紹介します。

 Autograd機能の利用にあたって理解しておきたいこと
Autograd機能を利用するためには、いくつかの概念と注意点を理解する必要があります。実装時に特に押さえておくべきポイントについて説明します。

 requires_gradの設定

Tensorを定義するときにrequires_grad=Trueを設定する

requires_grad=Trueにすることで勾配計算の追跡が可能になる
学習不要な層やパラメータに対してはrequires_gra...]]></description><link>https://zenn.dev/enlog/articles/0a0e7382a2c7e6</link><guid isPermaLink="true">https://zenn.dev/enlog/articles/0a0e7382a2c7e6</guid><pubDate>Tue, 07 Jan 2025 17:09:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H9be_n2h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyTorch%25E3%2581%25AEAutograd%25EF%25BC%2588%25E8%2587%25AA%25E5%258B%2595%25E5%25BE%25AE%25E5%2588%2586%25EF%25BC%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%25A6%2582%25E8%25A6%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:en%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlMTU0Yjg4ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>en</dc:creator></item><item><title><![CDATA[チェスのプログラムを作って各プログラム言語の比較評価をした]]></title><description><![CDATA[これは、とある方が7つのプログラム言語を用いて、同じチェスのプログラムを作成した話です。
7つの言語とは、C++、C#、Go、Zig、Odin、Python、Rustの7つの言語を用いて、それぞれチェスプログラムを作成して比較した結果を動画にまとめています。
何故、各言語で評価したのかは、それぞれの言語でのプログラム生産コストとパフォーマンスを評価するためです。
https://www.youtube.com/watch?v=cFNBIYwht8o
0:00 イントロ
1:18 アルゴリズムの説明
6:10 C++言語のコード評価
9:25 C#言語のコード評価
10:48 Go言語のコ...]]></description><link>https://zenn.dev/ohkan/articles/904b2b624304ff</link><guid isPermaLink="true">https://zenn.dev/ohkan/articles/904b2b624304ff</guid><pubDate>Tue, 07 Jan 2025 12:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LePRJ2yb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2581%25E3%2582%25A7%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%2590%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%25E8%25A9%2595%25E4%25BE%25A1%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%258E%258B%25E5%2586%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MmYxZmNiNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>王冠</dc:creator></item><item><title><![CDATA[TensorFlow の概念と python 実装例]]></title><description><![CDATA[
 TensorFlowとは

 概念
TensorFlow は Google が開発したオープンソースの機械学習フレームワークであり，深層学習を中心に，大規模な数値計算や機械学習モデルの構築・学習・推論に用いられています．本記事では Python による実装例を示しますが，C++, JavaScript (TensorFlow.js)などからも利用できます．

 特徴

自動微分：機械学習の上で必要な勾配を自動的に計算できます
GPU や TPU を活用した高速化：大規模な行列演算を効率よく実行できます
Keras を用いた高レベル API：直感的にニューラルネットワークを構築できる ...]]></description><link>https://zenn.dev/minoda_kohei/articles/e9f687f302647c</link><guid isPermaLink="true">https://zenn.dev/minoda_kohei/articles/e9f687f302647c</guid><pubDate>Tue, 07 Jan 2025 12:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RFl_5WST--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TensorFlow%2520%25E3%2581%25AE%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8%2520python%2520%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B0%2591%25E7%2594%25B0%25E5%25BA%25B7%25E5%25B9%25B3%2520%252F%2520Minoda%2520Kohei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGFYbWU1cWpyWHV3Q1BUX21ad2VnZjdTaE9vSGlSQjE5dnJVTW42a3NuMy02RzB2VEc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>簑田康平 / Minoda Kohei</dc:creator></item><item><title><![CDATA[uv Publishがmetadataが何たらで失敗した]]></title><description><![CDATA[
 tl;dr
build設定をこのように書く

pyproject.toml
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

以下は気になった人向けの記録

 前提
Pythonのパッケージ管理ツールとしてRyeを愛用していたが、機会がありuvで開発していた。タスクランナーがないこと以外は概ね最高。
https://docs.astral.sh/uv/getting-started/

 uv のパッケージ公開事情
公式を見るとわかる通り、uvだとpypiへの登録がめちゃくちゃ便利。u...]]></description><link>https://zenn.dev/watany/articles/f87d570267e94b</link><guid isPermaLink="true">https://zenn.dev/watany/articles/f87d570267e94b</guid><pubDate>Tue, 07 Jan 2025 11:52:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_fZUrCn0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%2520Publish%25E3%2581%258Cmetadata%25E3%2581%258C%25E4%25BD%2595%25E3%2581%259F%25E3%2582%2589%25E3%2581%25A7%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watany%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYjJiYTdkZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>watany</dc:creator></item><item><title><![CDATA[Pythonでジャーナリングアプリを作成してみた]]></title><description><![CDATA[
 はじめに
日々の忙しさの中で、自分自身の感情や経験を振り返る時間を取ることは難しいものです。しかし、こうした「内省」の時間は、ストレスの軽減や自己成長において重要な役割を果たします。このジャーナリングアプリは、そのような内省の習慣を手軽に、そして楽しく始められるツールとして開発されました。日常の出来事や感情を記録し、直感的な視覚化を通じて自分を振り返る新しい方法を提供します。

 解決したい社会課題
現代社会では、ストレスやメンタルヘルスの問題が深刻化しています。特に、忙しい日常の中で自分の感情に気づくことができず、心の疲れを放置してしまう人が多い現状があります。これらの問題に対処す...]]></description><link>https://zenn.dev/coco_ns/articles/3c7df876f3e8ec</link><guid isPermaLink="true">https://zenn.dev/coco_ns/articles/3c7df876f3e8ec</guid><pubDate>Tue, 07 Jan 2025 08:27:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7180-dIE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:coco_ns%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzFoWGg3V3ptWFgyYjVxUVlEamhZcUJIMmxHeDcwWi1USEQxNVJSbTdZWHFZYWJBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>coco_ns</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-384｜A - aaaadaa]]></title><description><![CDATA[
 設問ページ

🔗ABC-384 A - aaaadaa



 提出結果
def getStringMap():
    return input().split()


def getString():
    return input()


def main():
    N, c1, c2 = getStringMap()
    S = getString()

    buf = []
    for c in S:
        buf.append(c1 if c == c1 else c2)
    print("".join(buf))


if __name_...]]></description><link>https://zenn.dev/hyperdb/articles/9b36e19e558d17</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/9b36e19e558d17</guid><pubDate>Tue, 07 Jan 2025 08:26:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5WB0MCRs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-384%25EF%25BD%259CA%2520-%2520aaaadaa%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-384｜C - Perfect Standings]]></title><description><![CDATA[
 設問ページ

🔗ABC-384 C - Perfect Standings



 提出結果
import itertools


def getIntList():
    return list(map(int, input().split()))


def main():
    point = getIntList()

    q = [i for i in range(5)]

    c = []
    for i in range(5):
        c += list(itertools.combinations(q, i + 1))

    k = di...]]></description><link>https://zenn.dev/hyperdb/articles/58e5469e41dcf5</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/58e5469e41dcf5</guid><pubDate>Tue, 07 Jan 2025 08:26:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3NV7MPoU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-384%25EF%25BD%259CC%2520-%2520Perfect%2520Standings%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-384｜B - ARC Division]]></title><description><![CDATA[
 設問ページ

🔗ABC-384 B - ARC Division



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def check(d, r):
    return 1600 &lt;= r &lt;= 2799 if d == 1 else 1200 &lt;= r &lt;= 2399


def main():
    N...]]></description><link>https://zenn.dev/hyperdb/articles/44b92e5165928c</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/44b92e5165928c</guid><pubDate>Tue, 07 Jan 2025 08:26:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HHuwiNRn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-384%25EF%25BD%259CB%2520-%2520ARC%2520Division%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item></channel></rss>