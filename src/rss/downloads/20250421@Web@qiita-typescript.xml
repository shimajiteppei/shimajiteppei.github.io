<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-04-21T12:37:03+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2015906</id>
    <published>2025-04-21T12:37:03+09:00</published>
    <updated>2025-04-21T12:37:03+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/makky12/items/f2addbf7f2929be5c989"/>
    <url>https://qiita.com/makky12/items/f2addbf7f2929be5c989</url>
    <title>【AWS CDK】LambdaをTypeScriptで動かす環境を構築する（その2：AWS CDKでの実装＆TypeScriptで動作させる）</title>
    <content type="html">はじめに
※この記事は、私の個人ブログ（下記）と同じ内容になります。
https://makky12.hatenablog.com/entry/2025/04/21/120500
本ブログは、202…</content>
    <author>
      <name>makky12</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2015884</id>
    <published>2025-04-21T11:52:19+09:00</published>
    <updated>2025-04-21T11:52:19+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/masa_code/items/ef00353b94972a4c7309"/>
    <url>https://qiita.com/masa_code/items/ef00353b94972a4c7309</url>
    <title>Zodの omit で登録・編集フォームのバリデーションを分ける</title>
    <content type="html">はじめに
react-hook-form と Zod を組み合わせたフォーム実装を行った際、登録時と更新時でバリデーションが必要な項目が異なるケースがありました。
この記事では、そこでハマったポイン…</content>
    <author>
      <name>masa_code</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2015877</id>
    <published>2025-04-21T11:25:47+09:00</published>
    <updated>2025-04-21T11:42:56+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/bonji/items/b8ba95e4af8e5dbb70d2"/>
    <url>https://qiita.com/bonji/items/b8ba95e4af8e5dbb70d2</url>
    <title>オープンクローズドの原則（OCP）におけるOOPとFPの比較</title>
    <content type="html">オープンクローズドの原則（OCP: Open-Closed Principle）は、「ソフトウェア実体は拡張に対して開かれており、修正に対して閉じられているべきである」という設計原則です。本記事では…</content>
    <author>
      <name>bonji</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2015876</id>
    <published>2025-04-21T11:22:56+09:00</published>
    <updated>2025-04-21T11:39:01+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/bonji/items/f164519a54d59ac9526a"/>
    <url>https://qiita.com/bonji/items/f164519a54d59ac9526a</url>
    <title>単一責任の原則（SRP）におけるOOPとFPの比較</title>
    <content type="html">単一責任の原則（SRP: Single Responsibility Principle）は、「クラスはたった1つの理由でのみ変更されるべきである」という考え方です。本記事では、オブジェクト指向プロ…</content>
    <author>
      <name>bonji</name>
    </author>
  </entry>
</feed>
