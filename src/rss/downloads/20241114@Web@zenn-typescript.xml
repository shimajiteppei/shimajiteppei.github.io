<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 14 Nov 2024 08:34:08 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Yamada UIを使ってどうしてもMantineのAppShellを作りたかっただけ]]></title><description><![CDATA[こんにちは！普段フロントエンド開発をしている人です🙌
最近はUI作成時によくMantineを使用しているのですが、Yamada UIもずうううっと気になっていたので触ってみたところ…
「え、AppShellない…🥺」ってなりました。
AppShellってなんだよって方はこちら→Mantineのドキュメント
もうちょこっと書けばアプリケーションの枠組みができる状態から開発するのに慣れていたため、１から書くのはめんどくさい…ので！
自分でAppShellっぽいもの作っておけばあとはパラメータ足すだけでいいやんって感じでゆるーく作りました。


 まずはみんな大好きYamada UIのご紹介
...]]></description><link>https://zenn.dev/maru_contents/articles/yamada-ui_appshell</link><guid isPermaLink="true">https://zenn.dev/maru_contents/articles/yamada-ui_appshell</guid><pubDate>Thu, 14 Nov 2024 05:40:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fPOIPHCQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Yamada%2520UI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582Mantine%25E3%2581%25AEAppShell%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A0%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyZDVlZjUxOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maru</dc:creator></item><item><title><![CDATA[ワークスペースにおける TypeScript パッケージの解決戦略]]></title><description><![CDATA[ワークスペースを利用している TypeScript プロジェクトの開発をしているとき、共通パッケージの依存解決の方法には

素直に build 成果物を参照する
exports フィールドで build 前の TypeScript ファイルを直接参照する

等いくつかの選択肢があります。
このエントリでは、それぞれのやり方での制約や、開発体験の良し悪し等を比較して状況に応じてどういうアプローチを採用するのが良いか考えてみます。

 補足資料
https://zenn.dev/kimuson/scraps/52da20e64f2d51
上記のスクラップで調べたことがベースになっています。
...]]></description><link>https://zenn.dev/bm_sms/articles/typescript_workspace_custom_condition</link><guid isPermaLink="true">https://zenn.dev/bm_sms/articles/typescript_workspace_custom_condition</guid><pubDate>Thu, 14 Nov 2024 02:11:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jjsSBJ7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%2520TypeScript%2520%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2588%25A6%25E7%2595%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258D%25E3%2582%2580%25E3%2581%259D%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZTAzZGU0MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25A0%25E3%2583%25BB%25E3%2582%25A8%25E3%2582%25B9%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1NWE1MzY5MWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きむそん</dc:creator></item><item><title><![CDATA[fake-indexeddbでvi.useFakeTimersを使う]]></title><description><![CDATA[fake-indexeddbを使ってテストを書いている時にvi.useFakeTimersを併用するとハングするケースがあります。その場合以下のようshouldAdvanceTimeオプションを設定すると解決する可能性があります。
vi.useFakeTimers({shouldAdvanceTime:true});
]]></description><link>https://zenn.dev/takiuchi/articles/036ec3769b8e92</link><guid isPermaLink="true">https://zenn.dev/takiuchi/articles/036ec3769b8e92</guid><pubDate>Thu, 14 Nov 2024 00:42:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gXwktjRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fake-indexeddb%25E3%2581%25A7vi.useFakeTimers%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0NFOHVIcHhmTmR3cHhzemVBWnlmSFg1VG01NVhFNDh6d3RQSkNrc21MY1BCTG5tNTY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takiuchi</dc:creator></item><item><title><![CDATA[TypeScriptによるDependency Injection入門：DIコンテナを自作して内部構造を理解する]]></title><description><![CDATA[
 はじめに
私は初めてDependency Injection（依存性注入）という概念に出会ったのは、NestJSのドキュメントを読んでいるときでした。その時、providerや@Injectable()は何なのか？といった素朴な疑問を感じましたが、ドキュメントを読んでもすぐには理解できず、そのまま一度放置しました。
最近、業務で触れているAPIサービスではNestJSではなく、InversifyJSというライブラリを使用してDependency Injectionを実装しています。これを機に、DIについてもう一度学び直すことにしました。そして、自分が調べて理解したことをまとめて共有し...]]></description><link>https://zenn.dev/spacemarket/articles/8ddba858aa09c2</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/8ddba858aa09c2</guid><pubDate>Wed, 13 Nov 2024 23:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ywm5K6JR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BDependency%2520Injection%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259ADI%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E5%2586%2585%25E9%2583%25A8%25E6%25A7%258B%25E9%2580%25A0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:lei%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JNMnlQbTdQZmtlR3FSRGZ6ZVc0UVNLYW1HMGkzVnQ1dE9uaGMzN1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lei</dc:creator></item><item><title><![CDATA[ElectronとNext.jsとSupabaseでフラッシュカードを開発する]]></title><description><![CDATA[Nextron（ElectronとNext.js）とSupabaseとPrismaを使用してフラッシュカードを開発します。
基本編では「ユーザ認証」「デッキの作成」「デッキの表示」「フラッシュカードで学習する」「デッキの編集」「デッキの削除」を実装していきます。]]></description><link>https://zenn.dev/jp_ymatsumoto/books/flashcard-by-nextron</link><guid isPermaLink="true">https://zenn.dev/jp_ymatsumoto/books/flashcard-by-nextron</guid><pubDate>Wed, 13 Nov 2024 16:24:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t6zRBTaK--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xMzlhYWJmNWRkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>松本勇拓</dc:creator></item><item><title><![CDATA[Configurando un proyecto de React para producción]]></title><description><![CDATA[
 Configurando un proyecto de React para producción

 Introducción
Internet está lleno de tutoriales sobre cómo iniciar un proyecto web con React, sin embargo la mayoría de estos tutoriales son para proyectos pequeños o de prueba. En este tutorial, aprenderás cómo las empresas reales configuran s...]]></description><link>https://zenn.dev/oroyajosue/articles/7ee9d46e796ce9</link><guid isPermaLink="true">https://zenn.dev/oroyajosue/articles/7ee9d46e796ce9</guid><pubDate>Wed, 13 Nov 2024 16:07:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iEaRvonF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Configurando%2520un%2520proyecto%2520de%2520React%2520para%2520producci%25C3%25B3n%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25AD%25E3%2583%25A4%25E3%2583%259B%25E3%2582%25B9%25E3%2582%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlFwQzJtY0xvc3dqZzR0bVRpTDk5RU9wV3RNLUtOcTduRkdySzZaNjhPV2JpdndOTmM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オロヤホスエ</dc:creator></item><item><title><![CDATA[【TypeScript】typeofとkeyofでもう迷いたくない]]></title><description><![CDATA[
 はじめに
TypeScriptでよく使う typeof と keyof の使い分けにいつも悩んでしまうので、備忘録としてここにまとめておくことにしました。
!
他にもわかりやすく解説された記事が多いですが、参考にさせていただきつつ、自分にとって理解しやすいように整理しています


 1. typeof で型を取得する
typeof は、JavaScriptの値の型を取得するものとしてよく知られていますが、TypeScriptでは「ある変数の型そのもの」を取り出すために使えます。

 使い方
const userName = "shige";
type UserNameType = t...]]></description><link>https://zenn.dev/5hige99/articles/2de2c4569fc6aa</link><guid isPermaLink="true">https://zenn.dev/5hige99/articles/2de2c4569fc6aa</guid><pubDate>Wed, 13 Nov 2024 14:38:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QrZGEeTi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591typeof%25E3%2581%25A8keyof%25E3%2581%25A7%25E3%2582%2582%25E3%2581%2586%25E8%25BF%25B7%25E3%2581%2584%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shige%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG8xbmI1YzN4c2NjQUNVUW5OVlR1blhFUmZ5c1FwRk93NnF3NkQxMF9iMWkwT1VtQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shige</dc:creator></item><item><title><![CDATA[【Githubキラキラプロフィール計画】使っている言語の割合チャートを自作する]]></title><description><![CDATA[
 やりたいこと
リポジトリにあるこういうやつと同じチャートをGithubのプロフィールにも表示したい！


 技術選定

 データ取得
Github APIでリポジトリごとの言語の行数を取得できます。
具体的には以下のGraphQLクエリで取得します。
query userInfo($username: String!, $limit: Int!) {
  user(login: $username) {
    repositories(ownerAffiliations: OWNER, isFork: false, first: 100) {
      nodes {
     ...]]></description><link>https://zenn.dev/reizt/articles/github-profile-language-stats</link><guid isPermaLink="true">https://zenn.dev/reizt/articles/github-profile-language-stats</guid><pubDate>Wed, 13 Nov 2024 11:29:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9SkL4RL6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Github%25E3%2582%25AD%25E3%2583%25A9%25E3%2582%25AD%25E3%2583%25A9%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E8%25A8%2588%25E7%2594%25BB%25E3%2580%2591%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E5%2589%25B2%25E5%2590%2588%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Reiju%2520Takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkOTc0OGE2OTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Reiju Takahashi</dc:creator></item><item><title><![CDATA[lint-stagedで実行するスクリプトになんかファイルパスが付いてて詰まってた話]]></title><description><![CDATA[
 概要
タイトル通り、「lint-stagedで実行したスクリプトの最後になんかパスついてるな〜、そのせいでスクリプト実行うまくいかないな〜」となってました。
ドキュメントをしっかり読んでれば（しっかりじゃなくてもいいかも）詰まることはなかったので、「ドキュメント読んで理解して使え」っていう自分への戒めとして記事に残しておきます。

 lint-stagedとは
指定したパターンにマッチしたファイルが変更された時に実行するスクリプトを定義できます。
Git Hooksと組み合わせて、コミット前にリントを強制するみたいな使い方をします。

 結論
というか結論しかありません。😄
実行する...]]></description><link>https://zenn.dev/hirohokke/articles/34dc007761580e</link><guid isPermaLink="true">https://zenn.dev/hirohokke/articles/34dc007761580e</guid><pubDate>Wed, 13 Nov 2024 08:53:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YU4tcS9p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:lint-staged%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2593%25E3%2581%258B%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25B9%25E3%2581%258C%25E4%25BB%2598%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25A6%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:omihirofumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxM2EwYTRhYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>omihirofumi</dc:creator></item><item><title><![CDATA[Nuxt3でブラウザバックを無効化する汎用コード]]></title><description><![CDATA[モーダルなどのコンポーネント内で、ブラウザバックを無効化したい時ありますよね。
これまでは毎回個別に書いていたんですが、まとめるととってもシンプルになりました！

 完成系
composables内に下記ファイルを作成

composables/usePreventBrowserBack.ts
export const usePreventBrowserBack = (callback?: () =&gt; void) =&gt; {
  const handlePopState = () =&gt; {
    history.go(1)
    callback?.() // 実行し...]]></description><link>https://zenn.dev/urstudx_blog/articles/2498a173e4f38b</link><guid isPermaLink="true">https://zenn.dev/urstudx_blog/articles/2498a173e4f38b</guid><pubDate>Wed, 13 Nov 2024 08:04:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OHjSvoEV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt3%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E7%2584%25A1%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%25B1%258E%25E7%2594%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Chaika%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczMWQzYjAyZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UrSTUDX%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0YThkYmIzYWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Chaika</dc:creator></item><item><title><![CDATA[【Githubキラキラプロフィール計画】使っている言語の割合チャートを自作する]]></title><description><![CDATA[
 やりたいこと
リポジトリにあるこういうやつと同じチャートをGithubのプロフィールにも表示したい！


 技術選定

 データ取得
Github APIでリポジトリごとの言語の行数を取得できます。
具体的には以下のGraphQLクエリで取得します。
query userInfo($username: String!, $limit: Int!) {
  user(login: $username) {
    repositories(ownerAffiliations: OWNER, isFork: false, first: 100) {
      nodes {
     ...]]></description><link>https://zenn.dev/reizt/articles/github-language-stats</link><guid isPermaLink="true">https://zenn.dev/reizt/articles/github-language-stats</guid><pubDate>Wed, 13 Nov 2024 05:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9SkL4RL6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Github%25E3%2582%25AD%25E3%2583%25A9%25E3%2582%25AD%25E3%2583%25A9%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E8%25A8%2588%25E7%2594%25BB%25E3%2580%2591%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E5%2589%25B2%25E5%2590%2588%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Reiju%2520Takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkOTc0OGE2OTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Reiju Takahashi</dc:creator></item><item><title><![CDATA[coc.nvimで指定したファイル内の補完候補を除外する方法]]></title><description><![CDATA[同じ名前の補完候補が複数ある場合、間違った対象で補完してしまうと気が付きにくいバグを生み出してしまう可能性が高いのでなるべく一意な名称をつける方がいいのですが、外部モジュールなど自分の管理外のコードが絡むとそれが難しいケースもあります。
そのような場合は以下のようにCocConfigから特定のパターンのファイルで定義された名称を補完候補から取り除く事ができます。
  "typescript.preferences.autoImportFileExcludePatterns": [
    "**/*_off.ts"
  ],
]]></description><link>https://zenn.dev/takiuchi/articles/ef5cf4a5dbc01c</link><guid isPermaLink="true">https://zenn.dev/takiuchi/articles/ef5cf4a5dbc01c</guid><pubDate>Wed, 13 Nov 2024 00:08:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p6Eh36f2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:coc.nvim%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2586%2585%25E3%2581%25AE%25E8%25A3%259C%25E5%25AE%258C%25E5%2580%2599%25E8%25A3%259C%25E3%2582%2592%25E9%2599%25A4%25E5%25A4%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takiuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0NFOHVIcHhmTmR3cHhzemVBWnlmSFg1VG01NVhFNDh6d3RQSkNrc21MY1BCTG5tNTY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takiuchi</dc:creator></item><item><title><![CDATA[ポケポケのガチャ確率シミュレーター作った]]></title><description><![CDATA[ポケポケ無課金勢だが、全然exポケモン集まらないのでどのくらい低確率なのか調べるために作った。

 サイト
https://gacha.turai.work/pokepoke.html

 技術スタック

Vite
Mantine

技術選定だが、元々ガチャシュミレーターを開発していたのでポケポケの確率に合わせて別のページを作った。初版は4年前だがなんと3回も作り直している。

初代: https://github.com/thr3a/gacha-simulator

Nuxt(Vue.js), Bootstrap


2代目: https://github.com/thr3a/gach...]]></description><link>https://zenn.dev/thr3a/articles/a193ff55c40e0b</link><guid isPermaLink="true">https://zenn.dev/thr3a/articles/a193ff55c40e0b</guid><pubDate>Tue, 12 Nov 2024 16:00:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wtx-9zxC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2582%25B1%25E3%2583%259D%25E3%2582%25B1%25E3%2581%25AE%25E3%2582%25AC%25E3%2583%2581%25E3%2583%25A3%25E7%25A2%25BA%25E7%258E%2587%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:thr3a%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzMjdmNGU4MjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>thr3a</dc:creator></item><item><title><![CDATA[なぜ英語でZustandやJotaiに関する本を出版したのか]]></title><description><![CDATA[個人的にはコードを書くのは好きですが、文章を書くのは苦手です。なので、ブログはいつも短文ですし、OSSのドキュメントも簡素なことが多いです。そんな私ですが、何年か前に本を出版しました。参考になるかわかりませんが、ちょっと経緯を振り返ってみようと思います。タイトルにもあるように、本は英語で書きました。本に限らず、ブログやOSSのドキュメントも英語ですが。英語の本は書いたことがなかったので、興味がありました。本を書くことに興味があったわけではなく、英語の本の著者に興味がありました。だってプロフィールに書けるじゃないですか。それだけです。本という形態は、Web開発など移り変わりの早い分野にはあ...]]></description><link>https://zenn.dev/dai_shi/articles/d6c9c2452083d4</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/d6c9c2452083d4</guid><pubDate>Tue, 12 Nov 2024 11:09:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zLXdKiQ6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E8%258B%25B1%25E8%25AA%259E%25E3%2581%25A7Zustand%25E3%2582%2584Jotai%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E6%259C%25AC%25E3%2582%2592%25E5%2587%25BA%25E7%2589%2588%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[バックエンドエンジニアがフロントエンドに挑戦して得た学び]]></title><description><![CDATA[株式会社CastingONEの清水です。
自分は元々バックエンドとしてやっていたのですが、去年の12月頃からフロントエンドをやり始めてからもうすぐ1年が経ちます。
バックエンドエンジニアがフロントエンドを1年弱やっていく過程で起こったこと、役立ったことをまとめてみました。

 各時期における経験と学び

 1. React・TypeScriptについて何もわからない時期
この時期の特徴

できること

フロントは何もない


課題

React・TypeScriptについて何もわからない



効果的だった取り組み

一般的なReact・TypeScriptの入門記事などを読んで基本的な...]]></description><link>https://zenn.dev/castingone_dev/articles/d1a8722c246955</link><guid isPermaLink="true">https://zenn.dev/castingone_dev/articles/d1a8722c246955</guid><pubDate>Tue, 12 Nov 2024 11:03:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zGMmAr6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E5%25BE%2597%25E3%2581%259F%25E5%25AD%25A6%25E3%2581%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:CastingONE%2520Tech%2520Blog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiOTg1ODI2NjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CastingONE%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3YjQ5ZGY1Y2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>CastingONE Tech Blog</dc:creator></item><item><title><![CDATA[Unsupported cipher or incorrect key length. Supported ciphers are: aes]]></title><description><![CDATA[Laravelで躓いた点をまとめておきます。
Dockerでローカル環境を作ったものの、立ち上げた瞬間に謎のエラーが出ました。
「Unsupported cipher or incorrect key length. Supported ciphers are: aes」
Chat GPTによると
「エラーメッセージ「Unsupported cipher or incorrect key length. Supported ciphers are: aes-128-cbc, aes-256-cbc, aes-128-gcm, aes-256-gcm.」は、暗号化処理に必要な「暗号化方式（...]]></description><link>https://zenn.dev/aya_sato/articles/717d3dbb9a6e52</link><guid isPermaLink="true">https://zenn.dev/aya_sato/articles/717d3dbb9a6e52</guid><pubDate>Tue, 12 Nov 2024 10:23:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ea1cPTg3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unsupported%2520cipher%2520or%2520incorrect%2520key%2520length.%2520Supported%2520cip...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aya%2520satoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLa3dRbnNlMlVSdUs0ellWZ3FOZHJ3bnBBTzdyNmRYd3lTMU1JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aya satoh</dc:creator></item><item><title><![CDATA[propsの基本（React）]]></title><description><![CDATA[
 はじめに
Reactのコンポーネント間で値をやり取りする場合の方法の一つであるpropsについて学んだので、備忘録として使用例を交えながら解説を残したい。（間違っていたらコメント下さい。修正します。）

 そもそもReactのpropsとは。
簡潔に言うと、"コンポーネント間の値のやり取りを可能にするもの"です。
useStateとの違い
似たような状態の管理方法に、useStateがありますが、useStateで管理できるのはコンポーネント内の値だけなのでコンポーネントを跨いでグローバルに値をやり取りする場合にはpropsやcontextなど、他の方法で対応する必要があります。

...]]></description><link>https://zenn.dev/aputech/articles/ecfefa755df245</link><guid isPermaLink="true">https://zenn.dev/aputech/articles/ecfefa755df245</guid><pubDate>Tue, 12 Nov 2024 03:03:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fNWezNSP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:props%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25EF%25BC%2588React%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2583%25BC%2540%25E6%2583%2585%25E5%25A0%25B1%25E7%25B3%25BB%25E5%25AD%25A6%25E7%2594%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4NGM3YTBlZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひー@情報系学生</dc:creator></item><item><title><![CDATA[【React】ドラックで操作可能なコンポーネントの実装]]></title><description><![CDATA[
 デモ


 実装

 親コンポーネントからの呼び出し

App.tsx
const App = () =&gt; {
return 
  &lt;Draggable ignore={['input', 'textarea']}&gt;
      &lt;form&gt;省略&lt;/form&gt; //ドラッグしたいコンポーネントやHTMLElement
  &lt;/Draggable&gt;
}


 Draggableコンポーネントの実装
TailwindCssでスタイリングしています。

Draggable.tsx
import React, { useCallback,...]]></description><link>https://zenn.dev/makimura3329/articles/react-draggable-component-20241112</link><guid isPermaLink="true">https://zenn.dev/makimura3329/articles/react-draggable-component-20241112</guid><pubDate>Tue, 12 Nov 2024 02:06:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iJdZFxDO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A7%25E6%2593%258D%25E4%25BD%259C%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2520Makimura%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3ZTE1MjMxZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>🧟Makimura🧟</dc:creator></item><item><title><![CDATA[既存のプロジェクトにしれっとKnipを導入して不要なファイルが増えないようにする]]></title><description><![CDATA[
 はじめに
チームで開発していると、たまにどこからも使われてない謎のファイルが残っちゃうことありますよね。
変更だと差分が出てくれるのでレビューしやすいのですが、「使われなくなった」を発見するのは結構難しい…
そんな悩みを Knip が解決してくれそうだったので、既存のプロジェクトにしれっと入れてみました。

 Knipとは
https://knip.dev/
不要なファイルや不要な export を検知してくれるやつ。

 しれっと入れる
基本公式サイトの指示どおりにやるだけです。
yarn create @knip/config
これでインストールされます。
yarn knip
こ...]]></description><link>https://zenn.dev/monmomo/articles/0d0ab1de89fd62</link><guid isPermaLink="true">https://zenn.dev/monmomo/articles/0d0ab1de89fd62</guid><pubDate>Mon, 11 Nov 2024 13:58:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SsC_6fFW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E3%2581%2597%25E3%2582%258C%25E3%2581%25A3%25E3%2581%25A8Knip%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258C%25E5%25A2%2597%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2593%25E3%2582%2582%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzN2Q3ZTgwN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もんもも</dc:creator></item><item><title><![CDATA[Next.jsで実装する場合に、セキュリティ面で気を付けること]]></title><description><![CDATA[
 はじめに
以下のYoutubeで解説されていた内容が勉強になったのでまとめた。
https://www.youtube.com/watch?v=LolugLiLhHs

 ポイント
・Propsで渡す情報に気を付ける
・SeverActionsに注意する
・認証チェックをする場所について

 Propsで渡す情報に気を付ける
Next.jsでは、サーバーコンポーネントと、クライアントコンポーネントがある。
例として、サーバーコンポーネント内で、ユーザー情報を取得して、クライアントコンポーネントにその値を渡してしまった場合、本来見られてはいけないユーザー情報がブラウザで見ることが可能に...]]></description><link>https://zenn.dev/ryohei0509/articles/b86b4b044f58ab</link><guid isPermaLink="true">https://zenn.dev/ryohei0509/articles/b86b4b044f58ab</guid><pubDate>Mon, 11 Nov 2024 13:06:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ULsvaj5E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AB%25E3%2580%2581%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E9%259D%25A2%25E3%2581%25A7%25E6%25B0%2597%25E3%2582%2592%25E4%25BB%2598%25E3%2581%2591%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hukuryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2JhYWM4YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hukuryo</dc:creator></item></channel></rss>