<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「shell」のフィード]]></title><description><![CDATA[Zennのトピック「shell」のRSSフィードです]]></description><link>https://zenn.dev/topics/shell</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/c8d33e6510.jpeg</url><title>Zennの「shell」のフィード</title><link>https://zenn.dev/topics/shell</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 07 Jan 2025 12:04:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/shell/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Git Commitの各種オプションとその使い道]]></title><description><![CDATA[
 概要

git commitする際にmオプションくらいしか使ってなくない？
公式ドキュメントを読んでもっと効率の良い使い方がないかを調べて紹介します
https://git-scm.com/docs/git-commit



 各種オプション 利用ケースを添えて

 git commit -a でまとめてaddしてコミット
変更差分があるファイルを個別でaddせずともコミットしてくれます。自動フォーマットをコミットしたい場面で修正が担保されている場合にはこのコマンドを使うのがおすすめ。

 git commit -p のパッチオプションつきで部分的にコミットする
git add -...]]></description><link>https://zenn.dev/masaki_mori72/articles/8ccc180632ba50</link><guid isPermaLink="true">https://zenn.dev/masaki_mori72/articles/8ccc180632ba50</guid><pubDate>Tue, 07 Jan 2025 10:11:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wBaH_Fov--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Git%2520Commit%25E3%2581%25AE%25E5%2590%2584%25E7%25A8%25AE%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E9%2581%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masaki%2520mori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h0Zy0zeERLZF9VY19OaFA0TVB2S1BqRkNFc2JrV1loSk5aTV9LPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masaki mori</dc:creator></item><item><title><![CDATA[MacのFinderで常に隠しファイルを表示する]]></title><description><![CDATA[
 常に隠しファイルを表示するコマンド

設定を更新してAppleShowAllFilesを有効化
defaults write com.apple.finder AppleShowAllFiles -bool true


Finderを再起動
killall Finder


 一時的に表示・非表示を切り替える
別の方法としてはFinderがアクティブな状態でCommand + Shift + . を押す。
ただしこの方法では一時的に切り替わるだけ。

 設定を元に戻すには
設定をtrueからfalseにすれば良い。以下のようにコマンドを設定する

AppleShowAllFiles...]]></description><link>https://zenn.dev/masaki_mori72/articles/eb0acac96fc8fe</link><guid isPermaLink="true">https://zenn.dev/masaki_mori72/articles/eb0acac96fc8fe</guid><pubDate>Mon, 06 Jan 2025 06:42:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ePKC5_FE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25AEFinder%25E3%2581%25A7%25E5%25B8%25B8%25E3%2581%25AB%25E9%259A%25A0%25E3%2581%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masaki%2520mori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h0Zy0zeERLZF9VY19OaFA0TVB2S1BqRkNFc2JrV1loSk5aTV9LPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masaki mori</dc:creator></item><item><title><![CDATA[コマンドを後からnohup的な感じにする]]></title><description><![CDATA[
 これは何？
時間がかかるコマンドを実行する際にフォアグラウンドで実行してしまった時に、nohup的なことをやるための方法をまとめる

 答え
$ ./hoge
^Z
$ jobs
$ bg 1
$ disown %1
※jobのIDは適宜変更

コマンド中断：Control + Z

ジョブIDを取得：jobs

バックグラウンドへ移動：bg {job_id}

ジョブテーブルから外す（ログアウトしてもkillされない）：disown %{job_id}



 参考
https://blog.glidenote.com/blog/2013/09/26/bg-and-disown/
...]]></description><link>https://zenn.dev/awonosuke/articles/2128b5e9626ebd</link><guid isPermaLink="true">https://zenn.dev/awonosuke/articles/2128b5e9626ebd</guid><pubDate>Mon, 06 Jan 2025 01:54:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bz_zQHcE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25BE%258C%25E3%2581%258B%25E3%2582%2589nohup%25E7%259A%2584%25E3%2581%25AA%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:awonosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhMjljMWI3NWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>awonosuke</dc:creator></item><item><title><![CDATA[zsh で alias の代わりに abbr を使ってみた感想]]></title><description><![CDATA[
 はじめに
既にご存じの方も多数だと思いますが、alias とはコマンドのエイリアス (別名) を登録・表示するコマンドで、alias &lt;word&gt;="&lt;command&gt;" のように設定します。
例えば、以下のように設定しておくと ll で ls -l を実行できます。
alias ll="ls -l"

 abbr とは
abbr とは略語を自動展開してくれる zsh マネージャです。


 abbr の良いところ

 コマンドが展開してから実行される
これが一番の魅力といっても過言ではないと思います。
abbr ではコマンドが展開してから実行されます。これの...]]></description><link>https://zenn.dev/guitarinchen/articles/e9999d54cc5295</link><guid isPermaLink="true">https://zenn.dev/guitarinchen/articles/e9999d54cc5295</guid><pubDate>Thu, 02 Jan 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qoVEa_p4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zsh%2520%25E3%2581%25A7%2520alias%2520%25E3%2581%25AE%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AB%2520abbr%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:guitarinchen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMjdmMGEzNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>guitarinchen</dc:creator></item><item><title><![CDATA[設定したalias名を忘れるのでpecoで探して実行する]]></title><description><![CDATA[タイトルどおりです。
aliasを設定したはいいんですが、たまにしか使わないものってよく忘れませんか？
gitのブランチ削除、sshのknow_hostsファイルからec2インスタンスを削除、とか作ったはいいんですがほぼ毎回aliasの設定を確認している気がします。
なので、pecoで簡単に実行してみました。
$ eval $(alias | sort | peco | sed -e 's/=.*$//')
自分の環境はzshです。
今回は単純にaliasで読み込ませていますが、pecoの一覧に出てきてほしいものに予め分けておいたほうが良さそうです。
]]></description><link>https://zenn.dev/shikazuki/articles/f181432d397b9d6a8eec</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/f181432d397b9d6a8eec</guid><pubDate>Tue, 31 Dec 2024 13:06:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7DuwrlRM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259Falias%25E5%2590%258D%25E3%2582%2592%25E5%25BF%2598%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7peco%25E3%2581%25A7%25E6%258E%25A2%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[shellコマンド個人的備忘集]]></title><description><![CDATA[未経験から3年で使用したshellコマンドの中で個人的に使うコマンドをまとめておきます。
OJT中によく聞かれたコマンドも記載しておきます。

 ssh-keygen
rsaのssh-key生成
ssh-keygen -t rsa
known_hostsから特定のhostを削除
# 特定のホストをremove
ssh-keygen -R github.com

 ssh
github, bitbucketなどでsshで接続できることを確認する
# ssh-keygenでssh-keyを作成済. githubに公開鍵の設定済
ssh -T github.com
awsのec2インスタンスに...]]></description><link>https://zenn.dev/shikazuki/articles/928da96d97ae5a7e1fca</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/928da96d97ae5a7e1fca</guid><pubDate>Tue, 31 Dec 2024 13:05:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TnQlHMAw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:shell%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E5%2582%2599%25E5%25BF%2598%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[Makefileの基礎的な活用方法]]></title><description><![CDATA[
 導入
Makefileって聞くとどんなイメージをもちますか？
c,c++のビルドツールというイメージを持ってる人も多いですよね。
そのようなイメージを持たれがちなMakefileですが、実はシェルスクリプトを束ねた便利ツールとして使うこともできます。
特に何が便利かというと、所定コマンド実行の前提で必要なコマンド群を定義して、シーケンス制御がさくっとできる点です。
今回は、Makefileの基本的な使い方や、シーケンス制御のやり方を紹介しようと思います。

 基本的な使い方

 基本構造
Makefileを使うときは、
ターゲット名と依存ターゲットを書いて、その中で実行したいシェルス...]]></description><link>https://zenn.dev/collabostyle/articles/e0ec4f27f56d6c</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/e0ec4f27f56d6c</guid><pubDate>Fri, 27 Dec 2024 03:10:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--geyPALRP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Makefile%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E6%25B4%25BB%25E7%2594%25A8%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yushi-s%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSk1DWlFPZDBzMmF6VWgtQ0lVZjRvTnVxeW5ZUUswU0g2N3M3M1hVbjFvQldPRDJBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yushi-s</dc:creator></item><item><title><![CDATA[git cleanコマンドのオプションと具体的な利用ケース]]></title><description><![CDATA[
 概要

git cleanコマンドをちゃんと使えてない、特にオプションなど気にせず使っている
具体的な利用ケースと合わせてメモ書き


 git cleanの具体的な利用ケースとオプションについて
詳しく知りたいならとにかくgit-bookを読んでみるのをおすすめする。オプションから主要な利用ケースまで解説してあるので。今回はこれに加えて個人的な利用オプションをいくつかピックアップしてメモ書きしておく
https://git-scm.com/book/ja/v2/Git-のさまざまなツール-作業の隠しかたと消しかた

 -fd の組み合わせでとにかくリセットしたい
# とにかく作業デ...]]></description><link>https://zenn.dev/masaki_mori72/articles/99f77af83df154</link><guid isPermaLink="true">https://zenn.dev/masaki_mori72/articles/99f77af83df154</guid><pubDate>Wed, 25 Dec 2024 03:17:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vFXtgpE5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:git%2520clean%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AA%25E5%2588%25A9%25E7%2594%25A8%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masaki%2520mori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h0Zy0zeERLZF9VY19OaFA0TVB2S1BqRkNFc2JrV1loSk5aTV9LPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masaki mori</dc:creator></item><item><title><![CDATA[xargs の -I オプションとコマンドライン長の制約]]></title><description><![CDATA[
 概要
この記事では xargs コマンドの基本的な使いかたと、便利な -I オプションの紹介をします。
最後に、xargs コマンドの -I オプションを用いたときの置換文字列長の制約についてまとめます。
最後の内容はシェル芸人しか得しない結構ニッチな部分になってしまったと思いますが、-I オプション自体はかなり便利なので、このオプションだけでも覚えていってもらえれば幸いです。

 なんでこんな記事書いたの?
昨日こんな記事を書きました。
https://zenn.dev/sankantsu/articles/ef2d277789fa8a
しかし、翌日になっていろいろ試していたら M...]]></description><link>https://zenn.dev/sankantsu/articles/ca15e7b0e18387</link><guid isPermaLink="true">https://zenn.dev/sankantsu/articles/ca15e7b0e18387</guid><pubDate>Sun, 22 Dec 2024 07:12:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Upet-4o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:xargs%2520%25E3%2581%25AE%2520-I%2520%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E9%2595%25B7%25E3%2581%25AE%25E5%2588%25B6%25E7%25B4%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sankantsu</dc:creator></item><item><title><![CDATA[踏み台サーバーのアルゴリズムが古い場合の多段SSHの方法]]></title><description><![CDATA[踏み台サーバーが古いためにオプション無しではssh実行時にアルゴリズムが合致せず、sshできない場合があります。
また、多段ssh(portfoward)を実行したい場合にはさらに厄介です。
そうした場面で使えるsshの設定です。

 !!!注意!!!
本記事では回避策を掲示していますが、セキュリティ対応を遅らせることを推奨するものではありません。
サーバー側のセキュリティ更新が絶対です。
古いアルゴリズムは暗号化強度が弱く、解読されてしまう危険性が高まります。

 .ssh/config ファイルの利用
.ssh/config を利用するとsshコマンド実行時に接続先が補完され、use...]]></description><link>https://zenn.dev/takeaki_m/articles/af008273110c9b</link><guid isPermaLink="true">https://zenn.dev/takeaki_m/articles/af008273110c9b</guid><pubDate>Sun, 22 Dec 2024 04:24:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NheT_-09--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B8%258F%25E3%2581%25BF%25E5%258F%25B0%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%258C%25E5%258F%25A4%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25A4%259A%25E6%25AE%25B5SSH%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:take%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NGUxN2RmODYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>take</dc:creator></item><item><title><![CDATA[OSC 52 で出力をクリップボードにコピーするためのワンライナー]]></title><description><![CDATA[
 ワンライナーまとめ
./cmd の出力をクリップボードにコピーできるワンライナー
# サブシェル (`(...)`) or グループコマンド (`{...}`)
$ ./cmd | (echo -e "\e]52;;"; base64 | tr -d "\n"; echo -e "\e\\")
$ ./cmd | {echo -e "\e]52;;"; base64 | tr -d "\n"; echo -e "\e\\"}

# $(...) で直接埋めこむ
$ echo -ne "\e]52;;$(./cmd | base64 | tr -d '\n')\e\\"
# 端末によっ...]]></description><link>https://zenn.dev/sankantsu/articles/ef2d277789fa8a</link><guid isPermaLink="true">https://zenn.dev/sankantsu/articles/ef2d277789fa8a</guid><pubDate>Sat, 21 Dec 2024 13:55:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lHhd9VCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OSC%252052%2520%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sankantsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmOTc0Nzk2ODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sankantsu</dc:creator></item><item><title><![CDATA[令和のコマンド履歴はコイツで見よう！「Atuin」の紹介]]></title><description><![CDATA[
 👋 はじめに
コマンド履歴と言えば、historyコマンドやCtrl+Rでの検索が一般的ですが、より高度な履歴管理を実現するツールとして「Atuin」を紹介します。私自身も導入してからコマンドの履歴検索などが曖昧な記憶でもリッチなUIから検索できて、作業が効率的になった気がするので、気になったら導入してみてはいかがでしょうか。

 🐢 Atuinとは
Atuinは、シェルの履歴をより強力で使いやすくするためのツールです。シェルの履歴を検索したり、統計情報を表示したり、私は使用してませんが同期機能を利用して複数のデバイス間で履歴を共有できたりもします。

Repository
http...]]></description><link>https://zenn.dev/jiros/articles/755356ba-c114-49f6-a286-1a6f8809e2d8</link><guid isPermaLink="true">https://zenn.dev/jiros/articles/755356ba-c114-49f6-a286-1a6f8809e2d8</guid><pubDate>Thu, 19 Dec 2024 14:29:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NlC7qGeF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25A4%25E5%2592%258C%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2581%25AF%25E3%2582%25B3%25E3%2582%25A4%25E3%2583%2584%25E3%2581%25A7%25E8%25A6%258B%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25E3%2580%258CAtuin%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:neko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1ODZmM2RjNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>neko</dc:creator></item><item><title><![CDATA[curl で gRPC の疎通確認をしたい]]></title><description><![CDATA[
 実行コマンド
printf '\x00\x00\x00\x00\x00' |
  curl \
    -v -s --http2 \
    --data-binary @- \
    --output - \
    -H "Content-Type: application/grpc" \
    -H "TE: trailers" \
    "${GRPC_ENDPOINT:?}/grpc.health.v1.Health/Check" |
  hexdump -C 
空のメッセージを /grpc.health.v1.Health/Check 宛に送ってあげれば良い。

...]]></description><link>https://zenn.dev/ginokent/articles/2eb44c78718c2c</link><guid isPermaLink="true">https://zenn.dev/ginokent/articles/2eb44c78718c2c</guid><pubDate>Thu, 19 Dec 2024 07:24:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kTtwTvo1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:curl%2520%25E3%2581%25A7%2520gRPC%2520%25E3%2581%25AE%25E7%2596%258E%25E9%2580%259A%25E7%25A2%25BA%25E8%25AA%258D%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ginokent%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3A4ams5ZGJhRkJRQjRZRjZuU0pBVTNhUlBsM2YtRkNRYi10VzRhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ginokent</dc:creator></item><item><title><![CDATA[俺のガチってるdotfiles紹介]]></title><description><![CDATA[
 はじめに
どうもです。3-shake の melanmeg です
今回は dotfiles 紹介です。
エンジニアにとっては、dotfiles は作業効率を上げるための 自分用チートシート のように感じています。もしくは これまで コツコツと積み上げてきた財産 ...ですかね。
普段から使い慣れた環境をどこでも再現できるようにしておくことで、複数の端末で素早く自分好みの環境を用意できます！
シェルやVSCodeのカスタマイズ、Gitの便利設定、そして新しいVMでの簡単なセットアップ方法を紹介します。dotfiles管理の魅力を共有し、皆さんの環境構築がもっと楽しくなればと思います🙇
...]]></description><link>https://zenn.dev/melanmeg/articles/dd0b9606352fb9</link><guid isPermaLink="true">https://zenn.dev/melanmeg/articles/dd0b9606352fb9</guid><pubDate>Tue, 17 Dec 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ffrSn5Ux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BF%25BA%25E3%2581%25AE%25E3%2582%25AC%25E3%2583%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258Bdotfiles%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:melanmeg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1OGE1Y2Q4MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>melanmeg</dc:creator></item><item><title><![CDATA[Bashで定義されている変数の完全な一覧]]></title><description><![CDATA[
 組み込み変数とは
Bashやシステムによってデフォルトで定義されている定数です。
envコマンドでも一覧表示することはできないのですが、スクリプト内で呼び出すとちゃんと値を返してくれます。
ここらへんの挙動は正直謎...

 情報元
以下に完全な一覧が掲載されています。
https://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html
]]></description><link>https://zenn.dev/hayao/articles/a40a4ce47c5ede</link><guid isPermaLink="true">https://zenn.dev/hayao/articles/a40a4ce47c5ede</guid><pubDate>Tue, 17 Dec 2024 04:25:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SrixlmP6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bash%25E3%2581%25A7%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B1%25B1%25E7%2594%25B0%25E3%2583%258F%25E3%2583%25A4%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lZMG9RMVBtQ2N2aXpaNHIzYnA4T1B1MU5jQV84UDR6czlSYzBYdXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山田ハヤオ</dc:creator></item><item><title><![CDATA[Salesforce API通信できるまで(2)]]></title><description><![CDATA[!
この記事は株式会社カオナビ Advent Calendar 2024 シリーズ2の17日目の記事です。

https://qiita.com/advent-calendar/2024/kaonavi

 概要

カオナビではSalesforceとAPI連携してシステム開発をしてます
この記事では【Salesforce のAPI疎通確認方法】を投稿します

前の記事では「Developer環境作成」 から「データの登録」「APIを利用するためのフレームワーク設定」までをまとめております

今回はデータを登録した内容をAPIを通じて取得する疎通確認までやってみます


開発や仕組みは理解...]]></description><link>https://zenn.dev/harieshokunin/articles/3098292b20b04d</link><guid isPermaLink="true">https://zenn.dev/harieshokunin/articles/3098292b20b04d</guid><pubDate>Sat, 14 Dec 2024 07:46:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZJxqZDp8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Salesforce%2520API%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25282%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B2%25BC%25E3%2582%258A%25E7%25B5%25B5%25E8%2581%25B7%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pmWmJmZWxybVEtLV84eDVjeFA4QklXc1dIdmhOZDFiWXNfd095b0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>貼り絵職人</dc:creator></item><item><title><![CDATA[Salesforce API通信できるまで(1)]]></title><description><![CDATA[!
この記事は株式会社カオナビ Advent Calendar 2024 シリーズ2の16日目の記事です。

https://qiita.com/advent-calendar/2024/kaonavi

 概要

カオナビではSalesforceとAPI連携してシステム開発をしてます
この記事では【Salesforce の無料で使える開発環境「Developer Edition」の取得方法】を投稿します
今回は「Developer環境作成」 から「データの登録」「APIを利用するためのフレームワーク設定」までをまとめております


次の記事では、データを登録した内容をAPIを通じて取得...]]></description><link>https://zenn.dev/harieshokunin/articles/7de11377b56bf4</link><guid isPermaLink="true">https://zenn.dev/harieshokunin/articles/7de11377b56bf4</guid><pubDate>Sat, 14 Dec 2024 07:42:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h00mzNwX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Salesforce%2520API%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25281%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25B2%25BC%25E3%2582%258A%25E7%25B5%25B5%25E8%2581%25B7%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pmWmJmZWxybVEtLV84eDVjeFA4QklXc1dIdmhOZDFiWXNfd095b0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>貼り絵職人</dc:creator></item><item><title><![CDATA[Batsを使ってシェルスクリプトをテストする]]></title><description><![CDATA[
 はじめに
この記事はシェルスクリプト＆PowerShell Advent Calendar 2024の12日目として書かれています。
https://qiita.com/advent-calendar/2024/shell

 概要
https://github.com/bats-core/bats-core
BatsはBash用のテストフレームワークです。
何らかのプログラミング言語で書くまででもない簡単なスクリプトを書こうと思った際に、とはいえテストが欲しいと思って見つけたのがBatsでした。
今回は簡単なBatsのテストコードの紹介をします。
書いたコードはここに置いています。...]]></description><link>https://zenn.dev/ara_ta3/articles/shell-script-test-with-bats</link><guid isPermaLink="true">https://zenn.dev/ara_ta3/articles/shell-script-test-with-bats</guid><pubDate>Thu, 12 Dec 2024 05:11:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SuaS07pt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bats%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ara_ta3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMmNmMDMwYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ara_ta3</dc:creator></item><item><title><![CDATA[記号だけでシェルピンスキーのギャスケットを描く]]></title><description><![CDATA[

 はじめに
シェルスクリプトで雪の結晶を描くという記事を書いた。
https://eng-blog.iij.ad.jp/archives/28606
この記事には頭がおかしいスクリプトしか出てこないのだが、その中でもとくにイカレてるのが、シェルピンスキーのギャスケットと呼ばれるフラクタル図形を描画する以下のシェルスクリプトである(元記事から1ヶ所修正した部分がある。詳しくは後述)。
! _(){
((____=__,${_______=_____[____]^=_____[____-__],++____&lt;___&amp;&amp;_______}))
$______&lt;&l...]]></description><link>https://zenn.dev/yamaya/articles/f4ea47e5c70d64</link><guid isPermaLink="true">https://zenn.dev/yamaya/articles/f4ea47e5c70d64</guid><pubDate>Wed, 11 Dec 2024 03:55:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DVTUaYXZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%2598%25E5%258F%25B7%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%25A3%25E3%2582%25B9%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXpaNXEwZXI1dzkzQ012dk0wcEpfOG1md1d5VVY3a3pYWVZIT2k9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamaya</dc:creator></item><item><title><![CDATA[Nushellと既存のシェルを併用する - なるべく移行しないで行こう！]]></title><description><![CDATA[この記事はNushell Advent Calendar 10日目の記事です。
新しい職場で開発環境のセットアップをしていて気づいたんですが、既存のツール群は当然Bashや（macOSの場合）Zshを前提としていることが多いので「Nushell（あるいはその他非POSIX shell）に移行するには、そうしたスクリプトとか.zshrcとか.bashrcとかも全部移行しないといけないのでは？」と思っている方も多いかも知れません。
しかし、実際のところLinuxでもmacOSでもWindowsでも仕様上、環境変数（.bashrcなどでexportした変数）は原則全て子プロセスに引き継がれるの...]]></description><link>https://zenn.dev/igrep/articles/2024-12-use-both-nu-and-others</link><guid isPermaLink="true">https://zenn.dev/igrep/articles/2024-12-use-both-nu-and-others</guid><pubDate>Tue, 10 Dec 2024 13:10:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--epHVbIEf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nushell%25E3%2581%25A8%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25B5%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2520-%2520%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258F%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2593%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YAMAMOTO%2520Yuji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzNWJhYTQ2ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YAMAMOTO Yuji</dc:creator></item></channel></rss>