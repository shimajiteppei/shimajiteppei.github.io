<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 17 Oct 2024 00:34:11 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Dev ContainerでTauriの開発環境を作る]]></title><description><![CDATA[以下のDev Containerの設定ファイルを使う。ポイントは、Desktop (Lightweight)を使ってWebブラウザ上でUbuntu画面を表示し、その画面上でTauriのGUIを表示する。

devcontainer.json
{
	"name": "Ubuntu",
	"image": "mcr.microsoft.com/devcontainers/base:jammy",
	"features": {
		"ghcr.io/devcontainers/features/desktop-lite:1": {
			"version": "latest",
			"noV...]]></description><link>https://zenn.dev/hkthirano/articles/122b36a6585120</link><guid isPermaLink="true">https://zenn.dev/hkthirano/articles/122b36a6585120</guid><pubDate>Wed, 16 Oct 2024 13:43:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K76cGT9y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%25E3%2581%25A7Tauri%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNThkMzViZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>のーまん</dc:creator></item><item><title><![CDATA[【vultr×Dify】でプライベートなAI環境構築]]></title><description><![CDATA[
 参考記事
今回参考にさせていただいた有益な記事は以下。


Difyを使ってLLMアプリを開発しよう - 環境構築とインターネット公開


公式 Docker Compose デプロイ



 前提

vultr(ヴァルチャー？)でVPSを契約している。
vultrサーバーのSSHの設定を済ませている。


 環境
vultr：ubuntu 24.0.0 LTS

 Dockerを使えるようにする
sudo apt update

sudo apt install -y docker.io

sudo systemctl start docker

sudo systemctl en...]]></description><link>https://zenn.dev/antapp/articles/383660cf919090</link><guid isPermaLink="true">https://zenn.dev/antapp/articles/383660cf919090</guid><pubDate>Wed, 16 Oct 2024 04:36:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NC9xPwfM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590vultr%25C3%2597Dify%25E3%2580%2591%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AAAI%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kutsu-4ta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZGQ1ZTdjY2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kutsu-4ta</dc:creator></item><item><title><![CDATA[開発環境ごとの Docker のコンテナを立ち上げる]]></title><description><![CDATA[
 はじめに
それぞれの環境ごとの都合でコンテナを立ち上げたい。

Mac は delegated オプションを設定したい
WSL は権限周りの問題を解決したい


 対応
複数の compose.yaml を指定した場合、後から指定した設定が上書きされるので、Makefile で環境ごとに yaml を指定する。

 ディレクトリ構成
.
├── docker
│   ├── Makefile
│   ├── compose-mac.yaml
│   ├── compose-wsl.yaml
│   └── compose.yaml
└── src
    └── htdocs
   ...]]></description><link>https://zenn.dev/oppara/articles/docker-mac-wsl</link><guid isPermaLink="true">https://zenn.dev/oppara/articles/docker-mac-wsl</guid><pubDate>Wed, 16 Oct 2024 00:06:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e9ZRe5Rk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%2520Docker%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oppara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyYTRKSGo5UzNEckZ0dTlwcUd5d0V4ZEZZTjZmS0JUQjBkTkthdFE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oppara</dc:creator></item><item><title><![CDATA[Nest.jsとPrismaをDockerで環境構築]]></title><description><![CDATA[どうも、フリーランスエンジニアのFUMIYAです！
Express.jsはよく触ってましたが、Nest.jsを触ったことがなかったのでローカルに立ち上げてみました。
本記事では、Nest.jsで開発をして学んだことをまとめていきます。

 Nest.jsとは？
Nest.jsとは、フロントエンドからバックエンドまで一貫してTypeScriptでの開発を実現できるExpressをコアにして作られているフレームワークです。

 目的
Nest.jsをdockerでローカルに立ち上げてAPIを開発することを目的とします。

 1. Docker構築

下記コマンドをルートディレクトリで実行し、...]]></description><link>https://zenn.dev/to_ichi/articles/cd584b54b31d70</link><guid isPermaLink="true">https://zenn.dev/to_ichi/articles/cd584b54b31d70</guid><pubDate>Tue, 15 Oct 2024 13:20:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_NnBBaOh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nest.js%25E3%2581%25A8Prisma%25E3%2582%2592Docker%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FUMIYA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdMNXdVSWlyUms0bV9FM0NnSmxGNXFINnhsaFBUZzdJYVFQNEd1MUtXVVYwVkZRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FUMIYA</dc:creator></item><item><title><![CDATA[Dockerコンテナの中身を少し調べた✐]]></title><description><![CDATA[
 ■①DockerDesctop
・DockerをGUIで操作するためのもので、コンテナの稼働、停止、再開、廃止などの操作ができる。
・コマンドラインでも操作できるけど準備が必要。
・コンテナの作成はコマンドラインで行う必要がある。
　
＜含まれているもの＞
Docker デーモン(dockerd )、Docker クライアント(docker)、Docker Compose、Docker Content Trust、Kubernetes、 Credential Helper）

 ■②Docker Compose
複数のコンテナを一括で操作できるツール
docker-compose.y...]]></description><link>https://zenn.dev/tamae/articles/d52e33b6b484f4</link><guid isPermaLink="true">https://zenn.dev/tamae/articles/d52e33b6b484f4</guid><pubDate>Tue, 15 Oct 2024 11:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--42EmTsv6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2582%2592%25E5%25B0%2591%25E3%2581%2597%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%25E2%259C%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:madoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNGUxNDkyYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>madoka</dc:creator></item><item><title><![CDATA[【Dify × heroku】DifyのDockerデプロイに関するWiki]]></title><description><![CDATA[
 概要
DifyをHeroku上で動作させるために、APIとWebの2つのDockerfileを利用します。データベースはHerokuのPostgreSQLアドオンを使用します。
追記に書きましたが、このやり方はバッドプラクティスです。
おすすめしないです笑

 背景
本当はDockerComopseがサポートされている環境で、Difyの恩恵にあやかりたかった。
herokuはDockerComposeはサポートしておらず、Dockerfileごとのデプロイしかできないため、
やむを得ず労力を割くという流れ。
（ECSとか使えるならそっちの方が楽だしスマート。）

 手順

 1. H...]]></description><link>https://zenn.dev/antapp/articles/62d50e656ef574</link><guid isPermaLink="true">https://zenn.dev/antapp/articles/62d50e656ef574</guid><pubDate>Tue, 15 Oct 2024 05:58:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fYhkChsN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Dify%2520%25C3%2597%2520heroku%25E3%2580%2591Dify%25E3%2581%25AEDocker%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258BWiki%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kutsu-4ta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZGQ1ZTdjY2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kutsu-4ta</dc:creator></item><item><title><![CDATA[まだuvicorn-gunicorn-dockerイメージ使ってるの？]]></title><description><![CDATA[
 uvicorn-gunicorn-dockerからカスタムUvicorn Dockerイメージへの移行
uvicorn-gunicorn-dockerイメージは非推奨となりました。
https://github.com/tiangolo/uvicorn-gunicorn-docker?tab=readme-ov-file#deprecated-tags
なぜなら、Uvicornを--workersオプションと共に直接使用することが可能になり、ほとんどのデプロイメントにおいてこのイメージが不要になったからです。特にKubernetesなどのシステムを使用する場合は、独自のDockerイ...]]></description><link>https://zenn.dev/htr_art/articles/62f027ecb8ae94</link><guid isPermaLink="true">https://zenn.dev/htr_art/articles/62f027ecb8ae94</guid><pubDate>Tue, 15 Oct 2024 05:33:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SQoY8Oq3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25BE%25E3%2581%25A0uvicorn-gunicorn-docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nwb%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2YzJkNjM4ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nwb</dc:creator></item><item><title><![CDATA[Docker環境でのFastAPIとRemix間の通信エラーの解決]]></title><description><![CDATA[
 エラーの概要
Remixコンテナのloader関数内から、FastAPIのエンドポイントを叩くと次のようなエラーが発生する。
TypeError: fetch failed
    at node:internal/deps/undici/undici:13185:13
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async Module.downloadFile (/app/app/fastapi/download.file.ts:5:26)
  ...]]></description><link>https://zenn.dev/masan_eeic/articles/f260797daf0ec7</link><guid isPermaLink="true">https://zenn.dev/masan_eeic/articles/f260797daf0ec7</guid><pubDate>Mon, 14 Oct 2024 17:57:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_zRKkn2l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2581%25AEFastAPI%25E3%2581%25A8Remix%25E9%2596%2593%25E3%2581%25AE%25E9%2580%259A%25E4%25BF%25A1%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2583%25BC%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyZDM0ODFhZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まーさん</dc:creator></item><item><title><![CDATA[Rails7 × Docker(ruby:3.3.5-alpine3.20) の開発環境構築で詰まったところ]]></title><description><![CDATA[
 環境

macOS Sonoma Version14.6
Dockerdesktop for mac


 1. ERROR:  Error installing rails:　 ERROR: Failed to build gem native extension.

 エラー詳細


rubyのコンテナ作成後、railsのインストールでエラー

native extention?のbuildで失敗している？

Rubyのgemをインストールしている際に他のライブラリのインストールを要求してくるnative extensionとは何者か
native extentionはCやC++...]]></description><link>https://zenn.dev/michan74/articles/708fb7d5c4fd86</link><guid isPermaLink="true">https://zenn.dev/michan74/articles/708fb7d5c4fd86</guid><pubDate>Mon, 14 Oct 2024 08:09:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2-lN1fB6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rails7%2520%25C3%2597%2520Docker%2528ruby%253A3.3.5-alpine3.20%2529%2520%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2582%2589%25E3%2582%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhOGZiMDg3OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どらやき</dc:creator></item><item><title><![CDATA[Dockerの基本メモ✐]]></title><description><![CDATA[いつもDockerを立てる際のcomposer upコマンドは何をしているのかと調べたメモ🍕

 〜操作していることはなんだろう（先にDockerとは）〜
Dokcerは仮想環境をつくる＝擬似コンピュータをつくる
なので、みんな違うPCを使っていても同じDocker環境を使用すれば同じ環境で開発できる

 ■Dockerの便利なところ
Dockerの環境設定はテキストコードとして全てファイルに書かれているので便利

環境構築でたくさんのインストールする必要がない(言語やライブラリたちはファイル書かれているので自動でインストールされる)
再利用できる（書き換えできるから）
バージョン管理・...]]></description><link>https://zenn.dev/tamae/articles/1782452380036e</link><guid isPermaLink="true">https://zenn.dev/tamae/articles/1782452380036e</guid><pubDate>Mon, 14 Oct 2024 06:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6qIIIydD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2583%25A1%25E3%2583%25A2%25E2%259C%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:madoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNGUxNDkyYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>madoka</dc:creator></item><item><title><![CDATA[Docker環境でpgAdminを利用する際、接続先を自動設定する]]></title><description><![CDATA[
 概要

postgreSQL接続時に毎回パスワードを要求されるため、自動ログインを設定した際の備忘録
なぜかパスワードファイルが取得できないって人が対象
参考となる記事もなかったため記事にします。


 環境


agAdminバージョン8.12


postgreSQLバージョン16.2



 先に解決方法


パスワードファイルの権限が緩い場合、システムはファイルを無視する


カスタムイメージをビルドしてpgadminでパスワードファイルが読み込めるよう権限を設定する

dockerfile
# ホストの .pgpass ファイルをコンテナ内にコピー
COPY .pgpass...]]></description><link>https://zenn.dev/ponko22/articles/078_docker_pdadmin4_preference_server</link><guid isPermaLink="true">https://zenn.dev/ponko22/articles/078_docker_pdadmin4_preference_server</guid><pubDate>Mon, 14 Oct 2024 06:17:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--plkAebbN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7pgAdmin%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2580%2581%25E6%258E%25A5%25E7%25B6%259A%25E5%2585%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BD%25E3%2582%2593%25E3%2581%25932%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0ZmQ5ZWFlYmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぽんこ2</dc:creator></item><item><title><![CDATA[ECS on Fargate でGoのアプリを起動させた時にコンテナのヘルスチェックで苦しんだ話]]></title><description><![CDATA[Go のアプリを ECS on Fargate 上にデプロイした時に、コンテナのヘルスチェックが通らない事象にあったのでその時の調査ログです。

 結論

ECS のコンテナのヘルスチェックは Docker のコンテナのヘルスチェック機能を利用している。

指定がある場合は上書きしてモニタリングをする。
指定がない場合はモニタリング自体をしない。


Docker のヘルスチェックはコンテナのイメージに ヘルスチェックで使うコマンドが含まれていること を確認する


 ヘルスチェックについて理解する
シンプルにしていますが、以下の構成で話を進めます。


 ヘルスチェックの種類
上記の構...]]></description><link>https://zenn.dev/tatsuyan/articles/ecs-service-healthcheck</link><guid isPermaLink="true">https://zenn.dev/tatsuyan/articles/ecs-service-healthcheck</guid><pubDate>Mon, 14 Oct 2024 05:14:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7O5yznBl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECS%2520on%2520Fargate%2520%25E3%2581%25A7Go%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E3%2583%2598%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A7%25E8%258B%25A6%25E3%2581%2597%25E3%2582%2593%25E3%2581%25A0%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%2591%25E9%25BA%25BA%25E3%2583%2586%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyN2Q2ZGU5YmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つけ麺テキーラ</dc:creator></item><item><title><![CDATA[MinIOの 薄い薄い本]]></title><description><![CDATA[オープンソースソフトウェアのオブジェクトストレージアプリケーションであるMinIOの操作本です。]]></description><link>https://zenn.dev/evakichi/books/f9dbb9fd92bd55</link><guid isPermaLink="true">https://zenn.dev/evakichi/books/f9dbb9fd92bd55</guid><pubDate>Mon, 14 Oct 2024 03:15:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7VCLKRjE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xZjM5OWYxZGM1LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>evakichi</dc:creator></item><item><title><![CDATA[AWS CDKで手軽に始めるIaCによるアプリホスティング]]></title><description><![CDATA[
 はじめに
これまで、アプリのインフラ構築は手動で行ってきましたが、今回はインフラをコードで管理する Infrastructure as Code (IaC) に挑戦しました。
AWS CDKを使うことで、複雑なインフラ設定もコード化してシンプルに管理でき、効率的なデプロイが可能になりました。この記事では、AWS CDKを活用してIaCでアプリをホスティングする方法を紹介します。

 アプリ構成の概要
今回作成したアプリは以下の構成です。フロントエンドとバックエンドの両方にDockerイメージを使い、AWSでそれらを効率よく動作させるように設計しました。
フロントエンド: React ...]]></description><link>https://zenn.dev/yui/articles/61659292603936</link><guid isPermaLink="true">https://zenn.dev/yui/articles/61659292603936</guid><pubDate>Sun, 13 Oct 2024 20:55:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A5TM89pX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%25E3%2581%25A7%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BIaC%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toffy%2528yui%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjMGIyNzFhZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toffy(yui)</dc:creator></item><item><title><![CDATA[Dockerを使うためにWSLを導入したけどなんでだろう]]></title><description><![CDATA[使用OS：Windows11

 ■Docker
Dockerの使用目的はアプリを一般的に使えるようにするため(デプロイ)
また、チームで同じ環境を簡単に作成できて良い

 ■WSL
windows subsystem for Linux
windowsでLinuxを利用するための仕組みのこと

 ■Linuxとは？？
OSの種類、またはカーネル(OSの中核部分)を指す。
OSはPC(機器)を動かしている基本的なソフトウェアのこと(オペレーションシステム)

OSの種類
・macOS（Appleが所有しているクローズドソースのOS、Macでしか利用できない）
・windowsOS(クロー...]]></description><link>https://zenn.dev/tamae/articles/640cdf9cb60ff9</link><guid isPermaLink="true">https://zenn.dev/tamae/articles/640cdf9cb60ff9</guid><pubDate>Sun, 13 Oct 2024 09:37:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9zk9mjCE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABWSL%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A9%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25A0%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:madoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNGUxNDkyYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>madoka</dc:creator></item><item><title><![CDATA[MEMO: Docker × Nuxt3 開発環境構築]]></title><description><![CDATA[
 環境

macOS Sonoma Version 14.6
Docker Desktop for Mac


 1. Node.jsのコンテナ起動

 1-1. Dockerfile

Dockerfile
FROM node:22.9.0-alpine3.19

# working directory の指定
WORKDIR /app

# 必要なパッケージのインストール
RUN apk update \
    &amp;&amp; apk add --no-cache bash


 1-2. compose.yaml

compose.yaml
services:
  nux...]]></description><link>https://zenn.dev/michan74/articles/ff9eba22a71d7b</link><guid isPermaLink="true">https://zenn.dev/michan74/articles/ff9eba22a71d7b</guid><pubDate>Sun, 13 Oct 2024 07:40:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g7b70w76--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MEMO%253A%2520Docker%2520%25C3%2597%2520Nuxt3%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2582%2589%25E3%2582%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhOGZiMDg3OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どらやき</dc:creator></item><item><title><![CDATA[LaravelエンジニアやDocker利用者向け、便利なMakefile集]]></title><description><![CDATA[
 初めに
コマンドの省略をしたいときに手軽に導入できてかなり効率を上げてくれるMakefileのリストを記載していきます。

 Makefileのどこが便利なの？🤔
例えば
docker compose up -d
のようにコマンドを打たなくても、設定さえしておけば
make up
で同じことができます！
※コマンドが長ければ長いほどスペルミスが起きやすかったりもするのでありがたみが増します！

 Makefile集
以下のファイルをルートディレクトリ直下に設置

 Makefile
build:
	docker compose build

nbuild:
	docker compo...]]></description><link>https://zenn.dev/masanarea777/articles/e602a7aa76f2a1</link><guid isPermaLink="true">https://zenn.dev/masanarea777/articles/e602a7aa76f2a1</guid><pubDate>Sun, 13 Oct 2024 05:44:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HouutwhD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2582%2584Docker%25E5%2588%25A9%25E7%2594%25A8%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2581%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAMakefile%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZWNhMDBkOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アキ</dc:creator></item><item><title><![CDATA[[最新] Laravel (v11) × Next.js (v14 app router) × Docker-compose で汎用的に使え]]></title><description><![CDATA[
 はじめに
実務経験半年ぐらいの頃に「Laravel × Next.js」 の個人開発をしようと思っていましたが、結局技術的な部分で躓いてしまい、できませんでした。
ただ、半年前から作っていたものが割といい感じに仕上がってきたので、そのベースになる部分をサンプルとしてこの記事内で公開しようと思います！
ローカル環境はもちろんのこと、「X Server VPS」で動作することも検証済みで幅広く利用可能です。

 検証環境
Mac(M2チップ)
※知人によると、WindowsでもWSL２上で動かせば動いたとのこと
（ホットリロード対策でWindowsでは、WSL２上で動かす必要がある）

...]]></description><link>https://zenn.dev/masanarea777/articles/bf0676f73a2f24</link><guid isPermaLink="true">https://zenn.dev/masanarea777/articles/bf0676f73a2f24</guid><pubDate>Sun, 13 Oct 2024 05:42:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9MYhZl6e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E6%259C%2580%25E6%2596%25B0%255D%2520Laravel%2520%2528v11%2529%2520%25C3%2597%2520Next.js%2520%2528v14%2520app%2520router%2529%2520%25C3%2597%2520Docker-co...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZWNhMDBkOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アキ</dc:creator></item><item><title><![CDATA[Microsoft Dev Box を使って Docker Desktop on Windows を動かしてみる]]></title><description><![CDATA[
 はじめに
現在 mac での開発・検証がメインになっていますが、Windowsマシンを用いた開発・検証が必要な場面もいくつか出てきました。
Parallels Desktop などの仮想化ソフトウェアを利用したり、新たに Windows マシンを入手する方法もありますが、今回クラウドベースの開発環境である Microsoft Dev Box を利用してみることにしました。
https://learn.microsoft.com/ja-jp/azure/dev-box/overview-what-is-microsoft-dev-box
Microsoft Dev Box 自体の詳細に...]]></description><link>https://zenn.dev/tadashi/articles/7db43fc8371ff5</link><guid isPermaLink="true">https://zenn.dev/tadashi/articles/7db43fc8371ff5</guid><pubDate>Sun, 13 Oct 2024 03:53:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cDzAp2uf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Microsoft%2520Dev%2520Box%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%2520Docker%2520Desktop%2520on%2520Windows%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tadashi0713%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhMDA3MmFmNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tadashi0713</dc:creator></item><item><title><![CDATA[DockerとSeleniumでWEBスクレイピング環境を構築する]]></title><description><![CDATA[
 想定読者

WEBスクレイピングしたい人
Shellチョットワカル
Pythonチョットワカル
Dockerチョットワカル
Seleniumの環境構築にハマっている人


 前提
以下セットアップされていること

Docker
docker compose
git


 構築方法

ディレクトリとファイルをを用意する

mkdir src
touch src/main.py
mkdir docker
touch docker/requirements.txt
touch docker-compose.yml

Dockerfileを書く


docker/dokerfile
# 軽量...]]></description><link>https://zenn.dev/takaha4k/articles/1b149bb7108849</link><guid isPermaLink="true">https://zenn.dev/takaha4k/articles/1b149bb7108849</guid><pubDate>Sat, 12 Oct 2024 21:59:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0kJSIN6j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A8Selenium%25E3%2581%25A7WEB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZDg4YTkzZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaha4k</dc:creator></item></channel></rss>