<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-09-10T18:59:24+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2078654</id>
    <published>2025-09-10T18:59:24+09:00</published>
    <updated>2025-09-10T18:59:24+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tanaka_taro_JP_KYUSYU/items/acf238d0832528b74353"/>
    <url>https://qiita.com/tanaka_taro_JP_KYUSYU/items/acf238d0832528b74353</url>
    <title>JavaのORM(Object-Relational Mapping)について</title>
    <content type="text">はじめに
SpringBootで開発を行う際、DBとのデータ連携でentityとRepositoryを使用し、CRUD操作を行っていると思います。
Entity
import jakarta.persistence.Entity;
import jakarta.persi...</content>
    <author>
      <name>tanaka_taro_JP_KYUSYU</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2078564</id>
    <published>2025-09-10T16:08:28+09:00</published>
    <updated>2025-09-10T16:08:28+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hitomin_poke/items/4b022abcf42c4c9c50c3"/>
    <url>https://qiita.com/hitomin_poke/items/4b022abcf42c4c9c50c3</url>
    <title>【ポケモン×Java】知識編 if文#2  〜if文を完全攻略！-特殊記法-〜</title>
    <content type="text">はじめに
if文は“〜なら〜する”。基本はそれで十分。
でも、ちょっとだけ知っておくと実務で便利な書き方がある。
ここでは、やさしい範囲で特殊記法と落とし穴を紹介するね。

🎓 1) 条件演算子（? :）—— if のひとこと版
String message = (hp...</content>
    <author>
      <name>hitomin_poke</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2078411</id>
    <published>2025-09-10T11:12:46+09:00</published>
    <updated>2025-09-10T11:12:46+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/keiichik_exe/items/78b524d3caa773831ccc"/>
    <url>https://qiita.com/keiichik_exe/items/78b524d3caa773831ccc</url>
    <title>【応用編】Spring Cloud GatewayでAPIゲートウェイを作ってみる －Rate Limiting（レート制限）－</title>
    <content type="text">🧭 はじめに
API Gatewayは、外部からのアクセスを一元管理する重要なコンポーネントです。トラフィックの急増や悪意あるアクセスからサービスを守るために「Rate Limiting（レート制限）」の導入は不可欠です。
本記事では、Spring Cloud Gatew...</content>
    <author>
      <name>keiichik_exe</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2077996</id>
    <published>2025-09-09T12:53:44+09:00</published>
    <updated>2025-09-09T13:23:06+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/keiichik_exe/items/569448e4783a179b5775"/>
    <url>https://qiita.com/keiichik_exe/items/569448e4783a179b5775</url>
    <title>【応用編】Spring Cloud GatewayでAPIゲートウェイを作ってみる －OAuth2認可コードフロー＆JWT認証－</title>
    <content type="text">🧭 はじめに
マイクロサービス構成では、各サービスに個別で認証を実装するのは非効率です。そこで登場するのが API Gatewayでの認証集中管理。Spring Cloud Gatewayは、OAuth2 や JWT を使った認証を統合することでセキュアなAPIアクセスを...</content>
    <author>
      <name>keiichik_exe</name>
    </author>
  </entry>
</feed>
