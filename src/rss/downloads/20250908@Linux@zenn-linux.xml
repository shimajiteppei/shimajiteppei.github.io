<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 08 Sep 2025 00:35:35 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[STM32をUbuntuから書き込みたい]]></title><description><![CDATA[
 UbuntuでSTM32_Programmer_CLIを行う方法
Yocto開発を行ってると、Yoctoを実行したUbuntu環境で書き換えを行いたい時があります。
しかもコマンドラインで（機器にはSSHで接続してます）
そこで、メーカー公式のSTM32_Programmer_CLIをインストールする際に、なんか引っかかったので記録を残しておきます（自分用メモでもある）
おっと、YoctoってLinuxでしょ？って思うじゃん。
STM32はマイコンもLinuxが動くチップ（STM32MPシリーズ）も同じライターで書き込み出来るので、同様の方法で操作可能だと思ってください。

 本体の...]]></description><link>https://zenn.dev/nonnoise/articles/4034cf78955d05</link><guid isPermaLink="true">https://zenn.dev/nonnoise/articles/4034cf78955d05</guid><pubDate>Sun, 07 Sep 2025 13:38:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JcRmKZcP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:STM32%25E3%2582%2592Ubuntu%25E3%2581%258B%25E3%2582%2589%25E6%259B%25B8%25E3%2581%258D%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258C%2597%25E7%25A5%259E%25E9%259B%2584%25E5%25A4%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0YTYxODY1YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>北神雄太</dc:creator></item><item><title><![CDATA[【EC2】RHEL9.4にてパスワード認証無しでSSH接続する]]></title><description><![CDATA[
 はじめに
RHEL9.4のEC2にパスワード認証無しでSSH接続しようとしたが、少しつまづいた。
今回は、RHEL9.4のEC2にパスワード認証無しでSSH接続するための手順について解説する。

 環境

AWS
RHEL9.4


バージョン
# cat /etc/redhat-release ;date
Red Hat Enterprise Linux release 9.4 (Plow)
#


 最初に実施した設定
下記設定を実施したが、SSH接続できず。
1./etc/ssh/sshd_configの下記設定をNo → Yes にする。

設定前

PasswordAuth...]]></description><link>https://zenn.dev/supersatton/articles/ad60fc490d66a6</link><guid isPermaLink="true">https://zenn.dev/supersatton/articles/ad60fc490d66a6</guid><pubDate>Sun, 07 Sep 2025 04:21:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g2mJZJID--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590EC2%25E3%2580%2591RHEL9.4%25E3%2581%25AB%25E3%2581%25A6%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E8%25AA%258D%25E8%25A8%25BC%25E7%2584%25A1%25E3%2581%2597%25E3%2581%25A7SSH%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:No%2520Name%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMzBiMTIwZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>No Name</dc:creator></item><item><title><![CDATA[Rust/GoアプリケーションのAWS Lambda向けクロスビルド方法]]></title><description><![CDATA[
 概要
前回はPythonのデプロイパッケージのクロスビルドを紹介しました。
https://zenn.dev/lucidfrontier45/articles/dd38e25209ebca
今回はRustとGoについて、主にLinux向けのクロスビルド方法をまとめます。
これでAWS Lambda向けの開発がはかどりますね。

 Rust
Rustのtoolchainに含まれるコンパイラのrustc自体は様々なターゲット向けにコンパイルすることができますが、linkerを含んでいないのとCに依存したRustのライブラリの時にやはりCのコンパイラが必要になるのでRustのtoolcha...]]></description><link>https://zenn.dev/lucidfrontier45/articles/8bc8afee49472f</link><guid isPermaLink="true">https://zenn.dev/lucidfrontier45/articles/8bc8afee49472f</guid><pubDate>Sat, 06 Sep 2025 16:34:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--30SdGgg2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%252FGo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AEAWS%2520Lambda%25E5%2590%2591%25E3%2581%2591%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lucidfrontier45%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxY2RkYzI0MmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lucidfrontier45</dc:creator></item><item><title><![CDATA[パッケージやライブラリが消えた？yum historyとgrepで原因を調べる方法]]></title><description><![CDATA[
 yum historyとgrepを使ったパッケージ管理トラブルシューティング

 はじめに
LinuxサーバーでPackage Manager関連の問題、特に「いつの間にかパッケージが消えている」といった状況に遭遇したことはありませんか？そんなときに役立つのがyum historyとgrepを組み合わせた調査手法です。
本記事では、トラブルシューティング例を交えながら、パッケージ履歴調査の方法をご紹介します。

 基本的なgrepの使い方

 1. パッケージ名で絞り込む
特定のパッケージに関する操作履歴を調べたい場合：
yum history | grep httpd
この例ではh...]]></description><link>https://zenn.dev/uepon/articles/242b44ff57c410</link><guid isPermaLink="true">https://zenn.dev/uepon/articles/242b44ff57c410</guid><pubDate>Sat, 06 Sep 2025 09:03:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T8aw_G98--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2584%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258C%25E6%25B6%2588%25E3%2581%2588%25E3%2581%259F%25EF%25BC%259Fyum%2520history%25E3%2581%25A8grep%25E3%2581%25A7%25E5%258E%259F%25E5%259B%25A0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIVW4zSmVfbW43ZlowbXlNVXRtOXpyLWZ1S0J3YjVTVUhnMXJWSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ue</dc:creator></item><item><title><![CDATA[Linux, pam common-* 大事]]></title><description><![CDATA[
 Linux, pam common-* 大事
2025-09-05


 (1).結論


pam-auth-update --force、たまに行うのを忘れるな

今回は systemd にかわった時に何もしなかったのが原因


まさか XDG の env、pam、systemd が絡んでいたとはね



 (2).なにが起きた


XDG_SESSION_ID がセットされない

結果、幾つかのアプリが、session が無いぞと言い、動かぬ
shellでセットしても無駄。X の display manager 下で全てが動くため。アプリもshellもその下。





 (3)...]]></description><link>https://zenn.dev/sorehaomosiroi/articles/sorehaomosiroi-20250905_linux_pam</link><guid isPermaLink="true">https://zenn.dev/sorehaomosiroi/articles/sorehaomosiroi-20250905_linux_pam</guid><pubDate>Fri, 05 Sep 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ygnWBn_j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Linux%252C%2520pam%2520common-%252A%2520%25E5%25A4%25A7%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDNkNWJiZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いいね</dc:creator></item><item><title><![CDATA[Macは大文字小文字を区別しない。Linuxは区別する。でハマった話]]></title><description><![CDATA[
 はじめに
業務で開発→新規サーバーデプロイが進められました。

開発→MacPC（Docker）
デプロイ→Linux（AmazonLinux2023）

私はサーバー立ち上げ後のミドルウェアと疎通の確認、アプリケーションの初回デプロイまでを担当しました。
そこでハマったのがタイトルの件になります。

 事象
アプリケーション（PHP/Laravel）のシードデータ投入時、以下のエラーが出ました。
$ php artisan migrate --fresh --seed

Target class [Database\Seeders\Shared\Hoge\ExampleTableS...]]></description><link>https://zenn.dev/toshiki003/articles/2bebff45bbaa78</link><guid isPermaLink="true">https://zenn.dev/toshiki003/articles/2bebff45bbaa78</guid><pubDate>Fri, 05 Sep 2025 09:09:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cC_n7U-R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25AF%25E5%25A4%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%25B0%258F%25E6%2596%2587%25E5%25AD%2597%25E3%2582%2592%25E5%258C%25BA%25E5%2588%25A5%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2582Linux%25E3%2581%25AF%25E5%258C%25BA%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toshiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2ZTZkNmY5NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Toshiki</dc:creator></item><item><title><![CDATA[業務毎にPythonにインストールするモジュールが異なるときの対応]]></title><description><![CDATA[
 業務毎にPythonにインストールするモジュールが異なるときの対応
業務毎に必要なモジュールが変わり、その度に環境を再構築してたんだけど、そんなことしなくてもいい方法が見つかったので備忘録。
すごいよ！Python！！ありがとう！！！

 Python 仮想環境管理
venvを使うとpipによるパッケージの導入状態をプロジェクト単位で独立させることができる。
venvはvirtualenvがPython3.3から標準機能として取り込まれたもので別途ソフトウェアをインストールすることなく使用できる。
※2系を使用する場合はvirtualenvを使用する。(まだ未確認)
※Python3...]]></description><link>https://zenn.dev/keyworks/articles/python_00002</link><guid isPermaLink="true">https://zenn.dev/keyworks/articles/python_00002</guid><pubDate>Fri, 05 Sep 2025 07:47:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0MtKUCxu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25AD%25E5%258B%2599%25E6%25AF%258E%25E3%2581%25ABPython%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E7%2595%25B0%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:key%2520works%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNzNhNGUxM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>key works</dc:creator></item><item><title><![CDATA[CentOSにvsftpdでFTPサーバーを構築した際の基本設定メモ]]></title><description><![CDATA[
 はじめに
Webサイトのファイルをアップロードするなど、今でもFTPサーバーが必要になる場面は時々ありますよね。
この記事では、自身のWikiに書き溜めていたメモを元に、CentOS系のLinuxディストリビューションに、定番のFTPサーバーソフトである**vsftpd (very secure FTP daemon)**をインストールし、基本的なセキュリティ設定を行うまでの手順をまとめます。

 1. vsftpdのインストール
まずはyum (またはdnf) を使って、vsftpdをインストールします。
sudo yum install vsftpd

 2. vsftpdの基本...]]></description><link>https://zenn.dev/meantix/articles/12f8be73811652</link><guid isPermaLink="true">https://zenn.dev/meantix/articles/12f8be73811652</guid><pubDate>Fri, 05 Sep 2025 07:03:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ygc5d1gO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CentOS%25E3%2581%25ABvsftpd%25E3%2581%25A7FTP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meantix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMmZiYzIwOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meantix</dc:creator></item><item><title><![CDATA[languages benchmarkをdockerで動かす]]></title><description><![CDATA[
 序
2024年11月頃、1B回ループする以下の言語別ベンチマーク結果をよく目にしました。
https://www.linkedin.com/posts/benjamin-dicken-78797a73_more-languages-more-insights-a-few-interesting-activity-7266839380596547584-RQvT
私はこの人ではありませんが、以下でソースコードを公開されているので、
https://github.com/bddicken/languages
今回はそのソースコードをお借りし、ベンチマークをdockerで実際に動かしてみま...]]></description><link>https://zenn.dev/dameyodamedame/articles/5dd96c0329d595</link><guid isPermaLink="true">https://zenn.dev/dameyodamedame/articles/5dd96c0329d595</guid><pubDate>Thu, 04 Sep 2025 16:44:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zGCqumzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:languages%2520benchmark%25E3%2582%2592docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dameyodamedame%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dameyodamedame</dc:creator></item><item><title><![CDATA[🔥 OpenFOAM v2312 (ESI版) を WSL2 (Ubuntu 22.04) にソースコードからインストールする手順]]></title><description><![CDATA[
本記事では、Ubuntu 22.04 環境（WSL2 含む）において OpenFOAMのESI版をソースコードからビルドする手順をまとめます。数値流体力学計算のオープンソースソフトウェアであるOpenFOAMには、OpenFOAM財団版(この記事ではorg版と呼びます）とESI社のグループ企業であるOpenCFD社が出すESI版があります。OpenFOAMをESI版でソースからビルドする場合は、いくつかのシステム要件（ビルド用にあらかじめインストールする必要のあるソフトウェアがある）を満たす必要がありますので、この記事ではそちらを含めて解説しています。
内容は公式ドキュメント Buil...]]></description><link>https://zenn.dev/takukichi_zenn/articles/2abb3feac5095a</link><guid isPermaLink="true">https://zenn.dev/takukichi_zenn/articles/2abb3feac5095a</guid><pubDate>Thu, 04 Sep 2025 14:35:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wtVHNkGE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520OpenFOAM%2520v2312%2520%2528ESI%25E7%2589%2588%2529%2520%25E3%2582%2592%2520WSL2%2520%2528Ubuntu%252022.04%2529%2520%25E3%2581%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A4%25E3%2583%25B3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takukichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1YTBmZWM4NDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takukichi</dc:creator></item><item><title><![CDATA[SteamDeckで開発環境を整える備忘録]]></title><description><![CDATA[
 はじめに
SteamDeckで開発環境を整える設定などのナレッジをまとめます。
(デスクトップモード、CLI関連の操作をまとめています。)
(noteに投稿したものをより詳細にまとめたものです。GUI関連、細かい設定関連はこちらに載ってます)

SteamDeckでデスクトップモードを充実させる｜きくぴぃ
SteamDeckでデスクトップモードを充実させる2｜きくぴぃ


 参考サイト
公式Q&amp;A:
https://help.steampowered.com/ja/faqs/view/671A-4453-E8D2-323C
ArchLinux Wiki:
https://wi...]]></description><link>https://zenn.dev/kiku09020/articles/steamdeck-dev-kkp</link><guid isPermaLink="true">https://zenn.dev/kiku09020/articles/steamdeck-dev-kkp</guid><pubDate>Thu, 04 Sep 2025 12:40:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AZOwETor--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SteamDeck%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2581%258F%25E3%2581%25B4%25E3%2581%2583%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYjkxMDJlMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きくぴぃ</dc:creator></item><item><title><![CDATA[PHPとfontforgeで実装するWebフォント変換サーバー]]></title><description><![CDATA[
 はじめに
Webサイトで好きなフォントを使いたい時、「Webフォント」は非常に強力な選択肢です。しかし、フォント形式にはOTF, TTF, WOFF, WOFF2, EOT, SVGなど様々な種類があり、クロスブラウザ対応を考えると複数の形式を用意する必要があって面倒ですよね。
また、フォントファイルをサーバーにアップロードして変換ツールにかける、という作業も手間がかかります。
この記事では、そんな手間を解消するために、PHPのプログラムからサーバーサイドでフォント形式を自動変換する仕組みを実装した際の知見を共有します。

 やりたいこと

ユーザーがフォームからOTFまたはTTF形...]]></description><link>https://zenn.dev/meantix/articles/6a843355b89f64</link><guid isPermaLink="true">https://zenn.dev/meantix/articles/6a843355b89f64</guid><pubDate>Thu, 04 Sep 2025 10:18:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2g-pcUgz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PHP%25E3%2581%25A8fontforge%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258BWeb%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meantix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMmZiYzIwOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meantix</dc:creator></item><item><title><![CDATA[Linuxなら一時ファイルはunlinkで実現可能]]></title><description><![CDATA[一時ファイルを実現する方法としてunlinkを使った方法がある。
openでファイルディスクリプタを取得した状態でunlinkすると、ファイルディスクリプタをcloseしたタイミングでファイルの削除されるのだ。
unlinkはOSが持っているファイルへの参照を消すイメージで、そのファイルへの参照カウントが1減る。すでにopenしていた場合は、そのファイルディスクリプタが最後の参照になり、closeでファイルの参照カウントが0になるとファイルは削除される。
以下、実験を行った。unlinkしておいた一時ファイルは自動的に消去されていることがわかる。
$ ls 
Makefile  main...]]></description><link>https://zenn.dev/hideki1217/articles/daf22f1b6bdb4e</link><guid isPermaLink="true">https://zenn.dev/hideki1217/articles/daf22f1b6bdb4e</guid><pubDate>Wed, 03 Sep 2025 00:56:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j0hknG5s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2581%25AA%25E3%2582%2589%25E4%25B8%2580%25E6%2599%2582%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AFunlink%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E5%258F%25AF%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:h1de_n_n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MWI5NzMyZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>h1de_n_n</dc:creator></item><item><title><![CDATA[ロボット屋さんのためのUbuntuターミナル超入門]]></title><description><![CDATA[!
この記事の一部はChatGPTを使用して書かれています。

ROS Japan UG #59 研究教育におけるROSの活用にて、「ROSの初学者向けのコマンドのチートシートはありませんか？」→「思いつきません。作りましょう！」という質疑応答を見て、作ってみました。
ChatGPT（無料版）に下地を出していただいて、私なりに足したり引いたりしたものになります。あまり時間をかけず作ったものですので、「これはいるでしょ！」「これはいらないのでは？」みたいなご意見があればZennのコメントやXなどでいただけますと大変助かります。

 Ubuntu ターミナル チートシート

 🖥️ ターミナ...]]></description><link>https://zenn.dev/kimushun1101/articles/ros2-beginners-ubuntu-terminal</link><guid isPermaLink="true">https://zenn.dev/kimushun1101/articles/ros2-beginners-ubuntu-terminal</guid><pubDate>Tue, 02 Sep 2025 21:23:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s0B0Sphp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E5%25B1%258B%25E3%2581%2595%25E3%2582%2593%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEUbuntu%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%2520%25E9%25A7%25BF%25E4%25BB%258B%2520%252F%2520Shunsuke%2520K...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjZWFjYzFhNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村 駿介 / Shunsuke KIMURA</dc:creator></item><item><title><![CDATA[[Linux]: zshを初期設定用ウィザードのメモ]]></title><description><![CDATA[
 [Linux]: zshを初期設定用ウィザードのメモ
zshを初回起動すると以下のような設定ウィザードが起動するので意味などを調べたメモ

 設定ウィザード
This is the Z Shell configuration function for new users,
zsh-newuser-install.
You are seeing this message because you have no zsh startup files
(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory
~).  Th...]]></description><link>https://zenn.dev/mitate_gengaku/articles/linux-zsh-initialize-wizard</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/linux-zsh-initialize-wizard</guid><pubDate>Tue, 02 Sep 2025 13:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c4gVDSx0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLinux%255D%253A%2520zsh%25E3%2582%2592%25E5%2588%259D%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259A%25E7%2594%25A8%25E3%2582%25A6%25E3%2582%25A3%25E3%2582%25B6%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[もう迷わない！.bash_profileと.bashrcの使い分けと読み込み順のメモ]]></title><description><![CDATA[
 はじめに
Linux環境でCUIを使っていると、エイリアスや環境変数の設定で.bash_profileや.bashrcといったファイルを編集しますよね。
しかし、「.bashrcにエイリアスを書いたのに、SSHでログインし直したら使えない…なぜ？」といった経験はありませんか？
この記事では、自身のメモを元に、この2つのファイルがいつ、どのような順番で読み込まれるのか、そしてどのように使い分けるべきかを簡潔にまとめます。

 結論ファースト：シェルの種類で使い分ける
まず結論です。


.bash_profile: ログインシェルが起動する時に1回だけ読み込まれる。

.bashrc:...]]></description><link>https://zenn.dev/meantix/articles/98a1678841de89</link><guid isPermaLink="true">https://zenn.dev/meantix/articles/98a1678841de89</guid><pubDate>Tue, 02 Sep 2025 12:04:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qAI6ixPb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%2586%25E8%25BF%25B7%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581.bash_profile%25E3%2581%25A8.bashrc%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25E3%2581%25A8%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E9%25A0%2586%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meantix%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMmZiYzIwOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meantix</dc:creator></item><item><title><![CDATA[【Linux】 tmpfs について]]></title><description><![CDATA[
 はじめに
df コマンドを使用すると以下のように出力されます。
$ df -h
Filesystem      Size  Used Avail Use% Mounted on
devtmpfs        4.0M     0  4.0M   0% /dev
tmpfs           475M     0  475M   0% /dev/shm
tmpfs           190M  436K  190M   1% /run
/dev/xvda1       20G  4.1G   16G  21% /
tmpfs           475M     0  475M ...]]></description><link>https://zenn.dev/eiken/articles/6eb1751d32dc02</link><guid isPermaLink="true">https://zenn.dev/eiken/articles/6eb1751d32dc02</guid><pubDate>Tue, 02 Sep 2025 01:33:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XVxyEbcO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Linux%25E3%2580%2591%2520tmpfs%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enjine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enjine</dc:creator></item><item><title><![CDATA[Proxmox VE のマシンのディスクを縮小(xfs, LVM, LUKS)]]></title><description><![CDATA[RHEL マシンがあまりディスクスペースを使っていないため、ディスクを縮小しました。
自分用のメモです。

 今回行うこと
32GB のディスクを 16GB に縮小します。
16GB のディスクにデータをコピーして、32GB のディスクを削除することで縮小を実現します。
Proxmox VE 上で lvreduce を使って縮小はしません。

 環境
OS: Rocky Linux 10.0
Boot: UEFI
FDE (LVM on LUKS): yes
root@localhost:~# df -h /
Filesystem           Size  Used Avail U...]]></description><link>https://zenn.dev/bad_company/articles/8790fe8bda6b74</link><guid isPermaLink="true">https://zenn.dev/bad_company/articles/8790fe8bda6b74</guid><pubDate>Mon, 01 Sep 2025 16:02:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DMX2J-gT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Proxmox%2520VE%2520%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E7%25B8%25AE%25E5%25B0%258F%2528xfs%252C%2520LVM%252C%2520LUKS%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:warspitenavy%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2590%25E3%2583%2583%25E3%2583%2589%25E3%2582%25AB%25E3%2583%25B3%25E3%2583%2591%25E3%2583%258B%25E3%2583%25BC%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlNzRkZjhkOGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>warspitenavy</dc:creator></item><item><title><![CDATA[Linux→Windows11にSSH公開鍵認証で接続する]]></title><description><![CDATA[
 はじめに
LinuxからWindowsへのSSH接続を環境設定含めてやってみました。

 環境
Linux、Windowsの環境は以下の記事で作成した仮想環境を使用します。
https://zenn.dev/marogram/articles/d7244dc3192d7f
https://zenn.dev/marogram/articles/58163a05b3461d
また、WindowsのOpenSSHサーバーの有効化は以下の記事になります。
https://zenn.dev/marogram/articles/5ab3344fd0170f

 事前準備(Windows/ホスト)...]]></description><link>https://zenn.dev/marogram/articles/1c50c4b00bd9e9</link><guid isPermaLink="true">https://zenn.dev/marogram/articles/1c50c4b00bd9e9</guid><pubDate>Mon, 01 Sep 2025 14:12:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cOYIisD5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E2%2586%2592Windows11%25E3%2581%25ABSSH%25E5%2585%25AC%25E9%2596%258B%25E9%258D%25B5%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25A7%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZGI3OTkyMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maho</dc:creator></item><item><title><![CDATA[デバイスドライバ開発に入門してみた]]></title><description><![CDATA[
 概要
最近、デバイスドライバ関係の業務にアサインされました。
理解を深めるため、簡単なデバイスドライバを実装してみました。
今回実装したのは、キャラクタデバイスです。また、最小の実装を試しただけで、実際のハードの制御はしていません。
他にもブロックデバイス、ネットワークデバイスがありますが、今回は触れません。

 動作環境
本記事では、以下の環境で動作を確認しています。

カーネル : 5.15.0-1084-raspi
OS : Ubuntu 22.04
カーネルヘッダがインストール済み

例: Debian/Ubuntu: sudo apt-get install build-e...]]></description><link>https://zenn.dev/shu_kitamura/articles/3829dc564b007b</link><guid isPermaLink="true">https://zenn.dev/shu_kitamura/articles/3829dc564b007b</guid><pubDate>Sun, 31 Aug 2025 15:55:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t7TzJWr8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2590%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Skit%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjZjhiN2M4YmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Skit</dc:creator></item></channel></rss>