<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 10 May 2025 02:30:34 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[現在時刻を返すMCPサーバを作ってCursorと連携させてみる（uv編）]]></title><description><![CDATA[
 はじめに
以前の記事でDockerを用いてPythonの実行環境を構築し、コンテナ内でMCPサーバを稼働させてCursorと連携する構成を試しました。

無事に目的は達成できたものの、主に以下の点で不便さを感じました。

Dockerコンテナの起動状況を把握しておかないといけないので、普段使いするには煩わしい。

MCP Inspectorが使いにくい。

これらを解消したく、今回はホストマシン上にuvでPythonの仮想環境を構築し、その環境下で実装したMCPサーバをCursorと連携することにします。

 この記事で達成したいこと

uvでPythonの仮想環境を構築し、その環境...]]></description><link>https://zenn.dev/kyukei/articles/8212402d379ecf</link><guid isPermaLink="true">https://zenn.dev/kyukei/articles/8212402d379ecf</guid><pubDate>Sat, 10 May 2025 01:58:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wpXl5E4U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258F%25BE%25E5%259C%25A8%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6Cursor%25E3%2581%25A8%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588uv%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2585%25E3%2581%2586%25E3%2581%2591%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnhPUS1jZExKcHJObjJOR3E2VVgzb2N5d2ZiZV9jMVNZcVVJYkNaVmNORkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きゅうけい</dc:creator></item><item><title><![CDATA[【Python仮想環境管理】uv コマンド&引数一覧と機能概要]]></title><description><![CDATA[今までずっとpoetry+pyenvでpythonの仮想環境管理してましたが、uvがめちゃくちゃ高速&amp;簡単なので勉強ついでにコマンドまとめておきます

 プロジェクト管理



コマンド
説明




uv init
新しいPythonプロジェクトを初期化し、pyproject.tomlを作成します。


uv add
依存パッケージをプロジェクトに追加し、pyproject.tomlを更新します。


uv remove
プロジェクトから依存パッケージを削除します。


uv sync

pyproject.tomlとuv.lockに基づいて環境を同期します。


uv loc...]]></description><link>https://zenn.dev/lia/articles/bc31feaf3a4715</link><guid isPermaLink="true">https://zenn.dev/lia/articles/bc31feaf3a4715</guid><pubDate>Fri, 09 May 2025 23:34:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--25czdelc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E7%25AE%25A1%25E7%2590%2586%25E3%2580%2591uv%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2526%25E5%25BC%2595%25E6%2595%25B0%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%25A8%25E6%25A9%259F%25E8%2583%25BD%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りあ</dc:creator></item><item><title><![CDATA[Easyfigでゲノムの比較結果を可視化（visualize synteny patterns using Easyfig）]]></title><description><![CDATA[
 はじめに
Genbank形式のアノテーションのついたファイルを使ってゲノムの比較結果を可視化してみます。
EasyfigをCLIで使用する例です。

 動作確認 (Hardware)
-MacBook Pro
-チップ Apple M1 (Rosetta2 インストール済み)
-macOS Sonoma 14.7.5
-メモリ 16GB

 動作確認 (Software)
-Python 3.12.10
-Easyfig.py Version 3.0.0
-blast 2.16.0

 手順

 1.データの用意
Nature Scientific Reportsに掲載の、こちらの文...]]></description><link>https://zenn.dev/mtojsvqi/articles/10-synteny_patterns_easyfig</link><guid isPermaLink="true">https://zenn.dev/mtojsvqi/articles/10-synteny_patterns_easyfig</guid><pubDate>Fri, 09 May 2025 23:20:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M-OB0-pf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Easyfig%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%258E%25E3%2583%25A0%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2588visualize%2520synteny%2520patterns%2520using%2520Eas...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mtojsvqi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzg0MWExMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mtojsvqi</dc:creator></item><item><title><![CDATA[[備忘録]Pythonパッケージの配布方法]]></title><description><![CDATA[開発したPythonのパッケージを配布する機会は、そう多くないので備忘録としてまとめる。
最近はLLMに聞けばすぐに分かるが、自分が過去にやった手順は記録しておきたいのでzennに残しておく。

 ディレクトリ構成
my_project/
├── my_package/          # ソースコードが入るディレクトリ
│   ├── __init__.py      
│   └── __main__.py
├── tests/               
│   ├── __init__.py
│   └── test_module1.py
├── pyproject.toml...]]></description><link>https://zenn.dev/tamanegi/articles/2474e5f8e1b4c9</link><guid isPermaLink="true">https://zenn.dev/tamanegi/articles/2474e5f8e1b4c9</guid><pubDate>Fri, 09 May 2025 17:28:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Qj83J-H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255DPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E9%2585%258D%25E5%25B8%2583%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AD%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUdkemxYcUliUGgwYVNlRDlEaXplV3Z2Vy1IWHdPNkh3TUc2S2dpZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たまねぎ</dc:creator></item><item><title><![CDATA[Streamable HTTPに対応したMCP Python SDKとlangchain-mcp-adaptersを使ってAgentを実装]]></title><description><![CDATA[本記事では、Streamable HTTP Transportに対応したMCP Python SDK v1.8.0とlangchain-mcp-adaptersを使い、tool callingをするAIエージェントを実装します。

 実装するもの
今回は、以下の機能を持つサーバーとクライアントを実装します。

サーバー側：MCPで数値計算(加算、乗算)を行うToolsを提供
クライアント側：langchain-mcp-adaptersとLangChain/LangGraphとを使ってMCPサーバ上のtoolをcallし、ユーザの要求に応えるAIエージェント


 必要なパッケージ
以下の...]]></description><link>https://zenn.dev/5enxia/articles/82179743b62296</link><guid isPermaLink="true">https://zenn.dev/5enxia/articles/82179743b62296</guid><pubDate>Fri, 09 May 2025 16:32:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0yLFiA32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamable%2520HTTP%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259FMCP%2520Python%2520SDK%25E3%2581%25A8langchain-mcp-adapters...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:5enxia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlMDI3NjY3MmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>5enxia</dc:creator></item><item><title><![CDATA[【Docker & Django & Vue.js PostgreSQL】環境構築手順]]></title><description><![CDATA[
 環境構築完成イメージ!

イメージ図

 １．ディレクトリ作成コマンドの実行

コマンド実行後の画面イメージ
ディレクトリ作成コマンド
以下をコピーして、メモに貼り付け、.ps1として保存し、Windows Power Shellで実行する
$ProjectName = "myproject"

# ディレクトリ作成
$dirs = @(
    "$ProjectName\backend\app",
    "$ProjectName\docker\nginx",
    "$ProjectName\docker\backend",
    "$ProjectName\docker...]]></description><link>https://zenn.dev/code_journey_ys/articles/9dab988afbca82</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/9dab988afbca82</guid><pubDate>Fri, 09 May 2025 15:18:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OiZb41f2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%2520%2526%2520Django%2520%2526%2520Vue.js%2520PostgreSQL%25E3%2580%2591%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[ウェブページから抽出したMermaid SVGが正しく表示されない？ハマりどころと解決への道筋]]></title><description><![CDATA[
 はじめに
ウェブサイトやドキュメントでよく見かけるMermaid.jsで描画された図。これらをプログラムで抽出し、Markdownドキュメントなどで再利用しようとした際に、SVGが期待通りに表示されず頭を抱えた経験はありませんか？例えば、図の一部しか表示されなかったり、大切なテキストが消えてしまったり... 本記事では、筆者が実際にそのようなSVG表示問題に直面し、その原因を一つ一つ解き明かし、最終的に解決に至るまでの具体的なプロセスと得られた知見を共有します。
この記事は、特に以下のような課題をお持ちの方に役立つことを目指しています。

ウェブスクレイピングやHTML解析を通じてS...]]></description><link>https://zenn.dev/suwash/articles/mermaid_svg_20250510</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/mermaid_svg_20250510</guid><pubDate>Fri, 09 May 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nQL8MRPG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258B%25E3%2582%2589%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259FMermaid%2520SVG%25E3%2581%258C%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25E3%2583%258F%25E3%2583%259E%25E3%2582%258A%25E3%2581%25A9%25E3%2581%2593%25E3%2582%258D%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%25B8%25E3%2581%25AE%25E9%2581%2593%25E7%25AD%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh</dc:creator></item><item><title><![CDATA[Apache Projects様を引用してブログネタを決めるためのツールを作成しました]]></title><description><![CDATA[今回は、私が今しているセルフエンドレスアドベントカレンダーのネタを決めるためのツールを作成しましたので紹介します。

 対象とするものは？
今回はApacheのプロジェクト一覧からランダムに抽出されたプロジェクトを対象とするようにしました。なお、これはネタが思い浮かばなかったり、思い浮かんでるけどなんか違うものがいいなと思った時に実行するようにします。
https://projects.apache.org/projects.html

 作成したツールについて
今回はPythonを使ってツールを作成しました。
まずは先ほどのApache Projectsの一覧からアイテムをテキストファ...]]></description><link>https://zenn.dev/akasan/articles/7e30ad266c02c4</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/7e30ad266c02c4</guid><pubDate>Fri, 09 May 2025 13:35:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e5gUzWv1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Projects%25E6%25A7%2598%25E3%2582%2592%25E5%25BC%2595%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%258D%25E3%2582%25BF%25E3%2582%2592%25E6%25B1%25BA%25E3%2582%2581%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[Python向け爆速静的解析ツールtyを使ってみる]]></title><description><![CDATA[
 tyとは
Astral社が作っているRust製の爆速な型検査器および言語サーバーです。
https://github.com/astral-sh/ty

 インストール
pypiで公開されているのでuv add すればOK。
uv add ty --dev

 速度比較

 比較方法
雑にHyperfineでベンチマークを取ってみる。
hyperfine 'uv run mypy --strict src' 'uv run ty check src --exit-zero'
なお、リポジトリは拙作のパッケージを使った。ついでに見てもらえると嬉しい。
https://github.co...]]></description><link>https://zenn.dev/shundeveloper/articles/9fc06323d00917</link><guid isPermaLink="true">https://zenn.dev/shundeveloper/articles/9fc06323d00917</guid><pubDate>Fri, 09 May 2025 13:14:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--quqao1OH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2590%2591%25E3%2581%2591%25E7%2588%2586%25E9%2580%259F%25E9%259D%2599%25E7%259A%2584%25E8%25A7%25A3%25E6%259E%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABty%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shunsock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shunsock</dc:creator></item><item><title><![CDATA[【Global Azure 2025】Gitub Copilot Hands-on Lab for Python]]></title><description><![CDATA[
 はじめに
この記事では、GitHub Copilotを使用してPythonでの開発を支援する方法を学ぶためのハンズオンラボを紹介します。
05-Using-GitHub-Copilot-with-Pythonをもとに作成したハンズオンラボです。
誤りや不具合がある場合は随時修正予定です。

 事前に読んでおくと良い資料

Introduction to prompt engineering with GitHub Copilot
Using GitHub Copilot with Python


 ハンズオンの準備

Enable your GitHub Copilot servi...]]></description><link>https://zenn.dev/ymd65536/articles/gtihub_copilot_handson</link><guid isPermaLink="true">https://zenn.dev/ymd65536/articles/gtihub_copilot_handson</guid><pubDate>Fri, 09 May 2025 11:00:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--scxyoy6b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Global%2520Azure%25202025%25E3%2580%2591Gitub%2520Copilot%2520Hands-on%2520Lab%2520for%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kento.Yamada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0YWVmY2Y5YWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kento.Yamada</dc:creator></item><item><title><![CDATA[PySparkにおける日付時刻とTime Zone]]></title><description><![CDATA[
 概要

 PySparkで日付時刻を扱う際の注意点

日付時刻型にはTimestampTypeとTimestampNTZTypeがある。
Sparkセッションのタイムゾーン設定が挙動に影響するため明示的に設定した方がよい。
日付時刻文字列は意図しない変換を避けるためタイムゾーン情報をつけた方がよい。
Pandasとの変換では意図しない変換を避けるためタイムゾーン情報をつけた方がよい。

公式ドキュメントにある程度記述がありますが、undocumentedな挙動も多いです。


 2種類の日付時刻型

TimestampType

Sparkセッションのタイムゾーン設定 (spark....]]></description><link>https://zenn.dev/t_ubukata/articles/fae1571e69221b</link><guid isPermaLink="true">https://zenn.dev/t_ubukata/articles/fae1571e69221b</guid><pubDate>Fri, 09 May 2025 09:35:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PM9pQKwg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PySpark%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2597%25A5%25E4%25BB%2598%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25A8Time%2520Zone%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomohiro%2520Ubukata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1JfeUdUWk9YYU1LM19sTzlwdjI4amFGS3RKQmNJMTZSOGdVQVhGLWpDSV9sS2tRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomohiro Ubukata</dc:creator></item><item><title><![CDATA[Pythonのpow()関数の使い方と繰り返し2乗法の解説]]></title><description><![CDATA[
 はじめに
Python の pow() 関数は単なるべき乗計算を超えて、暗号や数論などの領域でも広く使われる高機能な関数です。本記事では、pow() の基本的な使い方に加え、繰り返し2乗法の仕組みや ** 演算子とのパフォーマンス比較も交えて解説します。

 pow() とは
Python 組み込みの pow() 関数は、次のように使います：
pow(base, exp[, mod])


base：底（a）

exp：指数（b）

mod（任意）：a^b % mod を高速に計算（整数のみ）

pow(a, b) は a ** b と同等ですが、pow(a, b, c) は (a ...]]></description><link>https://zenn.dev/lucentrains/articles/pow_function_article</link><guid isPermaLink="true">https://zenn.dev/lucentrains/articles/pow_function_article</guid><pubDate>Fri, 09 May 2025 07:05:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pUecdTUY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEpow%2528%2529%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%25972%25E4%25B9%2597%25E6%25B3%2595%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lucentrains%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMDQ0MTBjYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lucentrains</dc:creator></item><item><title><![CDATA[🐴 中央・地方競馬 どちらも予想できる競馬AIを作ろう！(ChatGPTも利用) - 改訂版 2025年春]]></title><description><![CDATA[本書は、競馬データサイエンスを駆使して、競馬AIを作成する方法を解説するものです。初心者でも理解しやすいよう、解説を行います。中央競馬のデータだけではなく、地方競馬のデータを用いた場合のパフォーマンスについても実験結果を掲載、解説しています。

・更新情報
2025/5/9 新規作成]]></description><link>https://zenn.dev/keivacance/books/250509_horse</link><guid isPermaLink="true">https://zenn.dev/keivacance/books/250509_horse</guid><pubDate>Fri, 09 May 2025 04:33:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v1t-iVpw--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lM2U2ZDI0NTBkLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ケイバカンス</dc:creator></item><item><title><![CDATA[tweet_bot フォルダのコードをやさしく解説してみた]]></title><description><![CDATA[
 はじめに
このページでは tweet_bot フォルダ内にある Python ファイルを、プログラミング初心者にもわかりやすく紹介します。


 🔹 auto_convert

#コマンド→ python tweet_bot/auto_convert.py

import os
import time
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

# 監視対象のフォルダ
WATCH_FOLDER = "./tweet_bot"
OUTPUT_FOL...]]></description><link>https://zenn.dev/yochi/articles/tweet-module-summary</link><guid isPermaLink="true">https://zenn.dev/yochi/articles/tweet-module-summary</guid><pubDate>Fri, 09 May 2025 03:21:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3hcMGzAp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tweet_bot%2520%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2582%2584%25E3%2581%2595%25E3%2581%2597%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2581%2593%25E4%25B8%258AY%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZGZhMmIyY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>道上Y</dc:creator></item><item><title><![CDATA[手を動かして学ぶ！MCPステップバイステップ実践ガイド for Beginners - Vol.2 Flaskで動かす初めてのMCPサーバー]]></title><description><![CDATA[
 1. はじめに: サーバーって何だろう？
皆さん、こんにちは！「手を動かして学ぶ！MCPステップバイステップ実践ガイド for Beginners」の第2回へようこそ！
前回のVol.1では、このシリーズの旅の目的であるMCP（Model Context Protocol）がどんなものか、その概要をお話ししましたね。そして、旅の相棒となるプログラミング言語Pythonと、作業場となる開発環境の準備を一緒に行いました。もし、まだVol.1を読んでいない方や、環境準備が済んでいない方は、ぜひ先にそちらをチェックしてみてください。準備万端で今回の冒険に臨みましょう！
さて、今回のテーマは ...]]></description><link>https://zenn.dev/querypie/articles/0b94e9596db12e</link><guid isPermaLink="true">https://zenn.dev/querypie/articles/0b94e9596db12e</guid><pubDate>Fri, 09 May 2025 02:56:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FN21dGUf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2589%258B%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581MCP%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E5%25AE%259F%25E8%25B7%25B5%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2520for%2520Beginners%2520-%2520Vol.2%2520Flask%25E3%2581%25A7%25E5%258B%2595...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:QueryPie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MzUyMzdkYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>QueryPie</dc:creator></item><item><title><![CDATA[VOICEVOX Core で「ずんだもん」の音声を最小構成で合成する]]></title><description><![CDATA[
 概要
このチュートリアルでは、VOICEVOX Core 0.16.0（安定版）を使って「ずんだもん」の音声を合成する最小構成手順を解説します。この記事は ChatGPT の力を借りて生成しました。

PyPI から公式の Python バインディングをインストール

run.py を GitHub から取得して使用
非同期処理（asyncio）は使わず、簡潔に動作確認を行います



 ステップ 1：VOICEVOX Core バイナリのダウンロードと展開
curl -L -O https://github.com/VOICEVOX/voicevox_core/releases/d...]]></description><link>https://zenn.dev/masakielastic/articles/23c5850e30c2fa</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/23c5850e30c2fa</guid><pubDate>Fri, 09 May 2025 02:44:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9w9avkR7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VOICEVOX%2520Core%2520%25E3%2581%25A7%25E3%2580%258C%25E3%2581%259A%25E3%2582%2593%25E3%2581%25A0%25E3%2582%2582%25E3%2582%2593%25E3%2580%258D%25E3%2581%25AE%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7%25E5%2590%2588%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[MCP プロトコルの内部動作を理解する]]></title><description><![CDATA[
 はじめに
Google Next 2025 でも AI 関連の発表が数多くありました。
その中でも AI Agent 開発周りでも多くの発表があり、A2A プロトコルが発表されました。
A2A プロトコルは MCP プロトコルを補完する機能という説明があったため、改めて MCP を利用するだけでなく、開発保守などを実施していく観点から詳細を調べてみることにしました。

 準備
MCP サーバーとそれを利用するシステムを開発する準備を行います。
# 開発環境の準備
uv init mcp-test
cd mcp-test
uv venv
source .venv/bin/activat...]]></description><link>https://zenn.dev/hogeticlab/articles/6990dd2fd5d1aa</link><guid isPermaLink="true">https://zenn.dev/hogeticlab/articles/6990dd2fd5d1aa</guid><pubDate>Fri, 09 May 2025 02:09:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mX0LZ0x4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25AB%25E3%2581%25AE%25E5%2586%2585%25E9%2583%25A8%25E5%258B%2595%25E4%25BD%259C%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:MBK-Digital%2520ohashi...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5OGNmNmVkNmEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520MBK%2520%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlBVS1lWZ1k2Tk5EdDUwbkZxeWdVR24xZmNtSmdVbDcyNHU1Sm55LWFIc1dET3FnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MBK-Digital ohashi.nobuhiro</dc:creator></item><item><title><![CDATA[Pythonの *args と **kwargs の基本と、Djangoでの使われ方]]></title><description><![CDATA[
 はじめに
Pythonで関数やクラスを定義していると、以下のような記述を見かけます。
def some_func(*args, **kwargs):
    ...
*args と **kwargsは「引数をたくさん受け取れるもの」と漠然と理解していても、
その意味を理解していないと形式的に書くだけになってしまうことがあります。
本記事では、*args と **kwargs について、
基本からDjangoなど実務でどう活用されているかについて解説します。

 1. *args と **kwargs とは
まずは、*argsと**kwargsの役割を押さえておきましょう。

 *ar...]]></description><link>https://zenn.dev/fd2025/articles/add9e98dd305e3</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/add9e98dd305e3</guid><pubDate>Fri, 09 May 2025 00:16:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UPOGjITW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%2520%252Aargs%2520%25E3%2581%25A8%2520%252A%252Akwargs%2520%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E3%2580%2581Django%25E3%2581%25A7%25E3%2581%25AE%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[LangChain + ChatGPT API による Q&A ボット構築]]></title><description><![CDATA[
 調査日
2025 年 5 月 6 日（火）

 調査目的
手元の社内ドキュメント（Markdown 形式）を読み込み、ChatGPT と LangChain を使って自然言語で質問できる検索拡張型 Q&amp;A ボット（RAG）を構築する。

 使用技術

Python 3.10
LangChain v0.1.x
OpenAI API（gpt-3.5-turbo）
FAISS（ベクトル検索エンジン）
TextLoader（langchain_community）

.env による API キー管理


 実施環境

OS：Windows 11
エディタ：VS Code
仮想環境：...]]></description><link>https://zenn.dev/homatsu_tech/articles/9bad27722aad91</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/9bad27722aad91</guid><pubDate>Thu, 08 May 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Scrz8YDM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%252B%2520ChatGPT%2520API%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520Q%2526A%2520%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[Python(64bit)でJV-Link(32bit)を使いたい]]></title><description><![CDATA[
 はじめに
note/Qiitaに投稿済みなのですが、どうしても元記事に「スキ」したくてZennにアカウント作成したので、こちらにも投稿させていただきます。

 経緯
JRA-VAN DataLab.のデータを使って自前のAI予想がしたいと思い、色々と調べました。

機械学習といえば Python だろう
競馬データは？ JRA-VAN DataLab. が良さそう
データ取得は？ JV-Link を使うのか
サンプルコードは？「Zenn:PythonからJV-Linkを操作する。」

よし、これはイケる！

 DLL Surrogate
落とし穴がありました。（元記事の記載通りですが...]]></description><link>https://zenn.dev/hraps/articles/fb6ce9b1151ced</link><guid isPermaLink="true">https://zenn.dev/hraps/articles/fb6ce9b1151ced</guid><pubDate>Thu, 08 May 2025 18:11:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FNR71dRQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%252864bit%2529%25E3%2581%25A7JV-Link%252832bit%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HRAPS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGNiRlR2TUhmbHlNS0xJQ1llQjJWVng4aXBCaU5BUGVZYzZxbUthRUVfd0E0dWJBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HRAPS</dc:creator></item></channel></rss>