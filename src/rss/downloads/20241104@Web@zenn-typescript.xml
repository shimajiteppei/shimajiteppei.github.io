<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 04 Nov 2024 08:36:31 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[App Router（Next.js）に関する基礎知識　ルーティングについて]]></title><description><![CDATA[Next.jsはver13から「App Router」が選択できるようになりました。（以前はPages Router）
この変化によって様々な事が変わっており、
私の様な初心者は頭がごっちゃになる事が多々あります😫
私の様な方々の助けになればと思い、App Routerを理解するための基礎知識をまとめようと思いました。
まずはアプリケーションのルーティングについてです！

 Pageファイルについて
App Routerでは、「app」という特別なディレクトリに「page.tsx」というファイルを配置します。
app直下のpage.tsxと書かれたファイルだけがルーティングの対象になりま...]]></description><link>https://zenn.dev/ouseijin/articles/7a237cf4e56543</link><guid isPermaLink="true">https://zenn.dev/ouseijin/articles/7a237cf4e56543</guid><pubDate>Mon, 04 Nov 2024 03:14:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BHnWZ5VG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Router%25EF%25BC%2588Next.js%25EF%25BC%2589%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598%25E3%2580%2580%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ouseijin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YmZiZ0NNclFnWmpfQnpCWnBSSVFjLVFlQ0E2bDJWZE1rbXBpaDgwdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ouseijin</dc:creator></item><item><title><![CDATA[現場レベルのReact開発構築入門 - 導入しておくべき開発ツールの全知識]]></title><description><![CDATA[ このガイドでは、モダンなフロントエンド開発に必要な環境構築を、React開発の観点からステップバイステップで解説します。

Node.jsとnpmの基礎から始まり、Viteによるプロジェクト作成、TypeScriptの導入、ESLintとPrettierによるコード品質管理、Vitestによるテスト、Tailwind CSSの設定まで、実践的な開発環境の構築方法を学びます。

また、GitHubとGitHub Actions、Vercelを活用したモダンな開発ワークフローについても解説します。

プログラミング初心者でも理解できるよう、各ツールの役割や設定方法を丁寧に説明し、実際のプロジェクトで使える知識を提供します。

この本を通じて、Reactアプリケーション開発に必要な基礎的な開発環境を整える方法を身につけましょう。 ]]></description><link>https://zenn.dev/tmasuyama1114/books/react-setup-project</link><guid isPermaLink="true">https://zenn.dev/tmasuyama1114/books/react-setup-project</guid><pubDate>Mon, 04 Nov 2024 02:08:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZHA-z3wE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iMjU5M2M4ZDdkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>とまだ@フルスタックWebエンジニア</dc:creator></item><item><title><![CDATA[Vitestでクラスをmockする]]></title><description><![CDATA[
 前提条件
まず、vite.config.tsでglobals: trueに設定していることを前提としています。これは、テストでグローバルにviオブジェクトを使用するための設定です。
Vitestでクラスをモックしたかったのですが、Jestと同様の方法が使えなくて困っていました。
今回はGoogleカレンダーのAPIライブラリをサンプルとして、JestとVitestでの違いを見ていきます。

 Jestでのクラスのモック
Jestでは、以下のようにクラスをモックすることができます。
import { calendar_v3 } from "@googleapis/calendar";
...]]></description><link>https://zenn.dev/1mono2/articles/2dbd8a0bd1eb0f</link><guid isPermaLink="true">https://zenn.dev/1mono2/articles/2dbd8a0bd1eb0f</guid><pubDate>Mon, 04 Nov 2024 01:23:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IiDEbuzs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vitest%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592mock%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:1mono2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dTeENxcFE2VXBZX2dJa1E4cTBmVzBEbFpMTnpIc0FoZWl1czJNaUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>1mono2</dc:creator></item><item><title><![CDATA[【無料公開】560万円かけて開発したサービスのソースコード]]></title><description><![CDATA[※月単価80万円を基準に、7ヶ月分の工数として560万円相当と換算しています。

 最初に
こんにちは！
普段はIT企業でWebエンジニアとして働いています。
現在はフリーランスとして活動し、Ruby（Ruby on Rails）、TypeScript（Next.js, React）、Pythonなどを使って、フロントエンドとバックエンドの両方に携わっています。
将来はソフトウェアエンジニアとしてアーキテクチャ・設計について自ら意思決定した上、プロジェクトを推進する事が出来るようになりたいです。
そのためさらにスキルを磨いていきたいと思っており、日々技術に対して情熱を持って仕事に取り組ん...]]></description><link>https://zenn.dev/unemployed/articles/bizrank-source-code-free</link><guid isPermaLink="true">https://zenn.dev/unemployed/articles/bizrank-source-code-free</guid><pubDate>Sun, 03 Nov 2024 23:54:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CnqBoYYy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2584%25A1%25E6%2596%2599%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591560%25E4%25B8%2587%25E5%2586%2586%25E3%2581%258B%25E3%2581%2591%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25A4%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMzZiMmE0MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>大学生だった.</dc:creator></item><item><title><![CDATA[Expo(React Native)で環境変数を使いたいあなたへ。]]></title><description><![CDATA[
 この記事を読むとわかること・解決すること

Publicな環境変数とPrivateな環境変数を.envファイルで管理する方法
環境変数の名前の制約をなくしたい！
「EAS Buildのときになぜか、.envが読み込まれない！」

実験のために作成したリポジトリもあるので、よろしければ参考にしてみてください 👋
https://github.com/zackerms/expo-playground-credential

 [宣伝] komichi というアプリを作っています！
「どこ行こうかなぁ〜」と考えてたら休日が終わることってありませんか？
このアプリを使うと、現在地や好きな場所...]]></description><link>https://zenn.dev/dev_zacker/articles/768bd4fd0bfcad</link><guid isPermaLink="true">https://zenn.dev/dev_zacker/articles/768bd4fd0bfcad</guid><pubDate>Sun, 03 Nov 2024 12:35:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u1XgiadS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Expo%2528React%2520Native%2529%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25B8%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zacker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzIzN2U4ZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zacker</dc:creator></item><item><title><![CDATA[Reactで学ぶ技術習得ハンズオン - OSS探索法]]></title><description><![CDATA[
 初めに
この記事では、
「初見技術のキャッチアップの仕方・過程の一つの道標を残す」
ことに焦点を絞っています。その一例として、
Reactをゼロからキャッチアップする工程を記録しています。
　経緯として、周囲から勉強法について聞かれることがあったこと、また、過去に学習の仕方やキャッチアップのコツがわからないという経験をしており、この記事だけでは全てを伝えることは難しいですが、少しでも雰囲気が伝わり、この記事を見た誰かの後押しになればいいなと思い、まだ勉強中の身ではありますが作成しました。
なお、技術記事の作成は今回が初めてのため、修正点等あれば教えていただけると嬉しいです。

 この...]]></description><link>https://zenn.dev/ton68/articles/3c4ab94edd9ba4</link><guid isPermaLink="true">https://zenn.dev/ton68/articles/3c4ab94edd9ba4</guid><pubDate>Sun, 03 Nov 2024 11:56:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4JP9AxE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E6%258A%2580%25E8%25A1%2593%25E7%25BF%2592%25E5%25BE%2597%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%2520-%2520OSS%25E6%258E%25A2%25E7%25B4%25A2%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZTRjZGQ1ZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuto</dc:creator></item><item><title><![CDATA[CDKでBiomeを使う]]></title><description><![CDATA[Webバックエンドエンジニアをしている山梨といいます。
最近CDK(TypeScript)のプロジェクトにBiomeを導入したところ、かなり開発体験が良かったので紹介します。

 Biomeとは？
Biomeは、Web開発で利用する技術（JS,TS,JSON,CSSなど）を対象としたツールチェーンで、Linter, Formatterなどを提供しています。
また、Zero Config で動作するため、設定なしですぐに利用できるのが特徴です。
https://biomejs.dev/ja/

 なぜCDKにBiomeを使うのか？
CDK(TypeScript)でBiomeを使用する理由は...]]></description><link>https://zenn.dev/yamaren/articles/16578dcec33709</link><guid isPermaLink="true">https://zenn.dev/yamaren/articles/16578dcec33709</guid><pubDate>Sun, 03 Nov 2024 07:55:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l6K_wLXh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:CDK%25E3%2581%25A7Biome%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamanashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMGUxOTkxY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamanashi</dc:creator></item><item><title><![CDATA[【TypeScript】バージョン5系でのenum変数へのnumber型の代入]]></title><description><![CDATA[
 概要
TpeScriptではTypeScript Deep Dive 日本語版のEnumの解説によると、変数自体は数値型で保持されます。元々はenumの変数に定義されてない数値を入れるとエラーにならないようですが、サバイバルTypeScript 列挙型(enum)の問題点と代替手段によると、TypeScript5からは定義されてない値を入れようとするとエラーにしてくれるそうです。今回はこの動作を少し試してみたのでメモ書きしておきます。

 前提

今回使用したTypeScriptのバージョンは5.6.3です。


 実装サンプル
まずは以下のようなenumの型と変数を用意します。
e...]]></description><link>https://zenn.dev/someone7140/articles/2f7434f967db1a</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/2f7434f967db1a</guid><pubDate>Sun, 03 Nov 2024 05:29:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G3s7KLIg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B35%25E7%25B3%25BB%25E3%2581%25A7%25E3%2581%25AEenum%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25B8%25E3%2581%25AEnumber%25E5%259E%258B%25E3%2581%25AE%25E4%25BB%25A3%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[技術的負債の発生を抑制する、UI指向アーキテクチャ]]></title><description><![CDATA[こんにちは。
株式会社CHILLNNという京都のスタートアップにてCTOを担っております永田と申します。
本記事では、GraphQLを活用した、規模が拡大しても崩壊しづらいソフトウェアアーキテクチャについて考察していきます。
自分は普段はバックエンドを書いているのですが、先週は少しReactを書いていて、その中で考えたアーキテクチャについて紹介させていただきます。

 はじめに
弊社ではAPIとしてGraphQLを利用しています。
APIレスポンスの型をフロントエンドと共有できるため、API設計を行う際にUIの構成を強く意識することができます。
弊社でのバックエンドの開発フローはざっくり...]]></description><link>https://zenn.dev/chillnn_tech/articles/ui-oriented-architecture</link><guid isPermaLink="true">https://zenn.dev/chillnn_tech/articles/ui-oriented-architecture</guid><pubDate>Sat, 02 Nov 2024 19:11:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vrJlolPy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E8%25B2%25A0%25E5%2582%25B5%25E3%2581%25AE%25E7%2599%25BA%25E7%2594%259F%25E3%2582%2592%25E6%258A%2591%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581UI%25E6%258C%2587%25E5%2590%2591%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryoNagata001%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmODdhZGU3ZjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BECHILLNN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NmJkNzJjZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoNagata001</dc:creator></item><item><title><![CDATA[CloudFront + Lambda Function URLs + Hono + htmx でPOST/PUTリクエストに対応させる]]></title><description><![CDATA[現状、Lambda Function URL を安全に使う方法は Cloudfront の AOC と組み合わせるのが良さそうです。
https://dev.classmethod.jp/articles/aws-cdk-cloudfront-oac-lambda-function-url/
https://aws.amazon.com/jp/about-aws/whats-new/2024/04/amazon-cloudfront-oac-lambda-function-url-origins/
ただし、GET リクエストだけであれば問題ないのですが、ヘッダーにペイロードのハッシュ値の...]]></description><link>https://zenn.dev/hr20k_/articles/5c8ab3d3d163f8</link><guid isPermaLink="true">https://zenn.dev/hr20k_/articles/5c8ab3d3d163f8</guid><pubDate>Sat, 02 Nov 2024 11:56:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lx0MLOwy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CloudFront%2520%252B%2520Lambda%2520Function%2520URLs%2520%252B%2520Hono%2520%252B%2520htmx%2520%25E3%2581%25A7POST%252FPUT...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hr20k_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDIyY2IzNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hr20k_</dc:creator></item><item><title><![CDATA[嫁から頼まれた買い物リストを忘れないwebアプリ作った]]></title><description><![CDATA[今回のwebアプリは自分のために作成したアプリです。
俺得っていうやつです。

 完成品の紹介
テキストフィールドに嫁さんからきたラインをコピーした文章を
テキストフィールドにペーストをします。
その後にボタンを押してチェックリストが表示されるだけのアプリです。
買い物かごにぶち込んだ後はチェックするだけです。

実物は以下を参照してください
https://shopping-checklist-ruby.vercel.app/

 プロジェクトの作成
作成したいディレクトリに移動してから
npx create-next-app@latest shopping-checklist
設定は...]]></description><link>https://zenn.dev/dokusy/articles/6781347d0f5675</link><guid isPermaLink="true">https://zenn.dev/dokusy/articles/6781347d0f5675</guid><pubDate>Sat, 02 Nov 2024 07:57:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mZ5vQwhE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AB%2581%25E3%2581%258B%25E3%2582%2589%25E9%25A0%25BC%25E3%2581%25BE%25E3%2582%258C%25E3%2581%259F%25E8%25B2%25B7%25E3%2581%2584%25E7%2589%25A9%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25BF%2598%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2581%2585%25E3%2581%258F%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYTU0YmQxZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どぅくし</dc:creator></item><item><title><![CDATA[Next.js App Routerにおけるリンクとナビゲーションの基本]]></title><description><![CDATA[業務でNext.jsに触る機会が多くリンク周りに使える物が多くて混乱したのでドキュメントを読みまとめてみる。

 概要

Next.jsでリンク遷移やページのナビゲーションをやる方法は以下の四つがある



&lt;Link&gt;コンポーネント: 基本的にはnext/linkのこれを使うのがパフォーマンス良さそう。ドキュメントでも&lt;Link&gt;コンポーネントの使用を推奨している。

useRouter()hook: ルーティングを柔軟に操作したい場合に使用する。クライアントコンポーネント内で使用できる。

redirectfunction
ネイティブのHistory API
...]]></description><link>https://zenn.dev/yamatowani/articles/258297ae8a218c</link><guid isPermaLink="true">https://zenn.dev/yamatowani/articles/258297ae8a218c</guid><pubDate>Sat, 02 Nov 2024 06:08:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TTJcYgoy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520Router%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25A8%25E3%2583%258A%25E3%2583%2593%25E3%2582%25B2%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzNzI4NjhlM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わに</dc:creator></item><item><title><![CDATA[TypeScriptで実現！Next.js × Expressによるスキーマ自動生成＆環境構築ガイド【Prisma、tsoa、Chakra]]></title><description><![CDATA[
 はじめに
TypeScriptで型安全なフルスタック開発を実現したい、でも毎回のスキーマの同期や型定義に手間取る…そんな悩みを解消すべく、このガイドではNext.js×Expressによるスキーマ自動生成環境の構築方法を書いてみました。
tsoaでバックエンドのAPIスキーマを定義し、Prismaでデータベース操作を行います。
そして、Swaggerスキーマを活用してフロントエンドに型情報を自動生成し、Next.jsとChakra UIを使って柔軟なUIを構築します。
設定さえ済めば、手作業での型定義やコードの齟齬に悩むことなく、バックエンドとフロントエンドの連携がしやすくなると思い...]]></description><link>https://zenn.dev/miumi/articles/fa1cc96e54a3c3</link><guid isPermaLink="true">https://zenn.dev/miumi/articles/fa1cc96e54a3c3</guid><pubDate>Sat, 02 Nov 2024 04:29:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Tii_YYh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581Next.js%2520%25C3%2597%2520Express%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25EF%25BC%2586%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25E3%2580%2590Prisma...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259F%25E3%2582%25AB%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4YjgwZTkyZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ミカイ</dc:creator></item><item><title><![CDATA[Docker上でNext.js/Express.jsを環境構築]]></title><description><![CDATA[
 はじめに
初めまして、きょうへいと申します。
この度は私の記事をご覧いただきありがとうございます！
私は未経験からエンジニアとして就職し、現在の企業でTypeScript、Next.js、Express.jsを使用した開発に携わっています。
まだまだ駆け出しのエンジニアなので、技術についての理解を深めるために本記事を作成しました。
良ければお付き合い下さい！

 本記事の目的

Docker を使用したフルスタック開発環境の構築方法の解説
Next.js（フロントエンド）とExpress.js（バックエンド）の連携環境の作成
データベース（PostgreSQL）を含めた実践的な開発環...]]></description><link>https://zenn.dev/unnnyou/articles/cf978d62d3638d</link><guid isPermaLink="true">https://zenn.dev/unnnyou/articles/cf978d62d3638d</guid><pubDate>Sat, 02 Nov 2024 03:10:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lCJzH6Ug--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E4%25B8%258A%25E3%2581%25A7Next.js%252FExpress.js%25E3%2582%2592%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2587%25E3%2581%2586%25E3%2581%25B8%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUJTTjY0NGQ5VlpmYzRPeHJTUmVrMmNCTlQ2X01OX1VkSmh5ZzBSaGNlTWs0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きょうへい</dc:creator></item><item><title><![CDATA[今どきのフロントエンドのための、郵便番号→住所変換 #jposta]]></title><description><![CDATA[
 概要
入力された郵便番号から住所を自動入力するためのライブラリは無数に存在しますが、今どきのフロントエンドアーキテクチャと親和性の高いライブラリは多くありません。また、メジャーなライブラリの中にも郵便番号と住所の紐づけデータをAPIで外部から取得しているものがあり、エンタープライズで利用しにくいという状況があります。
そこで、jpostaの紹介です。
⚡ ES6 / Promiseベース / TypeScript対応
⚡ 依存ライブラリなし
⚡ Self-hosted &amp; ダイナミックインポート (暗黙的なAPIコールなし)
https://www.npmjs.com/pac...]]></description><link>https://zenn.dev/nickichi/articles/df0f1222677313</link><guid isPermaLink="true">https://zenn.dev/nickichi/articles/df0f1222677313</guid><pubDate>Fri, 01 Nov 2024 14:07:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zRimNtG9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E3%2581%25A9%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2580%2581%25E9%2583%25B5%25E4%25BE%25BF%25E7%2595%25AA%25E5%258F%25B7%25E2%2586%2592%25E4%25BD%258F%25E6%2589%2580%25E5%25A4%2589%25E6%258F%259B%2520%2523jposta%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taichika%2528p%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmU4NjkyOGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taichika(p)</dc:creator></item><item><title><![CDATA[どうして僕の作ったクラスが手続き型と言われなきゃいけないんですか]]></title><description><![CDATA[
 内容
-若手プログラマーのオブジェクト指向の疑問に答えていく 第2弾-
ある帳票のシステムを作ることになったので、オブジェクト指向を使ってプログラミングした。
しかし、上司に
「こんな手続き型プログラミングじゃダメだよ。」
と言われてしまう。
ちゃんとクラスにしているし、プロパティも隠蔽できているのに、なぜか。

 ここに置いてあります
内容は登場人物がいて進行する会話形式にしたかったので、パワーポイントの方が向いていると思いましたので、SlideShareにあげました。
https://speakerdeck.com/akikogoto/supakurasukaintahuesuk...]]></description><link>https://zenn.dev/akiko_goto/articles/9310fc15a4f65a</link><guid isPermaLink="true">https://zenn.dev/akiko_goto/articles/9310fc15a4f65a</guid><pubDate>Fri, 01 Nov 2024 14:00:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Jasgkb7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%25E5%2583%2595%25E3%2581%25AE%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%258C%25E6%2589%258B%25E7%25B6%259A%25E3%2581%258D%25E5%259E%258B%25E3%2581%25A8%25E8%25A8%2580%25E3%2582%258F%25E3%2582%258C%25E3%2581%25AA%25E3%2581%258D%25E3%2582%2583%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2599%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%258C%25E8%2597%25A4%25E3%2580%2580%25E6%259A%2581%25E5%25AD%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlNDY1MjM2NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>後藤　暁子</dc:creator></item><item><title><![CDATA[いかにして『型』は人を救うか。【ウィトゲンシュタイン / 千葉雅也】]]></title><description><![CDATA[
話をあらためてシンプルにします。意味からリズムへ、というのがこの本です。
リズムというのは、デコボコなのでした。
デコボコというのは、要素がどう並んでいるかです。
とにかく「並び」が大事なんだ、とも言える。
千葉雅也『センスの哲学』[1]


三・三三
論理的構文論においては、断じて記号の意味が役割を果たすようなことがあってはならない。
論理的構文論は記号の意味を論じることなく立てられねばならず、そこではただ諸表現を記述することだけが前提にされうる。
三・三三一
この見解に立つと、ラッセルの「タイプ理論」の内実が見えてくる。
ラッセルの誤りは、記号の規則を立てるのに記号の意味を論じなけ...]]></description><link>https://zenn.dev/purenium/articles/2024_11_01_how_type_systems_can_save_humans</link><guid isPermaLink="true">https://zenn.dev/purenium/articles/2024_11_01_how_type_systems_can_save_humans</guid><pubDate>Fri, 01 Nov 2024 11:29:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oPZccEfk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%258B%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2580%258E%25E5%259E%258B%25E3%2580%258F%25E3%2581%25AF%25E4%25BA%25BA%25E3%2582%2592%25E6%2595%2591%25E3%2581%2586%25E3%2581%258B%25E3%2580%2582%25E3%2580%2590%25E3%2582%25A6%25E3%2582%25A3%25E3%2583%2588%25E3%2582%25B2%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25B3%2520%252F%2520%25E5%258D%2583%25E8%2591%2589%25E9%259B%2585%25E4%25B9%259F%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2584%25A1%25E5%2590%258D%25E9%259A%25B1%25E8%2580%2585%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNTlhNDlkYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>無名隱者</dc:creator></item><item><title><![CDATA[【Findy Team+ Award 2024 を受賞しました】開発生産性向上のための全エンジニアフルスタック化計画の道のり]]></title><description><![CDATA[
 はじめに
エックスポイントワン取締役CTOの鈴木です。
このたび弊社は、エンジニアのプラットフォームを提供するファインディ株式会社が運営する 「Findy Team+」利用企業を対象に、開発生産性が優れたエンジニア組織を表彰する「Findy Team+ Award 2024」 の「Team Award シーケンシャル開発アプローチ部門」に選出いただきました！

受賞のご報告とともに、開発生産性の向上のための弊社の取り組みをご紹介させていただければと思います。

 どのような取り組みをおこなったか
タイトルからある程度内容は察していただけるかと思いますが、社内のエンジニアのフルスタック...]]></description><link>https://zenn.dev/x_point_1/articles/8e982be93ca26f</link><guid isPermaLink="true">https://zenn.dev/x_point_1/articles/8e982be93ca26f</guid><pubDate>Fri, 01 Nov 2024 10:37:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EEhV4COb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Findy%2520Team%252B%2520Awardw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Osin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3YzY4ZjI4ZDcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25B3%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2MWMzODA0YTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Osin</dc:creator></item><item><title><![CDATA[めっちゃ使いやすいスコアボードを作りました（3チーム以上でも使える）]]></title><description><![CDATA[
 はじめに
この度、Web スコアボードアプリ「UnScoreboard」を作成しました。このアプリの最大の特徴は、3 チーム以上のスコア管理にも対応している点です。
https://unscoreboard.unreact.jp?from=zenn
実際に実装したのは、僕ではなく弊社の新人エンジニアです。
この記事では、なぜスコアボードを作ることにしたのか、使いやすさにこだわったポイント、そして実装について紹介していきたいと思います。

 なぜスコアボードを作ったのか
今回、スコアボードアプリを作ろう思ったきっかけは主に 2 つあります。

3 チーム以上のスコアボードがあまりない
...]]></description><link>https://zenn.dev/taichifukumoto/articles/scoreboard-unscoreboard</link><guid isPermaLink="true">https://zenn.dev/taichifukumoto/articles/scoreboard-unscoreboard</guid><pubDate>Fri, 01 Nov 2024 01:11:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gj7Johkj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taichi%2520fukumoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiZTU1OWFmNjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taichi fukumoto</dc:creator></item><item><title><![CDATA[TypeScriptの型を展開してホバー表示してくれるVSCode拡張「Prettify TypeScript」が便利]]></title><description><![CDATA[TypeScriptは強力な型システムが魅力です。
しかし、複雑な型定義は理解が難しいです。特にライブラリの型定義などはジェネリクスや交差型などがネストしていることも多く、すぐに把握するのが難しい場合があります。
Visual Studio Code（以下VSCode）でTypeScriptの開発をしている際、型にカーソルをホバーすると型情報が表示されます。
しかし、深いネストや複雑な型の場合、展開される情報が不十分で、定義を追う必要があります。
そんな時に役立つVSCodeの拡張機能がないかな〜と探していたら「Prettify TypeScript」というぴったりの拡張機能を発見しまし...]]></description><link>https://zenn.dev/atamaplus/articles/0ecd883bcc9edd</link><guid isPermaLink="true">https://zenn.dev/atamaplus/articles/0ecd883bcc9edd</guid><pubDate>Fri, 01 Nov 2024 00:40:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EPjL_mc0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%25B1%2595%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2583%259B%25E3%2583%2590%25E3%2583%25BC%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BVSCode%25E6%258B%25A1%25E5%25BC%25B5%25E3%2580%258CPrettify%2520TypeScript%25E3%2580%258D%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yutake27%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTM3M2I1YWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:atama%2520plus%2520techblog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNTc2ZTM0OTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yutake27</dc:creator></item></channel></rss>