<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 01 Jun 2025 08:42:09 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TRPGシナリオ作成を変えたMCPサーバー開発記]]></title><description><![CDATA[
 何したの？
MCPの勉強がてら、ローカルのテキストファイルを、キーワードで全文検索して、どのファイルにどんな情報があるか参照できるMCPサーバーを開発しました。
https://github.com/foo-543674/fs-text-search-mcp

 ソード・ワールド2.5 GMの悩み
私は身内でTRPG（テーブルトークRPG）、特にソード・ワールド2.5というファンタジー系TRPGを遊ぶことが多く、その一環でGM（ゲームマスター）もやることもあります。ソード・ワールド2.5は公式シナリオも多いのですが、数を遊ぶとなるとシナリオを作る必要があるので、シナリオ作成も行ってい...]]></description><link>https://zenn.dev/foo_543674/articles/f8037472b7c4da</link><guid isPermaLink="true">https://zenn.dev/foo_543674/articles/f8037472b7c4da</guid><pubDate>Sat, 31 May 2025 15:55:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vFX5aDv4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TRPG%25E3%2582%25B7%25E3%2583%258A%25E3%2583%25AA%25E3%2582%25AA%25E4%25BD%259C%25E6%2588%2590%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2581%259FMCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E9%2596%258B%25E7%2599%25BA%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4YmY4Nzk4ZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふー</dc:creator></item><item><title><![CDATA[Rustのgardeで日本語を文字数バリデーションするときの注意点]]></title><description><![CDATA[
 はじめに
これまでJavaを利用することが多かったのですが、最近業務でRust（axum）を使ったAPI開発に挑戦しました。
その中で、gardeを使った文字数バリデーションに少しハマることがあったので、学んだことをまとめておきます。
利用したバージョンは0.22.0です。

 バリデーションでハマった例と原因調査
ユーザーからリクエストボディを受け取り、それを構造体にマッピングして扱うというケースはよくあることかと思います。
Javaの@Sizeアノテーションを使うような感覚で、Rustでも構造体に対してバリデーションを実装してみました。

 Rustのコード
use garde:...]]></description><link>https://zenn.dev/pingu109/articles/fe0214b4d0c5b4</link><guid isPermaLink="true">https://zenn.dev/pingu109/articles/fe0214b4d0c5b4</guid><pubDate>Sat, 31 May 2025 06:29:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9Bn36Qun--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AEgarde%25E3%2581%25A7%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keisuke%2520Ota%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YWJhYzdlNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keisuke Ota</dc:creator></item><item><title><![CDATA[RustでPyO3＋maturin環境の非破壊stubgenerator]]></title><description><![CDATA[
 はじめに
久しぶりの投稿になります。
今回は、RustのPyO3で使われるアトリビュートを解析し、既存のコードを壊さずにPythonのスタブファイル（.pyi）を生成するサブコマンドを作成したお話を紹介します。

 作成の経緯
PythonでGUIアプリケーションを開発する中で、MVVMアーキテクチャを採用し、ViewとViewModelはPythonで、Model部分をRustで実装しようと考えました。
PyO3とMaturinを使ってRustコードをPythonにバインドする際、Rust関数の変更がPython側からもすぐに把握できるようにしたくなりました。
そのため、Rustの...]]></description><link>https://zenn.dev/tikuwabu/articles/2fe5cb46f65efb</link><guid isPermaLink="true">https://zenn.dev/tikuwabu/articles/2fe5cb46f65efb</guid><pubDate>Sat, 31 May 2025 03:23:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E2SpmOj1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7PyO3%25EF%25BC%258Bmaturin%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E9%259D%259E%25E7%25A0%25B4%25E5%25A3%258Astubgenerator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxMjdmZjRiODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item><item><title><![CDATA[Rust Bevy によるクリエイティブコーディング]]></title><description><![CDATA[クリエイティブコーディングとは、何らかの表現を創造することを目的とするプログラミングのことです。通常のプログラミングは何らかの機能を実現することを目的としますので、それとは異なっています。愛好家たちによって、ビジュアルアートやサウンドアートなどの作品が制作されています。
以前のゆめみ大技林で、Nannou（ナンヌー）[1]フレームワークを利用したクリエイティブコーディングについて書きました。

Rust Nannou でクリエイティブコーディング（『ゆめみ大技林 '23（2）』に掲載）
Rust Nannou 作図事例（『ゆめみ大技林 '24』に掲載）

今回は、フレームワークとして B...]]></description><link>https://zenn.dev/usamik26/articles/bevy-creative-coding</link><guid isPermaLink="true">https://zenn.dev/usamik26/articles/bevy-creative-coding</guid><pubDate>Sat, 31 May 2025 01:28:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g-7mqtEQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520Bevy%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:USAMI%2520Kosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzNjkyMWMyN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>USAMI Kosuke</dc:creator></item><item><title><![CDATA[技術調査 - dbt Fusion Engine パブリックベータ版]]></title><description><![CDATA[
 はじめに
データ変換ツールdbt (data build tool) は、アナリティクスエンジニアリング分野で広く採用され、データパイプラインの構築と管理に革命をもたらしました。そして2025年5月28日、開発元であるdbt Labsは、dbtの性能と開発者体験を飛躍的に向上させる新しい実行エンジン「dbt Fusion Engine」のパブリックベータ版を発表しました。AI活用が加速し、構造化データの重要性が増す現代において、この発表はdbtが次世代の標準となるための大きな一歩として、大きな注目を集めています。
dbt Fusionは、単なる高速化に留まらず、データ開発のあり方を変...]]></description><link>https://zenn.dev/suwash/articles/dbt_fusion_engine_20250530</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/dbt_fusion_engine_20250530</guid><pubDate>Fri, 30 May 2025 08:35:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iQNUmhDR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E8%25AA%25BF%25E6%259F%25BB%2520-%2520dbt%2520Fusion%2520Engine%2520%25E3%2583%2591%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25BF%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2520%252F%2520%25E8%25AB%258F%25E8%25A8%25AA%25E7%259C%259F%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh / 諏訪真一</dc:creator></item><item><title><![CDATA[Tauri 2.0とTypeScript＋Reactで作るキーロガー]]></title><description><![CDATA[
こんにちは村上と言います。音楽プロデューサーをやっていますが、
また性懲りもなくニッチなデスクトップアプリを作りました。
https://github.com/Jun-Murakami/KeyFit
キーボードのよく使うキーを可視化し、45%/60%/75%などのキーボード選択やカスタマイズをサポートをするキーロガーです。
日付範囲やアプリごとによく使うキーのランキングや分布を分かりやすく表示します。日付は１日単位の記録なのでパスワードの復元などは困難だと思いますが、キーロガーではあるので、取り扱いにはご注意ください。

 初挑戦のTauri
常駐型で、少しでも軽くしたいのでElect...]]></description><link>https://zenn.dev/jun_murakami/articles/b7502bd19a97db</link><guid isPermaLink="true">https://zenn.dev/jun_murakami/articles/b7502bd19a97db</guid><pubDate>Thu, 29 May 2025 12:11:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5Rw6VXdb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25202.0%25E3%2581%25A8TypeScript%25EF%25BC%258BReact%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25AC%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2520Murakami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WUpGeVFIblVsUDZucHhNYXZtX25qUEx3M1JfanJxRldjdEhDSjlodz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun Murakami</dc:creator></item><item><title><![CDATA[TypeScriptって実はそんなに型安全じゃないよね、という話【初学者】]]></title><description><![CDATA[!
この記事のコード例部分はほぼほぼAIに書いてもらいました。一応確認はしましたが、間違っている可能性があります。


 はじめに
最近Rustをさきっちょだけ味見してみたのですが、TypeScriptとの型システムの違いに驚愕しました。「TypeScript使ってるから型安全だぜ！」って思ってたんですが、ある程度は型安全かもしれませんが、実はそこまででもないんですね...
この記事では、TypeScriptがRustと比べてどれくらい「型が緩い」のかを、実際のコード例を交えて解説してみます。
!
僕が初心者で間違っている部分もあると思いますので、話半分で見てください。


 そもそもT...]]></description><link>https://zenn.dev/miyabitti256/articles/typescript-not-type-safe</link><guid isPermaLink="true">https://zenn.dev/miyabitti256/articles/typescript-not-type-safe</guid><pubDate>Thu, 29 May 2025 08:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T6oN9DEz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A3%25E3%2581%25A6%25E5%25AE%259F%25E3%2581%25AF%25E3%2581%259D%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25AB%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%2598%25E3%2582%2583%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%25AD%25E3%2580%2581%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%25E3%2580%2590%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyabitti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjVmZThjM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyabitti</dc:creator></item><item><title><![CDATA[Rustでサーバーいらずのオンラインゲームを作ろう]]></title><description><![CDATA[
 はじめに
今回はP2P通信を使用してサーバーいらずの対戦型ブロック崩しを作ったので、その紹介と解説をします。

https://github.com/yadokani389/online-breakout
記事を書いた時点でのソース
記事を書いた時点でのソースです。
参考にしてください。
https://github.com/yadokani389/online-breakout/tree/0cb742a9d69715fd07ecacde792c3e038c516769


 概要
Bevyで制作したゲームです。
ホストになり表示されたIDを相手に送り、入力してもらうと対戦が開始しま...]]></description><link>https://zenn.dev/yadokani389/articles/matchbox-iroh-20250529</link><guid isPermaLink="true">https://zenn.dev/yadokani389/articles/matchbox-iroh-20250529</guid><pubDate>Thu, 29 May 2025 05:30:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W_HMGE1s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%2584%25E3%2582%2589%25E3%2581%259A%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yadokani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYTdhM2RjOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yadokani</dc:creator></item><item><title><![CDATA[Rust 小ネタ: Leptos でシグナルの書き込み中に読み取りしてランタイムエラーを起こさせてみる]]></title><description><![CDATA[こんにちは。Fairy Devices株式会社 となんらかの関わりがある nogiro (Twitter (現 Twitter): @nogiro_iota) です。
Leptos Book を読んでいると Working with Signals [1] で「シグナルを .read() している最中に .write() するとランタイムエラーするよ」と書かれています。(逆の .write() 中に .read() もそう。) 具体的にどういうことが起こるのか知っておくと、実際にやらかしたときに気づくことができるかもしれません。
というか単純にやってみたいですよね。やってみましょう。

...]]></description><link>https://zenn.dev/fairydevices/articles/851ffd0aeaa82c</link><guid isPermaLink="true">https://zenn.dev/fairydevices/articles/851ffd0aeaa82c</guid><pubDate>Wed, 28 May 2025 08:11:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_GUWhIGc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E5%25B0%258F%25E3%2583%258D%25E3%2582%25BF%253A%2520Leptos%2520%25E3%2581%25A7%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E8%25BE%25BC%25E3%2581%25BF%25E4%25B8%25AD%25E3%2581%25AB%25E8%25AA%25AD%25E3%2581%25BF%25E5%258F%2596%25E3%2582%258A%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nogiro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MjE4ODkwNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25BB%25E3%2582%25BA%25E5%2585%25AC%25E5%25BC%258F%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NGU1YjkxNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nogiro</dc:creator></item><item><title><![CDATA[vscodeにrustowlがインストールできない場合の解決策]]></title><description><![CDATA[
 結論
インストールされているRustOwlをリスト。
$ cargo install --list
rustowl v0.2.0 (/Users/[user-name]/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustowl-0.2.0/.tmp):
    rustowlc
rustowl v0.2.0:
    rustowl
まずcrates.ioから入れたものを消す。(1行目) 次に、上記の1個目の(path)をpath+file://に続けてuninstallします。
$ cargo uninstall 'r...]]></description><link>https://zenn.dev/uliboooo/articles/b07a7b2caf3f90</link><guid isPermaLink="true">https://zenn.dev/uliboooo/articles/b07a7b2caf3f90</guid><pubDate>Wed, 28 May 2025 05:16:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L9IKGD5f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vscode%25E3%2581%25ABrustowl%25E3%2581%258C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Uliboooo%2528%25E3%2581%2586%25E3%2582%258A%25E3%2581%25BC%25E3%2581%2586%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0MTFjYWRhM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Uliboooo(うりぼう)</dc:creator></item><item><title><![CDATA[TauriのIPCにGraphQLを使う]]></title><description><![CDATA[
 はじめに
TauriでWebアプリケーションをつくるときには、IPCを使う機会がありますが、型情報をフロントエンド側とバックエンド側で共有して高速に開発を進めたいところです。
RSPCを使う方法がありましたが、開発が終了してしまいました。
https://github.com/specta-rs/rspc/discussions/351
そこで、この記事では、GraphQL（ async-grpahql ）を使う方法を紹介します。

 実装方針

ipcの名前は graphql とします（何でもいいです）。
Queryのみ実装します（MutationはQueryと同じように実装できる...]]></description><link>https://zenn.dev/kaorun343/articles/ec7e1d7def2b94</link><guid isPermaLink="true">https://zenn.dev/kaorun343/articles/ec7e1d7def2b94</guid><pubDate>Tue, 27 May 2025 15:58:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--StMOj2Nj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%25E3%2581%25AEIPC%25E3%2581%25ABGraphQL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaorun343%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVZklPMktRZzdjMWFRTVNpaW1PMUt4RzRtZlBBcDFwLVpWMndsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaorun343</dc:creator></item><item><title><![CDATA[技術書典 18 と Rust グラフィックス本のご紹介]]></title><description><![CDATA[技術書典をご存知ですか？
テックベース合同会社と事務局が運営している、技術書オンリーイベントです。
年 2 回のペースで開催されており、オフライン会場（＠池袋）は毎回なかなかの賑わいを見せています。
書籍の出版や販売に関する情報発信なども手厚く、未経験者も安心してサークル出展できます。
https://techbookfest.org/event/tbf18
一般参加する側から見ても、技術書典は注目のイベントです。
ノウハウをぎゅっと一冊にまとめましたみたいな技術書が、手軽に入手できるのが一番うれしいですね。
商業書籍では見られないニッチな話題や、新しすぎる技術を扱ったものもあったりする...]]></description><link>https://zenn.dev/abechanta/articles/855d330528c174</link><guid isPermaLink="true">https://zenn.dev/abechanta/articles/855d330528c174</guid><pubDate>Sun, 25 May 2025 23:05:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tnmW9R46--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E6%259B%25B8%25E5%2585%25B8%252018%2520%25E3%2581%25A8%2520Rust%2520%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E6%259C%25AC%25E3%2581%25AE%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:abechanta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhZmY0YzAyYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>abechanta</dc:creator></item><item><title><![CDATA[ABC407: Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 407のA-E問題をRustで解いた際の解法をまとめました。

 A 問題
問題
https://atcoder.jp/contests/abc407/tasks/abc407_a
解説
A を B で割った結果を小数点第1位で四捨五入した値を求める問題です。
浮動小数点による誤差を避けるため、整数演算だけで四捨五入を実装します。具体的には、\frac{A}{B} の結果に 0.5 を加えた値を整数に切り捨てることで四捨五入を実現します。この操作を整数演算で表現するために、以下の式を用いて計算を行います。

\text{AをBで割った結果...]]></description><link>https://zenn.dev/nakst_hide/articles/8e4e34aae22036</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/8e4e34aae22036</guid><pubDate>Sun, 25 May 2025 12:48:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5rus_67e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC407%253A%2520Rust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[RustでDDD実装]]></title><description><![CDATA[
 概要
RustでDDDを実装する機会が今後増えていきそうだったので、RustでDDDを実装してみることにしました。今回は簡単にユーザーの登録と検索を実装していきます。

 開発

 ディレクトリ構成
まず、ディレクトリ構成は下記の通りです。各構成要素については、順番に説明していきます。
.
├── controller
│   ├── mod.rs
│   └── user_handler.rs
├── domain
│   ├── mod.rs
│   └── user.rs
├── main.rs
├── prepare.rs
├── repository
│   ├── mod...]]></description><link>https://zenn.dev/bamboo_nova/articles/28fd32e81ff4f3</link><guid isPermaLink="true">https://zenn.dev/bamboo_nova/articles/28fd32e81ff4f3</guid><pubDate>Sun, 25 May 2025 07:44:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mU2b_Sg1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Rust%25E3%2581%25A7DDD%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25A1%2580%25E5%25A8%2581%25E8%258F%25AF%25E6%2588%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmY0NjM5OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>血威華我</dc:creator></item><item><title><![CDATA[Rustの型システムでSudoku Checkerを作る話🦀]]></title><description><![CDATA[https://zenn.dev/ame_x/articles/8ec1ec35cdc392
この記事から着想を得ています。
TypeScriptの型システムって（実用的かはおいておいて）そんなに応用的なんだな...と感動を覚えたのです。
そして私が今学習中のRustの型システムでも同様のことができないかと考えました。
TypeScriptの型システムはチューチング完全で、数独も競技プログラミングもできるらしいですが、
https://github.com/gruhn/typescript-sudoku/tree/master
https://speakerdeck.com/imaima...]]></description><link>https://zenn.dev/oumi0804/articles/450d54afafa303</link><guid isPermaLink="true">https://zenn.dev/oumi0804/articles/450d54afafa303</guid><pubDate>Sat, 24 May 2025 09:51:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SmgnxU04--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25A7Sudoku%2520Checker%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E8%25A9%25B1%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A1%259C%25E6%25B5%25B7%2520%252F%2520saqula%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlMmViMDczZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>桜海 / saqula</dc:creator></item><item><title><![CDATA[依存クレートが依存しているクレートを調べる]]></title><description><![CDATA[
 はじめに
kraken_collectorで使ってるクレートの一部がwarning: the following packages contain code that will be rejected by a future version of Rustとなっていたんですが、ついに1.80系でコンパイルエラーとなったのでアップデートしようとしてます。その関係で調べた備忘録。結論cargoめっちゃ便利だった。

 Warningの原因を探る
現時点のkraken_collectorをビルドした際に以下のようなwaringが出る
rustc -V
rustc 1.79.0 (129f3...]]></description><link>https://zenn.dev/bathtimefish/articles/9f32404414246c</link><guid isPermaLink="true">https://zenn.dev/bathtimefish/articles/9f32404414246c</guid><pubDate>Sat, 24 May 2025 06:55:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UtVIgm6O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%259D%25E5%25AD%2598%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258C%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bathtimefish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNjQyNThkN2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bathtimefish</dc:creator></item><item><title><![CDATA[editの使い方(初心者向け)]]></title><description><![CDATA[
 初めに
!
本稿では、Ctrl キーと nキーを同時押しすることをCtrl + nと書きます。
同様にAltキーとfキーを同時押しすることをAlt + f等と書きます！

3日前くらいにMicrosoftから公式のCLIエディターが発表されました。
https://github.com/microsoft/edit?tab=readme-ov-file
曰く、MS-DOSエディタへのオマージュをしつつ、VS Codeに似たモダンなインターフェースと入力コントロールを備えているとのこと！
Windows環境において、コーディング環境としては心もとないですが、ちょっとした設定ファイルなど...]]></description><link>https://zenn.dev/96140/articles/c9b6add175b005</link><guid isPermaLink="true">https://zenn.dev/96140/articles/c9b6add175b005</guid><pubDate>Fri, 23 May 2025 14:54:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iubDDX-P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:edit%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2528%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kuro-140%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4OGI1NmMzYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kuro-140</dc:creator></item><item><title><![CDATA[ABC_406_E 'Popcount Sum 3'をRustで解く]]></title><description><![CDATA[今回はRubyではなくRustを使います。理由はカッコいいからです。

 問題
N以下、かつpop countがKの整数を全部合計してください。答えは998244353の剰余で
https://atcoder.jp/contests/abc406/tasks/abc406_e

 解法
いくつか存在しますが、私の観測範囲で最も一般的なのは桁DPでした。
https://x.com/yiwiy9/status/1924810348676448564
https://atcoder.jp/contests/abc406/editorial/13071
公式解説だと誤字なのか何なのか変な記法に...]]></description><link>https://zenn.dev/hal_mat/articles/0e8799c6ddd0ac</link><guid isPermaLink="true">https://zenn.dev/hal_mat/articles/0e8799c6ddd0ac</guid><pubDate>Thu, 22 May 2025 05:36:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zXdxU4uE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC_406_E%2520%2527Popcount%2520Sum%25203%2527%25E3%2582%2592Rust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hal_Mat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hal_Mat</dc:creator></item><item><title><![CDATA[nullの扱いに注意...(TSでの工夫)]]></title><description><![CDATA[!
後日追記
この記事を読むにあたって私の知識の乏しさと勢いとノリで書いてしまった部分もあるので間違っている部分が多くあると思います。
数件コメントをいただきましたが、参考になるコメントです。
コメントを踏まえた上でリプレイスしてみました。
それも踏まえた上で読んでいただけると幸いです。

こんにちは。
てるし〜です。
JavascriptやTypescriptでプログラムを書いているとnullが出てくると思います。
みなさんはこれらを使っていますか？
nullを使う場合はしっかりとハンドリングする必要があります。
ですが、経験の浅い私はうっかり雑なハンドリングをしてしまいバグを起こして...]]></description><link>https://zenn.dev/terusi/articles/e243ead933d406</link><guid isPermaLink="true">https://zenn.dev/terusi/articles/e243ead933d406</guid><pubDate>Wed, 21 May 2025 19:04:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S3gUt41P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:null%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F...%2528TS%25E3%2581%25A7%25E3%2581%25AE%25E5%25B7%25A5%25E5%25A4%25AB%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2M5MzkyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるし〜</dc:creator></item><item><title><![CDATA[ABC406: Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 406のA-E問題をRustで解いた際の解法をまとめました。

 A 問題
問題
https://atcoder.jp/contests/abc406/tasks/abc406_a
解説
この問題は、締め切り時刻と提出時刻を比較し、締め切り前に提出できたかを判定する問題です。
まず、締め切り時刻と提出時刻をそれぞれ分単位に変換します。その後、締め切り時刻 \geq 提出時刻のときは Yes 、そうでない場合は No を出力します。
コード

abc406a.rs
use proconio::input;

fn main() {
    ...]]></description><link>https://zenn.dev/nakst_hide/articles/f1dbff117f09d9</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/f1dbff117f09d9</guid><pubDate>Wed, 21 May 2025 13:10:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x4Q3EjlY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC406%253A%2520Rust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item></channel></rss>