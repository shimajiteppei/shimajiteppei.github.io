<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「CSS」のフィード]]></title><description><![CDATA[Zennのトピック「CSS」のRSSフィードです]]></description><link>https://zenn.dev/topics/css</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/98e1680a6c.png</url><title>Zennの「CSS」のフィード</title><link>https://zenn.dev/topics/css</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 17 Aug 2025 03:41:09 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/css/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[position: sticky が効かない？その理由は overflow にあり。— overflow: clip で解決するCSS設計]]></title><description><![CDATA[
 ✋ はじめに
「JSで実装していた追従ヘッダーやサイドナビ、今はCSSだけでできます」。
…のはずが、position: sticky が効かない— そんな経験、ありませんか？
犯人はたいてい overflow を持つ祖先要素。
本記事では sticky の仕組みと、overflow: hidden の“罠”、そして overflow: clip での安全設計までを、実例コードとチェックリストでまとめます。


 🧲 結論（先に）


sticky は **最も近い「スクロール機構を持つ祖先」**に相対して張り付く
祖先に overflow: hidden/auto/scroll が...]]></description><link>https://zenn.dev/jabo_sack/articles/8accd9f4cfdcb3</link><guid isPermaLink="true">https://zenn.dev/jabo_sack/articles/8accd9f4cfdcb3</guid><pubDate>Fri, 15 Aug 2025 02:12:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OROARAMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:position%253A%2520sticky%2520%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25E3%2581%259D%25E3%2581%25AE%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25AF%2520overflow%2520%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258A%25E3%2580%2582%25E2%2580%2594%2520overflow%253A%2520cli...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0xPbnFrMDRKVThqY19FYnZINFBkNks3akdYOGRMZTYwWUxDV3pXT3Fad3pqSlFmYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saku</dc:creator></item><item><title><![CDATA[2025年最新CSS！いまだに50%で中央寄せしてるの？モダンな中央寄せCSS4選]]></title><description><![CDATA[
 はじめに
昔は position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%) で中央寄せするのが定番でした。
しかし、このやり方は 冗長で副作用も多く、拡張性が低い という欠点があります。
CSSが進化した今、もっとシンプルで柔軟な中央寄せ方法が存在します。
今回は初心者から上級者まで使える モダンな中央寄せCSS 4選 を比較します。


 なぜ50%＋transformを卒業すべきか？


記述が長い：top / left / transform の3か所を組み合わせる必要

副作用：trans...]]></description><link>https://zenn.dev/jabo_sack/articles/a3957aaba0d137</link><guid isPermaLink="true">https://zenn.dev/jabo_sack/articles/a3957aaba0d137</guid><pubDate>Fri, 15 Aug 2025 01:48:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mebRNjEy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2025%25E5%25B9%25B4%25E6%259C%2580%25E6%2596%25B0CSS%25EF%25BC%2581%25E3%2581%2584%25E3%2581%25BE%25E3%2581%25A0%25E3%2581%25AB50%2525%25E3%2581%25A7%25E4%25B8%25AD%25E5%25A4%25AE%25E5%25AF%2584%25E3%2581%259B%25E3%2581%2597%25E3%2581%25A6%25E3%2582%258B%25E3%2581%25AE%25EF%25BC%259F%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%25E3%2581%25AA%25E4%25B8%25AD%25E5%25A4%25AE%25E5%25AF%2584%25E3%2581%259BCSS4%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0xPbnFrMDRKVThqY19FYnZINFBkNks3akdYOGRMZTYwWUxDV3pXT3Fad3pqSlFmYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saku</dc:creator></item><item><title><![CDATA[ゆらゆら水面イラストメーカー]]></title><description><![CDATA[https://ne0n.xyz/yurayura-maker/

錯視効果のある背景にイラストを合成できるツール]]></description><link>https://zenn.dev/210neon/books/f3e998e6000933</link><guid isPermaLink="true">https://zenn.dev/210neon/books/f3e998e6000933</guid><pubDate>Thu, 14 Aug 2025 19:08:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ppAyLR30--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iODM5NTBkNTc5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>NettoNeon</dc:creator></item><item><title><![CDATA[CSS で Tailwind CSS の bg-black/75 みたいなことをする]]></title><description><![CDATA[!
この記事で紹介する rgb() の相対値構文は Baseline 2024 であり、比較的新しいブラウザでのみ動作します。
https://caniuse.com/css-relative-colors

Tailwind CSS では bg-black/75 のように カラーパレット/透明度 という表現が可能です。
https://tailwindcss.com/docs/colors#adjusting-opacity
これと似たようなことを CSS でやろうとするとき、私の場合は 0, 0, 0 のような RGB の値部分を CSS カスタムプロパティとして定義して rgb()...]]></description><link>https://zenn.dev/lollipop_onl/articles/css-relative-color-syntax</link><guid isPermaLink="true">https://zenn.dev/lollipop_onl/articles/css-relative-color-syntax</guid><pubDate>Thu, 14 Aug 2025 13:32:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R3rGn7ip--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%2520%25E3%2581%25A7%2520Tailwind%2520CSS%2520%25E3%2581%25AE%2520bg-black%252F75%2520%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25F0%259D%2595%25A4%25F0%259D%2595%259A%25F0%259D%2595%259E%25F0%259D%2595%25A0%25F0%259D%2595%2594%25F0%259D%2595%2599%25F0%259D%2595%2596%25F0%259D%2595%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlOWU3MjdmZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>𝕤𝕚𝕞𝕠𝕔𝕙𝕖𝕖</dc:creator></item><item><title><![CDATA[Jetpack compose 1.9.0 でネオンサイン風の枠線を遊びで作った]]></title><description><![CDATA[
 Jetpack compose 1.9.0
Jetpack compose BoM 2025.08.00 (1.9.0) がリリースされました 🎉
https://android-developers.googleblog.com/2025/08/whats-new-in-jetpack-compose-august-25-release.html

Shadows
New Visibility modifiers
Rich styling in OutputTransformation
LazyLayout
New annotations and Lint checks

など様々...]]></description><link>https://zenn.dev/u_chan/articles/13237e68600d99</link><guid isPermaLink="true">https://zenn.dev/u_chan/articles/13237e68600d99</guid><pubDate>Thu, 14 Aug 2025 02:56:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Mkd0rtJp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520compose%25201.9.0%2520%25E3%2581%25A7%25E3%2583%258D%25E3%2582%25AA%25E3%2583%25B3%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%25B3%25E9%25A2%25A8%25E3%2581%25AE%25E6%259E%25A0%25E7%25B7%259A%25E3%2582%2592%25E9%2581%258A%25E3%2581%25B3%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYTk3ODY3ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーちゃん</dc:creator></item><item><title><![CDATA[Edge読み上げ機能でのルビ二重読み上げ問題：ルビだけ読ませる方法]]></title><description><![CDATA[
 課題
Microsoft Edge の読み上げ機能は、&lt;ruby&gt; タグを正しく解釈できず、ルビ（ふりがな）と本文が二重で読み上げられる。
小説投稿サイト（小説家になろう、カクヨム、ハーメルン等）では &lt;ruby&gt; タグが使われるため、読書体験に支障が出る。
「edge 読み上げ ruby」で検索すると、同様の問題について指摘されている。

Webのルビ仕様にはアクセシビリティを阻害している面がある。「日本DAISYコンソーシアム」が改善を求めてブラウザベンダ、WHATWG、W3Cらに公開書簡
読み仮名を表現する ruby タグのマークアップやスタイリングとア...]]></description><link>https://zenn.dev/lisosia/articles/c95540e0219bb7</link><guid isPermaLink="true">https://zenn.dev/lisosia/articles/c95540e0219bb7</guid><pubDate>Wed, 13 Aug 2025 16:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TJdgjD8N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Edge%25E8%25AA%25AD%25E3%2581%25BF%25E4%25B8%258A%25E3%2581%2592%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%2593%25E4%25BA%258C%25E9%2587%258D%25E8%25AA%25AD%25E3%2581%25BF%25E4%25B8%258A%25E3%2581%2592%25E5%2595%258F%25E9%25A1%258C%25EF%25BC%259A%25E3%2583%25AB%25E3%2583%2593%25E3%2581%25A0%25E3%2581%2591%25E8%25AA%25AD%25E3%2581%25BE%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lisosia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyYzBmNGI5NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lisosia</dc:creator></item><item><title><![CDATA[Figma Variables を CSS に自動変換したい]]></title><description><![CDATA[Figma で定義した Variables を、自動でCSS カスタムプロパティに変換するワークフローを検討してみました。

 はじめに
フロントエンドの作業をしていると、FigmaでデザイナーがVariables を定義し、それをエンジニアが手作業でCSS に落とし込むという作業が発生します。この手作業は同期ずれの原因になります。
本記事では、以下のワークフローを実現するサンプルプロジェクト (GitHub)を作成し、要点をまとめておきます。
Figma Variables → TokensBrücke → Terrazzo → CSS

 技術構成

 使用したツール



ツール
...]]></description><link>https://zenn.dev/togana/articles/366542bcc3692d</link><guid isPermaLink="true">https://zenn.dev/togana/articles/366542bcc3692d</guid><pubDate>Mon, 11 Aug 2025 09:35:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--50PqVFKJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Figma%2520Variables%2520%25E3%2582%2592%2520CSS%2520%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:togana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlNjI2NjIwY2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>togana</dc:creator></item><item><title><![CDATA[AIが正しくCSSを書くための設計ガイド — linear-gradientのhoverアニメーション編]]></title><description><![CDATA[
 AIが正しくCSSを書くための設計ガイド
こんにちは。今回は Cursor + LLM を使って、
「背景グラデーションのhoverアニメーションをCSSだけで滑らかに動かす」ための 設計ルール をまとめます。

 使用ツール

エディタ: Cursor
モデル: GPT-5
環境: Next.js


 まずはそのまま使ってみる
Cursorに投げた最初のプロンプト

グラデーションのボタンを作って、hoverで色が変わるように実装してください。

出力結果
.btn-gradient {
  background-image: linear-gradient(
    90deg...]]></description><link>https://zenn.dev/arais/articles/acc257f6ab9831</link><guid isPermaLink="true">https://zenn.dev/arais/articles/acc257f6ab9831</guid><pubDate>Sun, 10 Aug 2025 06:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4sfq6iJa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%258C%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%258FCSS%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2520%25E2%2580%2594%2520linear-gradient%25E3%2581%25AEhover%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:arais%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZjdhNjhkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>arais</dc:creator></item><item><title><![CDATA[40秒でdialog要素を理解しな]]></title><description><![CDATA[と言われても無理なのでdialog要素でできることをなんとなく理解できるようにデモをつくってみました。

 まずはデモ

興味ある方は以降の解説を読んでみてください。

 デモについて

 1) 非モーダル表示（show()）


使っているメソッド: HTMLDialogElement.show()


特徴: ダイアログを非モーダルで開きます。開いていても背景は操作可能（クリックやフォーカスが通る）。

仕組み: ダイアログが open 状態になっても背景は inert にならず、通常通り操作できる。



 2) モーダル表示（showModal() + 背景クリックで閉じる）

...]]></description><link>https://zenn.dev/kalubi/articles/eb009c635e2b45</link><guid isPermaLink="true">https://zenn.dev/kalubi/articles/eb009c635e2b45</guid><pubDate>Sun, 10 Aug 2025 02:06:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l56HOd4h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:40%25E7%25A7%2592%25E3%2581%25A7dialog%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%258A%25E3%2581%258B%25E3%2582%258B%25E3%2581%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YmMxZjZlZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>上かるび</dc:creator></item><item><title><![CDATA[CSSに関数が登場！Fluid Layoutを簡単に作成する関数を作った]]></title><description><![CDATA[2025年8月6日にリリースされたChrome 139から、CSSで関数が使えるようになりました。
New in Chrome 139では、次のような関数が紹介されています。
@function --negate(--value) {
    result: calc(var(--value) * -1);
}
CSSに関数機能が追加されたことで、CSSの記述がより柔軟になり、できることが格段に増えました。
そこで今回は、CSSの関数を使ってFluid Layoutを簡単に作成する関数を作ってみました。

 Fluid Layoutとは
Fluid Layoutとは、絶対単位（px、re...]]></description><link>https://zenn.dev/tozaburo/articles/css-fluid-layout</link><guid isPermaLink="true">https://zenn.dev/tozaburo/articles/css-fluid-layout</guid><pubDate>Sat, 09 Aug 2025 00:34:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L6OgqjS3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%258C%25E7%2599%25BB%25E5%25A0%25B4%25EF%25BC%2581Fluid%2520Layout%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tozaburo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlZWRmNGVkNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tozaburo</dc:creator></item><item><title><![CDATA[Radix UIとReact Aria ComponentsのContextによる違い]]></title><description><![CDATA[
 はじめに
以前記事で、ヘッドレスUIライブラリの比較について記事を書きました。比較する中でRadix UIとReact Aria Componentsをよく使いますが、時間が経ったらわからない点が増えたので、再度比較の記事を書きました。
https://zenn.dev/watasi/articles/ae79856d134a17
Radix UIとReact Aria ComponentsはどちらもReactのコンポーネントライブラリですが、React Contextの使い方に大きな違いがあります。

 Radix UI
Radix UIは、コンポーネントの状態管理にReact C...]]></description><link>https://zenn.dev/watasi/articles/7440fcc1ca3c73</link><guid isPermaLink="true">https://zenn.dev/watasi/articles/7440fcc1ca3c73</guid><pubDate>Thu, 07 Aug 2025 07:17:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v1uHU--g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Radix%2520UI%25E3%2581%25A8React%2520Aria%2520Components%25E3%2581%25AEContext%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%259F%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDg4ZlZoampiUk5DQU1Rc2JMOUZIcXgwb2FHZWEzTXVpZ0gyb18waUprcGJPOHNBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わたし</dc:creator></item><item><title><![CDATA[HTML/CSS/JavaScript で、スムーズにテキスト要素がスライドインしてくる仕掛けを作る (Blazor, React)]]></title><description><![CDATA[
 はじめに
前回、こんな記事を書きました。
https://zenn.dev/j_sakamoto/articles/a774e70143cf12
上記記事内にて、自作した Web アプリ (翻訳字幕システム) の "こだわりポイント" として以下のように言及しておりました。

しかしながら、せっかく (?) 自作でやりきるとした以上、一点だけこだわったところがありました。
それは逐次の翻訳結果の出現を、しっかりアニメーション表示するようにしたところです。
音声認識されて返ってきた翻訳結果テキストを、何も考えずに (?) 表示エリアにただ追加してしまうと、既存の前回までの翻訳結果テキス...]]></description><link>https://zenn.dev/j_sakamoto/articles/eb117b9fb0681c</link><guid isPermaLink="true">https://zenn.dev/j_sakamoto/articles/eb117b9fb0681c</guid><pubDate>Wed, 06 Aug 2025 13:43:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8r8tReJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%252FCSS%252FJavaScript%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2582%25B9%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258C%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B%25E4%25BB%2595%25E6%258E%259B%25E3%2581%2591%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2528Blazo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540jsakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVX243dnJ5ZFlLb2NxdUhSUkIxSGZ4NGpVekNsdGNmZ290R2hfNWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@jsakamoto</dc:creator></item><item><title><![CDATA[人気CSSフレームワーク Tailwind CSS とはなにか 使い方から メリット・デメリットまで]]></title><description><![CDATA[
 この記事の目的
Tailwind CSS とはなにか 使い方やメリット・デメリットをこれから学習する人に知ってほしい

 まず Tailwind CSS とは
Tailwind CSS は、すべての HTML ファイル、JavaScript コンポーネント、およびその他のテンプレートをスキャンしてクラス名を検索し、対応するスタイルを生成して、静的 CSS ファイルに書き込むことで機能します。 高速、柔軟、信頼性に優れ、ランタイムはゼロです。
https://tailwindcss.com/docs/installation/using-vite
※公式より引用
簡潔に言うと Tail...]]></description><link>https://zenn.dev/desiennz/articles/7e8616f514265c</link><guid isPermaLink="true">https://zenn.dev/desiennz/articles/7e8616f514265c</guid><pubDate>Wed, 06 Aug 2025 03:27:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aip_OMtl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BA%25BA%25E6%25B0%2597CSS%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2520Tailwind%2520CSS%2520%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%258B%2520%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%258B%25E3%2582%2589%2520%25E3%2583%25A1%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2583%25BB%25E3%2583%2587%25E3%2583%25A1%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%2596%25B0%25E5%258D%2592%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNjlmM2M2YzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmZWQzZDVmMGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>新卒エンジニア</dc:creator></item><item><title><![CDATA[Flexより簡単？Gridで実現する画像＋テキストの縦中央揃え]]></title><description><![CDATA[
 テキストと画像の中央揃え、まだFlexで頑張ってる？Gridにおまかせ！
「画像とその横にあるテキストを上下の中央に揃えたい」
Web制作をしていると、何度も遭遇するこのレイアウト。
Flexbox でももちろんできますが、Grid を使うともっとシンプルかつ正確に、意図通りに実装できる場面が多いんです。
この記事では、そんな「画像＋テキストの縦中央揃え」を、Gridを使ってスマートに実装する方法に加え、
スマホ対応（SPでの縦並び）や、最近よく見る**「リード文を…で省略する」テキストのレイアウト**についても、実例コードと共に紹介します。


 ✅ よくある「画像＋テキスト」横並...]]></description><link>https://zenn.dev/jabo_sack/articles/ad97759d89d2aa</link><guid isPermaLink="true">https://zenn.dev/jabo_sack/articles/ad97759d89d2aa</guid><pubDate>Tue, 05 Aug 2025 01:08:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mRHWivae--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flex%25E3%2582%2588%25E3%2582%258A%25E7%25B0%25A1%25E5%258D%2598%25EF%25BC%259FGrid%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25EF%25BC%258B%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E7%25B8%25A6%25E4%25B8%25AD%25E5%25A4%25AE%25E6%258F%2583%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0xPbnFrMDRKVThqY19FYnZINFBkNks3akdYOGRMZTYwWUxDV3pXT3Fad3pqSlFmYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saku</dc:creator></item><item><title><![CDATA[折りたたみアニメーションを作れるようになろう]]></title><description><![CDATA[CSSなんてほぼしらない状態でtailwindcssを使い続けてはや半年。アニメーションをつけたいときもframer-motionでなんとかなるし、正直フロントはNextだったら普通のCSSかけなくてもやっていけるでしょと甘い考えで生きてきました。
が、メールフォームを作成していたとき、送信するときに手紙を折って羽で飛んでいくアニメーションが作りたくなってClaudeに助けを求めたところ3Dアニメーションはframer-motionよりネイティブのCSSのほうが書きやすいで。と言われたのでClaudeに書いてもらったコードを見ながら学ぼうと思います。
初学者なので間違い等ありましたら優し...]]></description><link>https://zenn.dev/ad4cat/articles/7ed66ed17c9835</link><guid isPermaLink="true">https://zenn.dev/ad4cat/articles/7ed66ed17c9835</guid><pubDate>Mon, 04 Aug 2025 12:13:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s62bTZkN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2598%25E3%2582%258A%25E3%2581%259F%25E3%2581%259F%25E3%2581%25BF%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMTRhMWFjMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほで</dc:creator></item><item><title><![CDATA[Intersection Observer で画面外のCSSアニメーションを停止してパフォーマンスを改善する]]></title><description><![CDATA[CSSアニメーションのanimation-iteration-count: infiniteを指定して、無制限にアニメーションを繰り返している要素は画面外であってもアニメーションが実行され続けます。
画面外での不要なアニメーションを制御して無駄なCPU・GPUリソース消費を抑えましょう✅
特にCSSアニメーション多用しているWEBサイトでは効果的かもしれません🙆‍♂️

 Intersection Observer で画面外のCSSアニメーションを制御するコードと実装例


 Intersection Observer を使用して画面内・画面外の判定をする
要素が画面外の時の判定はInt...]]></description><link>https://zenn.dev/kurichan/articles/416e5292703516</link><guid isPermaLink="true">https://zenn.dev/kurichan/articles/416e5292703516</guid><pubDate>Mon, 04 Aug 2025 10:37:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eSJ6qzoj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Intersection%2520Observer%2520%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E5%25A4%2596%25E3%2581%25AECSS%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%2581%259C%25E6%25AD%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258A%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjN2IzM2RiNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くりちゃん</dc:creator></item><item><title><![CDATA[何を作ろうか、、]]></title><description><![CDATA[こんにちは。最近投稿ができていなくて申し訳ありませんでした。なんで投稿できていないかというと言い訳みたいになるんですが（ほんとに言い訳）何を作ろうか悩んでいてですね、、、、
それでこの記事を見てくれた方はコメントなどで＊＊＊をつくったら？とコメントしてくれると励みにもなるのでとてもうれしいです！（あんまり難しいのにはしないで）
]]></description><link>https://zenn.dev/ak0331/articles/0f6374c798cbbb</link><guid isPermaLink="true">https://zenn.dev/ak0331/articles/0f6374c798cbbb</guid><pubDate>Sat, 02 Aug 2025 02:33:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1P1NiWg_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%258B%25E3%2580%2581%25E3%2580%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ak0331%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NTdjZjk1YzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ak0331</dc:creator></item><item><title><![CDATA[svgを分解して一部のスタイルだけ変える]]></title><description><![CDATA[svg分解してスタイルつけたときの備忘録です

 きっかけ
クリックのたびにアイコン(svg)の一部の色を変更したいが
クリックのたびに表示するアイコンをすべて用意できない
(アイコンの色だけ違うsvgファイルはたくさん作りたくない....)

 環境
windows 11
vscode
chrome

 分解する
pathごとにまとまっていれば、分解が可能です
pathがM...Zが1つのpathです
!
M...Zが1つしかなかった場合、諦めてsvgを用意するか、svgをつくってみるかになります

&lt;svg xmlns="http://www.w3.org/2000/svg" ...]]></description><link>https://zenn.dev/tanaa/articles/0a22bf5e3c95a4</link><guid isPermaLink="true">https://zenn.dev/tanaa/articles/0a22bf5e3c95a4</guid><pubDate>Fri, 01 Aug 2025 09:00:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gMrorKFY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:svg%25E3%2582%2592%25E5%2588%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%2580%25E9%2583%25A8%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A0%25E3%2581%2591%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxNWJiOGQ5NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tana</dc:creator></item><item><title><![CDATA[脱・手動調整！フォントサイズも幅も clamp() で自動レスポンシブにしよう]]></title><description><![CDATA[
 clamp() / min() / max() の違いと使い分け方を徹底解説！
「文字サイズを調整したいけど、vwを使うと大きくなりすぎる…」
「メディアクエリで制御するのは手間。最小と最大をもっと簡単に指定したい！」
「画面幅に合わせて、もっと滑らかにサイズ調整したい」
そんなときに便利なのが clamp() をはじめとした、CSSの関数 clamp() / min() / max() です。
これらを正しく使えば、メディアクエリを減らして、より柔軟なレスポンシブデザインが実現できます。
この記事では、それぞれの違いと使い分け方、具体的な実装例をわかりやすく解説します！


 🧠 ...]]></description><link>https://zenn.dev/jabo_sack/articles/c6febb72961899</link><guid isPermaLink="true">https://zenn.dev/jabo_sack/articles/c6febb72961899</guid><pubDate>Fri, 01 Aug 2025 08:41:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q2uCPsqb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2584%25B1%25E3%2583%25BB%25E6%2589%258B%25E5%258B%2595%25E8%25AA%25BF%25E6%2595%25B4%25EF%25BC%2581%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2582%25E5%25B9%2585%25E3%2582%2582%2520clamp%2528%2529%2520%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%2596%25E3%2581%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0xPbnFrMDRKVThqY19FYnZINFBkNks3akdYOGRMZTYwWUxDV3pXT3Fad3pqSlFmYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saku</dc:creator></item><item><title><![CDATA[フォーカスインジケーターの実装ってどんなのが良いのだろうと悩み、眠れない夜を過ごした。]]></title><description><![CDATA[
 一言で言うと
フォーカスインジケーターは

コントラストを最優先
太さは2px以上がベスト
box-shadow・outline-offsetなどを使い二重になるようにする
状態ごとの差別化
:focus-visibleを使用する


 ある日事件は起きた
弊サービス、ランサーズのサイトを見ていて気づいてしまった。
ボタンのフォーカスが見づらすぎる。。



フォーカス前
フォーカス後









いやサイゼの間違い探しかよw
アウトラインの色とボタンの色がほとんど同じになっているみたい。
詳しく調べてみると、ボタンなどに使われている会社のメインカラー#0268ccと、Chro...]]></description><link>https://zenn.dev/lancers/articles/1b6bbf1046a303</link><guid isPermaLink="true">https://zenn.dev/lancers/articles/1b6bbf1046a303</guid><pubDate>Fri, 01 Aug 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BFBEKa5v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A0%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E6%2582%25A9%25E3%2581%25BF%25E3%2580%2581%25E7%259C%25A0%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E5%25A4%259C%25E3%2582%2592%25E9%2581%258E%25E3%2581%2594%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2595%25E3%2581%2596%25E3%2581%25AA%25E3%2581%25BF%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNWQwNTJiY2EuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25BA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlMzYyZWY0MzcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さざなみ</dc:creator></item></channel></rss>