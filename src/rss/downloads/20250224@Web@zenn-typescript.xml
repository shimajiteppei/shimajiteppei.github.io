<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 24 Feb 2025 06:09:54 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Deno DeployとDiscordenoを使って怠惰な自分とサヨナラするためのDiscord Botを作った]]></title><description><![CDATA[!
100%正しい情報であると保証はできません。
間違いや、抜けている部分、エラーなどがありましたら、教えていただけると幸いです。


 Discordeno

 Discordenoとは


Discordenoは、Denoランタイム上で動作するDiscord APIラッパーで、TypeScriptで書かれています。


Node.jsベースのDiscord.jsと異なる点で大きいものは、 コンパイル不要で、TypeScriptのまま実行することができるところです。


デメリットとして、一部のnpmライブラリをそのまま使用することができないこと、Node.js環境での実行を前提とした...]]></description><link>https://zenn.dev/loootus/articles/3613f148f0e2be</link><guid isPermaLink="true">https://zenn.dev/loootus/articles/3613f148f0e2be</guid><pubDate>Mon, 24 Feb 2025 03:19:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--umy8xu_l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%2520Deploy%25E3%2581%25A8Discordeno%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2580%25A0%25E6%2583%25B0%25E3%2581%25AA%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A8%25E3%2582%25B5%25E3%2583%25A8%25E3%2583%258A%25E3%2583%25A9%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEDiscord%2520Bot%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlNGMxODYyODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れんれん</dc:creator></item><item><title><![CDATA[Next.js+NextAuthでログイン済み時だけ参照できる機能を作る]]></title><description><![CDATA[前回はDBでセッションを保持しました。今回はアクセス毎にセッションを確認して、ログインしていたら利用できる機能を作ります。
NextAuthではサーバサイドでsessionを確認する手段がなさそうでした。
以下などはサーバーサイドで使えそうだったが現行バージョンだと廃止された？
https://next-auth.js.org/configuration/nextjs
どのユーザーからのアクセスか？特定する必要があり
Cookieでセッショントークンを授受しているようで使います。

 CookieからSessionToken文字列を取得
GETリクエストで受け取ったCookieの中からa...]]></description><link>https://zenn.dev/kaikusakari/articles/b7d7f7dc434d2e</link><guid isPermaLink="true">https://zenn.dev/kaikusakari/articles/b7d7f7dc434d2e</guid><pubDate>Sun, 23 Feb 2025 17:19:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p8FsZwBJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252BNextAuth%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%25B8%2588%25E3%2581%25BF%25E6%2599%2582%25E3%2581%25A0%25E3%2581%2591%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E8%258B%2585%2520%25E5%25BF%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNDVmZjk5MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草苅 快</dc:creator></item><item><title><![CDATA[Multi-Agent Orchestratorを使用したAI旅行プランナーの構築]]></title><description><![CDATA[インテリジェントなAIアプリケーションの構築には、多くの場合、複数の専門AIエージェントの連携が必要です。この記事では、Multi-Agent Orchestratorフレームワークを使用して高度な旅行プランニングシステムを作成する方法を紹介し、複数のAIエージェントが協力して詳細な旅行プランを作成する方法を解説します。

 Multi-Agent Orchestratorの概要
Multi-Agent Orchestratorは、複雑な会話における複数のAIエージェントを管理・調整するために設計されたオープンソースフレームワークです。主な特徴は以下の通りです：

複数のAIエージェント...]]></description><link>https://zenn.dev/sunwood_ai_labs/articles/ai-trip-planner-with-multi-agent-orchestrator</link><guid isPermaLink="true">https://zenn.dev/sunwood_ai_labs/articles/ai-trip-planner-with-multi-agent-orchestrator</guid><pubDate>Sun, 23 Feb 2025 15:24:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EkJv0E7W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Multi-Agent%2520Orchestrator%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FAI%25E6%2597%2585%25E8%25A1%258C%25E3%2583%2597%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdpSmVyNldLVlpKLUd4N054QWVuSFVtYXQ3MUhhd1NXaU5hRG5FTnZiMXZZdHBIaGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item><item><title><![CDATA[eslint-plugin-importで秩序のあるフロントエンド開発を実現する]]></title><description><![CDATA[
 導入
フロントエンド開発では、モジュール間の無秩序な依存関係が発生すると、コードの可読性やメンテナンス性が低下します。特に、チーム開発においてはプロジェクトの設計思想やディレクトリ戦略のコンテキストが遵守されず形骸化されてしまうと、リファクタリングやスケールが困難になります。
eslint-plugin-importを活用することで、予期しない依存関係を静的解析によって防ぐことができます。
https://github.com/import-js/eslint-plugin-import

 ディレクトリ戦略と依存関係の制限
今回はBulletproof-reactアーキテクチャのよ...]]></description><link>https://zenn.dev/hidenorioka/articles/62b7afaef78f32</link><guid isPermaLink="true">https://zenn.dev/hidenorioka/articles/62b7afaef78f32</guid><pubDate>Sun, 23 Feb 2025 14:21:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dUQbL2Id--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:eslint-plugin-import%25E3%2581%25A7%25E7%25A7%25A9%25E5%25BA%258F%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hidenorioka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliODMxMWNmMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hidenorioka</dc:creator></item><item><title><![CDATA[WhisperのAPIコストを格段に下げる方法]]></title><description><![CDATA[
 WhisperのAPIコストを格段に下げる方法 — Cloudflare Workers AI活用ガイド
Whisperはローカル環境で実行すれば費用はかかりませんが、GPUなどのハードウェアが必要なため、処理速度や運用コストの面で課題があります。そこで今回は、OpenAIの公式APIを利用した場合の $0.006 / minute (rounded to the nearest second) というコストに対し、Cloudflare Workers AIを利用することで $0.0005 per audio minute (1日あたり約4時間分の無料枠あり) という低コストで運用す...]]></description><link>https://zenn.dev/lami/articles/b16706ca0e66b1</link><guid isPermaLink="true">https://zenn.dev/lami/articles/b16706ca0e66b1</guid><pubDate>Sun, 23 Feb 2025 12:55:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aubvj0ap--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Whisper%25E3%2581%25AEAPI%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%25A0%25BC%25E6%25AE%25B5%25E3%2581%25AB%25E4%25B8%258B%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Lami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WVNLRmVwVzU2eXdpMlUxenZ4MU5ud1JQOWNFM1dIcGQtTjRFaWJYNXM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Lami</dc:creator></item><item><title><![CDATA[New Architectureを整理]]></title><description><![CDATA[
 はじめに
LT で React Native のことを話そうと思って勉強しており、せっかくなので Zenn にも残しておきます！以下のスクラップに勉強のメモ書きがあります。 (もう少し更新続けます！)
https://zenn.dev/link/comments/5a62539c2a3378
間違ってるところがあればスクラップかコメントからご指摘頂けるととても助かります 🙇
分かりづらいこと、分からないことがある場合も一生懸命調べて回答するのでコメントお願いします 🙇

 New Architecture 概要

React Native の基盤となるシステムが C++で書き直された...]]></description><link>https://zenn.dev/toki_dev/articles/0ead165c91968c</link><guid isPermaLink="true">https://zenn.dev/toki_dev/articles/0ead165c91968c</guid><pubDate>Sun, 23 Feb 2025 10:17:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cWJBh71b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:New%2520Architecture%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmszY2M3YkJuWTBrcDVvckFfS0pJUW5IMUMzT2JrYlB0TEpRYzFXLWlKUEZydmpnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toki</dc:creator></item><item><title><![CDATA[TypeScriptでthrowされたエラーにValibotで型をつける]]></title><description><![CDATA[TypeScriptには、かならずunknownな型が割り当てられる値があります。それはthrowされた値です。
try {
  doSomething();
} catch (error) {
  // ここではerrorはunknown型になる
}
JavaScriptでは Errorオブジェクトに限らずどのような値でもthrowすることができるので、catchで捉えた値には必然的に unknown 型が割り当てられます。
勿論、下のコードのようにinstanceofを使ってnarrowing(絞り込み)をすることはできるのですが、Errorに限らず細かくエラーハンドリングしたい時に...]]></description><link>https://zenn.dev/anatoo/articles/a708b00171f758</link><guid isPermaLink="true">https://zenn.dev/anatoo/articles/a708b00171f758</guid><pubDate>Sun, 23 Feb 2025 09:19:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wgeLyV64--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7throw%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25ABValibot%25E3%2581%25A7%25E5%259E%258B%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:anatoo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2SlMxT0IydDYtVXJEdi0wM1VCUkhZbWdDUFM2UGxpQ1JQVVI1PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>anatoo</dc:creator></item><item><title><![CDATA[GmailをTypeScriptとLINE Messaging APIを用いてLINEに自動転送してみた]]></title><description><![CDATA[タイトルの通り、GmailをLINE Messaging APIを用いてLINEに転送するGASアプリを、TypeScriptを用いて作ってみたので紹介する。
https://github.com/tsukuboshi/gas-gmail-to-line

 前提条件
今回はGAS開発にasideというツールを使用し、TypeScriptを用いて開発を行っている。
TypeScriptで開発する事で、型安全性を保ちながらバックエンド開発を進める事ができるためオススメしたい。
https://github.com/google/aside
また今回はLINEへの通知用APIとして、LINE...]]></description><link>https://zenn.dev/tsukuboshi/articles/gas-gmail-to-line</link><guid isPermaLink="true">https://zenn.dev/tsukuboshi/articles/gas-gmail-to-line</guid><pubDate>Sun, 23 Feb 2025 06:39:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6zxTkClm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gmail%25E3%2582%2592TypeScript%25E3%2581%25A8LINE%2520Messaging%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6LINE%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25BC%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYTViZjg0M2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つくぼし</dc:creator></item><item><title><![CDATA[vee-validateのバリテーションエラーをリアルタイムに表示する]]></title><description><![CDATA[vee-validate v4を使用している際に、Enterキーを押したりカーソルの選択を外さないと
バリテーションエラーが表示されなかったり、入力しても古いバリテーションエラーが表示された時の
対処法を書きます

ここで記載のない部分のコードがどのようになっているのかを知りたい場合は、
こちらの記事を見てください
https://zenn.dev/articles/4269b418e6516f/edit
対処法はTextfieldなどのコンポーネントで下記の記載を追加するだけです
&lt;script setup lang="ts"&gt;
import { configure } f...]]></description><link>https://zenn.dev/sayasurvey/articles/79c4dc0e3037ac</link><guid isPermaLink="true">https://zenn.dev/sayasurvey/articles/79c4dc0e3037ac</guid><pubDate>Sun, 23 Feb 2025 06:00:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jg4-ChpE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vee-validate%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sayasurvey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlZWjNSbWJhQXZFaU91cXJGMld3OTRGdlMzX2hJWGhPTFFwcHlHV1RTNGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sayasurvey</dc:creator></item><item><title><![CDATA[『Next.js + Hono で作る 最新技術記事共有プラットフォーム ～認証からデータ管理まで実践的Webアプリケーション開発～』]]></title><description><![CDATA[Next.js14とHonoを使用して技術記事共有プラートフォームを作成するハンズオン形式のチュートリアルです。各章ごとにコミットの履歴を貼っていますので、初心者の方でも安心して学習できると思います。興味があればぜひご覧ください。]]></description><link>https://zenn.dev/daidev/books/5b00c234f09a48</link><guid isPermaLink="true">https://zenn.dev/daidev/books/5b00c234f09a48</guid><pubDate>Sun, 23 Feb 2025 02:21:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U66h37qF--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mNzc1NjY2NTg1LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>dai</dc:creator></item><item><title><![CDATA[[入門] Next.js+Hono+Bunのモノレポ構成で型安全なWebアプリ開発をする]]></title><description><![CDATA[こんにちは、やせです。
普段はゆるく個人開発をしている学生です。

 はじめに
本記事では、Next.js+Hono+Bunを用いて、型安全にWebアプリ開発を行う方法を入門者向けに説明していきます。
また、本記事では以下の内容も扱います。ZodやDrizzleを用いて、データベースからフロントエンドまでを型安全に開発することができます。

Bun Workspacesを使用したモノレポ構成
HonoのRPC機能
Zodによる型安全なバリデーション
Supabase DB + Drizzle ORMによるDB操作・マイグレーション
TanStack Queryを使用したデータフェッチ
N...]]></description><link>https://zenn.dev/yasse/articles/2650d580ae8392</link><guid isPermaLink="true">https://zenn.dev/yasse/articles/2650d580ae8392</guid><pubDate>Sat, 22 Feb 2025 23:13:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HEpCXXfD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2585%25A5%25E9%2596%2580%255D%2520Next.js%252BHono%252BBun%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AAWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MGI0Mjk5NDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>やせ</dc:creator></item><item><title><![CDATA[SSG向け日本語対応の全文検索エンジンを作りました(1)]]></title><description><![CDATA[この文章では、どういう理由で、どうやって全文検索エンジンを作るに至ったかを適当に書き散らします。また、検索エンジンの構成のひとつについても説明します。タイトルのブツについては、ドキュメントをウェブサイトで公開しています。是非ご覧ください。なんとサイトは日本語未対応ですが...
https://staticseek.lulliecat.com/

 はじめに - 全文検索エンジンが欲しい！
みなさん、ウェブサイト運営していますか？ぼくは必要にかられてはじめました。最初はWordPressでしぶしぶ始めたのですが、インターネットの悪いおたくにそそのかれ、自分でいちからウェブサイトを作り直しま...]]></description><link>https://zenn.dev/lulliecat/articles/04b7aaa2a0fc19</link><guid isPermaLink="true">https://zenn.dev/lulliecat/articles/04b7aaa2a0fc19</guid><pubDate>Sat, 22 Feb 2025 16:55:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TALeEakd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSG%25E5%2590%2591%25E3%2581%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25281%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lulliecat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYmM0MzgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lulliecat</dc:creator></item><item><title><![CDATA[Next.js+NextAuthでGoogleのソーシャルログインを実現する]]></title><description><![CDATA[以前同じ内容で記事を書きましたがバージョンが進み仕組みも異なり再度試します。
NextAuthは5.0.0-beta.25を使います。
書いてることが公式のドキュメントでも微妙に異なるのでサンプルをもとに進めます。
https://github.com/nextauthjs/next-auth-example/blob/main/README.md
gitをクローンして手順に沿って進める。
Googleの認証はクラウドコンソールの認証情報からIDとSECRETを取得する。

.env.local
AUTH_SECRET="XXXXXX"
AUTH_GOOGLE_ID=XXXXXXXXX
...]]></description><link>https://zenn.dev/kaikusakari/articles/4c1590d463f9d1</link><guid isPermaLink="true">https://zenn.dev/kaikusakari/articles/4c1590d463f9d1</guid><pubDate>Sat, 22 Feb 2025 14:58:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZpGtxaN9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252BNextAuth%25E3%2581%25A7Google%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AB%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E8%258B%2585%2520%25E5%25BF%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNDVmZjk5MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草苅 快</dc:creator></item><item><title><![CDATA[ゆっくりNestJSチュートリアル]]></title><description><![CDATA[ChatGPTで生成したNestJSのチュートリアルです。誤りを含む可能性があります。]]></description><link>https://zenn.dev/hiromichinomata/books/c21b367354e0d8</link><guid isPermaLink="true">https://zenn.dev/hiromichinomata/books/c21b367354e0d8</guid><pubDate>Sat, 22 Feb 2025 12:47:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--58PRqTiS--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zYWEzMTcwYzdjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Hiromichi NOMATA</dc:creator></item><item><title><![CDATA[TypeScriptにおける型定義の大まかな全体像]]></title><description><![CDATA[
 1. 基本的な型定義

 1-1. type / interface

type Props = {
  title: string;
  disabled?: boolean;
};

// or
interface Props {
  title: string;
  disabled?: boolean;
}


type と interface はどちらもオブジェクトの構造（Props など）を定義する基本的な文法。

interfaceは extends などで拡張が容易という特徴があるが、typeにできることが増えてきた現状で、あえて使う必要性はなさそう（参考: inte...]]></description><link>https://zenn.dev/ka_projects/articles/9e84afd6ea9dd6</link><guid isPermaLink="true">https://zenn.dev/ka_projects/articles/9e84afd6ea9dd6</guid><pubDate>Sat, 22 Feb 2025 11:39:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b9fmJHpd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%25AE%25E5%25A4%25A7%25E3%2581%25BE%25E3%2581%258B%25E3%2581%25AA%25E5%2585%25A8%25E4%25BD%2593%25E5%2583%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:luck%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MzNhNDk3OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:KA%2520projects%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWZWX29pQVNoRWZKTVpVV1NuOVh2c1MyOU11b1pEU3dodEVfQkFNR0FWbjBPUkwxYjc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luck</dc:creator></item><item><title><![CDATA[JavaScriptのImport AttributesでJSONとCSSをimportする]]></title><description><![CDATA[
 はじめに
こんにちは、ハチミツです。
私はAstroとPages CMSを組み合わせて自身のブログを構築しています。Pages CMSではMarkdownやJSON、YAMLを扱えますが、ブログの設定をTypeScriptで書いている関係で設定をPages CMSで扱えませんでした。その解決策としてJSONを活用する中で発見したJavaScriptの新機能を共有します。

 対象読者

JavaScriptでJSONやCSSを扱う開発者
モダンなJavaScript機能に興味がある方


 Import Attributesの基本的な使い方

 JSONの場合
従来のコード:
con...]]></description><link>https://zenn.dev/hatimitu76/articles/js-inport-attributes</link><guid isPermaLink="true">https://zenn.dev/hatimitu76/articles/js-inport-attributes</guid><pubDate>Sat, 22 Feb 2025 11:25:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tp98CvmJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEImport%2520Attributes%25E3%2581%25A7JSON%25E3%2581%25A8CSS%25E3%2582%2592import%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%2581%25E3%2583%259F%25E3%2583%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4NmVhMzcwZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハチミツ</dc:creator></item><item><title><![CDATA[React × TypeScript × Viteでの認証管理！AuthContextでログイン状態を管理]]></title><description><![CDATA[
 はじめに

React + TypeScript + Vite で開発を進める中で、認証やルーティングの設計に悩んだので、この記事にまとめました。

AuthContext を使った認証の管理
React Router との組み合わせ方
コンポーネントの順番を意識した設計




 プロジェクト構成
AuthContext.tsxやルーティング関連のファイルを整理
 ├─ src
   ├─ components
   │ ├─ layout
   │   ├─ Layout.tsx  # 共通のレイアウト
   ├─ contexts
   │ ├─ AuthContext.tsx...]]></description><link>https://zenn.dev/toshi052312/articles/d2c5db261060bd</link><guid isPermaLink="true">https://zenn.dev/toshi052312/articles/d2c5db261060bd</guid><pubDate>Sat, 22 Feb 2025 11:13:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CGfSp1M2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25C3%2597%2520TypeScript%2520%25C3%2597%2520Vite%25E3%2581%25A7%25E3%2581%25AE%25E8%25AA%258D%25E8%25A8%25BC%25E7%25AE%25A1%25E7%2590%2586%25EF%25BC%2581AuthContext%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E7%258A%25B6%25E6%2585%258B%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyN2FlNzg3NGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toshi</dc:creator></item><item><title><![CDATA[Next.js x OpenSearch x Lambda(Python) で簡単な検索・蔵書アプリケーションを作ってみた]]></title><description><![CDATA[
 背景
今まで業務の中で検索機能の実装を担当した際、バックエンド側から取得したデータをフロントエンド側でフィルタリングして表示するようにしていました。
しかし、この実装だとデータ量が増加するにつれてパフォーマンスの低下が懸念されるのと、複雑な検索要件への対応が難しいかなと思ったので、何かいい方法はないかなーと探していたところ、AWSのマネージドサービスであるOpenSearchを見つけました。
ちょうどサーバーレスアーキテクチャについても勉強しようと思っていたので、いろいろ調べた結果、YoutubeでAWSのサーバレスアーキテクチャで実装した紹介例があったので、自分でもやってみようと思...]]></description><link>https://zenn.dev/toshipy/articles/cc6960d175a347</link><guid isPermaLink="true">https://zenn.dev/toshipy/articles/cc6960d175a347</guid><pubDate>Sat, 22 Feb 2025 10:50:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g0ICeEMq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520x%2520OpenSearch%2520x%2520Lambda%2528Python%2529%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%25BB%25E8%2594%25B5%25E6%259B%25B8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toshipy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMTk5NTE0NTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Toshipy</dc:creator></item><item><title><![CDATA[React Native (Expo)での画面遷移いろいろまとめ]]></title><description><![CDATA[
 はじめに
最近 Expo に入門しました！
この記事では Expo Router や React Navigation での画面遷移のいくつかを Gif 画像と共に紹介します！
!
IOS Simulator の画面録画機能を使って録画しております。
Gif 画像は IOS のみです。

!
Expo Router は
・Expo プロジェクト作成時にデフォルトで組み込まれているファイルベースのルーターです。
・React Navigation のラッパーであり、多くの概念が同じです。 参考
・細かい仕様を調べる時には「React Navigation」で検索した方が良い場合がありま...]]></description><link>https://zenn.dev/toki_dev/articles/92a08b7bc5758f</link><guid isPermaLink="true">https://zenn.dev/toki_dev/articles/92a08b7bc5758f</guid><pubDate>Sat, 22 Feb 2025 09:41:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---s2vfAop--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Native%2520%2528Expo%2529%25E3%2581%25A7%25E3%2581%25AE%25E7%2594%25BB%25E9%259D%25A2%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%2584%25E3%2582%258D%25E3%2581%2584%25E3%2582%258D%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmszY2M3YkJuWTBrcDVvckFfS0pJUW5IMUMzT2JrYlB0TEpRYzFXLWlKUEZydmpnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toki</dc:creator></item><item><title><![CDATA[Svelte5でsvelteflow（@xyflow/svlelte）を動かす]]></title><description><![CDATA[
 はじめに
svelteflowでは現状svelte4をターゲットにしているが、svelte5向けの開発が進められている。
https://github.com/xyflow/xyflow/pull/4878
Quickstartを少しいじってsvelte5で動かしてみる。


 検証

 検証環境

Windows11 23H2 22631.4751
Node.js v22.14.0, NPM v11.1.0
sv 0.6.21


 1. Svelte5向け環境構築
&gt; mkdir test
&gt; npx sv create .
Need to install the f...]]></description><link>https://zenn.dev/moker/articles/c7d4fdcb4daa3d</link><guid isPermaLink="true">https://zenn.dev/moker/articles/c7d4fdcb4daa3d</guid><pubDate>Sat, 22 Feb 2025 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qYFKqrBs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte5%25E3%2581%25A7svelteflow%25EF%25BC%2588%2540xyflow%252Fsvlelte%25EF%25BC%2589%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Moker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4MWZjYTNlNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Moker</dc:creator></item></channel></rss>