<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 17 Dec 2024 06:12:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[RustでDBアクセスをsqlxにしてみた]]></title><description><![CDATA[
 目的
ユニークビジョン株式会社 Advent Calendar 2024のシリーズ2、12/7の記事です。
DBはPostgreSQLを使っていて、それにアクセスするためにcrate deadpool-postgresを使っていました。
さらにこれだけではrawすぎたので、一覧や一件を返すためのwrapperを作って使ってました。
sqlxはこれらをまとめてやってくれたので、こちらに乗り換えました。

 説明

 sqlx
READMEの機能を翻訳してみます。

Native Rustなのでどこでもコンパイルできる
行をストリームで読み込める。非同期でデコードしてくれる(struct...]]></description><link>https://zenn.dev/aoyagikouhei/articles/2ab5674172e764</link><guid isPermaLink="true">https://zenn.dev/aoyagikouhei/articles/2ab5674172e764</guid><pubDate>Mon, 16 Dec 2024 23:05:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yUeMHOAW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7DB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2582%2592sqlx%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2592%25E6%259F%25B3%25E5%25BA%25B7%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDA3ZGRhNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>青柳康平</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 2: Red-Nosed Reports]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day2 の記事です。 Day1 はこちら。
https://zenn.dev/yasuharu519/articles/bb6f740564e282
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 2: Red-Nosed Reports
今回は以下のような数列が与えられたときに条件を満たすものかチェックを行い、条件を満たす数列がいくつあるかを求めるというもの。
7 6 4 2 1

 Part1
カウントする条件としては

数列が単調に増...]]></description><link>https://zenn.dev/yasuharu519/articles/7466cf0680b540</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/7466cf0680b540</guid><pubDate>Mon, 16 Dec 2024 15:39:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZNJdcBMa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%25202%253A%2520Red-Nosed%2520Reports%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[Rust: eguiを触ってみた]]></title><description><![CDATA[
 はじめに
つい最近触る機会があったのでRustでGUIが実装できるeguiの紹介をします。
https://github.com/emilk/egui

egui (pronounced "e-gooey") is a simple, fast, and highly portable immediate mode GUI library for Rust.


egui runs on the web, natively, and in your favorite game engine.


 eguiの目指すところ
egui公式のGoalsより

使いやすいGUIライブラリ
レ...]]></description><link>https://zenn.dev/tkk/articles/a0b420ab8d7b49</link><guid isPermaLink="true">https://zenn.dev/tkk/articles/a0b420ab8d7b49</guid><pubDate>Mon, 16 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3BiArj6f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%253A%2520egui%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0ODIxNTNiNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkk</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 1: Historian Hysteria]]></title><description><![CDATA[
 Advent of Code とは
Advent of Code では、 12 月の 1 日から 25 日まで毎日新しい問題が公開されます。
2015 年から毎年開催されていて、今年でもう 10 回目となるようです。記念すべきイヤーですね。
問題は毎日 2 つ公開され、一つ目の問題は比較的簡単な問題、二つ目の問題は基本的に同じ入力を使うものの、条件が変わり難易度が上がったものとなっています。そのため、別のアプローチを考える必要があります。
問題の解答としては、与えられた入力に対して、指示に従って作成した出力を提出すればよいものとなっています。そのため、言語の縛りや実行時間の縛りなども...]]></description><link>https://zenn.dev/yasuharu519/articles/bb6f740564e282</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/bb6f740564e282</guid><pubDate>Mon, 16 Dec 2024 14:35:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--goL9u7C0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%25201%253A%2520Historian%2520Hysteria%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[Wasmコンポーネントの活用：Spin v3.0によるWebアプリ開発]]></title><description><![CDATA[Rustで実装しているSpinアプリに、TypeScriptで実装したビジネスロジックを組み込みました。これはSpin v3.0から利用できるspin-depsプラグインを利用した結果です。この記事では、Wasmコンポーネントとして実装されたビジネスロジックを、同プラグインを利用してSpinアプリに組み込むための手順と、簡単な例について説明します。
TL;DR：


Spinはマイクロサービスを定義するためのフレームワークです

Spin v3.0よりWasmコンポーネントを組み込むためのプラグインspin depsが試験的に追加されました
このプラグインを使うことで、ビジネスロジックの...]]></description><link>https://zenn.dev/chikoski/articles/spin-wasm-component-integration</link><guid isPermaLink="true">https://zenn.dev/chikoski/articles/spin-wasm-component-integration</guid><pubDate>Mon, 16 Dec 2024 10:06:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9uXASOpJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wasm%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25EF%25BC%259ASpin%2520v3.0%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chikoski%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwYzk3YTk1NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chikoski</dc:creator></item><item><title><![CDATA[Rustでcsvバイナリデータを読み込んでsqliteにデータを挿入する]]></title><description><![CDATA[Rust polarsでcsvデータを読み込んで
sqliteに格納するコードの備忘録です。
use polars::prelude::*;
use rusqlite::{params, Connection, Result};
use std::fs::File;
use std::io::Cursor;

fn main() -&gt; Result&lt;()&gt; {
    let conn = Connection::open("test.db")?;

    conn.execute(
        "CREATE TABLE IF NOT EXISTS csv_da...]]></description><link>https://zenn.dev/miseuser/articles/8467fe810bbb74</link><guid isPermaLink="true">https://zenn.dev/miseuser/articles/8467fe810bbb74</guid><pubDate>Sun, 15 Dec 2024 23:48:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KeVVfnuH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7csv%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7sqlite%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:user%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDZXb1czOEUtNHpaS18yM1kwR2tGTnJBR3BNTEUzNjJPMGlPR0UyY19keG81WDhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>user</dc:creator></item><item><title><![CDATA[rust基本文法]]></title><description><![CDATA[後輩がRustできてて焦った。時代はRustなのか
自分用の殴り書き
モジュール系は今回除外

 変数宣言
rustは強い型推論があるらしいからあんまり気にしないでもいいみたい
でも書いたほうがいいきがするよ
// コメントアウト
let x = 5;         //標準で不変
let mut y = 5;     //mutを付けると可変

let a: i32 = 10;   //整数型32bit
let b: u32 = 20;   //整数型32bit (unsigned)

const PI: f32 = 3.141592; //constは型指定必須

 分岐
let ...]]></description><link>https://zenn.dev/mitsuijao/articles/ce1916cfeec537</link><guid isPermaLink="true">https://zenn.dev/mitsuijao/articles/ce1916cfeec537</guid><pubDate>Sun, 15 Dec 2024 19:23:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QkFzVmUG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:rust%25E5%259F%25BA%25E6%259C%25AC%25E6%2596%2587%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mitsuiJao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjc0NmZlNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitsuiJao</dc:creator></item><item><title><![CDATA[Rust×Tauriでアプリ開発するときにYewとstylistに触れてみた]]></title><description><![CDATA[この記事は Rust Advent Calender 2024 の 16 日目の記事です。
普段はタコスとちいかわとホラー映画を愛でている WebアプリやWindowsデスクトップアプリ開発、画像解析をしているエンジニアです！久々にZenn記事書きますm(__)m

 要約

Tauriを利用したデスクトップアプリのフロントエンド開発にYewフレームワークを選んだよ
スタイル管理には、コード内で安全にCSSを記述できるstylistクレートを活用するよ
コード可読性のために、style.rsを作成してスタイル管理を効率化したよ


 Tauriとは？
https://tauri.app/...]]></description><link>https://zenn.dev/shinue/articles/4fa72c61dd235b</link><guid isPermaLink="true">https://zenn.dev/shinue/articles/4fa72c61dd235b</guid><pubDate>Sun, 15 Dec 2024 15:22:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eUqJ8hzG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25C3%2597Tauri%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25ABYew%25E3%2581%25A8stylist%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin-ue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwOWM3MGQwODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shin-ue</dc:creator></item><item><title><![CDATA[奥深いstr::to_lowercaseの世界]]></title><description><![CDATA[この記事はとあるサークルのOB/OGが行っているN代アドベントカレンダー2024の16日目です。

 はじめに
突然ですが、以下の2つの関数、どちらの方が実行に時間がかかるでしょうか？
理由も含めて答えられますか？
コードブロックのすぐ下から解答・解説が始まるのでスクロールに気をつけて考えてみてください。
const LOREM1: &amp;str = r#"  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sit amet leo libero. Morbi tortor lorem, porta at ...]]></description><link>https://zenn.dev/taro137/articles/23b526df4cb7fa</link><guid isPermaLink="true">https://zenn.dev/taro137/articles/23b526df4cb7fa</guid><pubDate>Sun, 15 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i45WVY4A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A5%25A5%25E6%25B7%25B1%25E3%2581%2584str%253A%253Ato_lowercase%25E3%2581%25AE%25E4%25B8%2596%25E7%2595%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlOGE5ZGM1NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taro</dc:creator></item><item><title><![CDATA[【Rust】axum + shakuでDIコンテナを状態管理する際のCloneトレイト問題とArcによる解決]]></title><description><![CDATA[
 問題
axumでshakuのモジュールをStateとして使用する際、以下のようなエラーに遭遇することがある
the trait bound `AppModule: Clone` is not satisfied
the trait `Clone` is not implemented for `AppModule`

 原因
この問題は以下の2つの要因から発生する：

axumのRouterは状態（State）にCloneトレイトの実装を要求する
shakuのmodule!マクロで生成されたモジュールには直接#[derive(Clone)]を付けることができない


 解決方法
解決...]]></description><link>https://zenn.dev/omyu_t/articles/e57efaaea9685b</link><guid isPermaLink="true">https://zenn.dev/omyu_t/articles/e57efaaea9685b</guid><pubDate>Sun, 15 Dec 2024 13:37:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SBmwJrU9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rust%25E3%2580%2591axum%2520%252B%2520shaku%25E3%2581%25A7DI%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AEClone%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8Arc%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:heigen03%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1NjkxOWU5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>heigen03</dc:creator></item><item><title><![CDATA[Rust で仮想言語のインタプリタを作る (その２)]]></title><description><![CDATA[
 概要
https://zenn.dev/kaito_73519/articles/3dce56712cc430
前回独自定義した BNF を下にインタプリタを作成した.
独自に作ったため今後機能を追加行こうとすると if 文や while 文の取扱いに困ったので,
既にある言語をもとに開発をすすめて Rust を使ってコードを書くことにできるだけ専念できるようする方針に変えた.
c 言語を元にして機能を削って実装を行った.
下のサイトを参考にしている.
https://gist.githubusercontent.com/arslancharyev31/c48d18d8f917ffe...]]></description><link>https://zenn.dev/kaito_73519/articles/be7d5a6993861b</link><guid isPermaLink="true">https://zenn.dev/kaito_73519/articles/be7d5a6993861b</guid><pubDate>Sun, 15 Dec 2024 13:01:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KCtMi5hX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2528%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2YzU4NDk4MjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaito</dc:creator></item><item><title><![CDATA[ABC384:Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 384のA~E問題をRustで解いた際の解法をまとめました。

 A問題

問題

https://atcoder.jp/contests/abc384/tasks/abc384_a

解説

文字列Sを順番に見ていき、指定された文字c1でなければ、c2に置き換えます。

コード

use proconio::{input, marker::Chars};
use itertools::Itertools;

fn main() {
    input! {
        n: usize, c1: char, c2: char,
  ...]]></description><link>https://zenn.dev/nakst_hide/articles/a0762b46a9132d</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/a0762b46a9132d</guid><pubDate>Sun, 15 Dec 2024 12:06:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w_NlZ4Bu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC384%253ARust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[RustとTauri 2.0 をさわってみた Part.2 ~Android/iOSでサンプルアプリを起動する~]]></title><description><![CDATA[RustとTauriに触ってみる記事のPart2です。
前回の記事ではRustとTauriの環境構築を実施し、初期プロジェクトを開発サーバーで起動するところまで確認しました。今回はモバイルアプリとしてAndroid/iOSそれぞれでTauriを起動してみます。

 サンプルアプリをAndroid/iOSで起動する

 前提
Android/iOSそれぞれで事前準備が必要です。下記のページを参考に、足りていないものはインストールして用意しましょう。
Tauri 2.0 | Configure for Mobile Targets

 Android編
実行環境さえ揃っていれば2つのコマンド...]]></description><link>https://zenn.dev/acntechjp/articles/2ec6ea74b044e3</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/2ec6ea74b044e3</guid><pubDate>Sun, 15 Dec 2024 11:06:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zgDsMKmQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Tauri%25202.0%2520%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520Part.2%2520%7EAndroid%252FiOS%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Wataru%2520Matsuyama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0dMM2g1UUZtNXhJSWJ5cm1qSTJxcXd0U0Y4a0ZCNGt5ZEo5b0M9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Matsuyama</dc:creator></item><item><title><![CDATA[Rc<RefCell<&'a mut [u8]>> in Solana]]></title><description><![CDATA[この記事はSolana Advent Calendar2024 15日目の記事です。

 はじめに
Solanaブロックチェーン上で動作するSolanaのプログラム（スマートコントラクト）は、eBPF（Extended Berkeley Packet Filter）上で実行されます。SolanaプログラムはC言語風のFFIインターフェースを介して、Solana Runtimeからアカウント情報や実行に必要なデータを受け取ります。この低レベルな設計により高いパフォーマンスが得られる一方で、Rustに慣れたエンジニアでも戸惑います。
その一つがAccountInfo構造体が持つ非常に複雑な型...]]></description><link>https://zenn.dev/kinzal/articles/da6ee3fa5a5839</link><guid isPermaLink="true">https://zenn.dev/kinzal/articles/da6ee3fa5a5839</guid><pubDate>Sun, 15 Dec 2024 09:21:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--duoQ7kxr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rc%253CRefCell%253C%2526%2527a%2520mut%2520%255Bu8%255D%253E%253E%2520in%2520Solana%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k</dc:creator></item><item><title><![CDATA[プログラミングRust 7章を参考に複数種類のエラーをハンドリングする]]></title><description><![CDATA[この記事は Rust Advent Calendar 2024 の 9 日目として書いています。
今日見たら空いていたのでせっかくなら入れるかと思っていれています。
https://qiita.com/advent-calendar/2024/rust
オライリー・ジャパンのプログラミング Rust の 7 章における複数種類のエラー対応の話を読んでいて、複数種類のエラーをハンドリングする際に昔躓いた気がするのを思い出したので、自分なりの備忘録として残そうと思いました。
Rust では、エラーが起こり得る処理を続けて書く際、 ? を利用して書くことでエラーが起きた時点で即時リターンしてく...]]></description><link>https://zenn.dev/ara_ta3/articles/rust-handle-multiple-errors</link><guid isPermaLink="true">https://zenn.dev/ara_ta3/articles/rust-handle-multiple-errors</guid><pubDate>Sun, 15 Dec 2024 08:03:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ShWPTuRV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0Rust%25207%25E7%25AB%25A0%25E3%2582%2592%25E5%258F%2582%25E8%2580%2583%25E3%2581%25AB%25E8%25A4%2587%25E6%2595%25B0%25E7%25A8%25AE%25E9%25A1%259E%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ara_ta3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMmNmMDMwYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ara_ta3</dc:creator></item><item><title><![CDATA[Rustで使う！Solanaクライアントフレームワーク]]></title><description><![CDATA[!
本稿は「Solana Advent Calendar 2024」13日目の記事です。


 1. はじめに
こんにちは。magitoと申します。
https://twitter.com/regolith1223
筆者は普段、ブロックチェーンドメインにてbot[1]を開発・運用しています。
今年は主にSolana DeFiを戦場としていました。
これまでの活動概要については以下の記事にまとめていますので、もし興味があればご一読ください。
https://note.com/magimagi1223/n/ncc28d3f049f6
https://note.com/magimagi1223...]]></description><link>https://zenn.dev/magito/articles/7cff87d34cfdf4</link><guid isPermaLink="true">https://zenn.dev/magito/articles/7cff87d34cfdf4</guid><pubDate>Sun, 15 Dec 2024 06:13:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vzl8TGj0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%2581Solana%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:magito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViODYxMDFmNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>magito</dc:creator></item><item><title><![CDATA[Rust製OSS Biomeにコントリビュートした話]]></title><description><![CDATA[今年一番のチャレンジを書くイベントがZennで開催されていると聞いて、ちょっと筆を取ってみました。
Rust製 Linter/FormatterのBiomeに三つのルールをコミットしたのが今年だったので、やってみて良かったことについて記事に書こうと思いました。
!
ちなみに、なぜBiomeにコントリビュートしようと思ったのかについては、noteに書いているので、ここでは動機については触れません。動機については、こちらをご覧ください。

https://note.com/ebaryo43/n/nc3b75af818a4

 Biomeにコミットして良かったこと
Biomeのコントリビュート...]]></description><link>https://zenn.dev/hajimari/articles/cd2d66e81eb254</link><guid isPermaLink="true">https://zenn.dev/hajimari/articles/cd2d66e81eb254</guid><pubDate>Sat, 14 Dec 2024 12:21:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rko40Ow4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A3%25BDOSS%2520Biome%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Eva%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZTUwZjk1YzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Hajimari%2520Tech%2520Media%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMGI5MDBlYjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Eva</dc:creator></item><item><title><![CDATA[RustとTauri 2.0 をさわってみた Part.1 ~環境構築＆サンプルアプリを起動する~]]></title><description><![CDATA[最近、Rustに関するトピックが日に日に増加している印象です。
Rustが気になって調べてみると「パフォーマンス」・「信頼性」・「生産性」と開発者が欲するパワーワード三銃士が並んでおり、それからずっと気になっているプログラミング言語でした。
しかし、気になり始めた当初はCやC++の代替といったイメージが強く、手を動かすとなる高いハードルを感じていました。
腰が重くなっているときに目にしたワードが「Tauri」です。こちらも既にトレンドだと思いますが、Rustを利用したクロスプラットフォーム対応のデスクトップ/モバイルアプリケーション開発用のフレームワークです。
RustとTauriのどち...]]></description><link>https://zenn.dev/acntechjp/articles/d825bf41abfc8e</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/d825bf41abfc8e</guid><pubDate>Sat, 14 Dec 2024 10:10:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GgDKkUiT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Tauri%25202.0%2520%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520Part.1%2520%7E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2586%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Wataru%2520Matsuyama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M0dMM2g1UUZtNXhJSWJ5cm1qSTJxcXd0U0Y4a0ZCNGt5ZEo5b0M9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Matsuyama</dc:creator></item><item><title><![CDATA[RustでビルドしたWASMをNode.jsで扱う方法]]></title><description><![CDATA[
 もちべ～しょん
最近typescriptを用いてNode.jsでぼちぼち遊んでるんだけど、そいやWASMでビルドしたRustのライブラリ読み込めないかなというのが元々のとっかかりだった。加えてECMAScript modulesとしてパッケージングする方法が出てこなかった。そんな中、ECMAScript modulesとしてパッケージの作成と利用に成功したこともあってとりあえず現時点での知見をまとめとこうかなぁって。

 利用ライブラリとか

OS　Windows11
Node.js　Ver 23.4.0
tsx　4.19.2
typescript　5.7.2
nightly-x86...]]></description><link>https://zenn.dev/tokeiya3/articles/03eeb46c5a1494</link><guid isPermaLink="true">https://zenn.dev/tokeiya3/articles/03eeb46c5a1494</guid><pubDate>Sat, 14 Dec 2024 09:25:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fH23WhEl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%259FWASM%25E3%2582%2592Node.js%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2599%2582%25E8%25A8%2588%25E5%25B1%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hsb19HZWI4b2lub3N2UWZscXdOVjIzaGREYklrd05QdVZQWlZiMkE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>時計屋</dc:creator></item><item><title><![CDATA[Rust 製数理最適化ソルバー clarabel の使い方]]></title><description><![CDATA[
 clarabel とは
https://docs.rs/clarabel/latest/clarabel/
https://github.com/oxfordcontrol/Clarabel.rs
Apache License 2.0 のもと公開されている， Rust 🦀 で書かれた最適化ソルバー．
次の形の最適化問題を扱える：

\begin{align*}
\min \quad
&amp; \frac{1}{2} \boldsymbol{x}^{\top} Q \boldsymbol{x}
+ \boldsymbol{q}^{\top} \boldsymbol{x} \\
\te...]]></description><link>https://zenn.dev/__leopardus__/articles/7002ba6f6d8006</link><guid isPermaLink="true">https://zenn.dev/__leopardus__/articles/7002ba6f6d8006</guid><pubDate>Sat, 14 Dec 2024 08:47:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6j9aN7H7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E8%25A3%25BD%25E6%2595%25B0%25E7%2590%2586%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2582%25BD%25E3%2583%25AB%25E3%2583%2590%25E3%2583%25BC%2520clarabel%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rmitsuboshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyMTJlZDVhYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rmitsuboshi</dc:creator></item></channel></rss>