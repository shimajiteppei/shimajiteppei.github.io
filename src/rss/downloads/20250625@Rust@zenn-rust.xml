<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 25 Jun 2025 10:54:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Tauri】フロントからRustを実行する invoke API に触れる]]></title><description><![CDATA[
 はじめに
Tauri で開発を行っていても、通常のWeb開発の範囲での機能にとどめる場合は、Rust のコードに触れる機会はほとんどありません。しかし、OS の機能を直接利用するような場面では、Rust 側での実装が必要になります。本記事では、フロントエンドから直接 Rust の処理を呼び出す方法について解説します。

 概要
Tauri には、フロントエンドから Rust コードを呼び出すための Invoke API が用意されています。本記事では、この API の実装手順を解説します。
詳細は公式ドキュメントをご覧ください。
https://v2.tauri.app/ja/dev...]]></description><link>https://zenn.dev/gemcook/articles/6b0a87542cd3a0</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/6b0a87542cd3a0</guid><pubDate>Tue, 24 Jun 2025 03:19:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c2M2L4Yd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Tauri%25E3%2580%2591%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589Rust%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2520invoke%2520API%2520%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kantarou%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkzYTU2MDY5MDAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kantarou</dc:creator></item><item><title><![CDATA[【2024年版】Python首位・TypeScript急伸・Rust台頭｜人気プログラミング言語ランキング解説]]></title><description><![CDATA[
 プログラミング言語の人気ランキングならIEEE Spectrum
プログラミングを志したことのある人なら誰しも一度は考えたことがあるはずです。星の数ほどのプログラミング言語のうち、人気のある言語はどれなのか？
そんな方にぜひおすすめなのが、米国のIEEE Spectrum誌が毎年実施しているプログラミング言語人気ランキング。
現時点の最新版は2024年8月に公開された「The Top Programming Languages 2024」です。

 「IEEE Spectrum」はどんな雑誌？
IEEEは、1963年に誕生した、電気・電子・情報・通信関連の工学分野全般を対象とする世界...]]></description><link>https://zenn.dev/jouhoukikai/articles/55769c4ee255fb</link><guid isPermaLink="true">https://zenn.dev/jouhoukikai/articles/55769c4ee255fb</guid><pubDate>Tue, 24 Jun 2025 02:58:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6cuHZaWk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E7%2589%2588%25E3%2580%2591Python%25E9%25A6%2596%25E4%25BD%258D%25E3%2583%25BBTypeScript%25E6%2580%25A5%25E4%25BC%25B8%25E3%2583%25BBRust%25E5%258F%25B0%25E9%25A0%25AD%25EF%25BD%259C%25E4%25BA%25BA%25E6%25B0%2597%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E6%25A9%259F%25E6%25A2%25B0%25E7%25A0%2594%25E7%25A9%25B6%25E6%2589%2580%25EF%25BC%2588%25E6%25A3%25AE%25E5%25B2%25A1%25E5%2589%259B%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjY2FjZjVhMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>情報機械研究所（森岡剛）</dc:creator></item><item><title><![CDATA[SQLに立ち返って学ぶ、本当に効率的なDB設計]]></title><description><![CDATA[
 記事の概要
対象読者: Web開発経験者（ORM中心の開発経験あり）
記事の価値: SQLを直接書くことで見えてくる、真のパフォーマンス最適化
技術スタック: Rust + SQLx + TiDB（しかし言語非依存の内容）


 📝 記事構成案

 1. 導入：ORMから生SQLへの転換点

 なぜORMからSQLに立ち返る必要があるのか
Web開発を始めたとき、多くの人がそうであるように、僕もPrismaやTypeORMといったORMに頼り切っていました。
「SQLなんて古い技術でしょ？」
「ORMがあれば型安全だし、SQLインジェクションの心配もない」
そんな風に思っていた僕が、...]]></description><link>https://zenn.dev/kazuma0606/articles/d63bcd108d0791</link><guid isPermaLink="true">https://zenn.dev/kazuma0606/articles/d63bcd108d0791</guid><pubDate>Tue, 24 Jun 2025 00:26:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GrclpjTA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SQL%25E3%2581%25AB%25E7%25AB%258B%25E3%2581%25A1%25E8%25BF%2594%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%25AB%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AADB%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25BA%25E3%2583%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwMWM1OTYyYmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カズマ</dc:creator></item><item><title><![CDATA[Rust開発始めてみました！ ～なぜRustで開発？～]]></title><description><![CDATA[
 はじめに
前回、自宅開発環境構築について書きました！
そこで少し話しましたがDynabook RX73をRust開発環境に選びました！
https://zenn.dev/maromaron88/articles/ac54c9e32ab8cd
家に眠っていたスペックよわよわノートPCにXubuntuを入れ込めば、
よわよわでも使う用途が出てくるんじゃないか？という考えのもとGemini先生に相談したところ。。
そしたら、Windows10で動かすよりもリソース圧迫しないし良いと思う！と
めちゃめちゃ肯定的な意見をもらったので、すぐにXubuntuインストールしました！
安易な気持ちでm...]]></description><link>https://zenn.dev/maromaron88/articles/bbe837e0e8b291</link><guid isPermaLink="true">https://zenn.dev/maromaron88/articles/bbe837e0e8b291</guid><pubDate>Mon, 23 Jun 2025 02:18:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--awVwDqLT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E9%2596%258B%25E7%2599%25BA%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2520%25EF%25BD%259E%25E3%2581%25AA%25E3%2581%259CRust%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%259F%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maromaron88%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZGVjNDJlYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maromaron88</dc:creator></item><item><title><![CDATA[Tour of Rust をやってみた]]></title><description><![CDATA[ひょんな事からRustを書いてみようとなったので
Tour of Rustをチュートリアルとしてやってみて自分が振り返るようにまとめてみました]]></description><link>https://zenn.dev/okn1234/books/6e41a2526c6d22</link><guid isPermaLink="true">https://zenn.dev/okn1234/books/6e41a2526c6d22</guid><pubDate>Sun, 22 Jun 2025 11:51:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QScFtjFI--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yYWM4NmFmODcxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>okn</dc:creator></item><item><title><![CDATA[ABC411: Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 411のA-D問題をRustで解いた際の解法をまとめました。

 A 問題
問題
https://atcoder.jp/contests/abc411/tasks/abc411_a
解説
入力で与えられた文字列 P の長さが L 以上かどうかを判定する問題です。
文字列 P の長さを len 関数で取得し、その値が L 以上であれば Yes を出力し、そうでなければ No を出力します。
コード

abc411a.rs
use proconio::{input, marker::Chars};
fn main() {
    // 入力
...]]></description><link>https://zenn.dev/nakst_hide/articles/e862a4bff0b43c</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/e862a4bff0b43c</guid><pubDate>Sun, 22 Jun 2025 09:14:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4FlRAuHY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC411%253A%2520Rust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[法務局管轄マップ開発ドキュメント]]></title><description><![CDATA[法務局管轄マップをVibe Codingで開発する際に用いたドキュメントです。

記事はこちら

https://note.com/jolly_lilac46/n/nba60bb53352d

本当に使ったまま公開しているので、最後に変更した部分等反映されていない情報等があります。応援代のようなものだと思ってご購入ください。

反映を忘れている情報が多々あり、このままAIにVibe Codingさせても詰まる箇所があります。現時点で発見しているものとしては、以下の点があります。

- abr-geocoderが大量にCSVをダウンロードし組み立てる大量の.sqliteの対処法が抜けている。このまま実行するとおそらくSQLite組立てが長すぎてタイムアウトになります。
- 運用と保守は全部嘘です。見返してびっくりした。何もしてないこれ。

]]></description><link>https://zenn.dev/parmenion/books/c5e1a311372a5e</link><guid isPermaLink="true">https://zenn.dev/parmenion/books/c5e1a311372a5e</guid><pubDate>Sun, 22 Jun 2025 05:51:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N9dQS-Qp--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84Yzc3Y2I0Mzc1LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>パルメニオン</dc:creator></item><item><title><![CDATA[自宅開発環境構築 ～理想の開発環境紹介～]]></title><description><![CDATA[
 はじめに
今のところ【はじめに】で書き始めてますが、、他に良い始め方あるんですかね。。。
そんなことはさておき、、
今回は自宅開発環境構築についてです！

 なぜ自宅に開発環境を構築しようと思ったのか
自宅開発環境構築を進めたいと思ったきっかけは前に書いた記事で紹介した
AWS SAAやCKAの勉強を進めていくうちに自分の能力が低いことを改めて自覚したためです！
特にKubernetesなどコンテナ環境について、今まで参画してきた案件でKubernetes,OpenShiftの
構築案件に携わってきた経験がありますが、運用経験はありませんでした。
また、"構築"といっても本当に環境構...]]></description><link>https://zenn.dev/maromaron88/articles/ac54c9e32ab8cd</link><guid isPermaLink="true">https://zenn.dev/maromaron88/articles/ac54c9e32ab8cd</guid><pubDate>Sat, 21 Jun 2025 07:52:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5T5fTqOZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%25AE%2585%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2520%25EF%25BD%259E%25E7%2590%2586%25E6%2583%25B3%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maromaron88%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZGVjNDJlYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maromaron88</dc:creator></item><item><title><![CDATA[similarity-ts でAIと人間が書き散らした重複コードを見つける]]></title><description><![CDATA[AI に TypeScript を書かせていると、 _enhanced だとか _fixed だとか、似たようなファイルが増え続けます。
それらを検知するツールを作りました。
https://github.com/mizchi/similarity-ts
similarity-ts は AST ベースの構造比較で意味的に似ている関数同士を検出します。現時点では、まず関数(+アロー関数)の比較をターゲットにしています。
AST の効率的な重複チェックということで、流石に TS ではなく Rust で書きました。 cargo でインストールできます：
# GitHubから直接インストール
c...]]></description><link>https://zenn.dev/mizchi/articles/introduce-ts-similarity</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/introduce-ts-similarity</guid><pubDate>Thu, 19 Jun 2025 05:47:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MCD0Y4nH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:similarity-ts%2520%25E3%2581%25A7AI%25E3%2581%25A8%25E4%25BA%25BA%25E9%2596%2593%25E3%2581%258C%25E6%259B%25B8%25E3%2581%258D%25E6%2595%25A3%25E3%2582%2589%25E3%2581%2597%25E3%2581%259F%25E9%2587%258D%25E8%25A4%2587%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[セキュリティ装置がいる環境で開発ツールが壊れる問題集（Node / Rust）]]></title><description><![CDATA[
 Claude Code(Node)
Claude Code が以下のエラーで起動できなかったので対応
&gt; このレポジトリがなにか教えて
  ⎿  API Error (Connection error.) · Retrying in 1 seconds… (attempt 1/10)
    ⎿  TypeError (fetch failed)
  ⎿  API Error (Connection error.) · Retrying in 1 seconds… (attempt 2/10)
    ⎿  TypeError (fetch failed)
  ⎿  API E...]]></description><link>https://zenn.dev/tomesq/articles/e0681d260b1632</link><guid isPermaLink="true">https://zenn.dev/tomesq/articles/e0681d260b1632</guid><pubDate>Thu, 19 Jun 2025 01:21:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Jx8sCC6D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E8%25A3%2585%25E7%25BD%25AE%25E3%2581%258C%25E3%2581%2584%25E3%2582%258B%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E5%25A3%258A%25E3%2582%258C%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E9%259B%2586%25EF%25BC%2588Node%2520%252F%2520Rust%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomesq%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YWMyZWYxOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomesq</dc:creator></item><item><title><![CDATA[Rust イテレータ関連チートシート]]></title><description><![CDATA[
 はじめに
こんにちは、ファスト株式会社のyutakです！
今回は、Rustでよく使うイテレータの操作で調べながら使うことが多々ありましたので、
チートシート的な意味でまとめました。

 対象読者

Rustの基本的な文法を理解している人
イテレータの使い方を学びたい人
よく使うメソッドを手軽に確認したい人


 1. イテレータの作成方法

 iter() - 借用イテレータ
要素を借用して処理します。元のデータは変更されません。
let numbers = vec![1, 2, 3];
let iter = numbers.iter(); // &amp;i32を返す

 into...]]></description><link>https://zenn.dev/fast/articles/04cfdbbdf5c654</link><guid isPermaLink="true">https://zenn.dev/fast/articles/04cfdbbdf5c654</guid><pubDate>Wed, 18 Jun 2025 12:57:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zCzUXJ2X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E9%2596%25A2%25E9%2580%25A3%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yutak%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYTEzZDEyMWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FAST%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzNjBmNTJkYmUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yutak</dc:creator></item><item><title><![CDATA[Rust + Raspberry Pi Pico ：“cargo run”一発でLチカプログラムを書き込むまで]]></title><description><![CDATA[
 目標

開発環境を整えること

なるべく楽に開発を進められるように
将来性を加味してEmbassyの活用を行う


Lチカまで行う


 TL;DR
MacにRustクロスコンパイル環境を入れ、cargo generate でEmbassyテンプレートを作成。
.cargo/config.toml のrunnerをelf2uf2-rs -dに設定。
cargo run --release
ラズパイのボリュームにドラッグ&amp;ドロップなどが必要なくなって、プロジェクトの作成から、ラズパイの書き込みまで、快適に開発が続けられます。

 環境構築

 構成

Mac OS 15.5

...]]></description><link>https://zenn.dev/yuppon/articles/6896a0fe2648ed</link><guid isPermaLink="true">https://zenn.dev/yuppon/articles/6896a0fe2648ed</guid><pubDate>Wed, 18 Jun 2025 11:54:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZCyeusc0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%252B%2520Raspberry%2520Pi%2520Pico%2520%25EF%25BC%259A%25E2%2580%259Ccargo%2520run%25E2%2580%259D%25E4%25B8%2580%25E7%2599%25BA%25E3%2581%25A7L%25E3%2583%2581%25E3%2582%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258D%25E8%25BE%25BC%25E3%2582%2580%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuppon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d6UERsdDl6bWFhS1hIWGNUN2M2TENrcHBtZXRDUDcxMWM0YmNzWFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuppon</dc:creator></item><item><title><![CDATA[reqwestでリトライをする]]></title><description><![CDATA[
 目的
reqwestは本番で利用するにはタイムアウトとリトライは必須です。開発中は問題無く動いたとしても、サーバーの調子が悪くなった時に、正常に動かなくなります。
タイムアウトはreqwestにtimeoutメソッドで指定できるので簡単に設定できます。リトライはcrateを利用するか自前で実装する必要があります。

 crates

 reqwest-retry
reqwest-middlewareを利用したretryのcrateです。ポリシーを設定した後の使い心地はreqwestと同じです。本家のドキュメントにあるサンプルを引用します。
use reqwest_middleware...]]></description><link>https://zenn.dev/aoyagikouhei/articles/fabcbae069ce7e</link><guid isPermaLink="true">https://zenn.dev/aoyagikouhei/articles/fabcbae069ce7e</guid><pubDate>Tue, 17 Jun 2025 23:31:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zlWiWI_Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reqwest%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2592%25E6%259F%25B3%25E5%25BA%25B7%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDA3ZGRhNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>青柳康平</dc:creator></item><item><title><![CDATA[Rust の println! は Windows 環境でも CR を出力しない]]></title><description><![CDATA[Rust の println! マクロは、Windows 環境でも \n のみを出力する。これはプラットフォーム非依存の動作であり、Rust の設計思想に基づいた一貫した仕様となっている。
リファレンスを読んでいるときに気がついた。
https://doc.rust-lang.org/std/macro.println.html

 背景
Windows においては、伝統的に改行コードとして \r\n（CR + LF）を使用してきた。一方で Unix 系（Linux や macOS）では \n（LF）のみが改行として使用されている。多くの言語やランタイムは、この違いを抽象化し、OS に応...]]></description><link>https://zenn.dev/ongaeshi/articles/0bb7ae517246bd</link><guid isPermaLink="true">https://zenn.dev/ongaeshi/articles/0bb7ae517246bd</guid><pubDate>Tue, 17 Jun 2025 18:45:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9caihWd9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E3%2581%25AE%2520println%2521%2520%25E3%2581%25AF%2520Windows%2520%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2582%2582%2520CR%2520%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ongaeshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZjY4ZDAyMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ongaeshi</dc:creator></item><item><title><![CDATA[Rust✖️組み込みで非同期処理（async）をしてみた（Embassy）]]></title><description><![CDATA[
 はじめに
Rustの組み込み開発の非同期処理のデファクトスタンダードになりつつあるEmbassyを動かしてみました。また動かすハードウェアは、手軽にRust組み込みを試せる開発ボードであるBaker link. Devを利用しました。

 非同期とは
非同期処理とは、１つの処理（関数など）の完了を待たずに、他の処理（関数など）を先に進める仕組みです。これにより、１つのコアで複数の処理を同時に実行することができます。たとえば、温度センサーのデータ取得中にLEDの点滅を続けるような場面で使われます。非同期処理はasyncや awaitなどのキーワードを使って書かれ、効率的な処理を実現しま...]]></description><link>https://zenn.dev/baker_link_lab/articles/705de547cc7077</link><guid isPermaLink="true">https://zenn.dev/baker_link_lab/articles/705de547cc7077</guid><pubDate>Sun, 15 Jun 2025 13:53:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QE2K-__Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588async%25EF%25BC%2589%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588Embassy%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Baker%2520link.%2520Lab%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNzkyZGRhODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Baker link. Lab</dc:creator></item><item><title><![CDATA[ABC410: Rustで解く！問題解説]]></title><description><![CDATA[AtCoder Beginner Contest 410のA-E問題をRustで解いた際の解法をまとめました。

 A 問題
問題
https://atcoder.jp/contests/abc410/tasks/abc410_a
解説
K 歳の馬が出場可能なレースの個数を求める問題です。
各レースには年齢制限があり、その上限が A_i で与えられています。したがって、A_i \geq K を満たすレースの個数を数えれば答えが求まります。
コード

abc410a.rs
use proconio::input;

fn main() {
    // 入力
    input! {
  ...]]></description><link>https://zenn.dev/nakst_hide/articles/5fc92b420ee8a6</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/5fc92b420ee8a6</guid><pubDate>Sun, 15 Jun 2025 11:23:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xxymDmoz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABC410%253A%2520Rust%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YkMxNEpSQnNET01hTGcxTVRQWGNTWS1qYlNQbFRMQTN3ZU9Sdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[UEFI環境でaarch64カーネル実行が出来ずに万策尽きかけた話]]></title><description><![CDATA[最近前々から興味のあったOS開発をしています
せっかく自作するんだから、ということでBootloaderも含めてフルスクラッチから作成しており、Pure Rustで書かれたaarch64向けオペレーティングシステムです
bootloaderから自作しよう！となるとネット上の情報も少なく、またPure RustでのOS開発というのも依然ニッチなジャンルです
さらにそこにaarch64向けというフィルタも加えると更に有益な情報は少なくなります
体感としてもこれは実感していて、ドキュメントが少なくあったとしても結局 クソ長い退屈な 1次情報である仕様書/規格書に辿り着く、
やっと分かりやすそう...]]></description><link>https://zenn.dev/cp_r/articles/41c2ce160d692a</link><guid isPermaLink="true">https://zenn.dev/cp_r/articles/41c2ce160d692a</guid><pubDate>Sun, 15 Jun 2025 05:00:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rk3AP2-r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UEFI%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7aarch64%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%258C%25E5%2587%25BA%25E6%259D%25A5%25E3%2581%259A%25E3%2581%25AB%25E4%25B8%2587%25E7%25AD%2596%25E5%25B0%25BD%25E3%2581%258D%25E3%2581%258B%25E3%2581%2591%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:9kv8xiyi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1NjljYjFhZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>9kv8xiyi</dc:creator></item><item><title><![CDATA[Cargo Lambda | Rustコードを AWS Lambda に手っ取り早くデプロイする]]></title><description><![CDATA[
 はじめに
お久しぶりです〜！
最近スプラトゥーン3のアップデートがあり、ドライブワイパーRustなるブキが追加されました。
カーリングボムで前に出てメインの素早いキル性能と回転率爆早のウルトラショットで後衛に圧をかけつつ、、、
みたいなことを考えていると、最近Rust触っていないことに気づき、記事を執筆することに。
今回はCargo Lambdaを使ってRustコードをLambdaにデプロイしてみようと思います！

 Cargo Lambdaを使うための下準備
まずは何もない（Cargoとかは使える）状態で、下準備を整えていきたいと思います。
大前提、Macで下準備を整えていきたいと...]]></description><link>https://zenn.dev/taroyamada5963/articles/b36963d2f14e87</link><guid isPermaLink="true">https://zenn.dev/taroyamada5963/articles/b36963d2f14e87</guid><pubDate>Sun, 15 Jun 2025 04:02:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---RDgLj1r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cargo%2520Lambda%2520%257C%2520Rust%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%2520AWS%2520Lambda%2520%25E3%2581%25AB%25E6%2589%258B%25E3%2581%25A3%25E5%258F%2596%25E3%2582%258A%25E6%2597%25A9%25E3%2581%258F%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkOTBhMWI3M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota</dc:creator></item><item><title><![CDATA[LLM時代の言語選定――こんな時代だからこそGolang?!]]></title><description><![CDATA[
 前置き
この記事は、当初『LLM時代にどの言語を選定すべきか?』というタイトルで書き始めました。
書いている途中でインパクトに欠けると感じ、今のタイトルに落ち着きました。
しかし、主張の本質はあくまで「LLMの進化と普及を踏まえ、改めて言語選定のあり方を問い直すべきではないか？」という点にあります。本記事では、そのような時代に合致した言語の条件を考え、最も現実的な選択肢の一つとしてGolangを提案します。
!
前提として、"Web開発のサーバーサイド言語選定"に限定して述べていきます。


 惰性の言語選定に一石を投じたい
「俺の財宝か？欲しけりゃくれてやる。探せ、この世の全てをそ...]]></description><link>https://zenn.dev/t_keshi/articles/go-in-the-roaring-age</link><guid isPermaLink="true">https://zenn.dev/t_keshi/articles/go-in-the-roaring-age</guid><pubDate>Sat, 14 Jun 2025 12:08:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XKbNQ_wR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E8%25A8%2580%25E8%25AA%259E%25E9%2581%25B8%25E5%25AE%259A%25E2%2580%2595%25E2%2580%2595%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AA%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25A0%25E3%2581%258B%25E3%2582%2589%25E3%2581%2593%25E3%2581%259DGolang%253F%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_keshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2MTRjNmQ0N2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_keshi</dc:creator></item><item><title><![CDATA[自作のスキーマ言語: TYML]]></title><description><![CDATA[
 TYMLとは
TYMLとは、JsonSchemaよりも簡潔で厳密な仕様を持つ、任意の設定用言語(現在はiniとtoml)に対応可能なスキーマ言語です。
JsonSchemaの置き換えを目標としています。
既にCLIツールとLSPサーバーをリリースしており、VSCode Marketplaceよりダウンロードして使用できます。

https://tyml-org.github.io/tyml-lang.org/
https://github.com/tyml-org/tyml

 モチベーションとJsonSchema
既に存在し最も普及しているスキーマ言語としてJsonSchemaが挙...]]></description><link>https://zenn.dev/bea4dev/articles/49adc4be4638b0</link><guid isPermaLink="true">https://zenn.dev/bea4dev/articles/49adc4be4638b0</guid><pubDate>Sat, 14 Jun 2025 08:27:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5UzRII7P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E8%25A8%2580%25E8%25AA%259E%253A%2520TYML%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bea4dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZDVjZWFkMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bea4dev</dc:creator></item></channel></rss>