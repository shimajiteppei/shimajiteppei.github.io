<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2025-09-06T14:23:02+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076677</id>
    <published>2025-09-06T14:23:02+09:00</published>
    <updated>2025-09-06T14:23:02+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/YuukiYoshida/items/408d078a130c6f97f6a5"/>
    <url>https://qiita.com/YuukiYoshida/items/408d078a130c6f97f6a5</url>
    <title>Androidでパスキーへ移行するためのCredential Managerベストプラクティス</title>
    <content type="text">はじめに
近年、パスワードに代わる認証方式として パスキー（Passkeys） が注目を集めています。
Android でも Credential Manager API を介してパスキーをサポートしており、UX とセキュリティの両立が可能になりました。
そこで今回は、A...</content>
    <author>
      <name>YuukiYoshida</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076646</id>
    <published>2025-09-06T13:31:52+09:00</published>
    <updated>2025-09-06T13:31:52+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/a0bb24a5acbb05a13ca1"/>
    <url>https://qiita.com/nozomi2025/items/a0bb24a5acbb05a13ca1</url>
    <title>【デザインパターン】テンプレートメソッドパターン解説（Flutter / Android 実例付き）</title>
    <content type="text">1. パターンの意図
テンプレートメソッド（Template Method）パターン は、
処理の手順（アルゴリズム）の骨組みをスーパークラスに定義し、一部の処理をサブクラスに任せる デザインパターンです。

解決する問題

アルゴリズムの「流れ」は共通だが、部分的な処理...</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076352</id>
    <published>2025-09-05T16:28:19+09:00</published>
    <updated>2025-09-05T16:29:43+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/a4d6dce1add9e9b6e4c0"/>
    <url>https://qiita.com/nozomi2025/items/a4d6dce1add9e9b6e4c0</url>
    <title>【デザインパターン】責任の連鎖パターン解説（Flutter / Android 実例付き）</title>
    <content type="text">1. パターンの意図
責任の連鎖（Chain of Responsibility, CoR）パターン は、
複数の処理者（Handler）を連鎖させ、リクエストを順番に渡していく デザインパターンです。

解決する問題

処理の担当者を呼び出し側が決め打ちしたくない
どの...</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076211</id>
    <published>2025-09-05T10:46:07+09:00</published>
    <updated>2025-09-05T10:46:07+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/majoLibrary/items/e6b9c58dce6912446e08"/>
    <url>https://qiita.com/majoLibrary/items/e6b9c58dce6912446e08</url>
    <title>【Android】レビューが捗る！小さな「基盤」と明確な「責務」で進めるPR設計術</title>
    <content type="text">はじめに
大きくまとまったPRは、レビューが進みにくく、指摘が錯綜して結論が出るまでに時間がかかりがちです。そうしているうちにベースブランチとのコンフリクトが増え、手戻りや修正が積み重なり、リリース全体が遅れてしまうことも少なくありません。
一方で、目的ごとに小さく整理さ...</content>
    <author>
      <name>majoLibrary</name>
    </author>
  </entry>
</feed>
