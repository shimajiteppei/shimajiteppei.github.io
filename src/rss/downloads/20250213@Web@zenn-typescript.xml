<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 13 Feb 2025 10:13:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Visual Studio CodeでTypeScriptのデバッグを行う方法]]></title><description><![CDATA[
 はじめに
本記事では、Visual Studio Code（VS Code）を使用してTypeScriptのデバッグを行う方法を紹介します。特に、docker-composeを使用してnginxコンテナ上で動作する環境で、VS CodeからChromeを起動し、TypeScriptファイルにブレークポイントを設定してデバッグする手順を詳しく説明します。

 フォルダ構成
以下のようなフォルダ構成でプロジェクトを構築しました。
.
├── docker-compose.yaml
├── nginx
│   ├── Makefile
│   ├── conf.d
│   │   └── ...]]></description><link>https://zenn.dev/tryeverything/articles/a0020_vscode_docker_typescript</link><guid isPermaLink="true">https://zenn.dev/tryeverything/articles/a0020_vscode_docker_typescript</guid><pubDate>Thu, 13 Feb 2025 10:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XXJuNdNy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Visual%2520Studio%2520Code%25E3%2581%25A7TypeScript%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%2593%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDc5YTUwMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たんさん</dc:creator></item><item><title><![CDATA[TypeScriptでAtCoder始めたいからツール作った]]></title><description><![CDATA[こんにちは！！
久々にAtCoderで競技プログラミングをしたいなとなったのですが、個人的にTypeScriptで参加しづらく感じたので、コードエディタ上(自分はVSCode)で動かすことを想定したサポートツール作りました。
TypeScriptでAtCoderしているorしようと思っている方、良ければ参考にしていただけると幸いです。（ツールも使ってくれるとなおうれしいです。）

 AtCoderにTypeScriptで参加する上で感じた"やりづらさ"について
これは自分が、C言語で競技プログラミングを始めたことにも起因するのですが、CLI上で実行～入力してテストまでできるのが当たり前だ...]]></description><link>https://zenn.dev/soray677/articles/43edde52534b8e</link><guid isPermaLink="true">https://zenn.dev/soray677/articles/43edde52534b8e</guid><pubDate>Wed, 12 Feb 2025 13:30:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3SpI0-Yq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7AtCoder%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%25E3%2581%258B%25E3%2582%2589%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SoraY677%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGJhNTliMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SoraY677</dc:creator></item><item><title><![CDATA[React Tokyo トレンドレポート #2 : 初めてReactを学ぶ教材]]></title><description><![CDATA[こんにちは！
トレンドレポート#2はtamuが担当させていただきます！
React TokyoのDiscordチャンネルで盛り上がったトピックをピックアップしてお届けさせていただきます！

 初めてReactを学ぶ教材
Reactの学習を始める際、どんな教材を選ぶべきか？公式ドキュメントを読むべき？動画のほうが分かりやすい？ハンズオン形式がいい？……そんな悩みを持つ人も多いのではないでしょうか。
今回、React TokyoのDiscordで特に話題になった「React初心者向けの学習教材」をご紹介します！

 1. React公式ドキュメント（日本語版）
公式ドキュメントは王道の学習手...]]></description><link>https://zenn.dev/react_tokyo/articles/77375d84125b76</link><guid isPermaLink="true">https://zenn.dev/react_tokyo/articles/77375d84125b76</guid><pubDate>Wed, 12 Feb 2025 11:12:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FgzgO846--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Tokyo%2520%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2520%25232%2520%253A%2520%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6React%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E6%2595%2599%25E6%259D%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25BF%25E3%2583%25A0%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczM2MxYTQzYzYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:React%2520Tokyo%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmNzdjNGQ0YTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タム@エンジニア</dc:creator></item><item><title><![CDATA[React 環境構築]]></title><description><![CDATA[
 React環境構築
 最近Reactに触れる機会が増えたので、環境構築から入門してみたいと思います。

 参考

React


 環境構築する
mkdir react
cd react

 ディレクトリ構成
 以下のような構成で、作成します。
.
├── index.html
├── package.json
├── src
│   ├── app.tsx
│   └── main.tsx
├── tsconfig.json
└── vite.config.ts

 インストール
pnpm add react react-dom
pnpm add -D @types/react @...]]></description><link>https://zenn.dev/mini_bg_pro_n/articles/97755e0d50ae3e</link><guid isPermaLink="true">https://zenn.dev/mini_bg_pro_n/articles/97755e0d50ae3e</guid><pubDate>Wed, 12 Feb 2025 10:57:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lgYbdGUO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:React%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:N%2520Akita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwZGQ4MzFmNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>N Akita</dc:creator></item><item><title><![CDATA[Laravel x React (SPA) で419エラーを解決した方法]]></title><description><![CDATA[
 Laravel x React (SPA) で419エラーを解決した方法
備忘録として残します。

 使用している技術
FE: React/Typescript
BE: Laravel Sail
Breeze apiを使用しています

 直面した問題
419 unknown status
"message": "CSRF token mismatch."

 やったこと

Laravelプロジェクトの.envファイルに下記を追記 (自分の環境に合った設定にしてください)
.env


APP_URL=http://localhost
FRONTEND_URL=http://local...]]></description><link>https://zenn.dev/funayamateppei/articles/e7be11120185aa</link><guid isPermaLink="true">https://zenn.dev/funayamateppei/articles/e7be11120185aa</guid><pubDate>Wed, 12 Feb 2025 09:07:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tlZX2xjF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%2520x%2520React%2520%2528SPA%2529%2520%25E3%2581%25A7419%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%25AA%25E3%2582%2580%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTA3MWNkNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふなむし</dc:creator></item><item><title><![CDATA[ClaudeでAppleのメモ機能を自動操作するMCPサーバーを作ってみた]]></title><description><![CDATA[
 はじめに
どうもClaude使用歴2ヶ月目のwrenchです。
今回は、Claude Desktop Appを活用したMCPサーバーの構築について、その開発過程と得られた知見を共有させていただきます。

 きっかけ
日々の開発業務において、Claude Desktop Appを積極的に活用していました。その中で、「後で参照したい」と感じる有用なスクリプトや会話内容に頻繁に遭遇し、それらを都度メモに残す機会が増えていきました。
また、Claude Desktop Appでは会話が一定の長さを超えると、以下のように新規チャットでの会話の継続を促されます。

このような状況では、それまでの...]]></description><link>https://zenn.dev/wrench/articles/42c43a7be626fd</link><guid isPermaLink="true">https://zenn.dev/wrench/articles/42c43a7be626fd</guid><pubDate>Wed, 12 Feb 2025 07:22:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iSl7Ftlx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%25E3%2581%25A7Apple%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258BMCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wrench%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhZjZkYmMxZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wrench</dc:creator></item><item><title><![CDATA[Next.js App Router で実装！フリマっぽいサンプルアプリ]]></title><description><![CDATA[年末年始に読んだ 「TypeScript と React/Next.js でつくる実践 Web アプリケーション」 の読書感想文を先月記事にしました。（多くの方に読んでいただき、非常にありがたい経験ができました。）
https://zenn.dev/t_hayashi/articles/faa1ec1944731f
この中で惜しかったところとして、書籍内のサンプルアプリケーションが Page Router で実装されていた点をあげました。これは自身のモチベーションに App Router を学びことがあったためです。（書籍では丁寧にサンプルアプリケーションの実装手順が記載されていました。...]]></description><link>https://zenn.dev/t_hayashi/articles/e7917167b68a6b</link><guid isPermaLink="true">https://zenn.dev/t_hayashi/articles/e7917167b68a6b</guid><pubDate>Wed, 12 Feb 2025 03:30:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xgNmYou7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520Router%2520%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%2581%25E3%2583%2595%25E3%2583%25AA%25E3%2583%259E%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomonori%2520Hayashi%2520%252F...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlphS3JZOGdPbHVBSWpsbU02eUg0VXI4eW5OSnBYSnV0RzBPM255QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomonori Hayashi / @pHaya72</dc:creator></item><item><title><![CDATA[8thwallエディタプロジェクトでReactテンプレートを使って感じたメリットと制限]]></title><description><![CDATA[
 はじめに

 TL;DR

React テンプレートを使うことで、8thwall と組み合わせた環境をすぐ構築できる
React 導入によって、便利な React のエコシステムを使えるようになる
DOM 操作が楽になり、インタラクションが必要なランディングページなどが作れる
クラウドエディタでは TypeScript サポートが乏しいのでコーディングはしにくい


 概要
本記事では 8thwall が公開している React を使ったテンプレートプロジェクトを使ってみて、
React を導入することで得られる恩恵と制約についてご紹介します。
ここでいう React テンプレートと...]]></description><link>https://zenn.dev/hololab/articles/about-react-in-8thwall-editor</link><guid isPermaLink="true">https://zenn.dev/hololab/articles/about-react-in-8thwall-editor</guid><pubDate>Wed, 12 Feb 2025 00:11:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n6uMG4CC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:8thwall%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25A7React%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2584%259F%25E3%2581%2598%25E3%2581%259F%25E3%2583%25A1%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2581%25A8%25E5%2588%25B6%25E9%2599%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AB%25E3%2583%25BC%25E5%2585%2584%25E3%2581%2595%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkMzA4MzIwZTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259B%25E3%2583%25AD%25E3%2583%25A9%25E3%2583%259C%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUQndtd2ZiTmM3Nzg0SmxRZWdlX3BSc09RdmdvX2hxNlg5MTJKT3VZPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>にー兄さん</dc:creator></item><item><title><![CDATA[【プロンプトも公開】Zoom 会議が自動で議事録に！文字起こし × 生成 AI で業務大幅削減]]></title><description><![CDATA[こんにちは、株式会社キカガク CTO 室の高橋です。
AI 活用推進をはじめとした、技術による課題解決や業務効率化に取り組んでいます。
Zoom には、録画を行うと文字起こしテキストを出力する機能があります。
その存在は知ってはいたのですが、ぱっと見た感じ「あぁー」とか「うん」といったフィラーが多く入っており、そのまま読むには難しいものでした。
一方で、会議内容を他者に共有するために議事録を記録するのが大変だったり、録画を共有しても視聴するのが大変であるという課題がありました。
そういった課題を解決するべく、Zoom の文字起こし作成をフックに、生成 AI を活用して要約を作成するワーク...]]></description><link>https://zenn.dev/kikagaku/articles/1f788f62cf59b6</link><guid isPermaLink="true">https://zenn.dev/kikagaku/articles/1f788f62cf59b6</guid><pubDate>Wed, 12 Feb 2025 00:00:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yATlfglg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%2582%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591Zoom%2520%25E4%25BC%259A%25E8%25AD%25B0%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E8%25AD%25B0%25E4%25BA%258B%25E9%258C%25B2%25E3%2581%25AB%25EF%25BC%2581%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%2520%25C3%2597%2520%25E7%2594%259F%25E6%2588%2590%2520AI%2520%25E3%2581%25A7%25E6%25A5%25AD%25E5%258B%2599%25E5%25A4%25A7%25E5%25B9%2585%25E5%2589%258A%25E6%25B8%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%259F%25E3%2581%258B%25E3%2581%25AF%25E3%2581%2597%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiY2ZkM2FkNDQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AD%25E3%2582%25AB%25E3%2582%25AC%25E3%2582%25AF%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzYzM3MDEyN2IuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たかはし</dc:creator></item><item><title><![CDATA[TinyBase × React UI: 状態管理をシンプルに統合する方法]]></title><description><![CDATA[
 TinyBase × React UI: 状態管理をシンプルに統合する方法
TinyBase は、軽量かつ柔軟なデータストアを提供するライブラリです。特に React との統合に優れており、複雑な状態管理をシンプルかつパフォーマンス良く実現できます。
本記事では、TinyBase を React UI に統合する方法を、具体的なコード例 を交えながら解説します。


 TinyBase + React UI の準備
まずは、TinyBase の React 用モジュール ui-react をインストールしましょう。
npm install tinybase ui-react reac...]]></description><link>https://zenn.dev/53able/articles/bfa668a435f065</link><guid isPermaLink="true">https://zenn.dev/53able/articles/bfa668a435f065</guid><pubDate>Tue, 11 Feb 2025 16:15:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_hbkmGdB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TinyBase%2520%25C3%2597%2520React%2520UI%253A%2520%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E7%25B5%25B1%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:53able%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiZWE2OGI5M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>53able</dc:creator></item><item><title><![CDATA[React-i18nextで翻訳用テキストの一部をハイライトする方法]]></title><description><![CDATA[
 背景
react-i18next で国際化対応する時に出会った課題です。

 課題
国際化対応では通常、辞書となるjsonファイルを用意し、その中に翻訳用のテキストを記述します。
en.json
{
  "welcome": "Welcome!"
}
ja.json
{
  "welcome": "ようこそ"
}
これらのテキストをカスタマイズ（例：動的変数の埋め込みやリンクの埋め込みなど）する場合、少々工夫が必要です。
私の場合、テキストの一部分をハイライトしたい場面に出会いました。
翻訳用のテキスト全てをハイライトしたい場合は、通常styleを当てた span などのタグで囲うこ...]]></description><link>https://zenn.dev/h_p_yancy/articles/doc13-react-i18n-highlight-text</link><guid isPermaLink="true">https://zenn.dev/h_p_yancy/articles/doc13-react-i18n-highlight-text</guid><pubDate>Tue, 11 Feb 2025 13:14:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EKc1LF-J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React-i18next%25E3%2581%25A7%25E7%25BF%25BB%25E8%25A8%25B3%25E7%2594%25A8%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E4%25B8%2580%25E9%2583%25A8%25E3%2582%2592%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:H.P.Yancy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZjU4OTA5MDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>H.P.Yancy</dc:creator></item><item><title><![CDATA[インタラクティブな会話からTodoリストのタスクを出力する方法 with Vertex AI]]></title><description><![CDATA[こんにちは。近藤です。普段はコミューンという会社でグローバルチームに所属し、グローバルマーケット向けの開発をしております。
本記事では、Todo管理を管理してほしい ～電話でTodo管理を自動化するサービス～で実装したユーザーとのインタラクティブな会話からタスクを抽出する方法を解説します。
なお使用言語はtypescriptです。

 1. はじめに
今回サービスで実現したことを簡単に説明すると、以下の通りです。
【タスク作成が指定された時間に電話がかかってくる】
(AI Agent)「今日は何をしますか？」  
(ユーザー)「今日はAとB、やります！」  
(AI Agent)「AとB...]]></description><link>https://zenn.dev/dev_commune/articles/07fbfc9f6b58e9</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/07fbfc9f6b58e9</guid><pubDate>Tue, 11 Feb 2025 12:06:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aG_8Be5K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AA%25E4%25BC%259A%25E8%25A9%25B1%25E3%2581%258B%25E3%2582%2589Todo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2520with%2520Vertex%2520AI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yoshifumi.kondo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pXbm4xb0ZRLWs0RjhoVGhPb1BEbGZuRDRfQ0pXVWM5T1RJY0MyPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoshifumi.kondo</dc:creator></item><item><title><![CDATA[型 'string' のパラメーターを持つインデックス シグネチャが型Xに見つかりませんでした。ts(7053)]]></title><description><![CDATA[英語版の場合
  No index signature with a parameter of type 'string' was found on type 'X'
のエラーについて、意味が理解できなかったので初歩的なところから調査した。

 インデックス シグニチャの言葉の意味


インデックス - 配列やオブジェクトの要素にアクセスするための識別子。添字のこと


シグニチャ - プログラミング上では、「メソッドや関数の定義情報」を表す。引数や戻り値が異なれば、同じメソッド名でも「ちがうシグニチャ」ということになる。


インデックス シグネチャ - 「どのような方法で要素にアクセ...]]></description><link>https://zenn.dev/nanacb/articles/0d55b1acba343a</link><guid isPermaLink="true">https://zenn.dev/nanacb/articles/0d55b1acba343a</guid><pubDate>Tue, 11 Feb 2025 11:37:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6l9x0Jpk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%2520%2527string%2527%2520%25E3%2581%25AE%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%2520%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2581%258C%25E5%259E%258BX%25E3%2581%25AB%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%258B%25E3%2582%258A%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582ts%25287053%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2581%25A0%25E3%2581%25AA%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2Nzk5NWZkMmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うだなな</dc:creator></item><item><title><![CDATA[ふりかえりに関するアプリを個人開発でやってみて、その失敗と成長のふりかえり]]></title><description><![CDATA[
 はじめに
こんにちは！突然ですが、みなさん「ふりかえり」は好きですか？僕は大好きです！
今回、ふりかえりに関する自作アプリを作ってみました。
この記事では自作アプリを作る過程での工夫や失敗、そこから得た学びをふりかえっていきます！
リンクはこちらなので、良かったらアクセスしてみてください〜！
👉 アプリはこちら
👉 GitHubリポジトリはこちら

 なぜ作ったのか？
私がこのアプリを作った理由には、以下のようなモチベーションがありました。

技術力向上の１つの手段として、何かを作ってみたかった
フロント、バックエンド、インフラを通したアプリケーションを作って、一通り理解したかった
...]]></description><link>https://zenn.dev/go_furu93/articles/retrospect_individual_development</link><guid isPermaLink="true">https://zenn.dev/go_furu93/articles/retrospect_individual_development</guid><pubDate>Tue, 11 Feb 2025 10:30:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---8ihAeUU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakopon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwMTYzOTI0Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sakopon</dc:creator></item><item><title><![CDATA[Daishi'sオンラインサロンのご案内＆メンバー募集｜React TokyoのDiscord内で活動中]]></title><description><![CDATA[こんにちは。最近は、オンラインおよびオフラインのコミュニティ活動の一環として、React Tokyoに力を入れています。React Tokyoの発足についてまだご存じでない方は、ぜひこちらの記事をご覧ください。
https://zenn.dev/dai_shi/articles/9f2760086fb31a
ちなみに、React Tokyoを始める前は、「Webアプリ開発塾」「Meteor Fan」「React Fan」など、名称を変えながら活動していました。実は、その活動には二つの側面がありました。一つは多くの人との出会い（A）、もう一つはそれを自分の仕事にすること（B）です。イベント...]]></description><link>https://zenn.dev/dai_shi/articles/e77af0beda436b</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/e77af0beda436b</guid><pubDate>Tue, 11 Feb 2025 10:07:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i2NafF2z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Daishi%2527s%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25AD%25E3%2583%25B3%25E3%2581%25AE%25E3%2581%2594%25E6%25A1%2588%25E5%2586%2585%25EF%25BC%2586%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E5%258B%259F%25E9%259B%2586%25EF%25BD%259CReact%2520Tokyo%25E3%2581%25AEDiscord%25E5%2586%2585%25E3%2581%25A7%25E6%25B4%25BB%25E5%258B%2595%25E4%25B8%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[Vitest + React + TypeScriptでテストを書こう（カスタムフック編）]]></title><description><![CDATA[こんにちは。
今回は、React + TypeScript + Vitest でカスタムフックをテストする方法をさまざまな例を交えて紹介していこうと思います。
vitest でのモックの使い方などは以前に記事にしているので、こちらも参考にしてみてください。
https://zenn.dev/rh820/articles/25d26253d99bd9
次回は React コンポーネントのテストの書き方についてお話しする予定です。

 カスタムフックのテスト
React を使用していると、カスタムフックを作成することがあると思いますが、
状態管理の不具合や非同期処理のエラーは、実際にアプリを...]]></description><link>https://zenn.dev/rh820/articles/e95d5c685f1f46</link><guid isPermaLink="true">https://zenn.dev/rh820/articles/e95d5c685f1f46</guid><pubDate>Tue, 11 Feb 2025 07:24:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_X7MVdfE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vitest%2520%252B%2520React%2520%252B%2520TypeScript%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2593%25E3%2581%2586%25EF%25BC%2588%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjM2JkYzhiZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hodii</dc:creator></item><item><title><![CDATA[React チュートリアルの三目並べに useContext, useReducer によるグローバルな状態管理を導入する]]></title><description><![CDATA[
 はじめに
React を使用した Web アプリケーションの開発現場では、状態管理のために Redux や Zustand, Jotai などの状態管理ライブラリを導入していることが多いかと思います。
これらの状態管理ライブラリを使うと、より効率的でスケーラブルな状態管理が可能になります。
しかし、いきなりライブラリに頼ると、React が本来持つ「状態管理のしくみ」を理解しにくくなるというデメリットもあります。
そこで本記事では、React チュートリアルの三目並べを題材に、React の組み込み hook である useContext と useReducer を使ったグローバル...]]></description><link>https://zenn.dev/pumiii/articles/1a095e386beddb</link><guid isPermaLink="true">https://zenn.dev/pumiii/articles/1a095e386beddb</guid><pubDate>Tue, 11 Feb 2025 07:24:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kKu6-DjG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%2589%25E7%259B%25AE%25E4%25B8%25A6%25E3%2581%25B9%25E3%2581%25AB%2520useContext%252C%2520useReducer%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2581%25AA%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pumiii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG85TVZmT3otTHBXNko3Nk1JczRqMHZHUzdseG92b2FqWWx5R3JnWlowS182M2xBUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pumiii</dc:creator></item><item><title><![CDATA[Lambda,Node.js,Typescriptのキャッシュについて]]></title><description><![CDATA[お久しぶりです。mikenekoです。
2025年が始まってもう1ヶ月が経ってしまいましたね😅
私は、現職で新しい機能開発をしつつ、お休みの日は本を読んだりしています！
最近では「Web API The Good Parts」という本を読みました。
API開発をまだしたことない人やOWASPなどでセキュリティ診断をしたことないって人は読んだほうが良いかなと思いました！
HTTPヘッダーの話はセキュリティ面においてかなり重要になると思っています。
さて、今回は現職で新規機能開発をしている時に使用しているAWS Lambdaについてお話しをしようと思います。
こちらについて記載していくとかな...]]></description><link>https://zenn.dev/haru507/articles/2025-01-26_zenn</link><guid isPermaLink="true">https://zenn.dev/haru507/articles/2025-01-26_zenn</guid><pubDate>Tue, 11 Feb 2025 06:59:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LpvNnWsp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lambda%252CNode.js%252CTypescript%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mike_neko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmN2YyNTQ0ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mike_neko</dc:creator></item><item><title><![CDATA[Supabase で簡単 & 便利に！データベーススキーマから TypeScript 型定義を自動生成する方法]]></title><description><![CDATA[
 ✅ 前提条件

Supabase にてプロジェクトを作成済み
ちなみに筆者はnextjsの公式チュートリアルで作成したRSC(react server components)アプリケーションにsuparbaseを導入しました

このチュートリアルのchapter6あたりでsuparbaseのデータベース作成ができます
テーブル定義はチュートリアル内で作成したものをそのまま使用しております



Supabase CLI を使用して、データベーススキーマから TypeScript の型定義を自動生成する手順を紹介します。

 🔥 Supabase とは？
その前にそもそもSupabas...]]></description><link>https://zenn.dev/ktrszk/articles/72e8a9bec4360a</link><guid isPermaLink="true">https://zenn.dev/ktrszk/articles/72e8a9bec4360a</guid><pubDate>Tue, 11 Feb 2025 06:25:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NBX04iSn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%2520%2526%2520%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%25EF%25BC%2581%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%258B%25E3%2582%2589%2520TypeScript%2520%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kotaro%2520Suzuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXc3F4bl9xenpWS2duS0l0TjctNFNLOEh4dzhmaDY5bnNBQ3I0NGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kotaro Suzuki</dc:creator></item><item><title><![CDATA[Prismaを使って既存のテーブルスキーマからコードを生成する]]></title><description><![CDATA[
 背景と概要
発端は既存のテーブル構成からO/Rマッパーっぽい役割のコードを生成できないかと思って探していました。
調べている間にPrismaの名前を見て、前知り合いが発表していたなと思い検証してみました。その時の備忘録です。
マッピングするクラスはScalaのコードにしたかったので、Scalaのコードを生成してみます。
後に出てくるコードを見るとわかりますが、JavaScript(TypeScript)で生成するコードを書くので、任意のファイルが生成可能で、Scalaに限った話ではありません。
イメージは以下のような感じです。
prisma/scala-generate.jsという部...]]></description><link>https://zenn.dev/ara_ta3/articles/prisma-generate-code-from-tables</link><guid isPermaLink="true">https://zenn.dev/ara_ta3/articles/prisma-generate-code-from-tables</guid><pubDate>Tue, 11 Feb 2025 05:10:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wwtMVvU6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%258B%25E3%2582%2589%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ara_ta3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMmNmMDMwYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ara_ta3</dc:creator></item></channel></rss>