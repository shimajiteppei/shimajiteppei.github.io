<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 11 Nov 2024 01:27:16 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Envoy入門（その２）外部認証]]></title><description><![CDATA[
 はじめに
マイクロサービスやWeb API界隈では、サービス間のネットワークの制御をライブラリではなく、プロキシのコンテナをサイドカーとして使うのだとか。そのデファクトスタンダード的な立ち位置なのが Envoy さん。
ですが、日本語の新しい情報が少ないので、だったら本家のサイトを見ながら、自力でなんとかするしかないね。という記事です。
第一回目は、Transport layer security (TLS) でした。
https://zenn.dev/robon/articles/fc7feab5e77d59
第二回目は、External authorization (ext_au...]]></description><link>https://zenn.dev/robon/articles/2896faa9bbe72d</link><guid isPermaLink="true">https://zenn.dev/robon/articles/2896faa9bbe72d</guid><pubDate>Sun, 10 Nov 2024 22:45:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vE3Hq0Fr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Envoy%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%25E5%25A4%2596%25E9%2583%25A8%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>荒木 岳夫</dc:creator></item><item><title><![CDATA[オリジナルの Dev Container のコンテナイメージを作成してみる]]></title><description><![CDATA[みなさん、Dev Container を活用していますか？
ローカルの環境を汚さずに、開発環境を構築して開発を行うことができる Dev Container はとても便利です。
また、コードベースで開発環境を共有することができるため、チーム開発においても非常に有用です。
この記事では、オリジナルの Dev Container のコンテナイメージの作成を通して、Dev Container の基本的な使い方から、カスタマイズ、GitHub Container Registry との連携まで解説します。

 Dev Container について
Dev Container とはコンテナを開発環境...]]></description><link>https://zenn.dev/horatjp/articles/dev-container-image</link><guid isPermaLink="true">https://zenn.dev/horatjp/articles/dev-container-image</guid><pubDate>Sun, 10 Nov 2024 13:50:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zImnDNtZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%25AA%25E3%2582%25B8%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25AE%2520Dev%2520Container%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:horatjp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0ZDRhNWNmOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>horatjp</dc:creator></item><item><title><![CDATA[LaravelとInertiaJS使う際の開発の流れメモ（自分用）]]></title><description><![CDATA[
 Laravel開発の流れ
自分用メモ
前提条件

Laravel11
InertiaJS
PHP8系
Docker Desktop
sail
MariaDB


 0. 準備

 プロジェクトの作成

sailを使って開発を進める


Terminal
curl -s "https://laravel.build/Project_Name?php=82&amp;with=mariadb" | zsh


 コンテナを起動

Docker Desktopがインストールされていること前提。必要なコンテナが全て立ち上がる。


Terminal
./vendor/bin/sail up -...]]></description><link>https://zenn.dev/shohei_1010/articles/edf5a1ec2d8497</link><guid isPermaLink="true">https://zenn.dev/shohei_1010/articles/edf5a1ec2d8497</guid><pubDate>Sun, 10 Nov 2024 13:15:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V61StfDg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%25E3%2581%25A8InertiaJS%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%2588%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shouhei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmYTI5YTZhZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shouhei</dc:creator></item><item><title><![CDATA[DockerイメージをECRにpushする手順メモ]]></title><description><![CDATA[
 参考にしたページ
AWS公式
株式会社一創様

 手順

 1,ECRリポジトリ作成
以下のaws-cliでリポジトリ作成できます。(デフォルトはプライベートリポジトリ)
aws ecr create-repository --repository-name &lt;リポジトリ名&gt; --region &lt;リージョン名&gt;

 2,ECRリポジトリのURI取得
以下のaws-cliで取得できます。マネコンからでもリポジトリのページから取得できます。
aws ecr describe-repositories --repository-names &lt;リポジトリ名&gt...]]></description><link>https://zenn.dev/shobute/articles/59b37f367ccfc9</link><guid isPermaLink="true">https://zenn.dev/shobute/articles/59b37f367ccfc9</guid><pubDate>Sun, 10 Nov 2024 09:14:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mXwj8mve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ECR%25E3%2581%25ABpush%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E8%25B2%25A0%25E6%2589%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzI3YTVkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>勝負手</dc:creator></item><item><title><![CDATA[[備忘録]EC2でサクッとDocker Composeを試したい時]]></title><description><![CDATA[
 概要
awsのEC2上でdocker composeをインストールする方法について記載します。
とりあえずインストールしたので、セットアップが技術的に正しいかどうかはわかりませんが、残しておきます。

 発生した問題
EC2インスタンス上のyumでdocker をインストールしたがcomposeコマンドが使えなかった。(docker compose up)
sudo yum install -y docker
以下の操作は失敗
sudo docker compose up

 原因
Docker ComposeはDockere Engineとは別のモノで、あくまで複数コンテナのアプリ...]]></description><link>https://zenn.dev/ryo_nakaya/articles/51289870d3cf12</link><guid isPermaLink="true">https://zenn.dev/ryo_nakaya/articles/51289870d3cf12</guid><pubDate>Sun, 10 Nov 2024 04:07:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oDwetckD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255DEC2%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8Docker%2520Compose%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakaryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4MDVhNjgyY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakaryo</dc:creator></item><item><title><![CDATA[解決法：wslからvscodeを起動したらReopen in Container出来ない場合]]></title><description><![CDATA[
 エラー概要
wslから起動したvscodeの左下の青いボタン（&gt;&lt;WSL:）をクリックして

Reopen in Containerを実行した際、

が表示されReopenできない。
エラーメッセージ（実際は赤字で改行なし）
[218 ms] Docker returned an error code ENOENT,
message: Exectuable 'docker' not found on PATH
'C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Oculus\Support\oculus-runtim...]]></description><link>https://zenn.dev/matsuzakiharuka/articles/cc7cfac27f8bc2</link><guid isPermaLink="true">https://zenn.dev/matsuzakiharuka/articles/cc7cfac27f8bc2</guid><pubDate>Sat, 09 Nov 2024 13:41:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ze090zc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%25EF%25BC%259Awsl%25E3%2581%258B%25E3%2582%2589vscode%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589Reopen%2520in%2520Container%25E5%2587%25BA%25E6%259D%25A5%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%25BE%25EF%25A8%2591%2520%25E9%2581%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjZGNhNTk1MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>松﨑 遥</dc:creator></item><item><title><![CDATA[Dockerでインストールしたnpmパッケージが動かない時]]></title><description><![CDATA[Dockerを使ってReact（Vite）とPostgreSQLの開発環境を構築しているときに、少しハマったことがありました。Docker内で依存パッケージをインストールしたにもかかわらず、ローカル環境で「モジュールが見つからない」というエラーが出るという現象です。原因と解決方法について、まとめてみます。

 開発環境


MacBook Air (M2, 2022)（Apple Silicon）

OS: macOS Sonoma 14.5


 構成
project-root/
├── frontend/
├── backend/
├── docker/
│   ├── fronte...]]></description><link>https://zenn.dev/tamon_kondo/articles/d1f1c9a96627bb</link><guid isPermaLink="true">https://zenn.dev/tamon_kondo/articles/d1f1c9a96627bb</guid><pubDate>Sat, 09 Nov 2024 09:07:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---sxrDXsy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259Fnpm%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t.k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1WWoxNXZlTDl0VE9pd0p0VHVZSXUyNENJMkJuOG1MYkhNcjFvN2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.k</dc:creator></item><item><title><![CDATA[M2 MacBookでのDocker環境構築：ReactとPostgreSQLを使った環境で発生したトラブルとその解決法]]></title><description><![CDATA[
 環境情報


デバイス：MacBook Air (M2, 2022)

メモリ：8 GB

OS：macOS Sonoma 14.5

プロジェクト概要：Dockerを使用してReact（Vite）とPostgreSQLの開発環境を構築


 フォルダ構成
project-root/
├── frontend/
├── backend/
├── docker/
│   ├── frontend/
│   ├── backend/
│   └── db/
└── docker-compose.yml

 背景
M2チップを搭載したMacでは、ARMアーキテクチャによるプラットフォーム依...]]></description><link>https://zenn.dev/tamon_kondo/articles/ee485ac615fb7c</link><guid isPermaLink="true">https://zenn.dev/tamon_kondo/articles/ee485ac615fb7c</guid><pubDate>Sat, 09 Nov 2024 08:19:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iTfKw4OO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M2%2520MacBook%25E3%2581%25A7%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%259AReact%25E3%2581%25A8PostgreSQL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t.k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1WWoxNXZlTDl0VE9pd0p0VHVZSXUyNENJMkJuOG1MYkhNcjFvN2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.k</dc:creator></item><item><title><![CDATA[arm64 ubuntu上でDjango を docker-compose で動かす]]></title><description><![CDATA[
 概要
単純にdockerhubのDockerfileを使うだけだとうまくいかなかったのでメモ

 Install（うまくいった！）

 とりあえず結果だけ

requirements.txt を作成Django==5.1


Dockerfile を作成FROM python:3.13.0-bookworm

RUN apt-get update \
    &amp;&amp; apt-get install -y --no-install-recommends \
        postgresql-client \
    &amp;&amp; rm -rf /var/lib...]]></description><link>https://zenn.dev/sjy/articles/df074afc82834b</link><guid isPermaLink="true">https://zenn.dev/sjy/articles/df074afc82834b</guid><pubDate>Fri, 08 Nov 2024 13:49:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I3FjDW5u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:arm64%2520ubuntu%25E4%25B8%258A%25E3%2581%25A7Django%2520%25E3%2582%2592%2520docker-compose%2520%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SJY%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SJY</dc:creator></item><item><title><![CDATA[distroless なイメージでも envsubst が使いたい]]></title><description><![CDATA[本番環境向けのコンテナイメージを作成する際、イメージサイズやセキュリティを考慮して distroless イメージを使うことがあります。
https://blog.inductor.me/entry/alpine-not-recommended
https://sysdig.jp/blog/dockerfile-best-practices/
https://zenn.dev/ymd65536/articles/improve_by_distroless_image
またコンテナイメージを作成する際、docker-entrypoint.sh を作成してコンテナの起動時に envsubst...]]></description><link>https://zenn.dev/shogogg/articles/20614f58363867fd7b29</link><guid isPermaLink="true">https://zenn.dev/shogogg/articles/20614f58363867fd7b29</guid><pubDate>Fri, 08 Nov 2024 09:06:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qF0r0e1x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:distroless%2520%25E3%2581%25AA%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E3%2582%2582%2520envsubst%2520%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shogogg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzZTc5ODM5NDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shogogg</dc:creator></item><item><title><![CDATA[令和最新版 ROS Noetic on Docker のすすめ]]></title><description><![CDATA[
 導入
こんにちは、CA技研でエンジニアをしているHiraiKyoです。
CA技研ではロボット開発フレームワーク「Robot Operating System (ROS)」を使用して製品開発しております。
弊社ではROS2への移行は検討段階で、現在も主にROS Noeticを使用しています。
この理由は、ROSのように様々な機器とのインテグレーションを前提としていると、どうしても機器側のROS2対応が行われるまでは移行しづらいためです。
しかし、ROS NoeticのEOLも目前に迫っています。
ROSは特定のUbuntuバージョンに対応してリリースされており、最新版のROS Noet...]]></description><link>https://zenn.dev/kyoizmy/articles/333ffb5102e2cf</link><guid isPermaLink="true">https://zenn.dev/kyoizmy/articles/333ffb5102e2cf</guid><pubDate>Thu, 07 Nov 2024 08:11:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lOXUK9Eh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%25A4%25E5%2592%258C%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%2520ROS%2520Noetic%2520on%2520Docker%2520%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HiraiKyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjYzY4YzlmYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HiraiKyo</dc:creator></item><item><title><![CDATA[AWS ECRのマルチステージビルドにおける脆弱性スキャンの挙動について]]></title><description><![CDATA[
 はじめに
AWS ECR（Elastic Container Registry）の脆弱性スキャン機能は、コンテナイメージのセキュリティを確保する上で重要な役割を果たしています。
マルチステージビルドを使用する場合、その挙動について注意すべき点があることがわかりました。

 重要な発見
マルチステージビルドにおけるECRの脆弱性スキャンには、以下のような特徴があります：

スキャン対象となるのは、最終的にプッシュされる最後のステージのイメージのみ
中間ステージ（builderステージなど）はスキャン対象外


 具体例で見る挙動
以下のような一般的なマルチステージビルドのDockerf...]]></description><link>https://zenn.dev/asamin/articles/b656820708a4cf</link><guid isPermaLink="true">https://zenn.dev/asamin/articles/b656820708a4cf</guid><pubDate>Thu, 07 Nov 2024 05:27:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EY4lZiGH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520ECR%25E3%2581%25AE%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E8%2584%2586%25E5%25BC%25B1%25E6%2580%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:asami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YWMyYjMxNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asami</dc:creator></item><item><title><![CDATA[docker composeでdnsを指定する]]></title><description><![CDATA[TailscaleとCloudflaredを同時に使用したときに問題が出たので、メモ。

 概要
Tailscaleをインストールした環境でDockerを使用する際、DNS解決で問題が発生することがあります。これは、Tailscaleがresolv.confを書き換えることで、Docker環境のDNS設定にも影響を及ぼすためです。
具体的には、CloudflaredをDocker Composeで使用した際にDNS解決エラーが発生しました。この問題を解決するには、Docker Composeファイル内で明示的にDNSを指定することができます。

 解決策
以下のようにdnsオプションを追...]]></description><link>https://zenn.dev/calldoctor_blog/articles/025bc61d870715</link><guid isPermaLink="true">https://zenn.dev/calldoctor_blog/articles/025bc61d870715</guid><pubDate>Thu, 07 Nov 2024 02:43:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KCdB_XhW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520compose%25E3%2581%25A7dns%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kiyo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1MDY1OGVhYTEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25AD%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1NzcwOTdlYjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiyo</dc:creator></item><item><title><![CDATA[Kubernetesの基礎2（マスターノードとワーカーノードの深堀）]]></title><description><![CDATA[
 マスターノードとワーカーノードの構成
マスターノードでは、コントロールプレーン（制御盤）でワーカーノードを管理する。
コントロールプレーンは5つのコンポーネントで構成されている。
※etcd以外は、Kubernetesに入っているのでこの2つをインストールすればOK

ワーカーノードでは、kube-letとkube-proxyが動く。

Kubernetesは、「コンテナをX個、ボリュームを○個で構成する」といったものをYAML形式のファイルで定義する。その手順で自動でコンテナを作ったり消したりしながら維持するのが基本。

 簡単な違い
Docker Compose→作って終わる
K...]]></description><link>https://zenn.dev/koounosuke/articles/340bb69aa32522</link><guid isPermaLink="true">https://zenn.dev/koounosuke/articles/340bb69aa32522</guid><pubDate>Wed, 06 Nov 2024 15:01:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tKukhFC3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kubernetes%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E2%25EF%25BC%2588%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E6%25B7%25B1%25E5%25A0%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JavaJava%25E7%2594%25B7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHBqUDlLS2pjOGRlQ050RUQyVmYyOEZZVUU0TWFkQVZoRS1GNXpDLXd3YmJnYXZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JavaJava男</dc:creator></item><item><title><![CDATA[【環境構築】Docker + Dev ContainerでサクッとJava環境構築してみた]]></title><description><![CDATA[Javaのプロジェクトを起こすまでもないけれど、サクッと簡単にJavaを実行したい…
といったお悩みに応えるべく、環境構築を行った時の記録です。
環境使用方法まで解説していますので、ぜひ最後までご覧ください。

 開発環境・使用ツール

Windows の方はこちら

WSL2
Docker Desktop
Visual Studio Code


Macbook Pro (Intel) の方はこちら

Docker Desktop
Visual Studio Code




 環境構築方法

 Step 0: VS Code拡張機能【Dev Container】のインストール
拡張機...]]></description><link>https://zenn.dev/mamenz752/articles/8d8cf9d59b54d3</link><guid isPermaLink="true">https://zenn.dev/mamenz752/articles/8d8cf9d59b54d3</guid><pubDate>Wed, 06 Nov 2024 14:55:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MODr4irm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2591Docker%2520%252B%2520Dev%2520Container%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8Java%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2583%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmODcyNjY3YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>サヤ</dc:creator></item><item><title><![CDATA[Grafana+Prometheus+k6で作るパフォーマンス測定基盤]]></title><description><![CDATA[
 概要

Grafana
Prometheud
kd
を用いてバックエンドアプリケーションのAPIパフォーマンス測定基盤を作成します。
localで動作するアプリケーションの簡便なパフォーマンス確認に使用できるようにdocker-composeを使用して立ち上げと破棄が楽な構成となっています。


 背景
バックエンドアプリケーションを動作させる基盤においてパフォーマンス測定は確実に行われると思います。
そんな中で本番環境や開発環境でのチェックも簡単に行えるようになっているのですが、開発環境に上げるその前にlocal上で立ち上げたアプリケーションのパフォーマンスに問題がないか簡単にチェ...]]></description><link>https://zenn.dev/tomona/articles/2dfb2ff7b41237</link><guid isPermaLink="true">https://zenn.dev/tomona/articles/2dfb2ff7b41237</guid><pubDate>Wed, 06 Nov 2024 11:54:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NlJzCvus--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Grafana%252BPrometheus%252Bk6%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25B8%25AC%25E5%25AE%259A%25E5%259F%25BA%25E7%259B%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomona%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUdaUUt6VlE0R21haS03c0FiSENlTjFkVnc2ZzUyY19zMUtxbTlJdzdmPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomona</dc:creator></item><item><title><![CDATA[Docker Desktopで無効化するべき設定。ECR ”400 Bad Request failed commit on ref”の便り]]></title><description><![CDATA[開発PCからECRへのコンテナイメージPushがエラーになる原因調査の結果、2024年11月現在ではDocker Desktopで Use containerd for pulling and storing images 設定を無効化すると幸せになれるという話をします。マルチプラットフォームイメージに起因する事象のため、マルチプラットフォームイメージも深掘りします。

 背景
IMMUTABLEなECR（イメージタグの上書き禁止設定がされたECR）へ開発PCからコンテナイメージをPushしたところfailed commit on ref "manifest-sha256:dd***b1...]]></description><link>https://zenn.dev/kuritify/articles/docker-descktop-setting-from-ecr-400-bad-request</link><guid isPermaLink="true">https://zenn.dev/kuritify/articles/docker-descktop-setting-from-ecr-400-bad-request</guid><pubDate>Wed, 06 Nov 2024 06:54:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K6q2ys39--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%25E3%2581%25A7%25E7%2584%25A1%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25E8%25A8%25AD%25E5%25AE%259A%25E3%2580%2582ECR%2520%25E2%2580%259D400%2520Bad%2520Request%2520failed%2520comm...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258A%25E3%2581%25A6%25E3%2581%2583%25E3%2581%25B5%25E3%2581%2581%25E3%2581%2584%2520%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMGM5YzMzNmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くりてぃふぁい 👾</dc:creator></item><item><title><![CDATA[Kubernetesの基礎1（簡単な説明）]]></title><description><![CDATA[
 Kubernetes（クーバネティス）は、アプリケーションを動かす「コンテナ」という小さなパッケージを効率的に管理するためのオープンソースのプラットフォーム
目次
1.目的
2.主な機能
3.マスターノードとワーカーノードについて
4.その他知識

 1.Kubernetesの目的

 ➀多くのコンテナを自動で管理・配置してくれるツール
→つまり、どのサーバーでどのコンテナを動かすかを自動で決め、効率的にリソースを使えるようにしてくれる

 ➁アプリが増えても自動でスケールアップ（追加）やスケールダウン（削減）してくれたり、万が一どこかで障害が発生しても、影響を最小限に抑えながら別の...]]></description><link>https://zenn.dev/koounosuke/articles/0e15bc9d3c9d9d</link><guid isPermaLink="true">https://zenn.dev/koounosuke/articles/0e15bc9d3c9d9d</guid><pubDate>Wed, 06 Nov 2024 06:51:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YsmeYRgQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kubernetes%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E1%25EF%25BC%2588%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E8%25AA%25AC%25E6%2598%258E%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JavaJava%25E7%2594%25B7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHBqUDlLS2pjOGRlQ050RUQyVmYyOEZZVUU0TWFkQVZoRS1GNXpDLXd3YmJnYXZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JavaJava男</dc:creator></item><item><title><![CDATA[Windows 11 で docker を動かす]]></title><description><![CDATA[今回は、Windows 11で wsl2 がコマンドで簡単にインストールできるようになったので、さっとインストールして、Ubuntuを起動、そこでdockerを動かすまでの手順をまとめます。
https://xtech.nikkei.com/atcl/nxt/column/18/01863/112600005/

 WSLとは
Windows Subsystem for Linux の略で、Windows 上で Ubuntu などの Linux ディストリビューションを実行する機能である。
https://www.tohoho-web.com/ex/wsl.html

 実行環境

エデ...]]></description><link>https://zenn.dev/soshimiyamoto/articles/cc58ff7aa5fe80</link><guid isPermaLink="true">https://zenn.dev/soshimiyamoto/articles/cc58ff7aa5fe80</guid><pubDate>Wed, 06 Nov 2024 06:13:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1ZPC-_66--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%252011%2520%25E3%2581%25A7%2520docker%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2584%25E3%2582%2582%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjNmY2Y2ViM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みやもと</dc:creator></item><item><title><![CDATA[【Docker】unauthorized: authentication required]]></title><description><![CDATA[
 はじめに
Azure Container Registryにdocker push をすると次のエラーが出てきました。
unauthorized: authentication required
% docker push &lt;registry_name&gt;.azurecr.io/&lt;docker_image&gt;:&lt;version&gt;
The push refers to repository [&lt;registry_name&gt;.azurecr.io/&lt;docker_image&gt;]
012hoge767d3: Preparing 
34...]]></description><link>https://zenn.dev/headwaters/articles/2ed524bf89d27a</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/2ed524bf89d27a</guid><pubDate>Wed, 06 Nov 2024 01:54:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XVIiatJH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591unauthorized%253A%2520authentication%2520required%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:onoda_shun%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYmVhZTM2NWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onoda_shun</dc:creator></item></channel></rss>