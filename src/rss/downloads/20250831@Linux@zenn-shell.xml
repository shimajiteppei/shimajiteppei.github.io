<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「shell」のフィード]]></title><description><![CDATA[Zennのトピック「shell」のRSSフィードです]]></description><link>https://zenn.dev/topics/shell</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/c8d33e6510.jpeg</url><title>Zennの「shell」のフィード</title><link>https://zenn.dev/topics/shell</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 31 Aug 2025 07:54:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/shell/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[rmは危険だから代替を使うように矯正したいけど明らかに消して良いファイルに対してはrmを使いたい]]></title><description><![CDATA[ファイル削除のために使う、みんな大好きrmコマンド。これの安全対策を取りました。
筆者が使用しているmacOS環境での動作を前提にしています。

 rmは危険
rmは基礎中の基礎コマンドですが、「ゴミ箱へ送る」のとはちがい、ほんとうにファイルが削除されてしまいます。
ファイルをgit管理するなど、バックアップを取っていれば復旧は可能ですが、悲劇はそういったバックアップがないときに発生するものです。新規作成したばかりでgit addする前のファイルとかね。
手が滑ってrmして消してしまうことを防ぐため、筆者は以下のようなエイリアスを設定し、確認を挟むようにしていました。
alias rm=...]]></description><link>https://zenn.dev/kawarimidoll/articles/70e473a198badf</link><guid isPermaLink="true">https://zenn.dev/kawarimidoll/articles/70e473a198badf</guid><pubDate>Fri, 29 Aug 2025 12:09:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aokkMUAd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rmrm%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kawarimidoll%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxNjFiNWRjZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kawarimidoll</dc:creator></item><item><title><![CDATA[[WSL] 時間がかかる処理をターミナルで実行すると、終わったタイミングで画面に通知する自作コマンド]]></title><description><![CDATA[以前に mac で時間がかかる処理をターミナルで実行すると、終わったタイミングで画面に通知する自作コマンドを作成したのですが、
https://zenn.dev/tkmfujise/articles/e8b3a9b9719422
それの Windows/WSL 版です。

 SnoreToast をインストール
トーストを表示できれば何でもいいんですが、以下を使いました。
https://github.com/KDE/snoretoast

 ok コマンドを作成
D:\Apps ディレクトリに保存したので、/mnt/d/Apps/snoretoast_v0.5.2-x64/bin/Sn...]]></description><link>https://zenn.dev/tkmfujise/articles/420bbcf72010ff</link><guid isPermaLink="true">https://zenn.dev/tkmfujise/articles/420bbcf72010ff</guid><pubDate>Sun, 24 Aug 2025 14:18:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ht2zG9K---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BWSL%255D%2520%25E6%2599%2582%25E9%2596%2593%25E3%2581%258C%25E3%2581%258B%25E3%2581%258B%25E3%2582%258B%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2580%2581%25E7%25B5%2582%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkmfujise%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WkRseXBFekRMdUdCUEowOWI4XzQ1Z0xSVlNhekEwQm9jR2ZhRWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkmfujise</dc:creator></item><item><title><![CDATA[セキュリティ・キャンプ2025 ジュニア『オリジナルのコマンドを作ろう！』講義資料公開]]></title><description><![CDATA[セキュリティ・キャンプ2025 ジュニアの講義『オリジナルのコマンドを作ろう！』で中学生にシェル芸・Git・正規表現を叩き込んだときの資料を公開しました。

講義時間：4時間
https://www.ipa.go.jp/jinzai/security-camp/2025/camp/junior/program.html#j1
ぜひご活用ください！
今後に向けて、ご意見やフィードバックをお待ちしております。
]]></description><link>https://zenn.dev/asusn/articles/8b19e6110006c7</link><guid isPermaLink="true">https://zenn.dev/asusn/articles/8b19e6110006c7</guid><pubDate>Sun, 17 Aug 2025 13:32:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AZhVQjEu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%25972025%2520%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25A2%25E3%2580%258E%25E3%2582%25AA%25E3%2583%25AA%25E3%2582%25B8%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%25E3%2580%258F%25E8%25AC%259B%25E7%25BE%25A9%25E8%25B3%2587%25E6%2596%2599%25E5%2585%25AC%25E9%2596%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:asusn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXhRd0E2aHhFMEVoQnc2TmJpenRXc1hCVmZ4WmgtWmV3ZHhMTjFSQ040aUczdkZtOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asusn</dc:creator></item><item><title><![CDATA[AWKを超えて：HaskellをUnixパイプラインに持ち込む]]></title><description><![CDATA[
 1. 開発者の日常から生まれた課題

 「実務でもっとHaskellを使いたい。」
関数型プログラミングの美しさを知ってしまった開発者にとって、これは切実な願いです。しかし現実には「実用的でない」「導入コストが高い」といった理由で敬遠され、職場でHaskellを使う機会はほとんどありません。
せめて日常のちょっとした作業でHaskellを使えないでしょうか？ふと見ると、シェルのパイプラインはまるで関数合成のようです。
cat file | grep pattern | sort | uniq
パイプライン = 関数合成。この直感に「Haskellが入り込めるはずだ」という思いが強まり...]]></description><link>https://zenn.dev/koheiwada/articles/d10e206d9e66f0</link><guid isPermaLink="true">https://zenn.dev/koheiwada/articles/d10e206d9e66f0</guid><pubDate>Sat, 16 Aug 2025 04:41:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L0JDjaBK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWK%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2588%25E3%2581%25A6%25EF%25BC%259AHaskell%25E3%2582%2592Unix%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AB%25E6%258C%2581%25E3%2581%25A1%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kohei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2NGViNTkyYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kohei</dc:creator></item><item><title><![CDATA[Systemdのlogを見るのに便利なコマンド(journalctl)]]></title><description><![CDATA[
 journalctl
一番オーソドックス. Systemdで管理されたアプリのログを見るためのコマンド.
本気で知りたいならman journalctl とか journalctl -hで見てもらえると助かるパスカル(ジョイマン).

 よく使うオプション

 -r, --reverse
逆順で表示する. つまり, 最新のものが一番上にくる. 最新のログが見たいときは結構便利
# 最新のものから表示
$ journalctl -r

 -n, --lines
最後のn行を表示する. tail コマンドに近い.
# 最後の100行を表示する
$ journalctl -n 100

 ...]]></description><link>https://zenn.dev/supurazako/articles/5c8453be5fc15c</link><guid isPermaLink="true">https://zenn.dev/supurazako/articles/5c8453be5fc15c</guid><pubDate>Wed, 13 Aug 2025 13:02:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GBqnj8VR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Systemd%25E3%2581%25AElog%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2528journalctl%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:supurazako%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzUyVEFlamlSSnl0SndsQkk5a3dOZGc4M3pwVUlRYWxzUmJQQWpfRTgtbGo4aWdQSlU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>supurazako</dc:creator></item><item><title><![CDATA[新入社員PCセットアップが5分で完了！? Bash×AppleScriptで作る自動化スクリプト]]></title><description><![CDATA[
 インターンで作った「PCキッティング自動化スクリプト」を紹介
初めまして！文系からフルスタックエンジニアを目指している大学生のIryuと申します！！
現在医療系スタートアップでインターンをしているのですが、このタスクは記事化してもいいよと許可をいただいたということで、今回は非エンジニアの事務メンバーでも使える（コマンド操作ほぼなし） 、Mac の初期設定が自動で完了する「PCキッティング自動化スクリプト」を紹介します！
このスクリプトを作ってから、実質作業時間は 30分→5分 に短縮し、事務メンバーから好評をいただきました！予算をかけずにサクッとMacの初期設定を自動化したい人はぜひ...]]></description><link>https://zenn.dev/iryu/articles/48a64508c4354b</link><guid isPermaLink="true">https://zenn.dev/iryu/articles/48a64508c4354b</guid><pubDate>Sun, 10 Aug 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KXDXX4ox--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E5%2585%25A5%25E7%25A4%25BE%25E5%2593%25A1PC%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%258C5%25E5%2588%2586%25E3%2581%25A7%25E5%25AE%258C%25E4%25BA%2586%25EF%25BC%2581%253F%2520Bash%25C3%2597AppleScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Iryu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxMjU4NjNhMzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Iryu</dc:creator></item><item><title><![CDATA[開発に使っているアプリケーションリストアップしてみた]]></title><description><![CDATA[今回は普段の開発作業などで利用しているアプリケーションについて一覧にしてみました。

 メモ系

 Notion
Notionは個人環境でドキュメント管理やメモとかで多用しています。ブログネタ考えたりナレッジ蓄積に大いに役立っています。
https://www.notion.com/ja

 IDE系

 Cursor
Cursorはもう説明はいらないでしょう。みなさんお馴染みのAIコードエディタです。小規模な開発はvimを使っているのですが、大規模なものになるとCursorを使っています。
https://cursor.com/ja

 描画系

 draw.io
アーキテクチャ図とか...]]></description><link>https://zenn.dev/akasan/articles/469eda61a31bfc</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/469eda61a31bfc</guid><pubDate>Sat, 09 Aug 2025 13:25:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vn02r3HS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[HOGE=xxx && コマンドの挙動を調べる]]></title><description><![CDATA[
 遭遇したこと
以下のコマンドを実行するシェルを実行したら、uvicorn内で動くアプリケーションにHOGEという変数が渡らないということがあった。
HOGE=xxx &amp;&amp; \
uvicorn main:app --port 8080
&amp;&amp; は 左のコマンドの終了ステータス(echo $?)が0のときに右のコマンドが実行されるやつ。
なので、HOGE=xxxとuvicornはそれぞれ別コマンド扱いだから、反映されていなかったのだろうか？と思い、
HOGE=xxx \
uvicorn main:app --port 8080
こうすればうまく動いた。めでた...]]></description><link>https://zenn.dev/jnuank/articles/3d6b3d6e03c9df</link><guid isPermaLink="true">https://zenn.dev/jnuank/articles/3d6b3d6e03c9df</guid><pubDate>Tue, 05 Aug 2025 00:07:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MHEdOpOK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HOGE%253Dxxx%2520%2526%2526%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jnuank%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyNzY2NGQzOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jnuank</dc:creator></item><item><title><![CDATA[[VS Code] VS Code と Terminal の相互オープン]]></title><description><![CDATA[
 Overview
VS Code と terminal を相互にオープンする方法のメモ。

 ✅️ Terminal → VS Code

 Prepare
Terminal で「VS Code を開くコマンド」が使える様にします。


CMD + Shift + P でコマンドパレットを開く

"shell code" で検索

"Shell Command: Install 'code' command in PATH" を選択してインストール




 Command
Terminal で以下のコマンドを入力すると、其のディレクトリで VS Code が開きます。
code ....]]></description><link>https://zenn.dev/steweucen/articles/aafe3919cf2366</link><guid isPermaLink="true">https://zenn.dev/steweucen/articles/aafe3919cf2366</guid><pubDate>Sat, 02 Aug 2025 18:19:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--syhgmoig--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BVS%2520Code%255D%2520VS%2520Code%2520%25E3%2581%25A8%2520Terminal%2520%25E3%2581%25AE%25E7%259B%25B8%25E4%25BA%2592%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Stew%2520Eucen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l3V2pZSThEakY1Z0pjNTFNem9NWWVMc1gtWml1eVQ0T3hLOU1GaEE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Stew Eucen</dc:creator></item><item><title><![CDATA[シェルスクリプトでファイルやコマンドの実行結果を1行ずつ処理する]]></title><description><![CDATA[
 やりたいこと
シェルスクリプトでファイルやコマンドの実行結果を1行ずつ処理したい。

 方法
以下のように while read を使えばよい。

 ファイルの各行を処理
# ファイルの各行を処理
while IFS= read -r line; do
    echo "${line}"
done &lt; test.txt
# 実行結果
[profile A]
credential_source = Ec2InstanceMetadata
role_arn = arn:aws:iam::111111111111:role/RoleA
role_session_name = Pro...]]></description><link>https://zenn.dev/namusour0763/articles/shellscript-lines-20250730</link><guid isPermaLink="true">https://zenn.dev/namusour0763/articles/shellscript-lines-20250730</guid><pubDate>Tue, 29 Jul 2025 16:50:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_3vI-82D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2584%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E7%25B5%2590%25E6%259E%259C%25E3%2582%25921%25E8%25A1%258C%25E3%2581%259A%25E3%2581%25A4%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2582%2580%25E3%2582%25B5%25E3%2583%25AF%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHpGRXZZNXNjRTlmbHkxcmdzbGxQSWZjLXJVR0dldlNtRF9ubnNXRVh4OHU0S09tcz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なむサワー</dc:creator></item><item><title><![CDATA[せっかくClaude Codeがサジェストしてるし、最も簡単で・最も素朴で・一瞬で済む、git-worktreeへの移行方法を教える]]></title><description><![CDATA[!
この記事は30%くらい、Claude Codeが書きました。


 git-worktreeとは？
git-worktreeは、同じGitリポジトリから複数の作業ディレクトリを作成できる機能です。
通常のGitでは、一つのリポジトリに対して一つの作業ディレクトリしか持てませんが、git-worktreeを使うことで、異なるブランチを異なるディレクトリで同時に作業できるようになります。
Git - git-worktree Documentation

 使用例
$ git worktree add ../feature-branch feature-branch
$ git work...]]></description><link>https://zenn.dev/aiya000/articles/cb55bcdc12b137</link><guid isPermaLink="true">https://zenn.dev/aiya000/articles/cb55bcdc12b137</guid><pubDate>Sun, 27 Jul 2025 13:19:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---PtLQfHU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259B%25E3%2581%25A3%25E3%2581%258B%25E3%2581%258FClaude%2520Code%25E3%2581%258C%25E3%2582%25B5%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%2581%25E6%259C%2580%25E3%2582%2582%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25A7%25E3%2583%25BB%25E6%259C%2580%25E3%2582%2582%25E7%25B4%25A0%25E6%259C%25B4%25E3%2581%25A7%25E3%2583%25BB%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E6%25B8%2588%25E3%2582%2580%25E3%2580%2581git-worktree%25E3%2581%25B8...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2582%2584%2520-%2520aiya000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OWE2OWVmNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あいや - aiya000</dc:creator></item><item><title><![CDATA[【Linux】find コマンド徹底活用術]]></title><description><![CDATA[
 はじめに
実務でよく使う「権限変更」「所有者変更」「除外検索」などのテクニックを、find コマンドでの具体例を交えて紹介します。


 一括変更

 ディレクトリ・ファイルの権限を一括変更する
目的 ：
/Apl/hogehoge/app 配下のすべてのディレクトリとファイルのパーミッションを 775 に変更する。
find /Apl/hogehoge/app -type d -exec chmod 775 {} \;
find /Apl/hogehoge/app -type f -exec chmod 775 {} \;
解説 ：


-type d ：ディレクトリのみ対象

-...]]></description><link>https://zenn.dev/wan0ri/articles/8-find-commands</link><guid isPermaLink="true">https://zenn.dev/wan0ri/articles/8-find-commands</guid><pubDate>Sat, 26 Jul 2025 03:29:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pCwQ52wJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Linux%25E3%2580%2591find%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E5%25BE%25B9%25E5%25BA%2595%25E6%25B4%25BB%25E7%2594%25A8%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wan0ri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzM2M3Y2U5OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wan0ri</dc:creator></item><item><title><![CDATA[便利なShellの書き方]]></title><description><![CDATA[Shell スクリプトを書くときの個人的なテンプレ、ノウハウをまとめました

 おまじない
ほぼ全Shellファイルに書いてるおまじない


!/bin/bash はシェバングと言って、スクリプトを実行するシェルをOSに指定するもの

set -xue はスクリプトの実行時にエラーを出力するための設定


-x 実行コマンドの表示

-u 未定義の変数を使用したときにエラーを出す

-e コマンドが失敗したときにスクリプトを終了する



$(cd "$(dirname "$0")"; pwd) はshファイルの配置ディレクトリに移動&amp;絶対パスを取得するための処理

#!/bin...]]></description><link>https://zenn.dev/slopwelljp/articles/075ad5e056ed14</link><guid isPermaLink="true">https://zenn.dev/slopwelljp/articles/075ad5e056ed14</guid><pubDate>Tue, 22 Jul 2025 12:59:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5RlkhPyp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAShell%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2582%258D%25E3%2581%25A3%25E3%2581%25BA%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlYTkxZDE2M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すろっぺる</dc:creator></item><item><title><![CDATA[Claude Code（CLI）開発の生産性を上げる "ショートカットキー" 早見表 ⌨️]]></title><description><![CDATA[!
この記事は、ほとんど Gemini CLI に執筆してもらいました。人によるファクトチェック済みです。


 はじめに
ターミナル（CLI）での作業を高速化する ショートカットキー をまとめました。
最近Claude Codeを活用したAI駆動開発を日々行う中で、CLIを使う時間がめちゃくちゃ増えたので、便利なショートカットキーないかな？と思って、Gemini CLIにまとめてもらいました！🎁
最近は AI 駆動開発で、Claude Code や Gemini CLI など CLI ベースの AI ツール を活用するケースが急増しています。さらに、Git worktree を用いた並...]]></description><link>https://zenn.dev/camoneart/articles/a20d6e0aa17b9e</link><guid isPermaLink="true">https://zenn.dev/camoneart/articles/a20d6e0aa17b9e</guid><pubDate>Tue, 22 Jul 2025 02:42:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z82BXYqx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25EF%25BC%2588CLI%25EF%25BC%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E7%2594%259F%25E7%2594%25A3%25E6%2580%25A7%25E3%2582%2592%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%2520%2522%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25AD%25E3%2583%25BC%2522%2520%25E6%2597%25A9%25E8%25A6%258B%25E8%25A1%25A8%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aoyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMWRlYTNkMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aoyama</dc:creator></item><item><title><![CDATA[タイムゾーンを指定してテストを実行]]></title><description><![CDATA[UTCでテストを実行
TZ=UTC pnpm test
]]></description><link>https://zenn.dev/purratto/articles/c44ba5ee4e08e1</link><guid isPermaLink="true">https://zenn.dev/purratto/articles/c44ba5ee4e08e1</guid><pubDate>Sat, 19 Jul 2025 04:43:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XVjnMiYo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purratto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODdjNTc4MzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purratto</dc:creator></item><item><title><![CDATA[‘echo‘ってナニモン？]]></title><description><![CDATA[
 はじめに
プログラミング初学者にとって、ターミナルやシェルスクリプト、GitHubなどで echoってヤツよく見かけますよね！、「いったい何に使うの？」と思ったことはありませんか？
私もC言語を学習中に、AIにコンパイル警告について質問していたら、コンパイルコマンドで echo "コンパイル成功！" などと入れてきて、「なんこれ？余計な事すんなや！！」と思いました(^_^;)
この記事では、echoコマンドについて初学者なりにまとめました。

 echoコマンドとは？
echo は文字列を出力するコマンドです。なんだ、めっちゃシンプルじゃん！
echo "Hello World"
実...]]></description><link>https://zenn.dev/wista/articles/4c55ea14cebe97</link><guid isPermaLink="true">https://zenn.dev/wista/articles/4c55ea14cebe97</guid><pubDate>Tue, 15 Jul 2025 21:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B_OsaCIx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E2%2580%2598echo%25E2%2580%2598%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%258A%25E3%2583%258B%25E3%2583%25A2%25E3%2583%25B3%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wista%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZWhIaEZaUVh5UjBMOFFjMk9jWWNUTkw5QXJYeFAtMUg0RU1BbVVuZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wista</dc:creator></item><item><title><![CDATA[パイプで途中経過を表示したい時の解決法]]></title><description><![CDATA[今日は、シェルスクリプトについて書きます。
シェルのパイプで色々と繋げて処理をする際に、途中経過を表示したい時がありました。
どうやったら綺麗に解決できるかと思って、検討しました。

 解決策
&gt;&amp;2 をつけることで、途中経過を表示できます。
echo "hello world" | xxd -p &gt;&amp;2 | xxd -r -p

 解説
このサンプルコードは、hello world を、16進数表示をして、68656c6c6f20776f726c640aとし、もう一度、hello world に戻すというコードです。
最近OSレベルのコードにハマっているため...]]></description><link>https://zenn.dev/t0/articles/30655fd15e54fb</link><guid isPermaLink="true">https://zenn.dev/t0/articles/30655fd15e54fb</guid><pubDate>Fri, 11 Jul 2025 05:42:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FkbSVEHC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A7%25E9%2580%2594%25E4%25B8%25AD%25E7%25B5%258C%25E9%2581%258E%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0NDBhYjE2MmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つ</dc:creator></item><item><title><![CDATA[Claude Codeのbashコマンドを柔軟に制御するツールを作ってみた（rm -rf ~/も防げます）]]></title><description><![CDATA[
 はじめに
Claude Code は便利ですが、rm -rf ~/のような危険なコマンドも実行してしまう可能性があります。そこで、Claude Code のhooks 機能を活用して、bash コマンドの実行を安全かつ柔軟に制御するツールを作ってみました。

実際に rm -rf ~/をブロックしているところ

 セットアップ
https://github.com/miyaoka/claude-hooks

 1. リポジトリのクローン
git clone https://github.com/miyaoka/claude-hooks.git

 2. settings.json へ...]]></description><link>https://zenn.dev/studio/articles/ec90908f280c2e</link><guid isPermaLink="true">https://zenn.dev/studio/articles/ec90908f280c2e</guid><pubDate>Thu, 10 Jul 2025 16:16:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XFEbpnuK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25E3%2581%25AEbash%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AB%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588rm%2520-rf%2520%7E%252F%25E3%2582%2582%25E9%2598%25B2%25E3%2581%2592%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:miyaoka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwYmNhNWZkODEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Studio%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlYTU4ZTc5ZDAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyaoka</dc:creator></item><item><title><![CDATA[【今更】zshデビュー：bashからの移行体験記]]></title><description><![CDATA[はじめまして。nemunekoです=^_^=
長い間、私はbashを使い続けてきました。特に不満もなかったしね。
でも、最近勉強会とかでさまざまなツールやコマンドなどをいる機会があり、その中で「zsh」というシェルが紹介されていたので触ってみました。
今回は、zshへの移行手順と簡単な所感を書いてみました。
それではどうぞ。

 zshのインストール
私の環境はUbuntu on WSLなので、aptコマンドでサクッとインストールしました。
# パッケージリストを更新して
sudo apt update
# zshをインストール！
sudo apt install zsh
インストールが...]]></description><link>https://zenn.dev/neruneko/articles/afda78a6cef138</link><guid isPermaLink="true">https://zenn.dev/neruneko/articles/afda78a6cef138</guid><pubDate>Thu, 10 Jul 2025 10:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fpPWBLZb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BB%258A%25E6%259B%25B4%25E3%2580%2591zsh%25E3%2583%2587%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25EF%25BC%259Abash%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%25E4%25BD%2593%25E9%25A8%2593%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nemuneko_san%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOWZiNGVlMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nemuneko_san</dc:creator></item><item><title><![CDATA[rmが怖いのでWindowsのゴミ箱にファイルを送るコマンドを作った]]></title><description><![CDATA[Git Bash for WindowsやMSYS2を使っているとき、ついrmコマンドでファイルを完全削除してしまい困ったことはありませんか？
わたしはたくさんあります。


プロジェクトの掃除中…
gitにコミットする前の必要なファイルまで削除してしまった


もう使わないと思って削除したけど…
後々必要になり復元したくなった


タイプミスで…
rm * .logと*の後ろにスペースが入ってしまい、すべてが消え去ってしまった…。


この記事で紹介するtrashコマンドはこれらの問題を解決します。
mvで退避させる方法と違い、Windows標準のゴミ箱で一元管理できるのが利点です。
...]]></description><link>https://zenn.dev/atilol/articles/6aa8148f700247</link><guid isPermaLink="true">https://zenn.dev/atilol/articles/6aa8148f700247</guid><pubDate>Tue, 08 Jul 2025 04:44:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XBQWmVQ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rm%25E3%2581%258C%25E6%2580%2596%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7Windows%25E3%2581%25AE%25E3%2582%25B4%25E3%2583%259F%25E7%25AE%25B1%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atilol%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>atilol</dc:creator></item></channel></rss>