<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 19 Dec 2024 12:04:25 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[学園祭にモバイルオーダーを導入した #1]]></title><description><![CDATA[これは team411アドベントカレンダー 16日目の記事です。
前回はかずたつさんの「謎のプログラミング言語『DNCL』を書いてみたい」でした！defineを使って日本語で表現していてとても面白いです！
今回の記事では、2024年に東京都立大学で行われた第20回みやこ祭と、電気通信大学で行われた第74回調布祭において私たちteam411が導入したモバイルオーダーについて、自分の担当したフロントエンドの良かった点と改善点を紹介し、記事として記録しようと思います！
なお、12月下旬には同じくteam411アドベントカレンダーにて、モバイルオーダー中編・後編が投稿されるので、そちらも合わせて...]]></description><link>https://zenn.dev/team411/articles/89bd1c53c7a211</link><guid isPermaLink="true">https://zenn.dev/team411/articles/89bd1c53c7a211</guid><pubDate>Thu, 19 Dec 2024 05:03:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V6-n_Ccj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E5%259C%2592%25E7%25A5%25AD%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%2520%25231%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Akaaku%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YzQxYWIxYjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:team411%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFkyUEJwUGJvR1k5SkJtUnpnTWc2NHdYd0VtYml2OXNzdjU3SFl4UDNHPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akaaku</dc:creator></item><item><title><![CDATA[[TypeScript] 分配の応用例: 関数とその引数の組み合わせのチェック]]></title><description><![CDATA[
 やりたいこと
以下のような 関数(fn) と その関数の引数(arg) の組 Call があるとき、入力に対応した Call を返す関数の型付けを考える。
type Call&lt;T extends (...arg: any) =&gt; any&gt; = {
  fn: T
  arg: Parameters&lt;T&gt;
}
具体例として、 input に num が含まれる場合は ( fn_n と input.num ) を、それ以外の場合は ( fn_s と input.str ) を返す関数( createCall )は以下のようになる。
const fn_n = ...]]></description><link>https://zenn.dev/ykrods/articles/3c96ef1476bb1e</link><guid isPermaLink="true">https://zenn.dev/ykrods/articles/3c96ef1476bb1e</guid><pubDate>Thu, 19 Dec 2024 04:57:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RUX-U_DY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520%25E5%2588%2586%25E9%2585%258D%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%25E4%25BE%258B%253A%2520%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykrods%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlBRUzctLVUzaHJPQ3B3bVViRkpJZmRoTEktY0pUcWVpRVRSVTQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykrods</dc:creator></item><item><title><![CDATA[noUncheckedIndexedAccess / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の11日目です。昨日は『実例 hooksTestingTools()』を紹介しました。

 配列アクセス時のundefinedリスクを検出するオプション
TypeScript 4.1から--noUncheckedIndexedAccessというコンパイラオプションが追加されています。これは、配列やタプルに添字アクセスした際、その要素が存在しない可能性を型で表現するオプションです。strictを有効にしていても、このオプションはデフ...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9dmnw579cr6z7mk635</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9dmnw579cr6z7mk635</guid><pubDate>Thu, 19 Dec 2024 03:22:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yboXnMHN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:noUncheckedIndexedAccess%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[実例 hooksTestingTools() / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の10日目です。昨日は『実例 is()』を紹介しました。

 runRenderHook() につきまとう副作用の取り扱いとトラブル
2年前のカレンダーでは、runRenderHook()という実例を紹介し、@testing-library/react の renderHook()活用でTypeScriptの工夫をお見せしました。しかし、あれから実務で2年ほど運用を続けるといくつか課題が浮き彫りになりました。
renderHook...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9dk3nh5t06je4ckzvn</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9dk3nh5t06je4ckzvn</guid><pubDate>Thu, 19 Dec 2024 03:22:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IuyvWOku--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E4%25BE%258B%2520hooksTestingTools%2528%2529%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[実例 is() / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の9日目です。昨日は『実例 ExtractKeyOf』を紹介しました。

 typeプロパティを持つオブジェクトとDiscriminated Union
Web開発で扱うデータ構造の中には、typeプロパティを持ってユニオン型として表現するパターンがよくあります。たとえば、以下のような「画像」と「動画」という2種類のデータを識別するためにtypeキーを使う例が典型です。
type Image = Readonly&lt;{
  t...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9djkbz0xz6q52w82sh</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9djkbz0xz6q52w82sh</guid><pubDate>Thu, 19 Dec 2024 03:22:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fDvpvJRJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E4%25BE%258B%2520is%2528%2529%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[シンプルなイベントソーシングをC#、Rust、Goに続き、Typescriptで作ってみた]]></title><description><![CDATA[株式会社ジェイテックジャパン CTOの高丘 @tomohisaです。
Sekibanという、C#のイベントソーシングフレームワークを作っています。
https://github.com/J-Tech-Japan/Sekiban
その新しいコンセプト（関数型で効率的な書き方）のために、まず、インメモリで動作する、イベントソーシングのコンセプトをC#で作りました。そちらの記事はこちら。
https://zenn.dev/jtechjapan_pub/articles/f7968a3f2fb6d5
C#で2日くらいでこれができ、その後、Rustでも苦戦しながら、2日で似たものを作りました。
h...]]></description><link>https://zenn.dev/jtechjapan_pub/articles/d83e90c20917cd</link><guid isPermaLink="true">https://zenn.dev/jtechjapan_pub/articles/d83e90c20917cd</guid><pubDate>Thu, 19 Dec 2024 01:32:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5SKRGDTw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592C%2523%25E3%2580%2581Rust%25E3%2580%2581Go%25E3%2581%25AB%25E7%25B6%259A%25E3%2581%258D%25E3%2580%2581Typescript%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tomohisa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YzA4MzFkMDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUY1NlSXBBM09KME83a1ZzWG1WUjhvYWpqN3RHVVV2QTJDZ2hKS2c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomohisa</dc:creator></item><item><title><![CDATA[TypeScriptのコード分析を楽にする ts-morph入門]]></title><description><![CDATA[
 はじめに
!
修正や追加等はコメントまたはGitHubで編集リクエストをお待ちしております。

この記事はTSKaigi Advent Calendar 2024 19日目の記事です。
https://qiita.com/advent-calendar/2024/tskaigi

 1. ts-morphって何？
TypeScriptプロジェクトを扱っていると、こんな作業で困ったことはありませんか？

「この関数をリネームしたいけど、使用箇所が多すぎて心配...」
「新しいフィールドを追加したら、関連する型定義も全部直さないと」
「外部APIのレスポンス型定義があるけど、バリデーショ...]]></description><link>https://zenn.dev/gmomedia/articles/127ca64e9b7018</link><guid isPermaLink="true">https://zenn.dev/gmomedia/articles/127ca64e9b7018</guid><pubDate>Thu, 19 Dec 2024 01:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QR-81kDf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2520ts-morph%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Riya%2520Amemiya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzOGEzNzc5MTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GMO%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOTk0YWYxZDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Riya Amemiya</dc:creator></item><item><title><![CDATA[NestJS CLSでAsyncLocalStorageを便利に扱う]]></title><description><![CDATA[この記事は株式会社ガラパゴス（有志） Advent Calendar 2024 の19日目です。

 AsyncLocalStorageとは
AsyncLocalStorageとは、非同期処理全体を通じてデータを保持するための仕組みです。Nodeのドキュメントによると、以下のように説明されています。

継続ローカル ストレージを使用すると、状態を保存し、コールバックやプロミス チェーン全体にそれを伝播できます。Web リクエストの存続期間全体、またはその他の非同期期間全体にわたってデータを保存できます。これは、他の言語のスレッド ローカル ストレージに似ています。

要するに、リクエスト...]]></description><link>https://zenn.dev/galapagos/articles/676af437e47b5a</link><guid isPermaLink="true">https://zenn.dev/galapagos/articles/676af437e47b5a</guid><pubDate>Wed, 18 Dec 2024 22:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V5CZVlTP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%2520CLS%25E3%2581%25A7AsyncLocalStorage%25E3%2582%2592%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshiki%2520Abe%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMWFiMTkxYzQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AC%25E3%2583%25A9%25E3%2583%2591%25E3%2582%25B4%25E3%2582%25B9%25EF%25BC%2588%25E6%259C%2589%25E5%25BF%2597%25EF%25BC%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MmRsa3ZQZGEtcWxqNy0yZTk0amFxWXBZU2NiXzctQzhuaXoweG49czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiki Abe</dc:creator></item><item><title><![CDATA[今さら聞けないAngularのフック詳説]]></title><description><![CDATA[おはようございます、こんにちは、こんばんは。@seapolisです。
本記事はAngular Advent Calendar 2024の19日目の記事となります。
私事ではございますが、本記事をもって、Angular Advent Calendarは5年連続の参加となります。
つまり、この間にAngularのバージョンは10も上がったことになりますね。オー怖い。[1]
この5年間でAngularはまるで別物のような進化を遂げ、パラダイムが大きく変化しました。
Standalone Component、Control Flow、Signalsの導入はその最たるものでありますが、そんな中でも...]]></description><link>https://zenn.dev/seapolis/articles/d42aff1904242d</link><guid isPermaLink="true">https://zenn.dev/seapolis/articles/d42aff1904242d</guid><pubDate>Wed, 18 Dec 2024 21:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NtlQI_O3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E3%2581%2595%25E3%2582%2589%25E8%2581%259E%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584Angular%25E3%2581%25AE%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E8%25A9%25B3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B5%25B7%25E9%2583%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dJNklpNUZzZjRHTDJVSXBHODhZUWdQM2JYOG1zbDRyYnRRd2FwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>海都</dc:creator></item><item><title><![CDATA[Angular v19のハイブリッドレンダリングを試す]]></title><description><![CDATA[本記事はAngularアドベントカレンダー2024の18日目の記事です。昨日はnao_yさんでした。
https://qiita.com/advent-calendar/2024/angular

 はじめに
この記事では、Angular v19から開発者プレビューとして入ったサーバールーティングによるハイブリッドレンダリングを試して紹介します。

 ハイブリッドレンダリングとは
ハイブリッドレンダリングは、サーバーサイドレンダリング(SSR)、プリレンダリングまたは静的サイト生成(SSG)、クライアントサイドレンダリング(CSR)を組み合わせて、フロントエンドアプリケーションを最適化す...]]></description><link>https://zenn.dev/voicy/articles/6c1a76652c15f3</link><guid isPermaLink="true">https://zenn.dev/voicy/articles/6c1a76652c15f3</guid><pubDate>Wed, 18 Dec 2024 18:56:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8jfgVsil--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular%2520v19%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:komura-c%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiODU5ZTAwNWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Voicy%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiOWY5NGVjNDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>komura-c</dc:creator></item><item><title><![CDATA[IndeedぽいUIを作る Remix]]></title><description><![CDATA[Remixを使って、以下のようなIndeedぽいUIを作成してみます。


 1. ルーティングの設定
app/
├── routes/
│   ├── _index.tsx
│   ├── joblist.tsx 
│   ├── joblist.$jobId.tsx            
└── root.tsx
│
└── data.ts
求人一覧を表示するルート（joblist.tsx）とその子要素として求人詳細を表示するルート（joblist.$jobId.tsx）を設定します。
親子関係を作ることで、親要素のレイアウトを受け継ぐことができます。
※親要素に&lt;Outle...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/069d3dc75472b8</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/069d3dc75472b8</guid><pubDate>Wed, 18 Dec 2024 16:59:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lrGGkS7s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Indeed%25E3%2581%25BD%25E3%2581%2584UI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520Remix%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDMyNTZiNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tatsuki</dc:creator></item><item><title><![CDATA[Deno  Webサイトをスクレイピングする]]></title><description><![CDATA[denoでWebサイトをスクレイピングする基本的な方法をまとめました。
今回はこのサイトを対象にスクレイピングし、以下画像のボタン内テキストを取得してみます!


 大まかな手順

Webページの取得: fetch APIを使用してスクレイピング対象のWebページのHTMLを取得
HTMLの解析: 取得したHTMLをDOMParserで解析し、DOMを構築
データの抽出: 解析したDOMから、特定のセレクタを使用して必要なデータを含む要素を選択
データの加工: 選択した要素から情報（テキストや属性値など）を抽出し、必要に応じて加工


 実装

 Webページの取得
まずスクレイピング用...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/4f0e4f84152d30</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/4f0e4f84152d30</guid><pubDate>Wed, 18 Dec 2024 16:54:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PfUX0Z7f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%2520%2520Web%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDMyNTZiNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tatsuki</dc:creator></item><item><title><![CDATA[Next.js Route HandlersでHonoを使う]]></title><description><![CDATA[Next.jsのRoute HandlersとHonoを組み合わせて シンプルで型安全なAPIを作成する方法を、以下の素晴らしい記事で拝見したのでやってみました😺
https://blog.stin.ink/articles/hono-nextjs-and-web-standard


HonoでAPIエンドポイントを作成:
app/api/[...route]/route.tsに、ユーザー情報を取得するAPIエンドポイントを定義します。HonoでのAPIはシンプルで、getやpostメソッドを使って、ルートとハンドラーを定義できます。
import { getUser, getUser...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/01d4a5efc2acb8</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/01d4a5efc2acb8</guid><pubDate>Wed, 18 Dec 2024 16:47:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w6oMpXqi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520Route%2520Handlers%25E3%2581%25A7Hono%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDMyNTZiNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tatsuki</dc:creator></item><item><title><![CDATA[.jsと.jsxの違いが気になった]]></title><description><![CDATA[今回は、Reactで使えるJSXについてです。
いままで何気なく使ってた.jsとか.jsxファイルの違いって何だろって疑問に思ってしまったので、調べたことまとめます。

 JSとJSXの違い
まずは、JSとJSXの違いからです。一言で言えば、JS構文をHTML風に書けるようにしたものがJSXです。上位互換みたいなものですね。と言ってもよくわからないと思うので、h1タグにHello world!を埋め込む方法をJS、JSXでそれぞれ見てみます。
// JSで書いた場合
const element = React.createElement(
  "h1",
  { className: "...]]></description><link>https://zenn.dev/sanpi34/articles/9b99b81216b585</link><guid isPermaLink="true">https://zenn.dev/sanpi34/articles/9b99b81216b585</guid><pubDate>Wed, 18 Dec 2024 15:50:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cabLVoSm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:.js%25E3%2581%25A8.jsx%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sanpi34%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTM1NzYwZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sanpi34</dc:creator></item><item><title><![CDATA[Playwright を使ったE2Eテストの導入]]></title><description><![CDATA[!
この記事は BABY JOB Advent Calendar 2024 シリーズ1の19日目の記事です。


 はじめに
この春よりフロントエンドエンジニアとしてキャッシュレス決済サービス「誰でも決済」の開発に携わっております、benzoh です。
そしてこの夏、無事にサービスをリリースすることができました！
この記事では開発開始から今日までに取り組んだことの中で「Playwright を使ったE2Eテストの導入」について共有したいと思います。
特に、QRコードを活用した決済フローのテスト自動化について、実践的な知見を交えながら解説していきます。
なお、本記事は Playwright...]]></description><link>https://zenn.dev/babyjob/articles/1b0dcb31722f1a</link><guid isPermaLink="true">https://zenn.dev/babyjob/articles/1b0dcb31722f1a</guid><pubDate>Wed, 18 Dec 2024 15:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jDQK9f4x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FE2E%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:benzoh%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODk4NDRkMDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BABY%2520JOB%2520%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWemNsZ2JtMzFSX3hEcWJZWHVnRXkwNzNxNDE4SkUyMS1fS1dpdjU4PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>benzoh</dc:creator></item><item><title><![CDATA[実例で理解するゲーム開発のためのマイクロサービス設計]]></title><description><![CDATA[
 はじめに
オンラインゲームの開発で、マイクロサービスアーキテクチャについて学んでいく中で、様々な発見がありました。この記事では、私自身がゲーム開発の現場で経験してきたことを、具体的な実装例と共にお伝えできればと思います。
マイクロサービスは決して銀の弾丸ではありませんが、上手く活用することで複雑な要件を解決できる可能性を秘めています。
まだまだ勉強中の身ではありますが、基本的な考え方から実装のポイントまで、私なりの理解をご紹介させていただきます。

 想定読者

バックエンド開発の基礎知識を持つゲーム開発者
モノリシックなアーキテクチャでの開発経験がある方
システムの分散化を検討して...]]></description><link>https://zenn.dev/nezumizuki/articles/cb038d86b6ef61</link><guid isPermaLink="true">https://zenn.dev/nezumizuki/articles/cb038d86b6ef61</guid><pubDate>Wed, 18 Dec 2024 14:32:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qHB1XDef--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E4%25BE%258B%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXRYZE91dm9hdlRUclRZSVY2eW5ibDdfVHprdXhtb1JUcUlQRGpTaTRfTmZxUnlLdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MI</dc:creator></item><item><title><![CDATA[React19でリリースされたhooksを覚えよう]]></title><description><![CDATA[
 はじめに
12/5に、React19が正式リリースされました。
https://react.dev/blog/2024/12/05/react-19
その中で以下のhooksがstableとしてリリースされたので、使い方など書いていきます。
特にuseActionStateは、かなり便利なhookで、これからかなり使われるようになるhookだと思います。

useActionState
useFormStatus
useOptimistic


 useActionState
useActionStateは、アクションの実行結果を利用したいときに使うhookです。
アクションを実行さ...]]></description><link>https://zenn.dev/ryohei0509/articles/2954632e54c822</link><guid isPermaLink="true">https://zenn.dev/ryohei0509/articles/2954632e54c822</guid><pubDate>Wed, 18 Dec 2024 12:49:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QJuzSXTY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fhooks%25E3%2582%2592%25E8%25A6%259A%25E3%2581%2588%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hukuryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2JhYWM4YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hukuryo</dc:creator></item><item><title><![CDATA[最先端に疲れたTSerのための時代に逆行するRESTっぽいテンプレートCATAPULT]]></title><description><![CDATA[
 背景
React/TypeScriptの進歩が速すぎて新しい機能・設計・概念・ライブラリに追従するのが辛くなってきたベテランは私以外にもいるのではないでしょうか。
技術だけを極めれば良かった若いころは勉強という意識もなく楽しめたのですがおじさんにもなると技術以外にも必要な知識や責任が増えて”最先端のスキルセット”を売りにすることが出来なくなってしまいました。
若手のコードレビューをしていると新機能を使いこなすことよりも、余計なuseEffectを使わないようにするとかページ内に閉じた状態をcontextやJotaiに突っ込まない、あたりの基礎だけ理解してくれれば十分なんだけどなあと思...]]></description><link>https://zenn.dev/solufa/articles/catapult-ts-template</link><guid isPermaLink="true">https://zenn.dev/solufa/articles/catapult-ts-template</guid><pubDate>Wed, 18 Dec 2024 12:49:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4kNLrQA_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E5%2585%2588%25E7%25AB%25AF%25E3%2581%25AB%25E7%2596%25B2%25E3%2582%258C%25E3%2581%259FTSer%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AB%25E9%2580%2586%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258BREST%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588CATAPULT%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Solufa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSSkFIRjk0YjU5N0ZnQmFCbWxYUFBDWmkxYVlYcWdhVE1RanZHPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Solufa</dc:creator></item><item><title><![CDATA[Playwrightで、テスト実行時のブラウザ設定を検証する]]></title><description><![CDATA[
 はじめに
この記事は、テスト自動化あるある言いたい by T-DASH Advent Calendar 2024のシリーズ2、18日目の記事です。
Playwrightでテストを実行する際、設定したブラウザやチャンネルで確実にテストが実行されているか確認したいことがあります。
この記事では、設定方法と動作確認の方法を解説します。

 テスト実行時のブラウザ設定方法
playwright.config.tsでブラウザの設定を指定できます。
以下は、Google Chromeのベータ版を使用する設定例です。
!
Google Chromeのベータ版じゃなくてもいいです。

Playwri...]]></description><link>https://zenn.dev/bono/articles/35f9066598e410</link><guid isPermaLink="true">https://zenn.dev/bono/articles/35f9066598e410</guid><pubDate>Wed, 18 Dec 2024 10:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--48Nqi7Iz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25A7%25E3%2580%2581%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AE%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bono%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjNzVmMWYwNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bono</dc:creator></item><item><title><![CDATA[ゲーム開発における複合的なクエストの開始条件を表現するためにZodのRecursive Typeを利用してみる]]></title><description><![CDATA[RPGなどのゲームにおいて条件を満たしたら何かができるというような条件判定を行うことがしばしばあります。例えばクエストをクリアするためにはほかのクエストをクリアしてなければならないなどです。
そうしたときに条件を以下のようなExpression(式)を組み合わせたJSONで記述できるとうれしいです。
export const quests: Quest[] = [
  // ...
  {
    id: 3,
    name: "宝がある廃墟の炭鉱の島を攻略しろ",
    clearCondition: {
      kind: AND_KIND, // argumentsの条件...]]></description><link>https://zenn.dev/rmake_blog/articles/e083cd554d3c87</link><guid isPermaLink="true">https://zenn.dev/rmake_blog/articles/e083cd554d3c87</guid><pubDate>Wed, 18 Dec 2024 03:34:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hGmT89Rc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E8%25A4%2587%25E5%2590%2588%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E9%2596%258B%25E5%25A7%258B%25E6%259D%25A1%25E4%25BB%25B6%25E3%2582%2592%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABZod%25E3%2581%25AERecursive%2520Type%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:dycoon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NWY4NjhhOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rmake%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pwbnA2bGplV2I2UkJYOGZTMk5DbU9XOGljU0tVUTZCdlVucndvbkE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dycoon</dc:creator></item></channel></rss>