<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 06 Jan 2025 12:04:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Poetry v2.0.0での変更点]]></title><description><![CDATA[2025/1/5の Poetry v2.0.0リリースに伴い、いくつかの変更が導入されました。pyproject.tomlの記述方法の変更や、一部コマンドのプラグイン化などが挙げられます。以下に、特に重要と思われる変更点をまとめました。

 pyproject.tomlの記述方法の変更
PEP 621に準拠した[project]セクションのサポートが追加されました。これにより、従来の[tool.poetry]セクションからの移行が推奨されています。

 旧形式
[tool.poetry]
name = "example-project"
version = "0.1.0"
descrip...]]></description><link>https://zenn.dev/hikaelis/articles/98c17f52754a64</link><guid isPermaLink="true">https://zenn.dev/hikaelis/articles/98c17f52754a64</guid><pubDate>Mon, 06 Jan 2025 11:25:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s_QWKcMu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Poetry%2520v2.0.0%25E3%2581%25A7%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hikaelis</dc:creator></item><item><title><![CDATA[AWARE Framework を使ったモバイルセンシングを自分のiPhoneで試してみた]]></title><description><![CDATA[タイトルの付け方がちょっと怪しいです。

 まえがき
記事の中身ですが、昨年末にAWARE Framework をプライベートで使ってみたという話です。西山先生に教えてもらった1年前ぐらいからちょくちょく見ていたのですが、だいぶ遅くなってしまいました（昨年末にこの記事の内容を調べて、ブログに書くまでに年が変わっていました…）。
Frameworkについては [1][2] あたりを見ていただくと詳しいですが、ユーザの端末（ここではiPhone）を通じてセンサー情報などを収集するためのものです。
!
以降ではデータの処理にPythonを使います。またsqliteデータベースを確認するために「...]]></description><link>https://zenn.dev/takilog/articles/5380502df114bf</link><guid isPermaLink="true">https://zenn.dev/takilog/articles/5380502df114bf</guid><pubDate>Mon, 06 Jan 2025 09:59:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--de9L9yUD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWARE%2520Framework%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25A2%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AEiPhone%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%258D%25E3%2582%258D%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzkzOGE3OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たきろぐ</dc:creator></item><item><title><![CDATA[Django5.1.2でのcollectstaticでハマった話し]]></title><description><![CDATA[
 やろうとしたこと
collectstaticをする時に静的ファイルをAzureのストレージに置きたくて生成AIを使いながら
作業していたがいくら検証しても解決しなかった。
静的ファイルの収集したら自動でAzureコンテナに格納されるよ！と教えてくれていた。
python manage.py collectstatic --noinput
そして、こう書けとずっと言われてた。。
# settings.py
AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME")
AZURE_ACCOUNT_KEY = os.getenv("AZURE_A...]]></description><link>https://zenn.dev/ytksato/articles/952c184ad86df9</link><guid isPermaLink="true">https://zenn.dev/ytksato/articles/952c184ad86df9</guid><pubDate>Mon, 06 Jan 2025 09:38:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--76jkGKfU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django5.1.2%25E3%2581%25A7%25E3%2581%25AEcollectstatic%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DPL%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjOTQ2ZGEyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>DPL</dc:creator></item><item><title><![CDATA[[Slack]ランダム指定でデイリースクラムのファシリテーター決定を楽にした話]]></title><description><![CDATA[
 はじめに
レセプトチームでは、下記の記事の通り、スクラム開発への移行の真っ只中。
https://zenn.dev/rehabforjapan/articles/db07e0f1586be8
まだまだ課題は散積しているが、その中の一つに会議体のファシリテーション誰がやるか問題があった。（とくにデイリースクラム）
もともとウォーターフォール型の開発方式で進めていたときは、ファシリテーション（以下、ファシリと略）は、日次の進捗確認会から全てリーダークラスで巻き取って進めていた。
スクラム開発へ移行し自己組織化されたチームを目指すにあたって、会議体のファシリは誰しもができるようになるべき。...]]></description><link>https://zenn.dev/rehabforjapan/articles/3c687e4b541302</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/3c687e4b541302</guid><pubDate>Mon, 06 Jan 2025 02:01:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BUnwZEac--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BSlack%255D%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E6%258C%2587%25E5%25AE%259A%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E6%25B1%25BA%25E5%25AE%259A%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Masaki%2520Kubota%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1YTE3YzE2YzMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kubota</dc:creator></item><item><title><![CDATA[Typerの使い方メモ]]></title><description><![CDATA[こんにちは。
kfskyです。普段はデータサイエンティストとして働いております。
最近、typerに触れる機会があったので、その使い方の備忘録として残しておきます。

 Typerとは？
公式ドキュメントを翻訳したものです。

Typerは、ユーザーが使いやすく、開発者が作りやすいCLI（コマンドラインインターフェース）アプリケーションを構築するためのライブラリです。Pythonの型ヒントに基づいています。
また、スクリプトを実行するためのコマンドラインツールとしても機能し、それらを自動的にCLIアプリケーションに変換します。

typerの作者はFastAPIの作者と同じらしいです。
...]]></description><link>https://zenn.dev/kfsky/articles/68c6271d076c54</link><guid isPermaLink="true">https://zenn.dev/kfsky/articles/68c6271d076c54</guid><pubDate>Sun, 05 Jan 2025 15:41:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PxYlzQAb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typer%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kfsky%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkZDc5ZTE3MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kfsky</dc:creator></item><item><title><![CDATA[Snowpark for Pythonを使用したデータエンジニアリングとMLの入門]]></title><description><![CDATA[
 はじめに
Snowflake公式QuickStartの「Snowpark for Pythonを使用したデータエンジニアリングとMLの入門」をやってみました！
https://quickstarts.snowflake.com/guide/getting_started_with_dataengineering_ml_using_snowpark_python_ja/index.html?index=..%2F..ja

 このQuickstartの推しポイント
Snowflakeの環境設定から始まり、データのモデリング、自動データパイプライン化、機械学習、最後はデータアプリケーショ...]]></description><link>https://zenn.dev/kyami/articles/292e692265456e</link><guid isPermaLink="true">https://zenn.dev/kyami/articles/292e692265456e</guid><pubDate>Sun, 05 Jan 2025 13:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Dn9b_d1E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowpark%2520for%2520Python%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8ML%25E3%2581%25AE%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllODdlNWY4MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyami</dc:creator></item><item><title><![CDATA[【Python・Pysparkで学ぶ！】データ分析【概要】]]></title><description><![CDATA[
 概要
(一般社団法人データサイエンティスト協会@◾️)
　本稿はデータ分析学習コンテンツ【Python・Pysparkで学ぶ！】の概要です。
　ターゲットは、データ分析の初学者です。
　【Python・Pysparkで学ぶ！】を読むことで、転職活動中の学習アピールや、企業研修の先取りのお役に立てれば幸いです。
データサイエンティストに必要なスキルセットとして有力な説は、一般社団法人データサイエンティスト協会が提唱する「データサイエンス力・データエンジニア力・ビジネス力」です。データサイエンティストのスキルセットにデータサイエンス力が入っているのは面白いですが、恐らく、データサイエンス...]]></description><link>https://zenn.dev/taiking/articles/df395d63c203ea</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/df395d63c203ea</guid><pubDate>Sun, 05 Jan 2025 10:59:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Afe66m6_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPyspark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2580%2590%25E6%25A6%2582%25E8%25A6%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[ModernBERTを用いた固有表現抽出をCoNLL-2003をファインチューニングして試す]]></title><description><![CDATA[ModernBERTを用いた固有表現抽出を試してみます。
ModernBERT自体は以下の記事を書きました。
https://zenn.dev/tossy21/articles/93591442269292
ModernBERT-baseをCoNLL-2003データセットを用いてファインチューニングしていきます。
具体的には、ModernBertForTokenClassificationをCoNLL-2003データセットでファインチューニングします。
Google Colabでは、T4 GPUを1台用いました。

 データセット：CoNLL-2003
今回は、CoNLL-2003を用い...]]></description><link>https://zenn.dev/tossy21/articles/5cbd621d22509d</link><guid isPermaLink="true">https://zenn.dev/tossy21/articles/5cbd621d22509d</guid><pubDate>Sun, 05 Jan 2025 01:49:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lv3_KJ0q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ModernBERT%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E5%259B%25BA%25E6%259C%2589%25E8%25A1%25A8%25E7%258F%25BE%25E6%258A%25BD%25E5%2587%25BA%25E3%2582%2592CoNLL-2003%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYTdiNWJkY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tossy</dc:creator></item><item><title><![CDATA[Dockerで学ぶLearning Analytics Platformの構築]]></title><description><![CDATA[Learning Analytics Platform の構築には２つの主要なコンポーネントがあります。Learning Management System (LMS), Learning Record Store (LRS)がその２つです。両者ともオープンソースライセンスのソフトウェアが存在し、誰でも使える状態ではありますが、企業・学校単位での利用が想定されているため、個人で動かすのは困難です。この本ではDockerを使って環境構築を簡素化し、個人のPC上でログの収集と分析を行うLearning Analytics Platformを構築する方法を解説します。]]></description><link>https://zenn.dev/kromiii/books/bd5dd8ca2de0a4</link><guid isPermaLink="true">https://zenn.dev/kromiii/books/bd5dd8ca2de0a4</guid><pubDate>Sun, 05 Jan 2025 01:24:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0rtKCg7l--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lZjVmMTEwMGVkLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Hiroyuki Kuromiya</dc:creator></item><item><title><![CDATA[現在地の天気情報の取得その2]]></title><description><![CDATA[
 現在地の天気情報の取得その2

 Pythonで天気情報を取得する方法
以下はPythonを使って、郵便番号とAPIキーで天気情報を取得するコード例です。
import requests
import json
from pprint import pprint

# OpenWeatherMap APIのURL
url = "https://api.openweathermap.org/data/2.5/weather?zip={zip_place}&amp;units=metric&amp;appid={API_key}"

# 郵便番号とAPIキーを指定
url = url.f...]]></description><link>https://zenn.dev/singularity/articles/a112d8fffe69af</link><guid isPermaLink="true">https://zenn.dev/singularity/articles/a112d8fffe69af</guid><pubDate>Sat, 04 Jan 2025 22:42:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uGk1LPvv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258F%25BE%25E5%259C%25A8%25E5%259C%25B0%25E3%2581%25AE%25E5%25A4%25A9%25E6%25B0%2597%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%25AE%25E5%258F%2596%25E5%25BE%2597%25E3%2581%259D%25E3%2581%25AE2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:snowpool%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhMzVhZjIwNWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>snowpool</dc:creator></item><item><title><![CDATA[現在地の明日の天気を取得して通知するシステムの構築]]></title><description><![CDATA[
 現在地の明日の天気を取得して通知するシステムの構築

 背景と目的
毎回アレクサで天気を確認するのが面倒だったので、以下のような仕組みを作ることを考えました：

部屋に入ると顔認識で自動的に天気を通知
夜なら「明日の天気」、朝なら「今日の天気」を通知

そこで、まずは天気を取得する部分から始めます。


 天気取得の方法を調査
天気情報を取得するには、Weather APIを利用するのが一般的です。参考にした記事はこちらです：

無料で使える天気API「Free Weather API」の利用登録とキー発行手順

しかし、ここで紹介されている「Free Weather API」は登録...]]></description><link>https://zenn.dev/singularity/articles/7e55da56f2b3b2</link><guid isPermaLink="true">https://zenn.dev/singularity/articles/7e55da56f2b3b2</guid><pubDate>Sat, 04 Jan 2025 19:48:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c6Tg599j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258F%25BE%25E5%259C%25A8%25E5%259C%25B0%25E3%2581%25AE%25E6%2598%258E%25E6%2597%25A5%25E3%2581%25AE%25E5%25A4%25A9%25E6%25B0%2597%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:snowpool%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiNjM5MTg4YzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BB%25E3%2582%25BD%25E3%2582%25B5%25E3%2582%25A8%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhMzVhZjIwNWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>snowpool</dc:creator></item><item><title><![CDATA[StreamlitとChatGPTを組み合わせてマルチモーダルなアプリを作る]]></title><description><![CDATA[
 はじめに
最近、LLMを活用する機会が増えており、簡単にプロンプトを変更してチャットができるアプリが欲しいと考えていました。そこで、Streamlit - Build a basic LLM chat appを参考にアプリを実装し、さらに画像やファイルの対応方法について書きました。
ソースコードの全体は、こちらのGitHubリポジトリで確認できます。
https://docs.streamlit.io/develop/tutorials/llms/build-conversational-apps
https://github.com/HEKUCHAN/streamlit_chatg...]]></description><link>https://zenn.dev/linux_club/articles/245b8c34b5508c</link><guid isPermaLink="true">https://zenn.dev/linux_club/articles/245b8c34b5508c</guid><pubDate>Sat, 04 Jan 2025 19:12:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k0KLlCKv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A8ChatGPT%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%25A6%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2581%25AA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:HEKUCHAN%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0Yzg5Njk5YTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Linux%2520Club%2520-%2520%25E6%259D%25B1%25E4%25BA%25AC%25E5%25B7%25A5%25E7%25A7%2591%25E5%25A4%25A7%25E5%25AD%25A6%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5OTAwYmI2M2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HEKUCHAN</dc:creator></item><item><title><![CDATA[browser-use-webuiでブラウザ操作を自動化しよう！]]></title><description><![CDATA[
 はじめに
browser-use-webuiは、AIエージェントによるブラウザ操作を簡単に実現できるツールです。今回は、セットアップから実際の使用例まで詳しく解説します。


 🔧 セットアップ方法

 前提条件

Python 3.11以上が必要（この例ではPython 3.12.5を使用）
パッケージマネージャーとしてuvを使用（高速なインストールが可能）


 インストール手順


仮想環境の作成:

uv venv --python 3.12
.venv\Scripts\activate


browser-useのインストール:

uv pip install browse...]]></description><link>https://zenn.dev/sunwood_ai_labs/articles/automate-browser-with-browser-use-webui</link><guid isPermaLink="true">https://zenn.dev/sunwood_ai_labs/articles/automate-browser-with-browser-use-webui</guid><pubDate>Sat, 04 Jan 2025 12:04:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dkQ90QsB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:browser-use-webui%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdpSmVyNldLVlpKLUd4N054QWVuSFVtYXQ3MUhhd1NXaU5hRG5FTnZiMXZZdHBIaGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item><item><title><![CDATA[ABlogでのSphinxブログ構築時の日本語タクソノミー対策]]></title><description><![CDATA[自分の個人サイトのリフレッシュを進めている最中なのですが、この際にABlog周りで起きたトラブルと対処のメモです。

 Sphinx拡張 "ABlog" のちょっとした紹介
https://pypi.org/project/ablog
ABlogはSphinx拡張の1つで、Sphinxドキュメントにブログ機能を追加します。
大雑把には、次のようなことが出来ます。

カテゴリー、タグごとに対象の記事をまとめてHTML出力する。
Disqusを利用して、コメント欄を埋め込む。
サイドバー用に、タグクラウドを生成する。
RSSフィードを出力する。


 ablog利用時のちょっとしたトラブル
...]]></description><link>https://zenn.dev/attakei/articles/ablog-slugify-for-japanese</link><guid isPermaLink="true">https://zenn.dev/attakei/articles/ablog-slugify-for-japanese</guid><pubDate>Sat, 04 Jan 2025 11:10:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cn1XUQNW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ABlog%25E3%2581%25A7%25E3%2581%25AESphinx%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E6%25A7%258B%25E7%25AF%2589%25E6%2599%2582%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%25BF%25E3%2582%25AF%25E3%2582%25BD%25E3%2583%258E%25E3%2583%259F%25E3%2583%25BC%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takei%2520Kazuya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pKSXpPS3RSeThDU0ZoaWpHeklQSWk1Mkl2ZHRwVTB5aE1tTWJhbEE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takei Kazuya</dc:creator></item><item><title><![CDATA[Amazon S3でのサーバーサイド暗号化 (SSE-S3) の設定]]></title><description><![CDATA[
 はじめに
Amazon S3は、保存中のオブジェクトを暗号化するためにさまざまな暗号化オプションを提供しています。その中でもサーバーサイド暗号化(Server-Side Encryption, SSE)は、S3が自動的にオブジェクトを暗号化する機能です。この記事では、PutObject API操作によってS3バケットに追加されるオブジェクトをSSE-S3を使用して暗号化する方法について説明します。
PutObject API操作を呼び出す際に、x-amz-server-side-encryption ヘッダーを設定することで、S3バケットに保存されるオブジェクトを暗号化できます。具体...]]></description><link>https://zenn.dev/tn_a/articles/e6e48a645ac2d4</link><guid isPermaLink="true">https://zenn.dev/tn_a/articles/e6e48a645ac2d4</guid><pubDate>Sat, 04 Jan 2025 10:39:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SjlHxr8o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520S3%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2589%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%2520%2528SSE-S3%2529%2520%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dasu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4MDcxYWUyMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dasu</dc:creator></item><item><title><![CDATA[Act 35. Sequentialクラスについて]]></title><description><![CDATA[
 はじめに
当たり前のようにSequentialクラスを使ってLSTMのモデルを構築しているが、そもそもSequentialクラスで何が出来るのか気になったためこの記事を作ることに決定。

 Sequential
Sequential クラスには以下のプロパティとメソッドが存在する。

 プロパティ


layers

現在のモデルに追加されたレイヤーのリスト。
入力レイヤーは含まれない。

add() と pop() で変更可能。
読み取り専用。

from keras.models import Sequential
from keras.layers import LSTM

#...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/ba77b9d1424c19</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/ba77b9d1424c19</guid><pubDate>Sat, 04 Jan 2025 09:53:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U5EXKL5O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252035.%2520Sequential%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item><item><title><![CDATA[フリーの事前顔学習済みモデル11種の精度評価]]></title><description><![CDATA[
 はじめに
日本の企業や大学が顔認証を実装する時、事前学習されているフリーの顔学習モデルを探すと思います。
この記事ではこれらのうち学習モデルを公開しているGitHubリポジトリを対象として、各学習モデルのAUCスコア・ROC曲線を描画し評価しました。
評価にあたり、対象となる顔データセットをこちらで用意しました。日本人を対象とした顔認証（顔照合）を想定して、日本人若年女性のデータセットとしました。[1]
公開されている各顔学習モデルの精度および照合にかかる時間を調査されている方は参考にしてください。


 最初に結論



 環境
評価用ホスト環境# Python仮想環境
$ pyt...]]></description><link>https://zenn.dev/ykesamaru/articles/40f9e964539e31</link><guid isPermaLink="true">https://zenn.dev/ykesamaru/articles/40f9e964539e31</guid><pubDate>Sat, 04 Jan 2025 08:11:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h4ShG6OP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25AE%25E4%25BA%258B%25E5%2589%258D%25E9%25A1%2594%25E5%25AD%25A6%25E7%25BF%2592%25E6%25B8%2588%25E3%2581%25BF%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB11%25E7%25A8%25AE%25E3%2581%25AE%25E7%25B2%25BE%25E5%25BA%25A6%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4MmM3NDMxNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yKesamaru</dc:creator></item><item><title><![CDATA[browser-use で Gemini と DeepSeek を使用する]]></title><description><![CDATA[
 はじめに
browser-use を使用している方で恐らくほとんどの人がトークンの使用量と料金について気になっていると思います。
無料枠のある Gemini を使用したいところですが、現在 Issue に上がっているように Gemini は使用できません。
本家ではありませんが、つい最近 Gemini と DeepSeek を利用できるように改良したリポジトリを見つけたため紹介します。
リポジトリは以下です。
https://github.com/warmshao/browser-use-webui

 環境構築
まず、Python 3.11 以上がインストールされていることを確認し...]]></description><link>https://zenn.dev/gunjo/articles/72d30b516e68c1</link><guid isPermaLink="true">https://zenn.dev/gunjo/articles/72d30b516e68c1</guid><pubDate>Sat, 04 Jan 2025 05:01:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--02wecwI0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:browser-use%2520%25E3%2581%25A7%2520Gemini%2520%25E3%2581%25A8%2520DeepSeek%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2595%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjMTllMGFhYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むさし</dc:creator></item><item><title><![CDATA[（5分でわかる範囲で）Browser Use について調べてみた]]></title><description><![CDATA[
 Browser Use とは
本家の Github -&gt; https://github.com/browser-use/browser-use
Browser Useは、生成AIを活用してWebブラウザを自動操作するためのPythonライブラリです。主な特徴と機能は以下の通りです:

 主な機能


ウェブ要素の抽出と操作

ボタン、リンク、フォームなどの要素を自動的に認識し操作
視覚情報とHTML構造を統合してウェブページを理解



自動化機能

複数タブの同時管理
クリックされた要素の追跡と再利用可能な操作履歴（XPath抽出）



カスタマイズ性

ファイル保存、デー...]]></description><link>https://zenn.dev/ymidori/articles/128c79730a7d3a</link><guid isPermaLink="true">https://zenn.dev/ymidori/articles/128c79730a7d3a</guid><pubDate>Sat, 04 Jan 2025 05:01:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1wEZAIJl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25885%25E5%2588%2586%25E3%2581%25A7%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E7%25AF%2584%25E5%259B%25B2%25E3%2581%25A7%25EF%25BC%2589Browser%2520Use%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sango%2520%2528ymidori%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlNTMxM2UzOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sango (ymidori)</dc:creator></item><item><title><![CDATA[LangChain と Qdrant でベクトル検索を行う]]></title><description><![CDATA[
 はじめに
RAG を使用したサービスをローカルで開発して、本番環境での使用を想定した場合に LangChain と Qdrant でどのように実装していくかのメモです。
ベースの記事はこちら
https://python.langchain.com/docs/integrations/vectorstores/qdrant/

 Qdrant とは
Qdrant（読み方：クワッドラント）は、ベクトル類似性検索エンジンです。追加のペイロードと拡張されたフィルタリングサポートを備えた、ベクトルを保存、検索、管理するための便利な API を備えた、本番環境対応のサービスを提供します。これに...]]></description><link>https://zenn.dev/gunjo/articles/47910e993da59e</link><guid isPermaLink="true">https://zenn.dev/gunjo/articles/47910e993da59e</guid><pubDate>Sat, 04 Jan 2025 03:34:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q8cFpAAf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520%25E3%2581%25A8%2520Qdrant%2520%25E3%2581%25A7%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2595%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjMTllMGFhYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むさし</dc:creator></item></channel></rss>