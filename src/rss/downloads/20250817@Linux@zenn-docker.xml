<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 17 Aug 2025 02:55:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[サブスク代わりに自宅の音楽をどこでも聴く！Docker＋Plexで作るストリーミング環境]]></title><description><![CDATA[
 想定読者
本稿は、自宅に音楽ファイルを持っていて、Spotifyなどのサブスクより手持ちの曲を楽しみたい人向けの記事である。

 はじめに | やりたいこと
本稿は、自宅にある音楽データを外出先からも聴けるようにするための、環境構築方法を記す記事である。
筆者は同じ曲ばかり聞きがちなので、Spotifyなどのサブスクサービスを使うよりも、曲を買って聞いたほうが安上がりである。
ただし、買った曲を外出先で聴くためには、スマホにわざわざ入れておく必要があり、曲数が増えるにつれ面倒になってきた。また、スマホとPCとでプレイリストを同期するのも面倒だった。
そこで、外出先からも自宅の音楽を聴...]]></description><link>https://zenn.dev/nakurei/articles/plex-docker-music-streaming</link><guid isPermaLink="true">https://zenn.dev/nakurei/articles/plex-docker-music-streaming</guid><pubDate>Sat, 16 Aug 2025 22:55:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JyFMMK2a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25AF%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AB%25E8%2587%25AA%25E5%25AE%2585%25E3%2581%25AE%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25A7%25E3%2582%2582%25E8%2581%25B4%25E3%2581%258F%25EF%25BC%2581Docker%25EF%25BC%258BPlex%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NakuRei</dc:creator></item><item><title><![CDATA[Laravel Sail からホスト側のサーバーにアクセスする方法]]></title><description><![CDATA[こんにちは。 SAW です。
最近、学習の一環として 英語のブログを書き始めました。
公開前する前に ChatGPT に文章を添削してもらっているので、より自然な表現を身につけられたら良いなと思います。
Laravel Sail で起動したコンテナから、 ホスト側の別サーバーにアクセスしようとしたところ、  サーバーに到達できずエラーが発生する という問題に遭遇しました。
本記事では、 Laravel Sail のコンテナからホスト側のサーバーにアクセスする方法 を紹介します。
なお、本記事では Laravel のバージョンが 12.x 系を前提としています。

 対象読者
本記事で想定...]]></description><link>https://zenn.dev/azuki_penguin/articles/d46c77205b1b51</link><guid isPermaLink="true">https://zenn.dev/azuki_penguin/articles/d46c77205b1b51</guid><pubDate>Sat, 16 Aug 2025 12:24:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wRijsMyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%2520Sail%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E5%2581%25B4%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SAW%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3ZDU1YWE3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SAW</dc:creator></item><item><title><![CDATA[学習ログ｜Prisma × Next.js × Docker ビルドで出たエラーと学び]]></title><description><![CDATA[
 はじめに
Docker で Next.js + Prisma アプリをビルドするときに、いくつかハマりどころがあった。ここでは実際に遭遇したエラーと、それを直す過程で学んだことを記録する。


 前提知識

 Prisma

Node.js で使える ORM（Object Relational Mapping）。
Prisma Client を自動生成して DB に型安全にアクセスできる。

@prisma/client を dependencies に入れ、npx prisma generate を実行すると、node_modules/@prisma/client 以下にクライアン...]]></description><link>https://zenn.dev/atsushimemet/articles/1f7271663e23bb</link><guid isPermaLink="true">https://zenn.dev/atsushimemet/articles/1f7271663e23bb</guid><pubDate>Sat, 16 Aug 2025 05:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JbmEt7Hh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2582%25B0%25EF%25BD%259CPrisma%2520%25C3%2597%2520Next.js%2520%25C3%2597%2520Docker%2520%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A7%25E5%2587%25BA%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E5%25AD%25A6%25E3%2581%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:studymemot%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTd0bDJIcVI3WmY1QnJlX1hOM2hyWksyNU1CczlhNEVvd2c1RmVKZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>studymemot</dc:creator></item><item><title><![CDATA[TiFlashとMySQL、クエリはどっちが速い？]]></title><description><![CDATA[
 はじめに

 はじめに
TiDB は分散型の HTAP（Hybrid Transactional/Analytical Processing）データベースで、トランザクション処理向けの行ストレージ（TiKV）と、分析処理向けの列ストレージ（TiFlash）を併用できます。一方、MySQL（InnoDB）は行志向ストレージを採用した OLTP 向けの RDBMS です。
本記事では、同一データセットを用いて TiFlash と MySQL（InnoDB） のクエリ処理性能を比較し、どのようなケースでどちらを選ぶと効果的かを整理します。特に「少ない列を対象にした集計・グルーピング（例：C...]]></description><link>https://zenn.dev/collabostyle/articles/01f4d7b20362ab</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/01f4d7b20362ab</guid><pubDate>Fri, 15 Aug 2025 13:09:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--04IXWQmg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TiFlash%25E3%2581%25A8MySQL%25E3%2580%2581%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%25A3%25E3%2581%25A1%25E3%2581%258C%25E9%2580%259F%25E3%2581%2584%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2594%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[DockerCompose + PostgresでのRails立ち上げ]]></title><description><![CDATA[
 Getting Started（環境構築・起動手順）
本ドキュメントは、ローカル/コンテナでRailsプロジェクトを動かすための最小手順をまとめたものです。

 1. 概要

 必要ツール

Docker Desktop（Compose v2 含む）
Git


 サービス構成


web: ruby:3.3.4 イメージをベースに、開発に必要なライブラリを追加したRails実行環境。

db: postgres:17 公式イメージを利用したデータベース。


 ディレクトリ方針

Rails アプリケーションはリポジトリのルート（直下）に配置します。

Dockerfile, do...]]></description><link>https://zenn.dev/yohei7328/articles/9a46a05bc22c86</link><guid isPermaLink="true">https://zenn.dev/yohei7328/articles/9a46a05bc22c86</guid><pubDate>Thu, 14 Aug 2025 15:37:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--23GMmsMy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DockerCompose%2520%252B%2520Postgres%25E3%2581%25A7%25E3%2581%25AERails%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4bXpaRy1VMTdvWkx5Tkxvc0RBazA0UHNneUZkLTU2S2NtM0hSckE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よーへい</dc:creator></item><item><title><![CDATA[Macでdocker volume pruneを定期自動実行する]]></title><description><![CDATA[launchedを使う。

 設定する手順

 1. plistファイルを用意する
~/Library/LaunchAgents/com.example.docker-volume-prune.plist に以下の内容を記述する
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
...]]></description><link>https://zenn.dev/sunnyone/articles/eb068d5d9f5f16</link><guid isPermaLink="true">https://zenn.dev/sunnyone/articles/eb068d5d9f5f16</guid><pubDate>Thu, 14 Aug 2025 15:21:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xDX7Z_sI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25A7docker%2520volume%2520prune%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E8%2587%25AA%25E5%258B%2595%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sunnyone%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKek9vWHNpcElZcTJGYmVnTXRTSnl0REIwNmMyalhqU1N4Z1g3OUY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sunnyone</dc:creator></item><item><title><![CDATA[DockerでStreamlitを動かしてみる]]></title><description><![CDATA[
 はじめに
Streamlitをローカル上のDockerで動かす際の手順を備忘録としてまとめました。
!
ここでは「コンテナを用いずにローカルでStreamlitのWebアプリを構築する手順」は説明しません。


 動作環境

Windows 11
Docker Desktop
WSL2 (Ubuntu-24.04)
Python 3.13.5


 フォルダ構成
今回はDockerでStreamlitを動かすことに焦点を置いているため、フォルダ構成は最小限としています。
- .venv
- .python-version
- Dockerfile
- requirements.txt...]]></description><link>https://zenn.dev/headwaters/articles/b7f311dcccb0a1</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/b7f311dcccb0a1</guid><pubDate>Thu, 14 Aug 2025 04:10:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V9QJj3CX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Streamlit%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuichiro%2520Sakata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYmQ1ZTMxYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shuichiro Sakata</dc:creator></item><item><title><![CDATA[TiDBでインデックス作成]]></title><description><![CDATA[TiDBでインデックスの作成を行います。

 前提条件
ローカル環境構築で作成したTiDBの環境を使用
tidbコンテナを起動

 インデックス設計の基本指針

等価条件= を先頭に、範囲条件 BETWEEN / &gt; / &lt; / LIKE 'prefix%' を後ろに置く複合インデックスが効きやすい
選択度が高い列を先頭にすると効果大
ORDER BY / JOINキーも考慮（WHEREとORDER BYの両立が取れる並びが理想）
文字列の長い列はプレフィックスインデックスで節約可（例：email(16)）
関数適用で索引が効かない時（LOWER(name)など）は、式インデ...]]></description><link>https://zenn.dev/gtok/articles/3c1e5f7f03e73b</link><guid isPermaLink="true">https://zenn.dev/gtok/articles/3c1e5f7f03e73b</guid><pubDate>Wed, 13 Aug 2025 23:13:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xid3wFWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TiDB%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2594%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[ローカルLLMを試す (gpt-oss-20b, 2025-08)]]></title><description><![CDATA[古めのPCで gpt-oss-20b を試した際の環境構築の備忘録です。
前回 と基本的な手順は同じですが、 llama.cppの最新イメージを使用する必要 があります。
!
追記 (2025-08-14)
llama.cpp に MoE の重みを CPU に保持するオプションが追加されていた(b6051, b6089) ことを次の記事で知りました。有益な情報に感謝いたします。
https://nowokay.hatenablog.com/entry/2025/08/13/235311
こちらのオプションを使用することで、gpt-oss-20b の場合は VRAM 4〜5GB 程度で動か...]]></description><link>https://zenn.dev/ftl/articles/ed44841ab4f644</link><guid isPermaLink="true">https://zenn.dev/ftl/articles/ed44841ab4f644</guid><pubDate>Wed, 13 Aug 2025 12:48:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--alomqcEy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2520%2528gpt-oss-20b%252C%25202025-08%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shigeru%2520Fujiwara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjNjMTlHUWxQZmRuaVB1YTRyeFdjM1hnNG1nV0tvVGJPcHhWUmpjOS1xdWtzZ3o2eHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shigeru Fujiwara</dc:creator></item><item><title><![CDATA[【AWS】dockerやcronが稼働中のEC2のインスタンスタイプを変更した話]]></title><description><![CDATA[
 はじめに
AWS EC2のインスタンスタイプを変更する方法の記事はたくさん出てきますが、
主要で動かしているプロセスもきちんと維持されるか、など実務レベルでは意外と書かれていない記事が多かったため、備忘録として記載します。

 dockerで何か動かしている場合
例えば以下は適当ですが何かしらdockerで起動しているものがあるとします。
これがインスタンスタイプの変更後に自動で上がるのか、分からないと気になりますよね。
[root@ip-10-1-1-10 ec2-user]# docker ps
CONTAINER ID   IMAGE                  COMM...]]></description><link>https://zenn.dev/cliffstar/articles/4b3348c02dc961</link><guid isPermaLink="true">https://zenn.dev/cliffstar/articles/4b3348c02dc961</guid><pubDate>Wed, 13 Aug 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BUui2gHU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%25E3%2580%2591docker%25E3%2582%2584cron%25E3%2581%258C%25E7%25A8%25BC%25E5%2583%258D%25E4%25B8%25AD%25E3%2581%25AEEC2%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cliffstar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYzQ1OWNlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cliffstar</dc:creator></item><item><title><![CDATA[Gemini CLI 用 Docker]]></title><description><![CDATA[Google の Gemini CLI を手軽に利用できる Docker イメージを公開しています。ローカルに Node.js を用意せず、すぐに Gemini モデルと対話できる環境を構築可能です。VS Code Dev Container との統合例や、Docker MCP Gateway と連携して外部ツールやサービスを AI エージェントが利用できるサンプルも提供しています。用途に応じて選べる複数のバリアント（最小構成の node、開発ツールを含む javascript-node / typescript-node）を用意しています。]]></description><link>https://zenn.dev/naoyoshinori/books/00b2e3044a617c</link><guid isPermaLink="true">https://zenn.dev/naoyoshinori/books/00b2e3044a617c</guid><pubDate>Wed, 13 Aug 2025 10:29:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wLQ6DbG2--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMTI5YTM4NTYxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>naoyoshinori</dc:creator></item><item><title><![CDATA[MCPをより安全にDockerで利用する]]></title><description><![CDATA[https://docs.docker.com/ai/mcp-catalog-and-toolkit/toolkit/

 1. はじめに
アクセンチュア株式会社の桐山です。
今回は、勢いが止まらないMCP(Model Context Protocol)をDockerで試してみましたので、紹介したいと思います。
MCPは、自然言語でWeb検索・DB操作・クラウド操作‥等、便利なツールを実行できるプロトコルですが、MCPによってはセキュリティ的なリスクが潜んでいる可能性も否定できません。
そこで、MCPをDocker化することにより、ホスト環境とMCP環境を分離させ、より安全にMCPを実行...]]></description><link>https://zenn.dev/acntechjp/articles/421703d21c942d</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/421703d21c942d</guid><pubDate>Wed, 13 Aug 2025 07:27:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ppgkz9Gf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25ABDocker%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Koichi%2520Kiriyama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NmMzZGEzY2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Koichi Kiriyama</dc:creator></item><item><title><![CDATA[承認待ち0秒！Claude Code YOLOモードでセキュアに開発効率85%UP]]></title><description><![CDATA[
 承認待ち 0 秒！Claude Code YOLO モードでセキュアに開発効率 85%UP
!
YOLO モード = --dangerously-skip-permissions
"You Only Live Once" の精神で、承認確認をスキップして爆速開発を実現！
本記事では、このモードを「YOLO モード」と呼びます。


 TL;DR
Docker コンテナで Claude Code を安全かつ高速に使うためのテンプレートを作成しました。
https://github.com/sakumoto-shota/claude-code-template
このテンプレートで実現でき...]]></description><link>https://zenn.dev/sakupanda/articles/bc190d224a26dd</link><guid isPermaLink="true">https://zenn.dev/sakupanda/articles/bc190d224a26dd</guid><pubDate>Tue, 12 Aug 2025 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7KAn_h8i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2589%25BF%25E8%25AA%258D%25E5%25BE%2585%25E3%2581%25A10%25E7%25A7%2592%25EF%25BC%2581Claude%2520Code%2520YOLO%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2582%25A2%25E3%2581%25AB%25E9%2596%258B%25E7%2599%25BA%25E5%258A%25B9%25E7%258E%258785%2525UP%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2581%258F%25E3%2581%2595%25E3%2581%258F%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkZjVhZGNkMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さくさくパンダ</dc:creator></item><item><title><![CDATA[docker+discordgoで自作discord Bot ~環境構築編]]></title><description><![CDATA[
 背景
Discordの小規模な鯖運営（身内向け）に関わる機会があったので，Botなるものにも手を出してみようと思い，調べたことをメモしてみました．また，実際に動作を確認するため，発言をそのままオウム返しするBotを作成しました．

 Discord Botの作成
Discord Botは，Botというだけあって，基本的には一般ユーザアカウントと同様に振舞います．そのため，discordのディベロッパーサイトからbotを作成し，トークンによって認証を行う必要があります．以下の記事が参考になります．
https://qiita.com/RyuichiroYoshida/items/37c...]]></description><link>https://zenn.dev/dozenkomeda/articles/4375f37d9dfca5</link><guid isPermaLink="true">https://zenn.dev/dozenkomeda/articles/4375f37d9dfca5</guid><pubDate>Tue, 12 Aug 2025 11:07:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AYiNZvQt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%252Bdiscordgo%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259Cdiscord%2520Bot%2520%7E%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shu_matsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFM3eDBXcWV0N0J4QnZGZkttbzB0SWJrRjlEM0w4SVNXR0hQS01IdzgzQWxMbVp3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shu_matsu</dc:creator></item><item><title><![CDATA[Dockerの基礎1: 最短理解のための重要な概念]]></title><description><![CDATA[
 はじめに
ソフトウェアの現場では例えば「実行環境の再現性の確保」あるいは「ホストよりも制限された環境でのプログラム実行」のためにDockerを用いることがよくあります。
前者は効率的なソフトウェアデリバリーを支える根幹であり、後者はOSSなどから手に入れたツールを制限された環境で実行し、相対的に安全性を高めることができます。
本記事では、Dockerの基本概念を公式のGet Startedを参照しつつ、Dockerをうまく扱う方法についてのインサイトを与えます。
Dockerの基礎力を養いたい人はGet Startedを一通り読むことを推奨します。そこには理解すべき概念がハンズオン形...]]></description><link>https://zenn.dev/paiza/articles/explain-docker-simply1</link><guid isPermaLink="true">https://zenn.dev/paiza/articles/explain-docker-simply1</guid><pubDate>Tue, 12 Aug 2025 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T5L-KQvq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E1%253A%2520%25E6%259C%2580%25E7%259F%25AD%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E9%2587%258D%25E8%25A6%2581%25E3%2581%25AA%25E6%25A6%2582%25E5%25BF%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Naoki%2520Fujita%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTA2MWVlZmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:paiza%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3ODAwMjM3MWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoki Fujita</dc:creator></item><item><title><![CDATA[Docker の SQL Server へ SSMS で接続してみた]]></title><description><![CDATA[
 はじめに
Docker で立ち上げた SQL Server へ向けて、SSMS を使って接続してみました。
意外なところで沼ったので、備忘録として残しておきます。

 構成

構成はこんな感じ。
.NET 系の Web システムを Linux 上で動かす構成を考えていたら、こうなってしまいました。
デバッグ (というか動作確認) は実環境に合わせて VirtualBox の Ubuntu に構築するとして、ビジュアル的に SQL Server を操作するには SSMS が必要になりました。
(僕がコマンドライン上で SQL Server を扱うのが苦手というのは内緒)
そこで、Vir...]]></description><link>https://zenn.dev/nagiyu/articles/68f005eda86218</link><guid isPermaLink="true">https://zenn.dev/nagiyu/articles/68f005eda86218</guid><pubDate>Tue, 12 Aug 2025 03:28:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cCkxvEu_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2581%25AE%2520SQL%2520Server%2520%25E3%2581%25B8%2520SSMS%2520%25E3%2581%25A7%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258E%25E3%2582%2586%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ZDRlY2Y4NjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なぎゆー</dc:creator></item><item><title><![CDATA[新卒エンジニアが Claude Code にコントリビュートした話 - Docker DNS問題を解決できた🎊]]></title><description><![CDATA[
 はじめに
今年、GMOメディア株式会社に入社した新卒1年目のエンジニアの水崎です。
入社してまだ数ヶ月ですが、Anthropic社のClaude Codeというツールにコントリビュートしました。
会社の新卒研修で学んだDockerを含めたコンテナとネットワークの知識が直接活きた瞬間でした。
今回は、新卒でもOSSに貢献できるという実体験を共有します。

 Claude Codeとは？
まず、Claude Codeについて簡単に説明します。
Claude Code / Github

Claude Code is an agentic coding tool that lives in...]]></description><link>https://zenn.dev/gmomedia/articles/e428a8e951a581</link><guid isPermaLink="true">https://zenn.dev/gmomedia/articles/e428a8e951a581</guid><pubDate>Tue, 12 Aug 2025 01:07:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pKlHWHWy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E5%258D%2592%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%2520Claude%2520Code%2520%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2520-%2520Docker%2520DNS%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shota%2520Mizusaki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzOGEzNzc5MTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GMO%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzYzQ0YTZhZjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota Mizusaki</dc:creator></item><item><title><![CDATA[scratch イメージから作る WSL ディストリビューション]]></title><description><![CDATA[こんにちは、Fairy Devices の熊谷です。
Windows Subsystem for Linux （WSL） 内の Linux ディストリビューションは、 Microsoft Store を介さずとも、ルートファイルシステムを tar アーカイブ形式でインポートすることで利用できることをご存知でしょうか？
この方法を使うことで、必要最小限のリソースで動作する、軽量でセキュアな WSL 環境を手に入れることもできます。例えば、自社向けにセキュリティ保護された環境[1] を配布することで、一貫したセキュリティレベルでの管理が実現できたりします。
この記事では、以下の Micros...]]></description><link>https://zenn.dev/fairydevices/articles/066ffb227ba3b5</link><guid isPermaLink="true">https://zenn.dev/fairydevices/articles/066ffb227ba3b5</guid><pubDate>Mon, 11 Aug 2025 20:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fHMNrCng--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:scratch%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%258B%2520WSL%2520%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kumavale%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MjE4ODkwNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25BB%25E3%2582%25BA%25E5%2585%25AC%25E5%25BC%258F%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxYTcwNDkyNzkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kumavale</dc:creator></item><item><title><![CDATA[Devcontainerでのコンテナ開発のファイル構成]]></title><description><![CDATA[Devcontainer開発でdevcontainer.json/Dockerfile/compose.ymlでの使い分けについて検証したのでまとめてみました。Dockerfileやcompose.ymlの単品や組み合わせ利用はDevcontainerなしで開発するとき用なので今回の検証から除外してます。

 条件
・projectディレクトリをコンテナ内にバインド
・ポートは双方向5000番を使用
・VS Code拡張機能2つ使用

 Tree構成
project
├── .devcontainer
│   ├── devcontainer.json
│   ├── docker-co...]]></description><link>https://zenn.dev/ice99skyblue/articles/4bd13e0215c19a</link><guid isPermaLink="true">https://zenn.dev/ice99skyblue/articles/4bd13e0215c19a</guid><pubDate>Mon, 11 Aug 2025 11:39:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z77J3k4b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Devcontainer%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ice%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ice</dc:creator></item><item><title><![CDATA[TiDBローカル環境構築⑤]]></title><description><![CDATA[TiDBのローカル環境の構築を5回目行なっていきます。
前回TiDB環境のDjango構築が出来ましたが、今回はDockerでREST APIの構築を行っていきます。

 コンテナ環境のツリー構成
DB構築時のツリー構造は以下のようにしてます。
今回はcoreフォルダの追加とその配下のファイル追加、後はapi/Dockerfileの編集、api/entrypoint.shの追加、setting.pyの変更を行いました。
.
├── .env.api
├── docker-compose.yml
└── src
    ├── infra
    │   └── db
    │     ...]]></description><link>https://zenn.dev/collabostyle/articles/3e398a01294dc1</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/3e398a01294dc1</guid><pubDate>Sun, 10 Aug 2025 14:51:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--skm_RSQI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TiDB%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E2%2591%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2594%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item></channel></rss>