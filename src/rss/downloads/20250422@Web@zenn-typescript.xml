<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 22 Apr 2025 09:17:20 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[RooCodeを使ってよく設計されたコード(API)の出力ができました！(とりあえずできたよの共有です）]]></title><description><![CDATA[とりあえずデモ。動画が貼れなかったのでXのリンクで
https://x.com/i/status/1914587888240746834

 ずっとモヤモヤしてきたこと

DDD(CQRS + ES)はいいのだけれど、ファイル数が多いのよな、腱鞘炎になる。
LLMに任せたいけど、LLMって結構品質の低いコードも出すので、すぐに開発速度が落ちるのよなー

っていう悩みがあって色々試行錯誤してました。そしたら、Claude sonnet 3.7とRoo Codeという組み合わせてできちゃいました！Cursorは多分system promptが微妙な感じで一般的にはこうじゃない？みたいな感じが...]]></description><link>https://zenn.dev/makumattun/articles/868ae010ecb915</link><guid isPermaLink="true">https://zenn.dev/makumattun/articles/868ae010ecb915</guid><pubDate>Tue, 22 Apr 2025 08:25:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GRCoqsBa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RooCode%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2588%25E3%2581%258F%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2528API%2529%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2528%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E3%2582%2588%25E3%2581%25AE%25E5%2585%25B1%25E6%259C%2589%25E3%2581%25A7%25E3%2581%2599%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mattun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4MDNiNTk0MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mattun</dc:creator></item><item><title><![CDATA[【Next.js】クライアント、サーバー別 Cookie操作の備忘録]]></title><description><![CDATA[
 はじめに
Next.jsでCookieを取得したり、設定したりする方法はサーバーサイドとクライアントサイドで異なります。
それらを整理しました。

 クライアントサイドでのCookie操作
クライアントサイドでは、ブラウザのAPI（document.cookie）を使用するか、ライブラリを使用してCookieを操作できます。

 ブラウザのAPI（document.cookie）を使用する
正規関数を用いたユーティリティ関数を使用して、ブラウザのAPIでCookie操作する例です。
後続のライブラリを使用する方法の方が簡潔に書けるのでおすすめです。

 Cookieを取得する
exp...]]></description><link>https://zenn.dev/kiwichan101kg/articles/4ea1b2d57fb437</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/4ea1b2d57fb437</guid><pubDate>Tue, 22 Apr 2025 08:06:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FmvlvJkm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2580%2581%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E5%2588%25A5%2520Cookie%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[TypeScriptでDIコンテナも使いたくなることもあるかもしれないのでとりあえずInversify触れておく。]]></title><description><![CDATA[
 この記事について
この記事を書いた理由としてはタイトル通り。TypeScript等についてはあまり詳しくはないが、開発しているとインスタンスをまとめて管理しておきたかったり、シングルトンなインスタンスが欲しくなったりということはあったりもするので、DIあるなら触っておこうという理由から試してみた。

 DIコンテナについて軽く説明
まず DI は Dependency Injection の略で依存性注入の意味。プログラムは関数やクラス等の小さなプログラムの組み合わせでできていて、何かを実現するために何かを使って動くといった依存関係を持っている。そんな依存するものをコンテナという容器...]]></description><link>https://zenn.dev/91works/articles/efca3b641d5974</link><guid isPermaLink="true">https://zenn.dev/91works/articles/efca3b641d5974</guid><pubDate>Tue, 22 Apr 2025 04:25:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qKZqcWGC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7DI%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2582%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2582%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259AInversify%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:adaniya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5ZDA5N2JmNjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:91works%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzVZWGxYdkw1ZXBzTWt2bnYweW1ubVE4ZjBXTTFmOVJSQVpEM3NpaU8xd1htV05nPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>adaniya</dc:creator></item><item><title><![CDATA[TypeScript + モダンパッケージで発生する import 解決エラー、tsconfig の設定を見直そう]]></title><description><![CDATA[
 はじめに
最近、Shopifyの公式SDKである @shopify/shopify-api を最新バージョンに上げたところ、正常に使えていたimportが突然モジュールが見つからないエラーに遭遇しました。
エラーの内容は以下のようなものでした：
モジュール '@shopify/shopify-api/rest/admin/2025-04' またはそれに対応する型宣言が見つかりません。
こちらについてどう対処すればよいのか？について今回記載していきます。

 結論：tsconfig設定のmoduleResolutionが古いままだった
エラーの主な原因は、tsconfig.jsonのm...]]></description><link>https://zenn.dev/shakechi/articles/c8bb14e68bf7bf</link><guid isPermaLink="true">https://zenn.dev/shakechi/articles/c8bb14e68bf7bf</guid><pubDate>Tue, 22 Apr 2025 02:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h-mHe6VU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%252B%2520%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%2520import%2520%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%2581tsconfig%2520%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E8%25A6%258B%25E7%259B%25B4%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B7%25E3%2583%25A3%25E3%2582%25B1%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>シャケチ</dc:creator></item><item><title><![CDATA[Jestで時間をテストしながら開発する]]></title><description><![CDATA[フロントエンド専門のWeb制作会社「株式会社トゥーアール」の西畑です。
業務でテストコードを書くことは多いのですが特に便利だなと思っているのが時間のテストです。
例えば「一週間以内の記事のみ新着アイコンを表示する」などの要件があった場合に、開発用のAPIにテストデータを入れて一週間に確認するなどはちょっと非効率です。
実際の開発ではAPIの時間は利用せずに確認用の変数を利用することも多いでしょう。
// const { createdAt } = response.json()
// 開発用のデータ、リリース時に戻す
const createdAt = '2025-04-22T10:00...]]></description><link>https://zenn.dev/tor_inc/articles/41916ed5ec7e83</link><guid isPermaLink="true">https://zenn.dev/tor_inc/articles/41916ed5ec7e83</guid><pubDate>Tue, 22 Apr 2025 01:56:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bzZzEOfG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2581%25A7%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%25A5%25BF%25E7%2595%2591%25E4%25B8%2580%25E9%25A6%25AC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2YWFmMzM0ZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%25BC%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hjcTRUQ3g5VWFxZ3VsSktVal9MQXpFVk5MYmxsaGRuYlVGZkxOUUE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>西畑一馬</dc:creator></item><item><title><![CDATA[217. Contains Duplicate]]></title><description><![CDATA[整数配列 nums が与えられたとき、配列内に少なくとも1つの値が2回以上出現する場合は true を返し、すべての要素が異なる場合は false を返してください。


 例1:
入力: nums = [1,2,3,1]
出力: true
説明:
要素 1 はインデックス 0 と 3 に出現します。


 例2:
入力: nums = [1,2,3,4]
出力: false
説明:
すべての要素が異なります。


 例3:
入力: nums = [1,1,1,3,3,4,3,2,4,2]
出力: true


 制約:


1 &lt;= nums.length &lt;= 10⁵（配...]]></description><link>https://zenn.dev/idapan/articles/b286fcda4fb115</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/b286fcda4fb115</guid><pubDate>Mon, 21 Apr 2025 22:21:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WWm65dYc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:217.%2520Contains%2520Duplicate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[JavaScriptとPHPの「配列」の違い：実は役割がちょっと違う！]]></title><description><![CDATA[普段、JavascriptやTypescriptを使って開発している私が、PHPの配列の仕様の違いに少しつまづいたことをきっかけに記事を書きました
JavaScriptとPHP、どちらもWeb開発でよく使われる言語ですが、似ているようで少し違う部分もあります。特に「配列」の扱いは、初学者の方が混乱しやすいポイントかもしれません。
この記事では、JavaScriptの配列（Array）とPHPの配列（array）の根本的な違いについて、サンプルコードを交えながら解説します。

 結論：役割が違う
ざっくり言うと、両者の「配列」が持つ役割が異なります。


JavaScript: Array...]]></description><link>https://zenn.dev/noah11/articles/33a34d70626586</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/33a34d70626586</guid><pubDate>Mon, 21 Apr 2025 17:44:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UDyY82s5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A8PHP%25E3%2581%25AE%25E3%2580%258C%25E9%2585%258D%25E5%2588%2597%25E3%2580%258D%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25EF%25BC%259A%25E5%25AE%259F%25E3%2581%25AF%25E5%25BD%25B9%25E5%2589%25B2%25E3%2581%258C%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E9%2581%2595%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA[初心者から始めるTypeScript入門 - 3日で基本構文をマスターする方法]]></title><description><![CDATA[
 はじめに
こんにちは！この記事では、TypeScript初心者が短期間で基本をマスターするための効率的な学習方法をご紹介します。私も数ヶ月前まではTypeScriptに触れたことがなく、学習過程で感じた「ここが分かりにくかった」というポイントを重点的に解説します。
なぜTypeScriptを学ぶべきなのか？それは現在のWeb開発において最も需要の高いスキルの一つだからです。TypeScriptは、JavaScriptの上位互換言語として、大規模な開発における型安全性を提供します。
本記事では、以下の内容を3日間で習得するためのロードマップを提案します：


1日目: TypeScri...]]></description><link>https://zenn.dev/zak4132/articles/typescript-3-1745243870111</link><guid isPermaLink="true">https://zenn.dev/zak4132/articles/typescript-3-1745243870111</guid><pubDate>Mon, 21 Apr 2025 13:59:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dl0zwIyb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BTypeScript%25E5%2585%25A5%25E9%2596%2580%2520-%25203%25E6%2597%25A5%25E3%2581%25A7%25E5%259F%25BA%25E6%259C%25AC%25E6%25A7%258B%25E6%2596%2587%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zak4132%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjMjVjYzRiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zak4132</dc:creator></item><item><title><![CDATA[三重県の市町村の人口を調べるついでにTypeScriptを復習]]></title><description><![CDATA[地方自治法第8条では、市となる条件として以下の4つが挙げられている。

人口が5万人以上。ただし、市町村の合併の特例が適用されれば3万人以上でも可。
中心的市街地に全戸数の6割以上が存在すること。
商工業など都市的業態に従事する者とその同一世帯の人口が、全体の6割以上を占めること。
都道府県の条例で定められた都市的施設などの条件を満たすこと。

しかし実際には、市に昇格した当初は人口が5万人以上であっても、人口減少により現在は5万人未満となっている市もある。また、合併特例を使って5万人未満で市になった例も存在する。
そこで今回は、三重県の全市町村を対象に、「人口が5万人以上かどうか」とい...]]></description><link>https://zenn.dev/ayatakaa_chan/articles/3bceb8d074a6ed</link><guid isPermaLink="true">https://zenn.dev/ayatakaa_chan/articles/3bceb8d074a6ed</guid><pubDate>Mon, 21 Apr 2025 13:36:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NElyDcEH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2589%25E9%2587%258D%25E7%259C%258C%25E3%2581%25AE%25E5%25B8%2582%25E7%2594%25BA%25E6%259D%2591%25E3%2581%25AE%25E4%25BA%25BA%25E5%258F%25A3%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A7%25E3%2581%25ABTypeScript%25E3%2582%2592%25E5%25BE%25A9%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%2591%25E4%25B8%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjMjFjMTZiMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>村中</dc:creator></item><item><title><![CDATA[仕事で使うための Cloudflare Workers 入門 Day 3 - Queue/CronTriggers/Workflow]]></title><description><![CDATA[(速習のためのハンズオン資料です。口頭で捕捉します)
定期実行やワークフロー周りを解説します。そもそも何ができるかを認識するためことを目的として書いています。

 セットアップ
$ npm create cloudflare

HellWorld
Queue
TypeScript


 Cloudflare Queues
https://www.cloudflare.com/ja-jp/developer-platform/products/cloudflare-queues/
Cloudflare Queue には Consumer(消費する側) と Producer(生成する側があり...]]></description><link>https://zenn.dev/mizchi/articles/cf-worker-for-pro-day3</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/cf-worker-for-pro-day3</guid><pubDate>Mon, 21 Apr 2025 12:20:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--REeR0xnt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Cloudflare%2520Workers%2520%25E5%2585%25A5%25E9%2596%2580%2520Day%25203%2520-%2520Queue%252FCronTriggers...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[仕事で使うための Cloudflare Workers 入門 Day 2 - Durable Objects]]></title><description><![CDATA[(ハンズオン資料なので足りない部分は口頭で捕捉します)
$ npx create cloudflare@latest

Hello World
Worker + Durable + Assets を選択
TypeScript


 Workers Assets を知る
(TODO 別の記事に分割したほうがいいかも)
プロキシサーバーをつくる人には興味がないかもしれませんが、Cloudflare Workers は静的アセット配信が組み込まれています。

wrangler.json
  "assets": {
    "binding": "ASSETS",
    "directory"...]]></description><link>https://zenn.dev/mizchi/articles/cf-worker-for-pro-day2</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/cf-worker-for-pro-day2</guid><pubDate>Mon, 21 Apr 2025 11:30:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9m_Jk4uR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Cloudflare%2520Workers%2520%25E5%2585%25A5%25E9%2596%2580%2520Day%25202%2520-%2520Durable%2520Objects%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[TypeScript で GitHub Actions ワークフローを記述する「ghats」の紹介]]></title><description><![CDATA[GitHub Actions ワークフローを TypeScript で記述できるツールを作りました。
なぜなら GitHub Actions ワークフローは TypeScript で記述できた方がいいので。

.github/workflows/example.ts
import { Workflow, Job } from "ghats";

const workflow = new Workflow("Hello", {
  on: "push",
});

workflow.addJob(
  new Job("hello", {
    runsOn: "ubuntu-lates...]]></description><link>https://zenn.dev/kou_pg_0131/articles/ghats-introduction</link><guid isPermaLink="true">https://zenn.dev/kou_pg_0131/articles/ghats-introduction</guid><pubDate>Mon, 21 Apr 2025 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JQgth4Vt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520GitHub%2520Actions%2520%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E8%25A8%2598%25E8%25BF%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cghats%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hiNFlHemhPbVVNRThrZjV5Z01DakFoOWsxeEtCTzRLdWdVMExDQWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[Next.js + Supabase カレンダーメモアプリ]]></title><description><![CDATA[Next.jsの初学者向けチュートリアルコンテンツです。カレンダー形式のメモアプリをNext.js及びTypeScriptで開発していきます。
また、入力したメモ情報の格納には、BaaS（Backend as a Service）であるSupabaseを利用します。Supabaseとの連携は、Next.jsの Server Actions を利用します。
クライアントコンポーネントからサーバーコンポーネントの実装までフルスタック型の開発を体得します。]]></description><link>https://zenn.dev/amayann/books/83b4298bd4ec40</link><guid isPermaLink="true">https://zenn.dev/amayann/books/83b4298bd4ec40</guid><pubDate>Mon, 21 Apr 2025 08:37:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V2BYvCQz--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lNDBiY2U0MWYxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>bauhaus</dc:creator></item><item><title><![CDATA[figma-clone作り中の棚卸し]]></title><description><![CDATA[
 本記事の内容
基本的には技術の棚卸しを目的としています。
現在、下記の動画を参考にfigma-cloneを作成し、勉強しています、
今回は、途中報告としています。
そのため、環境構築などは、下記動画を参考にしてください。英語ですが、指示に従えば特に問題はないです。
https://www.youtube.com/watch?v=oKIThIihv60

 フォルダ構成のおさらい
本プロジェクト「figma-clone」のディレクトリ構成は、概ね以下の通りです。
figma-clone
 ├─ app
 │   ├─ layout.tsx
 │   ├─ page.tsx
 │   └...]]></description><link>https://zenn.dev/sushizanmai/articles/c1c3c1252436b9</link><guid isPermaLink="true">https://zenn.dev/sushizanmai/articles/c1c3c1252436b9</guid><pubDate>Mon, 21 Apr 2025 05:33:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IcWmS5_z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:figma-clone%25E4%25BD%259C%25E3%2582%258A%25E4%25B8%25AD%25E3%2581%25AE%25E6%25A3%259A%25E5%258D%25B8%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%2597%25E3%2581%2596%25E3%2582%2593%25E3%2581%25BE%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZGU4OGE3NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すしざんまい</dc:creator></item><item><title><![CDATA[フロントエンドDDD]]></title><description><![CDATA[フロントエンド DDD とはフロントエンドの開発に DDD（ドメイン駆動設計）の思想を取り入れた設計思想です。DDD はバックエンドなどの開発では広く活用されていますが、フロントエンドの開発ではあまり普及していません。
一方で弊社（株式会社TAIAN）は婚礼業界向け SaaS のフロントエンドの開発に DDD を取り入れて2年間、100以上の機能を開発してきました。本シリーズでは我々の経験をもとにフロントエンド DDD について説明したのち、チームの変化、大変なところ、今後の可能性などを紹介していきます。

 なぜフロントエンド DDD が必要だったのか
フロントエンド DDD について...]]></description><link>https://zenn.dev/taian/articles/229d268b7684ac</link><guid isPermaLink="true">https://zenn.dev/taian/articles/229d268b7684ac</guid><pubDate>Mon, 21 Apr 2025 04:57:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X-vMzyOM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589DDD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:HosokowaR%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MWVkNzdkZjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TAIAN%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjMzgzZjRjZTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HosokowaR</dc:creator></item><item><title><![CDATA[分割代入と splice【個人学習まとめ】]]></title><description><![CDATA[
 分割代入と splice
TypeScirpt の学習を進めている際に、分割代入とspliceを使って「配列からランダムに 1 つだけデータを取り出す」というサンプルコードがありました。
分割代入とspliceの組み合わせに躓いたので、調べたことをまとめました。

 やりたかったこと
やりたかったこととしてはシンプルです。

あらかじめquestionsという配列にデータが入っている

questionsからランダムに 1 つ取り出して配列で返す
一度取り出した問題はquestionsから取り除く

サンプルコードは次のようなコードでした。
const questions = ["Q...]]></description><link>https://zenn.dev/o0rororo0o/articles/61f433f5e7e434</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/61f433f5e7e434</guid><pubDate>Sun, 20 Apr 2025 20:18:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jS8S6gDD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%25A8%2520splice%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[Next.js 15.3.1 OGP画像が表示できない]]></title><description><![CDATA[
 結論
src/app/ (src使っていない場合はapp/)直下に


opengraph-image.jpg（.jpg, .jpeg, .png, .gif）

twitter-image.jpg（.jpg, .jpeg, .png, .gif）

というファイル名でOGP用の画像ファイルを置く

 状況
今まで（ver14~）はlayout.tsxにMetadataを設置していたが15.3.1にバージョンアップしたら表示されなくなっていた

// 省略
 openGraph: {
        type: "website",
        locale: "ja_JP",
...]]></description><link>https://zenn.dev/taiki_asakawa/articles/d004653f804b85</link><guid isPermaLink="true">https://zenn.dev/taiki_asakawa/articles/d004653f804b85</guid><pubDate>Sun, 20 Apr 2025 16:53:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xg3cuV9d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252015.3.1%2520OGP%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taiki.Asakawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1NjU5NDRkNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taiki.Asakawa</dc:creator></item><item><title><![CDATA[Record<string, any>としても実はstring以外のキーも入る]]></title><description><![CDATA[
 始めに
以下のようなオブジェクトをフィールドごとに描画方法をカスタマイズして一括で描画できるようにするメソッドを作った際に、Reactのkeyのところで symbol は代入できないというエラーが出ました。

Record&lt;string, any&gt;なのにkeyof Record&lt;string, any&gt;にsymbolがあると言われる
type RenderItemByKey&lt;Data extends Record&lt;string, any&gt;, K extends keyof Data&gt; = {
  fieldKey: K
  label:...]]></description><link>https://zenn.dev/numa_san/articles/55bc7a36df6efc</link><guid isPermaLink="true">https://zenn.dev/numa_san/articles/55bc7a36df6efc</guid><pubDate>Sun, 20 Apr 2025 15:33:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HSg1oKqz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Record%253Cstring%252C%2520any%253E%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E5%25AE%259F%25E3%2581%25AFstring%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2582%25E5%2585%25A5%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MWZjYWE2NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬまさん</dc:creator></item><item><title><![CDATA[ファイルをコピペ・ドラッグアンドドロップするとストレージにアップロードされたファイルのURLが自動で挿入されるtextareaの実装してみた]]></title><description><![CDATA[
 ファイルをコピペ・ドラッグアンドドロップするとストレージにアップロードされたファイルのURLが自動で挿入されるtextareaの実装してみた
ZennやQiitaではファイルをドラッグアンドドロップすると自動でファイルがアップロードされてURLがフォームに自動で挿入されます。
このフォームについて気になったので動きだけ同じものを作ってみました。

 実際の画面

!
実際はストレージに格納されているファイルのURLが表示されます


 コード


 使用技術

Next.js
Vercel Blob
zod
react-hook-form


 実装
関連するところだけ抜き出して書き...]]></description><link>https://zenn.dev/mitate_gengaku/articles/copy-or-drop-file-textarea</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/copy-or-drop-file-textarea</guid><pubDate>Sun, 20 Apr 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HDSJ4IuA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2583%25BB%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2589%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AEURL%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2595%25E3%2582%258C%25E3%2582%258Bte...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[Typescriptの基本構文(参照用)]]></title><description><![CDATA[
 🌟 TypeScriptとは？

JavaScriptに静的型付けを加えた言語。
JavaScriptに**コンパイル（トランスパイル）**される。

型安全性が高く、大規模開発・チーム開発に向いている。

.tsという拡張子を持つ。



 🆚 JavaScriptとの違い



項目
JavaScript
TypeScript




型
動的型付け
静的型付け


実行環境
直接ブラウザやNode.jsで動く
JSにコンパイルしてから実行


エラーチェック
実行時に発見される
コンパイル時に発見される


コーディング支援
弱い
エディタで補完・警告が豊富


インターフェー...]]></description><link>https://zenn.dev/shizu/articles/aac419cb1245d2</link><guid isPermaLink="true">https://zenn.dev/shizu/articles/aac419cb1245d2</guid><pubDate>Sun, 20 Apr 2025 10:50:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sui63bT6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%25A7%258B%25E6%2596%2587%2528%25E5%258F%2582%25E7%2585%25A7%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%2587%25E7%25A9%258F%25E7%25A9%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhZGQ5NjM1ZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碇穏空</dc:creator></item></channel></rss>