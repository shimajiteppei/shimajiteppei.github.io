<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 05 Aug 2025 05:16:00 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Rust言語のChumskyでパーサ入門]]></title><description><![CDATA[
 パーサとは
広義には、文字列をプログラミングで扱うデータ構造にするため、文字列の構文を解析すること(構文解析)で、その途中の文字列を単語単位に分割する処理(字句解析)を含む、全体の処理を指します。
つまり、文字列を解析してコンピューター上で使用するための前処理です。
例としては


1 * (2 + 3) の文字列を構文解析し計算を行う


プログラミング言語を構文解析し、処理を実行 (インタープリター)


プログラミング言語を構文解析し、マシン語に変換 (コンパイラ)


HTML、JSON、TOMLなどデータ記述形式を構文解析し、データの読み込み



 chumskyとは
c...]]></description><link>https://zenn.dev/ubiblog2/articles/09e7c38253164d</link><guid isPermaLink="true">https://zenn.dev/ubiblog2/articles/09e7c38253164d</guid><pubDate>Mon, 04 Aug 2025 05:08:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M-RIOdbw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AEChumsky%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B5%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TechSavvy_24%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3YTVmZDAwZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TechSavvy_24</dc:creator></item><item><title><![CDATA[Rust をはじめるメンバーに伝えたい「 if より match 」]]></title><description><![CDATA[
 Rust をはじめるメンバーに伝えたい「 if より match 」
ぼくの所属するドクターメイト株式会社では 2023-07 から Rust を使用しています。 Rust の使用を決定した当時から現在に至るまで「メンバー全員が Rust についての知識・経験が豊富だった」なんてことはありません。常に不慣れなメンバーが居て、慣れたメンバーもより良いコードを書くために試行錯誤を繰り返しています。
「 if より match 」は、そんな新しく Rust をはじめるメンバーに伝えたいことのひとつです。

 if を選択しがち
チームにジョインするメンバーは大抵の場合いくつかのプログラミン...]]></description><link>https://zenn.dev/doctormate/articles/269b20722fd9cd</link><guid isPermaLink="true">https://zenn.dev/doctormate/articles/269b20722fd9cd</guid><pubDate>Mon, 04 Aug 2025 03:00:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0oxEiaxj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E4%25BC%259D%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%25E3%2580%258C%2520if%2520%25E3%2582%2588%25E3%2582%258A%2520match%2520%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bouzuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiYmEzODYwNjQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2589%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%2588%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lqVElDaW81T2gxMjNQSzhqQXkydnJpTDh6dC1SWUZvUnYzd0tjb3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bouzuya</dc:creator></item><item><title><![CDATA[Rust製ログイン機能付きWebフレームワーク「ares」の背景と思想]]></title><description><![CDATA[― Rust製ログイン機能付きWebフレームワークaresの背景と思想 ―
「RustでもLaravelのようにログイン機能付きのWeb開発ができたら」
そんな思いから、Webフレームワーク「ares」の開発を始めました。
Rustは安全性、速度、並行性のすべてを高度に両立できる言語です。


 なぜRustでWebフレームワークを自作したのか？

 理由① 既存のRust Webフレームワークにログインライブラリがない
RustのWebフレームワークAxumやActix WebにはLaravel(PHP)やDjango(Python)のようなログイン機能のライブラリがありません。そのた...]]></description><link>https://zenn.dev/knbzyh/articles/6dfd17f5849e89</link><guid isPermaLink="true">https://zenn.dev/knbzyh/articles/6dfd17f5849e89</guid><pubDate>Mon, 04 Aug 2025 01:04:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2z9zsBHp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A3%25BD%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%25A9%259F%25E8%2583%25BD%25E4%25BB%2598%25E3%2581%258DWeb%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2580%258Cares%25E3%2580%258D%25E3%2581%25AE%25E8%2583%258C%25E6%2599%25AF%25E3%2581%25A8%25E6%2580%259D%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hpscript%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzMmNjYmFmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hpscript</dc:creator></item><item><title><![CDATA[緑コーダーがRustで解説してみた(ABC417 A ~ E)]]></title><description><![CDATA[AtCoder Beginner Contest 417のA-E問題を緑コーダーが分かりやすく解説をまとめました。
参考になりましたら幸いです。

 ABC417-A
問題
https://atcoder.jp/contests/abc417/tasks/abc417_a
文字列 S について、先頭から A 文字、末尾から B 文字を取り除いた文字列を出力する問題です。
解説
元の文字列から削除後に残る部分の開始位置と終了位置を計算します。
0-indexの開始位置は A 番目 、終了位置は N - B 番目 となるので、この範囲内の文字を順に出力することで、求める文字列を得ることができ...]]></description><link>https://zenn.dev/nakst_hide/articles/18a1651b1d63d2</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/18a1651b1d63d2</guid><pubDate>Sun, 03 Aug 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oDPHzFSN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2581%258CRust%25E3%2581%25A7%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528ABC417%2520A%2520%7E%2520E%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1YTJjNWQyNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[言語の速度比較：Rust, Go, Node.js, PHPを検証！]]></title><description><![CDATA[こんにちは、Southanです！
プログラマー界の永遠のテーマ「結局、どの言語が速いの？」
……その問いに、今、終止符を打ちにきた！
シャンクスか！ とツッコまれそうですが、普段使ってるRust、Go、PHP、Node.jsの4言語で、速度比較をしました。
ただし今回はCPUメインで、大量の計算と関数呼び出しを通じて、各言語がどれだけの速度を発揮できるかを測ってみました。実務ではデータベースやネットワークのI/O待ちが大半ですが、今回は純粋な「計算力」にフォーカスしています！
今回の検証に使用したソースコードはこちらで公開しています。

 測定方法：フィボナッチ数列の「素朴な再帰」で深掘...]]></description><link>https://zenn.dev/southan/articles/c9d848c21bdfcb</link><guid isPermaLink="true">https://zenn.dev/southan/articles/c9d848c21bdfcb</guid><pubDate>Sun, 03 Aug 2025 16:47:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kfUJyMl8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2580%259F%25E5%25BA%25A6%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%259ARust%252C%2520Go%252C%2520Node.js%252C%2520PHP%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2582%25A6%25E3%2582%25B5%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1N2IzYmJkZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>サウサン</dc:creator></item><item><title><![CDATA[Rust & Wasmでミニカートゲームを作る]]></title><description><![CDATA[
 はじめに
今回は、Cnavas上で動作するカートゲームを作りました。昔、初めて"Basic Magazime"を読んでタイピングして遊んだのが、本ミニゲームのような、障害物を避けながらゴールを目指すようなゲームでした。GWに、当時の記事見たさに、青梅市にある”マイコン博物館"に行ってみたのですが、残念ながら、当時の記事を見つけることはできませんでした😢。画面のイメージは、障害物が"#"で、"●"のヘビのように下から上にスクロールして...というような感じのゲームだったと思います。
今回も、興味を持って頂いた方は、パソコンからお試しください🙂。

 ミニカートゲーム


 お試しURL...]]></description><link>https://zenn.dev/yurioka/articles/e537bfbd162ef3</link><guid isPermaLink="true">https://zenn.dev/yurioka/articles/e537bfbd162ef3</guid><pubDate>Sat, 02 Aug 2025 14:43:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R9ZdA0f9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%2526%2520Wasm%25E3%2581%25A7%25E3%2583%259F%25E3%2583%258B%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:myurioka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3YTE2NGMzMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>myurioka</dc:creator></item><item><title><![CDATA[crates.ioにトークンレスでpublish可能になったTrusted Publish]]></title><description><![CDATA[以前にjsr.ioにpublishする方法の記事で、jsr.ioは特に従来のパッケージマネージャとは異なりトークンを使わずに公開できるという点が素晴らしい体験だと紹介したことがありました。
https://zenn.dev/kesin11/articles/20240530_publish_jsr
特にここ数年はあらゆるプログラミング言語のOSSを狙ったサプライチェーン攻撃が多発しており、著名なOSS開発者のトークン漏洩に端を発したセキュリティインシデントが増えてきています。
という昨今のぶっそうな情勢の中、Rust好きの同僚からRustのパッケージレジストリであるcrates.ioでも...]]></description><link>https://zenn.dev/kesin11/articles/20250802_crates_trusted_publish</link><guid isPermaLink="true">https://zenn.dev/kesin11/articles/20250802_crates_trusted_publish</guid><pubDate>Sat, 02 Aug 2025 14:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oV7nsB0p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:crates.io%25E3%2581%25AB%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25A7publish%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259FTrusted%2520Publish%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kesin11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5YnpxY196Y2VPbEhIWlJGajNaSDdYWlM0OXVCNzdFZVZjV2xrbXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kesin11</dc:creator></item><item><title><![CDATA[Windowsでtauriの開発を始めようとしたら、failed to get cargo metadata]]></title><description><![CDATA[少しはまったので共有します。
公式の手順通りに環境構築を行っていき、"pnpm run tauri dev"で開発サーバーを立ち上げようとしたところ、次のエラーとなりました。
failed to get cargo metadata: cargo metadata command exited with a non zero exit code: error: rustup could not choose a version of cargo to run, because one wasn't specified explicitly, and no default is confi...]]></description><link>https://zenn.dev/jun1026/articles/36441dde90abb9</link><guid isPermaLink="true">https://zenn.dev/jun1026/articles/36441dde90abb9</guid><pubDate>Sat, 02 Aug 2025 02:07:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yd9c7W5l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7tauri%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2580%2581failed%2520to%2520get%2520cargo%2520metadata%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jlmn1026%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZjRjZWY2YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jlmn1026</dc:creator></item><item><title><![CDATA[自作のWebアプリをLocal-firstなデスクトップアプリとして作り直した話（Elixir+ElmからRust+Scala.jsへ）]]></title><description><![CDATA[
 あらまし
初めまして、@marubinotto と申します。Elixir/Phoenix + Elm で作っていた自作の Web アプリケーションを、二年ぐらいかけて Rust/Tauri + Scala.js によるデスクトップアプリケーションに作り直しました。この記事では、もはや迷走とも呼べなくもない、長くて辛かったこの作り直しについて余すところなく紹介していきたいと思います。
アプリケーションの名前は Cotoami（コトアミ）といいます。一言で説明すれば、チャットやマイクロブログのように気軽に情報を投稿しつつ、それらをレゴブロックのように組み合わせて知識ベースを構築することが...]]></description><link>https://zenn.dev/marubinotto/articles/cotoami-remake</link><guid isPermaLink="true">https://zenn.dev/marubinotto/articles/cotoami-remake</guid><pubDate>Fri, 01 Aug 2025 09:07:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rtvPks7s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%25AEWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Local-first%25E3%2581%25AA%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%259C%25E3%2582%258A%25E7%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%25EF%25BC%2588Elixir%252BElm%25E3%2581%258B%25E3%2582%2589Rust...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:marubinotto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWFCbUE0MWF3VjdQSVZNaHZnVEdUTWUydmxvZTZaZ0dhcHpQYmdBNzg5NnRQdURLNUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>marubinotto</dc:creator></item><item><title><![CDATA[ブロックチェーン　]]></title><description><![CDATA[初心者
ブロックチェーンの基礎
Solidityスマートコントラクト開発
PythonとVyper入門
チェーンリンクの基礎
Web3ウォレットのセキュリティ
ゼロ知識証明（ZKP）の基礎
Rustプログラミングの基礎
中級
Foundryの基礎
中級レベルのPythonとVyper
フルスタックWeb3開発クラッシュコース
上級
高度なFoundry
高度なPythonとVyperスマートコントラクト開発
スマートコントラクトのセキュリティ
アセンブリと型式検証　Solidityコンパイラとオペコード
Rocket RocketPool rETH統合
カーブステーブルスワップ
カーブ・...]]></description><link>https://zenn.dev/smartcontract/articles/ea67197532a46f</link><guid isPermaLink="true">https://zenn.dev/smartcontract/articles/ea67197532a46f</guid><pubDate>Fri, 01 Aug 2025 02:02:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mCYHwYhC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tqblMxWTBZczZkRlVNM2RibU9tcWU2dF90MjlUN2l0Ql9QRU1TOElsWTVWWElUVVU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ブロックチェーン</dc:creator></item><item><title><![CDATA[【Rust】docs.rs MCP - docs.rsの検索に特化したMCPサーバー]]></title><description><![CDATA[docs.rsの検索に特化したMCPサーバー『docs.rs MCP』を公開しました！
https://github.com/nuskey8/docs-rs-mcp
これを追加した状態でAIに「〇〇に最適なクレートを探して」「〇〇クレートの〇〇の使い方を教えて」などの指示を出すと、適切なページを検索してその結果を取得してくれます。

上はwasmtimeクレートのEngine型について検索させている例です。かなりいい感じの回答が返ってきているのではないでしょうか。
毎度新しいクレートを使う度にドキュメントを探しに行くのが面倒だったので、その辺りを雑にAIに聞くだけで答えてくれるようになっ...]]></description><link>https://zenn.dev/nuskey/articles/library-docs-rs-mcp</link><guid isPermaLink="true">https://zenn.dev/nuskey/articles/library-docs-rs-mcp</guid><pubDate>Thu, 31 Jul 2025 12:45:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UVdWmacB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rust%25E3%2580%2591docs.rs%2520MCP%2520-%2520docs.rs%25E3%2581%25AE%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25AB%25E7%2589%25B9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259FMCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nuskey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZTM4NWZlYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nuskey</dc:creator></item><item><title><![CDATA[Kubernetes リソースに対して SQL のクエリを実行するツールを作りました]]></title><description><![CDATA[
 概要

kuqu は Kubernetes クラスタ内のリソースに対して SQL 構文でクエリを実行できる Rust 製のコマンドラインツールです。Apache DataFusion を活用し、動的スキーマ推論によって Kubernetes リソースをテーブルデータとして扱い、複雑な条件検索、集約、結合操作を SQL で実行します。
以下に、実行例を示します。
$ kuqu "SELECT metadata.name AS pod, status.phase AS phase
     FROM 'pod/kube-system' WHERE status.phase = 'Runn...]]></description><link>https://zenn.dev/miscellaneous/articles/da57a0211926b5</link><guid isPermaLink="true">https://zenn.dev/miscellaneous/articles/da57a0211926b5</guid><pubDate>Wed, 30 Jul 2025 03:10:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---k69TuT3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kubernetes%2520%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2597%25E3%2581%25A6%2520SQL%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ynqa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODIxZDZmYzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ynqa</dc:creator></item><item><title><![CDATA[贋作Sudachi.go : Claude CodeでRustのコードを移植できるか]]></title><description><![CDATA[
 はじめに
「Claude Code って知ってますか？」とナイツのネタみたいな問いを投げてしまいますが、ほんと衝撃的でした。こんなにちゃんとしたコードが機械によって書かれる日が来るとは思ってませんでした。しかも、Claude Codeは、適当にコンソールを使って、適当なツールを組み合わせて、grep したり、sed したり、シェルスクリプトを作って検証し出したり、プログラマがやりそうなことはおおむねやってくれます。
デバッグコードを仕込んで printf デバッグし始めたときはほんとひっくり返りそうになりました。
そんなわけで、Claude Code でどのくらいのことが出来るだろう...]]></description><link>https://zenn.dev/ikawaha/articles/20250729-adc274796100fa</link><guid isPermaLink="true">https://zenn.dev/ikawaha/articles/20250729-adc274796100fa</guid><pubDate>Tue, 29 Jul 2025 13:55:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0CuqCXSS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B4%258B%25E4%25BD%259CSudachi.go%2520%253A%2520Claude%2520Code%25E3%2581%25A7Rust%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%25A7%25BB%25E6%25A4%258D%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikawaha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZTZmYTNhMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikawaha</dc:creator></item><item><title><![CDATA[Kubernetes オペレーターの形式検証]]></title><description><![CDATA[Kubernetes オペレーターは、ユーザーがコントローラーを独自に開発してアプリケーションやクラスターを制御するための拡張パターンです。カスタムリソースや外部アプリケーションのエンティティを非同期的に操作する必要があるため、オペレーターの開発は慎重に行う必要があります。
複雑なアプリケーションをバグなく開発するために、形式手法のアプローチがしばしば取り入れられます。Anvil は、Sun らが USENIX OSDI'24 で提案した、Kubernetes オペレーターに形式手法を取り入れたフレームワークです。論文や公開された GitHub リポジトリをもとに調査してみました。
元ネ...]]></description><link>https://zenn.dev/ajalab/articles/formally-verifying-kubernetes-controllers</link><guid isPermaLink="true">https://zenn.dev/ajalab/articles/formally-verifying-kubernetes-controllers</guid><pubDate>Tue, 29 Jul 2025 12:15:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Obilaj4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kubernetes%2520%25E3%2582%25AA%25E3%2583%259A%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E5%25BD%25A2%25E5%25BC%258F%25E6%25A4%259C%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JXNDNncWxWV0NFZTU2M3J5bUVoamlScXREVGJCREFuV2FRbkR5VFRvd0FnNWJOV1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[【Rust】クロージャと関数ポインタ]]></title><description><![CDATA[今回の記事はRustのクロージャについて。他の多くの言語と同様、Rustにもクロージャや関数ポインタを扱うための構文が用意されています。ただし、Rustには所有権やトレイトなどの独自の機能が存在するため、これらとの関わりも理解する必要があるでしょう。
この記事ではRustにおけるクロージャ・関数ポインタの構文から、これらが内部ではどのように動作しているかを含めて解説していきます。

 クロージャ
Rustでは以下のような構文でクロージャを作成することができます。
let double = |a| a * 2;

let sub = |a, b| {
    a - b
};
|と|で囲わ...]]></description><link>https://zenn.dev/nuskey/articles/rust-closure-function-pointer</link><guid isPermaLink="true">https://zenn.dev/nuskey/articles/rust-closure-function-pointer</guid><pubDate>Tue, 29 Jul 2025 09:17:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OU6_Su4S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rust%25E3%2580%2591%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2581%25A8%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nuskey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZTM4NWZlYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nuskey</dc:creator></item><item><title><![CDATA[緑コーダーがRustで解説してみた(ABC416 A ~ E)]]></title><description><![CDATA[AtCoder Beginner Contest 416のA-E問題を緑コーダーが分かりやすく解説をまとめました。参考になりましたら幸いです。

 ABC416-A
問題
https://atcoder.jp/contests/abc416/tasks/abc416_a
文字列 S の指定された区間 [L, R] が全て o かどうかを判定する問題です。
解説
指定された区間 [L, R] に含まれる文字を順に確認し、1つでも x が含まれていれば No 、全て o であれば、 Yes を出力します。
コード

abc416a.rs
use proconio::{input, marke...]]></description><link>https://zenn.dev/nakst_hide/articles/448c466f7953c8</link><guid isPermaLink="true">https://zenn.dev/nakst_hide/articles/448c466f7953c8</guid><pubDate>Mon, 28 Jul 2025 13:01:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6G1S4eFv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B7%2591%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2581%258CRust%25E3%2581%25A7%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2528ABC416%2520A%2520%7E%2520E%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakahide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1YTJjNWQyNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakahide</dc:creator></item><item><title><![CDATA[【Bevy 0.16.1】初心者がクリックできる画像をつくるのに右往左往した話]]></title><description><![CDATA[
 はじめに
今回はRustで構築された驚くほどシンプルなデータ駆動型ゲームエンジン【Bevy】についてです！
最新バージョン(2025/7/27現在) Bevy 0.16.1において、画像をクリックして遊べる超簡単なゲームをつくってみました！

 １：インストールとBevyのECSについて
まずはBevyのインストールですが、これは簡単にできます。
初めてBevyに触るならこちらの方が初期設定やBevyの概要を理解する上でとても参考になります。
https://www.youtube.com/watch?v=5k66KB6DisI
もうひとつ、バージョンは古い(0.10)ですが、ゲーム...]]></description><link>https://zenn.dev/drmonkybrain/articles/2e941436ff634b</link><guid isPermaLink="true">https://zenn.dev/drmonkybrain/articles/2e941436ff634b</guid><pubDate>Mon, 28 Jul 2025 10:15:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qwwj1jpq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Bevy%25200.16.1%25E3%2580%2591%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AB%25E5%258F%25B3%25E5%25BE%2580%25E5%25B7%25A6%25E5%25BE%2580%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25A7%25E3%2582%258A%25E3%2583%25BC%25E3%2583%259A%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMTU3MmQ5YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あでりーペンギン</dc:creator></item><item><title><![CDATA[Rustの借用を影分身の術(NARUTO)で説明してみた]]></title><description><![CDATA[こんにちは、うずまきナルトだってばよ！！
どもども、southan（サウサン）です！
今回はタイトル通り、Rustの所有権をNarutoの『影分身の術』で（かなり無理やり）説明してみます。
自分の中ではしっくりきたのですが、皆さんには『余計に分からんってばよ！』と思わせてしまうかもしれません…。
もし分かりにくい部分があっても、どうかお手柔らかにお願いします！」
対象読者

Rustの学習を始めたばかりの方
Narutoをご存知の方（影分身の術が使えると尚良し）

になります。

 そもそも「影分身の術」と「借用」とは？

 影分身の術とは？
主人公うずまきナルトの得意忍術
術者のチャク...]]></description><link>https://zenn.dev/southan/articles/388c1fd18829d4</link><guid isPermaLink="true">https://zenn.dev/southan/articles/388c1fd18829d4</guid><pubDate>Sun, 27 Jul 2025 11:38:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0b2ol5yO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AE%25E5%2580%259F%25E7%2594%25A8%25E3%2582%2592%25E5%25BD%25B1%25E5%2588%2586%25E8%25BA%25AB%25E3%2581%25AE%25E8%25A1%2593%2528NARUTO%2529%25E3%2581%25A7%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B5%25E3%2582%25A6%25E3%2582%25B5%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1N2IzYmJkZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>サウサン</dc:creator></item><item><title><![CDATA[Claude Code不要！プロンプトエンジニアリングでどこまで開発できる？]]></title><description><![CDATA[
 はじめに
「Claude Codeを使ってみたいけど、追加料金が...」
「プロンプトエンジニアリングだけで、どこまで実用的な開発ができるの？」
そんな疑問を抱えている個人開発者の方、いらっしゃいませんか？
私は普段AWSインフラエンジニアとして働きながら、プライベートではRustでのOSS開発に挑戦しています。これまでPythonでのスクリプト実装が中心でしたが、今年からRustとGoの学習に力を入れています。
今回、月額$20のClaude Proのみを使い、プロンプトエンジニアリングだけで実用的なRust CLIツールを開発するという検証プロジェクトを開始しました。
この記事で...]]></description><link>https://zenn.dev/kyonaka/articles/520cbfb5960c90</link><guid isPermaLink="true">https://zenn.dev/kyonaka/articles/520cbfb5960c90</guid><pubDate>Sat, 26 Jul 2025 09:52:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JuGD6Gop--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25E4%25B8%258D%25E8%25A6%2581%25EF%25BC%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25BE%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kyonaka%2540AWS%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5NzcxODk2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kyonaka@AWSエンジニア</dc:creator></item><item><title><![CDATA[RustのworkspaceをGitHub Actionsでキャッシュする（checksum-freshnessがくるまで）]]></title><description><![CDATA[Rustのプロジェクトでworkspace内に多数のcrates（補助ライブラリやCLI群など）を配置する場合、それらのビルド結果も GitHub Actions のキャッシュの対象にしたくなります。毎回workspace内のすべてのcratesを変更することはないからです。しかしこれをするときのハマり所があります。
Rustプロジェクトでよく使われるGitHub Actions用アクションの Swatinem/rust-cache にも cache-workspace-crates オプションがありますが、これを有効にするだけでは、キャッシュは保存されるものの、実際には使われません。s...]]></description><link>https://zenn.dev/mierune/articles/2af7b9e447712a</link><guid isPermaLink="true">https://zenn.dev/mierune/articles/2af7b9e447712a</guid><pubDate>Thu, 24 Jul 2025 01:24:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EGBGqmwT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AEworkspace%25E3%2582%2592GitHub%2520Actions%25E3%2581%25A7%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588checksum-freshness%25E3%2581%258C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ciscorn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDdjMTQzMmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MIERUNE%25E3%2581%25AEZenn%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2YWYyNzI0M2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ciscorn</dc:creator></item></channel></rss>