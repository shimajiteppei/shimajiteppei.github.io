<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 03 Sep 2025 09:56:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Mastraでマルチエージェントワークフローを動かすまでの備忘録]]></title><description><![CDATA[
 背景
現在、社内でAIチャットボットを開発しています。こちらのAIチャットボットでは、質問を投げるとまず社内のナレッジ情報を検索し、検索にヒットしない場合はWeb検索を行い回答を返すような動作を期待しています。このようなエージェントを階層型マルチエージェントで構築しようとしたところ、いくつか問題点が出てきました。たとえば社内のナレッジ情報が検索ヒットせずWeb検索を実行しても、Web検索結果ではなくLLMが生成した結果を回答に使うといった問題が発生しました。
このような結果になってしまったのはAIエージェントのシステムプロンプトの記述のみで条件分岐のような制御を行っているためだと考え...]]></description><link>https://zenn.dev/serio/articles/655673a6b59f66</link><guid isPermaLink="true">https://zenn.dev/serio/articles/655673a6b59f66</guid><pubDate>Wed, 03 Sep 2025 07:20:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EzE9Ltcj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AF%25E3%2581%2597%25E3%2581%258F%25E3%2582%258C%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OGEyY2UyNGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25BB%25E3%2583%25AA%25E3%2582%25AA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はしくれ</dc:creator></item><item><title><![CDATA[URLを綺麗にして取得するブックマークレット]]></title><description><![CDATA[SNSでシェアされたリンクを開いてURLをコピーすると、utmやfbclidなどのパラメータが付与されていることがあります。これらのパラメータはアクセス解析のために使われるもので、取り除きたい方も多いと思います（私もそのひとり）。
たとえば、FacebookでシェアされたYahoo! Japanのトップページを開くとアドレスバーの中のURLは以下のようになります。

これをそのままコピーして共有すると、URLが長くなってしまい、見た目も良くありません。また、アクセス解析のためのパラメータが付与されていることで、プライバシーの観点からも気になる方もいるでしょう（上記URLのパラメータ部分は...]]></description><link>https://zenn.dev/kwaka1208/articles/get-title-and-clean-url</link><guid isPermaLink="true">https://zenn.dev/kwaka1208/articles/get-title-and-clean-url</guid><pubDate>Wed, 03 Sep 2025 06:31:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ijoeS4s1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URL%25E3%2582%2592%25E7%25B6%25BA%25E9%25BA%2597%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2596%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kenichi%2520Wakabayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMjI4MDllOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kenichi Wakabayashi</dc:creator></item><item><title><![CDATA[View Transitions API（ビュー遷移 API）を使ってみよう！]]></title><description><![CDATA[はい、どうも。
今回はView Transitions API（ビュー遷移 API）を試してみましょう。
View Transitions APIが登場してからそこそこ経ちますが、普段仕事で使うことがないものなので、ノータッチでした。
調査がてら試してみようという感じです。

 View Transitions APIとは？
View Transitions APIは、ウェブページの状態変化・・・DOMの更新のことですね・・・をスムーズにアニメーションさせるためのAPIです。
ブラウザネイティブの機能のため、今までJavascriptやCSSで頑張っていたものを簡単に実装できます。
これ...]]></description><link>https://zenn.dev/sonicmoov/articles/f819f4904e793f</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/f819f4904e793f</guid><pubDate>Wed, 03 Sep 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xjBhZ5mK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:View%2520Transitions%2520API%25EF%25BC%2588%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E9%2581%25B7%25E7%25A7%25BB%2520API%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25AE%2589%25E7%25AB%258B%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTlmM2U4MGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>安立</dc:creator></item><item><title><![CDATA[Vueのデータバインディングについて調べてみた]]></title><description><![CDATA[
 Vueのデータバインディングについて
Vue.jsにおけるバインド（bind）とは、一言で言うと「データと見た目（DOM）を結びつける（連携させる）仕組み」のことです。これをデータバインディングと呼びます。
データバインディングを使うと、JavaScriptのデータ（変数やオブジェクト）が変更されたときに、Webページの表示が自動的に更新されるようになります。これにより、DOMを直接操作するコードを書く手間が省け、コードがシンプルで分かりやすくなります。
主要なバインドにはいくつか種類があります。


 テキストのバインド（マスタッシュ構文）
最も基本的なバインド方法で、{{ }}（...]]></description><link>https://zenn.dev/shunsuke_stack/articles/b1c16525b47998</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/b1c16525b47998</guid><pubDate>Wed, 03 Sep 2025 01:07:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v6YLcnK4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[JavaScript/TypeScriptでプリミティブ型を理解する]]></title><description><![CDATA[はじめまして！
フロントエンドエンジニア志望の大学生です！
今回が初めての技術記事投稿になります。
まだ拙い部分もあるかと思いますが、JavaScript / TypeScript におけるプリミティブ型について、自分なりに整理して解説していきます。

 はじめに
みなさんは、プログラミングで変数を使っているときに、「プリミティブ型とは何ですか？」と聞かれたら、すぐに説明できますか？
正直なところ、自分はまだうまく説明できませんでした。
「文字列や数値がプリミティブ型だ」ということは知っていても、実際にどんなものなのかを深く理解する機会はあまりありませんでした。
そこで今回は、プリミティ...]]></description><link>https://zenn.dev/oimozenn/articles/3cb6f02325cbfd</link><guid isPermaLink="true">https://zenn.dev/oimozenn/articles/3cb6f02325cbfd</guid><pubDate>Tue, 02 Sep 2025 16:39:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lAOmQ-yQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%252FTypeScript%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AA%25E3%2583%259F%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E5%259E%258B%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A0%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxYmFhY2IwMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほだか</dc:creator></item><item><title><![CDATA[実務でReact製フォームの初期レンダリングを約6倍速くしました（そこからさらに2倍速くできる方法も見つけました）。]]></title><description><![CDATA[
 tl;dr

🐛 業務で既存のReactアプリの最適化に携わったよ。
🐌 その過程で、露骨にレンダリングが遅いフォームを見つけたよ。
🔎 原因は選択肢が90個以上もある選択欄がフォーム内に複数あったからだよ。
🫥 仮想リストを実装して最初にレンダリングする要素を少なくしたら、うまく行ったよ。
🤔 おまけ：個人の調査の結果、選択肢が90個あることより、使用したパッケージ側に問題があるっぽいよ。


 背景
数ヶ月前、私は業務の一環として、開発したWebアプリのパフォーマンスの不備、バグが無いかを調査し、必要に応じて修正することになりました。
パフォーマンスの測定として、Aiden Ba...]]></description><link>https://zenn.dev/imeankenshin/articles/90d7d961c3305f</link><guid isPermaLink="true">https://zenn.dev/imeankenshin/articles/90d7d961c3305f</guid><pubDate>Tue, 02 Sep 2025 09:38:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7cFwBF10--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7React%25E8%25A3%25BD%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E7%25B4%25846%25E5%2580%258D%25E9%2580%259F%25E3%2581%258F%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E3%2581%259D%25E3%2581%2593%25E3%2581%258B%25E3%2582%2589%25E3%2581%2595%25E3%2582%2589%25E3%2581%25AB2%25E5%2580%258D%25E9%2580%259F%25E3%2581%258F%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2582%25E8%25A6%258B%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2589%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2582%2593%25E3%2581%2597%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyNDU5MzAyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けんしん</dc:creator></item><item><title><![CDATA[TypeScriptとJavaScriptとECMAScriptの違いがわからない人のための記事]]></title><description><![CDATA[※これはChatGPTで生成したものを加筆・修正したものです。
JavaScriptを書いているとよく出てくる「TypeScript」「ECMAScript」「ES6」などの用語。最初はこれらの違いが曖昧で混乱するかもしれません。
この記事ではそれぞれの違いを整理し、TypeScriptがどんな特徴を持つのかをわかりやすく解説します。

 🌐 JavaScript / TypeScript / ECMAScript の関係



用語
ざっくり言うと




JavaScript
実際に動くスクリプト言語


ECMAScript
JavaScriptの"仕様書"の名前


TypeSc...]]></description><link>https://zenn.dev/tajicode/articles/192defdfa2227c</link><guid isPermaLink="true">https://zenn.dev/tajicode/articles/192defdfa2227c</guid><pubDate>Tue, 02 Sep 2025 00:51:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vlTK60iV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A8JavaScript%25E3%2581%25A8ECMAScript%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tajima%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjY2YmNkYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tajima</dc:creator></item><item><title><![CDATA[global objectとは]]></title><description><![CDATA[
 global objectとは

 グローバルスコープ上に常時存在するオブジェクト



ブラウザ
Node.js
その他




window
global
globalThis



※ JavaScriptを実行する場所によって呼び名が変わる

 ブラウザ内のwindowオブジェクト

window object = global object


 グローバル変数や関数はすべて、 window オブジェクトのプロパティとしてアクセス可能

変数
var foo = "foobar";
foo === window.foo; // true を返す


関数
function ...]]></description><link>https://zenn.dev/y_mi/articles/07a9b20bea9ace</link><guid isPermaLink="true">https://zenn.dev/y_mi/articles/07a9b20bea9ace</guid><pubDate>Tue, 02 Sep 2025 00:41:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PKcilsBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:global%2520object%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちー。</dc:creator></item><item><title><![CDATA[JavaScriptおすすめモーダル系プラグイン9選]]></title><description><![CDATA[モーダル表示はプラグイン使わなくても簡単に実装できますが、表示時のアニメーション演出等を探すとプラグインが色々あったのでおすすめモーダル系プラグイン9選を紹介します。
animatedModal.js
画面一杯にモーダル画面表示時のアニメーションパターンがいくつかあります。
https://dad-union.com/animatedmodal-js-modal
Modaal
モーダルをCookie制御（jquery-cookie）と組み合わせて表示させることも出来ます。
https://dad-union.com/modaal-jquery-cookie-js
https://dad-...]]></description><link>https://zenn.dev/you1tech/articles/5e3ea74b2af20c</link><guid isPermaLink="true">https://zenn.dev/you1tech/articles/5e3ea74b2af20c</guid><pubDate>Tue, 02 Sep 2025 00:19:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--23cGospA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E7%25B3%25BB%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B39%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:you1tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFAzTTB1Z3didDlQYnVLQ09qWkpxYWo5bTFDWEFEQzlzOHpUdVFpTUJsTmJxYWpRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>you1tech</dc:creator></item><item><title><![CDATA[HTTPからWebSocketへ：リアルタイムWebの進化]]></title><description><![CDATA[
Leapcell：最高のサーバーレスWebホスティング

 HTTP長接続からWebSocketへ：リアルタイムWebの技術進化と米国企業の実践

 I. 歴史的進化：HTTP接続方式のジレンマと突破口
初期のWebは静的コンテンツが中心であり、HTTPプロトコルは「リクエスト-レスポンス」の短時間接続（ショートコネクション）方式を採用していた。クライアントがリクエストを送信し、サーバーがレスポンスを返すと、TCP接続は即座に切断される。この方式は静的ページの時代には有効だったが、オンラインチャットやリアルタイム監視といったインタラクティブなニーズの高まりに伴い、ショートコネクションの...]]></description><link>https://zenn.dev/taiga_yamamoto/articles/dc12c235f1e917</link><guid isPermaLink="true">https://zenn.dev/taiga_yamamoto/articles/dc12c235f1e917</guid><pubDate>Mon, 01 Sep 2025 15:35:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4WFcS8nY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTTP%25E3%2581%258B%25E3%2582%2589WebSocket%25E3%2581%25B8%25EF%25BC%259A%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0Web%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taiga%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGNWMEs0N0tCSkhhMXpRV3lLNm0tdjh1X1U4N1VPQ2xBazBVOVpubVF5dWZBLT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taiga Yamamoto</dc:creator></item><item><title><![CDATA[WixStudioでVeloを使う Step 43 「『A』『B』『C』のリスト」]]></title><description><![CDATA[
 はじめに

前回の記事で扱った箇条書きの記号「・」を「※」に変えた。今回はその続き。箇条書きには「・」で列挙する箇条書き(順序なしリスト)と番号付きの箇条書き(順序付きリスト)がある。今回は後者に注目する。これについて不便を感じるている人はあまり見ない。でも、知ってたら変わるかもしれない。例えば数字の連番ではなくABCだったり、連番は連番でも漢数字だったり。せっかくなので触れておく。

 準備
前回の記事の続きとして記事を展開する。環境もそのまま使う。複雑な環境は不要で、新しくサイトを作成して、コードも有効にしVeloを有効にしておけばいい。ただし、前回の記事で説明した内容については...]]></description><link>https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0043</link><guid isPermaLink="true">https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0043</guid><pubDate>Mon, 01 Sep 2025 14:39:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1yrXhveR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WixStudio%25E3%2581%25A7Velo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520Step%252043%2520%25E3%2580%258C%25E3%2580%258EA%25E3%2580%258F%25E3%2580%258EB%25E3%2580%258F%25E3%2580%258EC%25E3%2580%258F%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Niibori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZDA4Mjg3YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niibori</dc:creator></item><item><title><![CDATA[画像リストから、自動でスライドショーを生成するWebツールを開発しました]]></title><description><![CDATA[承知いたしました。Zennに投稿する記事を作成します。
Zennはデザイン性を重視したシンプルなプラットフォームなので、Qiitaの記事よりも見出しや構成をより洗練されたものに調整します。AI（Gemini）に作ってもらったものであるという一文も冒頭に含めます。


 Zenn投稿記事（全文）



 画像リストから、自動でスライドショーを生成するWebツールを開発しました

この記事は、AIアシスタントのGeminiとの対話を通じて作成されました。


 はじめに

もしあなたが「WordPressは使わない、もっとシンプルなWebサイトを作りたい」と考えているなら、こんな悩みを抱えて...]]></description><link>https://zenn.dev/zark/articles/8dc983f1966abd</link><guid isPermaLink="true">https://zenn.dev/zark/articles/8dc983f1966abd</guid><pubDate>Mon, 01 Sep 2025 12:02:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_RbtmBYx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BWeb%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ZARK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ZARK</dc:creator></item><item><title><![CDATA[【入門】Rails エンジニアが知っておきたい Action Cable で実現するリアルタイム機能]]></title><description><![CDATA[
 はじめに
Rails に搭載されている機能の1つに Action Cable があります。
何度か使ってみたことはあるものの、あまり深く理解していなかったので、改めて Action Cable について学んでみました。
できるだけ分かりやすく Action Cable についてまとめてみましたので、少しでも皆様の参考になりますと幸いです。


 注意点
!

内容に誤りが含まれている可能性があります
コメントなどでご指摘いただけると幸いです



 環境
!

Docker Desktop：4.44.3
Docker Engine：28.3.2
Ruby：3.3.5
Rails：7....]]></description><link>https://zenn.dev/linkedge/articles/d151bfa92df988</link><guid isPermaLink="true">https://zenn.dev/linkedge/articles/d151bfa92df988</guid><pubDate>Mon, 01 Sep 2025 09:47:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u4HRHPG8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591Rails%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258C%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%2520Action%2520Cable%2520%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:RyoyaOkuma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZmE4YTI1NWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEL%2526E%2520Group%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzhIN0k1TWtwTzN0SFJZOWQzRzVSdTVyVlpRVmI1MG5IWG1HWTdwdk5ublk4PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>RyoyaOkuma</dc:creator></item><item><title><![CDATA[JavaScript の中で JavaScript を記述できる「js-template-tag」の紹介]]></title><description><![CDATA[
JavaScript でプログラムを記述している際に JavaScript を書きたくなることは多々あります。人間とはそういう生き物です。例外はありません。

アプリケーション全体は JavaScript で実装しているが、特定の処理だけは JavaScript で実装したい！
JavaScript の柔軟性と JavaScript の柔軟性を合わせたプログラムを書きたい！
今すぐ JavaScript を書きたいのに手元には JavaScript しかない！

そんなときに便利な js-template-tag をリリースしたので紹介します。
https://www.npmjs.co...]]></description><link>https://zenn.dev/kou_pg_0131/articles/js-template-tag-introduction</link><guid isPermaLink="true">https://zenn.dev/kou_pg_0131/articles/js-template-tag-introduction</guid><pubDate>Mon, 01 Sep 2025 09:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Qz_Cmaq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25A7%2520JavaScript%2520%25E3%2582%2592%25E8%25A8%2598%25E8%25BF%25B0%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2580%258Cjs-template-tag%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hiNFlHemhPbVVNRThrZjV5Z01DakFoOWsxeEtCTzRLdWdVMExDQWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[認証フローを構築し閲覧制限を設けました]]></title><description><![CDATA[
 関連記事
https://zenn.dev/shunsuke_stack/articles/3b7759f0053ca6
https://zenn.dev/shunsuke_stack/articles/bdf5b784bd6f8b
https://zenn.dev/shunsuke_stack/articles/88dedd7c5a2341

 認証フロー

 HOME画面の閲覧制限を実装
認証情報がないとHOME画面(index.vue)を開けないように制限を設けます。

 middlewareでは実装しない
一般的な方法としては middlewareで実装する手がありますが、今...]]></description><link>https://zenn.dev/shunsuke_stack/articles/65c1d38ed8c694</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/65c1d38ed8c694</guid><pubDate>Mon, 01 Sep 2025 08:14:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IhXkLAR_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E9%2596%25B2%25E8%25A6%25A7%25E5%2588%25B6%25E9%2599%2590%25E3%2582%2592%25E8%25A8%25AD%25E3%2581%2591%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[WixStudioでVeloを使う Step 42 「『※』マークのリスト」]]></title><description><![CDATA[
 はじめに

皆はどうやって対応しているんだろう。前から気になってた。注意事項を列挙するときに箇条書きが使われることが多い。そして、箇条書きのマークに「※」が使われている。「・」よりも注意って感じがして良いと思う。しかし、WixStudioの箇条書きにこれはない。これに対応する方法をメモする。

「※」の箇条書き

 準備
新しくサイトを作成しておく。コードも有効にしVeloを有効にしておく。

 段落要素を配置し、リストにする
まずは、ページに段落要素を配置する。

段落要素を配置
デザインのパネルから箇条書きを選択すれば、段落要素の内容が箇条書きになる。

箇条書きを適用
箇条書き...]]></description><link>https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0042</link><guid isPermaLink="true">https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0042</guid><pubDate>Mon, 01 Sep 2025 07:55:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O2afbtIl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WixStudio%25E3%2581%25A7Velo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520Step%252042%2520%25E3%2580%258C%25E3%2580%258E%25E2%2580%25BB%25E3%2580%258F%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Niibori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZDA4Mjg3YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niibori</dc:creator></item><item><title><![CDATA[異世界JavaScript]]></title><description><![CDATA[最近は異世界転生も珍しくなくなりました。もしも異世界にJavaScriptがあったら、それは我々の知るJavaScriptとどう違うでしょうか？
この記事では、ECMAScriptまたはその亜種に実装された機能で、標準化に至らなかったものを取り上げます。モダンなECMAScriptしか知らない方には、きっと異世界を見るように新鮮に感じていただけることと思います。

 異世界の typeof 演算子
「13.5.3 The typeof Operator - ECMAScript® 2025 Language&nbsp;Specification」によると、typeof 演算子の返しうる値...]]></description><link>https://zenn.dev/mod_poppo/articles/isekai-javascript</link><guid isPermaLink="true">https://zenn.dev/mod_poppo/articles/isekai-javascript</guid><pubDate>Sun, 31 Aug 2025 14:23:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AclDNEBt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%2595%25B0%25E4%25B8%2596%25E7%2595%258CJavaScript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2582%2581%25E3%2581%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTBmMDFlOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>だめぽ</dc:creator></item><item><title><![CDATA[WebSocketとHTTPショートコネクションの技術進化と比較分析]]></title><description><![CDATA[
 WebSocketとHTTPショートコネクションの技術進化と比較分析
現代のWebアプリケーションにおいて、クライアントとサーバー間の通信方式は、アプリケーションのパフォーマンスとユーザーエクスペリエンスに直接的な影響を与えます。初期の静的Webページから今日のリアルタイムコラボレーションツールまで、通信プロトコルの進化は常に「効率性」と「リアルタイム性」という2つのコアニーズを中心に展開されてきました。本稿では、HTTPショートコネクション、HTTPロングコネクション及びその派生技術を深く分析し、最終的にWebSocketの設計理念とアプリケーションシナリオを比較します。また、Py...]]></description><link>https://zenn.dev/taiga_yamamoto/articles/39d2cc9d4a1487</link><guid isPermaLink="true">https://zenn.dev/taiga_yamamoto/articles/39d2cc9d4a1487</guid><pubDate>Sun, 31 Aug 2025 14:09:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sTPTGUi4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSocket%25E3%2581%25A8HTTP%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B3%25E3%2583%258D%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E9%2580%25B2%25E5%258C%2596%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taiga%2520Yamamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGNWMEs0N0tCSkhhMXpRV3lLNm0tdjh1X1U4N1VPQ2xBazBVOVpubVF5dWZBLT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taiga Yamamoto</dc:creator></item><item><title><![CDATA[【JavaScript】円周率を計算するプログラムを作成（備忘録）]]></title><description><![CDATA[
 １．はじめに
JavaScript の理解を深めるために、Youtube 動画を参考に円の面積を計算するプログラムを作成しました。
一部のプログラムを修正/変更しています。

 ２．サンプルプログラム

Sample.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
&lt;/head&g...]]></description><link>https://zenn.dev/yama_kawa/articles/f842fb62f27a37</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/f842fb62f27a37</guid><pubDate>Sun, 31 Aug 2025 06:25:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--01DVtdXZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E5%2586%2586%25E5%2591%25A8%25E7%258E%2587%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MzVlNmE1NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[【Azure OpenAI 40日】Day9：履歴・送信中インジケーター・吹き出しでUXを仕上げる]]></title><description><![CDATA[
Windows 11 / PowerShell / VS Code 前提。ローカル実行でUXを一気に底上げします。Day8のリアルタイム配信（Functions + SignalR）を そのまま流用 し、フロントだけ賢くします。


 ✍️ TL;DR


今日の到達点：Functions+SignalR を活かしたチャットUIで 履歴・送信中・吹き出し を実装し、Day9(7083) 環境で安定稼働。

学び：1) localStorageで状態永続化 2) SignalRストリーミングを50msバッファで安定化 3) SDK timeout/フォールバック設計。

コスト：ローカル...]]></description><link>https://zenn.dev/masau/articles/azure-openai-40days-day9-chat-ui-ux</link><guid isPermaLink="true">https://zenn.dev/masau/articles/azure-openai-40days-day9-chat-ui-ux</guid><pubDate>Sun, 31 Aug 2025 05:14:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wddzu2Jp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Azure%2520OpenAI%252040%25E6%2597%25A5%25E3%2580%2591Day9%25EF%25BC%259A%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2583%25BB%25E9%2580%2581%25E4%25BF%25A1%25E4%25B8%25AD%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25BB%25E5%2590%25B9%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A7UX%25E3%2582%2592%25E4%25BB%2595%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasaU_Tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTZmODk1MmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MasaU_Tech</dc:creator></item></channel></rss>