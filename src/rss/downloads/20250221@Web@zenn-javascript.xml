<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 21 Feb 2025 10:36:51 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[webのモーダルダイアログshowModalDialogの代替手段]]></title><description><![CDATA[IE時代にASP.NETでモーダルダイアログを表示する便利な手段として使われていたWindow.showModalDialog()。
主要なブラウザで使用できなくなって久しいのですが、未だに残っていたコードの移行を手がける機会があったので代替手段の一例について記載します。

 dialogタグを使用したモーダルダイアログの実現
dialogタグを利用した、単体で動作するhtml実装例は以下の通りです。
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
   ...]]></description><link>https://zenn.dev/mitakaosamu/articles/42df115ceb989a</link><guid isPermaLink="true">https://zenn.dev/mitakaosamu/articles/42df115ceb989a</guid><pubDate>Fri, 21 Feb 2025 09:48:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--erp3FvrH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:web%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0showModalDialog%25E3%2581%25AE%25E4%25BB%25A3%25E6%259B%25BF%25E6%2589%258B%25E6%25AE%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mitakaosamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHExQ2VHSm9qRjY1VzljVTB1MGJrQTNaY0d5cDlXcTJGRl9YOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitakaosamu</dc:creator></item><item><title><![CDATA[【Next.js】Zodを使用した環境変数のバリデーション]]></title><description><![CDATA[
 はじめに
環境変数を扱うときにZodを使用したバリデーションをすると便利だなと思ったので記事にしました。

 process.envを使用すると面倒なこと

型がstring|undefindになってしまい、毎回undefindチェックする必要がある。
期待するフォーマットでない値でもそのまま使用できてしまいランタイムエラー等が発生する可能性がある。

大袈裟ですがこんなイメージ
// process.envから直接取得
const apiUrl = process.env.NEXT_PUBLIC_API_URL;

// 毎回undefinedチェックを行う必要がある
if (!a...]]></description><link>https://zenn.dev/kiwichan101kg/articles/7ba33ab64414b2</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/7ba33ab64414b2</guid><pubDate>Fri, 21 Feb 2025 09:20:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JMFKFwdP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591Zod%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[JavaScriptの非同期処理]]></title><description><![CDATA[
 1. はじめに：同期処理と非同期処理
JavaScript はシングルスレッドで動作しますが、非同期処理を行うことで、時間のかかる処理（例：ネットワークリクエスト、ファイルの読み込み）の完了を待たずに、次の処理を進めることができます。


同期処理： 処理が順番に実行され、前の処理が終わるまで次の処理は開始されません。

非同期処理： 時間のかかる処理をバックグラウンドで実行し、その間にも他の処理を進めることができます。処理が完了したら、コールバック関数や Promise を使って結果を受け取ります。


 2. async/await：非同期処理をシンプルに書くための構文
asyn...]]></description><link>https://zenn.dev/coke_126/articles/dea8146e9ea0dc</link><guid isPermaLink="true">https://zenn.dev/coke_126/articles/dea8146e9ea0dc</guid><pubDate>Fri, 21 Feb 2025 07:32:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WNDyQMrx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:coke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MmM2MGNiMGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>coke</dc:creator></item><item><title><![CDATA[テキストハイライト機能を実装する]]></title><description><![CDATA[
 はじめに
読書アプリや学習アプリには、テキストの一部を選択してハイライトをつける機能がよくあります。参考書にマーカーペンで印をつけるようなイメージです。
本記事では、JavaScript を用いたハイライト機能の実装例を紹介します。

 結果
動作するサンプルプログラムを CodePen で公開しています。


 本記事で解説する機能

HTML 文書で、マウスドラッグで選択したテキストにハイライトを適用する
ハイライト位置を保存し、ページを再読み込みしても同じ位置にハイライトを表示する


 使用する Web API

 Selection API
テキスト選択範囲の取得には Se...]]></description><link>https://zenn.dev/micin/articles/7dab8bcbd30ae6</link><guid isPermaLink="true">https://zenn.dev/micin/articles/7dab8bcbd30ae6</guid><pubDate>Fri, 21 Feb 2025 04:38:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8vwmeUOB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshinari%2520Somaki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmZDEzMmY4YTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEMICIN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p4WnFhVGY1QmhKQU13akV3cTU0b1V3NGtQN0VwTkhid3B0TWtfPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshinari Somaki</dc:creator></item><item><title><![CDATA[『RPGツクールMZ』の入力機器周り]]></title><description><![CDATA[『RPGツクールMZ』関連記事 目次
『RPGツクールMZ』はキーボード、ゲームパッド、マウス、タッチスクリーンの入力に対応していて、それ自体は非常に良いことですが、デメリットとしてプログラムがややこしいことになっています。
今回そのややこしい入力周りのコードを読み解く場合の一助となる記事を書ければな…というか自分の理解のための記事です！(いつもそうだという話もある)
『RPGツクールMZ』で自作のインタフェースを実装したいという場合には、意外と役に立たない知識であることを事前にご了承ください(笑)
『RPGツクールMZ』非公式JavaScriptリファレンスとJavaScript - ...]]></description><link>https://zenn.dev/tonbi/articles/0dbfc5bfa649e1</link><guid isPermaLink="true">https://zenn.dev/tonbi/articles/0dbfc5bfa649e1</guid><pubDate>Thu, 20 Feb 2025 15:45:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8dbP4qUB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258ERPG%25E3%2583%2584%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25ABMZ%25E3%2580%258F%25E3%2581%25AE%25E5%2585%25A5%25E5%258A%259B%25E6%25A9%259F%25E5%2599%25A8%25E5%2591%25A8%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2581%25B3%2540%25E9%25B3%25B6%25E5%25B6%258B%25E5%25B7%25A5%25E6%2588%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBYl9FRlAtZm9RQU1pN1VoM3hzYkNyQXZUSTZjUDFkZGJJMWJrPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんび@鳶嶋工房</dc:creator></item><item><title><![CDATA[忙しい人のためのESLint Flat Configの設定例（主要なプラグイン込み）]]></title><description><![CDATA[
 前書き
v9からFlat Configという新しい記法がデフォルトとなったeslintですが、
v10からeslintrcの機構が無くなるようです。
https://eslint.org/blog/2023/10/flat-config-rollout-plans/#eslintrc-removed-in-eslint-v10.0.0
先んじてFlat Config化に取り組みまして、その際の設定の最終系を記します。

 前提

ここでの記載は以下の技術スタック向けに書かれています。

TypeScript
React
Next.js
※他のプラグインでも応用可能かと思います。


...]]></description><link>https://zenn.dev/yu_ta_9/articles/7001d66779ff3a</link><guid isPermaLink="true">https://zenn.dev/yu_ta_9/articles/7001d66779ff3a</guid><pubDate>Thu, 20 Feb 2025 12:03:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7laPudyH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BF%2599%25E3%2581%2597%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEESLint%2520Flat%2520Config%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E4%25BE%258B%25EF%25BC%2588%25E4%25B8%25BB%25E8%25A6%2581%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E8%25BE%25BC%25E3%2581%25BF%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YU-TA-9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNzU2NmM5MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YU-TA-9</dc:creator></item><item><title><![CDATA[和暦と西暦を変換するための NPM パッケージを作成しました]]></title><description><![CDATA[https://www.npmjs.com/package/date-format-wareki
https://github.com/Cygra/date-format-wareki

 インストール
npm install date-format-wareki

 使い方
import { toWareki, toDate } from "date-format-wareki";

const date = new Date(1996, 10, 27);
toWareki(date); // =&gt; "平成8/11/27"
toWareki(date, { era: "narro...]]></description><link>https://zenn.dev/cygra/articles/d829914ebd60eb</link><guid isPermaLink="true">https://zenn.dev/cygra/articles/d829914ebd60eb</guid><pubDate>Thu, 20 Feb 2025 03:28:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kbdCHqnv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2592%258C%25E6%259A%25A6%25E3%2581%25A8%25E8%25A5%25BF%25E6%259A%25A6%25E3%2582%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520NPM%2520%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Cygra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwOWE3MmQ0OGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Cygra</dc:creator></item><item><title><![CDATA[🦊🐈️❤|Firefoxベースのブラウザー、模様替えしてみた]]></title><description><![CDATA[こんにちは。Firefoxベースのブラウザーである『noraneko』の開発をしているNyanRusです。
私が作っているブラウザーについて、「開発のきっかけ」や「開発で知ったこと」、「経験したこと」を書きます。

 Firefoxってなに？
『Firefox』はMozillaという会社、及びコミュニティが開発しているブラウザーです。
メジャーなブラウザーである『Chrome』はGoogleが開発しています。
世の中には、『Microsoft Edge』『Opera』などChromeの亜種がたくさんありますが、Firefoxはそうではなく、Chromeと同じ先祖を持っている違うブラウザー...]]></description><link>https://zenn.dev/nyanrus/articles/2a88304f57faeb</link><guid isPermaLink="true">https://zenn.dev/nyanrus/articles/2a88304f57faeb</guid><pubDate>Thu, 20 Feb 2025 03:11:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SG13-CQZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520%2520%257CFirefox%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%25BC%25E3%2580%2581%25E6%25A8%25A1%25E6%25A7%2598%25E6%259B%25BF%25E3%2581%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NyanRus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3YmFiMTMwYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NyanRus</dc:creator></item><item><title><![CDATA[JavaScriptにおける Promise.all の並列処理とパフォーマンス最適化]]></title><description><![CDATA[
 はじめに
JavaScriptの非同期処理を適切に扱うことはパフォーマンス向上の鍵となります。本記事では、Promise.all を活用した並列処理について解説し、どのようにして API リクエストのパフォーマンスを改善できるのかを紹介します。

 Promise.all の基本
通常、await を使った非同期処理は逐次実行されるため、複数のリクエストを順番に処理すると全体の実行時間が長くなってしまいます。
そのため、データ間に依存関係がない場合は、並列にデータ取得を行うことでパフォーマンスが効率的になります。
例えば、以下のコードでは getUserProfile の処理が完了し...]]></description><link>https://zenn.dev/nanimiru/articles/4a8c64af23ff6d</link><guid isPermaLink="true">https://zenn.dev/nanimiru/articles/4a8c64af23ff6d</guid><pubDate>Thu, 20 Feb 2025 02:39:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MTzux2iy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%2520Promise.all%2520%25E3%2581%25AE%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%25BF%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1ByT2k0SkVYQnVpT1draENyT3dOLWtjbHRlUmlFeHVRZ2hsLWFycVQzeGg1Zkh3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なにみる</dc:creator></item><item><title><![CDATA[JavaScriptの基本的なDOM操作とイベント処理を理解しよう - ハンバーガーメニューとスムーズスクロールの実装を通して]]></title><description><![CDATA[こんにちは！この記事では、JavaScriptにおけるDOM操作とイベント処理について、実践的な例を通して学んでいきます。

 はじめに

 記事の目的
この記事では、以下の2つの機能を実装しながら、JavaScriptの基本的なDOM操作とイベント処理について学びます：

ハンバーガーメニュー
スムーズスクロール

これらの機能は多くのWebサイトで使用されており、実装を通してJavaScriptの重要な概念を理解することができます。

 対象読者

HTML/CSSの基本的な知識がある方
JavaScriptを学び始めた方
DOM操作とイベント処理の基礎を学びたい方


 完成イメー...]]></description><link>https://zenn.dev/ori1026/articles/599607eadaacb6</link><guid isPermaLink="true">https://zenn.dev/ori1026/articles/599607eadaacb6</guid><pubDate>Wed, 19 Feb 2025 23:28:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Rlju7Qe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AADOM%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520-%2520%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%25A8%25E3%2582%25B9%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25BA%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maple%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNDM4OTljNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maple</dc:creator></item><item><title><![CDATA[テストを自動化する#1｜Playwright/Javascriptのサンプルコード]]></title><description><![CDATA[Playwrightでのテスト自動化に使えるJavascriptのコードです。

 今回取り上げている内容
!

要素の表示・非表示を確認したい
bodyに特定のテキストが2つ存在することを確認したい
現在日時（年/月/日/時/分/秒）を取得して文字列にしたい（メソッド化）




 要素の表示・非表示を確認したい
HTMLで記述している場合、bodyに該当のテキストが表示されていることを確認します。

test.spec
// 要素が表示されていることを確認
await expect(page.locator('body')).toContainText('テストテキスト');

//...]]></description><link>https://zenn.dev/okitegami/articles/95896553802965</link><guid isPermaLink="true">https://zenn.dev/okitegami/articles/95896553802965</guid><pubDate>Wed, 19 Feb 2025 13:12:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_5176wvM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25231%25EF%25BD%259CPlaywright%252FJavascript%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kikuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1NTRhZDI5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kikuchi</dc:creator></item><item><title><![CDATA[💡JavaScript, TypeScript, React, Next.js の違いをざっくり理解する💡]]></title><description><![CDATA[
 はじめに
Web開発をしていると、JavaScript, TypeScript, React, Next.js といった技術をよく耳にしますよね。この記事では、それぞれの役割や特徴を簡単に整理してみます。

 1. JavaScript とは？
JavaScriptは、HTMLやCSSと組み合わせて使用される、クライアントサイド（ブラウザ）で実行されるプログラミング言語です。
画面表示の動的な変更、ユーザーが入力した値に応じた計算などに幅広く使われます。
Webページにアニメーションやインタラクションを加えることで、ユーザーにとって動きのある体験を提供できます。
近年では Node....]]></description><link>https://zenn.dev/genly/articles/72273ec3b4ec85</link><guid isPermaLink="true">https://zenn.dev/genly/articles/72273ec3b4ec85</guid><pubDate>Wed, 19 Feb 2025 12:46:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oCv2YHHG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520JavaScript%252C%2520TypeScript%252C%2520React%252C%2520Next.js%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GENLY_n%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxZjVkNTAxMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GENLY_nさん</dc:creator></item><item><title><![CDATA[初心者に優しい Next.js app router マイベストフォルダ設計]]></title><description><![CDATA[
 概要
Next.js app routerでは、様々な記事でフォルダ設計が紹介されているものの、まだまだ課題があると感じております。
私が試してみて、これがベストなんじゃないかと思うフォルダ設計(2025年2月時点)がありますので、それを紹介したいと思います。
現状、全フロントエンドエンジニアがapp routerをキャッチアップしているわけではないと思う(少なくとも私の会社はそう)ので、「初心者に優しい」「難しすぎない」というのを意識してます。
フロントエンドとしてVueやReactは書いているが、app routerを実務であまり使ったことのない方も入りやすいようにと思って考えま...]]></description><link>https://zenn.dev/sonicmoov/articles/e5ce7fb6d42267</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/e5ce7fb6d42267</guid><pubDate>Wed, 19 Feb 2025 12:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aT_G7jDt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E5%2584%25AA%25E3%2581%2597%25E3%2581%2584%2520Next.js%2520app%2520router%2520%25E3%2583%259E%25E3%2582%25A4%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu_aoringo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[【JavaScript】AND 演算子と OR 演算子についてまとめてみた]]></title><description><![CDATA[
 JavaScript の AND 演算子と OR 演算子について
JavaScript には論理演算を行うための演算子として、AND 演算子（&amp;&amp;）と OR 演算子（||）があります。これらは条件分岐や値の短絡評価などで頻繁に使われます。
!
備忘録として様々な演算子の中から昨今の開発で使う頻度が多くなった演算子について連続で記事を書いてきましたが、今回 AND 演算子と OR 演算子をまとめ、これを一旦最終回としたいと思います。
過去の記事はこちら：
【JavaScript】三項演算子についてまとめてみた
【JavaScript】null 合体演算子についてまとめて...]]></description><link>https://zenn.dev/hayatech/articles/js-and-or-operator</link><guid isPermaLink="true">https://zenn.dev/hayatech/articles/js-and-or-operator</guid><pubDate>Wed, 19 Feb 2025 11:11:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tjP1JCgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591AND%2520%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25A8%2520OR%2520%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNWM3ODUyMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HayaTech</dc:creator></item><item><title><![CDATA[正規表現で使用できる Unicode文字クラスエスケープご存知ですか？]]></title><description><![CDATA[はじめまして。アスエネ株式会社の片山です。

 はじめに
皆さん、Unicode文字クラスエスケープ をご存知でしょうか？
Unicode文字クラスエスケープ は、Unicodeに基づいて文字を分類し、特定のカテゴリにマッチする文字を簡単に指定できる便利な機能です。

 Unicode文字クラスエスケープとは
Unicode文字クラスエスケープ は、正規表現の中で文字が所属するUnicodeカテゴリに基づいてマッチングを行うためのエスケープシーケンスです。Unicode対応モード(u&nbsp;または&nbsp;v のどちらかのフラグがついた正規表現) でのみ対応しており、文字がアルファ...]]></description><link>https://zenn.dev/asuene/articles/b07518899fe331</link><guid isPermaLink="true">https://zenn.dev/asuene/articles/b07518899fe331</guid><pubDate>Wed, 19 Feb 2025 02:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A7fo4zVz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2520Unicode%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25A8%25E3%2582%25B9%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%2597%25E3%2581%2594%25E5%25AD%2598%25E7%259F%25A5%25E3%2581%25A7%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ktym4a%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0MmE4ZTRhM2UuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2582%25B9%25E3%2582%25A8%25E3%2583%258D%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YzVjYmY5NmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ktym4a</dc:creator></item><item><title><![CDATA[【JavaScript】Web APIインターフェースを使ってみた-其の1:MutaionObserver]]></title><description><![CDATA[
 このシリーズについて
初のシリーズ企画＆JavaScript関連の記事です。
最近はJavaScriptでの機能改修・実装をする業務が多くなってきました。
そんな中で、特にＷeb APIインターフェース群の活用が効率化・機能性の向上に大きく貢献していると感じ、どんなケースで使ったのかという具体例やコードも含めて、実際に使用したインターフェースについての有用性を簡単にまとめておきたいと思ったのがきっかけでした。
※MDNで多数のAPIとそのインターフェースが公開されています。
https://developer.mozilla.org/ja/docs/Web/API
では、シリーズ初の...]]></description><link>https://zenn.dev/inob/articles/9be5ebe569894b</link><guid isPermaLink="true">https://zenn.dev/inob/articles/9be5ebe569894b</guid><pubDate>Tue, 18 Feb 2025 07:05:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EqJnDdtp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591Web%2520API%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F-%25E5%2585%25B6%25E3%2581%25AE1%253AMutaionObserver%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:i-nob%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YzUzNTQyOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>i-nob</dc:creator></item><item><title><![CDATA[Popover API × anchor-position × @starting-style で作るTooltip]]></title><description><![CDATA[
 はじめに
こんにちは！😄
みなさん、少し前ですがCSS Wrapped 2024はチェックされましたか？私はCSS Wrapped 2024を見て、「おぉ…この辺の技術で何か作って試してみたい！」となりまして、何かちょうどさくっと作れるいい題材がないかな…と考えた結果、「Popover API」「anchor-position」「@starting-style」を使ってTooltipを作ることにしました！
というわけで、色々な技術を試したいエンジニアの好奇心のままに、CSS Wrapped 2024で紹介された技術を駆使したTooltipのご紹介をします🚀
https://chrom...]]></description><link>https://zenn.dev/gemcook/articles/github-zenn-linkage-popover</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/github-zenn-linkage-popover</guid><pubDate>Tue, 18 Feb 2025 04:04:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KAWDpsnU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Popover%2520API%2520%25C3%2597%2520anchor-position%2520%25C3%2597%2520%2540starting-style%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258BTooltip%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KM%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjk0ZGQyMWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KM</dc:creator></item><item><title><![CDATA[JavaScriptのループと反復処理]]></title><description><![CDATA[
 基本のループ

 for
繰り返し回数が事前に決まっている場合に適すループ。
for (let i = 0; i &lt; 5; i++) {
  console.log(i); // 0, 1, 2, 3, 4
}

 注意点

条件式、更新式を誤ると無限ループになる。


 while
条件式がtrueの間、繰り返し実行されるループ。
ループ開始前に条件をチェックするため、一度も実行されない場合がある。
let i = 0;
while (i &lt; 5) {
  console.log(i); // 0, 1, 2, 3, 4
  i++;
}

 注意点

条件式の更新を忘...]]></description><link>https://zenn.dev/uniii/articles/11299f5d116d6f</link><guid isPermaLink="true">https://zenn.dev/uniii/articles/11299f5d116d6f</guid><pubDate>Mon, 17 Feb 2025 06:34:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n-lWhQxL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A8%25E5%258F%258D%25E5%25BE%25A9%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uuuunnnnii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1X1FuclVoSlBOTVU5em0wTV9YTEdFN0dwQmF0b0VyRGNlUUpaPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uuuunnnnii</dc:creator></item><item><title><![CDATA[Shadow DOM の仕様について]]></title><description><![CDATA[
 Shadow DOM の概要
Shadow DOM とは、Web コンポーネントにおける「カプセル化された DOM」のことを指します。通常の DOM はグローバルにアクセス可能ですが、Shadow DOM を利用すると、内部構造を外部から隠すことができます。この特性により、次のようなメリットが得られます。
✅ スタイルやスクリプトの競合を防ぐ
✅ コンポーネントの再利用性を向上させる
https://developer.mozilla.org/ja/docs/Web/API/Web_components/Using_shadow_DOM
Shadow DOM には open と cl...]]></description><link>https://zenn.dev/localer/articles/590ae7c41553d2</link><guid isPermaLink="true">https://zenn.dev/localer/articles/590ae7c41553d2</guid><pubDate>Mon, 17 Feb 2025 05:01:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HRlNFVGx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Shadow%2520DOM%2520%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%2582%25E3%2582%258A%25E3%2581%25AB%25E3%2581%258F%25E3%2582%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9lo...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjZWUxZjI0ZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くもりにくもったクラウドサービスlocaler</dc:creator></item><item><title><![CDATA[Tailwind CSS×カスタムカラーパレット：ハードコードしないテクニック！]]></title><description><![CDATA[
 1. はじめに：Tailwindでのカラーパレット管理
Tailwind CSSは、効率的にUIを構築するための強力なツールです。
多くのプロジェクトでは、tailwind.config.ts で独自のカラーパレットを定義し、デザインの一貫性を保っています。
例えば、以下のように定義すれば、プロジェクト全体で使えるカラーパレットが実現できます。
// tailwind.config.ts の一例
import type { Config } from 'tailwindcss'
import scrollbarHide from 'tailwind-scrollbar-hide'

...]]></description><link>https://zenn.dev/nanimiru/articles/a9ac5171d2ed75</link><guid isPermaLink="true">https://zenn.dev/nanimiru/articles/a9ac5171d2ed75</guid><pubDate>Mon, 17 Feb 2025 04:34:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eaZVtqdf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tailwind%2520CSS%25C3%2597%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25EF%25BC%259A%25E3%2583%258F%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%25BF%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1ByT2k0SkVYQnVpT1draENyT3dOLWtjbHRlUmlFeHVRZ2hsLWFycVQzeGg1Zkh3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なにみる</dc:creator></item></channel></rss>