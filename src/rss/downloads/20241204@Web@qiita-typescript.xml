<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2024-12-04T20:00:26+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1947412</id>
    <published>2024-12-04T20:00:26+09:00</published>
    <updated>2024-12-04T20:00:26+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Cheesecake2960/items/0cd51e90b901e500a936"/>
    <url>https://qiita.com/Cheesecake2960/items/0cd51e90b901e500a936</url>
    <title>【Visual Studio Code】Vscodeの拡張機能を作ってみた</title>
    <content type="html">はじめに
身近なところにVscodeの拡張機能がたくさんあったので、
自分でも作ってみようと思いました。
作り方
まず拡張機能の雛形を使います
$ npm install -g yo generat…</content>
    <author>
      <name>Cheesecake2960</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1947390</id>
    <published>2024-12-04T19:34:27+09:00</published>
    <updated>2024-12-04T19:34:27+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuto99999/items/3e219b864dab956504ef"/>
    <url>https://qiita.com/yuto99999/items/3e219b864dab956504ef</url>
    <title>Exclude&lt;T, U&gt;の自作（Type Challenge No.6）</title>
    <content type="html">お題
Exclude&amp;lt;T, U&amp;gt;を使用せず、ユニオン型TからUで指定したユニオン型を取り除いたユニオン型を返す型を実装する。
やりたいこと
type result = MyExclude&amp;lt;"a" |…</content>
    <author>
      <name>yuto99999</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1947359</id>
    <published>2024-12-04T18:46:10+09:00</published>
    <updated>2024-12-04T18:46:10+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuto99999/items/a147dd93e4fc65a8208d"/>
    <url>https://qiita.com/yuto99999/items/a147dd93e4fc65a8208d</url>
    <title>タプルの長さを返す型の実装（type challenges No.5）</title>
    <content type="html">お題
タプルTを受け取り、そのタプルの長さを返す型を実装する。
type member = ["Tom", "John", "Mike"];
const color = ["red", "blue"…</content>
    <author>
      <name>yuto99999</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1947351</id>
    <published>2024-12-04T18:38:25+09:00</published>
    <updated>2024-12-04T18:38:25+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/11-1010-100/items/8ae6f61280e6dc7d3bf8"/>
    <url>https://qiita.com/11-1010-100/items/8ae6f61280e6dc7d3bf8</url>
    <title>typescriptでObjectのデータに型安全な追加情報をつける方法</title>
    <content type="html">このような構造のデータがあるとする
// データの構造
type DataA = {a1: string; a2: number};
type DataB = {b1: boolean; b2: D…</content>
    <author>
      <name>11-1010-100</name>
    </author>
  </entry>
</feed>
