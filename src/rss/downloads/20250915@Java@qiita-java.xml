<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-09-15T18:07:34+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080604</id>
    <published>2025-09-15T18:07:34+09:00</published>
    <updated>2025-09-15T18:07:34+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yu-F/items/91d7b29752ac48736a08"/>
    <url>https://qiita.com/yu-F/items/91d7b29752ac48736a08</url>
    <title>久しぶりに列挙体（enum）を理解する</title>
    <content type="text">1.要件
数年ぶりに列挙体（enum）を理解するためにフルーツの種類で値をチェックします。
（※事前実行ができておらず、備忘録で書いています。ご了承ください。）

2.Enumを含む、メイン実行処理を作成
・Enum作成時の要点
⇒ 名称と値をペアで作成する。
⇒ 値をも...</content>
    <author>
      <name>yu-F</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080492</id>
    <published>2025-09-15T14:34:30+09:00</published>
    <updated>2025-09-15T14:34:30+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozaki_3/items/fa7bc22abad5d9088e20"/>
    <url>https://qiita.com/nozaki_3/items/fa7bc22abad5d9088e20</url>
    <title>Effective Java　2-6:不必要なオブジェクトの生成を避ける</title>
    <content type="text">2-6:不必要なオブジェクトの生成を避ける

なぜ避けるべきか

オブジェクト生成は GC 負荷とメモリ使用量を増やす
→ 頻繁だとアプリ全体のスループット低下や遅延を招く。

一部のオブジェクトは作成コストが高い（I/O、暗黙のコピー、内部配列確保など）。

ただ...</content>
    <author>
      <name>nozaki_3</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080468</id>
    <published>2025-09-15T13:44:35+09:00</published>
    <updated>2025-09-15T13:44:35+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozaki_3/items/958a4aed0a528d218d26"/>
    <url>https://qiita.com/nozaki_3/items/958a4aed0a528d218d26</url>
    <title>Effective Java　2-5:資源を直接結び付けるよりも依存性注入を選ぶ</title>
    <content type="text">2-5:資源を直接結び付けるよりも依存性注入を選ぶ

要点
　クラス内で new やシングルトンを直接作る（資源を直接結び付ける）と「結合度が高まり」「テストしにくく」「再利用性が下がる」ため、依存オブジェクトは外から渡す（依存性注入）べき、という話。

なぜDI が良い...</content>
    <author>
      <name>nozaki_3</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080430</id>
    <published>2025-09-15T11:33:52+09:00</published>
    <updated>2025-09-15T11:33:52+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozaki_3/items/88fcc912d23241478c5a"/>
    <url>https://qiita.com/nozaki_3/items/88fcc912d23241478c5a</url>
    <title>Effective Java 2-4:privateのコンストラクタでインスタンス化不可能を強制する</title>
    <content type="text">2-4:privateのコンストラクタでインスタンス化不可能を強制する
　ユーティリティクラス（static メソッドだけを持つクラス） や インスタンスを持つべきでないクラス に対する標準的なパターン。

要点

「インスタンスを作ってはいけない」クラス（ユーティリティ...</content>
    <author>
      <name>nozaki_3</name>
    </author>
  </entry>
</feed>
