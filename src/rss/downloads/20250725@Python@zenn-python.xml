<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 25 Jul 2025 04:44:52 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[PythonのProtocolとdependency-injectorでDIする]]></title><description><![CDATA[
 概要
Python には他の静的型付け言語のような明確な interface キーワードがありませんが、それに代わる Protocol という概念を最近知りました。
そこで、個人的に好んで使っている「Service クラスに Repository を注入する」という DI（依存性注入）パターンを、この Protocol を使って Python でどう実現できるか試してみることにしました。
この記事では、dependency-injector も組み合わせ、その具体的な実装方法をサンプルコードと共に備忘録として残します。
今回使ったコードは以下に置いてあります。
https://gis...]]></description><link>https://zenn.dev/ara_ta3/articles/python-protocol-getting-started</link><guid isPermaLink="true">https://zenn.dev/ara_ta3/articles/python-protocol-getting-started</guid><pubDate>Fri, 25 Jul 2025 04:24:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---jwGGBB5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEProtocol%25E3%2581%25A8dependency-injector%25E3%2581%25A7DI%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ara_ta3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMmNmMDMwYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ara_ta3</dc:creator></item><item><title><![CDATA[Python 3.14 リリースプレビュー：知っておくべき7つの主要な新機能]]></title><description><![CDATA[Pythonコミュニティの革新が止まることはありません。数日前、Python 3.14 Beta 4が静かにリリースされました。
公式のPEP 745リリーススケジュールによると、Python 3.14はベータフェーズに入り、10月に正式リリースが予定されています。これは、コア機能が凍結され、これ以上新しい機能は追加されないことを意味します。今後のアップデートはすべてバグ修正に集中します。新機能を体験したいのであれば、今が絶好の機会です。

この記事では、Python 3.14で最も注目すべき7つの新機能を深く掘り下げていきます。日常の開発体験やコードの堅牢性から、最先端のパフォーマンス...]]></description><link>https://zenn.dev/sunnyy/articles/bbaa7014fe7f59</link><guid isPermaLink="true">https://zenn.dev/sunnyy/articles/bbaa7014fe7f59</guid><pubDate>Fri, 25 Jul 2025 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PK6Z6euY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.14%2520%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25EF%25BC%259A%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D7%25E3%2581%25A4%25E3%2581%25AE%25E4%25B8%25BB%25E8%25A6%2581%25E3%2581%25AA%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sunnyy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwY2U3NTJiMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sunnyy</dc:creator></item><item><title><![CDATA[正規分布曲線をメンバシップ関数とするFuzzy理論を使った挨拶エンジン]]></title><description><![CDATA[Fuzzy理論で、正規分布曲線をメンバシップ関数として採用した、時刻による挨拶を返す関数・スクリプトです。
ここでは、おはようございますに対してμ0=7:00がピーク、σ0=160,こんにちはに対してμ1=15:00がピーク、σ1=100,こんばんはに対してμ2=23:00がピーク、σ2=160の正規分布曲線の大小関係を確率分布とし、３つの中からそれぞれの確率で一つ選択します。
メンバシップ関数を正規分布曲線にしたのは、そのほうが本質的だと思ったからです。
#!/usr/bin/env python3
import math
import random

greetings = [
  ...]]></description><link>https://zenn.dev/fygar256/articles/525aa6cb2c07fa</link><guid isPermaLink="true">https://zenn.dev/fygar256/articles/525aa6cb2c07fa</guid><pubDate>Fri, 25 Jul 2025 03:17:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4lRWOex8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A3%25E8%25A6%258F%25E5%2588%2586%25E5%25B8%2583%25E6%259B%25B2%25E7%25B7%259A%25E3%2582%2592%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2582%25B7%25E3%2583%2583%25E3%2583%2597%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258BFuzzy%25E7%2590%2586%25E8%25AB%2596%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%258C%25A8%25E6%258B%25B6%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fygar256%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHY3TGluV3VfOE1nWmFqMFBpdVU3VlViZjRmYTlIeHFXbEpDTU10M3lkY1VOakhOVEo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fygar256</dc:creator></item><item><title><![CDATA[Pythonでデコレータ＆with文の裏側を見る]]></title><description><![CDATA[
 デコレータ

 デコレータの例
デコレータは以下のコードで登場する@で始まる表記のことです。外部ライブラリだとFastAPIやLangChain, LangSmithなどでちょくちょく登場する印象があります。関数やクラスの直前に付けることで、その関数やクラスの振る舞いが変わります。
// dataclass
// Personクラスに__init__メソッド等が勝手に付く
@dataclass 
class Person:
    name: str 
    age: int

// FastAPI
// GETリクエストを受け付けるAPIが作成される
app = FastAPI(...]]></description><link>https://zenn.dev/crandim_r_and_d/articles/66725c5145681f</link><guid isPermaLink="true">https://zenn.dev/crandim_r_and_d/articles/66725c5145681f</guid><pubDate>Thu, 24 Jul 2025 23:32:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--85oGicap--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25EF%25BC%2586with%25E6%2596%2587%25E3%2581%25AE%25E8%25A3%258F%25E5%2581%25B4%25E3%2582%2592%25E8%25A6%258B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:aaa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25A0R%2526D%25E9%2583%25A8%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5MDU4Y2FiMmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aaa</dc:creator></item><item><title><![CDATA[アニメーションツール「Manim」の紹介]]></title><description><![CDATA[
 Manimとは
MITライセンスのpythonを用いたアニメーションツールであるManim (Mathematical Animation Engine)について自分の環境(MacOS13.6.7)にインストールして使ってみたので、どんなアニメーションや画像が作成できるのかを紹介する。
このライブラリは、筆者がしばしば視聴しているYouTubeチャンネル "3Blue1Brown(https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw)" でよく使われている。動画を拝聴し、「数式を可視化すると現象がわかりやすくなる」と感じたこ...]]></description><link>https://zenn.dev/soyster/articles/9812b4456cd7b5</link><guid isPermaLink="true">https://zenn.dev/soyster/articles/9812b4456cd7b5</guid><pubDate>Thu, 24 Jul 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WOpHVtuc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%258CManim%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masamune%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSURZRmE5YkVvU3FhTTFOSEdQcFo5bXZsWjl4MzdxdVdFMndOOUV5YlNHbGJiMzBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masamune</dc:creator></item><item><title><![CDATA[HTTPSで、コンテンツの先頭一部のみを取得して通信量を節約する in Python]]></title><description><![CDATA[私は技術的問題に引っかかると英語で検索しがちなので、英語でもタイトル相当のことを書いておきます
Request partial content with HTTP in Python to reduce communication amount when using commercial proxy


 はじめに
RSSがない上にデータセンタからからアクセスするとAkamaiによりブロックされるサイトがありまして。
仕方ないので従量制のプロキシサービスを通して定期的に取得して更新がないか確認しているのですが、この通信量を削減したい(コストを下げたい)と考えました。
当然のようにLast...]]></description><link>https://zenn.dev/mipsparc/articles/ff890a495302b3</link><guid isPermaLink="true">https://zenn.dev/mipsparc/articles/ff890a495302b3</guid><pubDate>Thu, 24 Jul 2025 14:40:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fcJsGvak--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTTPS%25E3%2581%25A7%25E3%2580%2581%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2581%25AE%25E5%2585%2588%25E9%25A0%25AD%25E4%25B8%2580%25E9%2583%25A8%25E3%2581%25AE%25E3%2581%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E9%2580%259A%25E4%25BF%25A1%25E9%2587%258F%25E3%2582%2592%25E7%25AF%2580%25E7%25B4%2584%25E3%2581%2599%25E3%2582%258B%2520in%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mipsparc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kwaHY2SlBxb2hBSHRGcW5SRW1uWF8wbHhUeFRNZjBMRl9FU2JLdGJBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mipsparc</dc:creator></item><item><title><![CDATA[OpenLIT解説：Get started編]]></title><description><![CDATA[今回はOpenLITについて、Get startedを試してみたので共有しようと思います。

 OpenLITとは？
OpenLITは、Generative AIとLLMにおけるAI開発ワークフローを簡素化するための仕組みを提供するものとなります。LLMの実験やプロンプトの整理とバージョン管理、APIキーのセキュアな取り扱いといった様々な重要なタスクを効率化して運用することができます。また、OpenTelemetryネイティブの可観測性を実現し、LLM、ベクターデータベース、GPUを含むフルスタックのモニタリングを実現でき、開発者はAI機能やアプリケーションを構築し、テストから本番環境へ...]]></description><link>https://zenn.dev/akasan/articles/20e3fd8a87c44a</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/20e3fd8a87c44a</guid><pubDate>Thu, 24 Jul 2025 13:43:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vJ_50woe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenLIT%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%259AGet%2520started%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-414｜A - Streamer Takahashi]]></title><description><![CDATA[
 設問ページ

🔗ABC-414 A - Streamer Takahashi



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def main():
    N, L, R = getIntMap()
    XY = getIntListRow(N)

    count = 0
    for x, y in XY:
     ...]]></description><link>https://zenn.dev/hyperdb/articles/b5dd38d3fb4f75</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/b5dd38d3fb4f75</guid><pubDate>Thu, 24 Jul 2025 10:16:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BN6vG50k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-414%25EF%25BD%259CA%2520-%2520Streamer%2520Takahashi%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-414｜B - String Too Long]]></title><description><![CDATA[
 設問ページ

🔗ABC-414 B - String Too Long



 提出結果
def getInt():
    return int(input())


def getStringListRow(N):
    return [list(input().split()) for _ in range(N)]


def main():
    N = getInt()
    cl = getStringListRow(N)

    str = ""
    size = 0
    for c, l in cl:
        size += int(l)
  ...]]></description><link>https://zenn.dev/hyperdb/articles/402c7efc49cc5d</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/402c7efc49cc5d</guid><pubDate>Thu, 24 Jul 2025 10:16:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GCbNASmQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-414%25EF%25BD%259CB%2520-%2520String%2520Too%2520Long%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[GitHub File History Analyzerの紹介：ファイル編集履歴をAIで分析するツール]]></title><description><![CDATA[本記事はAIが作成しました。

 はじめに
GitHubリポジトリで管理されているファイルの編集履歴を分析したいと思ったことはありませんか？特に長期間にわたって更新されているファイルの変更パターンや、プロジェクトの進化の過程を理解したい場合があります。
GitHub File History Analyzerは、このようなニーズに応えるために開発したコマンドラインツールです。

 ツールの概要
このツールは以下の機能を提供します：

GitHubのAPIを使用して特定ファイルのコミット履歴を取得
変更内容の統計的な分析（追加・削除行数、変更タイプの分類など）
OpenRouter経由でA...]]></description><link>https://zenn.dev/nakamura196/articles/e417cb1fb76724</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/e417cb1fb76724</guid><pubDate>Thu, 24 Jul 2025 09:28:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5bUEG8oA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520File%2520History%2520Analyzer%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E7%25B7%25A8%25E9%259B%2586%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592AI%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[※編集中【Python】仮想環境（venv）の作成から動作の仕組みまでを理解する]]></title><description><![CDATA[
 はじめに
以前の記事で、仮想環境についての基本的な知識と、使用する理由についてまとめました。
（参考: https://qiita.com/mabo23/items/c2cb995a98d7003d7bdd）
この記事では、実際にPython標準の仮想環境作成モジュール「venv」使って仮想環境を構築する手順について、実際の動作をイメージしやすいよう、仕組みについて言及しながら解説していきます。
※ なお、この記事は仮想環境の基本と使用理由について押さえている方が対象です。もし、まだ理解できていないという方は、上記の記事を参考にしていただけますと幸いです。
※ また、「シェルとプロセ...]]></description><link>https://zenn.dev/mabo23/articles/108540be08aff4</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/108540be08aff4</guid><pubDate>Thu, 24 Jul 2025 09:25:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ivx8JJuq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E2%2580%25BB%25E7%25B7%25A8%25E9%259B%2586%25E4%25B8%25AD%25E3%2580%2590Python%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2588venv%25EF%25BC%2589%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E3%2581%258B%25E3%2582%2589%25E5%258B%2595%25E4%25BD%259C%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%25A7%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[AWS DAS c01 認定の費用はいくらですか？]]></title><description><![CDATA[AWS 認定データ分析 - 専門知識 (DAS-C01) 認定試験の費用は 300 ドルです。この費用には試験自体が含まれており、受講するトレーニング教材やコースの費用は含まれていません。
DAS-C01 試験は、AWS 上でデータ分析ソリューションの設計、実装、セキュリティ保護、保守の経験を持つ方を対象としています。この試験では、AWS サービスを使用してデータレイクを設計・実装し、データパイプラインを構築・最適化し、さまざまな AWS ツールを使用してデータを分析する能力を検証します。https://bitly.cx/ImRvc
]]></description><link>https://zenn.dev/neilpattrick930/articles/5e9cfdace05cff</link><guid isPermaLink="true">https://zenn.dev/neilpattrick930/articles/5e9cfdace05cff</guid><pubDate>Thu, 24 Jul 2025 07:19:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0pD_PTgP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520DAS%2520c01%2520%25E8%25AA%258D%25E5%25AE%259A%25E3%2581%25AE%25E8%25B2%25BB%25E7%2594%25A8%25E3%2581%25AF%25E3%2581%2584%25E3%2581%258F%25E3%2582%2589%25E3%2581%25A7%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Neil%2520Pattrick%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFJpaGxPQnhKZnM2dEJiSG9GYkdyYTAxZlIyV0wwWDhueGlVSWdTMU9zYXRsbGRBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Neil Pattrick</dc:creator></item><item><title><![CDATA[causalimpactを使ってオフライン施策の効果検証をしてみた]]></title><description><![CDATA[
 はじめに
こんにちは、NEのデータ事業推進部（DSO）でデータアナリストをしている本岡です。
私は普段、EC業界のデータを用いた売上や顧客行動の分析、当社のデータ基盤の整備なども担当しています。
本日は「ある施策が本当に効果があったのか？」を検証したいときに役立つ手法、Causal Impact（介入効果分析）についてご紹介します。  実際のデータを用いて、どのように施策の効果を検証できるのかを解説します。

 なぜ効果測定が難しいのか？
たとえば、あなたがECサイトで大型セールを実施したとします。
セール直後に売上が大きく伸びたとしたら、多くの人は「セールが成功した！」と思うはずで...]]></description><link>https://zenn.dev/neinc_tech/articles/86e4ee39ac276e</link><guid isPermaLink="true">https://zenn.dev/neinc_tech/articles/86e4ee39ac276e</guid><pubDate>Wed, 23 Jul 2025 23:25:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oPNt-SbC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:causalimpact%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E6%2596%25BD%25E7%25AD%2596%25E3%2581%25AE%25E5%258A%25B9%25E6%259E%259C%25E6%25A4%259C%25E8%25A8%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2582%25E3%2581%25A8%25E3%2582%2592%25E3%2581%258B%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMzg1NzFjZWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NE%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMzVlYzFjNTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もとをか</dc:creator></item><item><title><![CDATA[Javaレガシー帳票出力アプリをPythonにリメイクした話]]></title><description><![CDATA[
 Flask帳票出力アプリ

 0. はじめに
昔SIerにて、以下の構築の案件に関わったことがある。

この帳票出力アプリの構築では、
ユーザがJavaScript UIの画面に入力した値をバックエンド側で処理し,
生成されたSQLでDBに問い合わせ、結果をもとにPDFを生成する。
しかし、帳票出力処理とバックエンド処理が密結合なため動作が重く、
保守性も拡張性も絶望的であった。
フロントとバックが密に絡んでて「改修したくても壊れる」状態であった。
これらの経験から、軽量でモダンな構築で実現できないか考察した。


 1. Flaskで作り直したときの構成メモ
以下の記事で Pyth...]]></description><link>https://zenn.dev/nickelth/articles/outputreportpy</link><guid isPermaLink="true">https://zenn.dev/nickelth/articles/outputreportpy</guid><pubDate>Wed, 23 Jul 2025 21:36:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rb8BEQhk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2583%25AC%25E3%2582%25AC%25E3%2582%25B7%25E3%2583%25BC%25E5%25B8%25B3%25E7%25A5%25A8%25E5%2587%25BA%25E5%258A%259B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Python%25E3%2581%25AB%25E3%2583%25AA%25E3%2583%25A1%25E3%2582%25A4%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjc3ODIwNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ニッケル</dc:creator></item><item><title><![CDATA[Python初心者がグラム・シュミットの正規直交化法をコードでゼロから書いてみた]]></title><description><![CDATA[こんにちは、きょーじゅです。
今日は線形代数に登場するグラム・シュミットの正規直交化法をPythonでコーディングすることにチャレンジしました。
コードを書き上げた後にChatGPTに聞いたらNumPyという便利技があったようですが、そのようなものを全く知らなかったので手計算のプロセスをそのままコードにしました。読み辛いのはご容赦ください。

 グラム・シュミットの正規直交化法とは
グラムシュミットの正規直交化法とは線形代数に登場する計算手法で、複数のベクトルから「互いに直交する（＝直角に交わる）基底となるベクトルを作るものです。
元のベクトルがバラバラな方向を向いていても、順番に直交化...]]></description><link>https://zenn.dev/kyojyu01/articles/6405a257ec26bc</link><guid isPermaLink="true">https://zenn.dev/kyojyu01/articles/6405a257ec26bc</guid><pubDate>Wed, 23 Jul 2025 21:15:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pOWxv5Hl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pythonw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2587%25E3%2583%25BC%25E3%2581%2598%25E3%2582%2585%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlZ5WF9abGR3RjFXakZZZkxnQnMyb2RjSUZVb3ZsYU45RjRkU19LdDNfeVFhUmM3X249czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きょーじゅ</dc:creator></item><item><title><![CDATA[EmbulkをDocker×Lambdaで動かす（開発＆本番環境）]]></title><description><![CDATA[
 はじめに
Embulkを触って最初に思ったのは「これ、どこで動かそうか？？」
直感的にLambdaが良いなと思ったものの、調べてもあまり情報もなく、スッキリした構成を取るのにも色々検討したのでオススメとして紹介します。
また以前、執筆したDockerを活用したLambdaの開発＆本番環境のおすすめ構成を元に、Docker×Lambdaで本番環境を構築した上で、開発環境も一貫性のある作りにしています。

※どっちもクジラ！！

 サンプルコード
本記事で解説するコード一式は、以下のGitHubリポジトリで公開しています：
🔗 embulk-lambda-container

完全なDo...]]></description><link>https://zenn.dev/konan/articles/653381379e846f</link><guid isPermaLink="true">https://zenn.dev/konan/articles/653381379e846f</guid><pubDate>Wed, 23 Jul 2025 13:29:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HImM3wJ0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Embulk%25E3%2582%2592Docker%25C3%2597Lambda%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2588%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2586%25E6%259C%25AC%25E7%2595%25AA%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Konan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMzRhOGU0NDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Konan</dc:creator></item><item><title><![CDATA[Spherical Average (多点間の球面線形補間)について]]></title><description><![CDATA[こんにちは。GokRackこと極落にんじんです。
今回は、私が Beatrice VSTの2.0.0-beta.3のアップデートとして話者のモーフィング機能 (Voice Morphing Mode)を実装したときに用いた Spherical Average (多点間の球面線形補間) についてのお話です。

 背景
私が Beatrice VST に興味を持ってソースコードを眺めたのは Ver.2.0.0-beta.2 の頃なのですが、その当時のVSTのソースコードを読み解く限り、 Beatrice は話者の特徴量を 256 次元の Embeddings で保持しており、話者切り替えは推...]]></description><link>https://zenn.dev/gokrack/articles/40335640f4af58</link><guid isPermaLink="true">https://zenn.dev/gokrack/articles/40335640f4af58</guid><pubDate>Wed, 23 Jul 2025 13:27:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sOMcnTVI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spherical%2520Average%2520%2528%25E5%25A4%259A%25E7%2582%25B9%25E9%2596%2593%25E3%2581%25AE%25E7%2590%2583%25E9%259D%25A2%25E7%25B7%259A%25E5%25BD%25A2%25E8%25A3%259C%25E9%2596%2593%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GokRack%2520%252F%2520%25E6%25A5%25B5%25E8%2590%25BD%25E3%2581%25AB%25E3%2582%2593%25E3%2581%2598%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4NDJlODdlOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GokRack / 極落にんじん</dc:creator></item><item><title><![CDATA[Python、Streamlit と FastAPI で、ブロックチェーンを実装してみた♪①秘密鍵作成～ブロードキャスト]]></title><description><![CDATA[今回から、ちょっと本格的なブロックチェーンを実装していこーと思います！
フロントエンドに Streamlit、バックエンドに FastAPI を使って、実際にノードを3つ用意して、通信もできるようします。
前回の簡易版に比べると、本格的になったと言えるようなものに仕上げよーと思います。
基本、Python オンリー、クラスを使わず、データベースも使わず、データは JSON ファイルのみで実装していきます。
ブロックチェーン自体は仮完成しているんですが、けっこーややこしいので、どこまで実装するかは、毎回、判断していこーと思います。
それでは、れっつらごー♪


 実装する予定のもの

通信...]]></description><link>https://zenn.dev/animalz/articles/896225dc4b6bef</link><guid isPermaLink="true">https://zenn.dev/animalz/articles/896225dc4b6bef</guid><pubDate>Wed, 23 Jul 2025 10:12:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6HwS4Axh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2580%2581Streamlit%2520%25E3%2581%25A8%2520FastAPI%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E2%2599%25AA%25E2%2591%25A0%25E7%25A7%2598%25E5%25AF%2586%25E9%258D%25B5%25E4%25BD%259C%25E6%2588%2590%25EF%25BD%259E%25E3%2583%2596%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A3%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25AB%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZTA2MDVlMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あにまる</dc:creator></item><item><title><![CDATA[DeepLとObsidianをPythonで連携しましょう]]></title><description><![CDATA[
 について
技術記事を除いて、ノートを書くことはほぼObsidianを使うだけです。言語学習に関しては、ノートをとっている間に、翻訳サービスを使うため、ノート管理ツールとブラウザの間をしきりに切り替えることはあんまり便利じゃないと思います。先日「脱Google」についてのある文章を読み、Google翻訳の代わり DeepL を紹介してくれました。口コミにはGoogle翻訳より精度がよく高いと言われているし、他のシステムにAPIで連携させることもできます。それを利用してObsidianの中で翻訳することができれば、ノートを書くことに対しては役に立つかもしれません。

 DeepL Pyt...]]></description><link>https://zenn.dev/shinei/articles/8537f2fb66262a</link><guid isPermaLink="true">https://zenn.dev/shinei/articles/8537f2fb66262a</guid><pubDate>Wed, 23 Jul 2025 06:08:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JuT0uqp_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeepL%25E3%2581%25A8Obsidian%25E3%2582%2592Python%25E3%2581%25A7%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25A8%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkM2I1ZDYwZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>シンエイ</dc:creator></item><item><title><![CDATA[バイブコーディング: ノンデベロッパーのためのClaude Code実践ガイド - Streamlit編]]></title><description><![CDATA[プログラミング初心者でもClaude Codeを使ったバイブコーディングで、実用的なBIダッシュボードを構築する実践ガイド。GitHub CodespacesとStreamlitを活用し、データ分析から本番デプロイまで一貫したワークフローを学びます。]]></description><link>https://zenn.dev/shibatanaoto/books/streamlit-bi-claude-code</link><guid isPermaLink="true">https://zenn.dev/shibatanaoto/books/streamlit-bi-claude-code</guid><pubDate>Wed, 23 Jul 2025 06:01:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tnEac104--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yN2JjNzNjN2E4LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Naoto Shibata</dc:creator></item></channel></rss>