<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2025-09-15T16:05:03+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080540</id>
    <published>2025-09-15T16:05:03+09:00</published>
    <updated>2025-09-15T16:05:56+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/c3049060dd3488a378c9"/>
    <url>https://qiita.com/nozomi2025/items/c3049060dd3488a378c9</url>
    <title>【Kotlin】value class（値型クラス）について解説します</title>
    <content type="text">はじめに
Kotlin の value class は、旧来の inline class の進化版・正式版です。Kotlin 1.5 から正式リリースされ、inline class は非推奨になりました。

1. 定義方法
@JvmInline
value class ...</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080536</id>
    <published>2025-09-15T15:56:25+09:00</published>
    <updated>2025-09-15T15:58:34+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/8746e20740b25efa9b9d"/>
    <url>https://qiita.com/nozomi2025/items/8746e20740b25efa9b9d</url>
    <title>【kotlin】Kotlin の inline class（インラインクラス）について解説します</title>
    <content type="text">1. 概要
inline class は Kotlin 1.3 で導入された機能で、単一の値をラップする軽量クラス を定義できます。
例えば ID・Email・PhoneNumber などを String や Int のまま扱うと混同しやすいですが、専用の型にすることで安...</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080521</id>
    <published>2025-09-15T15:30:15+09:00</published>
    <updated>2025-09-15T15:34:03+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/06347ed58dcd2d1aa650"/>
    <url>https://qiita.com/nozomi2025/items/06347ed58dcd2d1aa650</url>
    <title>【リファクタリング】第9回 基本データ型への執着（Primitive Obsession）</title>
    <content type="text">はじめに
基本データ型への執着（Primitive Obsession） とは、文字列・数値・真偽値といった「プリミティブ型（基本型）」を乱用し、
本来は専用のオブジェクトや値型で表現すべき概念を、単なる基本型で済ませてしまう悪臭です。
例：

電話番号をただの Stri...</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2080519</id>
    <published>2025-09-15T15:27:19+09:00</published>
    <updated>2025-09-15T16:06:53+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/ef4d487cdb87c6b5db87"/>
    <url>https://qiita.com/nozomi2025/items/ef4d487cdb87c6b5db87</url>
    <title>【Android】Android についての知識まとめ</title>
    <content type="text">koltin

基礎
Kotlin の inline class（インラインクラス）について
value class（値型クラス）について

Android</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
</feed>
