<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 11 May 2025 06:20:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[pyGenomeVizでゲノムの比較結果を可視化（visualize synteny patterns using pyGenomeViz）]]></title><description><![CDATA[
 はじめに
Genbank形式のアノテーションのついたファイルを使ってゲノムの比較結果を可視化してみます。
pyGenomeVizをGUIで使用する例です。

 動作確認 (Hardware)
-MacBook Pro
-チップ Apple M1 (Rosetta2 インストール済み)
-macOS Sonoma 14.7.5
-メモリ 16GB

 動作確認 (Software)
-Python 3.13.3
-pyGenomeViz 1.5.0
-streamlit 1.44.1
-blast 2.16.0
-mummer 4.0.1
-mmseqs2 17.b804f

 手順
...]]></description><link>https://zenn.dev/mtojsvqi/articles/8-synteny_patterns_pygenomeviz</link><guid isPermaLink="true">https://zenn.dev/mtojsvqi/articles/8-synteny_patterns_pygenomeviz</guid><pubDate>Sun, 11 May 2025 01:15:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8xpsEJ1X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyGenomeViz%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%258E%25E3%2583%25A0%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2588visualize%2520synteny%2520patterns%2520using...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mtojsvqi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzg0MWExMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mtojsvqi</dc:creator></item><item><title><![CDATA[🔥 Python Flask入門：はじめてのWebアプリ開発]]></title><description><![CDATA[
 📝 はじめに
PythonでWebアプリを作ってみたいと思ったとき、最初にぶつかる壁は「何から始めればいいのか」ということです。Flaskは、そんなPythonユーザーにぴったりの、軽量で使いやすいWebフレームワークです。このガイドでは、Flaskの基本的な仕組みから簡単なアプリの作り方、テンプレートの使い方、そしてつまずきやすいポイントとその対処法まで、初心者向けにやさしく解説します。

 ✅ Flaskとは？
Flask（フラスク）は、Pythonで使える軽量なWebフレームワークです。とてもシンプルで、必要な機能だけを自由に追加できるのが特徴です。

必要最低限の構成で動作す...]]></description><link>https://zenn.dev/oit2003/articles/66af910431a486</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/66af910431a486</guid><pubDate>Sun, 11 May 2025 01:14:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XN89kOyn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Python%2520Flask%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AEWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[【Docker & Django & Vue.js PostgreSQL】環境構築手順②]]></title><description><![CDATA[
 環境構築完成イメージ!

イメージ図

 前回の記事
https://zenn.dev/code_journey_ys/articles/9dab988afbca82
前回の記事の続きを解説。

 ９．Djangoアプリケーションフォルダの作成とurls.pyの作成

アプリケーションフォルダ作成画面

アプリケーションフォルダ作成コマンド
docker-compose -f docker/compose//docker-compose.dev.yml exec backend python manage.py startapp api 


アプリケーションフォルダ内にurls.p...]]></description><link>https://zenn.dev/code_journey_ys/articles/a76166094f9e3c</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/a76166094f9e3c</guid><pubDate>Sat, 10 May 2025 12:33:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---FuL4Iri--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%2520%2526%2520Django%2520%2526%2520Vue.js%2520PostgreSQL%25E3%2580%2591%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[VOICEVOX Core v0.16.0 で俳句読み上げ動画を作る]]></title><description><![CDATA[
 はじめに
前回の記事（VOICEVOX Core を Python で扱う基本）では、VOICEVOX Core の Python バインディングを使って、テキストから音声を生成する方法を紹介しました。今回はその続編として、5・7・5 の俳句をずんだもんに読み上げてもらい、背景画像とともに動画を生成する CLI ベースのワークフローを紹介します。
なお、使用するバージョンは VOICEVOX Core v0.16.0 です。開発版では非同期処理の仕様変更が進んでいるため、安定したバージョンでの確認が目的です。

 必要なツールのインストール

 ディレクトリ構成（v0.16.0 想定...]]></description><link>https://zenn.dev/masakielastic/articles/aaf1b67ce37b56</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/aaf1b67ce37b56</guid><pubDate>Sat, 10 May 2025 11:45:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YV7pb_jV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VOICEVOX%2520Core%2520v0.16.0%2520%25E3%2581%25A7%25E4%25BF%25B3%25E5%258F%25A5%25E8%25AA%25AD%25E3%2581%25BF%25E4%25B8%258A%25E3%2581%2592%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[Seleniumの使い方　第３回　webdriverについて]]></title><description><![CDATA[こんにちは、星杜なぎさです

 1. はじめに

Seleniumは、Webブラウザの操作を自動化するためのツール
オープンソースなので、無料で利用可能
WebスクレイピングやRPA（Robotic Process Automation）などに活用できる


 1.1 この記事について

SeleniumのWebDriverについて、情報が散見しているため、まとめた
実際に動かして、コードのどの部分がどの動作に対応しているか確認しやすくした


 1.2 対象読者

プログラム言語（特にpython）が多少読める、書ける
PCの基本操作（Drag and Dropなど）を知っている
We...]]></description><link>https://zenn.dev/hoshinagi1219/articles/fbc0b89c783fed</link><guid isPermaLink="true">https://zenn.dev/hoshinagi1219/articles/fbc0b89c783fed</guid><pubDate>Sat, 10 May 2025 11:22:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g67O04wQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Selenium%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2580%2580%25E7%25AC%25AC%25EF%25BC%2593%25E5%259B%259E%25E3%2580%2580webdriver%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2598%259F%25E6%259D%259C%25E3%2581%25AA%25E3%2581%258E%25E3%2581%2595%25EF%25BC%2588Nagisa%2520Hoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMTgwYmFjZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>星杜なぎさ（Nagisa Hoshimori）</dc:creator></item><item><title><![CDATA[「みことプロジェクト」、始動！]]></title><description><![CDATA[はじめまして、あにまるです。
独学で8年ほど、プログラミング（Python ベース）を勉強してきました。
動画のレクチャーや本で200本以上、いやー、けっこーがんばりました。
あと、コンペとかに参加した時期もありました。
最近は、いろいろなプラットフォーム（SNS とか）がありますが、検閲とかで、どーも自由な発信ができないケースが、けっこーあるみたいです。
そこで、自由な発信ができるプラットフォームづくりに挑戦することにしました。
「みことプロジェクト」、始動！
仕事としては未経験なんで、どこまでやれるかわかりませんが、今まで学んできたことをフルに使って、できる限りのことをやろーと思って...]]></description><link>https://zenn.dev/animalz/articles/ba8c02ffcd5809</link><guid isPermaLink="true">https://zenn.dev/animalz/articles/ba8c02ffcd5809</guid><pubDate>Sat, 10 May 2025 11:11:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a9wn3nQF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2581%25BF%25E3%2581%2593%25E3%2581%25A8%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2580%258D%25E3%2580%2581%25E5%25A7%258B%25E5%258B%2595%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25AB%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlNuZGlxZ1FLTUJ6bGdiYl9GQXdPZVVEUEVtM2RwNU9YdWtvTnVmdXB6Q0FrbnNRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あにまる</dc:creator></item><item><title><![CDATA[初心者向け-画像処理ハンズオン！by StepByCode]]></title><description><![CDATA[
 はじめに
こんにちは！ StepByCode の活動より、画像処理ハンズオンの内容を記事化してお届けします。
PythonとOpenCVを使って、お手軽に画像を「ドット絵化」してみませんか？本記事では、写真をレトロなドット絵風に変換するツールをハンズオン形式で作成します。画像処理の第一歩として、ぜひコードを動かしながら一緒に進めてみましょう！
（この内容は、「StepByCode vol.7 初心者向け 画像処理ハンズオン!」での使用教材です。）

 目標

PythonとOpenCVを使った画像処理の基本を理解する。
画像をドット絵風に変換するスクリプトを作成する。
画像処理の楽し...]]></description><link>https://zenn.dev/0_s0g0/articles/9f82e2ef2196e4</link><guid isPermaLink="true">https://zenn.dev/0_s0g0/articles/9f82e2ef2196e4</guid><pubDate>Sat, 10 May 2025 07:10:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P1P-jUdG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591-%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25EF%25BC%2581by%2520StepByCode%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:0_s0g0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlYTYwMGY2ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>0_s0g0</dc:creator></item><item><title><![CDATA[いろんな方法で文字列結合【VSCode・エクセル・生成AI・Python】]]></title><description><![CDATA[
 概要
文字列の結合（連結）は、作業を効率化するうえで非常に便利な操作です。
たとえば以下のような場面で役立ちます。

メールで使用するための氏名を一括で生成する
テスト用の大量のURLを作成し、それらすべての動作確認を行う

現在では、さまざまなツールで文字列の結合が可能です。
この記事では、それぞれのツールで「氏名の結合」を試し、使ってみた感想を記載しています。

 氏名のサンプルデータ



氏
名




龍野
薩摩


八雲
すずか


竜崎
凪人


風見
あおい


闇田海
幻夜



GPTに現実上存在しない氏名を生成してもらいました。
現在は「氏」と「名」のデータのみ...]]></description><link>https://zenn.dev/nnnto/articles/b02e13fc12a65d</link><guid isPermaLink="true">https://zenn.dev/nnnto/articles/b02e13fc12a65d</guid><pubDate>Sat, 10 May 2025 04:44:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dPzeTzcU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2582%258D%25E3%2582%2593%25E3%2581%25AA%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E7%25B5%2590%25E5%2590%2588%25E3%2580%2590VSCode%25E3%2583%25BB%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2583%25BB%25E7%2594%259F%25E6%2588%2590AI%25E3%2583%25BBPython%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nnnto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMTQ3MGVmYWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nnnto</dc:creator></item><item><title><![CDATA[FastAPI で作った HTTP API を Rust に置き換えるとしたら？]]></title><description><![CDATA[登場人物：


ずんだもん（質問役）：Rust 初心者。FastAPI には慣れている。

めたん（解説役）：Webフレームワークと非同期処理に詳しい技術オタク。

つむぎ（補足ナレーション）：仕様整理や長期的視点の提案が得意。

この記事は ChatGPT で生成しました。

ずんだもん：VOICEVOX の HTTP API って FastAPI で作られてるけど、Rust に置き換えるとしたらどこから手をつけるといいの？
めたん：まず考えるべきは「何を置き換えるか」だね。VOICEVOX Core はすでに Rust 製だから、対象は HTTP サーバー部分、つまり FastAPI...]]></description><link>https://zenn.dev/masakielastic/articles/d8779e6400b2cf</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/d8779e6400b2cf</guid><pubDate>Sat, 10 May 2025 03:16:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7YOLT-R3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2520HTTP%2520API%2520%25E3%2582%2592%2520Rust%2520%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[現在時刻を返すMCPサーバを作ってCursorと連携させてみる（uv編）]]></title><description><![CDATA[
 はじめに
以前の記事でDockerを用いてPythonの実行環境を構築し、コンテナ内でMCPサーバを稼働させてCursorと連携する構成を試しました。

無事に目的は達成できたものの、主に以下の点で不便さを感じました。

Dockerコンテナの起動状況を把握しておかないといけないので、普段使いするには煩わしい。

MCP Inspectorが使いにくい。

これらを解消したく、今回はホストマシン上にuvでPythonの仮想環境を構築し、その環境下で実装したMCPサーバをCursorと連携することにします。

 この記事で達成したいこと

uvでPythonの仮想環境を構築し、その環境...]]></description><link>https://zenn.dev/kyukei/articles/8212402d379ecf</link><guid isPermaLink="true">https://zenn.dev/kyukei/articles/8212402d379ecf</guid><pubDate>Sat, 10 May 2025 01:58:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wpXl5E4U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258F%25BE%25E5%259C%25A8%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6Cursor%25E3%2581%25A8%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588uv%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2585%25E3%2581%2586%25E3%2581%2591%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnhPUS1jZExKcHJObjJOR3E2VVgzb2N5d2ZiZV9jMVNZcVVJYkNaVmNORkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きゅうけい</dc:creator></item><item><title><![CDATA[【Python仮想環境管理】uv コマンド&引数一覧と機能概要]]></title><description><![CDATA[今までずっとpoetry+pyenvでpythonの仮想環境管理してましたが、uvがめちゃくちゃ高速&amp;簡単なので勉強ついでにコマンドまとめておきます

 プロジェクト管理



コマンド
説明




uv init
新しいPythonプロジェクトを初期化し、pyproject.tomlを作成します。


uv add
依存パッケージをプロジェクトに追加し、pyproject.tomlを更新します。


uv remove
プロジェクトから依存パッケージを削除します。


uv sync

pyproject.tomlとuv.lockに基づいて環境を同期します。


uv loc...]]></description><link>https://zenn.dev/lia/articles/bc31feaf3a4715</link><guid isPermaLink="true">https://zenn.dev/lia/articles/bc31feaf3a4715</guid><pubDate>Fri, 09 May 2025 23:34:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--25czdelc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E7%25AE%25A1%25E7%2590%2586%25E3%2580%2591uv%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2526%25E5%25BC%2595%25E6%2595%25B0%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%25A8%25E6%25A9%259F%25E8%2583%25BD%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りあ</dc:creator></item><item><title><![CDATA[Easyfigでゲノムの比較結果を可視化（visualize synteny patterns using Easyfig）]]></title><description><![CDATA[
 はじめに
Genbank形式のアノテーションのついたファイルを使ってゲノムの比較結果を可視化してみます。
EasyfigをCLIで使用する例です。

 動作確認 (Hardware)
-MacBook Pro
-チップ Apple M1 (Rosetta2 インストール済み)
-macOS Sonoma 14.7.5
-メモリ 16GB

 動作確認 (Software)
-Python 3.12.10
-Easyfig.py Version 3.0.0
-blast 2.16.0

 手順

 1.データの用意
Nature Scientific Reportsに掲載の、こちらの文...]]></description><link>https://zenn.dev/mtojsvqi/articles/10-synteny_patterns_easyfig</link><guid isPermaLink="true">https://zenn.dev/mtojsvqi/articles/10-synteny_patterns_easyfig</guid><pubDate>Fri, 09 May 2025 23:20:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M-OB0-pf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Easyfig%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%258E%25E3%2583%25A0%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25EF%25BC%2588visualize%2520synteny%2520patterns%2520using%2520Eas...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mtojsvqi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzg0MWExMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mtojsvqi</dc:creator></item><item><title><![CDATA[[備忘録]Pythonパッケージの配布方法]]></title><description><![CDATA[開発したPythonのパッケージを配布する機会は、そう多くないので備忘録としてまとめる。
最近はLLMに聞けばすぐに分かるが、自分が過去にやった手順は記録しておきたいのでzennに残しておく。

 ディレクトリ構成
my_project/
├── my_package/          # ソースコードが入るディレクトリ
│   ├── __init__.py      
│   └── __main__.py
├── tests/               
│   ├── __init__.py
│   └── test_module1.py
├── pyproject.toml...]]></description><link>https://zenn.dev/tamanegi/articles/2474e5f8e1b4c9</link><guid isPermaLink="true">https://zenn.dev/tamanegi/articles/2474e5f8e1b4c9</guid><pubDate>Fri, 09 May 2025 17:28:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2Qj83J-H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255DPython%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E9%2585%258D%25E5%25B8%2583%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25BE%25E3%2581%25AD%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUdkemxYcUliUGgwYVNlRDlEaXplV3Z2Vy1IWHdPNkh3TUc2S2dpZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たまねぎ</dc:creator></item><item><title><![CDATA[Streamable HTTPに対応したMCP Python SDKとlangchain-mcp-adaptersを使ってAgentを実装]]></title><description><![CDATA[本記事では、Streamable HTTP Transportに対応したMCP Python SDK v1.8.0とlangchain-mcp-adaptersを使い、tool callingをするAIエージェントを実装します。

 実装するもの
今回は、以下の機能を持つサーバーとクライアントを実装します。

サーバー側：MCPで数値計算(加算、乗算)を行うToolsを提供
クライアント側：langchain-mcp-adaptersとLangChain/LangGraphとを使ってMCPサーバ上のtoolをcallし、ユーザの要求に応えるAIエージェント


 必要なパッケージ
以下の...]]></description><link>https://zenn.dev/5enxia/articles/82179743b62296</link><guid isPermaLink="true">https://zenn.dev/5enxia/articles/82179743b62296</guid><pubDate>Fri, 09 May 2025 16:32:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0yLFiA32--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamable%2520HTTP%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259FMCP%2520Python%2520SDK%25E3%2581%25A8langchain-mcp-adapters...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:5enxia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlMDI3NjY3MmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>5enxia</dc:creator></item><item><title><![CDATA[【Docker & Django & Vue.js PostgreSQL】環境構築手順①]]></title><description><![CDATA[
 環境構築完成イメージ!

イメージ図

 １．ディレクトリ作成コマンドの実行

コマンド実行後の画面イメージ
ディレクトリ作成コマンド
以下をコピーして、メモに貼り付け、.ps1として保存し、Windows Power Shellで実行する
$ProjectName = "myproject"

# ディレクトリ作成
$dirs = @(
    "$ProjectName\backend\app",
    "$ProjectName\docker\nginx",
    "$ProjectName\docker\backend",
    "$ProjectName\docker...]]></description><link>https://zenn.dev/code_journey_ys/articles/9dab988afbca82</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/9dab988afbca82</guid><pubDate>Fri, 09 May 2025 15:18:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AOOYq_vi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%2520%2526%2520Django%2520%2526%2520Vue.js%2520PostgreSQL%25E3%2580%2591%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[ウェブページから抽出したMermaid SVGが正しく表示されない？ハマりどころと解決への道筋]]></title><description><![CDATA[
 はじめに
ウェブサイトやドキュメントでよく見かけるMermaid.jsで描画された図。これらをプログラムで抽出し、Markdownドキュメントなどで再利用しようとした際に、SVGが期待通りに表示されず頭を抱えた経験はありませんか？例えば、図の一部しか表示されなかったり、大切なテキストが消えてしまったり... 本記事では、筆者が実際にそのようなSVG表示問題に直面し、その原因を一つ一つ解き明かし、最終的に解決に至るまでの具体的なプロセスと得られた知見を共有します。
この記事は、特に以下のような課題をお持ちの方に役立つことを目指しています。

ウェブスクレイピングやHTML解析を通じてS...]]></description><link>https://zenn.dev/suwash/articles/mermaid_svg_20250510</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/mermaid_svg_20250510</guid><pubDate>Fri, 09 May 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nQL8MRPG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258B%25E3%2582%2589%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259FMermaid%2520SVG%25E3%2581%258C%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25E3%2583%258F%25E3%2583%259E%25E3%2582%258A%25E3%2581%25A9%25E3%2581%2593%25E3%2582%258D%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%25B8%25E3%2581%25AE%25E9%2581%2593%25E7%25AD%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh</dc:creator></item><item><title><![CDATA[Apache Projects様を引用してブログネタを決めるためのツールを作成しました]]></title><description><![CDATA[今回は、私が今しているセルフエンドレスアドベントカレンダーのネタを決めるためのツールを作成しましたので紹介します。

 対象とするものは？
今回はApacheのプロジェクト一覧からランダムに抽出されたプロジェクトを対象とするようにしました。なお、これはネタが思い浮かばなかったり、思い浮かんでるけどなんか違うものがいいなと思った時に実行するようにします。
https://projects.apache.org/projects.html

 作成したツールについて
今回はPythonを使ってツールを作成しました。
まずは先ほどのApache Projectsの一覧からアイテムをテキストファ...]]></description><link>https://zenn.dev/akasan/articles/7e30ad266c02c4</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/7e30ad266c02c4</guid><pubDate>Fri, 09 May 2025 13:35:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e5gUzWv1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Projects%25E6%25A7%2598%25E3%2582%2592%25E5%25BC%2595%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%258D%25E3%2582%25BF%25E3%2582%2592%25E6%25B1%25BA%25E3%2582%2581%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[Python向け爆速静的解析ツールtyを使ってみる]]></title><description><![CDATA[
 tyとは
Astral社が作っているRust製の爆速な型検査器および言語サーバーです。
https://github.com/astral-sh/ty

 インストール
pypiで公開されているのでuv add すればOK。
uv add ty --dev

 速度比較

 比較方法
雑にHyperfineでベンチマークを取ってみる。
hyperfine 'uv run mypy --strict src' 'uv run ty check src --exit-zero'
なお、リポジトリは拙作のパッケージを使った。ついでに見てもらえると嬉しい。
https://github.co...]]></description><link>https://zenn.dev/shundeveloper/articles/9fc06323d00917</link><guid isPermaLink="true">https://zenn.dev/shundeveloper/articles/9fc06323d00917</guid><pubDate>Fri, 09 May 2025 13:14:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--quqao1OH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2590%2591%25E3%2581%2591%25E7%2588%2586%25E9%2580%259F%25E9%259D%2599%25E7%259A%2584%25E8%25A7%25A3%25E6%259E%2590%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25ABty%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shunsock%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3Y2U4NzUxNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shunsock</dc:creator></item><item><title><![CDATA[【Global Azure 2025】Gitub Copilot Hands-on Lab for Python]]></title><description><![CDATA[
 はじめに
この記事では、GitHub Copilotを使用してPythonでの開発を支援する方法を学ぶためのハンズオンラボを紹介します。
05-Using-GitHub-Copilot-with-Pythonをもとに作成したハンズオンラボです。
誤りや不具合がある場合は随時修正予定です。

 事前に読んでおくと良い資料

Introduction to prompt engineering with GitHub Copilot
Using GitHub Copilot with Python


 ハンズオンの準備

Enable your GitHub Copilot servi...]]></description><link>https://zenn.dev/ymd65536/articles/gtihub_copilot_handson</link><guid isPermaLink="true">https://zenn.dev/ymd65536/articles/gtihub_copilot_handson</guid><pubDate>Fri, 09 May 2025 11:00:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--scxyoy6b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Global%2520Azure%25202025%25E3%2580%2591Gitub%2520Copilot%2520Hands-on%2520Lab%2520for%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kento.Yamada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0YWVmY2Y5YWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kento.Yamada</dc:creator></item><item><title><![CDATA[PySparkにおける日付時刻とTime Zone]]></title><description><![CDATA[
 概要

 PySparkで日付時刻を扱う際の注意点

日付時刻型にはTimestampTypeとTimestampNTZTypeがある。
Sparkセッションのタイムゾーン設定が挙動に影響するため明示的に設定した方がよい。
日付時刻文字列は意図しない変換を避けるためタイムゾーン情報をつけた方がよい。
Pandasとの変換では意図しない変換を避けるためタイムゾーン情報をつけた方がよい。

公式ドキュメントにある程度記述がありますが、undocumentedな挙動も多いです。


 2種類の日付時刻型

TimestampType

Sparkセッションのタイムゾーン設定 (spark....]]></description><link>https://zenn.dev/t_ubukata/articles/fae1571e69221b</link><guid isPermaLink="true">https://zenn.dev/t_ubukata/articles/fae1571e69221b</guid><pubDate>Fri, 09 May 2025 09:35:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PM9pQKwg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PySpark%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%2597%25A5%25E4%25BB%2598%25E6%2599%2582%25E5%2588%25BB%25E3%2581%25A8Time%2520Zone%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomohiro%2520Ubukata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1JfeUdUWk9YYU1LM19sTzlwdjI4amFGS3RKQmNJMTZSOGdVQVhGLWpDSV9sS2tRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomohiro Ubukata</dc:creator></item></channel></rss>