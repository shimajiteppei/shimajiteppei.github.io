<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 16 Nov 2024 09:24:07 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Dockerイメージの uv not found エラー]]></title><description><![CDATA[
 uv not found
先日リリースされた uv 0.5.0 には破壊的な変更が含まれており，その一つが uv インストーラーの実行ファイル保存ディレクトリの変更です．従来の ~/.cargo/bin から ~/.local/bin に変更されました (uv リリースノート)．
この変更により，Dockerfile でインストーラーを使ってバージョンを指定せずに uv をインストールしている場合，ビルド時に Command 'uv' not found エラーが発生し，ビルドが失敗するようになりました．
問題となる Dockerfile の例:
RUN sh /uv-install...]]></description><link>https://zenn.dev/ikumasudo/articles/72e42c842a67a8</link><guid isPermaLink="true">https://zenn.dev/ikumasudo/articles/72e42c842a67a8</guid><pubDate>Sat, 16 Nov 2024 02:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jFrB6Rgc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%2520uv%2520not%2520found%2520%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ikuma%2520Sudo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXMxRnpKeFc3NkI5TjdobGM2UHM1TllrNEpMUl8zTDVpd2JRRm9meTV2bHZRZjNqT2g9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ikuma Sudo</dc:creator></item><item><title><![CDATA[AWS×OSSツールで実現するDocker向けDevSecOpsパイプライン]]></title><description><![CDATA[
 導入

 背景・目的

コンテナセキュリティを検討する際、NISTが発行した信頼性の高いガイドラインである、NIST SP800-190を活用することは非常に有効です。
その中で触れられているコンテナイメージへのセキュリティリスク対策について、Trivy, Dockle, Cosign 等のOSSツールの採用も有力な選択肢になります。
まずは、NIST SP800-190やこれらのツールの概要を解説し、その後、AWSとOSSツールを組み合わせたDocker向けDevSecOpsパイプラインの実装方法や、CDKサンプルコードについて詳しく解説します。


 対象読者

AWS Cert...]]></description><link>https://zenn.dev/acntechjp/articles/657f28411804aa</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/657f28411804aa</guid><pubDate>Fri, 15 Nov 2024 11:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zzUVBKEH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25C3%2597OSS%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BDocker%25E5%2590%2591%25E3%2581%2591DevSecOps%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazuyaasawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUtuS3RRalEzUU9BUm1jRjY1Z2RhdVd0d2JsczVGbUtYMHRhTkpCd1R2LU1Jb2ZnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuyaasawa</dc:creator></item><item><title><![CDATA[[Playwright]をdockerで動かす際のlocale設定について]]></title><description><![CDATA[Docker を使ってコンテナで動かしていた Playwright でスクリーンショットを撮影した際に、input の placeholder が yyyy/mm/dd になっていました。

playwright の locale を日本語にするために、playwright.config.tsで以下の設定をしましたが、解決しませんでした。
 use: {
  ...
    locale: "ja-JP",
  },

 環境
Dockerfile は以下のようにしていました。
FROM mcr.microsoft.com/playwright:v1.43.0-jammy
WORKDIR...]]></description><link>https://zenn.dev/tyyy/articles/playwright-locale</link><guid isPermaLink="true">https://zenn.dev/tyyy/articles/playwright-locale</guid><pubDate>Fri, 15 Nov 2024 06:25:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pn4PkNyW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPlaywright%255D%25E3%2582%2592docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E9%259A%259B%25E3%2581%25AElocale%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mycom%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ZjE1MGI3NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mycom</dc:creator></item><item><title><![CDATA[M1以降(M2,M3)MacからビルドしたDockerイメージをECSやAppRunnerで動かすときのメモ]]></title><description><![CDATA[毎回M1MacでビルドしたDockerイメージからコンテナで動かそうとした時に躓くのでメモ。
M1 Mac環境ではdocker buildするとデフォルトでARMのイメージが作成される。
ECSはARM64とX86_64が選択できるのでまだ良いが、AppRunnerはARM64をサポートしていないので、デフォルトのままではエラーとなる。
ちなみにCahtGPTに聞いてみた。

 x86_64
•	概要: x86_64は、64ビットの拡張命令セットを持つx86アーキテクチャです。x86アーキテクチャの拡張版として、より大きなメモリ空間とより多くのレジスタをサポートしています。
•	開発元:...]]></description><link>https://zenn.dev/akira__0924/articles/qiita-20240728-9f394d2c96c7a88b4630</link><guid isPermaLink="true">https://zenn.dev/akira__0924/articles/qiita-20240728-9f394d2c96c7a88b4630</guid><pubDate>Fri, 15 Nov 2024 05:26:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2WEOHvFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%25E4%25BB%25A5%25E9%2599%258D%2528M2%252CM3%2529Mac%25E3%2581%258B%25E3%2582%2589%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%259FDocker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ECS%25E3%2582%2584AppRunner%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B0%25B4%25E5%25B3%25B6%2520%25E3%2582%25A2%25E3%2582%25AD%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTkxY1czdnVSRzJwelpoWWRBV0lmajVqdEYxdS1qYkxabUlFcFIyQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>水島 アキラ</dc:creator></item><item><title><![CDATA[ローカル環境のDockerがDocker Build Cloudで高速になるか？]]></title><description><![CDATA[Dockerはお好きですか？
Docker社が2024年に発表したDocker Build Cloudですが、今まで使ってなかったので使ってみたいなと思います。
時間課金なので、CIに組み込むとお金が溶けそうなので、プランに含まれる中でなんとか完結させるためにローカルの環境構築だけに利用していこうかなと思っています。

 ⁠アカウント準備
Docker Hubのアカウントを持っているだけでは使えないようです。
Dockerの管理者から、Build Cloudを使えるようにしてもらいましょう
https://app.docker.com/build/
招待してもらえばそれで準備完了です。
...]]></description><link>https://zenn.dev/gessy0129/articles/0320b7261f99e3</link><guid isPermaLink="true">https://zenn.dev/gessy0129/articles/0320b7261f99e3</guid><pubDate>Thu, 14 Nov 2024 09:14:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zuSJSsVn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEDocker%25E3%2581%258CDocker%2520Build%2520Cloud%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gessy0129%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMzkyYTAyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gessy0129</dc:creator></item><item><title><![CDATA[AtCoderのPython環境をDockerで構築]]></title><description><![CDATA[
 はじめに
LAPRASというサービスに登録した。Qiita, Zennなどの外部サービスとの連携機能があり、これまで登録してきたサービスを紐づけている。
連携サービスのなかにAtCoderがあった。昔やっていたがアカウントを消してしまったので、再度作り直すことに。アカウント消さなければ良かった…
改めて環境を構築したので備忘録として記載する。

 AtCoderのページ
本家と過去問

https://atcoder.jp
https://kenkoooo.com/atcoder/#/table/


 環境構築

 使用ライブラリ

https://github.com/onlin...]]></description><link>https://zenn.dev/hocitron/articles/c764e7265991b7</link><guid isPermaLink="true">https://zenn.dev/hocitron/articles/c764e7265991b7</guid><pubDate>Thu, 14 Nov 2024 06:50:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7gZo7mbS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hocitron%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMjlkMjBlZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hocitron</dc:creator></item><item><title><![CDATA[Docker + Postgres - ユーザー名 ( POSTGRES_USER ) やパスワード ( POSTGRES_PASSWORD]]></title><description><![CDATA[
 問題

Docker + Postgres 構成でユーザー名・パスワードを変更しても反映されない
最初に設定したユーザー・パスワードが使われ続けてしまう

DB接続のエラー例
psql -h localhost -p 5432 -U postgres
Password for user postgres:
psql: error: FATAL:  password authentication failed for user "postgres"

 結論
volume でDBを永続化していると、初回に作られたユーザー・パスワードがそのまま使われ続けてしまう
解決策としては、次のよう...]]></description><link>https://zenn.dev/yumainaura/articles/qiita-2024-09-10t10_17_09-09_00</link><guid isPermaLink="true">https://zenn.dev/yumainaura/articles/qiita-2024-09-10t10_17_09-09_00</guid><pubDate>Wed, 13 Nov 2024 22:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZfkNdMwh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520Postgres%2520-%2520%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E5%2590%258D%2520%2528%2520POSTGRES_USER%2520%2529%2520%25E3%2582%2584%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%2520%2528%2520POST...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A8%25B2%25E6%25B5%25A6%25E6%2582%25A0%25E9%25A6%25AC%2520%2528%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2586%25E3%2582%2589%25E3%2582%2586%25E3%2581%2586%25E3%2581%25BE%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3BPSm80MUYydFUxV05wb0owWGNCOTBiUGp1MVdxUmtEWjduWmRhSTlZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>稲浦悠馬 (いなうらゆうま)</dc:creator></item><item><title><![CDATA[M1でCakephp2を構築2~Dockerコンテナの作成~]]></title><description><![CDATA[
 php7.4のサポートが終わろうとしている(終わってた)この時代にphp5.6を使うCakephp2の環境構築を迫られたときの奮闘記2
さて、前回の記事ではM1でPHP５.6を使用したCakephp２の構築を迫られ、LAMPを試しつつ最終的にdockerへと誘われました。docker狂への第一歩🐳
なんでLAMP諦めてdockerにしたのかが知りたければ下記の記事を参照ください。
https://zenn.dev/kitsune_love/articles/70e9d44ca00ef0
今回の記事ではCakephp2が動く環境のdocker構築をしていきます。
docker環境を作成...]]></description><link>https://zenn.dev/kitsune_love/articles/ef6bf76ff11cf4</link><guid isPermaLink="true">https://zenn.dev/kitsune_love/articles/ef6bf76ff11cf4</guid><pubDate>Wed, 13 Nov 2024 05:11:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KLyB2V5o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%25E3%2581%25A7Cakephp2%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%25892%7EDocker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kitsune%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y29odnlNODZWQ2hMV2RUOWg5WHBFa1RzZEtka3lyMzlGSTEyVldYODBFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kitsune</dc:creator></item><item><title><![CDATA[Unsupported cipher or incorrect key length. Supported ciphers are: aes]]></title><description><![CDATA[Laravelで躓いた点をまとめておきます。
Dockerでローカル環境を作ったものの、立ち上げた瞬間に謎のエラーが出ました。
「Unsupported cipher or incorrect key length. Supported ciphers are: aes」
Chat GPTによると
「エラーメッセージ「Unsupported cipher or incorrect key length. Supported ciphers are: aes-128-cbc, aes-256-cbc, aes-128-gcm, aes-256-gcm.」は、暗号化処理に必要な「暗号化方式（...]]></description><link>https://zenn.dev/aya_sato/articles/717d3dbb9a6e52</link><guid isPermaLink="true">https://zenn.dev/aya_sato/articles/717d3dbb9a6e52</guid><pubDate>Tue, 12 Nov 2024 10:23:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ea1cPTg3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Unsupported%2520cipher%2520or%2520incorrect%2520key%2520length.%2520Supported%2520cip...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aya%2520satoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLa3dRbnNlMlVSdUs0ellWZ3FOZHJ3bnBBTzdyNmRYd3lTMU1JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aya satoh</dc:creator></item><item><title><![CDATA[DockerDesktopを止めてColimaでコンテナを動かす]]></title><description><![CDATA[
 CLIでどうにかしたい
PCを起動してからコンテナを動かす時に
docker compose up -d
とか
ddev start
とか叩くと
Is the docker daemon running?
Could not connect to a Docker provider. Please start or install a Docker provider.
あーはいはい、DockerDesktop起動してなかった。
Launchpadを開いて、Dockerをクリックして起動するのを待って...
というのがめんどくさくてもう止めたかった。
なにか...なにか無いか...
s...]]></description><link>https://zenn.dev/shin_dev/articles/618185f4444ca0</link><guid isPermaLink="true">https://zenn.dev/shin_dev/articles/618185f4444ca0</guid><pubDate>Tue, 12 Nov 2024 05:51:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GTg14AtF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DockerDesktop%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2581%25A6Colima%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmOTA3MWYyNmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shin_dev</dc:creator></item><item><title><![CDATA[Next.jsの環境をDockerで構築する]]></title><description><![CDATA[
 Dockerとは
【イメージ】
自分のパソコンとは別にパソコンを新しく作ることができる感じ



 Dockerで使用するファイルの名前


Dockerfile
→ このファイル自体がパソコン本体みたいな感じ
※この記事ではDockerのパソコンみたいな言い方をします

docker-compose.yml
→ パソコンの管理者みたいな感じ
※この記事ではパソコン管理者みたいな言い方をします

Dockerfileの構造
コマンド ... 
コマンド ...
コマンド ...
コマンド ...
docker-compose.ymlの構造
services:
  pc名: #（Doc...]]></description><link>https://zenn.dev/kate0418/articles/4910b4c94acbba</link><guid isPermaLink="true">https://zenn.dev/kate0418/articles/4910b4c94acbba</guid><pubDate>Mon, 11 Nov 2024 11:32:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SJxKi673--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%2583%25E3%2581%25A8%25EF%25BE%2583%25EF%25BE%259E%25EF%25BD%25BD%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OWNhMjkxZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けぃとﾃﾞｽ。</dc:creator></item><item><title><![CDATA[【2024年版】Dockerfileのベストプラクティスを整理しながらNode.jsで実践する]]></title><description><![CDATA[
 はじめに
最初はなんとなくで書いていた Dockerfile なのですが、社内用にベストプラクティスを整理するタイミングがあったので、実際に Node.js + TypeScript でアプリケーションを作成しながらまとめることにしました。
この記事でフォーカスするのは、 Dockerfile のベストプラクティスそのものの詳細ではなく、それらを整理と「結局どう実装すんねん？」ってところです。
主に以下の内容を参考にしています。



!
ちなみに、少し内容が古いのでおすすめしないですが、ドキュメントに関して日本語訳版もありました。

Dockerfile を書くベストプラクティス ...]]></description><link>https://zenn.dev/mutex_inc/articles/nodejs-ts-docker-best-practice</link><guid isPermaLink="true">https://zenn.dev/mutex_inc/articles/nodejs-ts-docker-best-practice</guid><pubDate>Mon, 11 Nov 2024 02:50:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IGV8YbzA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E7%2589%2588%25E3%2580%2591Dockerfile%25E3%2581%25AE%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589Node.js%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:chrg%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2NmRjMzU1MTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:mutex%2520Official%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMjMwMTBiMzkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chrg</dc:creator></item><item><title><![CDATA[Envoy入門（その２）外部認証]]></title><description><![CDATA[
 はじめに
マイクロサービスやWeb API界隈では、サービス間のネットワークの制御をライブラリではなく、プロキシのコンテナをサイドカーとして使うのだとか。そのデファクトスタンダード的な立ち位置なのが Envoy さん。
ですが、日本語の新しい情報が少ないので、だったら本家のサイトを見ながら、自力でなんとかするしかないね。という記事です。
第一回目は、Transport layer security (TLS) でした。
https://zenn.dev/robon/articles/fc7feab5e77d59
第二回目は、External authorization (ext_au...]]></description><link>https://zenn.dev/robon/articles/2896faa9bbe72d</link><guid isPermaLink="true">https://zenn.dev/robon/articles/2896faa9bbe72d</guid><pubDate>Sun, 10 Nov 2024 22:45:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vE3Hq0Fr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Envoy%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2589%25E5%25A4%2596%25E9%2583%25A8%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>荒木 岳夫</dc:creator></item><item><title><![CDATA[オリジナルの Dev Container のコンテナイメージを作成してみる]]></title><description><![CDATA[みなさん、Dev Container を活用していますか？
ローカルの環境を汚さずに、開発環境を構築して開発を行うことができる Dev Container はとても便利です。
また、コードベースで開発環境を共有することができるため、チーム開発においても非常に有用です。
この記事では、オリジナルの Dev Container のコンテナイメージの作成を通して、Dev Container の基本的な使い方から、カスタマイズ、GitHub Container Registry との連携まで解説します。

 Dev Container について
Dev Container とはコンテナを開発環境...]]></description><link>https://zenn.dev/horatjp/articles/dev-container-image</link><guid isPermaLink="true">https://zenn.dev/horatjp/articles/dev-container-image</guid><pubDate>Sun, 10 Nov 2024 13:50:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zImnDNtZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%25AA%25E3%2582%25B8%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25AE%2520Dev%2520Container%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:horatjp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0ZDRhNWNmOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>horatjp</dc:creator></item><item><title><![CDATA[LaravelとInertiaJS使う際の開発の流れメモ（自分用）]]></title><description><![CDATA[
 Laravel開発の流れ
自分用メモ
前提条件

Laravel11
InertiaJS
PHP8系
Docker Desktop
sail
MariaDB


 0. 準備

 プロジェクトの作成

sailを使って開発を進める


Terminal
curl -s "https://laravel.build/Project_Name?php=82&amp;with=mariadb" | zsh


 コンテナを起動

Docker Desktopがインストールされていること前提。必要なコンテナが全て立ち上がる。


Terminal
./vendor/bin/sail up -...]]></description><link>https://zenn.dev/shohei_1010/articles/edf5a1ec2d8497</link><guid isPermaLink="true">https://zenn.dev/shohei_1010/articles/edf5a1ec2d8497</guid><pubDate>Sun, 10 Nov 2024 13:15:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V61StfDg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%25E3%2581%25A8InertiaJS%25E4%25BD%25BF%25E3%2581%2586%25E9%259A%259B%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%2588%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shouhei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmYTI5YTZhZjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shouhei</dc:creator></item><item><title><![CDATA[DockerイメージをECRにpushする手順メモ]]></title><description><![CDATA[
 参考にしたページ
AWS公式
株式会社一創様

 手順

 1,ECRリポジトリ作成
以下のaws-cliでリポジトリ作成できます。(デフォルトはプライベートリポジトリ)
aws ecr create-repository --repository-name &lt;リポジトリ名&gt; --region &lt;リージョン名&gt;

 2,ECRリポジトリのURI取得
以下のaws-cliで取得できます。マネコンからでもリポジトリのページから取得できます。
aws ecr describe-repositories --repository-names &lt;リポジトリ名&gt...]]></description><link>https://zenn.dev/shobute/articles/59b37f367ccfc9</link><guid isPermaLink="true">https://zenn.dev/shobute/articles/59b37f367ccfc9</guid><pubDate>Sun, 10 Nov 2024 09:14:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mXwj8mve--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ECR%25E3%2581%25ABpush%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258B%259D%25E8%25B2%25A0%25E6%2589%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzI3YTVkNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>勝負手</dc:creator></item><item><title><![CDATA[[備忘録]EC2でサクッとDocker Composeを試したい時]]></title><description><![CDATA[
 概要
awsのEC2上でdocker composeをインストールする方法について記載します。
とりあえずインストールしたので、セットアップが技術的に正しいかどうかはわかりませんが、残しておきます。

 発生した問題
EC2インスタンス上のyumでdocker をインストールしたがcomposeコマンドが使えなかった。(docker compose up)
sudo yum install -y docker
以下の操作は失敗
sudo docker compose up

 原因
Docker ComposeはDockere Engineとは別のモノで、あくまで複数コンテナのアプリ...]]></description><link>https://zenn.dev/ryo_nakaya/articles/51289870d3cf12</link><guid isPermaLink="true">https://zenn.dev/ryo_nakaya/articles/51289870d3cf12</guid><pubDate>Sun, 10 Nov 2024 04:07:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oDwetckD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255DEC2%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8Docker%2520Compose%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakaryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4MDVhNjgyY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakaryo</dc:creator></item><item><title><![CDATA[解決法：wslからvscodeを起動したらReopen in Container出来ない場合]]></title><description><![CDATA[
 エラー概要
wslから起動したvscodeの左下の青いボタン（&gt;&lt;WSL:）をクリックして

Reopen in Containerを実行した際、

が表示されReopenできない。
エラーメッセージ（実際は赤字で改行なし）
[218 ms] Docker returned an error code ENOENT,
message: Exectuable 'docker' not found on PATH
'C:\Python312\Scripts\;C:\Python312\;C:\Program Files\Oculus\Support\oculus-runtim...]]></description><link>https://zenn.dev/matsuzakiharuka/articles/cc7cfac27f8bc2</link><guid isPermaLink="true">https://zenn.dev/matsuzakiharuka/articles/cc7cfac27f8bc2</guid><pubDate>Sat, 09 Nov 2024 13:41:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ze090zc9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%25EF%25BC%259Awsl%25E3%2581%258B%25E3%2582%2589vscode%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589Reopen%2520in%2520Container%25E5%2587%25BA%25E6%259D%25A5%25E3%2581%25AA%25E3%2581%2584%25E5%25A0%25B4%25E5%2590%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%25BE%25EF%25A8%2591%2520%25E9%2581%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjZGNhNTk1MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>松﨑 遥</dc:creator></item><item><title><![CDATA[Dockerでインストールしたnpmパッケージが動かない時]]></title><description><![CDATA[Dockerを使ってReact（Vite）とPostgreSQLの開発環境を構築しているときに、少しハマったことがありました。Docker内で依存パッケージをインストールしたにもかかわらず、ローカル環境で「モジュールが見つからない」というエラーが出るという現象です。原因と解決方法について、まとめてみます。

 開発環境


MacBook Air (M2, 2022)（Apple Silicon）

OS: macOS Sonoma 14.5


 構成
project-root/
├── frontend/
├── backend/
├── docker/
│   ├── fronte...]]></description><link>https://zenn.dev/tamon_kondo/articles/d1f1c9a96627bb</link><guid isPermaLink="true">https://zenn.dev/tamon_kondo/articles/d1f1c9a96627bb</guid><pubDate>Sat, 09 Nov 2024 09:07:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---sxrDXsy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259Fnpm%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t.k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1WWoxNXZlTDl0VE9pd0p0VHVZSXUyNENJMkJuOG1MYkhNcjFvN2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.k</dc:creator></item><item><title><![CDATA[M2 MacBookでのDocker環境構築：ReactとPostgreSQLを使った環境で発生したトラブルとその解決法]]></title><description><![CDATA[
 環境情報


デバイス：MacBook Air (M2, 2022)

メモリ：8 GB

OS：macOS Sonoma 14.5

プロジェクト概要：Dockerを使用してReact（Vite）とPostgreSQLの開発環境を構築


 フォルダ構成
project-root/
├── frontend/
├── backend/
├── docker/
│   ├── frontend/
│   ├── backend/
│   └── db/
└── docker-compose.yml

 背景
M2チップを搭載したMacでは、ARMアーキテクチャによるプラットフォーム依...]]></description><link>https://zenn.dev/tamon_kondo/articles/ee485ac615fb7c</link><guid isPermaLink="true">https://zenn.dev/tamon_kondo/articles/ee485ac615fb7c</guid><pubDate>Sat, 09 Nov 2024 08:19:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iTfKw4OO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M2%2520MacBook%25E3%2581%25A7%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%259AReact%25E3%2581%25A8PostgreSQL%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t.k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1WWoxNXZlTDl0VE9pd0p0VHVZSXUyNENJMkJuOG1MYkhNcjFvN2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t.k</dc:creator></item></channel></rss>