<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 14 Mar 2025 01:18:33 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[エナーバンクのプロダクトを支える基本開発思想とコア技術]]></title><description><![CDATA[
 はじめに
エナーバンクの共同創業者で、取締役CTOの関根です！
弊社は「エネルギー調達をもっとシンプルに」をビジョンに、エネルギー・環境・デジタルテクノロジーの専門力で、脱炭素実現やエネルギー調達に取り組む企業や官公庁・自治体を支援しています。
これまで創業期からの「エネオク」に始まり、「ソラレコ」や「エネパーク」といった複数のプロダクトをリリースしてきました。
本記事では、エナーバンクのプロダクトを支える基本開発思想とコア技術を紹介します。


 基本開発思想：Full-Stack TypeScriptとサーバーレスアーキテクチャー
エナーバンクのプロダクト開発における基本思想とな...]]></description><link>https://zenn.dev/enerbank/articles/b5780743ed3123</link><guid isPermaLink="true">https://zenn.dev/enerbank/articles/b5780743ed3123</guid><pubDate>Fri, 14 Mar 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--65Bk-FeR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E5%259F%25BA%25E6%259C%25AC%25E9%2596%258B%25E7%2599%25BA%25E6%2580%259D%25E6%2583%25B3%25E3%2581%25A8%25E3%2582%25B3%25E3%2582%25A2%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%2596%25A2%25E6%25A0%25B9%25E5%25A4%25A7%25E8%25BC%2594%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3Njk1M2IwMTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25B3%25E3%2582%25AF%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwOTI4ZmY3YjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>関根大輔</dc:creator></item><item><title><![CDATA[Drizzle ORMでテストデータの生成を簡単にする]]></title><description><![CDATA[
 はじめに
弊社では、テスト実行時にデータベースをモックせず、Testcontainers を用いて実際のデータベースを使用したテストを行っています。
このようなテストを行うためには、事前にテストデータを準備する必要があります。
しかし、テストデータの作成は煩雑になりがちで、可読性の低下やメンテナンスの手間が増える原因となります。
そこで、テストデータの生成をより簡単にするために、Drizzle ORMを活用したテストデータ生成パッケージ@praha/drizzle-factory を開発しました。
本記事では、@praha/drizzle-factoryの基本的な使い方について紹介し...]]></description><link>https://zenn.dev/praha/articles/7c202f5906e065</link><guid isPermaLink="true">https://zenn.dev/praha/articles/7c202f5906e065</guid><pubDate>Thu, 13 Mar 2025 23:51:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4wFuoujX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drizzle%2520ORM%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Karibash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiZDIyMmFjMTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PrAha%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Karibash</dc:creator></item><item><title><![CDATA[Cline任せでコード書いてたらAPIクレジットが爆散したのでClaude Desktop + MCPをいい感じにしてサブスクだけで無双する]]></title><description><![CDATA[https://x.com/ukokq/status/1897214924088336695
タイトルは半分釣りです。課金額が気づいたらえらいことになってたのは本当です。
というわけで、VSCodeで直接使うのではなく、VSCodeに加えて定額サブスクのClaude ProとそのDesktopアプリからコード生成や編集をしてもらうことで、APIをなるべく使わずかつ楽に開発を助けてもらえないか試してみることにします。
!
無料版Claudeでもできなくはないですが、コード生成やってるとコンテキストが一瞬で制限に達して使い物にならなくなります。


 MCPサーバーが使えるのは現状Deskt...]]></description><link>https://zenn.dev/ukkz/articles/c8726063edd2cd</link><guid isPermaLink="true">https://zenn.dev/ukkz/articles/c8726063edd2cd</guid><pubDate>Thu, 13 Mar 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uqlg_LKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cline%25E4%25BB%25BB%25E3%2581%259B%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%259F%25E3%2582%2589API%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25B8%25E3%2583%2583%25E3%2583%2588%25E3%2581%258C%25E7%2588%2586%25E6%2595%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7Claude%2520Desktop%2520%252B%2520MCP%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNjRiNmZkMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うこ</dc:creator></item><item><title><![CDATA[コードを書くことと、システムを作ることの違い: プログラミング初級者から中級者へ]]></title><description><![CDATA[プログラミング初心者と中級者の違いを掘り下げ、単にコードを書くスキルから、実務で通用するシステム設計・開発能力への成長過程を解説する実践的ガイド。(執筆中)]]></description><link>https://zenn.dev/udonnamerou/books/31e0ba1efe0f16</link><guid isPermaLink="true">https://zenn.dev/udonnamerou/books/31e0ba1efe0f16</guid><pubDate>Thu, 13 Mar 2025 15:47:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K8Oms3Bf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81MWMxODg0NWY5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>うどんなめろう</dc:creator></item><item><title><![CDATA[# React × Tailwind × Zustand でエンジニアポートフォリオを作成してみた]]></title><description><![CDATA[
 はじめに
エンジニアとして、自分のスキルや実績をアピールできるポートフォリオサイトを作成しました。今回の開発では、React × Tailwind CSS × Zustand を活用し、レスポンシブ対応・アニメーション付きのサイトを構築しました。本記事では、実際の開発プロセスや技術選定のポイント、工夫した点について解説します。


 技術スタック
今回のポートフォリオサイトの主な技術スタックは以下の通りです。



技術
用途




React (Vite)
フロントエンドの構築


Tailwind CSS
スタイリング


Zustand
グローバル状態管理


Framer ...]]></description><link>https://zenn.dev/taisukenezu/articles/9e67c8836fd82a</link><guid isPermaLink="true">https://zenn.dev/taisukenezu/articles/9e67c8836fd82a</guid><pubDate>Thu, 13 Mar 2025 13:29:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c8mANIvu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523%2520React%2520%25C3%2597%2520Tailwind%2520%25C3%2597%2520Zustand%2520%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVpMRkpscmJjOGI4aVpVQ3JOUE1BemsyLXM5M2E0Y2YyakpiRjFMLW9KWm5fYjF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taisuke</dc:creator></item><item><title><![CDATA[AsyncDisposableStack でリソース確保処理を書く]]></title><description><![CDATA[
 やりたいこと
動機: Puppteer はプロセス外部のリソースを触るので、正しく終了させないとプロセス終了後にChromeが起動しっぱなしになってしまう。
TS 5.2 から使える await using と AsyncDisposableStack でリソース開放を逐次予約する。

 tl;dr

本当は await using で個別にリソースを確保/開放したいが、まだ諸々のライブラリが対応してない
自分でラップするのが面倒
なので、 AsyncDisposableStack.prototype.defer に逐次放り込むのが楽


 準備
import "core-js/pr...]]></description><link>https://zenn.dev/mizchi/articles/ts-using-resource-management</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ts-using-resource-management</guid><pubDate>Thu, 13 Mar 2025 10:44:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lTZCIgAn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AsyncDisposableStack%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E7%25A2%25BA%25E4%25BF%259D%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[ゼロランタイムのCSS-in-JSを作った話]]></title><description><![CDATA[
 モチベーション
使いたいのがなかった上に*.module.cssに煩わしさを感じていた。

 筆者のこれまでのCSS経験
Tailwind CSS ⇨ styled-jsx ⇨ emotioin ⇨ Chakra UI ⇨ Metarial UI ⇨ CSS Modules

 興味のあったCSS in JS
vanilla-extract・Stylex・Linaria

 作成するにあたっての条件
・ゼロランタイム
・機能盛り盛りよりもミニミニな実装にしたい
・設定を煩わしくしたくないのでバンドラー専用プラグインを作りたくない
・補完が効く・リンターが使える
・React19 &a...]]></description><link>https://zenn.dev/refirst11/articles/81702cc1a3a475</link><guid isPermaLink="true">https://zenn.dev/refirst11/articles/81702cc1a3a475</guid><pubDate>Thu, 13 Mar 2025 10:37:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zx9zGSxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BC%25E3%2583%25AD%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AECSS-in-JS%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Refirst%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MjM3MzUwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Refirst</dc:creator></item><item><title><![CDATA[モジュラモノリスにおける Prisma を利用した DB アクセスの秩序を保つ]]></title><description><![CDATA[Ubie で副業として Backend For Frontend (BFF) サーバーの開発を担当している nissy-dev です。
今回は、モジュラモノリスアーキテクチャにおける Prisma を利用した DB アクセスの課題と、その課題に対処するために作成した lint ルールについて詳しく解説します。

 NestJS と Prisma で作るモジュラモノリス
ユビーでは、BFF の GraphQL サーバーを実装する際に、NestJS を利用したモジュラモノリスを採用しています。この BFF サーバーは、マイクロサービスを呼び出すだけではなく、Prisma を使用したデータベー...]]></description><link>https://zenn.dev/ubie_dev/articles/nestjs-prisma-db-access-management</link><guid isPermaLink="true">https://zenn.dev/ubie_dev/articles/nestjs-prisma-db-access-management</guid><pubDate>Thu, 13 Mar 2025 10:22:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ipMVdbyt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AA%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%2520Prisma%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%2520DB%2520%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AE%25E7%25A7%25A9%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nissy-dev%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOWMzMWRhODMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Ubie%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjMzg3ZjYwNjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nissy-dev</dc:creator></item><item><title><![CDATA[人生初のCLI開発（algolia-uploader）]]></title><description><![CDATA[
 初めに
つい最近まとまった時間をとれたので、以前からちょっとづつ開発していたCLIを公開しました。

algolia-uploader
algolia-uploader - npm

ローカル環境で用意したAlgolia用のデータをコマンドひとつでリモートに反映させるという機能を持ったライブラリです。Algoliaについての説明はこの記事の対象外なので省略します。
なお、このライブラリはatomic-algoliaという、とても素晴らしいライブラリを（よりモダンな構成で）作り直したものです。
「同じライブラリがすでにあるならいらないのでは？」と思われるかもしれませんが、残念ながら長い...]]></description><link>https://zenn.dev/htnabe/articles/6ce99289812aa4</link><guid isPermaLink="true">https://zenn.dev/htnabe/articles/6ce99289812aa4</guid><pubDate>Wed, 12 Mar 2025 20:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C32hjvqI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BA%25BA%25E7%2594%259F%25E5%2588%259D%25E3%2581%25AECLI%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2588algolia-uploader%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:htnabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyOWNmYzY0ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>htnabe</dc:creator></item><item><title><![CDATA[Stripe Checkout の紹介と導入【Next.js】]]></title><description><![CDATA[
 はじめに
先日、Next.js の勉強会で、Srripe による決済の実装を取り上げました 🛒
ウェブアプリに、セキュアな決済システムを一から構築するのは、
非常に大変で時間がかかります。
今回は、Strpe 初心者の方向けに、
「Stripe を Next.js で使う方法」についてまとめました！
ざっと雰囲気を掴む参考になれば、嬉しいです 🙌

 Stripe とは？
Stripe は、オンライン決済処理で、最も有名なサービスの 1 つです。
https://stripe.com/jp
開発者向けのサービスであり、
クレジットカード決済をはじめ、様々な決済方法を簡単に実装できます...]]></description><link>https://zenn.dev/b13o/articles/about-stripe</link><guid isPermaLink="true">https://zenn.dev/b13o/articles/about-stripe</guid><pubDate>Wed, 12 Mar 2025 14:16:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hA4eo1Ni--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stripe%2520Checkout%2520%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2580%2590Next.js%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazzyfrog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYWE3NjM3NGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:b13o%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMzRmZDk1NTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[npmについての最低限知識]]></title><description><![CDATA[
 npmとは
Node Package Managerというパッケージマネージャー

 パッケージマネージャーとは？
ソフトウェア開発において必要な「部品」（ライブラリやフレームワークなど）を探して、インストールし、更新し、管理するためのツール。
パッケージマネージャーがなければ、必要なコードを自分で探してダウンロードし、正しい場所に配置し、バージョンを確認し、更新を手動で行う必要がある。
パッケージマネージャーはこれらの作業を自動化して、開発者がコードの作成に集中できるようにしてくれる。

 主な役割

 パッケージのインストール:
必要なコードをインターネットから自動的に探してダウ...]]></description><link>https://zenn.dev/gdf_takahashi/articles/d99de7ee4ed0dc</link><guid isPermaLink="true">https://zenn.dev/gdf_takahashi/articles/d99de7ee4ed0dc</guid><pubDate>Wed, 12 Mar 2025 05:18:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iD2J3kvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:npm%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E6%25A9%258B%2520%25E9%2581%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1FoMHB4MkdnWXBCSXJKS2VVT0lwb0VPTS03N2stSUpWaGk2TWJncTYzbE1TbUt0bz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高橋 遼</dc:creator></item><item><title><![CDATA[10x高速なTypeScript ~TSがTSで実装される時代の終わりの始まり?~]]></title><description><![CDATA[昨夜TypeScriptの開発チームから"A 10x Faster TypeScript"という記事が公開されました。
ざっくりいうと、TypeScriptの（コンパイラ、型システムの）実装をTypeScriptからgolangに移植したら10倍早くなるという話です。
現時点でどれくらい実用的なレベルに達しているのか気になりますが、これまでのTypeScriptによるTypeScriptの実装のコードベースやVSCodeのコードベースを正常にロードできるようです。
VSCodeのコードベース(1,505,000行)のロード時間が77.8秒から7.5秒と、10.4倍に高速化されたということ...]]></description><link>https://zenn.dev/terass_dev/articles/d9335be2a69c85</link><guid isPermaLink="true">https://zenn.dev/terass_dev/articles/d9335be2a69c85</guid><pubDate>Wed, 12 Mar 2025 02:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--23C74io8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:10x%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AATypeScript%2520%7ETS%25E3%2581%258CTS%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E7%25B5%2582%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AE%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258A%253F%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuji%2520Koike%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEbVBmbmlNbWVFZDVmZzBldXN6Z1hhYnVzX0Y1WnprNkFJVTRCPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shuji Koike</dc:creator></item><item><title><![CDATA[私のよく使うソフトウェアアーキテクチャの雛型]]></title><description><![CDATA[
 サンプルプロジェクト

https://github.com/m10maeda/itddd


 構成
イベント駆動と CQRS を意識した、レイヤードアーキテクチャをベースとしたヘキサゴナルアーキテクチャになります。


 各層について
レイヤードアーキテクチャをベースに、以下の4層に分けています。



プレゼンテーション層: ソフトウェアの入出力を担当

アプリケーション層: ソフトウェアのユースケースを担当

ドメイン層: ドメイン知識を元にしたビジネスのルールや制約、プロセスを担当

インフラストラクチャー層: 技術的関心ごとの全般を担当


 ディレクトリ構成
domai...]]></description><link>https://zenn.dev/m10maeda/articles/my-favorite-architecture-blueprint</link><guid isPermaLink="true">https://zenn.dev/m10maeda/articles/my-favorite-architecture-blueprint</guid><pubDate>Wed, 12 Mar 2025 02:34:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M99qutaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%2581%25E3%2581%25AE%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25AE%25E9%259B%259B%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2589%258D%25E7%2594%25B0%25E3%2581%25BF%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlMWY3YjBkZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>前田みお</dc:creator></item><item><title><![CDATA[ShadcnのDropdown MenuとDialogを組み合わせる]]></title><description><![CDATA[
 実装できるもの


 実装コード
"use client";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  Dropdown...]]></description><link>https://zenn.dev/r2727/articles/8ff0f5cfa39e92</link><guid isPermaLink="true">https://zenn.dev/r2727/articles/8ff0f5cfa39e92</guid><pubDate>Wed, 12 Mar 2025 02:09:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M7GEEyjA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Shadcn%25E3%2581%25AEDropdown%2520Menu%25E3%2581%25A8Dialog%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:r2727%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MDNiYmFmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>r2727</dc:creator></item><item><title><![CDATA[管理画面リニューアルで、脆弱性対策&高速な開発環境を実現]]></title><description><![CDATA[こんにちは、GENIEE CHAT機能開発チームリーダーの鎌原です。
GENIEE CHATでは現在、管理画面のリニューアルプロジェクトが進行中です。


デザインそのものもモダンに変わっていますが、それ以上にライブラリやディレクトリ構成などが大きくブラッシュアップされました。
本記事では、この移行のプロジェクトの概要と気をつけたポイントや学んだこと・反省点等をご紹介させていただきたいと思います。

 移行プロジェクトの概要
移行前の管理画面には主に2つの課題がありました。

 1. 脆弱性の更新対象のパッケージが多く、手間がかかる
弊社ではプロダクトの脆弱性を定期的に確認して、都度対応...]]></description><link>https://zenn.dev/geniee/articles/a35d7665c58d5a</link><guid isPermaLink="true">https://zenn.dev/geniee/articles/a35d7665c58d5a</guid><pubDate>Wed, 12 Mar 2025 01:48:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qkFl1uC2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2583%25AA%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25A7%25E3%2580%2581%25E8%2584%2586%25E5%25BC%25B1%25E6%2580%25A7%25E5%25AF%25BE%25E7%25AD%2596%2526%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AA%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kkaznor1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMmViZTNjMjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GENIEE%2520TechBlog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0NDMwOThhN2YuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkaznor1</dc:creator></item><item><title><![CDATA[TypeScriptを使って学ぶSOLID原則2 ”オープン/クローズドの原則（Open/Closed  Principle）”]]></title><description><![CDATA[
 モチベーション
ソフトウェアを設計する際に重要な5つのガイドラインであるSOLID原則について学んでいます。
そのアウトプットの一環で記事を執筆しています。
前回は単一責任の原則（Single Responsibility Principle）についてアウトプットを行いました。
https://zenn.dev/ayut0/articles/dfd0df8c0be114
今回はオープン/クローズドの原則（Open/Closed Principle） についてのアウトプットを行います。

 オープン/クローズドの原則（Open/Closed Principle）とは
オープン/クローズ...]]></description><link>https://zenn.dev/ayut0/articles/56b658ab764abf</link><guid isPermaLink="true">https://zenn.dev/ayut0/articles/56b658ab764abf</guid><pubDate>Tue, 11 Mar 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--97tV-xgP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6SOLID%25E5%258E%259F%25E5%2589%25872%2520%25E2%2580%259D%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%252F%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25BA%25E3%2583%2589%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25EF%25BC%2588Open%252FClosed%2520%2520Prin...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:A3yut0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h3d1FoeGFydTFVMjN1MFJ0MnBmUVBjWUZ2dkNTa0RBYmlxWEo4U1NBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>A3yut0</dc:creator></item><item><title><![CDATA[Astroで作るブログの仕組み]]></title><description><![CDATA[
 Astroでつくるブログの仕組み解説

 はじめに
こんにちは、坂爪です。この記事ではAstroを使ったブログシステムの基本的な仕組みについて解説します。Astroの特徴からディレクトリ構成、そして実際の実装方法まで、順を追って説明していきます。

 前提条件
この記事を理解するためには、以下の知識が必要です：

基礎的なWEBの仕組みやJavaScriptの理解


 Astroとは

Astroは、ブログやマーケティング、eコマースなど、コンテンツ駆動のウェブサイトを作成するためのウェブフレームワークです。Astroは、新しいフロントエンドアーキテクチャを開拓し、他のフレームワー...]]></description><link>https://zenn.dev/dume5579/articles/6ee7ee1e6b1231</link><guid isPermaLink="true">https://zenn.dev/dume5579/articles/6ee7ee1e6b1231</guid><pubDate>Tue, 11 Mar 2025 16:02:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pb2ioK5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259D%2582%25E7%2588%25AA%2520%25E8%25AA%25A0%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0Y2U4MmU3OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>坂爪 誠人</dc:creator></item><item><title><![CDATA[React×Vite×Tailwind CSSの環境構築]]></title><description><![CDATA[
 はじめに
React×Viteのフロントエンド開発でよく使うTailwind CSSの環境構築について忘れがちなのでまとめておきます(2025/3/11時点)。TypeScriptでもJavaScriptでも手順は同じです。
2025年1月にTailwind CSSの新バージョンv4が公開され、それまでとインストール方法が変更されました。

 Tailwind CSSとは？
Tailwind CSSは、HTMLのクラス名に直接CSSを指定することでスタイルを適用するCSSのフレームワークです。
https://tailwindcss.com/
HTMLとCSSのファイルを行き来する必...]]></description><link>https://zenn.dev/ashunar0/articles/4279a7d38d882b</link><guid isPermaLink="true">https://zenn.dev/ashunar0/articles/4279a7d38d882b</guid><pubDate>Tue, 11 Mar 2025 13:38:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EmJmT3tS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25C3%2597Vite%25C3%2597Tailwind%2520CSS%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25AA%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVJSTJuOHVoRXhKNjdHbGllMWo4M2VyVUJDeDJPS09TVnBtaHhjdmFYVjA4T1Z1c209czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あすなろ</dc:creator></item><item><title><![CDATA[CDKでNatGatewayのIPアドレスをOutputsに出力する]]></title><description><![CDATA[
 概要
CDKで作成した別スタックで定義されたNatGatewayのIPアドレスを取得したくなった。
別スタックから取得できるように
ALBのリスナーでNatGatewayを通る通信だけ許可したかったため。
#　やり方
// NatGatwayのPublicIpを取得する関数
const getNatgwIp = (vpc: IVpc): string[] =&gt; {
    // vpcにあるnat gatwayを全て取得する
    const natgws = vpc.node.findAll().filter(
        (child) =&gt; child ins...]]></description><link>https://zenn.dev/kiitosu/articles/4bba99745d6781</link><guid isPermaLink="true">https://zenn.dev/kiitosu/articles/4bba99745d6781</guid><pubDate>Tue, 11 Mar 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3eN5uWI---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDK%25E3%2581%25A7NatGateway%25E3%2581%25AEIP%25E3%2582%25A2%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%2592Outputs%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiitosu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJBNDNaZzRhRzk5b0NEMm5aMFY1RDJISlVUVGtySVB4UWhtaXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiitosu</dc:creator></item><item><title><![CDATA[Honoでcurlコマンドを使うときのエラー]]></title><description><![CDATA[
 発生した経緯
HonoでAPI開発中、作成したリクエストをVScodeのターミナル上でリクエストを送ったところ、エラーが発生した。
API（デフォルトで記載されているもの）
app.get("/", (c) =&gt; {
  return c.text("Hello Hono!");
});
コマンド
curl -X GET http://localhost:3000
エラー
Invoke-WebRequest : パラメーター名 'X' に一致するパラメーターが見つかりません。

 考えられる原因
curl コマンドが Invoke-WebRequest として解釈されるのは、W...]]></description><link>https://zenn.dev/ashunar0/articles/f0f4f406d49952</link><guid isPermaLink="true">https://zenn.dev/ashunar0/articles/f0f4f406d49952</guid><pubDate>Tue, 11 Mar 2025 08:18:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--44-SpoAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25A7curl%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25AA%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVJSTJuOHVoRXhKNjdHbGllMWo4M2VyVUJDeDJPS09TVnBtaHhjdmFYVjA4T1Z1c209czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あすなろ</dc:creator></item></channel></rss>