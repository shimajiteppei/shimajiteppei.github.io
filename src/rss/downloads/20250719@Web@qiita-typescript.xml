<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-07-19T16:17:33+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055799</id>
    <published>2025-07-19T16:17:33+09:00</published>
    <updated>2025-07-19T16:17:33+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/oharu121/items/e7d7c971e8cabc3b1df5"/>
    <url>https://qiita.com/oharu121/items/e7d7c971e8cabc3b1df5</url>
    <title>TypeScriptの Record&lt;&gt; とは？使い方と実用例をやさしく解説！</title>
    <content type="text">はじめに
TypeScriptを使っていて、こんなコードを見かけたことはありませんか？
const userStatus: Record = {
  alice: true,
  bob: false,
}

一見すると、普通のオブジェク...</content>
    <author>
      <name>oharu121</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055767</id>
    <published>2025-07-19T15:01:44+09:00</published>
    <updated>2025-07-19T15:01:44+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Hashimoto-Noriaki/items/df009f752418a062494d"/>
    <url>https://qiita.com/Hashimoto-Noriaki/items/df009f752418a062494d</url>
    <title>React、Next.jsの運用はsharedとfeaturesディレクトリでやろう(AtomicDesignと比較して)</title>
    <content type="text">Sharedとfeaturesディレクトリとは
sharedはプロジェクトの全体の共通コンポーネントなどを管理するディレクトリです。
featuresは専属のコンポーネントを入れるためのディレクトリです。

Atomic Designだけでの運用はきつい💦
Atomic ...</content>
    <author>
      <name>Hashimoto-Noriaki</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055749</id>
    <published>2025-07-19T14:29:37+09:00</published>
    <updated>2025-07-19T14:29:37+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Meerkat39/items/ac071fe6e4894ec4d863"/>
    <url>https://qiita.com/Meerkat39/items/ac071fe6e4894ec4d863</url>
    <title>TypeScript初心者がカレンダーアプリ開発で得た型定義の学び</title>
    <content type="text">はじめに
最近、TypeScriptの学習を始めました。
基本的な文法を一通りインプットしたあと、アウトプットとしてカレンダーアプリを作成中です。
この記事では、その開発の中で得た学びを備忘録としてまとめています。

useStateの型指定と型推論
TypeScript...</content>
    <author>
      <name>Meerkat39</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055742</id>
    <published>2025-07-19T14:09:56+09:00</published>
    <updated>2025-07-19T14:09:56+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/pescoebill/items/340333f7a2dbf28e99fa"/>
    <url>https://qiita.com/pescoebill/items/340333f7a2dbf28e99fa</url>
    <title>大規模 TypeScript プロジェクトでのフォルダ構成や責務の分け方、どう設計していますか？</title>
    <content type="text">TypeScript を使った中〜大規模のフロントエンドアプリを設計・整理するとき、フォルダ構成や責務の分け方について色々なスタイルがあると思います。例えば、以下のような観点で悩むケースが多い印象です。
ドメイン駆動 vs 機能別 vs レイヤー別（components, ...</content>
    <author>
      <name>pescoebill</name>
    </author>
  </entry>
</feed>
