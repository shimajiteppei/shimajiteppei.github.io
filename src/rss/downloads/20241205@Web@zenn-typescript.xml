<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 05 Dec 2024 09:33:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[tanstack-table と mui でGroupingされたExpandableなテーブルUIを実装する]]></title><description><![CDATA[
 背景
テーブルのデータをグルーピングしてExpandableなUIを実現したいが、実装コストが高くついてしまうケースがままあります。
そこで現在オープンソースで提供されているライブラリをできる限り活用して、この複雑なユーザーインターフェースをざっくり実装するためのソリューションを残します。

 解決したい課題

行をグルーピングして、閉じたり開いたりするUIを実現したい
実装コストを下げつつ、経済的なコストも抑えたい


 各種Version

react: 18.3.1

tanstack/react-table: 8.20.5

mui/material: 6.1.8


それぞ...]]></description><link>https://zenn.dev/sukemaru_camp/articles/fcf494f257d852</link><guid isPermaLink="true">https://zenn.dev/sukemaru_camp/articles/fcf494f257d852</guid><pubDate>Thu, 05 Dec 2024 09:14:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5cwVz0Su--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tanstack-table%2520%25E3%2581%25A8%2520mui%2520%25E3%2581%25A7Grouping%25E3%2581%2595%25E3%2582%258C%25E3%2581%259FExpandable%25E3%2581%25AA%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25ABUI%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sukemaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WjNrN254dmZkdjFtOWVNaUFXNHRzZG5IaUpwUzB1ODVPU3Fkc2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sukemaru</dc:creator></item><item><title><![CDATA[React で地図から都道府県を選択できるようにする]]></title><description><![CDATA[
 やりたいこと
Next.jsアプリケーションで、（簡略化された）日本地図を表示して、利用者に都道府県をクリックで選択させたい。

 方針

日本地図SVG画像を表示する
使用するSVG画像は各都道府県ごとにグループ化されている
クリックされた（SVG内の）グループを取得して選択都道府県を得る
選択された都道府県を state で管理する
選択された都道府県の領域の色を変える
Next.js（15.x） でやりたい


 Next.js プロジェクトを作成する
your-path % npx create-next-app@latest
✔ What is your project n...]]></description><link>https://zenn.dev/taichirou_etoh/articles/react-prefecture-selector</link><guid isPermaLink="true">https://zenn.dev/taichirou_etoh/articles/react-prefecture-selector</guid><pubDate>Thu, 05 Dec 2024 07:44:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xa_a2swL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E3%2581%25A7%25E5%259C%25B0%25E5%259B%25B3%25E3%2581%258B%25E3%2582%2589%25E9%2583%25BD%25E9%2581%2593%25E5%25BA%259C%25E7%259C%258C%25E3%2582%2592%25E9%2581%25B8%25E6%258A%259E%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BD%25E3%2582%2593%25E3%2581%25BD%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwNGM2YjAyZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぽんぽこ</dc:creator></item><item><title><![CDATA[ChatGPT に聞きながら React.FC を function に書き換えてみた]]></title><description><![CDATA[
 はじめに
この記事は GENDA Advent Calendar 2024 5日目の記事です。
https://qiita.com/advent-calendar/2024/genda
株式会社GENDA FE/BEエンジニアの shinnoki です。
GENDA ではテック組織一丸となって生成 AI を用いた開発生産の向上に取り組んでおり、GitHub Copilot や ChatGPT Team が業務で使えます。
私はコードを書くときに GitHub Copilot によるサジェストは活用している[1]のですが、いまいちそれ以上に生成 AI を活用できいない感じがしていて、も...]]></description><link>https://zenn.dev/genda_jp/articles/74c1fd17ead7af</link><guid isPermaLink="true">https://zenn.dev/genda_jp/articles/74c1fd17ead7af</guid><pubDate>Thu, 05 Dec 2024 05:19:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r2eKTpQ7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520%25E3%2581%25AB%25E8%2581%259E%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%2520React.FC%2520%25E3%2582%2592%2520function%2520%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:shinnoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiM2M1MjhkNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GENDA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pnSzV4VGRiLUY3REh5XzM5eTdwQ2J6QVd3eGtacTYtMTVIZnZpVGc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shinnoki</dc:creator></item><item><title><![CDATA[今日からReact Nativeを始めたい人のための速習React(前編)]]></title><description><![CDATA[この記事はReact Native 全部俺 Advent Calendar 5日目の記事です。

 このアドベントカレンダーについて
このアドベントカレンダーは @itome が全て書いています。
基本的にReact NativeおよびExpoの公式ドキュメントとソースコードを参照しながら書いていきます。誤植や編集依頼はXにお願いします。

 今日からReact Nativeを始めたい人のための速習React (前編)
モバイルアプリ開発のためにReact Nativeを始めようとしている方向けに、Reactの基礎を解説します。この記事では、Reactの基本的な概念とコンポーネントの書き...]]></description><link>https://zenn.dev/woodstock_tech/articles/226ebb271033b8</link><guid isPermaLink="true">https://zenn.dev/woodstock_tech/articles/226ebb271033b8</guid><pubDate>Thu, 05 Dec 2024 02:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OOmCADvc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E6%2597%25A5%25E3%2581%258B%25E3%2582%2589React%2520Native%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E9%2580%259F%25E7%25BF%2592React%2528%25E5%2589%258D%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Takeshi%2520Tsukamoto%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MTQzNDllZDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:woodstock.club%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMDM0ODM0YzMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takeshi Tsukamoto</dc:creator></item><item><title><![CDATA[DTx事業部におけるRedwoodJSフレームワーク]]></title><description><![CDATA[この記事は MICIN Advent Calendar 2024 の 5日目の記事です。
https://adventar.org/calendars/10022
前回はKensuke Takahashiさんの、「2024年の情報セキュリティ＆SRE社内勉強会を振り返る」 でした。

 DTx: デジタルセラピューティクス事業部とは？
デジタルセラピューティクス事業部は、医療の診断、治療用のアプリケーションを開発するミッションを持った事業部です。
治療用アプリケーションとは、病気に対して治療の効果があるアプリケーションです。
例えば、電車に乗ろうとするとお腹が痛くなったり、プレゼンの前に...]]></description><link>https://zenn.dev/micin/articles/2024-12-05_kinami_redwood</link><guid isPermaLink="true">https://zenn.dev/micin/articles/2024-12-05_kinami_redwood</guid><pubDate>Thu, 05 Dec 2024 01:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KtmSwi9Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DTx%25E4%25BA%258B%25E6%25A5%25AD%25E9%2583%25A8%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BRedwoodJS%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hideo%2520Kinami%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmZDEzMmY4YTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEMICIN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1FzQUpCUURFNktzcGFwd21ucHBJRkZwSmhyOGVnQTRGZWhXMkRsQTVKQ3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hideo Kinami</dc:creator></item><item><title><![CDATA[【TypeScript】ライブラリの型を上書きしてバージョンアップデートの手間を減らす]]></title><description><![CDATA[!
atama plus Advent Calendar 2024の12月5日の記事です。


 はじめに
TypeScriptを使用したプロジェクトでライブラリをバージョンアップデートする際、プロパティ名や型定義が変更されることはよくあります。
特に規模が大きいプロジェクトでは、こうした変更が数十、数百箇所に影響を及ぼすため、手作業で修正するのは非効率でエラーが発生しやすくなります。
弊社でも、使用しているUIライブラリの型変更が原因で、ライブラリのバージョンアップデート作業が滞った経験があります。
具体的には以下のような状況でした。


使用ライブラリ

Chakra UI



ア...]]></description><link>https://zenn.dev/atamaplus/articles/fccdb3265dea8c</link><guid isPermaLink="true">https://zenn.dev/atamaplus/articles/fccdb3265dea8c</guid><pubDate>Thu, 05 Dec 2024 01:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rW7SJFRR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E4%25B8%258A%25E6%259B%25B8%25E3%2581%258D%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E6%2589%258B%25E9%2596%2593%25E3%2582%2592%25E6%25B8%259B%25E3%2582%2589%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yutake27%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTM3M2I1YWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:atama%2520plus%2520techblog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNTc2ZTM0OTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yutake27</dc:creator></item><item><title><![CDATA[HonoのHCで外部APIのAPIクライアントを作る]]></title><description><![CDATA[Honoのhcを用いて、このようなAPIクライアントを型定義から生成しようという試み。
詳しくはこの記事を読む。 https://zenn.dev/yusukebe/articles/a00721f8b3b92e
これはHackerNewsのAPIのサンプルコード。
const client = hc&lt;Api&gt;("https://hacker-news.firebaseio.com")

const resp = await client.v0.item[":item"].$get({
  param: { item: "8863.json" },
  query: { pr...]]></description><link>https://zenn.dev/reiwa/articles/93020b8be8a58a</link><guid isPermaLink="true">https://zenn.dev/reiwa/articles/93020b8be8a58a</guid><pubDate>Wed, 04 Dec 2024 16:25:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oy71tFFO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25AEHC%25E3%2581%25A7%25E5%25A4%2596%25E9%2583%25A8API%25E3%2581%25AEAPI%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%2590%25E3%2582%258C%25E7%2585%25AE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlN2MxNmUyMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しぐれ煮</dc:creator></item><item><title><![CDATA[TypeScriptでエラーを型で表現できるライブラリを作ってみた]]></title><description><![CDATA[
 はじめに
この記事では例外処理をきちんと行うためのやり方として例外をリターンする方法について説明し、それを支援するための自作ライブラリ「tagged-error」について紹介します。またその実装方法についても解説します。
https://github.com/nakanoasaservice/tagged-error
https://www.npmjs.com/package/@nakanoaas/tagged-error

 皆さん例外処理ちゃんとやってますか？
例外が発生するかもしれない関数を呼び出すとき、ついついtry catchをサボってしまうことってよくありますよね？
例:...]]></description><link>https://zenn.dev/yoshinani_dev/articles/054034be3ca992</link><guid isPermaLink="true">https://zenn.dev/yoshinani_dev/articles/054034be3ca992</guid><pubDate>Wed, 04 Dec 2024 14:20:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F5dzi0dq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E5%259E%258B%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Nakano%2520as%2520a%2520Service%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhMjMyNjAxN2QuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:YOSHINANI%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lrTHp0c1hkMHVUN3dhQ1FwWTBtQ3JfbzVKbnFJUkE1U1BFV1gxPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakano as a Service</dc:creator></item><item><title><![CDATA[Denoではじめる楽しいWeb開発]]></title><description><![CDATA[
 概要
この記事の対象者:
Denoについて知りたい人。noejsの代わりの新しいフレームワークを探している人。
この記事の内容:
Denoの背景、特徴、インストール方法、およびDeno Deployを使用したウェブアプリケーションのデプロイ方法の解説している。
この記事を読んでわかること:
Denoを用いたディプロイ方法がわかる。

 序説
みなさん、web開発生活楽しんでますでしょうか？
ご存知のように、Web開発の世界は常に進化し続けています。
Node.jsの登場以来、JavaScriptバックエンド開発は大きく変わってきましたが、新たな選択肢として「Deno」が注目を集めてい...]]></description><link>https://zenn.dev/churadata/articles/fe952c509ba512</link><guid isPermaLink="true">https://zenn.dev/churadata/articles/fe952c509ba512</guid><pubDate>Wed, 04 Dec 2024 14:16:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--psUFaY9g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E6%25A5%25BD%25E3%2581%2597%25E3%2581%2584Web%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kei%25E5%25BF%258D%25E8%2580%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NTFmZDJlZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25A1%25E3%2582%2585%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYTk0NjI3YjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kei忍者</dc:creator></item><item><title><![CDATA[クラス①【個人学習まとめ】]]></title><description><![CDATA[
 クラスとは
データとそのデータに関連する機能(メソッド)をまとまりにして定義する。
オブジェクトの設計図として考えるとよい。
基本的な宣言は次の通り。
 class Person {
    name: string;
    age: number;

    constructor(name: string, age: number) {
        this.name = name;
        this.age = age;
    }
}
Personクラスはnameとageプロパティを持ち、インスタンス化するときに初期化している。
クラスのメンバーはトップクラスで...]]></description><link>https://zenn.dev/o0rororo0o/articles/ced119d83136ad</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/ced119d83136ad</guid><pubDate>Wed, 04 Dec 2024 12:43:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xq78Lhig--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E2%2591%25A0%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[Storybookでコンポーネントをフォルダ分けする]]></title><description><![CDATA[
 はじめに
ChakraUIを使っていたら、このようにフォルダ分けされおり、再現したいと思いました。
しかし、Googleで「Storybook フォルダ分け」で調べても出てこなかったので手法を記します。


 手法を探す
恐らくStorybookのドキュメントにもあるものだと思いますが、ChakraUIのコードから参照してみたところ、このような記述が見つかりました。
実際のコード

bar-chart.stories.tsx
import { Box } from "../src"

export default {
  title: "WIP / Bar Chart",
  dec...]]></description><link>https://zenn.dev/evesquare2/articles/25ae5f1ac55262</link><guid isPermaLink="true">https://zenn.dev/evesquare2/articles/25ae5f1ac55262</guid><pubDate>Wed, 04 Dec 2024 02:51:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CTlO3nk0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Storybook%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E5%2588%2586%25E3%2581%2591%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:EveSquare%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIyMjRmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>EveSquare</dc:creator></item><item><title><![CDATA[Claude Projectsを活用して、Deno / TypeScriptで言語処理系を書いてみた話]]></title><description><![CDATA[
 背景

Claude Projectsをもっと活用できるようになりたい
Deno / TypeScriptで何か作りたい

という理由で、なんとなく「プログラミング言語的なものをClaudeと一緒に作ってみるか」と思いつきました。作業ログや学び的なものをせっかくなので残しておきます。
作成したのは以下:
https://github.com/danimal141/poor-go
基本的に私は指示役の男としてClaudeにコードを書かせることに徹しています。また、また今回ChatGPT、Cursorなどその他の生成AI系サービスは一切使っておりません。

 開発方針
今回、言語をリッチ...]]></description><link>https://zenn.dev/danimal141/articles/0b837232619038</link><guid isPermaLink="true">https://zenn.dev/danimal141/articles/0b837232619038</guid><pubDate>Wed, 04 Dec 2024 02:50:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wvpjdnbN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Projects%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Deno%2520%252F%2520TypeScript%25E3%2581%25A7%25E8%25A8%2580%25E8%25AA%259E%25E5%2587%25A6%25E7%2590%2586%25E7%25B3%25BB%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:danimal141%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlMzc0YjE0N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>danimal141</dc:creator></item><item><title><![CDATA[Chakra UI の as プロパティを利用するときに知っておくこと]]></title><description><![CDATA[
 はじめに
Chakra UI では as プロパティを使うことで、 styled-components と同様に、要素のレンダリングを変更できます。
&lt;Box as="button" borderRadius="md" bg="tomato" color="white" px={4} h={8}&gt;
  Button
&lt;/Box&gt;
引用: Box - Chakra UI
Box は HTML だと div 要素のため、 onClick プロップスを持たせるとき、 Tab キーで要素にフォーカスができなかったり、スクリーンリーダーで認識されなかったりと、アクセシビ...]]></description><link>https://zenn.dev/route06/articles/478ac037471e0e</link><guid isPermaLink="true">https://zenn.dev/route06/articles/478ac037471e0e</guid><pubDate>Wed, 04 Dec 2024 01:15:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W4hBqTFl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chakra%2520UI%2520%25E3%2581%25AE%2520as%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2581%258C%25E3%2581%25BF%25E3%2582%2582%25E3%2581%25A1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNTRlMGJjMjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ROUTE06%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwYTgwODM0MWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かがみもち</dc:creator></item><item><title><![CDATA[Vueアプリケーションでオフラインで動画を再生できるようにする]]></title><description><![CDATA[こんにちは、RUN.EDGE株式会社の桑原です。
今回は以下の２つ

Cache API
Service Worker

を使って、オフラインで動画を再生する機能の実装方法の紹介をしたいと思います。
また、今回はサンプルとしてVueアプリケーションを使っています。Reactなど、他のフレームワークを利用する場合は適宜読み替えてください。
サンプルコードは以下においておきます。
https://github.com/kuwabataK/video-cache-sample/tree/main/vue-sample

 Cache APIについて
Cache APIは、特定のURLのレスポン...]]></description><link>https://zenn.dev/run_edge/articles/2883090cec2e67</link><guid isPermaLink="true">https://zenn.dev/run_edge/articles/2883090cec2e67</guid><pubDate>Wed, 04 Dec 2024 01:02:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6R50q9NO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E5%2586%258D%25E7%2594%259F%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25A1%2591%25E5%258E%259F%25E8%258D%2598%25E9%25A6%25AC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkNjVlOTZjYjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:RUN.EDGE%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01hV1NrNm5PMTVlanJlYnNoY2VBRDZCcV9ibzRlX1VnYXZ3TzNLMG9sbVctU0VBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>桑原荘馬</dc:creator></item><item><title><![CDATA[サクッと作る型安全なBFF開発環境 - マイクロサービス × OpenAPI自動生成]]></title><description><![CDATA[これは SMat Advent Calendar 2024 の12/4分の記事です。
弊社技術イベントの宣伝です。
IoTやデータ処理周りに少しでも興味がある方は是非ご参加ください。お一人様大歓迎です！まったり技術の話をしましょう！
https://s-mat.connpass.com/event/336943/

 はじめに
こんにちは、株式会社エスマット エンジニアの hi6okuni です。
今回は、OpenAPI Specification(以降、OpenAPIと呼ぶ)からTypeScriptの型自動生成の仕組みをサクッと作った時の振り返りです。
型の自動生成自体はすでに多くの事...]]></description><link>https://zenn.dev/smartshopping/articles/a7cb9f0dd9d839</link><guid isPermaLink="true">https://zenn.dev/smartshopping/articles/a7cb9f0dd9d839</guid><pubDate>Tue, 03 Dec 2024 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0yaio4h9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E4%25BD%259C%25E3%2582%258B%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AABFF%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%2520-%2520%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2520%25C3%2597%2520OpenAPI%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hi6okuni%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ODNjMWY0MDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YjE3YjFhNjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hi6okuni</dc:creator></item><item><title><![CDATA[【TypeScript】ジェネレーターによる遅延評価でフィボナッチ数列を生成する]]></title><description><![CDATA[
 はじめに
!
この記事は、遅延評価のことを初めて知った人が書いています。
そのため特に遅延評価周りの理解が浅いですが、ご了承ください。


 やりたいこと


遅延評価でフィボナッチ数列を生成したい

長さを指定して生成できること
指定の数より小さい値のみの数列が生成できること


JavaScriptのジェネレーターを使って遅延評価する
フィボナッチ以外の数列を簡単に生成できるよう、設計を工夫する


 環境

Bun v1.1.34

TypeScript Playground（ファイル分けの修正が必要）

また、この記事のコードはTypeScriptで書かれていますが、型部分を...]]></description><link>https://zenn.dev/nanasi_1/articles/22696e18f3a2f9</link><guid isPermaLink="true">https://zenn.dev/nanasi_1/articles/22696e18f3a2f9</guid><pubDate>Tue, 03 Dec 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5G1EBGnv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%2581%2585%25E5%25BB%25B6%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A3%25E3%2583%259C%25E3%2583%258A%25E3%2583%2583%25E3%2583%2581%25E6%2595%25B0%25E5%2588%2597%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nanasi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0MDFiNWU4NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nanasi</dc:creator></item><item><title><![CDATA[インターフェイス【個人学習まとめ】]]></title><description><![CDATA[
 インターフェイスとは
オブジェクトの構造を定義するのに特化した機能。
インターフェイスの宣言
interface Pet {
    name: string;
    age: number;
}
実際にインターフェイスを用いた型指定の例。
変数pochiにPetインターフェイスを指定する。
let pochi: Pet = {
    name: "pochi",
    age: 3
}
次の書き方はエラーになる。
//型 'string' を型 'Pet' に割り当てることはできません。
pochi = "tama";
//型 'string' を型 'number' に割り...]]></description><link>https://zenn.dev/o0rororo0o/articles/074129387c31fe</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/074129387c31fe</guid><pubDate>Tue, 03 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yoKKPL_f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25B9%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[【完全無料】VercelでOpenCVを動かそう～タートルグラフィックスを添えて～]]></title><description><![CDATA[これは2024team411アドベントカレンダー3日目の記事です。
昨日はかなるさんの「【初心者向け】かわいい・かっこいい開発環境の作り方」でした。開発者にとって、普段使いする開発環境にこだわるのってとても良いですね。自分はVSCodeをダークテーマにしたっきりカスタマイズしてないです...

 はじめに
突然ですが、みなさんはタートルグラフィックスというものを知っていますか？
タートルグラフィックスとは、GUIプログラミングの入門のようなもので、LOGOというプログラミング言語によって1967年に初めて実装されました。その後、さまざまな言語でも実装され、初心者向けとして受け継がれてきま...]]></description><link>https://zenn.dev/team411/articles/7700bb587d72c8</link><guid isPermaLink="true">https://zenn.dev/team411/articles/7700bb587d72c8</guid><pubDate>Tue, 03 Dec 2024 09:31:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Adm1A0-X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AE%258C%25E5%2585%25A8%25E7%2584%25A1%25E6%2596%2599%25E3%2580%2591Vercel%25E3%2581%25A7OpenCV%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%25EF%25BD%259E%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AB%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%2592%25E6%25B7%25BB%25E3%2581%2588%25E3%2581%25A6%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Akaaku%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YzQxYWIxYjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:team411%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFkyUEJwUGJvR1k5SkJtUnpnTWc2NHdYd0VtYml2OXNzdjU3SFl4UDNHPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akaaku</dc:creator></item><item><title><![CDATA[ChakraUI V3 themeの色トークンを追加する]]></title><description><![CDATA[
 はじめに
ChakraUI V3が公開されましたね。
ChakraUIを使うとき、オリジナルカラーのトークンを毎度設定するのですが、v2からv3で設定方法がガラリと変わっていたので、設定方法をまとめます。

 設定コード
theme.tsを書き換えます。

theme.ts
 import {
   ChakraProvider as Provider,
   createSystem,
   defaultConfig,
   defineConfig,
 } from "@chakra-ui/react";
 
 const config = defineConfig({
   ...]]></description><link>https://zenn.dev/evesquare2/articles/fb89be6862a940</link><guid isPermaLink="true">https://zenn.dev/evesquare2/articles/fb89be6862a940</guid><pubDate>Tue, 03 Dec 2024 07:23:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jsovbEb6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChakraUI%2520V3%2520theme%25E3%2581%25AE%25E8%2589%25B2%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:EveSquare%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODIyMjRmNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>EveSquare</dc:creator></item><item><title><![CDATA[NestJSで環境設定ファイルを非同期に読み込み、JWT設定を行う方法]]></title><description><![CDATA[
 はじめに
NestJSは、モジュールベースで構築されている強力なバックエンドフレームワークで、簡単に拡張性のあるアプリケーションを作成できます。
この記事では、NestJSのJwtModuleを使って、環境設定ファイル（.env）から非同期でJWTの設定を読み込み、JWTを発行するための簡単なコードを紹介します。

 JWT認証の概要
こちらは、興味のある方だけアコーディオンを開いて確認してください。
JWTの簡単な概要
JWTは、認証のために使われるトークン形式で、サーバーとクライアント間で情報を安全にやり取りするための標準的な手段です。通常、JWTには以下のような情報が含まれます...]]></description><link>https://zenn.dev/nifumafu/articles/9e8a4375e83a6b</link><guid isPermaLink="true">https://zenn.dev/nifumafu/articles/9e8a4375e83a6b</guid><pubDate>Tue, 03 Dec 2024 07:23:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0brKtcCr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2581%25AB%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2580%2581JWT%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nifumafu%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXZVb3ktcF9Nb3FTc3JnQnNIblU1ekN0MnItNWFkRDZoXzNSRGE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nifumafu🍊</dc:creator></item></channel></rss>