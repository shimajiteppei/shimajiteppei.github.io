<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「shell」のフィード]]></title><description><![CDATA[Zennのトピック「shell」のRSSフィードです]]></description><link>https://zenn.dev/topics/shell</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/c8d33e6510.jpeg</url><title>Zennの「shell」のフィード</title><link>https://zenn.dev/topics/shell</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 22 Oct 2024 12:04:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/shell/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[便利なコマンド臭]]></title><description><![CDATA[
 同じパターンの文字列に変換する方法
sed -i '' 's/example="\([^"]*\)"/examples=["\1"]/g' $filename


example="\([^"]*\)": example="任意の文字列" のパターンをマッチさせます。\([^"]*\) はダブルクォート以外の文字が0回以上続く部分をキャプチャします。
examples=["\1"]: マッチした文字列を examples=["キャプチャした文字列"] に置き換えます。\1 は最初のキャプチャグループ（任意の文字列）を参照します。


 フォルダー内あるファイルをリスト
folder_...]]></description><link>https://zenn.dev/qinritukou/articles/bdc4e8f8877469</link><guid isPermaLink="true">https://zenn.dev/qinritukou/articles/bdc4e8f8877469</guid><pubDate>Sat, 19 Oct 2024 05:42:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9cwIrnZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E8%2587%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:John%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiYzg5MDllODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>John</dc:creator></item><item><title><![CDATA[sudoを忘れて怒られてしまったら、びっくり（!!）すればいい]]></title><description><![CDATA[タイトルは釣りです。

 怒られが発生
sudoを忘れてシェルに怒られた経験は誰しもお持ちでしょう。私もよくあります。たとえばこんなふうに。
$ apt update
Reading package lists... Done
E: Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)
この例だと、3行目で「エラー。権限がなくてファイルが開けない」とシェルに怒られているわけです。
こんなときは「あー」と思いつつsudoをつけてsudo apt updateなどと入力しなおしていたわけ...]]></description><link>https://zenn.dev/harupong/articles/24df32dc6826cb</link><guid isPermaLink="true">https://zenn.dev/harupong/articles/24df32dc6826cb</guid><pubDate>Thu, 17 Oct 2024 07:14:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NQp3RStw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sudo%25E3%2582%2592%25E5%25BF%2598%25E3%2582%258C%25E3%2581%25A6%25E6%2580%2592%25E3%2582%2589%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2580%2581%25E3%2581%25B3%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25EF%25BC%2588%2521%2521%25EF%25BC%2589%25E3%2581%2599%25E3%2582%258C%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:harupong%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dwa0hndnVadUk2Y1ZuRmQyZHZyaWxxeFcxN1BvcE0zNjNIbG9FQ0U4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>harupong</dc:creator></item><item><title><![CDATA[シェルスクリプト]]></title><description><![CDATA[
 シェルスクリプトとは？
シェルスクリプトは、シェルによる操作（解釈・実行）がまとめられた台本や手順書（スクリプト）と考えると良いです。
シェルスクリプトを使わずに、一つひとつコマンドをシェルに入力してOSを操作することも可能ですが、より複雑な処理や繰り返し処理が必要になると、手動での操作は非常に煩雑になってしまいます。そのため、シェルスクリプトを利用して効率化を図ることが重要です。

 シェルスクリプトの基本文法
シェルスクリプトを作成する際に、基本的な文法やルールがいくつかあります。ここでは、特に重要なポイントを紹介します。

 1. 先頭行の #!/bin/bash

シェルスク...]]></description><link>https://zenn.dev/kyojinnaapyon/articles/3d57502c1d2b8a</link><guid isPermaLink="true">https://zenn.dev/kyojinnaapyon/articles/3d57502c1d2b8a</guid><pubDate>Tue, 15 Oct 2024 21:09:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0j5EIed0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NANA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JGUUpURkRTcU5McTJoV0RZMlhSaDBUUjYtbWJGd0xRQzBHTXcxaHN1cUlUR1lRbz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NANA</dc:creator></item><item><title><![CDATA[ゆるく理解する自作シェル実装 1 - シェルのイメージを掴む -]]></title><description><![CDATA[
 はじめに
シェルとその内部実装をかいつまんで大まかに理解することを目標にしています。
情報の集約・簡略化などによって正確な情報が欠如しているかもしれません。
あくまで、ゆるくシェルについてのイメージがわく程度の読み物としてみていただければと思います。

 シェルとは
ユーザーに対して、カーネルを含む様々なソフトウェアへのインターフェースを提供するプログラムです。シェルの具体例としてbashやPowerShellなどが挙げられ、これらはコマンドラインインタープリターに該当します。


 コマンドラインインタープリターとは
コマンドラインインタープリターとは、ユーザーがキーボードから入力...]]></description><link>https://zenn.dev/nakashi94/articles/074a8c69d68372</link><guid isPermaLink="true">https://zenn.dev/nakashi94/articles/074a8c69d68372</guid><pubDate>Mon, 14 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x3RCxJct--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2586%25E3%2582%258B%25E3%2581%258F%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E5%25AE%259F%25E8%25A3%2585%25201%2520-%2520%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E6%258E%25B4%25E3%2582%2580%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakashi94%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3MjE3ZDBjNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakashi94</dc:creator></item><item><title><![CDATA[minishellをどこから手を付けていいのか分からない人へ(pipex, Exam Rank 04)]]></title><description><![CDATA[by 課題のハードルを下げようの会

 課題
bashの再実装

 1時間で全体像を把握する
「bashを再実装しろ」と言われてもどこから手を付けていいのか分からない人が多いと思います。
susamiさんの書かれたこの記事は素晴らしいのですが、ざっくり全体像を掴むにはちょっと難しい。「よく分からないまま全部写経」みたいになっちゃいがち。
https://usatie.notion.site/minishell-29921d3ea13447ad897349acd5733d5e
まずはじめに全体像を把握するには、下記コードがオススメです。
このコードは『ふつうのLinuxプログラミング 第2...]]></description><link>https://zenn.dev/grigri_grin/articles/54152e7b9e11f8</link><guid isPermaLink="true">https://zenn.dev/grigri_grin/articles/54152e7b9e11f8</guid><pubDate>Tue, 08 Oct 2024 11:57:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9PgPtXkU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:minishell%25E3%2582%2592%25E3%2581%25A9%25E3%2581%2593%25E3%2581%258B%25E3%2582%2589%25E6%2589%258B%25E3%2582%2592%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25A6%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25B8%2528pipex%252C%2520Exam%2520Rank%252004%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjMTNmNzBkZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syagi</dc:creator></item><item><title><![CDATA[WSL(Ubuntu22.04)に最新版のchromedriverをサクッと入れたい]]></title><description><![CDATA[
 はじめに
Seleniumで、Webアプリの実行を自動化する際に必要なchromedriverを使えるようにしたい。

 前提
以下libnss3関連のライブラリ入れておく
sudo apt update
sudo apt install -y libnss3 libgconf-2-4 libxss1 libatk1.0-0 libpangocairo-1.0-0 libgtk-3-0 libx11-xcb1

 手順
まずシェルスクリプトファイルを作成する。

install_chromedriver.sh
#!/bin/bash

# ChromeDriverのインストール先ディ...]]></description><link>https://zenn.dev/takaha4k/articles/2e9f9b4e6a7202</link><guid isPermaLink="true">https://zenn.dev/takaha4k/articles/2e9f9b4e6a7202</guid><pubDate>Sun, 06 Oct 2024 05:27:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HHe102bD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%2528Ubuntu22.04%2529%25E3%2581%25AB%25E6%259C%2580%25E6%2596%25B0%25E7%2589%2588%25E3%2581%25AEchromedriver%25E3%2582%2592%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E5%2585%25A5%25E3%2582%258C%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaha4k%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZDg4YTkzZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaha4k</dc:creator></item><item><title><![CDATA[How to get applications that can open a file on macOS]]></title><description><![CDATA[I needed to get a list from the terminal of applications that could be selected with ‘Open with’ in Finder. This process is similar to what is described in the following link.
https://support.apple.com/guide/mac-help/choose-an-app-to-open-a-file-on-mac-mh35597/mac
By the way, all extensions can s...]]></description><link>https://zenn.dev/dotinkasra/articles/7acf1c7768960c</link><guid isPermaLink="true">https://zenn.dev/dotinkasra/articles/7acf1c7768960c</guid><pubDate>Thu, 03 Oct 2024 03:37:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LSMP14Kl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:How%2520to%2520get%2520applications%2520that%2520can%2520open%2520a%2520file%2520on%2520macOS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dotinkasra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkNmE1YTYwYzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dotinkasra</dc:creator></item><item><title><![CDATA[脱MTG忘れ ~Google APIとSlackWebhookで自動リマインダーを構築してみた~]]></title><description><![CDATA[
 はじめに
毎朝仕事の始まりは、その日のスケジュールを確認して、MTG 開始時刻の数分前にアラームをかける作業を行っている方は多いと思います。
特別大変な作業でもないので、私も毎朝続けてきましたが、頭のどこかでアラームのかけ忘れはないか？ MTGまであと何分だ？と心配事を常にぼんやり抱えている状態でした。
今回は、そんな心配事を取り除き作業に集中できる環境を作る為に、当日のスケジュール確認と開始2分前のリマインドを自動化してみました。
もし、同じ様な思いをしている方は、初期設定だけちょっと大変ですが、ぜひ実施してみてください。
github で公開しているので、よければご利用ください。...]]></description><link>https://zenn.dev/00083ns/articles/notif-mtg-article</link><guid isPermaLink="true">https://zenn.dev/00083ns/articles/notif-mtg-article</guid><pubDate>Fri, 27 Sep 2024 11:04:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KtK9N0O6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2584%25B1MTG%25E5%25BF%2598%25E3%2582%258C%2520%7EGoogle%2520API%25E3%2581%25A8SlackWebhook%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:00083ns%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MUJEdlhfU2tSTHVNNTZYUWhyaXlob1M4eTB6NXlGMGlVNkVncUY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>00083ns</dc:creator></item><item><title><![CDATA[複数リポジトリのコミット履歴をログ出力する]]></title><description><![CDATA[個人利用しているシェル
使い方は、シェル内のusageやリポジトリのREADMEからご確認頂ければと。
https://github.com/nobu-kishi/output_git_log/blob/main/output_git_log.sh
]]></description><link>https://zenn.dev/n0bu/articles/63b5d4583a74e0</link><guid isPermaLink="true">https://zenn.dev/n0bu/articles/63b5d4583a74e0</guid><pubDate>Tue, 24 Sep 2024 23:34:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9y3Ivq2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2582%2592%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:n0bu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNjZXbWVXOFJUejlUeDluRWZubC1mNV9Sd1BzcWZrTXk3RUJZODM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n0bu</dc:creator></item><item><title><![CDATA[$PATH環境変数を改行で出力したい]]></title><description><![CDATA[普通にecho $PATHしても改行されておらず読みにくいが、以下コマンドを叩くと改行されて標準出力できる。
echo $PATH | sed -e 's/:/\n/g'
]]></description><link>https://zenn.dev/kanazawa/articles/a1352d012c0bf6</link><guid isPermaLink="true">https://zenn.dev/kanazawa/articles/a1352d012c0bf6</guid><pubDate>Tue, 24 Sep 2024 12:02:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5gEnTWiM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2524PATH%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E6%2594%25B9%25E8%25A1%258C%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kota%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMjYzZTE1MjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kota</dc:creator></item><item><title><![CDATA[zellijでタブ切り替えを素早くしたい]]></title><description><![CDATA[tmuxではCtrl+b+lで直前のタブに戻れるが、zellijではCtrl+t→Tab→Enterの３ステップが必要になってしまったのでキーバインドを変更したい。

 設定ファイルを編集
まだない場合は以下で作る。
zellij setup --dump-config &gt; ~/.config/zellij/config.kdl

 キーバインドを変更
    tab {
        bind "Ctrl t" { SwitchToMode "Normal"; }
        bind "r" { SwitchToMode "RenameTab"; TabNameInput...]]></description><link>https://zenn.dev/laiso/articles/126b3bb6d6c5b3</link><guid isPermaLink="true">https://zenn.dev/laiso/articles/126b3bb6d6c5b3</guid><pubDate>Tue, 24 Sep 2024 04:12:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fsJyv0Yz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zellij%25E3%2581%25A7%25E3%2582%25BF%25E3%2583%2596%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%25E3%2582%2592%25E7%25B4%25A0%25E6%2597%25A9%25E3%2581%258F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:laiso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4Nzc0MDcyMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>laiso</dc:creator></item><item><title><![CDATA[MySQL で特定のテーブルを効率的にダンプして gzip 圧縮して出力する]]></title><description><![CDATA[
 はじめに
色々な実験を繰り返しているうちに、検証環境のDBデータに不整合が出ていることが判明して dump から復旧を行うことがありました。
とはいえ全てのテーブルが壊れていた訳ではなくデータ量も大きかったので、特定のテーブルだけのダンプデータをgzip圧縮して作成するシェルスクリプトを作成しました。
MySQLを使っていれば、他の環境でも流用できるスクリプトになっています。
（ただし InnoDB を想定しています）

 ダンプスクリプト
まずはスクリプトの全体です。
コメントを入れた2箇所（DB接続情報・テーブル名の指定）はダミーの値なので、環境に合わせて変更してください。
シェ...]]></description><link>https://zenn.dev/shuh/articles/mysql-dump-gzip</link><guid isPermaLink="true">https://zenn.dev/shuh/articles/mysql-dump-gzip</guid><pubDate>Mon, 23 Sep 2024 17:41:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nAd4Wyv5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MySQL%2520%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2597%25E3%2581%2597%25E3%2581%25A6%2520gzip%2520%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%25A6%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODg1Y2EwN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusch</dc:creator></item><item><title><![CDATA[Nushell - 型付きシェルの基本とコマンド定義]]></title><description><![CDATA[
 はじめに
これまで Zenn では fish shell の記事をいくつか書いてきましたが、現在は Nushell という新しいシェルを使っています。
https://www.nushell.sh
実は Nushell のことは以前から知っていましたが、利用されているプログラミング言語の概念やその恩恵についての知識が無かったため、より初心者にわかりやすい fish shell を利用していました。最近になって型システムや関数型言語などについての概念を取得したため、ようやく Nushell を使い始められました。
 Nushellでの分かりやすいエラーメッセージ
使い始めてからまだ1ヶ...]]></description><link>https://zenn.dev/estra/articles/nu-typed-shell</link><guid isPermaLink="true">https://zenn.dev/estra/articles/nu-typed-shell</guid><pubDate>Mon, 23 Sep 2024 08:15:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8q0M4Zia--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nushell%2520-%2520%25E5%259E%258B%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PADAone%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmMDU2NzNjNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>PADAone🐕</dc:creator></item><item><title><![CDATA[今週の始まりと終わりの日付を求めたい]]></title><description><![CDATA[
 今週の始まりと終わりの日付を求めたい
ポイントは


date +%w コマンドで今日 (基準日) の曜日を 0 ～ 6 のインデックスで求める。
週の開始曜日の定義に基づいて、今週の最初の日と最後の日をインデックスに基づく足し算、引き算を行って目的の日を求める。


 週 が日曜日から始まって、土曜日で終わる場合
#!/bin/bash

# 引数から日付を取得、引数がなければ今日の日付を使用
today=${1:-$(date +%Y-%m-%d)}

# 今日の曜日をインデックスで取得 (0:日曜日, 1:月曜日, ..., 6:土曜日)
# %u     day of wee...]]></description><link>https://zenn.dev/mtmatma/articles/820c93f3aa277a</link><guid isPermaLink="true">https://zenn.dev/mtmatma/articles/820c93f3aa277a</guid><pubDate>Mon, 23 Sep 2024 04:31:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5WzpLGEd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E9%2580%25B1%25E3%2581%25AE%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258A%25E3%2581%25A8%25E7%25B5%2582%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AE%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:masaru%2520tsuchiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masaru tsuchiyama</dc:creator></item><item><title><![CDATA[Linux/Mac CPUのコア数・スレッド数を調べるコマンド]]></title><description><![CDATA[make の並列オプション指定など、コマンドを用いてCPUのコア数（物理コア数）、スレッド数（論理コア数）を取得したい場合があります。
Linux/Mac でコマンドが違い、いつもわからなくなるのでまとめておきます。

 検証環境
Linux: AMD Ryzen 5 2600 Six-Core Processor
Mac: Apple M1

 コア数（物理コア数）を出力する

 /proc/cpuinfo を使う (Linux)
/proc/cpuinfo の出力を grep します。
$ grep core.id /proc/cpuinfo | sort -u | wc -l
6
...]]></description><link>https://zenn.dev/shuh/articles/cpu-cores-threads</link><guid isPermaLink="true">https://zenn.dev/shuh/articles/cpu-cores-threads</guid><pubDate>Sun, 22 Sep 2024 20:10:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_po6M4T1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%252FMac%2520CPU%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25A2%25E6%2595%25B0%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusch%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ODg1Y2EwN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusch</dc:creator></item><item><title><![CDATA[コマンドラインシェルのセミコロン(;)について - 複数の命令を1行に]]></title><description><![CDATA[
 複数の命令を1行に
コマンドラインシェルでは、セミコロン(;)で区切ることで、複数の命令を1行に記述できます。
このことを知らずに、pythonでつくったプログラムの引数として、セミコロン(;)が含まれた文字列を渡し、予想通りの挙動をしませんでした。
以下、備忘録として具体例をメモしておきます。

 具体例
count_characters.py：
・与えられた一つの文字列について、大文字や小文字の数などを出力
・引数が１つ以上の場合、エラーを出力
ぼくの予想：
・以下は「df;aj」、「dflajk」、「af」の３つの引数がわたされているのでエラーを出力すべき
実際の結果：
・「d...]]></description><link>https://zenn.dev/hovinci/articles/741412b589c833</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/741412b589c833</guid><pubDate>Sun, 22 Sep 2024 02:56:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1aaKsjG8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%259F%25E3%2582%25B3%25E3%2583%25AD%25E3%2583%25B3%2528%253B%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2520-%2520%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E5%2591%25BD%25E4%25BB%25A4%25E3%2582%25921%25E8%25A1%258C%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%25EF%25BD%259C%25E6%259C%25AC%25E3%2581%25A5%25E3%2581%258F%25E3%2582%258A%25E3%2581%25AE%25E3%2583%2580%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ｜本づくりのダヴィンチになる</dc:creator></item><item><title><![CDATA[fishターミナルでprogateCLIを入れるので詰まった]]></title><description><![CDATA[
 前提
PC：MacBook Pro M2,8GB
Ver：Sonoma 14.6.1
ターミナル：fishシェル

 詰まったところ
progate Pathで環境構築をするときに、progate Path公式の手順書に載っているコマンドでは私のターミナルでは環境構築ができなかった。
エラー文

//assets.path.progate.com/cli-installer/out/setup.sh)
fish: Invalid redirection target: 
bash &lt;(curl -sSfL https://assets.path.progate.com/cli-...]]></description><link>https://zenn.dev/kometsubu3/articles/4727db99f51f37</link><guid isPermaLink="true">https://zenn.dev/kometsubu3/articles/4727db99f51f37</guid><pubDate>Sat, 21 Sep 2024 09:15:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UTBR1p7e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fish%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25A7progateCLI%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E7%25B2%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZWY4NDQ1ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>米粒</dc:creator></item><item><title><![CDATA[[UNIX系・shell]bashとshの違いなどなど]]></title><description><![CDATA[
 はじめに
今日はシェルについて触れていきます。というのも今日仕事をしながらshellを叩く際、xオプションを付けようとして、shellについて調べてる中でふと、「bashやshって何が違うんだっけ」と思いました。なので、調べたことなどを自分なりにまとめて見ます。初学者向けなので、簡単にまとめています！
気軽に見て見てください。

 結論
「bashやshの違い」は、同じシェルだけど、種類が違う！です。
個人的な感想ですが、ポテチののり塩とうす塩みたいな感じだと思いました笑

 shell(シェル)とは
shellとは、OSの操作を行うためのコマンドインターフェイスです。
「シェルを叩...]]></description><link>https://zenn.dev/kira_n/articles/087d18f5025efe</link><guid isPermaLink="true">https://zenn.dev/kira_n/articles/087d18f5025efe</guid><pubDate>Thu, 19 Sep 2024 13:42:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uCp40x3q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BUNIX%25E7%25B3%25BB%25E3%2583%25BBshell%255Dbash%25E3%2581%25A8sh%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AA%25E3%2581%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kira_n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkyMWU4MWZiYzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kira_n</dc:creator></item><item><title><![CDATA[【警告】AOAIモデルをデプロイしただけで◯万円？PTUなモデルデプロイ有無を一括確認できるようにしてみた話]]></title><description><![CDATA[
 はじめに
先日、Azure OpenAI Service（以下、AOAI）でモデルをデプロイしただけで高額な課金が発生するという、ヒヤリとする体験をしました。同様の事例が他の方にも起こっていることを知り、これは対策が必要だと感じました。(せめて横並び確認の自動化くらいは･･･)
参考にした記事はこちらです：
https://zenn.dev/umi_mori/articles/aoai-warning-ptu
この記事では、同じ問題に直面した背景と、その解決策としてテナント内のすべてのAOAIリソースを一括でチェックし、Provisioned-managedなデプロイメントを特定する...]]></description><link>https://zenn.dev/chips0711/articles/63166e84db8ee4</link><guid isPermaLink="true">https://zenn.dev/chips0711/articles/63166e84db8ee4</guid><pubDate>Sat, 14 Sep 2024 04:41:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5NwLdqY---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25AD%25A6%25E5%2591%258A%25E3%2580%2591AOAI%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E2%2597%25AF%25E4%25B8%2587%25E5%2586%2586%25EF%25BC%259FPTU%25E3%2581%25AA%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E6%259C%2589%25E7%2584%25A1%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoki%2520Matsumoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMjVkOWVmNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoki Matsumoto</dc:creator></item><item><title><![CDATA[テナント内の全AOAIリソースがちゃんとオプトアウトできているかを一気に確認するスクリプトを書いてみた話]]></title><description><![CDATA[
 はじめに
Azure OpenAI Serviceを利用する際、データプライバシーとセキュリティは非常に重要な要素です。Azure OpenAI ServiceにはAbuse Monitoring（悪用監視）機能があり、これによりリソースの使用状況が監視されます。通常、デフォルトで有効化されているこの機能ですが、必要に応じてMicrosoftが用意している申請フォームから申請を出し､承認が得られれば無効化（オプトアウト）することもできます。
以下の図は､LLMへの入出力データがどのように処理されるかを示しています。
図の真ん中あたりにAbuse Monitoringの話が記載されてい...]]></description><link>https://zenn.dev/chips0711/articles/dd970558754075</link><guid isPermaLink="true">https://zenn.dev/chips0711/articles/dd970558754075</guid><pubDate>Thu, 12 Sep 2024 14:53:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q8rkoV6e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2588%25E5%2586%2585%25E3%2581%25AE%25E5%2585%25A8AOAI%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258C%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E3%2582%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%25E3%2582%2592%25E4%25B8%2580%25E6%25B0%2597%25E3%2581%25AB%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoki%2520Matsumoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMjVkOWVmNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoki Matsumoto</dc:creator></item></channel></rss>