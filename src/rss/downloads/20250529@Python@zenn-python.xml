<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 29 May 2025 08:33:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[vLLM V1について]]></title><description><![CDATA[vLLMは高速なLLMのサービングを行うソフトウェアとして有名であると思っている。
最近、といっても数ヶ月前だと思うが、開発中であったV1 Engineがデフォルトで有効になった。
https://docs.vllm.ai/en/stable/getting_started/v1_user_guide.html
V1がアルファ版として2025年1月27日に公式ブログで発表されて以来、着実な進歩とコミュニティからのフィードバックを経て成熟してきたことがうかがえる。
https://blog.vllm.ai/2025/01/27/v1-alpha-release.html
ということで、本記...]]></description><link>https://zenn.dev/vlntr_telco_rd/articles/vllm-v1-summary</link><guid isPermaLink="true">https://zenn.dev/vlntr_telco_rd/articles/vllm-v1-summary</guid><pubDate>Thu, 29 May 2025 03:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jCtYgZ6S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:vLLM%2520V1%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%25A6%25E3%2582%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiMWRjY2I0MzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258B%25E9%2580%259A%25E4%25BF%25A1%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E6%259C%2589%25E5%25BF%2597%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExZmM2MWE2MDAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユウ</dc:creator></item><item><title><![CDATA[Pythonの len() の使い方と注意点]]></title><description><![CDATA[
 はじめに
Pythonでデータの「長さ」を取得するときに使う len() 関数。
リストや文字列だけでなく、さまざまなデータ型に使える便利な組み込み関数です。
一見シンプルですが、使い方にいくつか気をつけたいポイントがあります。
本記事では、len() の基本的な使い方と注意点を整理します。

 1. リストの要素数を取得する
fruits = ["apple", "banana", "orange"]
print(len(fruits))  # 3
リストの中の要素数を返します。

 2. 文字列の文字数を取得する
text = "hello"
print(len(text))  ...]]></description><link>https://zenn.dev/fd2025/articles/d5a726977ba206</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/d5a726977ba206</guid><pubDate>Wed, 28 May 2025 22:59:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sEhK2QJw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%2520len%2528%2529%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[Kaggle Drawing with LLMs 振り返り & 上位解法まとめ]]></title><description><![CDATA[Kaggle の お絵描きコンペこと  「Drawing with LLMs」 が、日本時間2025年5月28日に終了しました。本記事では、コンペ終了後の振り返りとして、概要と上位入賞チームのアプローチをまとめました。

 コンペ概要
https://www.kaggle.com/competitions/drawing-with-llms

入出力の例
このコンペでは、「あるテキストが与えられたときに、そのテキストに出来るだけ忠実なSVGを生成すること」が目標でした。また、従来のコードコンペティションとは異なり、初めて Kaggle Package による提出形式が採用されたコンペでし...]]></description><link>https://zenn.dev/prgckwb/articles/kaggle-dwllm</link><guid isPermaLink="true">https://zenn.dev/prgckwb/articles/kaggle-dwllm</guid><pubDate>Wed, 28 May 2025 16:21:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ERQwOxUc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kaggle%2520Drawing%2520with%2520LLMs%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%2520%2526%2520%25E4%25B8%258A%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1MWU5MTZhMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item><item><title><![CDATA[PythonとOpenAI APIで実践！はじめてのMCP開発入門【第7回】構造化コンテキストでのOpenAI APIを呼び出すテクニック]]></title><description><![CDATA[
 はじめに：理論をコードへ！コンテキストとプロンプトを組み合わせたAI対話の実践
皆さん、こんにちは！AI開発の冒険、第7回です。前回までの道のりで、私たちはAIの能力を引き出す「プロンプトエンジニアリング」の基礎（第5回）と、AIの理解を深めるための「構造化コンテキスト情報」をJSONで設計するパターン（第6回、MCPの核心技術）について学んできました。
それぞれの要素技術は理解できたものの、「じゃあ、実際にこれらをどう組み合わせて、意味のあるAIアプリケーションを作るの？」という疑問が湧いてきている頃ではないでしょうか。まさに今回のテーマは、その疑問に答える**「総合演習」**です...]]></description><link>https://zenn.dev/querypie/articles/a61140e9736831</link><guid isPermaLink="true">https://zenn.dev/querypie/articles/a61140e9736831</guid><pubDate>Wed, 28 May 2025 15:11:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wx8NlqMg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8OpenAI%2520API%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25EF%25BC%2581%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AEMCP%25E9%2596%258B%25E7%2599%25BA%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590%25E7%25AC%25AC7%25E5%259B%259E%25E3%2580%2591%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E3%2581%25AEOpenAI%2520A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:QueryPie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MzUyMzdkYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>QueryPie</dc:creator></item><item><title><![CDATA[[競プロ] 高級repマクロ]]></title><description><![CDATA[Pythonの for i in range(...) をC++でも書けるようにするマクロ

usage
+---------------------------+---------------------------+
|  Python range syntax      |  Rich rep macro (C++)     |
+---------------------------+---------------------------+
|  for i in range(b)        |  rep(i, b)                |
|  for i in ...]]></description><link>https://zenn.dev/uchi8977/articles/cf66092d816a3c</link><guid isPermaLink="true">https://zenn.dev/uchi8977/articles/cf66092d816a3c</guid><pubDate>Wed, 28 May 2025 14:39:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a-M9LtZd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%255D%2520%25E9%25AB%2598%25E7%25B4%259Arep%25E3%2583%259E%25E3%2582%25AF%25E3%2583%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchi8977%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUhTMFFUWldLbjBxMkxsQS1CRmc2czJ4U2g1V2d1UnJUYVBnTEZVRzJ3LS1IOENSbz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uchi8977</dc:creator></item><item><title><![CDATA[Frigner-Killeen(フリグナー・キリーン)検定｜等分散性の検定]]></title><description><![CDATA[
 概要
2つ以上の独立したグループ間で分散の等質性（等分散性）を検定するノンパラメトリック検定方法

 主な用途



パターン
説明
実務ユースケース




等分散性の確認
2群間の分散が等しいかを検定
施策別グループでの売上やCV率比較におけるグループ間の等分散性確認 （前提条件確認）


グループ間のばらつき比較
グループ間で数値のばらつきに差があるかどうかを検定
3県（東京・神奈川・埼玉）での支出を比較し、ばらつきに差があるかを検証



!
正規分布を仮定しないノンパラメトリック検定のため、データに歪みや外れ値がある場合でも適用可能であり、Levene検定やBrown-Fo...]]></description><link>https://zenn.dev/bambi_ds/articles/096489a491beda</link><guid isPermaLink="true">https://zenn.dev/bambi_ds/articles/096489a491beda</guid><pubDate>Wed, 28 May 2025 13:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h70CntKT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Frigner-Killeen%2528%25E3%2583%2595%25E3%2583%25AA%25E3%2582%25B0%25E3%2583%258A%25E3%2583%25BC%25E3%2583%25BB%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%2529%25E6%25A4%259C%25E5%25AE%259A%25EF%25BD%259C%25E7%25AD%2589%25E5%2588%2586%25E6%2595%25A3%25E6%2580%25A7%25E3%2581%25AE%25E6%25A4%259C%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Bambi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYTczMzU2NmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Bambi</dc:creator></item><item><title><![CDATA[DuckduckGo Searchを使った簡易リモートGradio MCP Serverを作ってみた]]></title><description><![CDATA[Gradio で簡単に MCP Server を作ることができるようになったみたいなので、試してみました。
https://www.gradio.app/guides/building-mcp-server-with-gradio
最初は単純にローカルで動かして満足したんですが、Gradio を開発しているの Hugging Face なので、Space にコードをおけば、簡単なリモート mcp サーバーに出来るのではと思い試してみました。

 プロジェクト作成
uv init gradio-mcp-server
cd gradio-mcp-server

 Gradio と duckd...]]></description><link>https://zenn.dev/00/articles/gradio-mcp-server</link><guid isPermaLink="true">https://zenn.dev/00/articles/gradio-mcp-server</guid><pubDate>Wed, 28 May 2025 12:35:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0EZ7KQUC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DuckduckGo%2520Search%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588Gradio%2520MCP%2520Server%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koji%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1MTIwOWU2Y2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koji</dc:creator></item><item><title><![CDATA[A2A Samples: Hello World Agent]]></title><description><![CDATA[

 プロジェクト概要
これはA2A（Agent-to-Agent）SDKに基づくシンプルなHello Worldエージェントの例です。このプロジェクトでは、ユーザーメッセージに応答し、シンプルな挨拶を返すことができる基本的なインテリジェントエージェントサーバーの作成方法を示します。

 依存関係バージョンの説明

 Pythonバージョン要件

Python &gt;= 3.10


 主要依存関係パッケージ



パッケージ名
バージョン
用途




a2a-sdk
&gt;= 0.2.5
A2Aコア SDK、エージェントフレームワークを提供


uvicorn
&gt;= 0.3...]]></description><link>https://zenn.dev/czmilo/articles/42b4d25bb34671</link><guid isPermaLink="true">https://zenn.dev/czmilo/articles/42b4d25bb34671</guid><pubDate>Wed, 28 May 2025 11:40:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JpewErQ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:A2A%2520Samples%253A%2520Hello%2520World%2520Agent%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:milo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1ViZDhTc2tuMVIwekdDeEdoX05MbUdISW1pV21UaDdZdnBhSmR2WDM3V2JzWlJEUks9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>milo</dc:creator></item><item><title><![CDATA[魔改造 Lambdaの250MB制限を突破してみる in Python]]></title><description><![CDATA[
 lambdaの 250MB制限とは？
Lambdaのコード、またライブラリ、そのライブラリが参照するファイルを全て含めてlambdaに乗せられるファイル容量は250MBまでとなっています。
https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/gettingstarted-limits.html
https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/creating-deleting-layers.html
これは lambda layerにおいてもそうですし、一度zipにまとめてS3経由...]]></description><link>https://zenn.dev/hirayuki/articles/ff2d3762eae766</link><guid isPermaLink="true">https://zenn.dev/hirayuki/articles/ff2d3762eae766</guid><pubDate>Wed, 28 May 2025 11:29:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DPbZuyh---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25AD%2594%25E6%2594%25B9%25E9%2580%25A0%2520Lambda%25E3%2581%25AE250MB%25E5%2588%25B6%25E9%2599%2590%25E3%2582%2592%25E7%25AA%2581%25E7%25A0%25B4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520in%2520Python%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hirayuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzYmU5ZDM0OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hirayuki</dc:creator></item><item><title><![CDATA[機械学習の実装：教科書は縦ベクトルなのに、なぜPythonでは横ベクトルが一般的なの？]]></title><description><![CDATA[
 🔹 教科書では「縦ベクトル」が一般的な理由


線形代数の標準的な表記に従っているから
数学の教科書では、

   \mathbf{x} = \begin{bmatrix} x_1 \\ x_2 \\ \vdots \\ x_n \end{bmatrix}
   
のように**縦ベクトル（列ベクトル）**で表現するのが一般的です。


行列積と一致する形だから
重み行列 W を使った入力との線形結合も、

   Wx + b
   
と自然な形で書けるためです。
（このとき、W は出力次元×入力次元の行列）




 🔹 Python（特にNumPyやPyTorch）で「横ベクトル」...]]></description><link>https://zenn.dev/n_ryosuke/articles/8bae3f421a1905</link><guid isPermaLink="true">https://zenn.dev/n_ryosuke/articles/8bae3f421a1905</guid><pubDate>Wed, 28 May 2025 05:41:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lu6-eRzY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%259A%25E6%2595%2599%25E7%25A7%2591%25E6%259B%25B8%25E3%2581%25AF%25E7%25B8%25A6%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%25AB%25E3%2580%2581%25E3%2581%25AA%25E3%2581%259CPython%25E3%2581%25A7%25E3%2581%25AF%25E6%25A8%25AA%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2581%258C%25E4%25B8%2580%25E8%2588%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NR%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWxEQi1TSE4wMUNIQmUxbjVNdDdnRU82bl8wLXdFdlZSLVA3TUZJWlpYYzRfeXJ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NR</dc:creator></item><item><title><![CDATA[Python/CVE-2025-4516 について]]></title><description><![CDATA[
 CVE-2025-4516 の件、PoC
FreeBSD　pkg audit で　2025/05/28 現在でも解決されていない問題がありましたので記録しておきます。

CVE-2025-4516は、PythonのCPythonにおけるUse-After-Free（解放後使用）の脆弱性です。この問題はbytes.decode("unicode_escape", error="ignore|replace")を使用した際に発生し、use-after-freeの脆弱性によってクラッシュが引き起こされる可能性があります。

 技術的な詳細
エラーハンドラーが使用される際、UnicodeDe...]]></description><link>https://zenn.dev/hikosakasohtaro/articles/3396e1d8d2cd4a</link><guid isPermaLink="true">https://zenn.dev/hikosakasohtaro/articles/3396e1d8d2cd4a</guid><pubDate>Wed, 28 May 2025 01:19:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rh4JGXk0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%252FCVE-2025-4516%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BD%25A6%25E5%259D%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmOThiNmFhZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>彦坂</dc:creator></item><item><title><![CDATA[FastAPIのOpenAPIの出力メモ]]></title><description><![CDATA[
 概要
FastAPIでSwagger UIを生成するのは簡単ですが、設定できるオプションによって表示がどのように変わるのかを解説した記事がぱっとで見当たりませんでした。
そこで、自分で調べた結果を整理してご紹介します。
今回もソースコードはGitHubにあげていますので参考にしてください
https://github.com/merutin/fastapi-api

 前提知識

 OpenAPI
バックエンドとフロントエンドの境界でルールを決めるためのツールの一つです。
ぱっと試すには Swagger Editor が便利です
https://swagger.io/specific...]]></description><link>https://zenn.dev/team_delta/articles/a54b32202b9252</link><guid isPermaLink="true">https://zenn.dev/team_delta/articles/a54b32202b9252</guid><pubDate>Wed, 28 May 2025 00:49:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Odg6WJC4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25AEOpenAPI%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:merutin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjRiYjM4NGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DELTA%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjOGJlM2JjOTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>merutin</dc:creator></item><item><title><![CDATA[Strands Agents を任意のリージョン・推論モデルで利用する]]></title><description><![CDATA[
 はじめに
プログデンスの圓佛です。 先日、AWS が GitHub で Strands Agents を公開しました。 Strands Agents については AWS Blog で紹介されています。

Introducing Strands Agents, an Open Source AI Agents SDK
Strands Agents – オープンソース AI エージェント SDK の紹介

この記事中で Strands Agents は「Strands Agents は、わずか数行のコードで AI エージェントを構築・実行するモデル駆動型アプローチを採用したオープンソース...]]></description><link>https://zenn.dev/progdence/articles/aaf46a10c1edeb</link><guid isPermaLink="true">https://zenn.dev/progdence/articles/aaf46a10c1edeb</guid><pubDate>Wed, 28 May 2025 00:45:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bUL89-uE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Strands%2520Agents%2520%25E3%2582%2592%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25BB%25E6%258E%25A8%25E8%25AB%2596%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:enbutsu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNTg2NWZiY2IuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%2587%25E3%2583%25B3%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZS5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enbutsu</dc:creator></item><item><title><![CDATA[Python再訪:柔軟かつ複雑さを抑えた実装の挑戦 - 直和・ダックタイピング]]></title><description><![CDATA[
 はじめに
筆者は普段、趣味でGoを書き仕事で諸々のWebフレームワークを触っています。昔データ解析のために書き捨てのPythonを書いたことはありますが、ある程度の規模のPythonプログラムは書いたことがありません。この度仕事でPythonに再会する機会があり、「あ、こういうことが出来るんだ！」との気づきがあったため記事にまとめることにしました。

 本記事の着地点

リクエストに応じて振る舞いを多様に変えるAPIを設計。

Tagged Unionにより複雑さを抑えたAPIリクエストを実現。
ソフトウェア内部ではダックタイピングで振る舞いを変える。
上記を実現するためにPydan...]]></description><link>https://zenn.dev/foxtail88/articles/flexible_robust_python</link><guid isPermaLink="true">https://zenn.dev/foxtail88/articles/flexible_robust_python</guid><pubDate>Tue, 27 May 2025 21:49:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K8EVZSJ1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E5%2586%258D%25E8%25A8%25AA%253A%25E6%259F%2594%25E8%25BB%259F%25E3%2581%258B%25E3%2581%25A4%25E8%25A4%2587%25E9%259B%2591%25E3%2581%2595%25E3%2582%2592%25E6%258A%2591%25E3%2581%2588%25E3%2581%259F%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E6%258C%2591%25E6%2588%25A6%2520-%2520%25E7%259B%25B4%25E5%2592%258C%25E3%2583%25BB%25E3%2583%2580%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxZjIzZDE4NGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkoh</dc:creator></item><item><title><![CDATA[CAEファイルをpythonでより素早く処理する]]></title><description><![CDATA[
久しぶりの記事です。


 今回やること

CAEデータをpythonで処理しようとすると、どうしても処理速度が遅いなぁ～と感じます。
特に、接点やエレメントなど数が多い処理を挟むと顕著に表れてきてしまいます。実際、自分の職場で扱っているくらいの規模になると下手すると30分とかそれ以上かかってしまう時もありました。
これでは、いくら自動化できます！といっても遅くて使う気になってもらえません。
どうしたら早くできるかな～と考えていて、処理が速いらしいdataframe型で接点などを保存するようにしてみました。


 dataframe型のどこが便利か？


前回記事での辞書型に比べて、保...]]></description><link>https://zenn.dev/cae_taka/articles/b8ce76d3c4f0c5</link><guid isPermaLink="true">https://zenn.dev/cae_taka/articles/b8ce76d3c4f0c5</guid><pubDate>Tue, 27 May 2025 15:12:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1mRmXX6V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CAE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592python%25E3%2581%25A7%25E3%2582%2588%25E3%2582%258A%25E7%25B4%25A0%25E6%2597%25A9%25E3%2581%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taka</dc:creator></item><item><title><![CDATA[JupyterNotebookでuvで設定した環境のカーネルを使う]]></title><description><![CDATA[
 記事概要
uv仮想環境のカーネルを追加/削除する方法を記載します。

 想定シナリオ
my-python-repoというuv管理のPythonリポジトリがあり、このリポジトリのライブラリ環境のカーネルを作ってJupyterNotebook上で作業したいとします。

 カーネル追加手順

 1. my-python-repoをclone
まずmy-python-repoを持ってきます。
git clone git@xxx.org:myorg-dev/my-python-repo.git

 2. uv.lockから仮想環境を作成する
cloneしてきたmy-python-repoにcd...]]></description><link>https://zenn.dev/teihenn/articles/202504-uv-jupyter-kernel</link><guid isPermaLink="true">https://zenn.dev/teihenn/articles/202504-uv-jupyter-kernel</guid><pubDate>Tue, 27 May 2025 14:46:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lN4BAvNh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JupyterNotebook%25E3%2581%25A7uv%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNmIwMjg3YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyossy</dc:creator></item><item><title><![CDATA[PythonとOpenAI APIで実践！MCP開発入門【第6回】コンテキスト情報」のJSON設計パターンとPythonでの実装]]></title><description><![CDATA[
 はじめに：プロンプトの限界を超える「構造化コンテキスト」という武器
皆さん、こんにちは！AI開発の冒険、第6回です。前回（第5回）は、プロンプトエンジニアリングの基本として、AIに「伝わる」指示の出し方や、ゼロショット・ワンショット・フューショットといったテクニックを学びました。効果的なプロンプトは、AIの応答品質を劇的に向上させる「魔法の呪文」のようでしたね。
しかし、私たちがAIに伝えたい「背景情報」や「状況」は、時としてプロンプト内に直接記述するには複雑すぎたり、長大すぎたりします。例えば、ユーザーの詳細なプロフィール、過去の長い会話履歴、参照すべき外部ドキュメントの内容などで...]]></description><link>https://zenn.dev/querypie/articles/997845b5599b03</link><guid isPermaLink="true">https://zenn.dev/querypie/articles/997845b5599b03</guid><pubDate>Tue, 27 May 2025 14:42:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aUrhzZsx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8OpenAI%2520API%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25EF%25BC%2581MCP%25E9%2596%258B%25E7%2599%25BA%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590%25E7%25AC%25AC6%25E5%259B%259E%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%2583%2585%25E5%25A0%25B1%25E3%2580%258D%25E3%2581%25AEJSON%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25A8Pyt...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:QueryPie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MzUyMzdkYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>QueryPie</dc:creator></item><item><title><![CDATA[Bartlett(バートレット)検定｜等分散性の検定]]></title><description><![CDATA[
 概要
2つ以上の独立したグループ間で分散の等質性（等分散性）を検定する方法。

 主な用途



パターン
説明
実務ユースケース




等分散性の確認
2群間の分散が等しいかを検定
施策別グループでの売上やCV率比較におけるグループ間の等分散性確認 （前提条件確認）


グループ間のばらつき比較
グループ間で数値のばらつきに差があるかどうかを検定
3県（東京・神奈川・埼玉）での支出を比較し、ばらつきに差があるかを検証



!
Bartlett検定は2群以上に対応し、Student/Welchのt検定やANOVA（分散分析）の前提条件である等分散性の確認に利用されるが、各群が正規...]]></description><link>https://zenn.dev/bambi_ds/articles/1a748b5d184dad</link><guid isPermaLink="true">https://zenn.dev/bambi_ds/articles/1a748b5d184dad</guid><pubDate>Tue, 27 May 2025 13:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ssRIOu8C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bartlett%2528%25E3%2583%2590%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%2529%25E6%25A4%259C%25E5%25AE%259A%25EF%25BD%259C%25E7%25AD%2589%25E5%2588%2586%25E6%2595%25A3%25E6%2580%25A7%25E3%2581%25AE%25E6%25A4%259C%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Bambi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYTczMzU2NmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Bambi</dc:creator></item><item><title><![CDATA[#102　AWS CodeGuru Reviewerを使ってコードレビューをしてみる]]></title><description><![CDATA[
 はじめに
ソフトウェア開発の中でコードレビューは、コードの品質を保つために欠かせないプロセスです。しかし、手動でのレビューは時間とリソースを大量に消費します。そこで登場するのが AWS CodeGuru Reviewer です。本記事では、CodeGuru Reviewerとは何か、そしてセットアップ手順を解説します。

 AWS CodeGuru Reviewerとは？
AWS CodeGuru Reviewerは、機械学習を利用してコードレビューを自動化するサービスです。CodeGuru Reviewerは、JavaやPythonのコードベースを分析し、コードのバグや非効率な部分...]]></description><link>https://zenn.dev/nxted_sapporo/articles/3463ccba271611</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/3463ccba271611</guid><pubDate>Tue, 27 May 2025 12:30:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gXU0kThR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523102%25E3%2580%2580AWS%2520CodeGuru%2520Reviewer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[snowflake-connectorを使用する]]></title><description><![CDATA[
 はじめに
snowflakeをpythonライブラリのsnowflake-connectorを使ってキーペア認証で操作をしてみました。

 準備

 インストール
python &gt;= 3.8が条件です。
$ pip install snowflake-connector-python
バージョン管理ツールpoetryを使って仮想環境に使いたい場合は
$ pip install poetry
$ poetry new snowflake_python
$ poetry config virtualenvs.in-project true
$ poetry add snowflak...]]></description><link>https://zenn.dev/wannyannyanwan/articles/ba36acd2e7ffd9</link><guid isPermaLink="true">https://zenn.dev/wannyannyanwan/articles/ba36acd2e7ffd9</guid><pubDate>Tue, 27 May 2025 11:06:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dF1ZXGHr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:snowflake-connector%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mikage_Sumiyoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiNTBkZjZiMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mikage_Sumiyoshi</dc:creator></item></channel></rss>