<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 15 Sep 2025 01:40:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[LeetCode 929. Unique Email Addresses (Python3)]]></title><description><![CDATA[
 はじめに
LeetCode 「929. Unique Email Addresses」の問題を Python3 で解きました。

 問題
https://leetcode.com/problems/unique-email-addresses/description/

 問題文
Every valid email consists of a local name and a domain name, separated by the '@' sign. Besides lowercase letters, the email may contain one or more '.' ...]]></description><link>https://zenn.dev/shimpo/articles/leet-code-929-20250915</link><guid isPermaLink="true">https://zenn.dev/shimpo/articles/leet-code-929-20250915</guid><pubDate>Sun, 14 Sep 2025 23:31:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RLokSEod--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520929.%2520Unique%2520Email%2520Addresses%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimpo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMzhkYTExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimpo</dc:creator></item><item><title><![CDATA[PythonとActivityPubでリマインダーBotを作ろう]]></title><description><![CDATA[先日、apkitというライブラリを使って、簡単なActivityPubのBotを作ってみました。この記事では、その際に書いたコードを元に、どうやって作ったのかを解説していこうと思います。

 どんなBot？
今回作ったのは、メンションで時間を指定すると、その時間後にリプライで通知してくれる、というシンプルなリマインダーBotです。
例えば、「@reminder@your.host.com 10m オーブンを確認して！」のようにメンションを送ると、10分後に「🔔 Reminder for @your_username: オーブンを確認して！」といった感じのリプライを返してくれます。

 使...]]></description><link>https://zenn.dev/amasecocoa/articles/1449d43069d549</link><guid isPermaLink="true">https://zenn.dev/amasecocoa/articles/1449d43069d549</guid><pubDate>Sun, 14 Sep 2025 18:05:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nXi2-jUA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8ActivityPub%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BCBot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%2598%25E7%2580%25AC%25E3%2581%2593%25E3%2581%2593%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1NzE3YTBlMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>甘瀬ここあ</dc:creator></item><item><title><![CDATA[PythonAnywhereを待つのはやめよう。FastAPIをオンラインにデプロイする方法]]></title><description><![CDATA[
FastAPIはモダンなPythonウェブフレームワークです。登場以来、その優れたパフォーマンス、使いやすさ、強力な機能のおかげで、開発者コミュニティ内で絶大な人気を急速に博しました。Flaskのような古いフレームワークに取って代わるほどです。
しかし、FastAPIをオンラインにデプロイするのは、古いフレームワークほど簡単ではありません。
PythonAnywhereは、非常にシンプルなユーザーインターフェースを提供し、小規模プロジェクトの無料ティアがあるため、多くの人がPythonプロジェクトのデプロイに使用しています。
残念ながら、PythonAnywhereはFastAPIをサ...]]></description><link>https://zenn.dev/bluemoon529/articles/d17a128f6c6708</link><guid isPermaLink="true">https://zenn.dev/bluemoon529/articles/d17a128f6c6708</guid><pubDate>Sun, 14 Sep 2025 15:39:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lBPKPGY5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PythonAnywhere%25E3%2582%2592%25E5%25BE%2585%25E3%2581%25A4%25E3%2581%25AE%25E3%2581%25AF%25E3%2582%2584%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%25E3%2580%2582FastAPI%25E3%2582%2592%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluemoon529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bluemoon529</dc:creator></item><item><title><![CDATA[ZennのGitHub連携で柔軟なフォルダ構成を使う]]></title><description><![CDATA[
 やりたいこと
ZennのGitHub連携は便利ですが、以下のようなフォルダ構成を強要されます。
articles/
  ├── article1.md
  └── article2.md
images/
  ├── image1.png
  └── image2.png
まあこれはこれで良いのですが、VSCodeの画像貼り付けプラグインや管理の都合上、自分は以下のようなフォルダ構成のほうが好みです。
articles/
  ├── 2025/
  │   ├── 20250101/
  │   │   ├── article1.md
  │   │   └── image1.png
...]]></description><link>https://zenn.dev/arika/articles/20250914-publish_to_zenn_another_folder_structure</link><guid isPermaLink="true">https://zenn.dev/arika/articles/20250914-publish_to_zenn_another_folder_structure</guid><pubDate>Sun, 14 Sep 2025 12:33:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eF85CPIa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25AEGitHub%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25A7%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:arika%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOGQzNjQ5OGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>arika</dc:creator></item><item><title><![CDATA[【Flask入門(4)】フォーム送信データを一覧表示するまで]]></title><description><![CDATA[
 【Flask入門】フォーム送信データを一覧表示するまで
前回はフォームから送信した内容を受け取って画面に表示するところまで実装しました。
今回はさらに進めて、送信した学習ログを 一覧表示 できるようにします。

 目標

フォームから入力した学習ログをサーバー側で記録
記録したログを一覧で表示
複数回送信するとリストが増えていく


 1．app.py を修正する
app.py に以下のコードを書きます。
from flask import Flask, request, render_template

app = Flask(__name__)

@app.route("/")
...]]></description><link>https://zenn.dev/abs_abe/articles/a86e9dcab5785b</link><guid isPermaLink="true">https://zenn.dev/abs_abe/articles/a86e9dcab5785b</guid><pubDate>Sun, 14 Sep 2025 12:21:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GrC32l7T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Flask%25E5%2585%25A5%25E9%2596%2580%25284%2529%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E9%2580%2581%25E4%25BF%25A1%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEABS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzgtcmdpOWVUVGJva09LTzlHai1xaGVOS1F2d2lmQ1NUQkN6ODM4dENETXhXWFVrOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社ABS</dc:creator></item><item><title><![CDATA[[実践ADK] コードとドキュメントの差異を検出・自動更新する adk_documentationエージェント]]></title><description><![CDATA[こんにちは、ドキュメントファーストよりコードファーストが好きな、サントリーこと大橋です。
Agent Development Kit (ADK)のリポジトリでは、開発・運用をサポートするために様々なAIエージェントが稼働しています。以前の記事では、GitHubのDiscussionに寄せられた質問に自動で回答する「ADK Answering Agent」を紹介しました。
https://zenn.dev/suntory/articles/16d04202edb5a1
今回は、ADKリポジトリで稼働するもう一つの興味深いエージェント、「adk_documentation」について、その仕組...]]></description><link>https://zenn.dev/soundtricker/articles/a487c5f129271b</link><guid isPermaLink="true">https://zenn.dev/soundtricker/articles/a487c5f129271b</guid><pubDate>Sun, 14 Sep 2025 09:32:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M5ybmTqh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%25AE%259F%25E8%25B7%25B5ADK%255D%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A8%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%25B7%25AE%25E7%2595%25B0%25E3%2582%2592%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%25BB%25E8%2587%25AA%25E5%258B%2595%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%2520adk_documentation%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keisuke%2520Oohashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gzVXhkWXNLcWpLdFhESXlXRk50UHZyZUxmN2dXaFVsOWNBSVRHLVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keisuke Oohashi</dc:creator></item><item><title><![CDATA[【Azure OpenAI 40日】Day12：Blob追加→Search増分インデクシングを一気通貫]]></title><description><![CDATA[
 TL;DR

Blob に追補 → Indexer を手動実行して増分取り込み。

status: success / failed=0、document_count 増を確認。
ユニーク語（Day12Marker）で新規ファイルのヒットを確定。
コストは Search/Blob の I/O＋呼び出し数。**429対策（バックオフ）**は実装推奨。


 今日のゴール

新規ドキュメントを追加し、増分インデクシング→検索で反映確認。


 目的と背景


目的: Blob や Azure Cognitive Search のデータを安全に更新し、即時に結果へ反映できる運用ルーチンを確...]]></description><link>https://zenn.dev/masau/articles/azure-openai-40days-day12-reindexing</link><guid isPermaLink="true">https://zenn.dev/masau/articles/azure-openai-40days-day12-reindexing</guid><pubDate>Sun, 14 Sep 2025 07:16:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kNcbQOzG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Azure%2520OpenAI%252040%25E6%2597%25A5%25E3%2580%2591Day12%25EF%25BC%259ABlob%25E8%25BF%25BD%25E5%258A%25A0%25E2%2586%2592Search%25E5%25A2%2597%25E5%2588%2586%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E4%25B8%2580%25E6%25B0%2597%25E9%2580%259A%25E8%25B2%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasaU_Tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTZmODk1MmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MasaU_Tech</dc:creator></item><item><title><![CDATA[【Python】yieldでなんちゃって非同期処理]]></title><description><![CDATA[
 yieldの使い道
夫れPythonに限らずプログラミング言語には、頻りに使う機能もあれば、特別の用でもなければ殆ど使うことのない機能というものもあるものです。斯く言う私はPythonに初めて触れてから数年経つものの、yieldをまともに扱った場面はたった一度しかありませんでした。
そもそも、私はyieldという語を日常で見たことがありません。そこで日就社刊行の英和字彙を見てみますと、次のようにあります。

柴田昌吉, 子安峻 共編『英和字彙 : 附・音插図』,日就社,1873. 国立国会図書館デジタルコレクション https://dl.ndl.go.jp/pid/1871572 (...]]></description><link>https://zenn.dev/amenaruya/articles/662cd7009d5400</link><guid isPermaLink="true">https://zenn.dev/amenaruya/articles/662cd7009d5400</guid><pubDate>Sun, 14 Sep 2025 06:45:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a06SJvd8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591yield%25E3%2581%25A7%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2583%25E3%2581%25A3%25E3%2581%25A6%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:amenaruya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwZDg5YWZmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>amenaruya</dc:creator></item><item><title><![CDATA[🖼️ FastAPI 実践入門：第八歩目で学ぶ 画像処理とPillowの活用]]></title><description><![CDATA[
 🧩 はじめに
第八歩目では、アップロードされた画像に対して「画像処理」を加える方法を学習します。ここでは、Pythonの画像処理ライブラリ「Pillow（PIL）」を使って、サムネイルの生成、画像のリサイズ、フォーマットの変換、グレースケール化、画像の形式変換など、WebアプリやAPIでよく使われる実用的な処理を詳細に解説します。
Pillowは軽量でありながら非常に強力な機能を持っており、FlaskやFastAPIといったWebフレームワークと組み合わせることで、画像処理をAPIの一部として取り入れることができます。

 🔧 Pillowのインストールと基本の使い方
まずは、Pil...]]></description><link>https://zenn.dev/oit2003/articles/69583246a97321</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/69583246a97321</guid><pubDate>Sun, 14 Sep 2025 06:45:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qy06boVJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520FastAPI%2520%25E5%25AE%259F%25E8%25B7%25B5%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E7%25AC%25AC%25E5%2585%25AB%25E6%25AD%25A9%25E7%259B%25AE%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%2520%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8Pillow%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[【Python入門】UNIXドメインソケットで学ぶプロセス間通信の実装例（SOCK_DGRAM編）]]></title><description><![CDATA[
 はじめに
以前、以下の記事では、プロセス間通信をUNIXドメインソケット・ソケットタイプ SOCK_STREAM を
使ってクライアント・サーバ簡易プログラムを実装しました。

 簡易プログラムを作成
CLI だけで動作するクライアント・サーバを用意しました。
クライアントが送信したデータをサーバが受け取り、加工してレスポンスを返します。

 クライアント

文字列をサーバに送信
サーバからレスポンスを受け取り、プログラム終了


 サーバ

クライアントから文字列を受け取り
受け取った文字列に文字列を追加してクライアントにレスポンス
レスポンス送信後は他のリクエストを待機


 開...]]></description><link>https://zenn.dev/mabo23/articles/da7a9cedfbd2e4</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/da7a9cedfbd2e4</guid><pubDate>Sun, 14 Sep 2025 06:26:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RuiB15Zg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591UNIX%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E9%2596%2593%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%25EF%25BC%2588SOCK_DGRAM%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[Windows 上で PDF から画像に変換するツールを作る]]></title><description><![CDATA[
 TL;DR

PDF から画像に変換するツールを WSL 上で動かしてみ隊
ChatGPT にいろいろお願いしていい感じにできた
セキュリティー的によくわからないやつに頼らなくていいので安心


 はじめに
だれかの資料を引用しながら自分の資料を作成する、というシチュエーション、ちょいちょいあるかなと思いますが、資料が PDF でしか提供いただけない、というケースも多々あるかと思います。
そういう時に必要になる、PDF から画像に変換する方法、一番簡単なのはそのままスクリーンショットを取ってしまうことかなと思いますが、余白が気になったり、解像度が気になったり、どうも気になっちゃいます...]]></description><link>https://zenn.dev/skmkzyk/articles/pdf-to-image-wsl</link><guid isPermaLink="true">https://zenn.dev/skmkzyk/articles/pdf-to-image-wsl</guid><pubDate>Sun, 14 Sep 2025 06:09:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hLzPjBva--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E4%25B8%258A%25E3%2581%25A7%2520PDF%2520%25E3%2581%258B%25E3%2582%2589%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:skmkzyk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pYcVVMY1BuTE5JRERHNkt6a3JZMnAzVVQzRFdkb2F5WUZDaVFENTJJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>skmkzyk</dc:creator></item><item><title><![CDATA[LeetCode 387. First Unique Character in a String (Python3)]]></title><description><![CDATA[
 はじめに
LeetCode 「387. First Unique Character in a String」の問題を Python3 で解きました。

 問題
https://leetcode.com/problems/first-unique-character-in-a-string/description/

 問題文
Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.
和訳
文字列sが与えられ...]]></description><link>https://zenn.dev/shimpo/articles/leet-code-387-20250914</link><guid isPermaLink="true">https://zenn.dev/shimpo/articles/leet-code-387-20250914</guid><pubDate>Sun, 14 Sep 2025 05:26:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LaoqW94n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520387.%2520First%2520Unique%2520Character%2520in%2520a%2520String%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimpo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMzhkYTExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimpo</dc:creator></item><item><title><![CDATA[Gemma 3 270Mのファインチューニング]]></title><description><![CDATA[
 初めに
GoogleからGemma 3 270Mが出ましたので、試してみました。
unsolothaiからファインチューニングのnotebookが公開されています。
これを参考にlivedoor ニュースコーパスのテキスト分類を試してみます。
accuracy = 95%でよいですね！


 インストール
%%capture
import os, re
if "COLAB_" not in "".join(os.environ.keys()):
    !pip install unsloth
else:
    # Do this only in Colab notebooks! ...]]></description><link>https://zenn.dev/piment/articles/926a73b12b5844</link><guid isPermaLink="true">https://zenn.dev/piment/articles/926a73b12b5844</guid><pubDate>Sun, 14 Sep 2025 05:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EQ1J5zaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemma%25203%2520270M%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぴーまん</dc:creator></item><item><title><![CDATA[【VScode】一瞬でできるpythonで自動import]]></title><description><![CDATA[
 概要
VSCode で Python コードを書く際、関数やクラスを入力すると自動的に import 文を補完してくれる機能を有効にする方法を紹介します。

 設定方法
VSCode の設定ファイル settings.json に以下の1行を追加するだけです。
"python.analysis.autoImportCompletions": true

 完全な設定例
ユーザー設定またはプロジェクトの.vscode/settings.jsonに以下を記載。

settings.json
{
    "python.analysis.autoImportCompletions": tr...]]></description><link>https://zenn.dev/peishim/articles/f36f3532cfd6c3</link><guid isPermaLink="true">https://zenn.dev/peishim/articles/f36f3532cfd6c3</guid><pubDate>Sun, 14 Sep 2025 04:01:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tJXS-VeH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590VScode%25E3%2580%2591%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bpython%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595import%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:peishim%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNmIxNjYxMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>peishim</dc:creator></item><item><title><![CDATA[LeetCode 349. Intersection of Two Arrays (Python3)]]></title><description><![CDATA[
 はじめに
LeetCode 「349. Intersection of Two Arrays」の問題を Python3 で解きました。

 問題
https://leetcode.com/problems/intersection-of-two-arrays/description/

 問題文
Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the ...]]></description><link>https://zenn.dev/shimpo/articles/leet-code-349-20250914</link><guid isPermaLink="true">https://zenn.dev/shimpo/articles/leet-code-349-20250914</guid><pubDate>Sun, 14 Sep 2025 02:24:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OH5w0KN9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520349.%2520Intersection%2520of%2520Two%2520Arrays%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimpo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMzhkYTExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimpo</dc:creator></item><item><title><![CDATA[GCPで学ぶMLOps #1 – GCPへのデプロイを体感する（Cloud Run × Flaskアプリ）]]></title><description><![CDATA[
 GCPで学ぶMLOps #1 – CI/CDを体感する（Cloud Run × Flaskアプリ）
今回は CI/CDの基本をCloud Runで体感 してみます。
まずはCI/CDの前段として、Flaskで作ったシンプルなアプリをコンテナ化し、Artifact Registryにpush → Cloud Runにデプロイして動かし、GCPにサービスをデプロイする流れを体感します。

わかりやすかった記事
https://zenn.dev/google_cloud_jp/articles/cloudrun-deploy-pattern


 1. CI/CDとは？


CI (Con...]]></description><link>https://zenn.dev/kyoheyyy/articles/bc6edd5c79075f</link><guid isPermaLink="true">https://zenn.dev/kyoheyyy/articles/bc6edd5c79075f</guid><pubDate>Sat, 13 Sep 2025 08:28:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zaPF9sBV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCP%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6MLOps%2520%25231%2520%25E2%2580%2593%2520GCP%25E3%2581%25B8%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2582%2592%25E4%25BD%2593%25E6%2584%259F%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Cloud%2520Run%2520%25C3%2597%2520Flask%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyo-ds%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2ZjNmFiMWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyo-ds</dc:creator></item><item><title><![CDATA[PythonオブジェクトをRustで効率的に処理する - pyo3-arrowによるゼロコピー実装]]></title><description><![CDATA[
 FFI(Foreign Function Interface)の型変換のオーバーヘッド
RustとPythonを連携させるとき、悩ましい問題がデータの受け渡しです。
# ユーザは様々な形式でデータを渡してくる
import numpy as np
import pandas as pd

# 素数判定をRustで高速化したい
primes = rust_lib.is_prime_batch(np.array([2, 3, 4, 5, 6]))  # NumPy
primes = rust_lib.is_prime_batch([2, 3, 4, 5, 6])  # Python li...]]></description><link>https://zenn.dev/driller/articles/e02c2c244b3759</link><guid isPermaLink="true">https://zenn.dev/driller/articles/e02c2c244b3759</guid><pubDate>Sat, 13 Sep 2025 08:02:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DfAuJaPE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592Rust%25E3%2581%25A7%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2520-%2520pyo3-arrow%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25BC%25E3%2583%25AD%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:driller%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lPT1dLNnlQWE9BNndvZDFlYkxTQ0FLOGlpX1E3X2hqWmVwbDdJeUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>driller</dc:creator></item><item><title><![CDATA[【Python入門】UNIXドメインソケットで学ぶプロセス間通信の実装例（SOCK_STREAM編）]]></title><description><![CDATA[
 はじめに
プロセス間通信には、パイプ・名前付きパイプ・ソケットなどがあります。
ソケットはソケットドメインとソケットタイプの組み合わせでどのようにプロセス間通信を行なうかを決めることができます。
この記事では、以下の学習サイトで紹介されているUNIXドメインソケットを使ったクライアントとサーバのプロセス間通信の簡単な実装例（一部改良）を交えながら、ソケットの基本と処理の流れについて解説していきます。
参考サイト
https://recursionist.io/dashboard/course/31/lesson/1095

 ソケットとは
IBMさんの定義によると、ソケットとは以下の...]]></description><link>https://zenn.dev/mabo23/articles/9375a31ecb6265</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/9375a31ecb6265</guid><pubDate>Sat, 13 Sep 2025 06:25:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nbaVe5JX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591UNIX%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BD%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E9%2596%2593%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%25EF%25BC%2588SOCK_STREAM%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[LeetCode 49. Group Anagrams (Python3)]]></title><description><![CDATA[
 はじめに
LeetCode 「49. Group Anagrams」の問題を Python3 で解きました。

 問題
https://leetcode.com/problems/group-anagrams/description/

 問題文
Given an array of strings strs, group the anagrams together. You can return the answer in any order.
和訳
文字列の配列strsが与えられた場合、アナグラムをグループ化します。答えは任意の順序で返して構わない。

 例



Input: s...]]></description><link>https://zenn.dev/shimpo/articles/leet-code-49-20250913</link><guid isPermaLink="true">https://zenn.dev/shimpo/articles/leet-code-49-20250913</guid><pubDate>Sat, 13 Sep 2025 05:48:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4Q-bkQDd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%252049.%2520Group%2520Anagrams%2520%2528Python3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimpo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMzhkYTExZGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimpo</dc:creator></item><item><title><![CDATA[AI エージェント メッセージ履歴のトリミングと要約 (LangGraph)]]></title><description><![CDATA[エージェントは会話を繰り返したり、複数のツールを呼び出したりすると、メッセージ履歴がすぐに肥大化します。その結果、トークン数の増加によるコスト増加や、LLMの制約による性能低下といった問題に直面します。そこで重要になるのが、メッセージ履歴の管理です。この記事では、その代表的な方法である「トリミング」と「要約」を紹介します。


 メッセージ履歴のトリミング
トリミングとは、メッセージ履歴の一部を削除し、必要な部分だけを残すことでトークン数を削減する方法です。主に「最初」または「最後」から順に履歴を削っていきます。
pre_model_hook は、エージェントがモデルを呼び出す直前にメッ...]]></description><link>https://zenn.dev/anomura/articles/9c6541bfc53dbb</link><guid isPermaLink="true">https://zenn.dev/anomura/articles/9c6541bfc53dbb</guid><pubDate>Sat, 13 Sep 2025 05:27:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jcctnEun--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%2520%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%2520%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25AA%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E8%25A6%2581%25E7%25B4%2584%2520%2528LangGraph%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akira%2520N%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3AtbzlwWXR1elprWmdpVFZyYjVuU2JYODdKYTFDQ1hhdVFNY0VSUlZlaUp2SnJBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akira N</dc:creator></item></channel></rss>