<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 19 Oct 2024 07:42:54 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[WordPressのビジュアルエディター(TinyMCE)に複数の自作カスタムボタンを追加する方法]]></title><description><![CDATA[WordPressのビジュアルエディターにカスタムボタンを追加することで、コンテンツ作成の効率を大幅に向上させることができます。この記事では、複数のカスタムボタンを追加する方法と、リンク(a)タグの属性を保持する方法について、初心者にもわかりやすく解説します。
WordPressのビジュアルエディター(TinyMCE)に複数の自作カスタムボタンを追加する
https://gist.github.com/sarap422/b2b2b13580b092c610a0d929d50ba288

 1. 必要なファイル
カスタムボタンを追加するには、以下のファイルが必要です：

ボタンアイコン用の...]]></description><link>https://zenn.dev/sarap422/articles/e65b545face1ea</link><guid isPermaLink="true">https://zenn.dev/sarap422/articles/e65b545face1ea</guid><pubDate>Fri, 18 Oct 2024 17:10:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6ACXQKuW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WordPress%25E3%2581%25AE%25E3%2583%2593%25E3%2582%25B8%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%25BC%2528TinyMCE%2529%25E3%2581%25AB%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E8%2587%25AA%25E4%25BD%259C%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarap422%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarap422</dc:creator></item><item><title><![CDATA[【JavaScript】NovelAIのNovel部分をAPIで呼び出す]]></title><description><![CDATA[
 結論

各種パラメータは適当なので、適切にチューニングが必要

  // 送信するデータ（APIに渡すJSONデータ）
  const data = {
    // モデルに渡す入力データ。小説の書き出しやキャラクター設定などのテキストデータを指定する
    input: '吾輩は猫である。名前はまだない。',
    // 使用するモデルの指定
    model: 'genji-jp-6b-v2',
    parameters: {
      // 入力を文字列として扱うかどうか
      use_string: true,
      // 出力のランダム性を制御する...]]></description><link>https://zenn.dev/watarunakayama/articles/a2897642d06604</link><guid isPermaLink="true">https://zenn.dev/watarunakayama/articles/a2897642d06604</guid><pubDate>Fri, 18 Oct 2024 15:50:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y7ZTarqD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591NovelAI%25E3%2581%25AENovel%25E9%2583%25A8%25E5%2588%2586%25E3%2582%2592API%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvdy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru</dc:creator></item><item><title><![CDATA[【Nextjs】フォーム送信後にrouter.pushしつつ多重送信を防止したい]]></title><description><![CDATA[
 前提

Nextjs 14
react-hook-form


 発生した問題

お問い合わせフォームに同じ内容が複数回送信されてる
フロントエンドで送信中にボタンをdisabledにする処理がうまく動作していないっぽい
どうやらフォーム送信後にrouter.pushが実行完了してもページが切り替わるまでラグがあって、その間に送信ボタンのdisabledが解除されて多重送信されている様子


router.pushの挙動に関する調査：

Nextjs 14のApp Routeにおいては、router.pushはページ遷移先がレンダリングされるまで呼び出し元で待機する仕様な上に、非同期...]]></description><link>https://zenn.dev/watarunakayama/articles/c57e5cd562df65</link><guid isPermaLink="true">https://zenn.dev/watarunakayama/articles/c57e5cd562df65</guid><pubDate>Fri, 18 Oct 2024 14:47:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C-Faw2iA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Nextjs%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E9%2580%2581%25E4%25BF%25A1%25E5%25BE%258C%25E3%2581%25ABrouter.push%25E3%2581%2597%25E3%2581%25A4%25E3%2581%25A4%25E5%25A4%259A%25E9%2587%258D%25E9%2580%2581%25E4%25BF%25A1%25E3%2582%2592%25E9%2598%25B2%25E6%25AD%25A2%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvdy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru</dc:creator></item><item><title><![CDATA[JestのtoHaveBeenCalledWithで確認した引数が呼出後の変更に影響を受ける]]></title><description><![CDATA[
 はじめに
toHaveBeenCalledWithを使ってある関数が受け取った引数(オブジェクト)が想定通りか確認するテストを書いたとします。関数呼び出し後に引数として渡したオブジェクトの値を変更すると、toHaveBeenCalledWithの検証時に変更後の値で検証をしてしまい、関数は想定通りの引数を受け取ったにもかかわらずテストはNGとなってしまうというのが本記事ので取り扱う事象の概要です。
（筆者の忘備のために本記事を執筆しました）

 挙動を再現したサンプルコード
例えば、以下のようなテストを書いた場合、mockFunctionに渡された時点の値ではなく、後から変更された{...]]></description><link>https://zenn.dev/souemon/articles/3c954585833a0c</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/3c954585833a0c</guid><pubDate>Fri, 18 Oct 2024 12:40:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4cca7BGA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2581%25AEtoHaveBeenCalledWith%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%259F%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%258C%25E5%2591%25BC%25E5%2587%25BA%25E5%25BE%258C%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25AB%25E5%25BD%25B1%25E9%259F%25BF%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[ここはどこ -flutter_echarts その3]]></title><description><![CDATA[
 perspectiveはおしゃれだけど、ズレて見えるんです
『四次元年表』という、年表と地図のハイブリッドをつくっている。
前回は「ナニもない」宇宙空間をflutter_echartsの3D Scatterで表現したのだけれど、
今回は、地球上の話なので、地図や地球儀と組み合わせたい。

 まずxy平面に世界地図を書く
EChartsはもともとjsのライブラリなので、jsonのデータが読める。
当然、geo-jsonも読めるのだが、これがFlutterではサポートされていないらしい。
（イヤ、私が下手だというだけの話かもしれないが）
じゃあ、geo-jsonとjsonは何が違うか。
...]]></description><link>https://zenn.dev/flutteruniv_dev/articles/120a6af55911e3</link><guid isPermaLink="true">https://zenn.dev/flutteruniv_dev/articles/120a6af55911e3</guid><pubDate>Fri, 18 Oct 2024 11:11:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a-gRLdXb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2581%2593%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2593%2520-flutter_echarts%2520%25E3%2581%259D%25E3%2581%25AE3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A9%25E3%2582%2593%25E3%2581%2590%25E3%2582%258A%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0ODUxNDkwOTcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Flutter%25E5%25A4%25A7%25E5%25AD%25A6%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqQ2RNdHFjMF9fWVFUdkJndHR1R3plSnVVNW41ZXMyTzM0RDUzPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どんぐり</dc:creator></item><item><title><![CDATA[JavaScript(TypeScript)の ’==’ と ’＝＝＝’ の違いについて @初心者]]></title><description><![CDATA[
 javascriptの　’==’ と ’＝＝＝’ の演算子について
== と　=== の違いを聞かれたらパッと答えることができますか？
僕はできません。。。
ただ、ほぼほぼ業務では === の方をつかっていました。
改めて今回違いについて調べました。

 ==（等価演算子）
== は、等価演算子といい、簡単に言うとゆるい比較になります。
== は「等価演算子」と呼ばれ、比較する値の 型が違っても 自動的に型変換を行って比較します。
型変換が発生：比較前に、JavaScriptが両方の値を同じ型に変換します。
console.log(5 == '5'); // 出力: true
数字の...]]></description><link>https://zenn.dev/rionishino/articles/72f350ba330d24</link><guid isPermaLink="true">https://zenn.dev/rionishino/articles/72f350ba330d24</guid><pubDate>Fri, 18 Oct 2024 09:06:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vonlJbOX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2528TypeScript%2529%25E3%2581%25AE%2520%25E2%2580%2599%253D%253D%25E2%2580%2599%2520%25E3%2581%25A8%2520%25E2%2580%2599%25EF%25BC%259D%25EF%25BC%259D%25EF%25BC%259D%25E2%2580%2599%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2520%2540%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rio_nishino%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwYzg2OWY3YTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rio_nishino</dc:creator></item><item><title><![CDATA[Jestの__mocks__ディレクトリに気づかずハマった話 〜モックが勝手に値を返す理由〜]]></title><description><![CDATA[
 記事の概要
Jestのマニュアルモックの仕様をよく理解していなかったため、「mockReturnValueなどを設定していないのに、どうして値が返ってくるのだろう？」と疑問に思い、少し混乱してしまいました。そこで、その体験を忘れないよう忘備録としてこの記事を書きました。
特に、__mocks__ディレクトリの役割について簡単に説明しています。

 混乱した内容

 プロダクトコード（サンプル）
概要だけ知りたい方は読み飛ばしていただいて大丈夫です。
プロダクトコード

src/modules/fetchMonster.js
const axios = require("axios")...]]></description><link>https://zenn.dev/souemon/articles/35f4b8cbe42066</link><guid isPermaLink="true">https://zenn.dev/souemon/articles/35f4b8cbe42066</guid><pubDate>Fri, 18 Oct 2024 08:01:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n1NLG_Ts--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2581%25AE__mocks__%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E6%25B0%2597%25E3%2581%25A5%25E3%2581%258B%25E3%2581%259A%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2520%25E3%2580%259C%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2581%258C%25E5%258B%259D%25E6%2589%258B%25E3%2581%25AB%25E5%2580%25A4%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E7%2590%2586%25E7%2594%25B1%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259D%25E3%2581%2586%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZWE1MTdmMDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>そうえもん</dc:creator></item><item><title><![CDATA[vscodeでprettierとeslintを設定しているディレクトリ以外のディレクトリーでも走ってしまう]]></title><description><![CDATA[
 前提

frontend(nextjs)と backend(nest)で異なるリポジトリーで管理をしている。
異なる repository で異なる eslint,prettier を設定
vscode は frontend と backend ディレクトリーの親ディレクトリーを開いている

.
├── backend
│   ├── .eslintrc.js
│   └── .prettierrc
└── frontend
    ├── .eslintrc
    ├── .prettierignore
    └── .prettierrc
vscode(一部抜粋)


 問題...]]></description><link>https://zenn.dev/naginagi124/articles/pretter-eslint-vscode-miss</link><guid isPermaLink="true">https://zenn.dev/naginagi124/articles/pretter-eslint-vscode-miss</guid><pubDate>Fri, 18 Oct 2024 07:43:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e_NUlJJY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:vscode%25E3%2581%25A7prettier%25E3%2581%25A8eslint%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25A7%25E3%2582%2582%25E8%25B5%25B0%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlOTYzNTQwYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なぎ</dc:creator></item><item><title><![CDATA[配列操作]]></title><description><![CDATA[
 まとめ

 配列操作/push, pop
push とは配列の末尾(後ろ)に新しい要素を追加するためのメソッド
fruits = ['apple', 'orange', 'banana'];
console.log(fruits);
fruits.push('strawberry');
console.log(fruits);
//["apple", "orange", "banana", "strawberry"]
popメソッドを使って配列の最後の要素を削除する
fruits = ['apple', 'orange', 'banana'];
console.log(fruits)...]]></description><link>https://zenn.dev/akanesi/articles/02cf06510d2dfe</link><guid isPermaLink="true">https://zenn.dev/akanesi/articles/02cf06510d2dfe</guid><pubDate>Fri, 18 Oct 2024 01:52:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wt3D5_Y2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%25A4%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3YjYyNWJhZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みつい</dc:creator></item><item><title><![CDATA[Web Components を実装して理解する]]></title><description><![CDATA[
 Web Components とは
Web Components は、再利用可能なカプセル化された オリジナルの HTML タグを作成できる技術です。
Web 標準の技術で、モダンブラウザではサポート済みの技術となっています。
この技術を使うことで、React や Vue など特定のフレームワークに依存しない標準化されたコンポーネントを作成することができます。
Web Components を理解する上で主要な技術は以下の3つです。

 カスタム要素
カスタム要素は、独自のHTMLタグを定義し、再利用可能なコンポーネントを作成するための仕組みです。
これにより、アプリケーションに必要...]]></description><link>https://zenn.dev/t0daaay/articles/f3a91b3167a059</link><guid isPermaLink="true">https://zenn.dev/t0daaay/articles/f3a91b3167a059</guid><pubDate>Fri, 18 Oct 2024 01:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xxbhlpyx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%2520Components%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%2598%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzZjZlYWU1ZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つじ</dc:creator></item><item><title><![CDATA[Vue3 + Vite + JavaScript でプロジェクト作成]]></title><description><![CDATA[
 はじめに
Vue CLI から Vite に移行することにしました。噂の通り Vite はとても速いです！タイトルは「Vue3 + Vite + JavaScript でプロジェクト作成」としましたが恐らく Vue や JavaScript 以外も同じです。

 環境

Ubuntu Server
Node v22.9.0
npm


 プロジェクト作成手順

プロジェクトの作成$ npm create vite@latest
後は画面に従ってプロジェクト名 (この例では「your_project_name」) やフレームワーク (この例では 「Vue」)、Variant (この例で...]]></description><link>https://zenn.dev/15bluefortran/articles/e81ebee62896a2</link><guid isPermaLink="true">https://zenn.dev/15bluefortran/articles/e81ebee62896a2</guid><pubDate>Thu, 17 Oct 2024 21:43:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PAXX8y-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%2520%252B%2520Vite%2520%252B%2520JavaScript%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:K%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlKaklHWTlqc3JjcFhuZFctLVlvVlJxNkFROXlicmhiN1AxVlV2aHJxT0VzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>K</dc:creator></item><item><title><![CDATA[マツコの知らないJavascriptと派生言語の世界]]></title><description><![CDATA[
 JavaScriptの歴史
JavaScriptは1995年にBrendan Eichによって開発されました。最初はNetscape Navigatorというウェブブラウザに組み込まれ、インタラクティブなウェブページを作成するためのスクリプト言語として設計されました。当初は「Mocha」という名前でしたが、後に「LiveScript」、そして最終的に「JavaScript」と改名されました。名前の由来には、当時人気があったプログラミング言語「Java」の名前を借りてマーケティング効果を狙った背景がありますが、技術的にはJavaとは異なる言語です。

 ECMAScriptとの関係
J...]]></description><link>https://zenn.dev/qitaaa/articles/4c7c12e5a1c17d</link><guid isPermaLink="true">https://zenn.dev/qitaaa/articles/4c7c12e5a1c17d</guid><pubDate>Thu, 17 Oct 2024 14:07:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HKgGUTya--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%2584%25E3%2582%25B3%25E3%2581%25AE%25E7%259F%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584Javascript%25E3%2581%25A8%25E6%25B4%25BE%25E7%2594%259F%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E4%25B8%2596%25E7%2595%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qitar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmZGNmMTg3OTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qitar</dc:creator></item><item><title><![CDATA[Vueについて④（リアクティブについて）]]></title><description><![CDATA[Vueについて③からの続き
ひとまずおさらいです。
Vue.jsはリアクティビティシステムになっていないJavaScriptに対して
Vueが提供している、ref関数というものを使用してデータの受け渡しを楽にします。
そのやり方は
&lt;script setup&gt;
import { ref } from 'vue'

let number = ref(9999)
const title = ref('Nyan programer')
const info = ref({
  nyans: 100,
  churu: 4
})

&lt;/script&gt;

&lt;templ...]]></description><link>https://zenn.dev/y_usausa/articles/62f64c6891fa13</link><guid isPermaLink="true">https://zenn.dev/y_usausa/articles/62f64c6891fa13</guid><pubDate>Thu, 17 Oct 2024 12:32:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BJKIabkT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E2%2591%25A3%25EF%25BC%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyan_pro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NGRiZDM2ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyan_pro</dc:creator></item><item><title><![CDATA[JavaScriptにおける非同期処理、Promise、エラーハンドリングの基本]]></title><description><![CDATA[
 はじめに
Webアプリケーション開発において、非同期処理は避けて通れない重要なトピックです。特に画像の読み込みやAPIリクエストなど、時間のかかる操作を扱う際に適切な非同期処理が不可欠です。この記事では、非同期処理の基本、Promiseの活用、そしてエラーハンドリングについて解説します。

 非同期処理の基本
JavaScriptは単一スレッドで動作しますが、非同期処理を利用することで、長時間かかる処理を待たずに次の処理を実行できます。
console.log("Start");
setTimeout(() =&gt; {
  console.log("Timeout");
}, 0...]]></description><link>https://zenn.dev/sarap422/articles/01d9b27c1ff16c</link><guid isPermaLink="true">https://zenn.dev/sarap422/articles/01d9b27c1ff16c</guid><pubDate>Thu, 17 Oct 2024 02:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8sSsv6RE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2580%2581Promise%25E3%2580%2581%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarap422%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarap422</dc:creator></item><item><title><![CDATA[【JavaScript】jQueryで実装していたコードをVanilla JSに書き換え]]></title><description><![CDATA[
 やること
Enterキーを押したときに次の入力フィールドに自動的にフォーカスを移動させる機能を実装しています。
jQueryで実装しているものをVanila JSに書き直してみます。

 jQuery
$(":input").on("keydown", function (event) {
    if (event.which === 13 &amp;&amp; !$(this).is("textarea, :button, :submit")) {
        event.stopPropagation();
        event.preventDefault();

...]]></description><link>https://zenn.dev/zead/articles/3ed3c672721de2</link><guid isPermaLink="true">https://zenn.dev/zead/articles/3ed3c672721de2</guid><pubDate>Thu, 17 Oct 2024 01:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cy_oH1UP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591jQuery%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592Vanilla%2520JS%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tomiyama%252Cmasahiko%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMTI4MzAyMjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B8%25E3%2583%25BC%25E3%2583%2589%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlEYkk1RmFrN0NoQlBCbnVJWWliNkFGS0hSUnk3dUd4aFBDTTVWMFpqOWhmT3NBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomiyama,masahiko</dc:creator></item><item><title><![CDATA[Vueについて③（クリック時の処理とリアクティビティ）]]></title><description><![CDATA[Vue②から続き
何かを押したら何かの処理が実行されるという処理を書いていきます。
例えば&lt;button&gt;ボタン&lt;/button&gt;を&lt;template&gt;に追加し、ボタンが押されたら何か実行されるというのを作ります。
&lt;button&gt;タグに属性として@を付けて、その後にイベントの名前（今回はclick)をつけて、属性値に実行したい関数名を記入します。
今回の関数は増えるという意味のincrimentを付けて、ボタンがクリックされたらconsole.logにクリック！という文字が出るようにします。
&lt;script setup&gt;
co...]]></description><link>https://zenn.dev/y_usausa/articles/bc10e76a7e8a7e</link><guid isPermaLink="true">https://zenn.dev/y_usausa/articles/bc10e76a7e8a7e</guid><pubDate>Wed, 16 Oct 2024 14:03:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uvgrJB1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E2%2591%25A2%25EF%25BC%2588%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E6%2599%2582%25E3%2581%25AE%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2593%25E3%2583%2586%25E3%2582%25A3%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyan_pro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NGRiZDM2ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyan_pro</dc:creator></item><item><title><![CDATA[Programmable Search Engineで入力欄が複数]]></title><description><![CDATA[忘れないうちにメモしとこうという走り書き。
走り書きでもいいからとりあえず残す癖をつけようという偉い俺。
ググるのも面倒だったってのはあるけど
Programmable search engine
検索結果は1つだけど入力エリアを複数設けたい場合は
&lt;div class='gcse-searchbox' gname='sitesearch'&gt;&lt;/div&gt;
を設置せずこう。
searchForms.forEach((searchForm) =&gt; {
    searchForm.addEventListener('submit', (e) =&gt; hand...]]></description><link>https://zenn.dev/cyocun/articles/e70aed9e62045b</link><guid isPermaLink="true">https://zenn.dev/cyocun/articles/e70aed9e62045b</guid><pubDate>Wed, 16 Oct 2024 13:00:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z4-ij_bd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Programmable%2520Search%2520Engine%25E3%2581%25A7%25E5%2585%25A5%25E5%258A%259B%25E6%25AC%2584%25E3%2581%258C%25E8%25A4%2587%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cyocun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWN29XNGpTMlJqRFhZU1lPUGtJMVVxTDhFdWRFM05VQXVwdFJmc0w4PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cyocun</dc:creator></item><item><title><![CDATA[k6 DevTools recorder を使ってみた]]></title><description><![CDATA[
 k6 DevTools recorder とは
k6 のブラウザテストのスクリプトを生成してくれるツール（Chrome 拡張機能）です。
Chrome DevTools Recorder を使って記録したフローをスクリプトに変換してくれます。
https://grafana.com/docs/k6/latest/using-k6/test-authoring/create-tests-from-recordings/using-the-devtools-recorder/

 使ってみる
Create a script from a recording に使い方が書いてあります。
C...]]></description><link>https://zenn.dev/z63d/articles/0da90534fe5964</link><guid isPermaLink="true">https://zenn.dev/z63d/articles/0da90534fe5964</guid><pubDate>Wed, 16 Oct 2024 12:00:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q4S1uO8s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:k6%2520DevTools%2520recorder%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:z63d%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMTEyYTA4OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>z63d</dc:creator></item><item><title><![CDATA[その js の設定ファイル補完効くかもよ]]></title><description><![CDATA[
 はじめに
Next.js のプロジェクトを作成すると、設定ファイルの next.config.js にこんな記述があります。

next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {};

この JSDoc コメントの @type タグは値に型を付与することができます。
import('next').NextConfig 部分はインポート型と呼ばれ TypeScript の型定義ファイルから型をインポートして取得することができます。
このコメントがあるおかげでエディタは宣言された変数の型...]]></description><link>https://zenn.dev/k0rosuke/articles/35e1fbd83719a0</link><guid isPermaLink="true">https://zenn.dev/k0rosuke/articles/35e1fbd83719a0</guid><pubDate>Wed, 16 Oct 2024 09:30:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LfUsT3nd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2581%25AE%2520js%2520%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25A3%259C%25E5%25AE%258C%25E5%258A%25B9%25E3%2581%258F%25E3%2581%258B%25E3%2582%2582%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:korosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmODcxM2MxMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>korosuke</dc:creator></item><item><title><![CDATA[JavaScriptのプロトタイプチェーンをちょっと理解する]]></title><description><![CDATA[
 1. はじめに
JavaScriptはプロトタイプベースのオブジェクト指向言語であり、そのコアにはプロトタイプチェーンという概念が存在します。上級者として、プロトタイプチェーンの内部メカニズムを深く理解することで、コードのパフォーマンス最適化や高度なデザインパターンの実装が可能になります。本記事では、プロトタイプチェーンの詳細とその応用について解説します。

 2. プロトタイプの基本概念

 __proto__とprototypeの違い


__proto__：各オブジェクトが持つ内部プロパティで、そのオブジェクトのプロトタイプを参照します。

prototype：関数オブジェクト...]]></description><link>https://zenn.dev/tcool/articles/a13eb7b43dd7e8</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/a13eb7b43dd7e8</guid><pubDate>Tue, 15 Oct 2024 13:25:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ik4wh32u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item></channel></rss>