<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「shell」のフィード]]></title><description><![CDATA[Zennのトピック「shell」のRSSフィードです]]></description><link>https://zenn.dev/topics/shell</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/c8d33e6510.jpeg</url><title>Zennの「shell」のフィード</title><link>https://zenn.dev/topics/shell</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 03 Dec 2024 01:00:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/shell/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Windowsユーザのためのpnpm Shell Emulator]]></title><description><![CDATA[!
本記事はにー兄さんアドベントカレンダー2024の2日目の記事です。


 はじめに

 TL;DR
Windows Powershell で pnpm のスクリプトを実行する時に Shell Emulator が有効だと
POSIX 環境のコマンドの書き方でも実行可能になって嬉しい。

 概要
本記事では pnpm の Shell Emulator をご紹介します。
私は最近個人開発をしている時に知ったのですが、単体での日本語記事はあまりなかったのと、
Windows ユーザだからこそ享受できたメリットがあったので筆を執った次第です。

 想定読者

pnpm の機能に興味があるエン...]]></description><link>https://zenn.dev/drumath2237/articles/pnpm-shell-emulator-for-win-user</link><guid isPermaLink="true">https://zenn.dev/drumath2237/articles/pnpm-shell-emulator-for-win-user</guid><pubDate>Mon, 02 Dec 2024 15:33:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HHe0AEPX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEpnpm%2520Shell%2520Emulator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2583%25BC%25E5%2585%2584%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUQndtd2ZiTmM3Nzg0SmxRZWdlX3BSc09RdmdvX2hxNlg5MTJKT3VZPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>にー兄さん</dc:creator></item><item><title><![CDATA[【初心者向け】かわいい・かっこいい開発環境の作り方]]></title><description><![CDATA[
この記事は2024team411アドベントカレンダーの2日目です。
team411のアドベントカレンダーはこちらをご覧ください。

昨日はぬか喜びの庭さんの「VRCのワールドを作ってみよう」でした。VRCのワールドは作ろうとして挫折した記憶があるのでまた頑張ってみたいです。ただ、U#の情報が少ないのは不安ですね (笑)。

 はじめに
皆さんは開発環境の見た目にこだわりはありますでしょうか？　プログラミングを始めたばかりだったりすると、「とりあえずおすすめされた環境で開発する」というような状況で、なかなか見た目にこだわるというところまで行かない方も多いのではないでしょうか。
この記事で...]]></description><link>https://zenn.dev/team411/articles/kanaru5757-vscode-theme</link><guid isPermaLink="true">https://zenn.dev/team411/articles/kanaru5757-vscode-theme</guid><pubDate>Sun, 01 Dec 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Dmmmpk-D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591%25E3%2581%258B%25E3%2582%258F%25E3%2581%2584%25E3%2581%2584%25E3%2583%25BB%25E3%2581%258B%25E3%2581%25A3%25E3%2581%2593%25E3%2581%2584%25E3%2581%2584%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kanaru%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YzQxYWIxYjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:team411%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4MmVmNDY0ZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanaru</dc:creator></item><item><title><![CDATA[Typstのテンプレートファイルを作業ディレクトリに移すのを、fishのオートロード関数で簡単に]]></title><description><![CDATA[
 はじめに
前に書いた記事のとおり、現在TypstをTypst.vim+tinymistで編集しているが、Typst.vimがレポートのTypstファイルと同じディレクトリにあるtemplate.typしか認識してくれないのでちょっと面倒だった。なので今回、今いるディレクトリから親ディレクトリを再帰的に探索して、テンプレートファイルをcpしてくるようなコマンドをfishのオートロード関数を使って実装した。

 やりたいこと

現在のディレクトリから親ディレクトリを再帰的に探索してtemplate.typを見つける
見つかったtemplate.typを現在のディレクトリにコピーする
引数...]]></description><link>https://zenn.dev/htsulfuric/articles/makereportdirectory</link><guid isPermaLink="true">https://zenn.dev/htsulfuric/articles/makereportdirectory</guid><pubDate>Tue, 26 Nov 2024 10:00:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q3o4fgrY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typst%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%25A5%25AD%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E7%25A7%25BB%25E3%2581%2599%25E3%2581%25AE%25E3%2582%2592%25E3%2580%2581fish%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HTsulfuric%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMTIxYjAyMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HTsulfuric</dc:creator></item><item><title><![CDATA[npm binの代替]]></title><description><![CDATA[npm binセットアップなどでよく書いてありますよね。しかし、これは廃止されていて、今はもう使えなくなっています。ではどう読み替えれば良いのか？
$(dirname $(which npm))
こうすると良いです。
npm binに行く（コピペ用）：
cd "$(dirname $(which npm))"
npm binにcdする。
始めた時、ここで結構詰まってしまったので、「読み替える」とだけ思っておいてください。
]]></description><link>https://zenn.dev/tocot/articles/1cba505441999c</link><guid isPermaLink="true">https://zenn.dev/tocot/articles/1cba505441999c</guid><pubDate>Tue, 26 Nov 2024 09:25:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d3A8mccO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:npm%2520bin%25E3%2581%25AE%25E4%25BB%25A3%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tOcOt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2MTIwNmIzNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tOcOt</dc:creator></item><item><title><![CDATA[独自のshellコマンドを~/mycmdに作る]]></title><description><![CDATA[一行でちょっとするときはaliasを使う
echo "\nalias （名前）=（コマンド）\n" &gt;&gt; ~/.zshrc
これで、$（名前）で使えるようになる。
文を使ったり、何行にもなるようなものは.shファイルにまとめて、
mkdir ~/mycmd
vi ~/mycmd/（作りたいコマンド名）.sh
chmod -R 700 ~/mycmd
最初は、~/mycmdにPATH（名簿のようなもの）を通す必要がある。
export PATH=$PATH:~/mycmd
これで、（コマンド名）.shで実行できる。
!
シェルを再起動する必要があるので注意！よく再起動忘れて困る...]]></description><link>https://zenn.dev/tocot/articles/39121716f9cb76</link><guid isPermaLink="true">https://zenn.dev/tocot/articles/39121716f9cb76</guid><pubDate>Tue, 26 Nov 2024 08:01:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---HtcUCzr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258B%25AC%25E8%2587%25AA%25E3%2581%25AEshell%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%7E%252Fmycmd%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tOcOt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2MTIwNmIzNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tOcOt</dc:creator></item><item><title><![CDATA[オレオレ証明書（自己署名証明書）bash/zsh作成]]></title><description><![CDATA[
 key (秘密鍵) 作成

 平文でkey作成する場合（危険）
openssl genrsa 4096 &gt; private.key
後で暗号化できますopenssl rsa -in private.key -aes256 -out private_locked.key


 private.keyの暗号化する場合
openssl genrsa -aes256 4096 &gt; private.key
後で解除できますopenssl rsa -in private.key -out private_unlock.key


 crt (公開鍵) 作成

 csr (Certif...]]></description><link>https://zenn.dev/tocot/articles/6df74451727344</link><guid isPermaLink="true">https://zenn.dev/tocot/articles/6df74451727344</guid><pubDate>Tue, 26 Nov 2024 07:12:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mmcvZzqq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%25AC%25E3%2582%25AA%25E3%2583%25AC%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25EF%25BC%2588%25E8%2587%25AA%25E5%25B7%25B1%25E7%25BD%25B2%25E5%2590%258D%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25EF%25BC%2589bash%252Fzsh%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tOcOt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2MTIwNmIzNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tOcOt</dc:creator></item><item><title><![CDATA[fishでmkdir+cdをひとつのコマンドに]]></title><description><![CDATA[
 はじめに
mkdirとcd、同時にやりたいよね……
bashやzshなんかだと毎回
sh hoge.sh
みたいなことをする必要がありそうで結構大変そう。一方fishにはオートロード関数といって、~/.config/fish/functions/以下に.fishの拡張子でfish functionを登録しておけば、簡単に書けてかつどこからでも呼びだせるらしい。とはいえ、ここまでは色んな人から過去記事があがっているため、エラー処理回りを少し丁寧にして実装してみた。

 実装
関数名は過去の人々に倣ってmkcdとしてみた

 ~/.config/fish/funtions/mkcd.fi...]]></description><link>https://zenn.dev/htsulfuric/articles/my_mkdir_and_cd</link><guid isPermaLink="true">https://zenn.dev/htsulfuric/articles/my_mkdir_and_cd</guid><pubDate>Tue, 26 Nov 2024 06:20:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rbuiV0Ah--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fish%25E3%2581%25A7mkdir%252Bcd%25E3%2582%2592%25E3%2581%25B2%25E3%2581%25A8%25E3%2581%25A4%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HTsulfuric%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMTIxYjAyMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HTsulfuric</dc:creator></item><item><title><![CDATA[シェルスクリプトにオプションをつける]]></title><description><![CDATA[
 はじめに
社内ハッカソンでシェルスクリプトを作りました。
オプションを設定する時に、あまり良さげな記事が見つからなかったので備忘録として残します。

 コード
echo_usage() {
    echo "Usage: $0	[-u|--url &lt;URL&gt;]
			[-n|--name &lt;YOUR NAME&gt;]"
}

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -u|--url)
            echo "url is $2"
            shift 2
         ...]]></description><link>https://zenn.dev/ncdc/articles/36d7a32dc22147</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/36d7a32dc22147</guid><pubDate>Thu, 21 Nov 2024 01:59:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--recQiLLN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhYjY4ZDk3NjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>な</dc:creator></item><item><title><![CDATA[[Level 30 ~ ] OverTheWire Bandit Writeup]]></title><description><![CDATA[
 はじめに

 ←←(Level20~29)


 サイト
https://overthewire.org/wargames/bandit/

 環境

macOS
Intelチップ


 Tips
macOS 使いは，パスワードをコピーした度に，下記のコマンドをローカルで実行すると，良い感じにパスワードが保存できてﾀｲﾍﾝﾖｰｲ
pbpaste &gt;&gt; password &amp;&amp; echo "" &gt;&gt; password &amp;&amp; cat -n password

 ルール

!
Do not publish credentials to ...]]></description><link>https://zenn.dev/mattsunkun/articles/1864f836cac50c</link><guid isPermaLink="true">https://zenn.dev/mattsunkun/articles/1864f836cac50c</guid><pubDate>Tue, 19 Nov 2024 14:02:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1bdapOzc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLevel%252030%2520%7E%2520%255D%2520OverTheWire%2520Bandit%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mattsunkun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyMGM1NGQ2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mattsunkun</dc:creator></item><item><title><![CDATA[[Level 20 ~ 29] OverTheWire Bandit Writeup]]></title><description><![CDATA[
 はじめに

 ←←(Level10~19)


 →→(Level30~)


 サイト
https://overthewire.org/wargames/bandit/

 環境

macOS
Intelチップ


 Tips
macOS 使いは，パスワードをコピーした度に，下記のコマンドをローカルで実行すると，良い感じにパスワードが保存できてﾀｲﾍﾝﾖｰｲ
pbpaste &gt;&gt; password &amp;&amp; echo "" &gt;&gt; password &amp;&amp; cat -n password

 ルール

!
Do not publish...]]></description><link>https://zenn.dev/mattsunkun/articles/a04126d5cb7659</link><guid isPermaLink="true">https://zenn.dev/mattsunkun/articles/a04126d5cb7659</guid><pubDate>Tue, 19 Nov 2024 13:07:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IlEIy6F6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLevel%252020%2520%7E%252029%255D%2520OverTheWire%2520Bandit%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mattsunkun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyMGM1NGQ2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mattsunkun</dc:creator></item><item><title><![CDATA[[Level 10 ~ 19] OverTheWire Bandit Writeup]]></title><description><![CDATA[
 はじめに

 ←←(Level0~9)


 →→(Level20~29)


 サイト
https://overthewire.org/wargames/bandit/

 環境

macOS
Intelチップ


 Tips
macOS 使いは，パスワードをコピーした度に，下記のコマンドをローカルで実行すると，良い感じにパスワードが保存できてﾀｲﾍﾝﾖｰｲ
pbpaste &gt;&gt; password &amp;&amp; echo "" &gt;&gt; password &amp;&amp; cat -n password

 ルール

!
Do not publish...]]></description><link>https://zenn.dev/mattsunkun/articles/ca934d2b15affe</link><guid isPermaLink="true">https://zenn.dev/mattsunkun/articles/ca934d2b15affe</guid><pubDate>Tue, 19 Nov 2024 13:01:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DdttlTt1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLevel%252010%2520%7E%252019%255D%2520OverTheWire%2520Bandit%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mattsunkun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyMGM1NGQ2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mattsunkun</dc:creator></item><item><title><![CDATA[Difyアップデート自動化]]></title><description><![CDATA[皆さん、ローカル版Difyは活用されていますでしょうか？
ローカル版だと、定期的にアップデートが必要でそのアップデートを自動化する方法があるのでシェアします。

 基本的な準備（シェルスクリプトの作成）
今回は、複数のコマンドを一括で実行してくれるようなシェルスクリプト作成します。
シェルスクリプトは、コンピュータに一連の作業を自動で実行させるための簡単な命令書のようなものです。毎回同じ作業を手動で行う代わりに、一度スクリプトを作成しておけば、それを実行するだけで済むようになります。

 アップデートスクリプトの作成

 エンジニア向け
update_dify.shを作成し、以下の内容を...]]></description><link>https://zenn.dev/kamechan_usagi/articles/c240eba01ad8aa</link><guid isPermaLink="true">https://zenn.dev/kamechan_usagi/articles/c240eba01ad8aa</guid><pubDate>Tue, 19 Nov 2024 11:22:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G0hY18KU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dify%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BA%2580%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHdjdWh4bm5QZjBGVmozazBCYWtRTm1FN1BydUZfR3U0MzFYSDdRTXpocUNhaGVTWVI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>亀ちゃん</dc:creator></item><item><title><![CDATA[【Linux】ホスト名とFQDNについて。(hostname/hostnamectl)]]></title><description><![CDATA[
 ホスト名とFQDNの違い
ホスト名（Hostname）：

コンピュータの「名前」の部分のみ
例：webserver

ローカルでの識別に使用

FQDN（Fully Qualified Domain Name）：

ホスト名 + ドメイン名の完全な形
例：webserver.example.com

インターネット上での完全な一意の識別子

構造の例：
      webserver  .  example    .    com
      ↑             ↑               ↑
    ホスト名     サブドメイン    トップレベル
        ...]]></description><link>https://zenn.dev/ryu3/articles/3b14fac119a301</link><guid isPermaLink="true">https://zenn.dev/ryu3/articles/3b14fac119a301</guid><pubDate>Tue, 19 Nov 2024 07:27:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mSD4vSet--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Linux%25E3%2580%2591%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E5%2590%258D%25E3%2581%25A8FQDN%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2582%2528hostname%252Fhostnamectl%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwOWFmODRkNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryu</dc:creator></item><item><title><![CDATA[【GitHub】組織、チーム、およびチームメンバーの情報を取得する]]></title><description><![CDATA[GitHub CLI (gh) を使用して、ユーザーが所属する組織、チーム、およびチームメンバーの情報を取得し、それをCSVファイルに保存するシェルスクリプトです。
以下のシェルスクリプトを実行することで、teams_and_members.csvに対象の情報が保存されます。
#!/bin/bash

# CSVファイルを作成
echo "Organization,Team,Member" &gt; teams_and_members.csv

# Organizationsの一覧を取得して処理
gh api user/orgs --jq '.[].login' | while read...]]></description><link>https://zenn.dev/newbee1958/articles/f5e3af24abc316</link><guid isPermaLink="true">https://zenn.dev/newbee1958/articles/f5e3af24abc316</guid><pubDate>Wed, 13 Nov 2024 22:26:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dCjsXSjP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GitHub%25E3%2580%2591%25E7%25B5%2584%25E7%25B9%2594%25E3%2580%2581%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2580%2581%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hidev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODVhNDg4NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hidev</dc:creator></item><item><title><![CDATA[Windows で fish shell を導入してターミナルを快適に！]]></title><description><![CDATA[Windows のターミナルといえば Powershell ですが、Windows でも Unix 系のシェルを使いたい！ ということで fish（Friendly Interactive Shell） を導入する手順をまとめました。WSL を利用する方法ではなく、MSYS2 を使用することで、より Windows 上安定した環境を構築できます。この記事では、fish のインストールから VSCode との連携方法、便利な機能の活用までを解説します。

🐣 fish shell って書くとシェルシェルになってしまうので fish で統一します



 シェルについて
シェルは、コンピュー...]]></description><link>https://zenn.dev/sakuramomo/articles/316b24dcdcc8e8</link><guid isPermaLink="true">https://zenn.dev/sakuramomo/articles/316b24dcdcc8e8</guid><pubDate>Wed, 13 Nov 2024 14:15:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UISlZ1m3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E3%2581%25A7%2520fish%2520shell%2520%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2582%2592%25E5%25BF%25AB%25E9%2581%25A9%25E3%2581%25AB%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2582%2588%25E3%2581%2593%25E3%2581%25BE%25E3%2582%2593%25E3%2581%2598%25E3%2582%2585%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3YzM1OGI0YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひよこまんじゅう</dc:creator></item><item><title><![CDATA[[Level 0 ~ 9] OverTheWire Bandit Writeup]]></title><description><![CDATA[
 はじめに

 →→(Level10~19)


 サイト
https://overthewire.org/wargames/bandit/

 環境

macOS
Intelチップ


 Tips
macOS 使いは，パスワードをコピーした度に，下記のコマンドをローカルで実行すると，良い感じにパスワードが保存できてﾀｲﾍﾝﾖｰｲ
pbpaste &gt;&gt; password &amp;&amp; echo "" &gt;&gt; password &amp;&amp; cat -n password

 ルール

!
Level0 以外はパスワードを明示しません．
Do not...]]></description><link>https://zenn.dev/mattsunkun/articles/3fd2d99408e7ef</link><guid isPermaLink="true">https://zenn.dev/mattsunkun/articles/3fd2d99408e7ef</guid><pubDate>Wed, 13 Nov 2024 07:59:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9cQ581fL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLevel%25200%2520%7E%25209%255D%2520OverTheWire%2520Bandit%2520Writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mattsunkun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyMGM1NGQ2ODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mattsunkun</dc:creator></item><item><title><![CDATA[bashのset -euxで堅牢なシェルスクリプトを書く]]></title><description><![CDATA[皆さんは普段シェルスクリプトを書くとき、どのようなオプションを使用していますか？
今回は、シェルスクリプトを安全に実行するための重要なオプション set -eux について詳しく解説します。

 TL;DR
シェルスクリプトの先頭に以下を追加することで、より安全な実行が可能になります：
#!/bin/bash
set -eux

 各オプションの詳細

 set -e (Error)
エラーが発生した時点でスクリプトを即座に停止します。
set -e
cd /path/to/non/existent/directory  # この行でエラー発生
echo "この行は実行されない"  # ...]]></description><link>https://zenn.dev/asamin/articles/8fefc3f6eefced</link><guid isPermaLink="true">https://zenn.dev/asamin/articles/8fefc3f6eefced</guid><pubDate>Wed, 30 Oct 2024 01:24:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9aZsbuLA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:bash%25E3%2581%25AEset%2520-eux%25E3%2581%25A7%25E5%25A0%2585%25E7%2589%25A2%25E3%2581%25AA%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:asami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YWMyYjMxNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>asami</dc:creator></item><item><title><![CDATA[便利なコマンド臭]]></title><description><![CDATA[
 同じパターンの文字列に変換する方法
sed -i '' 's/example="\([^"]*\)"/examples=["\1"]/g' $filename


example="\([^"]*\)": example="任意の文字列" のパターンをマッチさせます。\([^"]*\) はダブルクォート以外の文字が0回以上続く部分をキャプチャします。
examples=["\1"]: マッチした文字列を examples=["キャプチャした文字列"] に置き換えます。\1 は最初のキャプチャグループ（任意の文字列）を参照します。


 フォルダー内あるファイルをリスト
folder_...]]></description><link>https://zenn.dev/qinritukou/articles/bdc4e8f8877469</link><guid isPermaLink="true">https://zenn.dev/qinritukou/articles/bdc4e8f8877469</guid><pubDate>Sat, 19 Oct 2024 05:42:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9cwIrnZN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E8%2587%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:John%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiYzg5MDllODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>John</dc:creator></item><item><title><![CDATA[sudoを忘れて怒られてしまったら、びっくり（!!）すればいい]]></title><description><![CDATA[タイトルは釣りです。

 怒られが発生
sudoを忘れてシェルに怒られた経験は誰しもお持ちでしょう。私もよくあります。たとえばこんなふうに。
$ apt update
Reading package lists... Done
E: Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)
この例だと、3行目で「エラー。権限がなくてファイルが開けない」とシェルに怒られているわけです。
こんなときは「あー」と思いつつsudoをつけてsudo apt updateなどと入力しなおしていたわけ...]]></description><link>https://zenn.dev/harupong/articles/24df32dc6826cb</link><guid isPermaLink="true">https://zenn.dev/harupong/articles/24df32dc6826cb</guid><pubDate>Thu, 17 Oct 2024 07:14:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NQp3RStw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sudo%25E3%2582%2592%25E5%25BF%2598%25E3%2582%258C%25E3%2581%25A6%25E6%2580%2592%25E3%2582%2589%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2580%2581%25E3%2581%25B3%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25EF%25BC%2588%2521%2521%25EF%25BC%2589%25E3%2581%2599%25E3%2582%258C%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:harupong%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dwa0hndnVadUk2Y1ZuRmQyZHZyaWxxeFcxN1BvcE0zNjNIbG9FQ0U4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>harupong</dc:creator></item><item><title><![CDATA[シェルスクリプト]]></title><description><![CDATA[
 シェルスクリプトとは？
シェルスクリプトは、シェルによる操作（解釈・実行）がまとめられた台本や手順書（スクリプト）と考えると良いです。
シェルスクリプトを使わずに、一つひとつコマンドをシェルに入力してOSを操作することも可能ですが、より複雑な処理や繰り返し処理が必要になると、手動での操作は非常に煩雑になってしまいます。そのため、シェルスクリプトを利用して効率化を図ることが重要です。

 シェルスクリプトの基本文法
シェルスクリプトを作成する際に、基本的な文法やルールがいくつかあります。ここでは、特に重要なポイントを紹介します。

 1. 先頭行の #!/bin/bash

シェルスク...]]></description><link>https://zenn.dev/kyojinnaapyon/articles/3d57502c1d2b8a</link><guid isPermaLink="true">https://zenn.dev/kyojinnaapyon/articles/3d57502c1d2b8a</guid><pubDate>Tue, 15 Oct 2024 21:09:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0j5EIed0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NANA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JGUUpURkRTcU5McTJoV0RZMlhSaDBUUjYtbWJGd0xRQzBHTXcxaHN1cUlUR1lRbz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NANA</dc:creator></item></channel></rss>