<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 26 Jan 2025 07:00:23 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[JavaScript]関数宣言 と 関数式 の違いについて（備忘録）]]></title><description><![CDATA[
 １．関数宣言とは
・function を使用した関数定義方法を、関数宣言といいます。

関数宣言を使用した関数定義例
// 関数宣言
function 関数名() {
    // 処理内容
}

// 宣言した関数の呼び出し
関数名();

!
備考：
関数宣言には以下のメリットがあります。
①．再利用性・・・同じ処理を何度も行う必要がある場合、一度宣言した関数は再利用可能です。その為、プログラムの重複を避けることが可能です。
②．可読性・・・適切な関数名やコメントを付けると、関数の処理内容を理解しやすくなります。
③．保守性・・・関数宣言することで、バグ修正や機能追加の際に修正・...]]></description><link>https://zenn.dev/yama_kawa/articles/ac86b6753ad5eb</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/ac86b6753ad5eb</guid><pubDate>Sun, 26 Jan 2025 04:50:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5TrhtKYv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%25A3%25E8%25A8%2580%2520%25E3%2581%25A8%2520%25E9%2596%25A2%25E6%2595%25B0%25E5%25BC%258F%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1ZjYyZjIwYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[Hotwireの基本と導入手順 Rails7]]></title><description><![CDATA[
 Hotwireとは
Hotwireとは、Rails7からスタンダードになったフロントエンドのフレームワークです。
基本的にRailsは、ページ遷移のたびにサーバーサイドからHTMLを取得してレンダリングするMPA(Multi Page Application)という形式ですが、このHotwireをうまく使用するとReactやVueのような、1つのHTMLページ内で動的にコンテンツを切り替えるSPA(Single Page Application)風なアプリケーションの作成が行えます。このHotwireと呼ばれるフレームワークは、次の三つの技術が合わさって構築されています。
①Turb...]]></description><link>https://zenn.dev/keisuke_suzuki/articles/95d6c339512c9c</link><guid isPermaLink="true">https://zenn.dev/keisuke_suzuki/articles/95d6c339512c9c</guid><pubDate>Sun, 26 Jan 2025 02:09:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kYTGHlrZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hotwire%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E6%2589%258B%25E9%25A0%2586%2520Rails7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:web%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2OGYzY2IwNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>webジニア</dc:creator></item><item><title><![CDATA[【GAS】決まった時間ぴったりに動くトリガーを作成する]]></title><description><![CDATA[
 はじめに：GASのトリガー設定では時間指定ができない
GASの時間主導型＞日付ベースのタイマー設定では、午前9時～午前10時といった、幅のあるトリガーセットしかできません。
しかし、正確な時間にGASを実行したい場合もあります。

9:00に本日の連絡をしたい
12:45にハミガキ運動の連絡をしたい
17:55に終業5分前を連絡したい

GASのトリガーセットを少し工夫すると、指定した時間にGASを実行することができるので紹介します。

 この記事の対象者

GAS初心者
トリガー設定に不満のある方
決まった時間に動くGASを作りたい方


 コードを使うための準備
特にありません。...]]></description><link>https://zenn.dev/kojimaru/articles/95d0a3008a4b5d</link><guid isPermaLink="true">https://zenn.dev/kojimaru/articles/95d0a3008a4b5d</guid><pubDate>Sat, 25 Jan 2025 13:48:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hiepIGzb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591%25E6%25B1%25BA%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E6%2599%2582%25E9%2596%2593%25E3%2581%25B4%25E3%2581%25A3%25E3%2581%259F%25E3%2582%258A%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258F%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25AC%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2598%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR6Y3lfaVFlMGstVHN6b0prWFpXMFlNOG9wdEYwMkVnaXRibTRTd2otOFo5UE95dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こじまる</dc:creator></item><item><title><![CDATA[金利10パーセントで、毎年100万円ずつ20年間投資したらどうなるか]]></title><description><![CDATA[金利10パーセントで、毎年100万円ずつ20年間投資したらどうなるか。それを知りたくて、プログラムを書いてみた。あまりの扱いについて、ちゃんとしたルールがありそうだが、ざっくり計算したかったので、ちゃんと調べていないで実装している。

 コード
let principal = 100;
const interestRate = 10;
const addAmount = 100;

let year = new Date().getFullYear();
const years = 20;

for (let i = 0; i &lt; years; i++) {
  console.l...]]></description><link>https://zenn.dev/senaha/articles/452430498ba729</link><guid isPermaLink="true">https://zenn.dev/senaha/articles/452430498ba729</guid><pubDate>Sat, 25 Jan 2025 13:25:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l-QMCm8H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2587%2591%25E5%2588%25A910%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A7%25E3%2580%2581%25E6%25AF%258E%25E5%25B9%25B4100%25E4%25B8%2587%25E5%2586%2586%25E3%2581%259A%25E3%2581%25A420%25E5%25B9%25B4%25E9%2596%2593%25E6%258A%2595%25E8%25B3%2587%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:senaha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lUeUJ6QjU5OENKS2VIdVU3alZ5YmN3czkwT1FWMkJ1YmZoNmdIM3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>senaha</dc:creator></item><item><title><![CDATA[スプレッド構文について、まとめてみた]]></title><description><![CDATA[
 スプレッド構文とは
スプレッド構文（...）は、配列やオブジェクトの要素を展開するためのJavaScriptの構文です。この機能は、配列やオブジェクトを簡単にコピーしたり、結合したりする際に便利です。
const arr1 = [1, 2, 3];
const arr2 = [...arr1, 4, 5];

console.log(arr2); // [1, 2, 3, 4, 5]
...arr1: 配列 arr1 の全ての要素を展開します。
結果: 新しい配列 [1, 2, 3, 4, 5] が作成されます。

 配列のマージ
複数の配列をマージすることができます。
const ...]]></description><link>https://zenn.dev/maru8118/articles/03fe11852e81bb</link><guid isPermaLink="true">https://zenn.dev/maru8118/articles/03fe11852e81bb</guid><pubDate>Sat, 25 Jan 2025 10:47:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r_KjuLxe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:marus8118%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkYjllYmNlNWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>marus8118</dc:creator></item><item><title><![CDATA[Google Apps Script + gas-db + HTML を使った TODO アプリ]]></title><description><![CDATA[以前自分が作った ライブラリをこちらで紹介したのですが、使い所がわかりづらいかもと思いまして、TODOアプリのサンプルを作りました。
このサンプルは以下の技術を組み合わせ、簡易的な TODO リストアプリを構築する例です：


gas-db（Google スプレッドシートをデータベースのように扱うためのライブラリ）
Google Apps Script のウェブアプリ機能
Apps Script から返される HTML（クライアントサイド JS）

GitHub Pages などの外部ホスティングは不要で、すべてを GAS 上で提供します。
また、こちらで紹介したコードはリポジトリ内でも...]]></description><link>https://zenn.dev/shunta_furukawa/articles/d99b2635679dfd</link><guid isPermaLink="true">https://zenn.dev/shunta_furukawa/articles/d99b2635679dfd</guid><pubDate>Sat, 25 Jan 2025 10:35:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--efyu3nav--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Apps%2520Script%2520%252B%2520gas-db%2520%252B%2520HTML%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%2520TODO%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shunta%2520Furukawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxYTU5NThlYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shunta Furukawa</dc:creator></item><item><title><![CDATA[Package.jsonとは]]></title><description><![CDATA[
依存関係を記したJSONファイル
機能
・このファイルにプロジェクト毎に必要なパッケージの名前とバージョンを記述すれば、npmが勝手に必要な（依存しているという）パッケージをインストールしてくれる。
・インストールしたパッケージが依存しているパッケージや、さらにそれが依存しているパッケージも自動でインストールしてくれる

(参照元：npmとpackage.json)
らしいです。
pomファイルと似てる！
package.jsonファイルにひたすら必要なパッケージ名を記述して、
npm install
を実行すれば、ファイル内に書いてあるパッケージをダウンロードしてくれるらしいです。
...]]></description><link>https://zenn.dev/iizukasan/articles/what_is_package-json</link><guid isPermaLink="true">https://zenn.dev/iizukasan/articles/what_is_package-json</guid><pubDate>Sat, 25 Jan 2025 08:22:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lTqCqqk3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Package.json%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iizk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwMGM0NzA2ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iizk</dc:creator></item><item><title><![CDATA[[MODULE_TYPELESS_PACKAGE_JSON] Warningが出た時の対策]]></title><description><![CDATA[開発環境を構築中にNode.jsでスクリプトを書いて、package.jsonにnpm scriptsとして実行してあげると[MODULE_TYPELESS_PACKAGE_JSON] Warningというエラーが出たのでメモ。

 どういうことか
このエラーには続きがありまして。
Module type of file:///Users/hoge/Project/script.js is not specified and it doesn't parse as CommonJS.
Reparsing as ES module because module syntax was det...]]></description><link>https://zenn.dev/straw_engine/articles/f5d90d5430248b</link><guid isPermaLink="true">https://zenn.dev/straw_engine/articles/f5d90d5430248b</guid><pubDate>Fri, 24 Jan 2025 04:04:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EhjACcCW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BMODULE_TYPELESS_PACKAGE_JSON%255D%2520Warning%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hanatsuyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKellZZEM2T1pzUWxjdmVrSkMxZlhCOXhxcTd6bmZkMzZCdGtuT249czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hanatsuyo</dc:creator></item><item><title><![CDATA[Rechartsの折れ線グラフカスタマイズ方法]]></title><description><![CDATA[株式会社 Rehab for JAPAN エンジニアのもじゃ(@moja_moja)です。
前回は折れ線・棒・円・折れ線 + 棒グラフの実装例を紹介しました。
今回は紹介しきれなかった折れ線グラフのカスタマイズ方法をサンプルコード付きで紹介していきたいと思います。
なお、基本の折れ線グラフ実装例や一部の説明については、前回紹介しているので省きます。
サンプルコードの実行方法についてはこちらに記載しています。

 線の形状を変更する方法
&lt;Line/&gt;コンポーネントの線の形状を変更するには”type”のプロパティを使用します。
type は"linear"・"monotone"...]]></description><link>https://zenn.dev/rehabforjapan/articles/9c0acc2abb4d9b</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/9c0acc2abb4d9b</guid><pubDate>Fri, 24 Jan 2025 03:00:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yAwFNv4I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Recharts%25E3%2581%25AE%25E6%258A%2598%25E3%2582%258C%25E7%25B7%259A%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2582%25E3%2581%2598%25E3%2582%2583%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmZGEwZmUzZDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もじゃ</dc:creator></item><item><title><![CDATA[【フレームワーク不要！】モーダルを作って学ぶ、TypeScriptの具体的な使い方]]></title><description><![CDATA[Web サイト制作がメインのコーダー/エンジニアの皆さん、TypeScript を使っていますか？
TypeScript 導入の参考記事がアプリ開発向けのものばかりで、サイト制作の現場にはどうやって導入するんだ、？となる方に、記事を書いてみました。

 この記事を書こうと思った理由

入門のチュートリアルや、型について学んでみたけど、実際にどう使うの？という方に向けての知見共有のため
TypeScript は React,Vue 等と合わせて使う記事や検索結果が多く、サイト制作向けのものが少なかったため
Web サイト制作のコーダー/エンジニアが、TypeScript に入門するため

...]]></description><link>https://zenn.dev/taku1116/articles/e73f72d961db11</link><guid isPermaLink="true">https://zenn.dev/taku1116/articles/e73f72d961db11</guid><pubDate>Fri, 24 Jan 2025 02:16:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TzCiq_OY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E4%25B8%258D%25E8%25A6%2581%25EF%25BC%2581%25E3%2580%2591%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581TypeScript%25E3%2581%25AE%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnlhZ3d2T2FJRExLV2pYWVVkLXNpUDVzM1c0TXRHQ1pzbUVJZWpKTDVsMHMxYk9CUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taku</dc:creator></item><item><title><![CDATA[pnpm workspace を利用したモノレポで「この PR の影響を受けるパッケージ」をフィルタする]]></title><description><![CDATA[
 3行まとめ


pnpm の --filter オプションにはパッケージ名だけでなく git の commit や branch も渡すことができる

pnpm ls --filter をうまく使えば「main branch からの diff の影響を受けるパッケージ」の一覧を取り出せる
ドキュメントや help をちゃんと見ると、意外と知らないことが書いてある


 モチベーション
LayerX のバクラク事業部では Webapp（Web Frontend アプリケーション）のモノレポ化を進めており、1つのリポジトリに複数の Next.js アプリケーションが存在します。
そこで悩...]]></description><link>https://zenn.dev/layerx/articles/5ef844aa73f051</link><guid isPermaLink="true">https://zenn.dev/layerx/articles/5ef844aa73f051</guid><pubDate>Fri, 24 Jan 2025 01:17:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--URcMVr1L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pnpm%2520workspace%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E3%2581%25A7%25E3%2580%258C%25E3%2581%2593%25E3%2581%25AE%2520PR%2520%25E3%2581%25AE%25E5%25BD%25B1%25E9%259F%25BF%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2582%258B%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2580%258D%25E3%2582%2592%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:izumin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2OTFlNjE4YzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LayerX%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pLQnhYeEszZEtUbG80dkZXU04zbWNpU0lvNlRFckpid1M3WUdoeFE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>izumin</dc:creator></item><item><title><![CDATA[【GAS】月初・月末にメールを送るコードの書き方]]></title><description><![CDATA[
 はじめに：月初や月末にメールを送りたい
月初や月末に何らかのメールを送るのは、どこの企業でもありがちな作業だと思います。
これが地味にメンドウ…
Gmailの予約送信機能を使ってもいいのですが、年始に12ヶ月分の予約をセットするのはちょっと不格好（Gmailの予約送信に数字が入っているのも気になる）。
そこでGoogle apps script（GAS）を使ってメール自動送信する発想になるのですが「月初や月末だけ送る設定」が意外に難しい。
スプレッドシートに日程表を作って、読み込ませて送信してもいいのですが、今回はもっとシンプルな方法を紹介します。

 この記事の対象者

GAS初心...]]></description><link>https://zenn.dev/kojimaru/articles/aed68a1018aa00</link><guid isPermaLink="true">https://zenn.dev/kojimaru/articles/aed68a1018aa00</guid><pubDate>Thu, 23 Jan 2025 13:39:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UQ_MJTfZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591%25E6%259C%2588%25E5%2588%259D%25E3%2583%25BB%25E6%259C%2588%25E6%259C%25AB%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2598%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR6Y3lfaVFlMGstVHN6b0prWFpXMFlNOG9wdEYwMkVnaXRibTRTd2otOFo5UE95dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こじまる</dc:creator></item><item><title><![CDATA[Biome の導入 〜 設定まで]]></title><description><![CDATA[最近巷で話題の biome を ESLint と  Prettier の代わりに導入してみようと思います。
導入 〜 設定までの備忘録として記事にしようと思います。
今回はReact や Next のプロジェクトが既に立ち上がってる状態を前提としています。
この記事では npm で導入していきます。

 Biome とは
もともと Rome という、lint や format、build、test といった開発ツールを１つに集約することを目指したプロジェクトがありました。
この Rome の主要メンバーによってフォークされて Biome が生まれたらしいです。
Biome は JavaS...]]></description><link>https://zenn.dev/cami_crane/articles/e43121c9f82b6c</link><guid isPermaLink="true">https://zenn.dev/cami_crane/articles/e43121c9f82b6c</guid><pubDate>Thu, 23 Jan 2025 13:24:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GL_JN70---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%2520%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%2520%25E3%2580%259C%2520%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258C%25E3%2581%2584%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzOGEzZTlhNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くれいん</dc:creator></item><item><title><![CDATA[Node.jsでコンソールの色を変えたい時に使える「chalk」]]></title><description><![CDATA[Node.jsで走らせたスクリプトで条件によってコンソールの色を変えて分かりやすくしたいという場面がありました。
何か良いライブラリがないのかなーと探してみるとすぐにchalkに出会いました。
https://www.npmjs.com/package/chalk

 使い方

 インストール
npm install chalk

 importして色をつける
import chalk from 'chalk';

console.log(chalk.blue('Hello world!'));


 その他

 背景色をつける
 console.log(chalk.bgBlue('He...]]></description><link>https://zenn.dev/straw_engine/articles/cafefca1222db6</link><guid isPermaLink="true">https://zenn.dev/straw_engine/articles/cafefca1222db6</guid><pubDate>Thu, 23 Jan 2025 08:25:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hVSyvigo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%2589%25B2%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2580%258Cchalk%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hanatsuyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKellZZEM2T1pzUWxjdmVrSkMxZlhCOXhxcTd6bmZkMzZCdGtuT249czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hanatsuyo</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#１8 GSAP ScrollTrigger Sample2 Horizontal Scroll】]]></title><description><![CDATA[
 【#１8 GSAP ScrollTrigger Sample2 Horizontal Scroll 1】
YouTube: https://youtu.be/XU6iYyIT6K4
https://youtu.be/XU6iYyIT6K4
今回からはScrollTriggerのcontainerAnimationを使用して、
水平方向にスクロールするアニメーションの実装を行います。
https://gsap.com/blog/3-8/#containeranimation
今回は、HTMLとCSSの要素を先に作成していきます。

index.html
&lt;!DOCTYPE htm...]]></description><link>https://zenn.dev/web_life_ch/articles/42219db996c604</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/42219db996c604</guid><pubDate>Thu, 23 Jan 2025 08:19:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sQQz1bgu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%25918%2520GSAP%2520ScrollTrigger%2520Sample2%2520Horizo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[[JavaScript]IF 文で False と判定される条件値について（備忘録）]]></title><description><![CDATA[
 １．はじめに
・IF()は括弧中に設定した条件を判定し、Boolean型に変換します。
設定条件の判定結果がTrueであれば、プログラムが実行されます。

IFの基本構文
if (設定条件) {
    // 設定条件がTrueの場合、実行されるプログラム
}


 ２．False として判定される条件値

Sample.js
if (false) {
    console.log('結果表示');
}

if (0) {
    console.log('結果表示');
}

// 条件が空文字列
if ('') {
    console.log('結果表示');
}

if ...]]></description><link>https://zenn.dev/yama_kawa/articles/99275196a2efef</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/99275196a2efef</guid><pubDate>Wed, 22 Jan 2025 14:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J-_BwimX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255DIF%2520%25E6%2596%2587%25E3%2581%25A7%2520False%2520%25E3%2581%25A8%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E6%259D%25A1%25E4%25BB%25B6%25E5%2580%25A4%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1ZjYyZjIwYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[【GAS】スプレッドシートの情報をオブジェクト型で取得するテンプレート]]></title><description><![CDATA[
 はじめに：スプレッドシートの情報取得で便利なテンプレート
Google apps script（GAS）で業務効率を改善するとき、スプレッドシートを起点に操作することがほとんどです。
私が社内でよく依頼をうけるパターンは以下の2つです。

メール送信を自動送信する
まとめてカレンダー登録を行う

どちらの場合も、スプレッドシートに情報をまとめるところから始めます。
シート情報をGASで処理していく場合、シート内にまとめた情報を取得し、その後の処理を行っていきます。
シート情報を操作しやすいオブジェクト型で取得するGASコードのテンプレートの紹介です。

 この記事の対象者

GAS初...]]></description><link>https://zenn.dev/kojimaru/articles/0d0359368a2366</link><guid isPermaLink="true">https://zenn.dev/kojimaru/articles/0d0359368a2366</guid><pubDate>Wed, 22 Jan 2025 14:09:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ytt1LQ0W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%259E%258B%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2598%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR6Y3lfaVFlMGstVHN6b0prWFpXMFlNOG9wdEYwMkVnaXRibTRTd2otOFo5UE95dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こじまる</dc:creator></item><item><title><![CDATA[【学習メモ】配列やオブジェクトの便利な構文まとめ]]></title><description><![CDATA[
 【学習メモ】配列やオブジェクトの便利な構文まとめ
最近のモダンな JavaScript 開発で頻出する配列とオブジェクトの構文について学習したので、自分の備忘録としてまとめました。特に React の開発で頻繁に使用する構文なので、しっかり理解しておきたいポイントです。

 1. 分割代入（Destructuring Assignment）
配列やオブジェクトから特定の値を取り出して、変数に代入する構文です。最初は少し見慣れない書き方でしたが、使っているうちに便利さを実感しました。

 配列の分割代入
const [a, b] = ['foo', 'bar'];
console.lo...]]></description><link>https://zenn.dev/c_kiro/articles/6e2d520d0ac1e5</link><guid isPermaLink="true">https://zenn.dev/c_kiro/articles/6e2d520d0ac1e5</guid><pubDate>Wed, 22 Jan 2025 11:55:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PF3hYm59--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2582%2584%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:C.Kiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXBPb0VMakJjcU9hZmxFVkJTckRlWFRpeDd4Sy1QeTRxclcxaHVuWEtFaTZJSVdWcHo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>C.Kiro</dc:creator></item><item><title><![CDATA[Date.toISOString は常にUTCの時刻を返す]]></title><description><![CDATA[
 まとめ
実行環境が JST（日本標準時、UTC+9）の場合でも、toISOString の出力は 常に UTC の時刻として表示されます。これは、toISOString が実行環境のタイムゾーンに影響を受けず、UTC の形式で日時を表すからです。なの、実行環境は出力結果に影響しません。

 サンプルコード
const date = new Date("2025-01-01T00:00:00+09:00");
console.log(date.toISOString()); // UTC 時刻で表示
// 出力結果: 2024-12-31T15:00:00.000Z

 解説

入力さ...]]></description><link>https://zenn.dev/k_kazukiiiiii/articles/1bc422a8176b8e</link><guid isPermaLink="true">https://zenn.dev/k_kazukiiiiii/articles/1bc422a8176b8e</guid><pubDate>Wed, 22 Jan 2025 10:24:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--42GFhnie--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Date.toISOString%2520%25E3%2581%25AF%25E5%25B8%25B8%25E3%2581%25ABUTC%25E3%2581%25AE%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kimura%2520Kazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2MDJhZGIxMWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kimura Kazuki</dc:creator></item><item><title><![CDATA[React Tokyo トレンドレポート : <ViewTransition> Component]]></title><description><![CDATA[こんにちは！cordeliaです。
React TokyoのDiscordには情報・質問部屋というフォーラム形式のチャンネルがあります。これは各々が気になったトピックを立て、関連コンテンツ（記事・issue・Pull Request・動画・SNS投稿、なんでも）を共有するナレッジ蓄積型のチャンネルです。旬なものからマニアックなものまで、様々な情報が日々蓄積されております。コミュニティの皆様いつもありがとうございます。
そこで！特に盛り上がったチャンネルに共有されたコンテンツをピックアップして皆様にお届けしようじゃないか、という試みがこのReact Tokyo トレンドレポートです🎉
そし...]]></description><link>https://zenn.dev/react_tokyo/articles/db90a5397364aa</link><guid isPermaLink="true">https://zenn.dev/react_tokyo/articles/db90a5397364aa</guid><pubDate>Wed, 22 Jan 2025 06:24:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FFjcRWI0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Tokyo%2520%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2520%253A%2520%253CViewTransition%253E%2520Component%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:cordelia%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczM2MxYTQzYzYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:React%2520Tokyo%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0YmFmZWVjNTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cordelia</dc:creator></item></channel></rss>