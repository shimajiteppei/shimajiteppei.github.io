<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2024-12-21T17:35:00+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1960985</id>
    <published>2024-12-21T17:35:00+09:00</published>
    <updated>2024-12-21T17:35:00+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/SKY-HaYaTo/items/e35383c1b98c9c85c6f1"/>
    <url>https://qiita.com/SKY-HaYaTo/items/e35383c1b98c9c85c6f1</url>
    <title>【Next.js】Inputタグのvalue属性の扱い方について解説(備忘録)</title>
    <content type="html">Inputタグのvalue属性の扱いは気をつけろ！
React.js(またはNext.js)で入力フォームといったinputタグを使う機会は数多くあります。
その際に使われる属性の一つにvalue属性の扱いには注意が必要です…</content>
    <author>
      <name>SKY-HaYaTo</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1960944</id>
    <published>2024-12-21T16:51:25+09:00</published>
    <updated>2024-12-21T16:51:25+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/dopuhe/items/c4ce833a107264c7156e"/>
    <url>https://qiita.com/dopuhe/items/c4ce833a107264c7156e</url>
    <title>話題のDiscord掲示板Distopiaについて調査してみた</title>
    <content type="html">話題のDiscord掲示板Distopiaについて調査してみた
みなさんDiscord掲示板って普段利用してますか？私は全然使っていません
今回公開サーバーを作るにあたって色々なDiscord掲示板…</content>
    <author>
      <name>dopuhe</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1960928</id>
    <published>2024-12-21T16:32:04+09:00</published>
    <updated>2024-12-21T16:47:26+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/shun123/items/ea4d44982457b902e321"/>
    <url>https://qiita.com/shun123/items/ea4d44982457b902e321</url>
    <title>【TS】ConditionalTypeについて</title>
    <content type="html">基本

型のif文

// Tの型がUの型に代入できれば、T型になる
// Tの型がUの型に代入できなければ、numberになる
type ConditionalType&amp;lt;T, U&amp;gt; = T exten…</content>
    <author>
      <name>shun123</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1960918</id>
    <published>2024-12-21T16:22:43+09:00</published>
    <updated>2024-12-21T16:22:43+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuto99999/items/e93c1d52c99e80c32572"/>
    <url>https://qiita.com/yuto99999/items/e93c1d52c99e80c32572</url>
    <title>【TypeScript】type-challenges 中級編 9・Deep Readonly 解説</title>
    <content type="html">お題
オブジェクトのすべてのパラメーター（およびそのサブオブジェクトを再帰的に）読み取り専用にする型DeepReadonlyを実装する。
やりたいこと
type Example = {
  x: {
    a…</content>
    <author>
      <name>yuto99999</name>
    </author>
  </entry>
</feed>
