<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 13 Aug 2025 12:04:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【DAY64】新規開発 or 改修？JavaとFirebaseの選択で迷ったら]]></title><description><![CDATA[
 はじめに
とりあえず、過去のSpring Bootで作ったやつがまだ編集できる状態なので、これをベースに再構築できないかと考え中。
ただ、ここ最近のプライベートでの経験から、新しいWEBシステムをゼロから作るという選択肢も出てきた。
そこで、「今の資産を活かす改修」か「新たに作るべきか」、さらに「Java（Spring Boot）」か「Firebase（＋フロント）」かという技術的な選択も含めて、方向性を整理してみる。

 Firebaseではできないこと、Javaでできること
Firebaseは無料枠でもそれなりに使えるし、スピード感はある。ただ、以下の点で限界もある：

ロジック...]]></description><link>https://zenn.dev/keisuke4649/articles/day64-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day64-pg-connection</guid><pubDate>Tue, 12 Aug 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uZO0Egyl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY64%25E3%2580%2591%25E6%2596%25B0%25E8%25A6%258F%25E9%2596%258B%25E7%2599%25BA%2520or%2520%25E6%2594%25B9%25E4%25BF%25AE%25EF%25BC%259FJava%25E3%2581%25A8Firebase%25E3%2581%25AE%25E9%2581%25B8%25E6%258A%259E%25E3%2581%25A7%25E8%25BF%25B7%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[Spring Bootでwarから動的にファイルを除外する]]></title><description><![CDATA[表題通り。
納品時などにおいて、warに含めてはならないファイルがあったり。
ビルド時に除外するように設定可能。

 基本
build.gradleに以下の設定を追加。
war {
    rootSpec.exclude('**/foo/**')
    archiveFileName = 'something.war'
}
rootSpec.excludeで対象のファイル/ディレクトリをwarから除外できる。

 応用
Groovyを使えば動的に削除対象を設定可能。
ファイルやプロパティなどから削除対象を定義したりできる。
以下、サンプル。
ケース：
fooとbarディレクトリをwa...]]></description><link>https://zenn.dev/tchida/articles/2bb33e5f04ab8f</link><guid isPermaLink="true">https://zenn.dev/tchida/articles/2bb33e5f04ab8f</guid><pubDate>Tue, 12 Aug 2025 10:18:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EiByWPeG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25A7war%25E3%2581%258B%25E3%2582%2589%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E9%2599%25A4%25E5%25A4%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takc-tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2ZTViMGQ2OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takc-tech</dc:creator></item><item><title><![CDATA[【作業ログ+解説】Spring 公式ガイド]]></title><description><![CDATA[
 はじめに
前回は Spring Boot の公式チュートリアルを実施しました。
https://zenn.dev/hiroto_ohira/articles/2eb00443ff9a4d#参考文献
今回は Spring ガイドからいくつか実施していきます。目標は、標準的な構成の Web アプリケーションの開発を体験することです。

 Spring ガイド

ネクストステップとして以下がちょうど良さそうだ。

REST API の作成
JPA で MySQL データアクセス
MockMvc と @MockBean で Web レイヤーテスト

リポジトリは以下に作成した。
https:...]]></description><link>https://zenn.dev/hiroto_ohira/articles/d0770b92851945</link><guid isPermaLink="true">https://zenn.dev/hiroto_ohira/articles/d0770b92851945</guid><pubDate>Mon, 11 Aug 2025 14:45:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BA-xNdfI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BD%259C%25E6%25A5%25AD%25E3%2583%25AD%25E3%2582%25B0%252B%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Spring%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3OGJjN2JkNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オーリア</dc:creator></item><item><title><![CDATA[【作業ログ+解説】Spring Boot 公式チュートリアル]]></title><description><![CDATA[
 はじめに
Spring Boot を触る機会があり、公式チュートリアルを実施してみました。
筆者は5年前に Java および Spring Boot を触った経験があるのみで、その大部分を忘れています。今回は最初にチュートリアルを実施し、あとから深掘る形式にしました。
さっそくやっていきましょう！

 公式チュートリアル
まず初めに公式チュートリアルを進める。
Java は歴史が長くユーザー数も多い。ドキュメントも充実していると判断し、日本語のドキュメントを参照する。
Spring リファレンスドキュメント - Java フレームワーク

 環境とバージョン
筆者が使用している OS...]]></description><link>https://zenn.dev/hiroto_ohira/articles/2eb00443ff9a4d</link><guid isPermaLink="true">https://zenn.dev/hiroto_ohira/articles/2eb00443ff9a4d</guid><pubDate>Mon, 11 Aug 2025 08:16:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FXoFMh0G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BD%259C%25E6%25A5%25AD%25E3%2583%25AD%25E3%2582%25B0%252B%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591Spring%2520Boot%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3OGJjN2JkNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オーリア</dc:creator></item><item><title><![CDATA[オブジェクト指向言語の文法を覚えたら次は何を覚える？]]></title><description><![CDATA[
 まえがき
令和現在、プログラミングの入門を勉強する時、変数・関数・クラスなどの文法を覚えていき、それが出来たら今度はフレームワークの勉強に入っていくことが多いと思います。
それは実践的でいいと思いますが、並行してGOFのデザインパターンをいくつか勉強するとフレームワークが提供する機能の意味も理解が早くなったりします。

 GOFのデザインパターンとは？
ググればでてきます。
が、ざっくり説明しますと、かつてオブジェクト指向言語が誕生した頃、the Gang of Fourというチームのとても頭いい４人の開発者が、「おのおのバラバラなやり方でクラスを使うより、パターン化して各パターンに...]]></description><link>https://zenn.dev/k_tabuchi/articles/a1e0020b486809</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/a1e0020b486809</guid><pubDate>Sun, 10 Aug 2025 07:40:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f6Ln1G2P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E6%2596%2587%25E6%25B3%2595%25E3%2582%2592%25E8%25A6%259A%25E3%2581%2588%25E3%2581%259F%25E3%2582%2589%25E6%25AC%25A1%25E3%2581%25AF%25E4%25BD%2595%25E3%2582%2592%25E8%25A6%259A%25E3%2581%2588%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[【Java】「SqlTypes.JSON」を使用してEntityでJsonの列を扱う（ Hibernate 6以降）]]></title><description><![CDATA[
 概要
Hibernateのentityでjson型のデータを扱う時にHow to map Oracle JSON columns using JPA and Hibernateの記事で紹介されているような、hypersistence-utilsのライブラリを使う方法が対応の一つとして挙げられます。これは文字列をjsonに自動でシリアライズしてくれて便利ではあります。
もう一つの方法としてはHibernate 6以降に実装された、PostgreSQL Hibernate 6 JSON Exampleで紹介されている、SqlTypes.JSONのアノテーションを付与する方法が挙げられます...]]></description><link>https://zenn.dev/someone7140/articles/9f5388832d51e9</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/9f5388832d51e9</guid><pubDate>Sat, 09 Aug 2025 05:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XHgEbSI2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2580%258CSqlTypes.JSON%25E3%2580%258D%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6Entity%25E3%2581%25A7Json%25E3%2581%25AE%25E5%2588%2597%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25EF%25BC%2588%2520Hibernate%25206%25E4%25BB%25A5%25E9%2599%258D%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[🧠【Java】スタックとヒープを完全理解！図解でわかるメモリ構造の仕組み]]></title><description><![CDATA[
 🎯 はじめに
Javaを学び始めたとき、多くの人がつまずくのが「スタックとヒープの違い」です。
本記事では、実際のメモリ構造を図解で丁寧に紐解きながら、以下の疑問に答えます：

スタックとヒープ、それぞれ何が格納される？
オブジェクトの実体はどこにある？
JVMのメモリ構造はどうなっている？


 🧱 JVMのメモリ構成（全体像）
Javaプログラムが実行されると、JVM（Java仮想マシン）は主記憶（RAM）上に次のような領域を確保します。
実行するjavaプログラムの例
public class MemorySample {
    public static void main...]]></description><link>https://zenn.dev/taictech/articles/3de81ba98498ed</link><guid isPermaLink="true">https://zenn.dev/taictech/articles/3de81ba98498ed</guid><pubDate>Fri, 08 Aug 2025 08:15:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K6R3wuiD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A8%25E3%2583%2592%25E3%2583%25BC%25E3%2583%2597%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E7%2590%2586%25E8%25A7%25A3%25EF%25BC%2581%25E5%259B%25B3%25E8%25A7%25A3%25E3%2581%25A7%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tktech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmMzNmMTI1MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tktech</dc:creator></item><item><title><![CDATA[エンタープライズシステムで活用 JakartaOne2025参加レポート]]></title><description><![CDATA[
 はじめに
2025年7月30日に開催されました、JakartaOne 2025 Japanに参加してきましたので内容をレポートします。

イベントサイト　https://jakartaone.org/2025/japan/


今回は２年ぶりの開催となり、以前はオンラインイベントであったため初のオフラインイベントとなります。全世界で見てもオフラインイベントとしての開催としては日本は最初の方とのことです。
ちなみに以前のオンラインイベントはJakartaOne Livestream - Japanという名称で、私自身オンラインで登壇させていただきました。そのころからもう3年も経とうとし...]]></description><link>https://zenn.dev/muit_techblog/articles/0363e1d8445400</link><guid isPermaLink="true">https://zenn.dev/muit_techblog/articles/0363e1d8445400</guid><pubDate>Fri, 08 Aug 2025 02:36:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DHaoODiF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25A7%25E6%25B4%25BB%25E7%2594%25A8%2520JakartaOne2025%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%25AB%2599%25E6%25A9%258B%2520%25E5%258D%259A%25E5%25AE%259F%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxZGYyYTRkNjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E4%25B8%2589%25E8%258F%25B1UFJ%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2583%2586...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWQyODE1MTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>髙橋 博実</dc:creator></item><item><title><![CDATA[マルチスレッドの基本<中編＞[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
Java SE11 Gold試験を勉強中の方
JavaのExecutorフレームワークの概要と主要APIついて知りたい方


 目次
1.スレッドプール
2.ExecutorServic...]]></description><link>https://zenn.dev/wakinoza/articles/ba437456e44bec</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/ba437456e44bec</guid><pubDate>Wed, 06 Aug 2025 07:48:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DjCZJGsH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%253C%25E4%25B8%25AD%25E7%25B7%25A8%25EF%25BC%259E%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[[Java]Scannerクラス とは （備忘録）]]></title><description><![CDATA[
 １．はじめに
ユーザーがキーボードで入力した内容や、ファイルの内容を読み取る際に使用します。
・Scannerクラスは、java.utilパッケージに配下に属しています。
　使用する場合は、パッケージをimportする必要があります。

Scannerクラスの使用方法
import java.util.Scanner;

// Scannerインスタンス（オブジェクト）作成
Scanner scanner = new Scanner(System.in);

!
重要：
Scanner クラスを利用する際は、インスタンス（オブジェクト）を作成します。
キーボードからの入力内容を受け付...]]></description><link>https://zenn.dev/yama_kawa/articles/1a09979431eb0c</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/1a09979431eb0c</guid><pubDate>Tue, 05 Aug 2025 11:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FH45Wawb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJava%255DScanner%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2581%25A8%25E3%2581%25AF%2520%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MzVlNmE1NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[JetBrains 2025.2ぞくぞくリリース！AI Assistantと価格改定まとめ]]></title><description><![CDATA[
 はじめに
こんにちは。JetBrains公式代理店NATTOSYSTEMのねばねばです。
みなさん、Jetbrains各種製品の2025.2バージョンが猛暑をふきとばす勢いでぞくぞくリリースされています。
今回はJetBrainsが2025年8月に発表したAI Assistant 2025.2新機能と、各種IDE製品の2025.2リリース情報、価格改定のニュースについて紹介いたします。


 JetBrains AI Assistant 2025.2の注目ポイント

 ✅ プロジェクトルールでAIにプロジェクト固有の指示を出せる
プロジェクトごとの命名規則やコーディングスタイルを設定...]]></description><link>https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</link><guid isPermaLink="true">https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</guid><pubDate>Tue, 05 Aug 2025 07:32:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4q0-u19--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JetBrains%25202025.2%25E3%2581%259E%25E3%2581%258F%25E3%2581%259E%25E3%2581%258F%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%2581AI%2520Assistant%25E3%2581%25A8%25E4%25BE%25A1%25E6%25A0%25BC%25E6%2594%25B9%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%25B0%25E3%2581%25AD%25E3%2581%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYWQxMDhjNTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BENATTOSYSTEM%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねばねば</dc:creator></item><item><title><![CDATA[JakartaOne 2025 Japanに参加してきました]]></title><description><![CDATA[
2025年7月30日、日本マイクロソフト株式会社で開催されたJakartaOne 2025 Japanに参加してきました。
https://jakartaone.org/jp/2025/japan/
私事になりますが、これまで私は、新卒入社以来とあるSaaSのテクニカルサポートを生業としてきましたが、8月から同社内のシステム開発部門に異動することになりました。異動先ではJakarta EE（エンタープライズ向けJavaアプリケーション開発のための標準仕様群） を利用していると聞いたため、これを機に少しでも技術的な理解を深めようと思い、先輩に勧められて今回のイベントに急遽参加することにし...]]></description><link>https://zenn.dev/adaisukev/articles/d3586015c3e71b</link><guid isPermaLink="true">https://zenn.dev/adaisukev/articles/d3586015c3e71b</guid><pubDate>Sun, 03 Aug 2025 23:32:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7UgPJWSW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JakartaOne%25202025%2520Japan%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiNzNiNTYxMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke</dc:creator></item><item><title><![CDATA[【DAY55】既存システムから学ぶ、構造的エンジニアリングのすすめ]]></title><description><![CDATA[
 既存のWebシステムを使って、技術の全体像をつかめるか？
バックエンド中心で作った過去のJavaベースのポートフォリオ。
「とりあえず一つ作ってみた」レベルでも、そのシステムをベースに改修し続けていくことで、総合的なエンジニアリングスキルに辿り着けるのか？
答えは、Yes（ただし条件付き）。


 構造的に学ぶとは？
単なる技術の「習得」ではなく、技術どうしの“つながり”を理解することが構造的な学び。Webシステムはそれらの技術が密接に組み合わさって動いている。

✅ フロントエンド：UIとUXをどう設計するか。ReactやVueなど
✅ バックエンド：ビジネスロジック。Spring...]]></description><link>https://zenn.dev/keisuke4649/articles/day55-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day55-pg-connection</guid><pubDate>Sun, 03 Aug 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--skTnC779--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY55%25E3%2580%2591%25E6%2597%25A2%25E5%25AD%2598%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581%25E6%25A7%258B%25E9%2580%25A0%25E7%259A%2584%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[Java仮想マシン（JVM）を読解しながら理解する #3]]></title><description><![CDATA[https://zenn.dev/h_kohe/articles/bd8986a73b02df
こちらの記事の続きです。
よんでいる公式ドキュメント
https://docs.oracle.com/javase/specs/jvms/se17/html/jvms-2.html

 2.3. Primitive Types and Values(プリミティブ型と値)
この項目に関しては個人的に新しい情報というよりなんとなく把握している内容だったので、振り返りやすいように表にまとめておきました。

 📌 数値型（Numeric Types）

 整数型（2.3.1. Integral Typ...]]></description><link>https://zenn.dev/h_kohe/articles/45c3d677915b73</link><guid isPermaLink="true">https://zenn.dev/h_kohe/articles/45c3d677915b73</guid><pubDate>Sun, 03 Aug 2025 10:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cAfIejk5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E4%25BB%25AE%25E6%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25EF%25BC%2588JVM%25EF%25BC%2589%25E3%2582%2592%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520%25233%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KOHE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMDQxMTQ1ZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KOHE</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その５ - 制御変数の扱い方 編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03-3
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-4</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-4</guid><pubDate>Fri, 01 Aug 2025 09:53:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d-ryyVeK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2595%2520-%2520%25E5%2588%25B6%25E5%25BE%25A1%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2520%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[マルチスレッドの基本<前編＞[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
Java SE11 Gold試験を勉強中の方
Javaのマルチスレッド、Threadクラス、Runnableインターフェースについて知りたい方


 目次
1.javaのマルチスレッド
...]]></description><link>https://zenn.dev/wakinoza/articles/a12e8b1e1d5286</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/a12e8b1e1d5286</guid><pubDate>Fri, 01 Aug 2025 07:34:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p0E_-7Rc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%253C%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%259E%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その４ - 算術演算および定数プール編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03-2
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-3</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-3</guid><pubDate>Thu, 31 Jul 2025 12:35:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nxcGZp2o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2594%2520-%2520%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E5%25AE%259A%25E6%2595%25B0%25E3%2583%2597%25E3%2583%25BC%25E3%2583%25AB%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その３ - 定数と変数で制御する編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03-1
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-2</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-2</guid><pubDate>Thu, 31 Jul 2025 09:42:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cfTTy-vE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%2520-%2520%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25A7%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[オブジェクト指向　動画のまとめ]]></title><description><![CDATA[

 🦊 オブジェクト指向とは？
🌱黒本著者のやさしくない!?Javaの動画からのまとめ
参考動画（YouTube 再生リスト）🎥
👉 オブジェクト指向入門（YouTube）


 🐶 オブジェクト指向とは？
ひとことで言うと？
👉 ソフトウェアをどう設計するかを考える「設計手法」のひとつ！

 🎯 設計って何？

設計＝「分割」と「結合」を考える行為


1つの大きなものを作るのは大変！
小さな部品に分ければ、バグ修正や仕様変更がしやすくなる
設計は工数・コスト削減のためのアイデア出し！

📹 関連動画はこちら


 🐱 オブジェクト指向の基礎

 💰 設計で意識すべき2つのコスト

...]]></description><link>https://zenn.dev/mu1555/articles/63564b248c2c2b</link><guid isPermaLink="true">https://zenn.dev/mu1555/articles/63564b248c2c2b</guid><pubDate>Thu, 31 Jul 2025 07:53:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zuSy0zJC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2580%2580%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mu1555%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JkYVVJdlNhWGpXcm1aSkdQNDFnVzFVazVaQ2lNc2lVMDVjdEJXPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mu1555</dc:creator></item><item><title><![CDATA[マルチプロジェクトビルドのための Gradle lockfile]]></title><description><![CDATA[Gradle は、依存ライブラリのバージョンを範囲で指定して管理できます。この仕組みは動的バージョン（dynamic version）と呼ばれています。
// build.gradle.kts

dependencies {
    // Use spring-boot-starter with its version prefixed with "3."
    implementation("org.springframework.boot:spring-boot-starter:3.+")
}
このときビルドを再現可能にするには、範囲指定されたバージョンを特定のバージョンに固定（ロ...]]></description><link>https://zenn.dev/ajalab/articles/gradle-lockfile-for-multi-project-builds</link><guid isPermaLink="true">https://zenn.dev/ajalab/articles/gradle-lockfile-for-multi-project-builds</guid><pubDate>Thu, 31 Jul 2025 07:29:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fmq-6bSE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Gradle%2520lockfile%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JXNDNncWxWV0NFZTU2M3J5bUVoamlScXREVGJCREFuV2FRbkR5VFRvd0FnNWJOV1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item></channel></rss>