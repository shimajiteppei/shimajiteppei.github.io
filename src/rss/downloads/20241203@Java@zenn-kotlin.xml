<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 03 Dec 2024 01:00:19 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Exposedのキャッシュ周り挙動・内部実装について調べてみた]]></title><description><![CDATA[この記事はKotlin Advent Calendar 2024の3日目の記事です

 TL;DR

Exposedのキャッシュは基本的にfun findById(id: EntityID&lt;ID&gt;): T?の時しか使われない

findでキャッシュを使いたい時はfindWithCacheConditionを使う


 はじめに
こんにちは、株式会社スマートラウンドの@tsukakei1012です！
当社では、サーバーサイドKotlinで開発しており、ORマッパーとしてJetBrainsのExposedを利用しています
本記事では、Exposedのキャッシュ周りの挙動・内部実装...]]></description><link>https://zenn.dev/smartround_dev/articles/d5cdb198731c7e</link><guid isPermaLink="true">https://zenn.dev/smartround_dev/articles/d5cdb198731c7e</guid><pubDate>Mon, 02 Dec 2024 21:30:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gJ8lE-UP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Exposed%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E5%2591%25A8%25E3%2582%258A%25E6%258C%2599%25E5%258B%2595%25E3%2583%25BB%25E5%2586%2585%25E9%2583%25A8%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tsukakei%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyZGQyNWFiZDUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2589%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZjUxNmM3MDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsukakei</dc:creator></item><item><title><![CDATA[Ktorで低コスト運用できる静的Webサイト構築ハンズオン]]></title><description><![CDATA[
 Kotlinでポートフォリオサイトを作ってみたいぃぃぃ ！！！
Kotlin大好きな皆さんこんにちは。てべすてんです。
Kotlin大好きな皆さんなら「Kotlinでポートフォリオサイトを作ってみたいぃぃぃ！」と思ったことが一度はあるはず。（圧）
今回はそんな人に送る 低コスト運用できる Kotlin製Webサイト構築のお話です。

 SG とは？
SGとは Static Generation と呼ばれる、Webアプリケーションの各パスを あらかじめ htmlなどのファイルとして出力する機能です。 NextjsなどのWebフロントエンドでよく使われる言葉になります。
SGの美味しい点...]]></description><link>https://zenn.dev/tbsten/articles/2b184de8325c90</link><guid isPermaLink="true">https://zenn.dev/tbsten/articles/2b184de8325c90</guid><pubDate>Mon, 02 Dec 2024 08:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DOfBLZlt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ktor%25E3%2581%25A7%25E4%25BD%258E%25E3%2582%25B3%25E3%2582%25B9%25E3%2583%2588%25E9%2581%258B%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E9%259D%2599%25E7%259A%2584Web%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E6%25A7%258B%25E7%25AF%2589%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2581%25B9%25E3%2581%2599%25E3%2581%25A6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjMGFhMjliZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てべすてん</dc:creator></item><item><title><![CDATA[Kotlin Analysis APIを触ってみる]]></title><description><![CDATA[この記事はMoney Forward Kansai Advent Calendar 2024の2日目の記事です。

こんにちは、株式会社マネーフォワード大阪開発拠点でバックエンドエンジニアをしているTaskです。
Kotlinに新しく導入されたAnalysis APIを紹介したいと思います。
この記事では、以下の内容を扱います。

Kotlin Analysis APIの簡単な紹介
簡単なIntelliJプラグインを使ったKotlin Analysis APIの挙動確認

以下の内容を扱いません。

Kotlin Analysis APIの詳細な実装の紹介
既存のKotlinコンパイラの...]]></description><link>https://zenn.dev/moneyforward/articles/76933bea86af34</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/76933bea86af34</guid><pubDate>Mon, 02 Dec 2024 00:06:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M9DWY-js--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520Analysis%2520API%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:T45K%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NWU5NDBmYTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>T45K</dc:creator></item><item><title><![CDATA[EntityのIDってどこで採番するのがいいの？]]></title><description><![CDATA[
 はじめに
Clean Architecture や DDD を勉強して (趣味で) 実践してたんですが、Entity の ID ってどこで採番するべきなんですかね。
自分の考えを整理したのでまとめてみます。
マサカリお待ちしてます。

 結論

使っている RDB で連番の方がパフォーマンス的な有利なことを測定して、それが必要なほどシビアなビジネス要求があるなら、DB で採番する

ID は直和で表現する


そうでないなら、ドメイン内で採番する

UUID v7 は優秀




 前提

サンプルコードは Kotlin で書きます。サーバーサイド Kotlin エンジニアなので.....]]></description><link>https://zenn.dev/uga_rosa/articles/318238c0739afc</link><guid isPermaLink="true">https://zenn.dev/uga_rosa/articles/318238c0739afc</guid><pubDate>Sun, 01 Dec 2024 16:31:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0Z1ZgLA_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Entity%25E3%2581%25AEID%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25A7%25E6%258E%25A1%25E7%2595%25AA%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258C%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uga-rosa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkMWRkZmY1ZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uga-rosa</dc:creator></item><item><title><![CDATA[accompanist.systemuicontroller を enableEdgeToEdge に置き換える]]></title><description><![CDATA[ポート株式会社 サービス開発部 Advent Calendar 2024 の1日目です。

 初めに
ポート株式会社でAndroid開発をしている@shxun6934 です。
弊社のAndroidアプリでは、一部の画面でaccompanistのsystemuicontrollerを使用していました。
ですが、このライブラリーはv0.34.0からDeprecatedになっています。
今回はその移行に関して行ったことや、知見をまとめておこうと思います！

 accompanist.systemuicontrollerとは
accompanist.systemuicontrollerは、Com...]]></description><link>https://zenn.dev/port_inc/articles/d2ddc535af8a9d</link><guid isPermaLink="true">https://zenn.dev/port_inc/articles/d2ddc535af8a9d</guid><pubDate>Sat, 30 Nov 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vc7AD1XY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:accompanist.systemuicontroller%2520%25E3%2582%2592%2520enableEdgeToEdge%2520%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2597%25E3%2582%2585%25E3%2582%2593%25E3%2581%2584%25E3%2581%25A1%2520-%2520shxun6934%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzc0NTRhOWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lDeDl0SnJRUXk1aFhmRzVlVTliUWdTQzJYRkVTc19QRE1GR3NPPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しゅんいち - shxun6934</dc:creator></item><item><title><![CDATA[AlertDialogのリストの選択肢]]></title><description><![CDATA[
 はじめに
AlertDialog は、Android アプリ開発でよく使用される UI コンポーネントです。
とても便利で、リストの選択肢から処理を選択する実装をよくします。
https://developer.android.com/develop/ui/views/components/dialogs?hl=ja#AddAList
本記事では、Pair を使って、コードをシンプルに整理する方法を紹介します。


 改善前のコード

AlertDialog - setItems の実装は、以下のようになります。

 コード例

val items = arrayOf("メール", ...]]></description><link>https://zenn.dev/tko1975/articles/bdbfb563fb4e0a</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/bdbfb563fb4e0a</guid><pubDate>Thu, 28 Nov 2024 01:59:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OXgOsECG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AlertDialog%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E9%2581%25B8%25E6%258A%259E%25E8%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[[Android]Kotlin2.0]]></title><description><![CDATA[droidkaigiでとてもタメになるKotlin2.0の解説があったので、すぐ見返せるようにメモ
https://www.youtube.com/watch?v=aZds8ewbRkk
K2 Compilerの影響

Stablized Features
Text Experience
Jetpack Compose
Compose Multiplatform
kotlin Native


 kotlin2.0にマイグレーション
kotlin, kspのバージョンを上げる(2.0.0以上)
依存先の追加compose compilerがkotlinのリポジトリに統合された
[vers...]]></description><link>https://zenn.dev/giglancer/articles/8d38551dc6fa21</link><guid isPermaLink="true">https://zenn.dev/giglancer/articles/8d38551dc6fa21</guid><pubDate>Wed, 27 Nov 2024 09:16:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YCCNgt5J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%255BAndroid%255DKotlin2.0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZmZlZTVlZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo</dc:creator></item><item><title><![CDATA[【Android】簡単!! Jetpack Compose Material3 ListItem で設定画面を作る]]></title><description><![CDATA[簡単に作ることができます。
// switch
ListItem(
  headlineContent = { Text("Advanced tracking") },
  leadingContent = {
    Icon(Icons.Filled.Wifi, contentDescription = "Wifi",)
  },
  trailingContent = {
    Switch(checked = on.value, onCheckedChange = { viewModel.toggle() })
  }
)


 🧑🏻‍💻 参考
https://android....]]></description><link>https://zenn.dev/maochanz/articles/0d97889e0c64a0</link><guid isPermaLink="true">https://zenn.dev/maochanz/articles/0d97889e0c64a0</guid><pubDate>Wed, 27 Nov 2024 03:59:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7ETVB7U0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Android%25E3%2580%2591%25E7%25B0%25A1%25E5%258D%2598%2521%2521%2520Jetpack%2520Compose%2520Material3%2520ListItem%2520%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chanzmao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNjNhNDE1ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chanzmao</dc:creator></item><item><title><![CDATA[LiveData と Flow の違い]]></title><description><![CDATA[
 はじめに
ChatGPT先生に聞いてみました。
Androidアプリ開発でよく使われる LiveData と Flow。
これらの違いを理解することで、プロジェクトに応じた最適な選択ができるようになります。本記事では、それぞれの特性や違いを徹底的に解説します！


 ライフサイクルとの連携

 LiveData

Androidライフサイクルに対応。
アクティビティやフラグメントがアクティブな間のみデータを配信。
メモリリークを防ぐ仕組みが内蔵。


 Flow

ライフサイクル非依存。
手動でライフサイクルの制御が必要。
バックグラウンド処理などに適している。



 データの性質...]]></description><link>https://zenn.dev/tko1975/articles/d1e6cf3bc56ca9</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/d1e6cf3bc56ca9</guid><pubDate>Wed, 27 Nov 2024 02:23:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7YTe8krA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LiveData%2520%25E3%2581%25A8%2520Flow%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[Delegates.observable と Getter/Setter の違い]]></title><description><![CDATA[
 はじめに
ChatGPT先生に聞いてみました。
Kotlin を使う中で、プロパティの変更を管理・追跡する場面は少なくありません。その際によく使われるのが Delegates.observable と getter / setter です。それぞれの特性を理解して使い分けることで、より効率的なコードが書けます！この記事では、この2つの違いをわかりやすく解説します。


 Delegates.observable とは？
Delegates.observable は プロパティの変更を監視するためのツール です。プロパティの値が変更されるたびに、指定したコールバック関数が呼び出されます...]]></description><link>https://zenn.dev/tko1975/articles/8400796415aa79</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/8400796415aa79</guid><pubDate>Wed, 27 Nov 2024 02:03:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_SbM-tCv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Delegates.observable%2520%25E3%2581%25A8%2520Getter%252FSetter%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[Delegates.observable を使ったプロパティの変更監視]]></title><description><![CDATA[
 はじめに
ChatGPT先生に聞いてみました。
Kotlin の Delegates.observable は、プロパティの値が変更されたときに指定した処理を実行できる便利なデリゲートプロパティです。
この記事では、Delegates.observable の基本的な使い方を初心者にも分かりやすく解説します！


 基本例
以下は、Delegates.observable を使ってプロパティの変更を監視する簡単なサンプルです。
import kotlin.properties.Delegates

class User {
    // プロパティ name を observable...]]></description><link>https://zenn.dev/tko1975/articles/936034e9f6f268</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/936034e9f6f268</guid><pubDate>Wed, 27 Nov 2024 01:10:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NnD4p3IK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Delegates.observable%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[Kotlin で if を使う]]></title><description><![CDATA[
 Keyword
if (条件) {処理}: 条件が成り立つ場合にコードブロック内の処理を実行する
else if (条件) {処理}:　複数の条件を追加したい場合、二つ目以降の条件・処理を指定する
else　{処理}: 上記の条件に当てはまらなかったものに対してコードブロック内の処理を実行する

条件が複数ある場合は、最初に当てはまった条件の処理が実行される
処理が一文のみの場合は中括弧 {} を省略できる


 if の使い方
if の利用方法には以下の2通りがあります。

if 文 (Statement) として使う
if 式 (Expression) として使う


 if 文...]]></description><link>https://zenn.dev/summer/articles/43c5a8bd996e98</link><guid isPermaLink="true">https://zenn.dev/summer/articles/43c5a8bd996e98</guid><pubDate>Sun, 24 Nov 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nm7ZA6VS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520%25E3%2581%25A7%2520if%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:summer%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd2dkZVY2X3ZVRU0tWjFWT1VLOHVsODNWVlo0UGc1TEhwb2dGeEw9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>summer</dc:creator></item><item><title><![CDATA[【Jetpack Compose】脱 Tv Lazy Layout --- アニメーション編]]></title><description><![CDATA[
 本記事の内容
Android TV 向けのライブラリである tv-foundation 1.0.0-alpha11 にて、遂に Tv Lazy Layout が非推奨 になりました。
Tv Lazy Layout の引数である PivotOffsets に関して、デフォルト値を使用している場合は単に Tv のプレフィックスを外すだけで問題ないです。
しかし、デフォルトとは異なる値を設定している場合は、CompositionLocal を利用して BringIntoViewSpec インスタンスを配布する実装に変更する必要があります。
(詳しい内容は 移行前後の差分編 を参照してくださ...]]></description><link>https://zenn.dev/taked137/articles/98cae42c74e1af</link><guid isPermaLink="true">https://zenn.dev/taked137/articles/98cae42c74e1af</guid><pubDate>Sun, 24 Nov 2024 09:11:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--URsSXtiU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591%25E8%2584%25B1%2520Tv%2520Lazy%2520Layout%2520---%2520%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taked137%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjhhOTUyYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taked137</dc:creator></item><item><title><![CDATA[Javaと比較するKotlin入門]]></title><description><![CDATA[
 前置き
Android開発でKotlinを使用する前に、まずは基礎知識から勉強します。
元々Java(やGroovy)での開発経験があるのでJavaと比較しながらみていきます。

 変数宣言
Kotlinは型推論が強力なので明示的な形指定は不要
JavaはJava10以降でvarが使用できるようになったが、あまり見なかった印象
(あとはRVコメントでfinalを付け忘れるなと言われた記憶)
Java
String message = "Hello";  // 変更可能
final String finalMessage = "Hello";  // 変更不可能
Kotlin
var ...]]></description><link>https://zenn.dev/ncdc/articles/2c683e63824d92</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/2c683e63824d92</guid><pubDate>Fri, 22 Nov 2024 09:12:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N4-8V0RC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258BKotlin%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%258F%25E3%2582%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkY2YyYWEzZGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わら</dc:creator></item><item><title><![CDATA[Android キーボードを隠す]]></title><description><![CDATA[
 Fragmentでタッチイベントを使ってキーボードを隠す方法


 はじめに
ChatGPT先生に聞いてみました。
この記事では、ChatGPTを活用して得られたアイデアを元に、Fragmentでのタッチイベントを使ったキーボード制御の実装方法をご紹介します。


 背景
EditTextにフォーカスがある状態で他の部分をタップすると、キーボードを隠したい場面は多くのアプリで必要になります。
この記事では、Fragmentを用いて、EditText以外をタップした場合にキーボードを隠す汎用的な方法をご紹介します。


 解決策
ルートビューとすべてのViewGroupにsetOnTo...]]></description><link>https://zenn.dev/tko1975/articles/8047b372e59124</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/8047b372e59124</guid><pubDate>Fri, 22 Nov 2024 07:01:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---_G-5MqQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%2520%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E9%259A%25A0%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[Gsonにレスポンスを殺された日]]></title><description><![CDATA[API通信周りの実装をリファクタリングしたらバグを埋め込んでしまったのでそこから得られた知見を共有したいと思います。

 この記事で得られる教訓

使っているJava製ライブラリについてKotlin製の代替があるならそちらに移行したほうがよい
KotlinはJavaにはない機能があるため、Kotlinの実装は悪くなさそうに見えても予期しない振る舞いをとるケースがある
とくにデフォルトパラメータとかnon-null周り


 レスポンスを格納するdata classをリファクタリングした
とあるエンドポイントのレスポンスを格納しているクラスをリファクタリングしました。
そのエンドポイントは...]]></description><link>https://zenn.dev/karabiner_inc/articles/8f55019481549b</link><guid isPermaLink="true">https://zenn.dev/karabiner_inc/articles/8f55019481549b</guid><pubDate>Thu, 21 Nov 2024 04:13:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4WAH_ncg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gson%25E3%2581%25AB%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%2592%25E6%25AE%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2597%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mikan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhZjQ2ZjFhYWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%2593%25E3%2583%258A%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%2520%25E3%2583%2587%25E3%2583%2599%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hxQVhyVFFUVVE1OUt6WUp0RFAyZDd6elV5aHNrVW1KRUlrLVU2TkpzPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mikan</dc:creator></item><item><title><![CDATA[KMPを学ぶ！JetBrains IntelliJ Fleetで環境構築からiOS・Androidシミュレータ実行まで]]></title><description><![CDATA[
 はじめに
今年、Kotlin MultiPlatform（KMP）はクロスプラットフォーム開発の分野で注目を集めています
私もこの技術を学ぶために、JetBrains の IntelliJ Fleet を使って開発環境を整え、iOS と Android のシミュレータでアプリを実行することに挑戦しました。
しかし、その過程ではいくつかのつまづきポイントに遭遇しました。
この記事では、それらのポイントと解決策を共有し、これから同じ環境を構築しようとしている方のお役に立てばと思います。
こちらの方が書かれている記事とあらかた被るんですが、一部ツールの使用など便利な部分があったので共有でき...]]></description><link>https://zenn.dev/rokki08/articles/cff9c8a96e6f50</link><guid isPermaLink="true">https://zenn.dev/rokki08/articles/cff9c8a96e6f50</guid><pubDate>Tue, 19 Nov 2024 09:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7QiUHRSB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:KMP%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581JetBrains%2520IntelliJ%2520Fleet%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%258B%25E3%2582%2589iOS%25E3%2583%25BBAndroid%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2590%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd09LX09RTnZMQm4zbk1HTGpXNlB4ZVlCYkYwMEdYLXhTZ1l4YjI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぐっち</dc:creator></item><item><title><![CDATA[Kotlin/Wasmに入門してみた]]></title><description><![CDATA[こんにちは！アルダグラムのKANNAの開発お手伝いをさせて頂いている @takjin です。
ここ最近、サーバサイドで Kotlin に触れる時間が増えているのですが、そんな Kotlin から Kotlin/Wasm が昨年からアルファ版として提供されたので入門してみました。
今回は、生成したKotlin/WasmをNext.js経由で動作させるところまで手を動かしてみます。
Kotlin 2.0.0
Next.js 14.2.x

 公式で提供されているコードに触れてみる
サンプルコードがGitHubで公開されていますので、手っ取り早く始めるならこちらから。
https://gith...]]></description><link>https://zenn.dev/aldagram_tech/articles/1ae95b5677c31f</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/1ae95b5677c31f</guid><pubDate>Thu, 14 Nov 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X1RBL39K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%252FWasm%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:jin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKemtxTjd4ZVRpOERZUVpYVVdpNUh6ZUFvWXdyTVlyWFVsYnpBYkw9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jin</dc:creator></item><item><title><![CDATA[ライブラリでしかお目にかかれない珍しい実装]]></title><description><![CDATA[11/11にGMOメイクアプリ・Sansan モバイル勉強会 in 福岡というイベントでLTをさせてもらったネタなんですが、Xで思いのほか反響があったので記事として書き起こそうとおもいました。
https://speakerdeck.com/mikanichinose/raiburaridesikaomu-nikakarenaizhen-siishi-zhuang
たまにComposeやcoroutineの実装を見にいくことがあるのですが、普段のアプリケーション開発ではあまりみない不思議な実装があったので、今回は3つ紹介したいとおもいます

 Avoid using data class...]]></description><link>https://zenn.dev/solenoid/articles/0443ea4758f305</link><guid isPermaLink="true">https://zenn.dev/solenoid/articles/0443ea4758f305</guid><pubDate>Tue, 12 Nov 2024 16:35:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HFNn9pTC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25A7%25E3%2581%2597%25E3%2581%258B%25E3%2581%258A%25E7%259B%25AE%25E3%2581%25AB%25E3%2581%258B%25E3%2581%258B%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E7%258F%258D%25E3%2581%2597%25E3%2581%2584%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mikan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hxQVhyVFFUVVE1OUt6WUp0RFAyZDd6elV5aHNrVW1KRUlrLVU2TkpzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mikan</dc:creator></item><item><title><![CDATA[時刻フォーマット hhの罠]]></title><description><![CDATA[ある日、Kotlinで実装している際に時刻フォーマットに関するミスがあったので、同じミスをする人が少しでも減ればと思い、この記事を書いてみました。

 24時間表記のフォーマット
2024-11-11T21:53:04を2024/11/11 21:53:04に整形したい場合、以下のようなプログラムを書いた経験はありますか？
    val dateTime = LocalDateTime.of(2024, 11, 11, 21, 53, 4)
    val formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm:ss")
  ...]]></description><link>https://zenn.dev/ooooomu/articles/62c3e682e466bc</link><guid isPermaLink="true">https://zenn.dev/ooooomu/articles/62c3e682e466bc</guid><pubDate>Mon, 11 Nov 2024 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Vc-kQhy1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2599%2582%25E5%2588%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%2520hh%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Omu%2520%252F%2520%25E3%2581%258A%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMGNjMzFlYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Omu / おむ</dc:creator></item></channel></rss>