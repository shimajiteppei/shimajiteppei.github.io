<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「CSS」のフィード]]></title><description><![CDATA[Zennのトピック「CSS」のRSSフィードです]]></description><link>https://zenn.dev/topics/css</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/094a9b2a18.png</url><title>Zennの「CSS」のフィード</title><link>https://zenn.dev/topics/css</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 05 Nov 2024 10:32:20 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/css/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[API設計のワークフローをスリム化する：EchoAPIでのスキーマの活用]]></title><description><![CDATA[
 はじめに
スキーマはAPI開発において不可欠な要素であり、データ構造を定義するための堅牢なフレームワークを提供します。スキーマは設計図のように機能し、データの形状やバリデーションルールを設定することで、アプリケーションコンポーネント間の一貫性と信頼性を確保します。APIでスキーマを使用することで、データの整合性が向上し、統一されたフォーマットに従うことでサービス間のコミュニケーションが円滑になります。本ガイドでは、スキーマの重要性を解説し、EchoAPI内での活用方法を示して、API設計と機能性を最適化する方法をご紹介します。


 EchoAPIとは？
EchoAPIは、プログラマ...]]></description><link>https://zenn.dev/nekosu/articles/dd82a2080a8f9f</link><guid isPermaLink="true">https://zenn.dev/nekosu/articles/dd82a2080a8f9f</guid><pubDate>Mon, 04 Nov 2024 10:59:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--REz2eQ6p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E3%2582%25B9%25E3%2583%25AA%25E3%2583%25A0%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259AEchoAPI%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nekosu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1YzIyNmI2ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nekosu</dc:creator></item><item><title><![CDATA[背景スクロールの抑制]]></title><description><![CDATA[
 はじめに
モーダルなどを表示する際に、背景のスクロールを止める実装をすることがあると思います。
理由としては以下のような感じで実装を求められるかなと思います。

ユーザーの視線をモーダルに集中させるため
モーダル自身にスクロールがある場合でも、モーダルのみをスクロールできるためユーザーの期待通りの操作ができ質が向上する

その際によくやるのがbodyにoverflow: hidden;を付与する方法でした。
しかし、ios18ではこの方法では完全に止めることができなくなりました。※ios17でも完全に抑制はできてはないです。

 調査結果
以下の実装方法を検証しました。

bodyに...]]></description><link>https://zenn.dev/takaa/articles/45e694a0af03df</link><guid isPermaLink="true">https://zenn.dev/takaa/articles/45e694a0af03df</guid><pubDate>Mon, 04 Nov 2024 09:05:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vyM-25ke--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2583%258C%25E6%2599%25AF%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E6%258A%2591%25E5%2588%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZTg4MTMwMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaa</dc:creator></item><item><title><![CDATA[Flexboxの理解と使用頻度が高そうなプロパティ一覧]]></title><description><![CDATA[使用頻度が高そうなFlexboxのプロパティを整理してみました。
この記事は、プログラミング初心者である筆者が、学習の過程でつまずいた経験をもとに備忘録としてまとめたものです。

 フレックスボックスとは？

引用文
フレキシブルボックスレイアウトモジュールは、通常フレックスボックスと呼ばれ、一次元のレイアウトモデルとして、またインターフェイス中のアイテム間で余白の分配をする機能と強力な位置合わせをする機能を提供するものとして設計されました。（中略）フレックスボックスが一次元であることは、フレックスボックスが一つの次元、つまり行か列のいずれかの方向にしかレイアウトしないことを述べています...]]></description><link>https://zenn.dev/risagoto/articles/e74e95cee9d8dc</link><guid isPermaLink="true">https://zenn.dev/risagoto/articles/e74e95cee9d8dc</guid><pubDate>Mon, 04 Nov 2024 08:10:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pcsgyzy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flexbox%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E4%25BD%25BF%25E7%2594%25A8%25E9%25A0%25BB%25E5%25BA%25A6%25E3%2581%258C%25E9%25AB%2598%25E3%2581%259D%25E3%2581%2586%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Risa._.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4YWJjZWY3NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Risa._.</dc:creator></item><item><title><![CDATA[実務で初めて分かったTailwind CSSのメリット7選]]></title><description><![CDATA[
 はじめに
プライベートでTailwind CSSをちょっと書いていた頃、別に言うほど悪くはないけどスタンダードなCSSやSassを置き換えるほど価値があるほどなのかな...と疑っていました。
しかしTailwind CSSが採用された中〜大規模チームに放り込まれて実装者・レビュアーを経験してから、その威力が次第に手にとってわかるようになりました。
今回はそこで感じたメリットを7個お伝えしようと思います。

 備考
現在も含めた筆者のCSS歴・UIライブラリ歴はこちら。

生CSS
Bootstrap
Sass
Emotion
MUI
Tailwind CSS
shadcn/ui


...]]></description><link>https://zenn.dev/yhase_rqp/articles/8f6abd45aa4a90</link><guid isPermaLink="true">https://zenn.dev/yhase_rqp/articles/8f6abd45aa4a90</guid><pubDate>Mon, 04 Nov 2024 01:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZG_zttfT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E5%2588%2586%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259FTailwind%2520CSS%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25AA%25E3%2583%2583%25E3%2583%25887%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3YmU3ZDM3N2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yha</dc:creator></item><item><title><![CDATA[Astro で Markdown を GitHub っぽく表示する]]></title><description><![CDATA[
 概要
Astro はファイルベースルーティングなので /src/pages/ ディレクトリ内に .md ファイルを配置するだけで、Markdown を HTML に変換してルートに応じたページを作成してくれます。便利ですね！
Markdown ファイルの内容を HTML に変換はしてくれるものの、スタイル指定が無いので見た目が微妙です。。
そこで、github-markdown-css というライブラリを使ってスタイルを整えてみたいと思います。このライブラリを使うことで Markdown ファイルの内容を GitHub っぽい見た目で表示できるようになります。最終的な見た目はこんな感...]]></description><link>https://zenn.dev/aono/articles/38b382ba0091df</link><guid isPermaLink="true">https://zenn.dev/aono/articles/38b382ba0091df</guid><pubDate>Mon, 04 Nov 2024 00:48:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aXthyYXG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%2520%25E3%2581%25A7%2520Markdown%2520%25E3%2582%2592%2520GitHub%2520%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aono%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmZTVjNjE3ZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aono</dc:creator></item><item><title><![CDATA[CSSの擬似クラスについて学びたい]]></title><description><![CDATA[
 はじめに
HITOTSU株式会社の河村康治です。
今回はCSSの擬似クラスに関して学んでいこうと思います！

 擬似クラスとは
擬似クラスは、要素の特定の状態に応じてスタイルを適用するものです。例えば、ユーザーがリンクをホバーしたときや、フォームの入力がフォーカスされているときなどの状況に合わせてスタイルを変更できます。

 1. hover
これは有名ですね！ホバー時にのみCSSが変更される処理です


index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
    &lt;meta charset=...]]></description><link>https://zenn.dev/hitotsu_blog/articles/444571efa61238</link><guid isPermaLink="true">https://zenn.dev/hitotsu_blog/articles/444571efa61238</guid><pubDate>Mon, 04 Nov 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8mV5ajsv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E3%2581%25AE%25E6%2593%25AC%25E4%25BC%25BC%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B3%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:koji0705%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0NjczMDg4NjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:HITOTSU%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lyQVdJeEpndHlqaGVBcmxLaVBsdHh4Mml1VnBNbjdWTEp0S2RxdWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koji0705</dc:creator></item><item><title><![CDATA[Bulma で Navbar のメニューを中央寄せする]]></title><description><![CDATA[Bulma を使用して Web サイトを構築している際にタイトルのところで詰まったので備忘録として残します。

 作りたかったもの
こういうやつです。
ブランドロゴが最も左側にあって、右側にまたアイテムがあって中央にメニューがおいてある感じのやつです。


 前提
最初は以下のように実装していました。
&lt;nav class="navbar" role="navigation" aria-label="main navigation"&gt;
  &lt;div class="navbar-brand"&gt;
    &lt;a class="navbar-item" href="...]]></description><link>https://zenn.dev/ndjndj/articles/892a610b61bf27</link><guid isPermaLink="true">https://zenn.dev/ndjndj/articles/892a610b61bf27</guid><pubDate>Fri, 01 Nov 2024 12:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5nj5Zpls--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bulma%2520%25E3%2581%25A7%2520Navbar%2520%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E4%25B8%25AD%25E5%25A4%25AE%25E5%25AF%2584%25E3%2581%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ndj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmOGFkYjRiMGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ndj</dc:creator></item><item><title><![CDATA[first-childとfirst-of-typeの違い]]></title><description><![CDATA[先頭の要素にだけ色をつけたいとき、first-childを使えばいいと思っていました。
しかし、CSSでfirst-childを指定しても色がつかない…first-of-typeを指定すると色がつきました。
first-childとfirst-of-typeの違いって普段全然意識していなかったので、まとめてみます。

 first-childとfirst-of-typeの違い
違いは「要素の中のどこを見ているか」です。

first-child：親要素の最初の子要素を見ている
first-of-type：親要素内で特定のタグ名（種類）の最初の要素を見ている

以下は、p:first-ch...]]></description><link>https://zenn.dev/928sekine/articles/0c1d45eca0a0d1</link><guid isPermaLink="true">https://zenn.dev/928sekine/articles/0c1d45eca0a0d1</guid><pubDate>Fri, 01 Nov 2024 12:26:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MFUjdOX2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:first-child%25E3%2581%25A8first-of-type%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259B%25E3%2581%258D%25E3%2581%25AD%25E3%2582%258A%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDQ3MGIzZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>せきねりな</dc:creator></item><item><title><![CDATA[HTML/CSS - display:flex も子要素も使えない制約で、要素内のテキストを縦方向の中央に配置する方法]]></title><description><![CDATA[
 はじめに
先日、とあるサンプル Web アプリの作成中に、display:flex もレイアウト調整用の子要素も使えない制約の下、要素内のテキストを縦方向の中央に配置する必要に迫られました。とりあえず四苦八苦しながら実装はできました。これが本当に最適解なのかどうか確信ないのですが、その点も含めて共有します。
!
2024/11/04 追記
その後、𝕏 上で助言頂いて、本記事投稿時より簡潔・洗練された方法を実現できました。


 要件
以下のようなスプリッターコンテナコンポーネントのサンプルプログラムを作っておりました。

ここで、以下のようないくつかの要件・こだわりがありました。

...]]></description><link>https://zenn.dev/j_sakamoto/articles/a1dae285f2ec31</link><guid isPermaLink="true">https://zenn.dev/j_sakamoto/articles/a1dae285f2ec31</guid><pubDate>Fri, 01 Nov 2024 11:44:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MNdAnwff--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%252FCSS%2520-%2520display%253Aflexw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540jsakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVX243dnJ5ZFlLb2NxdUhSUkIxSGZ4NGpVekNsdGNmZ290R2hfNWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@jsakamoto</dc:creator></item><item><title><![CDATA[CSSだけでカルーセルを実装してみる]]></title><description><![CDATA[こんにちは！アルダグラムでエンジニアをしている柴田です。

 はじめに
最近はCSSの進化が著しく、JavaScriptを使わずともCSSで高度なUIコンポーネントを実装できるようになってきました。特にカルーセルのようなUIもCSSだけで実現できることを知り、最新技術をキャッチアップしておきたいと感じました。
そこで今回は、CSSのscroll-snapプロパティを活用して、３種類のカルーセルを実装する方法をご紹介します。

 scroll-snapプロパティの紹介
scroll-snapプロパティとは、スクロール時に要素を特定の位置でピタリと止めることができるCSSの機能です。これによ...]]></description><link>https://zenn.dev/aldagram_tech/articles/7d7e6124e3a0fe</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/7d7e6124e3a0fe</guid><pubDate>Thu, 31 Oct 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--riDmKYfT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%25BC%25E3%2582%25BB%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shibata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkZTMwMDdmMmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shibata</dc:creator></item><item><title><![CDATA[[CSS]scrollbar-*はmacOSのスクロールバー設定を貫通しない]]></title><description><![CDATA[!
本記事の内容はあくまで経験に基づくものです。
公式の文献等ありましたらコメントいただけると助かりますmm


 ユーザーの環境に関係なくスクロールバーを表示させたいなら-webkit-scrollbarを使用するしかなさそう
スクロールバーのデザインをカスタマイズしているとき、
-webkit-scrollbar-*を使用していればmacOSのスクロールバーの設定によらず常時表示してくれるのですがscrollbar-*を使用しているとmacOSの設定に準拠してしまい常時表示されません。
サンプルコード

 index.html
&lt;div&gt;
  &lt;h3&gt;-web...]]></description><link>https://zenn.dev/smartcamp/articles/b728c8fae38400</link><guid isPermaLink="true">https://zenn.dev/smartcamp/articles/b728c8fae38400</guid><pubDate>Wed, 30 Oct 2024 12:07:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kgnPoYm3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BCSS%255Dscrollbar-%252A%25E3%2581%25AFmacOS%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%25BC%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E8%25B2%25AB%25E9%2580%259A%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Ayuu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNGYwMGIzM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SMARTCAMP%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hCRXRzOTYwTHZiRnpjamotQ2ZjLUZlQjRKNy1QaTZPc0FhZVZsPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayuu</dc:creator></item><item><title><![CDATA[API認証とは？重要性と実装方法]]></title><description><![CDATA[現代のソフトウェア開発において、APIへの安全かつ権限のあるアクセスを確保することは極めて重要です。API認証はこのプロセスの基本的な側面であり、APIにアクセスするユーザーやシステムのアイデンティティを確認します。本記事では、API認証とは何か、その重要性、一般的な認証方法、そしてEchoAPIを使用した実装例について探ります。


 API認証とは？
API認証は、APIを介してサーバーリソースにアクセスしようとするクライアントのアイデンティティを検証するプロセスです。これにより、認可されたユーザーやシステムのみがAPIと対話できるようになり、機密データや機能を不正アクセスから保護し...]]></description><link>https://zenn.dev/nekosu/articles/57b33a481f20ec</link><guid isPermaLink="true">https://zenn.dev/nekosu/articles/57b33a481f20ec</guid><pubDate>Tue, 29 Oct 2024 14:40:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rGjHWHxM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:API%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E9%2587%258D%25E8%25A6%2581%25E6%2580%25A7%25E3%2581%25A8%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nekosu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1YzIyNmI2ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nekosu</dc:creator></item><item><title><![CDATA[Safariだけ描画位置がズレる問題]]></title><description><![CDATA[先日Chromeと比べてSafariだけ描画位置がズレる事象に出くわし、沼ったので共有します。
ブラウザ差分が要因だと疑ったせいで沼っていたのですが、不要なCSSを効かせていたことが要因でした
一度Safariの仕様に苦しんだ人は同じようにSafariを疑うかもしれませんが、CSSを見直すのも手です。

 事象

Chromeでは正しい位置に描画されている要素が、Safariではズレて描画されていた

画像要素の上にオーバーレイで表示していた要素
Safariでだけ、なぜか小さい+左にズレて描画されていた




 原因

無駄に設定してしまっていたwidth=100%

オーバーレイの...]]></description><link>https://zenn.dev/shunsuke108m/articles/e1738869ee5825</link><guid isPermaLink="true">https://zenn.dev/shunsuke108m/articles/e1738869ee5825</guid><pubDate>Mon, 28 Oct 2024 16:03:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wt9xrlpb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Safari%25E3%2581%25A0%25E3%2581%2591%25E6%258F%258F%25E7%2594%25BB%25E4%25BD%258D%25E7%25BD%25AE%25E3%2581%258C%25E3%2582%25BA%25E3%2583%25AC%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%25AE%25E7%2594%25B0%25E5%25B3%25BB%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG9Jdy1QSHNvSW1WVGpKTmxFbkhnZkRyZ0pBVlRSQzhIaWMweDVJUmZLS3hlUjZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宮田峻輔</dc:creator></item><item><title><![CDATA[CSSでの:has()活用法：要素の数に応じてスタイルを変えるテクニック]]></title><description><![CDATA[
 そもそも擬似クラスの:has()とは？
CSSの擬似クラスは、特定の状態にある要素を選択するために使います。
:has()擬似クラスには二つの状態の要素を選択することができます。
・親要素の選択
・兄要素の選択
親要素の選択とは特定の子要素を持つ親要素を選択することで、兄要素の選択とは直後の特定のようをがある兄要素を選択することです。これにより今まではできなかった子要素から親要素、弟要素から兄要素を選択することができるようになりました。
要素の数が可変の時などに特定の数の場合にスタイリングをしなければいけない時などに便利だと思うので、今回はこの:has()を使って子の個数に応じたスタ...]]></description><link>https://zenn.dev/takaa/articles/0fd7cbc23cd2d9</link><guid isPermaLink="true">https://zenn.dev/takaa/articles/0fd7cbc23cd2d9</guid><pubDate>Mon, 28 Oct 2024 11:37:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--95-zxJ8p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E3%2581%25A7%25E3%2581%25AE%253Ahas%2528%2529%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%25EF%25BC%259A%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AE%25E6%2595%25B0%25E3%2581%25AB%25E5%25BF%259C%25E3%2581%2598%25E3%2581%25A6%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZTg4MTMwMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaa</dc:creator></item><item><title><![CDATA[REST APIにおけるダイジェスト認証の実装とデバッグ方法]]></title><description><![CDATA[REST APIのセキュリティを確保する際、開発者はさまざまな認証メカニズムから選択することが多いです。その中でも人気のある選択肢がダイジェスト認証です。本記事では、ダイジェスト認証を使用する理由、ダイジェスト認証とは何か、JavaとGoでの実装例、ツールを使ったテスト方法について説明します。

 REST APIにダイジェスト認証を使用する理由
ダイジェスト認証は、以下のような利点からユーザーを検証するための安全な方法です。
1. セキュアなパスワード伝送:
基本認証とは異なり、ダイジェスト認証ではパスワードがプレーンテキストで送信されず、ハッシュ化されるため、傍受のリスクが最小限に抑...]]></description><link>https://zenn.dev/rokuinu/articles/619ca4834715ba</link><guid isPermaLink="true">https://zenn.dev/rokuinu/articles/619ca4834715ba</guid><pubDate>Mon, 28 Oct 2024 11:08:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DCpEJsnl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:REST%2520API%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rokuinu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkZDY0M2MzZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rokuinu</dc:creator></item><item><title><![CDATA[display:noneとvisibility: hiddenの違い]]></title><description><![CDATA[
要素を見えなくしたいときに、display:noneとvisibility: hiddenはどちらも同じではないのか？という疑問からこの記事を書きました。
結論、どちらも同じではなかったです！
2つの大きな違いは、表示とレイアウトの違いにありました。
ここから詳しい解説をします。

 表示とレイアウトの違い


 display:none
DOMから要素が「取り除かれる」ため、隙間をつめて要素が並んでいるように見えます。

 visibility: hidden
要素が「非表示」にされるだけで、隙間をつめて要素が並ぶわけではありません。

 どちらもタブ操作不可・スクリーンリーダーの読...]]></description><link>https://zenn.dev/928sekine/articles/4a8d74af048216</link><guid isPermaLink="true">https://zenn.dev/928sekine/articles/4a8d74af048216</guid><pubDate>Mon, 28 Oct 2024 05:02:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UvwhMIUI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:display%253Anone%25E3%2581%25A8visibility%253A%2520hidden%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259B%25E3%2581%258D%25E3%2581%25AD%25E3%2582%258A%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDQ3MGIzZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>せきねりな</dc:creator></item><item><title><![CDATA[CSS Module版shadcn/uiがほしいという話]]></title><description><![CDATA[
 はじめに
shadcn/ui の CSS Module 版がほしい、と思った経緯と、すこし自分でやってみたという内容を記事にしてみました。
どなたかの何かの役に立つ情報になると嬉しいです。

 shadcn/ui の設計は素晴らしい
shadcn/ui は React のコンポーネント集です。
shadcn/ui の設計思想が素晴らしい、という主張は既にいろいろな方がネット上で述べていますが、
個人的にはその理由は以下の２点にあると考えています。

 コンポーネントのソースコードが直接配布される
公式の説明に

This is NOT a component library. It'...]]></description><link>https://zenn.dev/ksk_17090k1/articles/a21820c1a04798</link><guid isPermaLink="true">https://zenn.dev/ksk_17090k1/articles/a21820c1a04798</guid><pubDate>Sun, 27 Oct 2024 17:03:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YF4x6mnu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%2520Module%25E7%2589%2588shadcn%252Fui%25E3%2581%258C%25E3%2581%25BB%25E3%2581%2597%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksk_17090k1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGhlS0k3RVlTOUFGUXYyaFJPM21vOUFJXzZsWHY4WmVCbWc5TmxkajQ5bUlLUEROYXY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksk_17090k1</dc:creator></item><item><title><![CDATA[CSS備忘録]]></title><description><![CDATA[
 nth-of-type(n)とfirst-letter
[目的]
「Ｂ」の文字だけをcssで装飾したい。
[方法]
疑似要素を使用する。

「nth-of-child(n)」で、一部の要素のみを指定する。
「first-letter」で、最初の行の最初の文字にスタイルを適用させる。

[備考]

「nth-child」は、全てのセレクタを数える。pを指定しても、h1やh3なども数えられる。
「nth-of-type」は、指定したセレクタのみを数える。ｐを指定すれば、ｈ1やh3は数えられない。

[html]
&lt;div&gt;
    &lt;div class="content...]]></description><link>https://zenn.dev/v6qh2bxj/articles/90d2c7f3057512</link><guid isPermaLink="true">https://zenn.dev/v6qh2bxj/articles/90d2c7f3057512</guid><pubDate>Sun, 27 Oct 2024 07:51:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TV5EZdhu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:CSS%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:v6qh2bxj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYmY4Njc4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>v6qh2bxj</dc:creator></item><item><title><![CDATA[CSSセレクター詳細度とは]]></title><description><![CDATA[「プロパティを書いてるのにスタイルが反映されない…」とつまずいた筆者が、原因を探る中でたどり着いたのがCSSの詳細度でした。この記事は、プログラミング初心者である筆者が、学習の過程でつまずいた経験をもとに備忘録としてまとめたものです。

 CSSセレクター詳細度とは？

引用文
詳細度とは、ある要素にどのプロパティの値を使用するかを決めるために、ブラウザーが使用するアルゴリズムです。複数のスタイルブロックに、同じプロパティを異なる値で設定する異なるセレクターがあり、同じ要素を対象としている場合、その要素に適用されるプロパティの値は、詳細度によって決定されます。詳細度とは、基本的にセレクタ...]]></description><link>https://zenn.dev/risagoto/articles/6c95b61fe99641</link><guid isPermaLink="true">https://zenn.dev/risagoto/articles/6c95b61fe99641</guid><pubDate>Sat, 26 Oct 2024 12:00:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6DxlLh0Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E3%2582%25BB%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E8%25A9%25B3%25E7%25B4%25B0%25E5%25BA%25A6%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Risa._.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4YWJjZWY3NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Risa._.</dc:creator></item><item><title><![CDATA[z-index: 1より弱いが手前に表示される要素について]]></title><description><![CDATA[
 実験
モーダルのような画面の手前に重なる要素を、position:absoluteで位置指定すると、要素が手前に重なっているように見える。
&lt;div class="relative"&gt;
  メインコンテンツ
  &lt;div class="absolute"&gt;モーダル&lt;/div&gt;
&lt;/div&gt;
.relative {
position: relative;
width: 200px;
height: 200px;
background-color: gray;
}

.absolute {
position: absolute;
width...]]></description><link>https://zenn.dev/ittetsu51/articles/32e4704b6150b9</link><guid isPermaLink="true">https://zenn.dev/ittetsu51/articles/32e4704b6150b9</guid><pubDate>Sat, 26 Oct 2024 07:35:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B5Eydry0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:z-index%253A%25201%25E3%2582%2588%25E3%2582%258A%25E5%25BC%25B1%25E3%2581%2584%25E3%2581%258C%25E6%2589%258B%25E5%2589%258D%25E3%2581%25AB%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ittetsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzMzIzODIwYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ittetsu</dc:creator></item></channel></rss>