<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 29 Apr 2025 12:02:13 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【JavaScript】Web APIインターフェースを使ってみた-其の2:IntersectionObserver]]></title><description><![CDATA[
 このシリーズについて
JavaScriptのＷeb APIインターフェースについて、どんなケースで使ったのかという具体例やコードも含めて、シンプルにその有用性についてまとめよう！というシリーズです。
※MDNで多数のAPIとそのインターフェースが公開されています。
https://developer.mozilla.org/ja/docs/Web/API
2本目となる記事で取り上げるのは、こちらです。

 IntersectionObserver
交差オブザーバーAPIのインターフェスである【IntersectionObserver】を取り上げます。
https://develope...]]></description><link>https://zenn.dev/inob/articles/26eb802ef1e74b</link><guid isPermaLink="true">https://zenn.dev/inob/articles/26eb802ef1e74b</guid><pubDate>Tue, 29 Apr 2025 07:36:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CDHfqcHY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591Web%2520API%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F-%25E5%2585%25B6%25E3%2581%25AE2%253AIntersectionObserver%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:i-nob%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YzUzNTQyOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>i-nob</dc:creator></item><item><title><![CDATA[【Vue.js】コンポーネント（Component）について]]></title><description><![CDATA[
 この記事を読む前に
環境構築などが完了されてない方は以下を参照。
https://zenn.dev/code_journey_ys/articles/bbe3b67bed48e2

 コンポーネントの考え方
!

 【Component Hierarchy（コンポーネント階層）】とは
・Vue.jsではこのように 小さな部品（コンポーネント）を階層的に組み合わせて アプリケーションを構築していく。
・階層という名のとおり、コンポーネントが親ー子ー孫のような関係性となる。
・レイアウトを部品のように管理することでメンテナンスが行いやすくなるメリットがある。


 コンポーネント階層を理...]]></description><link>https://zenn.dev/code_journey_ys/articles/88fd14cb436677</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/88fd14cb436677</guid><pubDate>Tue, 29 Apr 2025 07:22:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t_7WhD1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue.js%25E3%2580%2591%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25EF%25BC%2588Component%25EF%25BC%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Jest における「ホイスト問題」とその解決策：mockプレフィックスの活用]]></title><description><![CDATA[※本記事は生成AIを活用して執筆していますが、全体の構成と主張は筆者自身の考えによるものです。


 1. はじめに
JavaScript のテストフレームワークとして広く利用されている Jest。そのパワフルな機能の一つがモック機能です。しかし、Jest でモックを扱う際に多くの開発者が頭を悩ませる問題があります。それが「ホイスト問題」です。
モックはテストコードをシンプルに保つための強力なツールですが、Jest 特有の仕様により、時に直感に反するコードを書かざるを得ないケースがあります。本記事では、Jest のモック実装における「ホイスト問題」の本質を理解し、より簡潔で保守性の高いテ...]]></description><link>https://zenn.dev/tutti/articles/c7ac6ce866241e</link><guid isPermaLink="true">https://zenn.dev/tutti/articles/c7ac6ce866241e</guid><pubDate>Tue, 29 Apr 2025 07:21:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--paX5MrH4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%2520%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2580%258C%25E3%2583%259B%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2580%258D%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%25EF%25BC%259Amock%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tutti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pjM0tSTk45cVoyX3N6dTBZSi1IVUg0UDZ4QUtfNkZRRFlsZE8xaEE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tutti</dc:creator></item><item><title><![CDATA[DOMと仮想DOMについて]]></title><description><![CDATA[
 初めに
こんにちは！DOMと仮想DOMの違いについてまとめていきたいと思います。

 DOM(Document Object Model)とは？
簡単にまとめると、以下のようになります。

DOMは、HTMLやXML文書をオブジェクトとして扱うための仕組み。
JavaScriptなどのプログラミング言語から、Webページの構造や内容を 動的に操作可能。
ブラウザがHTMLを読み込むと、ツリー状の構造(DOMツリー) として内部的に保持する。


 DOMの構造(DOMツリー)
以下のHTMLを例に DOMの構造(DOMツリー) について説明していきたいと思います。
&lt;!DOCT...]]></description><link>https://zenn.dev/daichi09167/articles/e584c7bd1e3749</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/e584c7bd1e3749</guid><pubDate>Tue, 29 Apr 2025 04:37:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cnWuRiz5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DOM%25E3%2581%25A8%25E4%25BB%25AE%25E6%2583%25B3DOM%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YTc4OTEwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item><item><title><![CDATA[Panda CSSの基本的な使い方と導入手順]]></title><description><![CDATA[こんにちは！
今回はCSSフレームワーク「Panda CSS」を紹介します。
この記事ではPanda CSSの利点や基本的な使い方について整理していきます。

 Panda CSSとは
Panda CSSは、Chakra UIチームが開発した新しいCSSフレームワークです。
特徴は「ゼロランタイムCSS-in-JS」で、パフォーマンスや型安全性を重視しています。
[https://panda-css.com/:embed:cite]

 Panda CSSの特徴


ゼロランタイム：静的なCSSをビルド時に生成し、ランタイムのオーバーヘッドを削減。

型安全：TypeScriptを活用し...]]></description><link>https://zenn.dev/rh820/articles/84806b42f1f3e5</link><guid isPermaLink="true">https://zenn.dev/rh820/articles/84806b42f1f3e5</guid><pubDate>Tue, 29 Apr 2025 03:50:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2VJ-GbxE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Panda%2520CSS%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjM2JkYzhiZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hodii</dc:creator></item><item><title><![CDATA[ブラウザのオブジェクトモデルの構築について]]></title><description><![CDATA[
 はじめに
こんにちは。
今回はブラウザがレンダリングする際に構築されるDOM（Document ObjectModel）とCSSOM（CSS Object Model）について書いてみました。

 レンダリングとは？
ブラウザに指定されたURLをブラウザの画面に表示することです。
ブラウザには以下のように、さまざまな機能が搭載されていますが、レンダリングの役割を担っているのがレンダリングエンジンです。
以下のサイトでまとまっているように使用されているレンダリングエンジンは使用されているブラウザごとにさまざまです。
https://webukatu.com/wordpress/blog...]]></description><link>https://zenn.dev/rh820/articles/47ac8c392bb409</link><guid isPermaLink="true">https://zenn.dev/rh820/articles/47ac8c392bb409</guid><pubDate>Tue, 29 Apr 2025 03:46:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--coND547B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjM2JkYzhiZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hodii</dc:creator></item><item><title><![CDATA[動くけど危ない。TypeScript×JavaScriptの注意ポイント]]></title><description><![CDATA[業務中、以下のようなコードを見かけました。
（実際はNext.jsのコードでしたが、JavaScriptの言語仕様に関わる部分だけをシンプルに抜き出しています。）
const tags: string[] = ['hoge']
console.log(`https://example.com/${tags}`)

/* https://example.com/hogeと出力されるが、tagsの要素数が2つ以上になるとカンマで要素が連結され、https://example.com/hoge,fugaのようになる。
偶然、要素数が2つ以上のものがなくて設定されたリンクが404エラーにならなか...]]></description><link>https://zenn.dev/ohimusdev46301/articles/ce0b917110c42a</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/ce0b917110c42a</guid><pubDate>Tue, 29 Apr 2025 03:42:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1EgD5S9R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%2595%25E3%2581%258F%25E3%2581%2591%25E3%2581%25A9%25E5%258D%25B1%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2582TypeScript%25C3%2597JavaScript%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[Structive サンプル解説：構造パスと Getter で実現する地域別州データテーブル]]></title><description><![CDATA[
 はじめに
本記事では、フロントエンドフレームワーク Structive を使って構築されたサンプルコードを解説します。このサンプルを通して、Structive の核となるコンセプトである「構造パス」や、強力な機能である「Getter」、「$getAll」メソッドなどがどのように活用されているかを見ていきましょう。
今回解説するサンプルコード（states-population）は、米国の州データを地域ごとにグループ化し、各地域の州リスト、地域ごとのサマリー、そして全体のサマリーを整形されたテーブル形式で表示するものです。
※下記リポジトリをクローンしてを簡単にサンプルコードを試すこと...]]></description><link>https://zenn.dev/mogera/articles/5d7b5b9d54a86b</link><guid isPermaLink="true">https://zenn.dev/mogera/articles/5d7b5b9d54a86b</guid><pubDate>Mon, 28 Apr 2025 21:20:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3lFkdWMt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Structive%2520%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%259A%25E6%25A7%258B%25E9%2580%25A0%25E3%2583%2591%25E3%2582%25B9%25E3%2581%25A8%2520Getter%2520%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E5%259C%25B0%25E5%259F%259F%25E5%2588%25A5%25E5%25B7%259E%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mogera%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeU81R0xzNDk1VUxWUy1MTlZLdktsQWpMY3NuZnZueC00S1lYWUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mogera</dc:creator></item><item><title><![CDATA[[Android] JavascriptInterface の引数に渡された undefined はどう扱われる?]]></title><description><![CDATA[
 はじめに
Android 側:
class MyInterface {
    @JavascriptInterface
    fun greet(name: String?) { ... }
}
JavaScript 側:
myInterface.greet(undefined);
このような場合、Android 側の name: String? にはどのような値が渡るでしょうか？

 結論
引数が、

Java の byte, char, short, int, long, float, double に相当する型の場合: 0

Java の boolean に相当する型の場合...]]></description><link>https://zenn.dev/omtians9425/articles/2025-04-29_android-js-interface-nullability</link><guid isPermaLink="true">https://zenn.dev/omtians9425/articles/2025-04-29_android-js-interface-nullability</guid><pubDate>Mon, 28 Apr 2025 15:59:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5UCTWaUM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAndroid%255D%2520JavascriptInterface%2520%25E3%2581%25AE%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E6%25B8%25A1%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%2520undefined%2520%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2586%25E6%2589%25B1%25E3%2582%258F%25E3%2582%258C%25E3%2582%258B%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:korii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzYTdjNDlkMmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>korii</dc:creator></item><item><title><![CDATA[【Bun】Windows 11＋プロキシ環境でのインストールと動作検証まとめ]]></title><description><![CDATA[
 概要
本記事では、Node.js互換の高速JavaScriptランタイム「Bun」を、Windows 11環境（プロキシ設定あり）にインストールし、簡単なサーバーアプリを起動するまでの検証結果をまとめます。


 1. 検証日

2025年4月28日（月）


 2. 検証テーマ

Bun（Node.js互換の高速JavaScriptランタイム）のインストールと動作確認


 3. 実施環境


OS：Windows 11

ターミナル：PowerShell

プロキシ：あり（PACファイル設定）

Bunバージョン：1.2.10



 4. 実施手順

 4.1. プロキシ環境で...]]></description><link>https://zenn.dev/homatsu_tech/articles/46b39b644256e5</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/46b39b644256e5</guid><pubDate>Mon, 28 Apr 2025 13:15:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XQwjxyGI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Bun%25E3%2580%2591Windows%252011%25EF%25BC%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A8%25E5%258B%2595%25E4%25BD%259C%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[【Vue.js】環境構築とディレクトリ構造]]></title><description><![CDATA[
 Vue
!

 【Vue】とは
・Vueとは、ユーザーインターフェース（UI）を作るためのJavaScriptフレームワークのこと。
・ブラウザ側で動作する。
・JavascriptのみだとDOM操作やイベントの定義が増えていき、可読性や保守性が低くなる。
・VueはHTMLとJavaScriptの間に立って、「もっと簡単に、整理してWebアプリを作れるようにする」ための道具であり、「同じ処理が複数の要素に必要なとき」ほど、真価を発揮する。
・.vueファイルは、&lt;sctipt&gt;&lt;/script&gt;,&lt;template&gt;&lt;/tamplate&g...]]></description><link>https://zenn.dev/code_journey_ys/articles/bbe3b67bed48e2</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/bbe3b67bed48e2</guid><pubDate>Mon, 28 Apr 2025 11:26:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gkpkLG48--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue.js%25E3%2580%2591%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E9%2580%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[JSON を CSV 用に変形するときは Array.prototype.flatMap() / flat() がいいよって小ネタ]]></title><description><![CDATA[
 どういうこと
色々なAPIをJSON形式で取得して、CSV形式に書き出したい、という需要はよくあります。
とはいえ、取得したデータの状態だとネストしていて、そのままではcsv-stringifyするには不適切なことがあります。
https://csv.js.org/stringify/
つまり、深さ1のkey-valueのJSONにしたいです。で flatMap() だとそういう処理が楽に書けるよってことです。

 コード
Deno で書いていますが、適宜Importは読み替えしてください。
Order には複数の Item が紐づいています。これをCSV用に、 Item 1つにつき...]]></description><link>https://zenn.dev/mr_ozin/articles/bfcdd53054e9e1</link><guid isPermaLink="true">https://zenn.dev/mr_ozin/articles/bfcdd53054e9e1</guid><pubDate>Mon, 28 Apr 2025 10:40:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3C5cZQnA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSON%2520%25E3%2582%2592%2520CSV%2520%25E7%2594%25A8%25E3%2581%25AB%25E5%25A4%2589%25E5%25BD%25A2%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%2520Array.prototype.flatMap%2528%2529%2520%252F%2520flat%2528%2529%2520%25E3%2581%258C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mr_ozin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNzc4ZGFjYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mr_ozin</dc:creator></item><item><title><![CDATA[Tableauで作成したダッシュボードをhtmlファイルに載せて好きなデザインにする。]]></title><description><![CDATA[
 まえがき
2025年の3月にTableauのDATASaberになんとかなることができました。
ありがたいことに今年の4月から3人も弟子を持たせていただけることになり、何か出来ることはないかなと思っていたところちょうど以下のような「DATASaber認定後初めてLT会」がtechplayで行われるとのことだったのでLTさせていただきました🙌
https://techplay.jp/event/977224
DATASaberになったはいいもののTableau Publicにある世界中から公開されるようなVizを作成することができなかったのでもっとデザインに凝るためにどういう方法がある...]]></description><link>https://zenn.dev/amana/articles/bfc54fe89247b5</link><guid isPermaLink="true">https://zenn.dev/amana/articles/bfc54fe89247b5</guid><pubDate>Mon, 28 Apr 2025 10:38:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FB-3eziG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2583%2580%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592html%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E8%25BC%2589%25E3%2581%259B%25E3%2581%25A6%25E5%25A5%25BD%25E3%2581%258D%25E3%2581%25AA%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MjJkN2U5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[React Hook Formで「どちらか一方が必須」なフォームの再評価はdepsが便利]]></title><description><![CDATA[
 はじめに
フォームで「メールアドレスか電話番号のどちらかは必須」としたい場面があるとします。
しかし実装してみると、片方を入力してももう片方のバリデーションエラーが残ってしまうなど、思ったように動かず苦戦することがあります。
メールアドレスを入力しても、電話番号側のエラーが残ってしまう例
こうした「どちらか一方を満たせばOK」というバリデーションは、deps オプションを活用すると、スムーズに実現できます。

 depsとは？
deps は dependencies（依存関係）の略で、あるフィールドが他のフィールドの値に依存してバリデーションを再評価するための仕組みです。
React...]]></description><link>https://zenn.dev/kaz_z/articles/react-hook-form-deps</link><guid isPermaLink="true">https://zenn.dev/kaz_z/articles/react-hook-form-deps</guid><pubDate>Mon, 28 Apr 2025 00:46:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZT55CoSv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hook%2520Form%25E3%2581%25A7%25E3%2580%258C%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%258B%25E4%25B8%2580%25E6%2596%25B9%25E3%2581%258C%25E5%25BF%2585%25E9%25A0%2588%25E3%2580%258D%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E5%2586%258D%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25AFdeps%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZTM2MzIzZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuho</dc:creator></item><item><title><![CDATA[JavaScriptのtruthyとfalsyとは？ショートサーキット評価もあわせて解説]]></title><description><![CDATA[
 はじめに
JavaScriptを書いていて、こんな経験はありませんか？

「条件式やif文で、判定が意図しないものになった」

私自身、実務で
truthyやfalsyという概念に初めて触れました。
また、以下のような
ショートサーキット評価と呼ばれる書き方も学びました。
const value = A || B;
本記事では、truthy/falsyの基本とショートサーキット評価の使い方について解説します。

 truthyとfalsyとは？
JavaScriptでは、
値そのものが真偽値（true/false）に変換されるルールがあります。
これを、

truthy（trueとみ...]]></description><link>https://zenn.dev/fd2025/articles/2a2f4aacaa2450</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/2a2f4aacaa2450</guid><pubDate>Sun, 27 Apr 2025 22:38:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0sewaBCR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEtruthy%25E3%2581%25A8falsy%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2583%25E3%2583%2588%25E8%25A9%2595%25E4%25BE%25A1%25E3%2582%2582%25E3%2581%2582%25E3%2582%258F%25E3%2581%259B%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[2025/04/27記録]]></title><description><![CDATA[
 まず
これから日報として、日々の学習の記録をつけていきます。
理由は学習管理とアウトプット強化、ポートフォリオのため・・・といったところです。
今日は「関数型プログラミング」について学びました。
以下のURLに今回の教材を記載しています。
Reactについて体系的に学べ、Next.js、TypeScriptなどの最新のトレンドも学べます。
https://www.udemy.com/course/react-complete-guide

 関数型プログラミングとは
reactは16.8のhooksの登場によってオブジェクト指向プログラミングから、関数型プログラミングに移行しつつあり...]]></description><link>https://zenn.dev/yuto_engineer/articles/d49d61a6dfa7dc</link><guid isPermaLink="true">https://zenn.dev/yuto_engineer/articles/d49d61a6dfa7dc</guid><pubDate>Sun, 27 Apr 2025 15:09:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x9_MYgcR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:2025%252F04%252F27%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEdLYUlqLWpWOERtVVFvS2tVbWZra200emRQQ0JZVzlHNzRLOWV2ZDdaYy1FeFlqM3Q9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆうと</dc:creator></item><item><title><![CDATA[JavaScriptでABC403(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc403

 A - Odd Position Sum
https://atcoder.jp/contests/abc403/tasks/abc403_a
Array.prototype.filter()でindexが偶数(0オリジンなので)のやつだけ残してreduce
https://atcoder.jp/contests/abc403/submissions/65239444
1分27秒 AC!

 B - Four Hidden
https://atcoder.jp/contests/abc403/tasks/abc403...]]></description><link>https://zenn.dev/aya_koto/articles/17bc9706ee4d31</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/17bc9706ee4d31</guid><pubDate>Sun, 27 Apr 2025 13:45:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PE5QncYi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC403%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[座標点群配列から、各点の近傍(半径100m以内)の点群数を数える。座標点群配列に数えた点群数と住所を追加する。]]></title><description><![CDATA[
 本記事の分類

学習ノート


 機能

舗装修繕箇所(ポットホールの修繕箇所)の座標データから定量的に舗装修繕回数が多い範囲(部分)を評価する
市町名及び町丁目情報を取得する


 想定シーン

舗装修繕箇所の優先順位付けの参考資料を作成する


 仕様

各舗装補修箇所の近傍(半径100m以内)の補修箇所数を数える。
各点の座標データと補修箇所数を要素とする新しい配列を作成する。
ラフな精度でも問題ないため地球を球体として計算している。


 参考

高精度を求める場合は別の計算式が必要。https://qiita.com/Yuzu2yan/items/0f312954feeb3...]]></description><link>https://zenn.dev/hasenori/articles/0cea8792690d9d</link><guid isPermaLink="true">https://zenn.dev/hasenori/articles/0cea8792690d9d</guid><pubDate>Sun, 27 Apr 2025 10:51:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g1CbVxUS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BA%25A7%25E6%25A8%2599%25E7%2582%25B9%25E7%25BE%25A4%25E9%2585%258D%25E5%2588%2597%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581%25E5%2590%2584%25E7%2582%25B9%25E3%2581%25AE%25E8%25BF%2591%25E5%2582%258D%2528%25E5%258D%258A%25E5%25BE%2584100m%25E4%25BB%25A5%25E5%2586%2585%2529%25E3%2581%25AE%25E7%2582%25B9%25E7%25BE%25A4%25E6%2595%25B0%25E3%2582%2592%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%25E5%25BA%25A7%25E6%25A8%2599%25E7%2582%25B9%25E7%25BE%25A4%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E6%2595%25B0%25E3%2581%2588%25E3%2581%259F%25E7%2582%25B9%25E7%25BE%25A4%25E6%2595%25B0%25E3%2581%25A8%25E4%25BD%258F%25E6%2589%2580%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hasenori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHV3bkhUOHpWVjlPVnBiSDZGWmxRd3JRN2M5SHVnYXpxYzVYZjZ1UkxjTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hasenori</dc:creator></item><item><title><![CDATA[JavaScriptの`map` vs `forEach` vs `filter`：違いをコードでスッキリ理解！]]></title><description><![CDATA[JavaScriptの配列メソッド、map、forEach、filter。似てるけど何が違うの？初心者向けに、簡単なコード例で用途と違いを解説します！🚀

 1. map：配列を変換して新しい配列を作る
mapは各要素を加工して新しい配列を返します。元の配列は変わりません。
const nums = [1, 2, 3];
const doubled = nums.map(n =&gt; n * 2);
console.log(doubled); // [2, 4, 6]
console.log(nums); // [1, 2, 3]（元配列そのまま）

 2. filter：条件で要素を...]]></description><link>https://zenn.dev/coke_126/articles/a1118f16116fd9</link><guid isPermaLink="true">https://zenn.dev/coke_126/articles/a1118f16116fd9</guid><pubDate>Sun, 27 Apr 2025 03:06:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7OSOx8PU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%2560map%2560%2520vs%2520%2560forEach%2560%2520vs%2520%2560filter%2560%25EF%25BC%259A%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25AA%25E7%2590%2586%25E8%25A7%25A3%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:coke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2ODQyZDgwMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>coke</dc:creator></item><item><title><![CDATA[React + fetch + AbortController の最小構成]]></title><description><![CDATA[Reactコンポーネントにfetch機能を実装したい。かつ、任意のタイミングでキャンセルできるようにしたい。
…を実現するためのサンプルコードになります。
（正直、何かしらのfetchライブラリを使えば、もっと簡単に実現できる気がしますが。。）

 ソースコード

Sample.tsx
import { useCallback, useEffect, useRef, useState } from 'react';

export const Sample = () =&gt; {
  const [data, setData] = useState('');
  const [isLo...]]></description><link>https://zenn.dev/t_tonyo_maru/articles/8672df8e03c047</link><guid isPermaLink="true">https://zenn.dev/t_tonyo_maru/articles/8672df8e03c047</guid><pubDate>Sun, 27 Apr 2025 01:06:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--22X4qwlk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520fetch%2520%252B%2520AbortController%2520%25E3%2581%25AE%25E6%259C%2580%25E5%25B0%258F%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2582%2588%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNjVjZjg3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんよー。</dc:creator></item></channel></rss>