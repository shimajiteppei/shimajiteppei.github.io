<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 11 Nov 2024 01:24:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[いつの間にかPythonが軟派な言語ではなくなっていた～ロバストPython～]]></title><description><![CDATA[こんにちは NSS江口 です。
最近事業部内の勉強会グループで ロバストPython の読書会を行っております。

 Pythonの思い出
私がPythonを一番ヘビーに利用していたのは、5年前くらいにサーバレスアプリケーションを構築していた時でした。その時のPythonのバージョンは3.6だったと思います。
私は金融システムに携わる人間で、ファーストチョイスは何かとJavaでしたが、当時利用していた AWS Lambda ではJavaを利用するとクラスロードにかかる初回起動のオーバーヘッドがバカにならず、軽量に利用できるということでPythonを選択したとかだったと思います。なお、Ja...]]></description><link>https://zenn.dev/nss_fs_eng/articles/099a04a7190dfa</link><guid isPermaLink="true">https://zenn.dev/nss_fs_eng/articles/099a04a7190dfa</guid><pubDate>Sun, 10 Nov 2024 22:59:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SHo8PqzW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25A4%25E3%2581%25AE%25E9%2596%2593%25E3%2581%25AB%25E3%2581%258BPython%25E3%2581%258C%25E8%25BB%259F%25E6%25B4%25BE%25E3%2581%25AA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25EF%25BD%259E%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2588Python%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NSS%2520%25E9%2587%2591%25E8%259E%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjk2ODBmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NSS 金融エンジニアリンググループ</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【Pythonの基本文法編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第2章 Pythonの基本文法

 2.1 文と式

 2.1.1 文
Pythonのプログラムは、文と呼ばれる命令の集まりでできています。文は、コンピュータに特定の動作を指示するものです。
例えば、print('Hello, world!')は、画面に "Hello, world!" と表示する文です。

 2.1.2 式
式は、値を計算するためのものです。式は、変数、リテラル、演算子などを組み合わせて作られます。
例えば、1 + 2は、1と2を足した値を計算する式です。

 2.2 インデント
Pythonでは、インデント(字下げ)が非常に重要で...]]></description><link>https://zenn.dev/zundalab/articles/ef24713a03febb</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/ef24713a03febb</guid><pubDate>Sun, 10 Nov 2024 19:33:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y_ZOFXe8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590Python%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%2596%2587%25E6%25B3%2595%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[【Replit】生成AIに破壊されるプログラマーの未来]]></title><description><![CDATA[こんにちは、エンジニア・プログラマーの皆さん。
Replit Agentをご存知でしょうか？
いよいよ、生成AIが私たちの仕事を脅かす存在になるのではと感じ、今回はこのツールをご紹介します。
このツールを使ってみると、過激なタイトルもあながち大袈裟ではないとわかっていただけると思います。

 Replit Agentとは
Replit Agentは、2024年9月?にリリースされた、自然言語でアプリケーションを作成できる生成AIです。
これまでにも似たようなサービスはありました。例えば、フロントエンドを簡単に作成できるbotlやv0、プログラミングをサポートするCursorやGitHub...]]></description><link>https://zenn.dev/chanpaya/articles/adc7a524143cdb</link><guid isPermaLink="true">https://zenn.dev/chanpaya/articles/adc7a524143cdb</guid><pubDate>Sun, 10 Nov 2024 12:38:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aGzyLDYD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Replit%25E3%2580%2591%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AB%25E7%25A0%25B4%25E5%25A3%258A%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2583%25BC%25E3%2581%25AE%25E6%259C%25AA%25E6%259D%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:champaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmY1NGIxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>champaya</dc:creator></item><item><title><![CDATA[言語化能力身につけたい]]></title><description><![CDATA[今回は，Atcoder Beginner Contest 378 C 問題を解いた際のメモを残しておきます．
AI を使う時に，自分の考えを言語化する能力って必要ですよね ~
今回この問題を解いていて，自分の頭の中で考えていることを言語化できず， AI にどのようにアドバイスをすればいいかわからず，使用することができませんでした．
これからの時代，言語化能力はますます重要になってくると感じるので，毎日の継続した努力を続けていきたいです．

 AtCoder Beginner Contest 378 C

https://atcoder.jp/contests/abc378/tasks/a...]]></description><link>https://zenn.dev/os515/articles/atcoder-abc378-c</link><guid isPermaLink="true">https://zenn.dev/os515/articles/atcoder-abc378-c</guid><pubDate>Sun, 10 Nov 2024 12:13:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LW2kO2Wo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E8%2583%25BD%25E5%258A%259B%25E8%25BA%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:soso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXhTVFZ2dEMxc1c4N3NudWhKSVp0YTVMUWpsMUR5VW1YVTl5UFY2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soso</dc:creator></item><item><title><![CDATA[機械学習なんもしらないけどピアノ採譜AIを作りたかった]]></title><description><![CDATA[どうもこんにちは、だだっこぱんだです。
「今年の最も大きなチャレンジ」 ということで、今回は夏休みにちょくちょくやっていたピアノ採譜AIを作るという挑戦について書いていきたいと思います。
ちなみに結論から言うと、一部うまくいきませんでした。けれどもまだまだ諦め切れずにはいます。もし機械学習に強い方で何か気がついたことや、アドバイス等ありましたら、ぜひ教えていただけると嬉しいです。
!
自分は機械学習の基礎知識が一切ないです。
専門的な内容を一切理解せずに適当な実験をしている点をご了承ください。

👇やろうと思ったきっかけになったツイート
https://x.com/ddPn08/stat...]]></description><link>https://zenn.dev/ddpn08/articles/piano-transcription-ai-challenge</link><guid isPermaLink="true">https://zenn.dev/ddpn08/articles/piano-transcription-ai-challenge</guid><pubDate>Sun, 10 Nov 2024 07:48:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Eutnd1br--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AA%25E3%2582%2593%25E3%2582%2582%25E3%2581%2597%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2591%25E3%2581%25A9%25E3%2583%2594%25E3%2582%25A2%25E3%2583%258E%25E6%258E%25A1%25E8%25AD%259CAI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%2593%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhMmExNzg0ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>だだっこぱんだ</dc:creator></item><item><title><![CDATA[minilangに配列と文字列を追加する]]></title><description><![CDATA[※「350行くらいのPythonで作るプログラミング言語実装超入門」の関連記事です。
minilangで配列と文字列を扱えるようにします。minilangの宿題をやるの続編です。
今回は少しだけ説明を入れます。

 配列型を追加する
いつもどおり、まずは型だけ導入します。
minilangでは整数はPythonの整数を、真偽値はPythonの真偽値をそのまま使ってASTや値にしてきましたので、配列もPythonの配列を、と行きたいところなんですがASTを配列で表してたり値でも関数を表すのに["func", ...]と配列を使ったりしているので、配列をただの配列にしてしまっては見分けがつか...]]></description><link>https://zenn.dev/kb84tkhr/articles/minilang_array_string</link><guid isPermaLink="true">https://zenn.dev/kb84tkhr/articles/minilang_array_string</guid><pubDate>Sun, 10 Nov 2024 06:01:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I50X0wRe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:minilang%25E3%2581%25AB%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A8%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kb84tkhr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd25XTDE5OE9xdG5Xa1UycWZBM3ZkRXJhemtJWTl1VVNndDhySWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kb84tkhr</dc:creator></item><item><title><![CDATA[MotionBuilder Scripts - Viewer切替]]></title><description><![CDATA[
 目標
Camera Switcherを使わずに、ViewerのCameraを変更する。

 使用例

リストからCameraの名前を選択して、Viewerの表示を切り替え

 解説
FBRendererクラスを参照する。
https://help.autodesk.com/cloudhelp/2025/JPN/MOBU-PYTHON-API-REF/class_f_b_renderer.html#a9bd45402bb2313cbd52b587a80424483
このクラスはPythonからインスタンス化できない[1]ので、FBSceneクラスのRenderer属性から得る。
fro...]]></description><link>https://zenn.dev/nadegata_memo/articles/af92644b841ce8</link><guid isPermaLink="true">https://zenn.dev/nadegata_memo/articles/af92644b841ce8</guid><pubDate>Sun, 10 Nov 2024 00:11:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uJK0byFH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MotionBuilder%2520Scripts%2520-%2520Viewer%25E5%2588%2587%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ndgt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4ZThkYTY3ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ndgt</dc:creator></item><item><title><![CDATA[Cloud Run FuncsionsでPythonをデプロイしてみる]]></title><description><![CDATA[
 サーバーレスWebアプリに初挑戦
初めてサーバーレスWebアプリのバックエンドに携わる事になりデスクトップソフトしか作っていなかったので今回はその奮闘記を書いておこう思います。

知り合いと話していてもAmazonの「AWS」がメジャーなのと「Cloud Funcsions」が統合されて「Cloud Run Funcsions」になっているのもあって情報が少なく初学者にとっては混乱しながらでした。
https://cloud.google.com/blog/ja/products/serverless/google-cloud-functions-is-now-cloud-run-f...]]></description><link>https://zenn.dev/lehm/articles/0de34e503b9ffc</link><guid isPermaLink="true">https://zenn.dev/lehm/articles/0de34e503b9ffc</guid><pubDate>Sat, 09 Nov 2024 12:57:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VeXDhWjd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloud%2520Run%2520Funcsions%25E3%2581%25A7Python%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0M2IyNDY2Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れむ</dc:creator></item><item><title><![CDATA[継続して勉強しないとな]]></title><description><![CDATA[今回は，AtCoder Beginner Contest 378 B 問題を解いた際のメモを残しておきます．
久しぶりに AtCoder に取り組んだのですが，やはり継続して勉強しないといけないなと感じました．
解き方を理解できても，それをコードに落とし込むのは難しいですね．今回はできませんでした 😭

 AtCoder Beginner Contest 378 B

https://atcoder.jp/contests/abc378/tasks/abc378_b

 回答
公式の回答にコメントを追加しておきます．
# 1. 入力を受け取る
N = int(input()) # ゴミの...]]></description><link>https://zenn.dev/os515/articles/atcoder-abc378-b</link><guid isPermaLink="true">https://zenn.dev/os515/articles/atcoder-abc378-b</guid><pubDate>Sat, 09 Nov 2024 12:02:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fpXkwoYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B6%2599%25E7%25B6%259A%25E3%2581%2597%25E3%2581%25A6%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:soso%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WXhTVFZ2dEMxc1c4N3NudWhKSVp0YTVMUWpsMUR5VW1YVTl5UFY2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soso</dc:creator></item><item><title><![CDATA[Pythonのgeneratorの動作イメージを理解する]]></title><description><![CDATA[Pythonのgeneratorは強力な機能で、使いこなせるようになるとコーディングの幅が広がります。
一方で動作イメージが掴みにくいものでもあります。本記事ではgeneratorの動作原理を解説します。
あくまで動作イメージを理解するためのもので、generatorの実践的な使い方や応用については他の記事を参照してください。

 generatorの基本
generatorは、iteratorの一種で、yieldキーワードを使用して値を一つずつ返す関数です。通常の関数とは異なり、値を返した後も関数の状態（ローカル変数や実行位置）が保持され、次回の呼び出し時にその続きから実行されます。p...]]></description><link>https://zenn.dev/hachimada/articles/python_understanding_generator</link><guid isPermaLink="true">https://zenn.dev/hachimada/articles/python_understanding_generator</guid><pubDate>Sat, 09 Nov 2024 09:36:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VwIhzYej--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEgenerator%25E3%2581%25AE%25E5%258B%2595%25E4%25BD%259C%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hachimada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4Njk0YzFiNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hachimada</dc:creator></item><item><title><![CDATA[Azure OpenAI gpt-4o-mini を活用してクリップボードの内容から爆速で回答を得る⚡️]]></title><description><![CDATA[
 Azure OpenAIで実現する⚡️爆速情報検索活用⚡️
本記事は、Azure OpenAIなどのGenerative AIを活用して日々の業務生産性を向上させたい方向けの内容です。
特に、業界・業種・学生などを問わずおすすめです。🎯

 👤 著者プロフィール



項目
詳細




使用デバイス
主にMac


業務内容
IT営業（提案書作成、製品デモ制作）




 🤔 よくある課題
皆さんも日々の業務で以下のような経験はありませんか？

Google検索やPerplexityなどのWeb RAGサービスで調べ物 🔍
簡単な用語確認のためにブラウザを立ち上げる手間 ⏱

「ブ...]]></description><link>https://zenn.dev/repkuririn/articles/7463b83de0beee</link><guid isPermaLink="true">https://zenn.dev/repkuririn/articles/7463b83de0beee</guid><pubDate>Sat, 09 Nov 2024 09:21:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Giz4YZkD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520OpenAI%2520gpt-4o-mini%2520%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%258B%25E3%2582%2589%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7%25E5%259B%259E%25E7%25AD%2594%25E3%2582%2592%25E5%25BE%2597%25E3%2582%258B%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258A%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyOTEwZDQyNTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くりりん</dc:creator></item><item><title><![CDATA[Wikipediaの全記事を学習させて、日本語で遊んでみる]]></title><description><![CDATA[
 元ネタ
https://www.youtube.com/watch?v=sK3HqLwag_w&amp;list=WL&amp;index=38
見てておもろそうだなーと思ったので、FastAPIの復習も兼ねて作ってみました。
動画に全て内容が載っていますが一応記載すると、Wikipediaの全記事内の文章をword2vecに学習させて単語を数値化することで、単語同士の足し算や引き算を行うことができます。

 できたもの
https://github.com/Suntory-Y-Water/word-vectors-api
APIにして公開したら面白そうだな～と思いましたが、Rend...]]></description><link>https://zenn.dev/sui_water/articles/1f2f0fbd522350</link><guid isPermaLink="true">https://zenn.dev/sui_water/articles/1f2f0fbd522350</guid><pubDate>Sat, 09 Nov 2024 09:03:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---krgHvo7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wikipedia%25E3%2581%25AE%25E5%2585%25A8%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2580%2581%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A7%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MGQ1MWNkOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スイ</dc:creator></item><item><title><![CDATA[書いて動かして理解する！Fletで学ぶ実用的なアプリ開発]]></title><description><![CDATA[Python のシンプルな文法で、Web、デスクトップ、モバイル対応のクロスプラットフォームアプリを簡単に作成できるフレームワーク「Flet」を学ぶための技術書です。

本書では、Flet の基礎から応用、そして実践的なアプリケーション開発までを豊富な図解とサンプルコードで解説しています。

この一冊で、Fletの基礎から応用までを学ぶことで、幅広いプラットフォームで動くアプリケーションを自らの手で開発できるようになります。

本書で使用したソースコードはgithubで公開しています。

https://github.com/eggplant-hive/flet-showcase

技術書典17にも出品中です

https://techbookfest.org/product/8X2YLGKHVA3Psgep7QYKm
]]></description><link>https://zenn.dev/egg_glass/books/flet-development-practical</link><guid isPermaLink="true">https://zenn.dev/egg_glass/books/flet-development-practical</guid><pubDate>Sat, 09 Nov 2024 00:31:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1do9i9-b--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yOWNmOTVhMDJlLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>エッグテック</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【NotebookLMプロンプト集】]]></title><description><![CDATA[
 Pythonチュートリアル徹底調査【Pythonの特徴編】
Pythonの特徴をまとめてください。
「1. シンプルで習得しやすい」についてもう少し詳しく出力してください。
「2. インタプリタ言語」についてもう少し詳しく出力してください。
「3. 高レベルなデータ構造」についてもう少し詳しく出力してください。
「4. オブジェクト指向プログラミング」についてもう少し詳しく出力してください。
「5. 豊富な標準ライブラリと外部モジュール」についてもう少し詳しく出力してください。
「6. 拡張性」についてもう少し詳しく出力してください。
「7. 移植性」についてもう少し詳しく出力してく...]]></description><link>https://zenn.dev/zundalab/articles/7917b6984b74f3</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/7917b6984b74f3</guid><pubDate>Fri, 08 Nov 2024 22:14:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kV1AuoRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590NotebookLM%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E9%259B%2586%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【Pythonの特徴編】]]></title><description><![CDATA[NotebookLMプロンプト集

 Pythonの特徴
Pythonは、汎用性が高く、強力で、学びやすいプログラミング言語です。その特徴から、初心者から経験豊富な開発者まで幅広く利用されています。

 1. シンプルで習得しやすい
Pythonは、コードの可読性を重視し、シンプルで理解しやすい構文を採用しています。


インデントによるブロック構造 :  Pythonでは、コードブロックの開始と終了を中括弧 {} ではなく、インデント（字下げ）によって示します。

これは、コードの構造を視覚的に明確にし、可読性を向上させる効果があります。



変数宣言の省略: Pythonでは、変数...]]></description><link>https://zenn.dev/zundalab/articles/3752f227dbca36</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/3752f227dbca36</guid><pubDate>Fri, 08 Nov 2024 20:10:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3TjwzOxI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590Python%25E3%2581%25AE%25E7%2589%25B9%25E5%25BE%25B4%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[【DiscordBotをつくってみよう】BacklogAPIで課題を追加する]]></title><description><![CDATA[この記事では、DiscordのチャットからBacklogにタスクを追加できるBotの作り方について紹介していきます。

 こんな方におすすめ

DiscordBotをつくってみたい
Discordを社内チャットとして運用している
Backlogを利用している
Pythonで社内ツールをつくってみたい
※Backlogは有料のサービスであり、契約していない場合には利用できません。また、APIキーなどの取得には管理者権限が必要になるため、管理者に確認をとってから始めましょう。


 完成イメージ
このDiscord Botを導入すると、「/task」コマンドでBacklogにタスクの追加を行...]]></description><link>https://zenn.dev/engineercafe/articles/f543359d50e064</link><guid isPermaLink="true">https://zenn.dev/engineercafe/articles/f543359d50e064</guid><pubDate>Fri, 08 Nov 2024 08:30:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--91EnTMoV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DiscordBot%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25E3%2580%2591BacklogAPI%25E3%2581%25A7%25E8%25AA%25B2%25E9%25A1%258C%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:EngineerCafe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjMDg4ZmUwZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>EngineerCafe</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-376｜C - Prepare Another Box]]></title><description><![CDATA[
 設問ページ

🔗ABC-376 C - Prepare Another Box



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    N = getInt()
    A = getIntList()
    B = getIntList()

    A.sort()
    A.reverse()
    B.sort()
    B.reverse()

    j = 0
  ...]]></description><link>https://zenn.dev/hyperdb/articles/ef57f52ae31848</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/ef57f52ae31848</guid><pubDate>Fri, 08 Nov 2024 08:14:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u0VQPt9z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-376%25EF%25BD%259CC%2520-%2520Prepare%2520Another%2520Box%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-377｜C - Avoid Knight Attack]]></title><description><![CDATA[
 設問ページ

🔗ABC-377 C - Avoid Knight Attack



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def getKnight(x, y, size):
    buf = [(x, y)]
    jump = [
        [-1, -2],
        [1, -2],
        [...]]></description><link>https://zenn.dev/hyperdb/articles/d6be9810cc0c74</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/d6be9810cc0c74</guid><pubDate>Fri, 08 Nov 2024 05:25:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E2bOTCYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-377%25EF%25BD%259CC%2520-%2520Avoid%2520Knight%2520Attack%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[Datadog製品使用量APIを使ったデータ取得方法]]></title><description><![CDATA[
 はじめに
皆さんは月のDatadogのコスト予算はどのように作成されていますか？
弊社では今後の予算管理と費用抑制のため、独自の予測計算を行っています。
そのため、月の途中で各製品の日次利用量（料金ではなく）を正確に把握する必要がありました。
しかし、Datadogのコンソール画面ではこれらの情報が確認しづらく確認する製品の数も多いこともあり、コンソール画面を変えながら何十回もクリックしなければいけない状況でした。
そんな中、Datadogの製品使用量APIがあることを知り、それを活用することでより詳細なデータを効率的に取得できるようになりました。現在はそのデータを活用して月の予算を...]]></description><link>https://zenn.dev/rehabforjapan/articles/datadog-cost-api-20241115</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/datadog-cost-api-20241115</guid><pubDate>Fri, 08 Nov 2024 00:11:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NBIlNwTQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Datadog%25E8%25A3%25BD%25E5%2593%2581%25E4%25BD%25BF%25E7%2594%25A8%25E9%2587%258FAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:atsushi_suzuki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiMDI4MGNkNTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>atsushi_suzuki</dc:creator></item><item><title><![CDATA[pysaml2+Keycloak+OpenLDAPでSAMLのArtifact-BindingによるSSOを行う．]]></title><description><![CDATA[
 はじめに


SAMLによるSSOを行い，LDAPのjpegPhoto属性を利用して顔写真データ（base64エンコードデータ）を受け取るSP（Service Provider)を実装しようとしてました．


SPの実装には，python3-samlライブラリとそのサンプルコードを参考に作成してましたが，IdPからユーザ側（ブラウザ側）にjpegPhoto含めたデータを渡そうとしたら，エラーが発生しました．具体的には，ユーザ情報をセッションクッキーに保存しようとしたら，容量オーバーの問題が発生しました．


SAMLプロトコルには，SPとIdPでユーザ情報の送受信を行うArtifac...]]></description><link>https://zenn.dev/tiktaksick/articles/7a654141880efc</link><guid isPermaLink="true">https://zenn.dev/tiktaksick/articles/7a654141880efc</guid><pubDate>Thu, 07 Nov 2024 21:55:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cf-hfklo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pysaml2%252BKeycloak%252BOpenLDAP%25E3%2581%25A7SAML%25E3%2581%25AEArtifact-Binding%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BSSO%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25EF%25BC%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTakSick%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMDZjYTQzM2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTakSick</dc:creator></item></channel></rss>