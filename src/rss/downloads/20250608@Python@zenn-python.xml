<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 08 Jun 2025 05:30:07 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[UVをとりあえず触って取得する]]></title><description><![CDATA[
 概要
UVについて色々と便利そうなことをまとめたものです。
とにかくpipを使っていたものとしては、高速なのでありがたい。
あとアクティベートとかも鬱陶しいのを省くことも出来るのは良い！
UV触ったことない人や、大量のモジュールをpipでインストールしたりしてる人には試す価値はあると思います。(まだ自分自身も色々なものでは試してないですけど)

 UVレポはここ
https://github.com/astral-sh/uv

 感想
とりあえずセットアップインストールのセットアップが早い。
localでactivate/deactivateなどの手間がない。
悪い点は今のところ無し...]]></description><link>https://zenn.dev/testkun08080/articles/python-uv-99ae614a1a4f13</link><guid isPermaLink="true">https://zenn.dev/testkun08080/articles/python-uv-99ae614a1a4f13</guid><pubDate>Sun, 08 Jun 2025 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3AlXg1GL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UV%25E3%2582%2592%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2582%25E3%2581%2588%25E3%2581%259A%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:testkun08080%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxMjE5ZTQ2YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>testkun08080</dc:creator></item><item><title><![CDATA[ChatGPT×Pythonで爆速！画面設計書を自動生成するアプリ作り]]></title><description><![CDATA[設計書づくり、めんどくさくないですか？AIでサクッと自動化してみました。

アプリ開発の現場でよくある「画面設計書、また直さなきゃ…」問題。仕様変更があるたびに手作業で更新してると、時間もかかるしミスも起きがち。正直、ちょっとしんどいですよね。

そこで今回は、OpenAI APIとPython（Flask）を使って、画像から自動で画面設計書を作ってくれるアプリを作ってみました！お問い合わせフォームなどのスクショをアップロードするだけで、CSV形式の設計書をパッと生成。ダウンロードもワンクリックでOK。

この記事では、アプリの仕組みや開発の流れをわかりやすく紹介しています。画像解析アプリの作り方、OpenAI APIの使い方、Python×FlaskでのWebアプリ開発など、実用的なノウハウも盛りだくさん！

「設計書作成、ラクしたい」「AIを開発に活かしてみたい」という方は、ぜひ読んでみてください！]]></description><link>https://zenn.dev/kenquichi/books/5651e6f3836606</link><guid isPermaLink="true">https://zenn.dev/kenquichi/books/5651e6f3836606</guid><pubDate>Sun, 08 Jun 2025 01:58:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QlrVKb_4--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mNjcwYWI5NjRkLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ケン吉</dc:creator></item><item><title><![CDATA[Python:私の開発環境構築手順(venv, git管理)]]></title><description><![CDATA[
 0. 前提情報

OSはWindowsでもMacでもどちらでも良い。/は適宜\に読み替える
自己開発プログラム(GithubとかからCloneしない)
プロジェクトフォルダを設定し、venvで管理する
ここではディレクトリとフォルダは同じ意味として扱う
開発IDEはVScode、バージョン管理システムとしてGitを使う
PythonとGitBashは事前にインストールしておく。


 1. 新規プロジェクトを作成する
まずはvenvで仮想環境を構築する。ディレクトリ構成は以下の通り
~/プログラム管理フォルダ/
└(Master Project Directory)/  ← プロジェ...]]></description><link>https://zenn.dev/fragaria/articles/202506071325</link><guid isPermaLink="true">https://zenn.dev/fragaria/articles/202506071325</guid><pubDate>Sun, 08 Jun 2025 01:13:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--STdPSXp5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%253A%25E7%25A7%2581%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2528venv%252C%2520git%25E7%25AE%25A1%25E7%2590%2586%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258BJTC%25E3%2581%25A7PM%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259F%25E4%25BA%25BA%25E3%2581%25AE%25E8%25A9%25B1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3ZWajFKSHUxSzY0SlA1QUtaanZoOUtzclVyaDBzb0ZwWmgyb2kwWHRqRUFpdk1RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とあるJTCでPMやってた人の話</dc:creator></item><item><title><![CDATA[Agent2Agent Protocol (A2A)（邦訳）]]></title><description><![CDATA[Agent2Agent Protocol（A2A）の邦訳版です。]]></description><link>https://zenn.dev/uxoxu/books/a2a-docs-japanese</link><guid isPermaLink="true">https://zenn.dev/uxoxu/books/a2a-docs-japanese</guid><pubDate>Sun, 08 Jun 2025 01:05:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G0w0p_mm--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82ZWQxMWNjMjc5LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>春風</dc:creator></item><item><title><![CDATA[初めてのuv入門｜uvコマンドガイド：uv pip インターフェース編]]></title><description><![CDATA[
知識は武器とかけまして、レゴブロックと解く、その心は――
今日もKnowledge Oasisへようこそ
案内人はkoふみです
本日のテーマは『uv pip インターフェース編』

 はじめに
Pythonプロジェクトの開発では、依存関係の管理や仮想環境の操作が欠かせません。pip を使ってパッケージをインストールするのはよくある手順ですが、環境の再現性やスピードをより高めたい場面もありますよね。そこで登場するのが、uv pip インターフェースです。uv pip を使うと、uv venv で仮想環境を作成・管理しつつ、従来の pip と同様のコマンド体系でパッケージを扱えるうえに、よ...]]></description><link>https://zenn.dev/knowledge_oasis/articles/command-guide-uv-pip</link><guid isPermaLink="true">https://zenn.dev/knowledge_oasis/articles/command-guide-uv-pip</guid><pubDate>Sat, 07 Jun 2025 21:27:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fzt9pvtW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AEuv%25E5%2585%25A5%25E9%2596%2580%25EF%25BD%259Cuv%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25EF%25BC%259Auv%2520pip%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A7%25E3%2583%25BC%25E3%2582%25B9%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ko%25E3%2581%25B5%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTJjMWYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koふみ</dc:creator></item><item><title><![CDATA[【Python】PythonでCSV,JSON形式のサンプルログを作成する]]></title><description><![CDATA[
 以下の記事の追記として作成
【ログ作成】Pythonでサンプルログを作成する
https://zenn.dev/articles/b554901a39b25e/edit

 新しく追加された機能
変数 output_format に以下のいずれかの値を設定することで、出力されるログのフォーマットを切り替えることができます：
"json"：JSON形式（構造化ログ／機械処理向き）
"csv"：カンマ区切り形式（表計算や可視化用途に便利）
"space"：スペース区切りのシンプルなテキスト形式（grepなどCLI操作向け）
import random
import string
from...]]></description><link>https://zenn.dev/qa_dev/articles/84830f19f830de</link><guid isPermaLink="true">https://zenn.dev/qa_dev/articles/84830f19f830de</guid><pubDate>Sat, 07 Jun 2025 13:20:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3rXliDdV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Python%25E3%2581%25A7CSV%252CJSON%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qa_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGRfRnVZcmtndVIzVW1ScTVFMWdDMmozVmR4cFRjV29uUTJYd2JOQ2RhQ3ltaEFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qa_dev</dc:creator></item><item><title><![CDATA[「コマンドラインって何？プログラミング初心者が触ってみた感想と学んだこと」]]></title><description><![CDATA[
 はじめに
最近Pythonの勉強を始めたばかりの初心者です。
プログラミングの学習を進めていると、いろんなところで「コマンドライン」「ターミナル」という言葉が出てきて、最初は正直「なにそれ...黒い画面こわい...」って思ってました。
でも、実際に使ってみると、ちゃんと意味があるし、慣れると便利なものだとわかってきたので、自分の備忘録もかねて学んだことをまとめてみます。


 コマンドラインってなんなの？
ざっくり言うと、マウスを使わずに文字でパソコンに命令を出す方法のことです。
例えば、Pythonのファイルを実行するときにこんなふうに入力します。
python my_script...]]></description><link>https://zenn.dev/ikkoz/articles/67e29900dfe37e</link><guid isPermaLink="true">https://zenn.dev/ikkoz/articles/67e29900dfe37e</guid><pubDate>Sat, 07 Jun 2025 11:22:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tNN-iClb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%25E3%2581%25A8%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25A3%25E3%2581%2593%25E3%2581%2586%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMWY4MWI3MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いっこうチャンネル</dc:creator></item><item><title><![CDATA[PythonでThreadPoolExecutorを使ってマルチスレッド処理を実装する]]></title><description><![CDATA[
 この記事は何？
ThreadPoolExecutor を使ったマルチスレッド処理の概要と使い所、主な使い方を説明する記事です。

 想定読者

何らかのPython処理を並列化して高速化したいが、どのような処理をすれば良いのか分からない人
マルチスレッド処理の特徴を知りたい人
ThreadPoolExecutor の使い方を知りたい人


 TL;DR

システム外部のI/O待ちが発生するHTTPリクエストやDBアクセスを含む処理はマルチスレッド処理を使った高速化ができる場合があるよ
ThreadPoolExecutor を使うとマルチスレッド処理が簡単に書けるよ
ThreadPoo...]]></description><link>https://zenn.dev/toriwasa/articles/c7932260d8226e</link><guid isPermaLink="true">https://zenn.dev/toriwasa/articles/c7932260d8226e</guid><pubDate>Sat, 07 Jun 2025 08:14:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fDkan1w6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7ThreadPoolExecutor%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toriwasa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pOVG50NzdGQTF6YUlLQTd3X3R4NTQ0cjA5LWdWejZqMkYyZGZfPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toriwasa</dc:creator></item><item><title><![CDATA[Claudeでプロジェクトのコードクオリティーレビューをしてみたら恐ろしいほど使えたというお話 🤯]]></title><description><![CDATA[
 はじめに

とあるMCPサーバーを自動生成してみたはいいものの、参考にしているオープンソースのプロジェクトのコードと比べるとかなり雑なクオリティだったため、リファクタリングを実施しました。
ある程度改善できた後、「今回の修正でコードのクオリティはどうなりましたか？」とClaudeに試しに聞いてみたところ、意外と面白い反応が返ってきた……という話です。
ちなみに主なリファクタリング内容は、PydanticやEnumの導入など、Pythonのベストプラクティスに沿った内容です。

 コードクオリティの測定


 第一段階

最初のClaudeとのやり取りで、以下のようなフィードバックを得...]]></description><link>https://zenn.dev/yareyare/articles/9f5ac5723b995e</link><guid isPermaLink="true">https://zenn.dev/yareyare/articles/9f5ac5723b995e</guid><pubDate>Sat, 07 Jun 2025 08:00:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B05ZjWmf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2582%2589%25E6%2581%2590%25E3%2582%258D%25E3%2581%2597%25E3%2581%2584%25E3%2581%25BB%25E3%2581%25A9%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2581%258A%25E8%25A9%25B1%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2594%25B0%25E4%25B8%25AD%25E5%25A4%25AA%25E9%2583%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjZWcVBoWEgwaXVsS05VYlRVOElzXzVQbGVvWV9DVk5VZVZnbjhDRWkwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>田中太郎</dc:creator></item><item><title><![CDATA[Model Context Protocol（邦訳）]]></title><description><![CDATA[Model Context Protocol（MCP）の邦訳版です。]]></description><link>https://zenn.dev/uxoxu/books/mcp-docs-japanese</link><guid isPermaLink="true">https://zenn.dev/uxoxu/books/mcp-docs-japanese</guid><pubDate>Sat, 07 Jun 2025 06:10:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--clm17xxs--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mZDVkZTNkZTBkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>春風</dc:creator></item><item><title><![CDATA[chatGPT先生に聞きながら、Render×Docker×Playwright構成を通すまでの全記録]]></title><description><![CDATA[
 はじめに

生活系スケジューラーの個人開発を進めています。
一部の処理に自動ブラウザ操作が必要だったため、これまではローカルでPython＋Seleniumを動かしていましたが、更新や実行が煩雑だったためRenderへ移行することにしました。
この記事では、Playwright入りPythonスクリプトをRenderで動かすまでに行った設定、ハマった点、改善点を整理して記録します。AIを使えばすぐ動くと思ったら大間違いでした。

 想定している読者


RenderでPlaywrightを動かしたいが構成に不安がある個人開発者
AIに聞きながらクラウド環境構築に挑戦している初心者
「...]]></description><link>https://zenn.dev/tanakama/articles/d5c36ae6f52dbd</link><guid isPermaLink="true">https://zenn.dev/tanakama/articles/d5c36ae6f52dbd</guid><pubDate>Sat, 07 Jun 2025 06:07:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f8n8klvJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25AB%25E8%2581%259E%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2580%2581Render%25C3%2597Docker%25C3%2597Playwright%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E9%2580%259A%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E5%2585%25A8%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25AA%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwZDgwODA4NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たなか</dc:creator></item><item><title><![CDATA[chatGPT先生とBubble×Render開発、はじめました]]></title><description><![CDATA[
 きっかけは「スケジュール確認がめんどくさい」から

もともと、通っているフィットネススタジオの予約ページを毎回開いて確認するのが手間で、
「自分の希望のレッスンだけをいい感じに一覧表示してくれる何かが欲しい」と思ったのがスタートでした。
最初はローカルで動くPythonスクリプトを書いて、手動で動かして整形するだけ。
でも思った以上に便利で、「これ、もう少しちゃんと動かしたい」と思うようになりました。

 なぜ“ちゃんとシステムを作ろう”と思ったのか

以前から趣味でWeb制作や小さなスクリプトを書いていましたが、「もっと本格的に作りたい」と思い、IT業界に転職もしました。
ただ、配...]]></description><link>https://zenn.dev/tanakama/articles/a8d6b2682c6ab3</link><guid isPermaLink="true">https://zenn.dev/tanakama/articles/a8d6b2682c6ab3</guid><pubDate>Sat, 07 Jun 2025 06:07:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NK86Nuom--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:chatGPT%25E5%2585%2588%25E7%2594%259F%25E3%2581%25A8Bubble%25C3%2597Render%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2581%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25AA%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwZDgwODA4NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たなか</dc:creator></item><item><title><![CDATA[PlaywrightがRenderでクラッシュした理由と対策（headless=FalseはPaaSでは動かない）録]]></title><description><![CDATA[
 はじめに

Playwrightを使ってWeb画面を自動操作するスクリプトを作成し、ローカルではGUI表示（headless=False）で問題なく動作していました。
ところがRenderにデプロイした途端、スクリプトは即クラッシュ。
「設定の問題？」と思って調べていくと、“headless”という仕組みそのものを分かっていなかったと気づかされました。
この記事では、PaaS(RenderやHeroku等)でGUIブラウザ処理を動かそうとすると発生するクラッシュの原因と、正しい対処法をまとめます。


 現象：headless=Falseでクラッシュする

RenderにPlaywr...]]></description><link>https://zenn.dev/tanakama/articles/5e041a43bee8e2</link><guid isPermaLink="true">https://zenn.dev/tanakama/articles/5e041a43bee8e2</guid><pubDate>Sat, 07 Jun 2025 06:07:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3WsSG2RE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%258CRender%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2597%25E3%2581%259F%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A8%25E5%25AF%25BE%25E7%25AD%2596%25EF%25BC%2588headless%253DFalse%25E3%2581%25AFPaaS%25E3%2581%25A7%25E3%2581%25AF%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2589%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25AA%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwZDgwODA4NjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たなか</dc:creator></item><item><title><![CDATA[🗃 FlaskでSQLiteとSQLAlchemyを使う基本入門]]></title><description><![CDATA[
 📝 はじめに
Flaskでユーザー情報や投稿内容などを保存・管理したいとき、データベースとの連携は不可欠です。特に、軽量でシンプルに使えるSQLiteと、Pythonのオブジェクト指向と相性が良いSQLAlchemyは、Flaskと組み合わせることでとても扱いやすくなります。
この記事では、SQLiteとSQLAlchemyを使って、Flaskアプリケーションにおける基本的なデータベース操作（CRUD）の方法を、初心者にもわかりやすく丁寧に解説します。

 ✅ この記事で学べること

SQLAlchemyの特徴と基本概念
FlaskでSQLAlchemyを使う準備方法
データベーステ...]]></description><link>https://zenn.dev/oit2003/articles/d448857294bfd2</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/d448857294bfd2</guid><pubDate>Sat, 07 Jun 2025 05:27:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sTdAeg6b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Flask%25E3%2581%25A7SQLite%25E3%2581%25A8SQLAlchemy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E5%259F%25BA%25E6%259C%25AC%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[pythonでのPDF編集ライブラリ選定 メタデータがどうなるか]]></title><description><![CDATA[実務で気づいたPDF編集ライブラリの違いについてまとめます。
各ライブラリの使い勝手などの詳細は他様々な記事で解説されてますので、ここでは実務で遭遇したポイントのみ触れていきます。
表には出ないPDFのメタデータがポイントでした。

 必要な機能
・PDFを指定ページで分割する
・指定ページを削除する
です。複数PDFの結合までは求められてないです。

 選定候補
・pymupdf
高機能で様々な事ができます。
ただし、商用ライセンス。
・pypdf
上記の機能は問題なく使えますがメタデータの編集に難があるようで、フォント情報がなくなる事例に遭遇しました(ver5.4.0)。
・pike...]]></description><link>https://zenn.dev/jun1026/articles/d33f9f474745b9</link><guid isPermaLink="true">https://zenn.dev/jun1026/articles/d33f9f474745b9</guid><pubDate>Sat, 07 Jun 2025 03:35:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lvFwhsv9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2581%25AEPDF%25E7%25B7%25A8%25E9%259B%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E9%2581%25B8%25E5%25AE%259A%2520%25E3%2583%25A1%25E3%2582%25BF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258C%25E3%2581%25A9%25E3%2581%2586%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jlmn1026%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZjRjZWY2YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jlmn1026</dc:creator></item><item><title><![CDATA[【Python - pandas】ユーザーガイド - パンダまであと10分（2/2）]]></title><description><![CDATA[
 パンダまであと10分


 前編
【Python - pandas】ユーザーガイド - パンダまであと10分（1/2）

 マージ
セクション：マージ、結合、連結、比較

pandas.concat()
pandas.merge()

マージ

連結

df = pd.DataFrame(np.random.randn(10, 4))
pieces = [
    df[:3],
    df[3:7],
    df[7:]
]
concatted_pieces = pd.concat(pieces)

print("-- df --")
print(df)
print("-- p...]]></description><link>https://zenn.dev/takami544/articles/ef4cb6db4e4dde</link><guid isPermaLink="true">https://zenn.dev/takami544/articles/ef4cb6db4e4dde</guid><pubDate>Fri, 06 Jun 2025 23:47:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bnC3uhb2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%2520-%2520pandas%25E3%2580%2591%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2520-%2520%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%2582%25E3%2581%25A810%25E5%2588%2586%25EF%25BC%25882%252F2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takamin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZmE4ZDYxNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takamin</dc:creator></item><item><title><![CDATA[zshのコマンド履歴みてみた]]></title><description><![CDATA[今回は、私の使っているzshに蓄えられた過去のコマンド履歴について、何を一番使ってきたのかをただ確認したかったので確認するためのコードを書いたという内容を共有します。

 実装開始！！！

 .zsh_historyのフォーマット
意外と~/.zsh_historyを直接みたことがある人は少ないのではないでしょうか？かくいう自分も今回はじめてみました。ファイルは以下のようになっています。以下は最初の20行をお見せしています。このようなフォーマットになっており、実行したコマンドは基本的には;の直ごに来ていそうなので、実装ではその部分を取り出すようにしました。
: 1702554011:0;...]]></description><link>https://zenn.dev/akasan/articles/6333702fc35afc</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/6333702fc35afc</guid><pubDate>Fri, 06 Jun 2025 13:41:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rzlDm_Mc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zsh%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E5%25B1%25A5%25E6%25AD%25B4%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[初めてのuv入門｜uvコマンドガイド：uv Tools編]]></title><description><![CDATA[
知識は武器とかけまして、レゴブロックと解く、その心は――
今日もKnowledge Oasisへようこそ
案内人はkoふみです
本日のテーマは『uv コマンドガイド Tools編』

 はじめに
uvはPythonパッケージマネージャ兼タスクランナーとして、プロジェクトの依存管理やスクリプト実行だけでなく、外部ツールの実行やインストール機能も提供します。uvを使えば、依存関係をシームレスに扱いながら、例えばコードフォーマッタやテストランナーなどの外部ツールを一時環境で実行したり、ユーザー環境に永続的にインストールしてPATHに追加したりできます。この記事では、uvのツールインターフェー...]]></description><link>https://zenn.dev/knowledge_oasis/articles/command-guide-uv-tool</link><guid isPermaLink="true">https://zenn.dev/knowledge_oasis/articles/command-guide-uv-tool</guid><pubDate>Fri, 06 Jun 2025 13:22:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l8vhDemY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AEuv%25E5%2585%25A5%25E9%2596%2580%25EF%25BD%259Cuv%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25EF%25BC%259Auv%2520Tools%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ko%25E3%2581%25B5%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTJjMWYyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koふみ</dc:creator></item><item><title><![CDATA[【Python】システムに取り込ませる用の構造化ログを自動生成する方法]]></title><description><![CDATA[
 はじめに
QA業務の現場で「ログをシステムに流し込んで動作確認をしたい」というケースは意外と多くあります。
特に構造化ログ（JSON形式など）を使っているシステムでは、

「このログ形式で流し込んで動作確認して」
「ログ受信処理が正しく動くか検証したい」

といったリクエストが日常的に発生します。
そこで今回は、構造化されたサンプルログを簡単に作成するコードを紹介します。


 sample code

import os
from datetime import datetime

# 書き込む変数
# varAは固定
varA = "START_LOG"
varB_A = "これ...]]></description><link>https://zenn.dev/qa_dev/articles/e77048ce2932f4</link><guid isPermaLink="true">https://zenn.dev/qa_dev/articles/e77048ce2932f4</guid><pubDate>Fri, 06 Jun 2025 12:59:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q8fIbb5F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E5%258F%2596%25E3%2582%258A%25E8%25BE%25BC%25E3%2581%25BE%25E3%2581%259B%25E3%2582%258B%25E7%2594%25A8%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qa_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGRfRnVZcmtndVIzVW1ScTVFMWdDMmozVmR4cFRjV29uUTJYd2JOQ2RhQ3ltaEFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qa_dev</dc:creator></item><item><title><![CDATA[BirdClef+2025 で銀メダルを獲れました]]></title><description><![CDATA[
はじめに
　鳥コンペ2025銀メダルを獲得しました．ソロ参加で分からないことだらけでしたがChatGPTと先人の知恵を借りながらなんとか目標としていた銀メダルを獲得することができました．以下に参加体験記を書きます．
コンペの概要
　熱帯雨林に暮らす野生動物たちは、環境の変化にとても敏感です。彼らの「鳴き声」や「音」は、生態系の状態を知るための大切な手がかりになります。しかし、人間が広い森を歩いて調査するのはとても大変で、時間もお金もかかります。
　そこで今回のKaggleコンペでは、「音声データを使って、どんな動物がいるかをAIで判別する」ことに挑戦します。対象は鳥だけでなく、カエル、...]]></description><link>https://zenn.dev/nomurrrr/articles/0da67ca1b008c7</link><guid isPermaLink="true">https://zenn.dev/nomurrrr/articles/0da67ca1b008c7</guid><pubDate>Fri, 06 Jun 2025 12:06:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SFtzsDCL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BirdClef%252B2025%2520%25E3%2581%25A7%25E9%258A%2580%25E3%2583%25A1%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E7%258D%25B2%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nomurrrrr%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nomurrrrr</dc:creator></item></channel></rss>