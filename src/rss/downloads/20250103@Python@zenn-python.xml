<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 03 Jan 2025 11:42:18 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[iTerm 3.5.11のセキュリティ修正について]]></title><description><![CDATA[1月2日にiTerm2の重要なセキュリティリリースが出されました。
このアップデートでは、ある条件が整うとSSH接続でリモートマシンに接続しているときシェル上での入出力が他のユーザーにも読み取れる形式で保存されてしまう問題が修正されました。
この問題は共有サーバーを使用している環境ではセキュリティリスクとなる可能性があります。
Changelog
すぐにバージョンを3.5.11以上にアップグレードするように求められています。

 問題の詳細
以下は、Changelogから問題についての詳しい説明の抄訳です


 影響を受ける可能性のある人
バージョン

3.5.6
3.5.7
3.5.8...]]></description><link>https://zenn.dev/kozika/articles/ffac92d51e0563</link><guid isPermaLink="true">https://zenn.dev/kozika/articles/ffac92d51e0563</guid><pubDate>Fri, 03 Jan 2025 10:51:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LNau1nue--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:iTerm%25203.5.11%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kozika%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1NWM2ODdkMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kozika</dc:creator></item><item><title><![CDATA[[生成AI] TripoSR使ってみた]]></title><description><![CDATA[
 はじめに(モチベーション)
写真から３Dモデルを作成するフローに興味が湧いた為、調べていた際に TripoSR というツールを見つけたので使ってみました。

 内容について
この記事では、写真から3Dモデルを生成するツール「TripoSR」をMacBook Pro M4 Max環境で試した記録です。TripoSRのインストールからGUIおよびCUIでの実行、そして実行時間までを詳細にまとめました。

 作業環境

PC : MacBook Pro 14インチ / 2024

16コアCPU + 40コアGPU搭載 M4 Max
128 GB memory


OS : macOS S...]]></description><link>https://zenn.dev/yakan_k/articles/84a2f56a25fe6c</link><guid isPermaLink="true">https://zenn.dev/yakan_k/articles/84a2f56a25fe6c</guid><pubDate>Fri, 03 Jan 2025 10:42:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d5zeNrk7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%2594%259F%25E6%2588%2590AI%255D%2520TripoSR%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%2596%25AC%25E7%25BC%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MVY0WmE2OW5hUVJ1QTJhZWJEVlJsRVE1dVVBWkdvQVZOQUtkeUtlUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>薬缶</dc:creator></item><item><title><![CDATA[【Anaconda】仮想環境をコピーして再構築しよう]]></title><description><![CDATA[Anaconda を使用して Python のパッケージを管理しています。
最近、PC を変えたのですが、新しい PC でも同じように Anaconda を使用したい！
そこで、ほかの PC へ移行する方法を紹介します

 設定手順

コピーしたい仮想環境に切り替える
パッケージ情報を .yml or .txt に出力する
新しい PC で 2. のファイルをもとに仮想環境を作成する

今回はWindows PowerShell を使用して、作業していきます

 コピーしたい仮想環境に切り替える
conda activate 「コピーしたい仮想環境名」
で仮想環境を切り替え、
conda...]]></description><link>https://zenn.dev/kuuki/articles/anaconda-copy-env</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/anaconda-copy-env</guid><pubDate>Fri, 03 Jan 2025 09:46:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DyorULWf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Anaconda%25E3%2580%2591%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2597%25E3%2581%25A6%25E5%2586%258D%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[Tableauで条件付き集計 - SUMIFS, COUNTIFSを実現する方法]]></title><description><![CDATA[
 はじめに
Excelでのデータ分析において、複数の条件を満たすデータのみを集計したい場面はよくあります。 そのような場合に活躍するのが、SUMIFS 関数や COUNTIFS 関数です。 では、Tableauで同様の処理を行うにはどうすればよいのでしょうか？
本稿では、Excelの SUMIFS や COUNTIFS に相当する処理をTableauで実現する方法について詳しく説明します。 IF 文と集計関数（SUM, COUNT, COUNTD）を組み合わせたテクニックを紹介し、具体例を通してその処理手順を明確にします。 Tableauにおける行レベル計算と集計計算の違いを理解し、条...]]></description><link>https://zenn.dev/lytton/articles/93570bff8955a5</link><guid isPermaLink="true">https://zenn.dev/lytton/articles/93570bff8955a5</guid><pubDate>Fri, 03 Jan 2025 09:44:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HDVgecoL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tableau%25E3%2581%25A7%25E6%259D%25A1%25E4%25BB%25B6%25E4%25BB%2598%25E3%2581%258D%25E9%259B%2586%25E8%25A8%2588%2520-%2520SUMIFS%252C%2520COUNTIFS%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxZTJjMTI1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>リットン</dc:creator></item><item><title><![CDATA[Pandasで時刻計算をマスター！24時間表記を10進数に変換する方法]]></title><description><![CDATA[
 はじめに
こんにちは！みなさんは、時間データの処理に苦労したことはありませんか？
「勤務時間の計算を自動化したいけど、24時間表記の時刻データをどう扱えばいいのかわからない...」 「時刻データを使って計算したいけど、そのままでは足し算や引き算ができなくて困っている...」
こんな悩みを抱えている方は多いのではないでしょうか。特に、PythonのPandasを使ってデータ分析をしているときに、このような問題に直面することがよくあります。
そこで今回は、Pandasで24時間表記の時刻文字列を10進数の数値（時間単位）に変換し、計算可能な形式にする方法を、初心者の方にもわかりやすく丁寧...]]></description><link>https://zenn.dev/lytton/articles/71eb17ca929846</link><guid isPermaLink="true">https://zenn.dev/lytton/articles/71eb17ca929846</guid><pubDate>Fri, 03 Jan 2025 09:27:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XmVeYuHn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandas%25E3%2581%25A7%25E6%2599%2582%25E5%2588%25BB%25E8%25A8%2588%25E7%25AE%2597%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25EF%25BC%258124%25E6%2599%2582%25E9%2596%2593%25E8%25A1%25A8%25E8%25A8%2598%25E3%2582%259210%25E9%2580%25B2%25E6%2595%25B0%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxZTJjMTI1MzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>リットン</dc:creator></item><item><title><![CDATA[AWSの機械学習サービスを使用してみた]]></title><description><![CDATA[
 はじめに
Cloudtechさんの動画を参考にし、以下のアーキテクチャ作ってみました。
作成を通じて、勉強になったポイントなどをまとめていきたいと思います。
※各番号については後述します。


 対象
・サーバやネットワーク関連の基礎知識を習得されている方
・今回使用するAWSサービスについて、基礎知識をお持ちの方

 使用したAWSサービス
・Aamazon API Gateway
・AWS Lambda
・Amazon SQS
・Amazon SES
・Amazon S3
・Amazon DynamoDB
・Amazon Rekognition
・Amazon Comprehen...]]></description><link>https://zenn.dev/m_keiichi/articles/bc1b17bd4e70aa</link><guid isPermaLink="true">https://zenn.dev/m_keiichi/articles/bc1b17bd4e70aa</guid><pubDate>Fri, 03 Jan 2025 08:39:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--umSTJJJJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E3%2581%25AE%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m.Keiichi_zenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWI4bWtlaEVIMFV0VHV3eUZlU1o0MG1LV2NqdlVuV1N2ZFJRdVlqM2UyWTFILXpRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>m.Keiichi_zenn</dc:creator></item><item><title><![CDATA[PythonコードでサクッとAWS構成図を描く ※Fargate構成、Lambdaサーバーレス構成など]]></title><description><![CDATA[
 概要
PythonコードでAWS構成図を作成する記事となります❗❗❗
具体的には、コードベースのDiagramsライブラリを使って、下記AWS構成図を作成しております。

Fargate構成図
Lambdaサーバーレス構成図
その他構成図

コードベースで使用するDiagramsライブラリの概要は、下記記事が参考になります

GitHub_コードベースのDiagramsライブラリ
DevelopersIO_Diagramsを使ってPythonでシステム構成図を描く

また、本記事は自身のスキルを証明する一つの材料として執筆しております。
!
本記事は下記のサービスにて公開しております...]]></description><link>https://zenn.dev/takakura_tech/articles/python-aws-diagram</link><guid isPermaLink="true">https://zenn.dev/takakura_tech/articles/python-aws-diagram</guid><pubDate>Fri, 03 Jan 2025 04:32:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q7XiuG9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8AWS%25E6%25A7%258B%25E6%2588%2590%25E5%259B%25B3%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2520%25E2%2580%25BBFargate%25E6%25A7%258B%25E6%2588%2590%25E3%2580%2581Lambda%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25B9%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AA%25E3%2581%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A0%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjN2JhNTFmZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>だいき</dc:creator></item><item><title><![CDATA[HunyuanVideoをVRAM6GBで試そうとしたら違うモデルを使ってしまった件]]></title><description><![CDATA[HunyuanVideoは、ComfyUIを使うとVRAM6GBでも動画生成できると知り、色々検索して試行錯誤していました。
でも私は、結果的に間違えたものを使ってしまったようです。
まず私は、HunyuanVideoを試そうと見つけたリポジトリは、こちらです。
https://github.com/Tencent/HunyuanDiT
よく読んだから中国語で使える画像生成のリポジトリのようです。
試行錯誤してVRAM6GBでシステムのメモリが16GBのRTX3060laptopを搭載したノートパソコンで、画像生成できたので、記録したいと思います。
私は、Windows11で仮想環境を外...]]></description><link>https://zenn.dev/masaru21/articles/b50c1ccbe471ee</link><guid isPermaLink="true">https://zenn.dev/masaru21/articles/b50c1ccbe471ee</guid><pubDate>Thu, 02 Jan 2025 23:08:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--46ySrtOV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HunyuanVideo%25E3%2582%2592VRAM6GB%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%259D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E9%2581%2595%25E3%2581%2586%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lonely_creator_m%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hzOWNVVzBjY3NDOXZPcXFwd0QtZktPblJpbmM4YnFYWG9LVDhVQmxvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lonely_creator_m</dc:creator></item><item><title><![CDATA[Pythonを使ってOmeka Sにメディアをアップロードする方法]]></title><description><![CDATA[
 概要
Pythonを使ってOmeka Sにメディアをアップロードする方法の備忘録です。

 準備
環境変数を用意します。

.env
OMEKA_S_BASE_URL=https://dev.omeka.org/omeka-s-sandbox # 例
OMEKA_S_KEY_IDENTITY=
OMEKA_S_KEY_CREDENTIAL=

初期化します。
import requests
from dotenv import load_dotenv
import os

def __init__(self):

        load_dotenv(verbose=True, o...]]></description><link>https://zenn.dev/nakamura196/articles/9fe0e40cc1b771</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/9fe0e40cc1b771</guid><pubDate>Thu, 02 Jan 2025 23:05:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GqsqJOtZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Omeka%2520S%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[精読「独習Python」(オブジェクト指向構文 応用)]]></title><description><![CDATA[

独習Python
「独習Python」は、初心者から中級者までを対象に、Pythonの基礎から応用までを体系的に学べる入門書で、豊富な例題と練習問題を通じて実践的なスキルを身につけられる一冊です。
関連記事
https://zenn.dev/joaan/articles/bec9c096241f6b
https://zenn.dev/joaan/articles/bde04761294b13
https://zenn.dev/joaan/articles/37b84b3b500574
https://zenn.dev/joaan/articles/9923635212d7ad
htt...]]></description><link>https://zenn.dev/joaan/articles/ec4d474ba58c44</link><guid isPermaLink="true">https://zenn.dev/joaan/articles/ec4d474ba58c44</guid><pubDate>Thu, 02 Jan 2025 22:19:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tG2yt0-P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B2%25BE%25E8%25AA%25AD%25E3%2580%258C%25E7%258B%25AC%25E7%25BF%2592Python%25E3%2580%258D%2528%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E6%25A7%258B%25E6%2596%2587%2520%25E5%25BF%259C%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%25A7%25E3%2582%25A2%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMGZlZWIzNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジョアン</dc:creator></item><item><title><![CDATA[RAG開発の超入門【RaggleのQuickStart | Pythonのソースコードあり】]]></title><description><![CDATA[はじめまして、ますみです！
株式会社Galirage（ガリレージ）という「生成AIに特化して、システム開発・アドバイザリー支援・研修支援をしているIT企業」で、代表をしております^^

この記事では、入門者向けの「RAG」の開発手法を解説します！
もしもPythonを使ったことがない方は、下記のZenn本を参考にしてください。
https://zenn.dev/umi_mori/books/python-programming
また、RAGについての基礎知識を学びたい方は、下記のZenn本を参考にしてください。
https://zenn.dev/umi_mori/books/llm-ra...]]></description><link>https://zenn.dev/galirage/articles/raggle_quickstart</link><guid isPermaLink="true">https://zenn.dev/galirage/articles/raggle_quickstart</guid><pubDate>Thu, 02 Jan 2025 12:25:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bkvrewZp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RAG%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2590Raggle%25E3%2581%25AEQuickStart%2520%257C%2520Python%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2582%25E3%2582%258A%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2599%25E3%2581%25BF%2520%252F%2520%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNzA3YjIxM2QuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Galirage%2520Inc.%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5ZDA3ZmI1ZGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ますみ / 生成AIエンジニア</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 15: Warehouse Woes]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day15 の記事です。 Day14 はこちら。
https://zenn.dev/yasuharu519/articles/e3f21bd7a556e9
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 15: Warehouse Woes
今回は チョウチンアンコウ(lanternfish)が管理する倉庫が舞台です。チョウチンアンコウは食料を保存する倉庫を持ち、その管理をロボットに任せていたのですが、ロボットが制御不能になってしまったようで...]]></description><link>https://zenn.dev/yasuharu519/articles/930eef6cd3d253</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/930eef6cd3d253</guid><pubDate>Thu, 02 Jan 2025 11:41:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xv8Zw8gt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%252015%253A%2520Warehouse%2520Woes%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[Act 34. PythonでLSTMを試してみる]]></title><description><![CDATA[
 はじめに
今回は、PythonでLSTMモデルを使って為替データの予測を行ってみようと思う。
1つどうしても分からない箇所があるため、有識者の方がいらっしゃったらコチラの内容についてご回答いただきたい…。お願いします。
2024年6月のデータを1分間隔で取得しているため、そのデータを使って予測を行う。
なお、使用するのはclose（終値）のみ。

 結論
先に結論から
青の線が実際の為替相場データで、オレンジの線が予測したデータ。
全然だめです！！！！（笑）

パッと思いついた改善点は以下。

土日のデータが存在しないため、そこら辺を上手くやる必要があるかも
実際に取引するのは14時...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/6376a0c17f72f4</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/6376a0c17f72f4</guid><pubDate>Thu, 02 Jan 2025 11:35:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--buVjFd63--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252034.%2520Python%25E3%2581%25A7LSTM%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item><item><title><![CDATA[【AI】 int8とかfloat16、32、どれを使えばいいか]]></title><description><![CDATA[一般的に並べ替えるとこんな感じ。

(低精度、高速)

int8
int8_float16
int8_bfloat16
float16
bfloat16
int8_float32
float32

(高精度、低速)

 ちょっとした解説
float32はfloat16の二倍の精度です。
int8_float32はint8計算とfloat32変換で速度とメモリのバランスを取ります。
int8_float16はfloat16部分の処理でメモリと計算資源を使用しますが、float32よりは軽量。
int8_bfloat16のメモリと計算資源の消費は float16に似ています。
float16...]]></description><link>https://zenn.dev/glisan/articles/38e05ce231daeb</link><guid isPermaLink="true">https://zenn.dev/glisan/articles/38e05ce231daeb</guid><pubDate>Thu, 02 Jan 2025 09:54:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TONG4Pie--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AI%25E3%2580%2591%2520int8%25E3%2581%25A8%25E3%2581%258Bfloat16%25E3%2580%258132%25E3%2580%2581%25E3%2581%25A9%25E3%2582%258C%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0MzU1YzBlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>グリッサンド。</dc:creator></item><item><title><![CDATA[[uv]自分のgithubのRepositoryからpipできるようにする]]></title><description><![CDATA[
 目的：以下のように自分のprivate repoからpackageをinstallする
以下ができるようにする
# for pip
pip install git+https://github.com/dummy-user/my_package.git
# for uv
uv add git+https://github.com/dummy-user/my_package.git

 packageの作り方
以下のようなファイル構造を作る
my_package/
│
├── my_package/               # パッケージの実装ディレクトリ
│   ├── __in...]]></description><link>https://zenn.dev/ymd/articles/26b1c736c9f5f0</link><guid isPermaLink="true">https://zenn.dev/ymd/articles/26b1c736c9f5f0</guid><pubDate>Thu, 02 Jan 2025 09:20:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G8vVtmx1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Buv%255D%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AEgithub%25E3%2581%25AERepository%25E3%2581%258B%25E3%2582%2589pip%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ymd%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyODIzZDUwM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ymd</dc:creator></item><item><title><![CDATA[PythonのDI(Dependency Injection)ライブラリInjectorとSpringの比較]]></title><description><![CDATA[
 背景
最近、Pythonを触る機会があり、オニオンアーキテクチャを意識してコードを書いているのですが、DI(Dependency Injection)を適用したくなってきました。普段仕事では、Java+Springで開発しているので、DIコンテナは意識せずとも利用しています。PythonでもDIコンテナのライブラリがあるのか調べてみたところ、Injectorというライブラリを紹介している人が多そうに思ったので、今回はこれを使ってみることにしました。使い方について、理解するまで少々戸惑ってしまったのですが、普段Springを触っている私にとってはSpringと対応させて考えると理解しや...]]></description><link>https://zenn.dev/snhr_1019/articles/20250102-python-injector</link><guid isPermaLink="true">https://zenn.dev/snhr_1019/articles/20250102-python-injector</guid><pubDate>Thu, 02 Jan 2025 08:33:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sy6ccYJ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEDI%2528Dependency%2520Injection%2529%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAInjector%25E3%2581%25A8Spring%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:snhr-1019%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNVQ3S0lwLVlsT3pXZEktZVpDRFdvV0xST3g0UFlpalRwR3J2bUY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>snhr-1019</dc:creator></item><item><title><![CDATA[FirecrawlとDifyで簡単スクレイピング]]></title><description><![CDATA[
娘の部活のユニフォームのタグに書いてました。

 はじめに
前回の記事では、Firecrawlを使用したプログラミングをPythonで実装し、Webブラウザのコンテンツをテキストファイルに出力する方法を試してみました。
今回の記事では、Difyのワークフローを活用し、プログラミングをせずに結果を表示させる方法に挑戦します。これまでの投稿では、ローカルLLMであるOllamaをDifyに接続してチャットを試したことがありますが、ワークフローの作成は今回が初めてです。どれほど簡単に実現できるのかを検証してみます。
https://qiita.com/ogi_kimura/items/d13...]]></description><link>https://zenn.dev/ogiki/articles/25e941a7b2bb84</link><guid isPermaLink="true">https://zenn.dev/ogiki/articles/25e941a7b2bb84</guid><pubDate>Thu, 02 Jan 2025 06:56:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SPxOmE_X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firecrawl%25E3%2581%25A8Dify%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjNiYWMwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村たろう</dc:creator></item><item><title><![CDATA[FlaskでAPI作ってみた]]></title><description><![CDATA[
 はじめに
こんにちは、Haruです。
今回は、Flaskを使ってAPIを作ってみます。
とりあえず動かしてみるところから、実践までやってみています。
備忘録なので、誤っている箇所などあれば、教えていただけると幸いです。

 APIを作ってみる

 とりあえずHello Worldが表示されるAPIを動かしてみる
※Windows11、Python 3.12.0の環境で動かしています。

パッケージをインストールする

pip install flask

server.pyを作成し、コードを書く


from flask import Flask

app = Flask(__nam...]]></description><link>https://zenn.dev/haru330/articles/dc672a8cc32509</link><guid isPermaLink="true">https://zenn.dev/haru330/articles/dc672a8cc32509</guid><pubDate>Thu, 02 Jan 2025 05:12:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mCbLHY1z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flask%25E3%2581%25A7API%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NzQyOWFkM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はる</dc:creator></item><item><title><![CDATA[Rust製のPythonライブラリは軽いと思ってた]]></title><description><![CDATA[
 始めに
pydantic等のPythonのライブラリはコア部分がRustで書かれていて、Pythonでも十分な処理速度が確保されている、という表現をされることがあります。
そのため、基本的にはRustで作られたライブラリに移行しようとして、テンプレートエンジンのjinja2からminijinjaに移行しようとしました。その過程で気付いたことをメモするだけの記事です。
※ Pythonのminijinjaについては、試験的な試みでminijinja単体の機能が完全に移行されているわけではないし、処理速度も早いとかは明記されていないので、現時点で移行は勧めないです。

minijinja...]]></description><link>https://zenn.dev/kirimaru/articles/8355a058b65c5d</link><guid isPermaLink="true">https://zenn.dev/kirimaru/articles/8355a058b65c5d</guid><pubDate>Thu, 02 Jan 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aSA3YsEI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E8%25A3%25BD%25E3%2581%25AEPython%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AF%25E8%25BB%25BD%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E4%25B8%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1OTcxNmNjNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きり丸</dc:creator></item><item><title><![CDATA[Pub/Sub パターンの勉強がてら通知機能を作ってみた]]></title><description><![CDATA[Observer パターンや Pub/Sub パターンについて、知識としては理解しているつもりでも実際にゼロイチで作ったことがなかったので、勉強がてら通知機能を作ってみました。

 作成した通知機能
通知機能・・・とはいいつつ、実際の通知は行わず、コンソールに出力するだけのシンプルなものです。ただし、実際のプロダクトを想定してインターフェースを設計しています。

購読者(Subscriber)は、通知を受け取るための手段（メール、Slack、LINEなど）と通知を受け取る種類（イベントタイプ）を登録できる
通知者(Publisher)は、通知手段を意識せず、イベントタイプとメッセージだけ...]]></description><link>https://zenn.dev/killinsun/articles/52df69039a5adc</link><guid isPermaLink="true">https://zenn.dev/killinsun/articles/52df69039a5adc</guid><pubDate>Thu, 02 Jan 2025 00:08:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WnYH1cXb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pub%252FSub%2520%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%258C%25E3%2581%25A6%25E3%2582%2589%25E9%2580%259A%25E7%259F%25A5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A6%2596%25E7%2584%25A1%25E3%2581%2597%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYTM3MDU1NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>首無しキリン</dc:creator></item></channel></rss>