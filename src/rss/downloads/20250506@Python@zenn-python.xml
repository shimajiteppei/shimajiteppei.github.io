<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 06 May 2025 06:04:59 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[WindowのPythonで「No time zone found with key Asia/Tokyo」エラーが表示された際の対処法]]></title><description><![CDATA[
 環境

Windows 11
Python 3.11.4


 事象
Windows上でPythonを使って現在の時刻を取得する際に「zoneinfo._common.ZoneInfoNotFoundError: 'No time zone found with key Asia/Tokyo'」エラーが表示されました。
実行したスクリプトは以下の通りです。
from datetime import datetime
from zoneinfo import ZoneInfo

# タイムゾーンを日本にし、以下の形式で現在の時刻を取得します。
# yyyymmdd
today = da...]]></description><link>https://zenn.dev/t0mzenn/articles/f072accab64059</link><guid isPermaLink="true">https://zenn.dev/t0mzenn/articles/f072accab64059</guid><pubDate>Tue, 06 May 2025 05:37:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8FRZJc7R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Window%25E3%2581%25AEPython%25E3%2581%25A7%25E3%2580%258CNo%2520time%2520zone%2520found%2520with%2520key%2520Asia%252FTokyo%25E3%2580%258D%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tom%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tom</dc:creator></item><item><title><![CDATA[Windowsのタスクスケジューラーで仮想環境を有効化した状態でPythonを実行させる方法]]></title><description><![CDATA[WindowsのタスクスケジューラーでPythonスクリプトを定期実行させる際、タスク作成時の「操作」にて以下の通り設定するとPythonの仮想環境を有効化した状態でスクリプトを実行できます。

プログラム/スクリプト: 仮想環境内のPython実行ファイルのパスを指定します。

例: "仮想環境名\Scripts\python.exe"


引数の追加: 実行させたいPythonスクリプトのファイル名を指定します。

例: main.py


開始: 上記「引数の追加」で指定したファイルが存在するフォルダのパスを指定します。

パス内にスペースがあっても「"」で囲まないようにします。



]]></description><link>https://zenn.dev/t0mzenn/articles/e59395528684fe</link><guid isPermaLink="true">https://zenn.dev/t0mzenn/articles/e59395528684fe</guid><pubDate>Tue, 06 May 2025 05:13:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I0OXdpcG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25B1%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A7%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%259C%2589%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E7%258A%25B6%25E6%2585%258B%25E3%2581%25A7Python%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tom%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tom</dc:creator></item><item><title><![CDATA[PythonでCSV出力時に空行が入らないようにする方法]]></title><description><![CDATA[Pythonで2次元リストをCSV出力した際に空行が入ってしまいました。
以下の通り解決できましたので、共有させていただきます。
環境: Windows 11、Python 3.11.4
修正前のスクリプト
import csv

list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

with open("ファイル名.csv", "w") as f:
    writer = csv.writer(f)
    writer.writerows(list)
修正後のスクリプト
import csv

list = [[1, 2, 3], [4, 5, 6],...]]></description><link>https://zenn.dev/t0mzenn/articles/4a3d57e3a72c7e</link><guid isPermaLink="true">https://zenn.dev/t0mzenn/articles/4a3d57e3a72c7e</guid><pubDate>Tue, 06 May 2025 03:58:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UhpU6rGo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7CSV%25E5%2587%25BA%25E5%258A%259B%25E6%2599%2582%25E3%2581%25AB%25E7%25A9%25BA%25E8%25A1%258C%25E3%2581%258C%25E5%2585%25A5%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tom%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tom</dc:creator></item><item><title><![CDATA[PythonでQiitaの人気記事をNotionに自動転送するCLIツールを作った]]></title><description><![CDATA[
 はじめに
Qiitaの人気記事を自動で取得し、Notionデータベースに転送するCLIツールを作りました。
いいね（LGTM）またはStock数が指定した閾値以上の記事のみを対象とし、Notion DBのカラム（プロパティ）が足りなければ自動で追加する機能も実装しています。

 作ったもの

Qiita APIから過去N日分の記事を取得
LGTMまたはStock数が指定値以上の人気記事を抽出
本文を自動要約（sumy + tinysegmenter）
Notionデータベースにupsert（新規追加 or 更新）
Notion DBにカラムがなければ自動で追加
CLI対話式・自動化（...]]></description><link>https://zenn.dev/exbb/articles/4479c65c2716df</link><guid isPermaLink="true">https://zenn.dev/exbb/articles/4479c65c2716df</guid><pubDate>Tue, 06 May 2025 03:20:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZAeX5VCe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7Qiita%25E3%2581%25AE%25E4%25BA%25BA%25E6%25B0%2597%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592Notion%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2599%25E3%2582%258BCLI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Air%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3Y2M4NjM5NzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Air</dc:creator></item><item><title><![CDATA[NASAの時系列データtelemanomの異常値を見てみる（少しだけVAEで異常検知）]]></title><description><![CDATA[
 本記事の目的と背景
前回は、シンプルな時系列データにVAE（Variational AutoEncoder）を適用し、異常検知と生成がうまくいくことを確認しました。
今回はさらに一歩進めるために、異常検知の候補としてNASAの実際の宇宙機テレメトリデータを選びVAEで異常検知にチャレンジしました！

 前回のおさらい
前回の記事では、VAEを使った異常検知の練習をしました。モデルに学習させたのは、自作したシンプルな時系列データセットで、その正常データにスパイクのようなノイズを載せたデータの検知をさせました。結果、異常検知をすることが出来ました。
その際、学習させたモデルは特にチューニ...]]></description><link>https://zenn.dev/small_test/articles/e6e0c3522404ec</link><guid isPermaLink="true">https://zenn.dev/small_test/articles/e6e0c3522404ec</guid><pubDate>Tue, 06 May 2025 02:49:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PHiFfrBu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NASA%25E3%2581%25AE%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BFtelemanom%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E5%2580%25A4%25E3%2582%2592%25E8%25A6%258B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2588%25E5%25B0%2591%25E3%2581%2597%25E3%2581%25A0%25E3%2581%2591VAE%25E3%2581%25A7%25E7%2595%25B0%25E5%25B8%25B8%25E6%25A4%259C%25E7%259F%25A5%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:small_test%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1Y2Q3NWQ2MTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>small_test</dc:creator></item><item><title><![CDATA[Pythonによるデータプロファイリング]]></title><description><![CDATA[
 データ品質の概念
実装に入る前にデータ品質の概念から整理していきたいと思います。
参考にしたのは以下の記事です。
https://note.com/zono_data/n/n620b48d2b49f

 10ステッププロセス
データ品質の改善は、一度行えば終わりというものではなく、継続的に取り組むべき活動です。
データ品質実践ガイドには、以下の10のステップに分解して説明されています。


 データ品質評価の14タスク
10ステッププロセスのStep3「データ品質の評価」では、データの品質を一面的な見方ではなく、多角的に捉えることが重要です。ガイドブックでは、そのための評価軸として以...]]></description><link>https://zenn.dev/kkk555/articles/fd733ea6325911</link><guid isPermaLink="true">https://zenn.dev/kkk555/articles/fd733ea6325911</guid><pubDate>Tue, 06 May 2025 00:15:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FJBdeC47--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kkk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhNTczYTI3ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkk</dc:creator></item><item><title><![CDATA[FITファイル分析をさらに進化：Pythonスクリプトの改良と新機能]]></title><description><![CDATA[こんにちは！以前の記事「PythonとfitdecodeでサイクリングのFITファイルを分析してみる」では、fitdecodeライブラリを使ってFITファイルから基本的なデータを抽出し、簡単なグラフを作成する方法をご紹介しました。
もっと詳細な分析や見やすい可視化をしたい！ということで、スクリプトの改良と機能追加を行いました。今回は、そのパワーアップしたバージョンについてご紹介します。

 前回のおさらい
前回のスクリプトでは、主に以下のことを行いました。
1. fitdecodeを使ってFITファイルを読み込む。
2. レコードメッセージからタイムスタンプ、距離、高度、速度などのデータ...]]></description><link>https://zenn.dev/pincolo/articles/20d7127e7b1f29</link><guid isPermaLink="true">https://zenn.dev/pincolo/articles/20d7127e7b1f29</guid><pubDate>Mon, 05 May 2025 20:33:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZGy6tnje--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FIT%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2588%2586%25E6%259E%2590%25E3%2582%2592%25E3%2581%2595%25E3%2582%2589%25E3%2581%25AB%25E9%2580%25B2%25E5%258C%2596%25EF%25BC%259APython%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25AE%25E6%2594%25B9%25E8%2589%25AF%25E3%2581%25A8%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMmRjOWM3YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピンコロ</dc:creator></item><item><title><![CDATA[なぜ現代のプログラミング言語は三項演算子を採用しないのか]]></title><description><![CDATA[
プログラミングをしていると、私たちはよく条件判断を行い、その結果に基づいて異なるコードブロックを実行することがあります。多くのプログラミング言語において、最も一般的な書き方は三項演算子（Ternary Operator）です。しかし、Python では三項演算子がサポートされていません。奇遇なことに、人気の新興言語である Go や Rust も同様にサポートしていないのです！
では、なぜ Python は三項演算子を採用していないのでしょうか？この記事では、Python が条件分岐構文をどのように設計したかを中心に解説し、なぜ現在の独特な実装方式を選んだのかを解き明かします。また、他の...]]></description><link>https://zenn.dev/leap_adam/articles/91819c4d5fad1b</link><guid isPermaLink="true">https://zenn.dev/leap_adam/articles/91819c4d5fad1b</guid><pubDate>Mon, 05 May 2025 17:37:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PBgT0c-p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E7%258F%25BE%25E4%25BB%25A3%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AF%25E4%25B8%2589%25E9%25A0%2585%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2582%2592%25E6%258E%25A1%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Adam%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhZDIzOTdlZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Adam</dc:creator></item><item><title><![CDATA[データ分析に役立つPandasメソッド５選]]></title><description><![CDATA[
 はじめに

 想定読者

データ分析初学者
pandas初学者


 この記事の方針
データ分析をやるときに役立つPythonライブラリの1つにPandasがあります。
表形式のデータを扱う時には必須のツールですが、多機能ゆえに何から始めていいのかわかりづらいことも多いかと思います。実際、ググってみるとcsvを読み込んだりデータ前処理したりと、用途に合わせていろんなメソッドが用意されています。
そこで、ここではデータ分析に役立つものを厳選して紹介しようと思います。
ここで紹介するもの以外にも便利なものは山ほどありますが、少し知っておくだけで作業を効率化できそうなものをピックアップして...]]></description><link>https://zenn.dev/kneephys/articles/10af8924dd2846</link><guid isPermaLink="true">https://zenn.dev/kneephys/articles/10af8924dd2846</guid><pubDate>Mon, 05 May 2025 16:04:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qmd0zIQk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4Pandas%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25EF%25BC%2595%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shyphys%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzZjNWVhYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shyphys</dc:creator></item><item><title><![CDATA[作りながら学ぶLLM入門：前処理]]></title><description><![CDATA[
 概要

この記事の対象者：LLMの内部処理をコードレベルで具体的に理解し、自分で簡易的なモデルを動かしてみたいエンジニアや研究者。
この記事の内容：Raschka著『作りながら学ぶLLM入門』第2章をベースに、トークン化からサブワード分割、特殊トークン付与、データローダー作成、埋め込みまでの前処理工程をPythonコード付きで解説。
この記事を読んでできること：前処理の各ステップを自力で実装し、英語・日本語を問わずLLMの学習データを準備するパイプラインを構築できる。


 序説
(長いので、お急ぎの方はスキップしてください)
MCP、AIエージェント等盛り上がりを見せてますが、
そ...]]></description><link>https://zenn.dev/churadata/articles/459fb3543bc680</link><guid isPermaLink="true">https://zenn.dev/churadata/articles/459fb3543bc680</guid><pubDate>Mon, 05 May 2025 15:46:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YjYqAKex--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6LLM%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%2589%258D%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kei%25E5%25BF%258D%25E8%2580%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NTFmZDJlZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25A1%25E3%2582%2585%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYTk0NjI3YjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kei忍者</dc:creator></item><item><title><![CDATA[読みやすいコードを書く]]></title><description><![CDATA[
 読みやすいコードとは何か
読みやすいコードとは、脳に負荷がかからないコードである。脳に負荷がかからないコードとは、人間の脳の特性に配慮して書かれたコードである。したがって読みやすいコードを書くには、まず人間の脳の特性を把握する必要がある。読みやすいコードの特徴は、この人間の脳の特性から論理的に導かれる。
また、「コードを読む」とは過去から未来への情報伝達、または自分から他者への情報伝達であり、情報理論における以下の２つの数学的原理にも支配される。


頻出する情報には共通の符号を割り当てることで情報を圧縮することができる。

失われた情報を復元することはできない。

この記事に書かれ...]]></description><link>https://zenn.dev/wsuzume/articles/2cb8e99bda2cc8</link><guid isPermaLink="true">https://zenn.dev/wsuzume/articles/2cb8e99bda2cc8</guid><pubDate>Mon, 05 May 2025 12:25:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C4Hdkans--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25AD%25E3%2581%25BF%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Josh%2520Nobus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjZDAzYjNkNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Josh Nobus</dc:creator></item><item><title><![CDATA[動物の命を守るために。技術で「現場の負担」を減らす挑戦]]></title><description><![CDATA[
 自己紹介
はじめまして。私は「がお」と申します。現在、保護猫事業を手がける企業様と協力し、問い合わせ対応の負担を減らすシステムを開発しています。
私は本業ではエンジニアではありません。
ですが、開発はメンターの力を借りながらも、基本的に独学で学び続けて約1年半になります。
コードをゼロからガリガリ書くのはまだ得意とは言えませんが、
コードの理解と個人開発ができる程度のスキルを持って、実際にいくつかのプロダクトを形にしてきました。

 なぜ動物のためのシステムを作ろうと思ったのか
理由は、とてもシンプル。
「動物のために生きたい」と思ったからです。
多くの動物たちが、殺処分や虐待、無責...]]></description><link>https://zenn.dev/gaogaogao/articles/f44acc5696c0f2</link><guid isPermaLink="true">https://zenn.dev/gaogaogao/articles/f44acc5696c0f2</guid><pubDate>Mon, 05 May 2025 12:10:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ey2s4vh8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%2595%25E7%2589%25A9%25E3%2581%25AE%25E5%2591%25BD%25E3%2582%2592%25E5%25AE%2588%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2580%2582%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25A7%25E3%2580%258C%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%25AE%25E8%25B2%25A0%25E6%258B%2585%25E3%2580%258D%25E3%2582%2592%25E6%25B8%259B%25E3%2582%2589%25E3%2581%2599%25E6%258C%2591%25E6%2588%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258C%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWxqUGZJak1WRGo1YTRHam5DWXNjU0VER0xkTUdYR0U5OF9PY21qRGhBamx3eWw3Mjg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>がお</dc:creator></item><item><title><![CDATA[Discord Bot経由でレシートをGoogle Drive/Sheetに保存したい]]></title><description><![CDATA[
 作りたいもの
Discord Botに次のような機能を搭載したものが欲しい

レシートの値段をspread sheet等に保存
買ったもののカテゴリーも上と同じように保存
画像をGoogle Driveに保存


 作ろうと思ったわけ
プログラミングを始めて2年になりますが、個人開発や業務でのプログラミング経験があまりないため、何か自分で作ってみたいと思いました。普段は競技プログラミングに取り組んでいますが、実用的なツールにも挑戦してみたいと考えています。
私情ですが、いつもGoogle Driveにレシートの画像をアップロードし、月末にまとめてGoogle Spreadsheetに...]]></description><link>https://zenn.dev/azukiii/articles/8bf9cffe617a87</link><guid isPermaLink="true">https://zenn.dev/azukiii/articles/8bf9cffe617a87</guid><pubDate>Mon, 05 May 2025 12:01:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nPQx05fS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Discord%2520Bot%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592Google%2520Drive%252FSheet%25E3%2581%25AB%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mame%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG5pTjFRMk0wT2I3cFhWUXpzS29lNG1wcTgtdld6U1ZFZlFKbk5hNzQ2MWxBUzZycVg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mame</dc:creator></item><item><title><![CDATA[Pythonで始めるGraphQL【Strawberry】]]></title><description><![CDATA[
 はじめに
今回はStrawberryというライブラリを使って、PythonでGraphQLについて紹介したいと思います。
GraphQLは、FacebookによってRESTの課題を解決するために開発されたクエリ言語です。
具体的には以下のようなことができます。

 特定のフィールドだけ取得
Bookオブジェクトはtitle, autherというフィールドを持っているとします。
この時autherが不要なら、Bookのtitle一覧のみ取得することができます。

 ネストしたフィールドの取得
Userオブジェクトはid, name, follow_idsというフィールドを持っているとし...]]></description><link>https://zenn.dev/iharuoru/articles/ceb425fb6af669</link><guid isPermaLink="true">https://zenn.dev/iharuoru/articles/ceb425fb6af669</guid><pubDate>Mon, 05 May 2025 09:17:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wNDyeoIN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BGraphQL%25E3%2580%2590Strawberry%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkYWQyZjhkZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iharu</dc:creator></item><item><title><![CDATA[「パパ、MCPを使えば献立考えるの楽になるよ」]]></title><description><![CDATA[
 とある平日の夕方
娘「ねぇパパ、今日の晩ご飯なに？」
ワイ「うーん……冷蔵庫にウインナーと残りもんのキャベツあるから、焼きそばにでもしよか」
娘「また焼きそば？　3日連続なんだけど」
ワイ「献立考えるのって、ほんま骨折れるんや！　仕事終わってクタクタやのにレシピ探す余裕ないねん」
娘「……だったらパパ、機械に任せればいいじゃん」
ワイ「機械て、お前また電子レンジに喋りかけるつもりか？」
娘「違うよ。MCPサーバー立てて、レシピをツールとして公開して、あとはLLMに献立考えさせればいいだけだよ」
ワイ「M…C…P？　なんやそれ新しい格闘ゲームか？」
娘「“Model Context P...]]></description><link>https://zenn.dev/moxak/articles/6df67410391d89</link><guid isPermaLink="true">https://zenn.dev/moxak/articles/6df67410391d89</guid><pubDate>Mon, 05 May 2025 08:33:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FQYt9sXL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2583%2591%25E3%2583%2591%25E3%2580%2581MCP%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E7%258C%25AE%25E7%25AB%258B%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2581%25AE%25E6%25A5%25BD%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2582%2588%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ackkerman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2NDY2ZTM5NTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ackkerman</dc:creator></item><item><title><![CDATA[Difyを用いたSlack要約エージェントの構築]]></title><description><![CDATA[
 はじめに
近年、目覚ましい発展を遂げるAI技術、特に大規模言語モデル（LLM）を活用したAIエージェントが、私たちの働き方や情報収集のあり方を大きく変えようとしています。タスクの自動化、情報検索の効率化、そしてコミュニケーションの円滑化など、その可能性は多岐にわたり、様々な分野で実用化が進んでいます。
そんな中、ローコードで高機能なAIアプリケーション開発を可能にするプラットフォーム「Dify」が注目を集めています。Difyを利用することで、複雑なコーディングを伴うことなく、高度な自然言語処理機能を組み込んだAIエージェントを比較的容易に構築できるのです。
本ブログでは、このDify...]]></description><link>https://zenn.dev/upgradetech/articles/6ffc4f59023a54</link><guid isPermaLink="true">https://zenn.dev/upgradetech/articles/6ffc4f59023a54</guid><pubDate>Mon, 05 May 2025 00:44:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9CGmjT8A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dify%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FSlack%25E8%25A6%2581%25E7%25B4%2584%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:K.Kanke%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4NmJmMzNhODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UPGRADE%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0NWFiOWRhMWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>K.Kanke</dc:creator></item><item><title><![CDATA[OCRに関する技術調査その２（PaddleOCRベースの精度改善検討）]]></title><description><![CDATA[
 0. はじめに
お疲れ様です。STARAI社員の中岸です！
前回、OCR（光学文字認識（こうがくもじにんしき、英: Optical character recognition）：活字、手書きテキストの画像を文字コードの列に変換する技術）に関する記事を書きましたが、今回はもう少し深堀りして精度向上に向けてなにかできることはないかと色々と苦戦しながら調べてみた結果についてまとめてみました。
今回は、PaddleOCRのOCRモデルについて色々と試してみました。以降では、それぞれ試してみたことをセクションにして、サンプル画像（今回の処理対象は前回と似たような日本語ベースのダミー請求書、手書...]]></description><link>https://zenn.dev/starai/articles/8871df599e967e</link><guid isPermaLink="true">https://zenn.dev/starai/articles/8871df599e967e</guid><pubDate>Sun, 04 May 2025 17:43:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uQEWDa_w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OCR%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%25E8%25AA%25BF%25E6%259F%25BB%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%25EF%25BC%2588PaddleOCR%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E7%25B2%25BE%25E5%25BA%25A6%25E6%2594%25B9%25E5%2596%2584%25E6%25A4%259C%25E8%25A8%258E%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520STAR%2520AI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YmI3MTFhYjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社 STAR AI</dc:creator></item><item><title><![CDATA[Twitter(X)のデータをMarkdownに変換する]]></title><description><![CDATA[ChatGPTに聞いたら結構適当な回答だったのでメモ。

 Twitterアーカイブのダウンロード
あらかじめTwitterのアーカイブをダウンロードしておきます（ダウンロードできるようになるまで、人にもよりますが時間かかります（自分の場合は2,3日）。
この手順は省略します。GoogleかChatGPTで調べてください。

 アーカイブデータをMarkdownに変換
以下リポジトリを使います。
https://github.com/timhutton/twitter-archive-parser
ダウンロードしたデータを解凍して、対象のフォルダに移動します。
$ cd ~/Downlo...]]></description><link>https://zenn.dev/karaage0703/articles/961969f4f7762e</link><guid isPermaLink="true">https://zenn.dev/karaage0703/articles/961969f4f7762e</guid><pubDate>Sun, 04 May 2025 15:40:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--67oR3Kkv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Twitter%2528X%2529%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Markdown%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2582%2589%25E3%2581%2582%25E3%2581%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>からあげ</dc:creator></item><item><title><![CDATA[【Python】ParamikoリモートサーバのOSがわからない時のチェックサム確認方法]]></title><description><![CDATA[
 🔄【Paramiko × SFTP】リモートサーバのOSがわからない時のチェックサム確認する方法
またもや、pythonの記事です！！
最近、SSH経由でリモートサーバーのファイルの整合性（チェックサム）を確認するタスクがありました。しかし、そのサーバーは Linuxではなく、md5sumやsha256sumなどのコマンドが使えない 環境でした。
通常であれば、paramiko を使って以下のようにリモートでチェックサムを計算できます。
ssh.exec_command("md5sum /path/to/file")
でも、対象のサーバーがLinuxでない or コマンドが使えない状...]]></description><link>https://zenn.dev/tokogreen/articles/1209311a799d16</link><guid isPermaLink="true">https://zenn.dev/tokogreen/articles/1209311a799d16</guid><pubDate>Sun, 04 May 2025 14:01:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xdg-IIAi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Paramiko%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2581%25AEOS%25E3%2581%258C%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B5%25E3%2583%25A0%25E7%25A2%25BA%25E8%25AA%258D%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Greentomato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjNjYyMWI5NGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Greentomato</dc:creator></item><item><title><![CDATA[YOLOEの仕組みを整理してみた]]></title><description><![CDATA[
 概要
YOLOEと呼ばれるモデルがultralyticsで公開されました。今回は私なりにYOLOEの仕組みについて整理してみました。

本記事は、下記の記事 を日本語に翻訳し、筆者自身が理解のために補足・解説を加えたものです。内容の正確性については可能な限り努めていますが、誤訳などがある場合はご容赦ください。

https://medium.com/@nandinilreddy/yolo-e-in-detail-67a7d57eef6c

 背景
“see anything” がコンセプトのモデルになっている。

主に三つのタスクで検出およびセグメンテーションが可能


Text p...]]></description><link>https://zenn.dev/bamboo_nova/articles/be383ab6b0e902</link><guid isPermaLink="true">https://zenn.dev/bamboo_nova/articles/be383ab6b0e902</guid><pubDate>Sun, 04 May 2025 12:57:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zTfy_jqE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLOE%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25A1%2580%25E5%25A8%2581%25E8%258F%25AF%25E6%2588%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmY0NjM5OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>血威華我</dc:creator></item></channel></rss>