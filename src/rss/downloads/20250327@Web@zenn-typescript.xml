<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 27 Mar 2025 09:26:13 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScript ジェネリクス型定義Array理解]]></title><description><![CDATA[
 はじめに
型定義のジェネリック型に関して、
const stringArray: Array&lt;string&gt; = ["apple", "banana", "cherry"];
もジェネリック型の理由をまとめました。

 今回の疑問：Array&lt;string&gt;もジェネリック型？
ジェネリクス型定義とは、
「型をパラメータ化し、型を抽象的な型引数として扱うことで、型を後から具体的に指定できるようにする仕組み」
であると理解していました。
コード例:
const identity = &lt;T&gt;(arg: T): T =&gt; arg;
const myS...]]></description><link>https://zenn.dev/yyoshioka/articles/11ad542bc3d96f</link><guid isPermaLink="true">https://zenn.dev/yyoshioka/articles/11ad542bc3d96f</guid><pubDate>Thu, 27 Mar 2025 03:40:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sCsDYqiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9Array%25E7%2590%2586%25E8%25A7%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2587%25E3%2581%2586%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjkxZTg3NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みょうじょう</dc:creator></item><item><title><![CDATA[[開発日記]　最近見た商品一覧]]></title><description><![CDATA[既存のプロジェクトに新しい機能を追加することを考えていたところ、LocalStorageの活用方法の一つとして「閲覧リスト」を表示させるアイデアを聞きました。そこで、早速実装してみました。

 実装概要


クリックしたアイテムのIDをLocalStorageに保存
最大5件まで保存（古いものは削除）
同じアイテムの重複を防止
最大10日間保持（期限切れのデータは自動削除）


 閲覧リストの管理（hooksの利用）

閲覧リストの状態を管理するために、hooks（useState） を使用しました。

 満了日設定

const EXPIRATION_DAYS = 10; // データ...]]></description><link>https://zenn.dev/hyoni/articles/ffc5c4aed5256f</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/ffc5c4aed5256f</guid><pubDate>Thu, 27 Mar 2025 01:22:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l9m9Fx_i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E9%2596%258B%25E7%2599%25BA%25E6%2597%25A5%25E8%25A8%2598%255D%25E3%2580%2580%25E6%259C%2580%25E8%25BF%2591%25E8%25A6%258B%25E3%2581%259F%25E5%2595%2586%25E5%2593%2581%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[100. Same Tree]]></title><description><![CDATA[以下は、与えられた英文の日本語訳です：

2つの二分木 p と q の根が与えられたとき、それらが同じかどうかを確認する関数を作成してください。
2つの二分木は、構造が同一であり、かつ各ノードの値が同じである場合に「同じ」と見なされます。


 例 1:
入力: p = [1,2,3], q = [1,2,3]
出力: true

 例 2:
入力: p = [1,2], q = [1,null,2]
出力: false

 例 3:
入力: p = [1,2,1], q = [1,1,2]
出力: false



両方が null → 同じ木なので true
片方だけが null →...]]></description><link>https://zenn.dev/idapan/articles/6bd195192b0387</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/6bd195192b0387</guid><pubDate>Wed, 26 Mar 2025 21:16:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--61JNskod--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:100.%2520Same%2520Tree%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[筋肉ムキムキだった頃の僕とジャンケンが出来るというクソアプリを作った話]]></title><description><![CDATA[
 はじめに
この記事を開いたときに皆さんはこう思ったことでしょう。
「この人は一体、何言ってるんだ？？？」
その気持ち、良くわかります。
なぜなら僕自身も同じことを思っているからです。
この記事の趣旨は至って真面目で、初めてTypescriptやReactを使って自作アプリを公開してみたい人向けの記事となっております。
特にこれからプログラミングを始める人や業務経験が浅いが新しい技術をキャッチアップしなければいけない人に役立つキャッチアップ法もお伝えしていきます。

僕については以下のような感じです。

僕は現役のWEBエンジニアで、担当業務は要件定義から設計・実装・運用まで全てを担当...]]></description><link>https://zenn.dev/kudosho/articles/6964280e9bea4e</link><guid isPermaLink="true">https://zenn.dev/kudosho/articles/6964280e9bea4e</guid><pubDate>Wed, 26 Mar 2025 16:07:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NEEClpPn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kudo%2520sho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZjhjNmZfYWJMMC1NN2FGdVFaUzVxdC1XWlM5QkNycll4MnpydzAwSGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kudo sho</dc:creator></item><item><title><![CDATA[本文抽出ライブラリの readability.js を DOM 非依存に書き直す(WIP)]]></title><description><![CDATA[現状、最低限動いてはいるけどガバガバ

 Readability.js とは
HTML から本文を抽出するライブラリ。
https://github.com/mozilla/readability
元々はArc90によって開発され、現在はMozillaのFirefox Reader View に使われている。
AIモデルではなくルールベースだが、かなり精度がでる。
自分はこれを AI に食わせるサマリを作るのに愛用していたのだが...

 DOM API 依存と Cloudflare でJSDOMが動かない問題
DOM API に依存しているので、 jsdom に依存してしまう。
imp...]]></description><link>https://zenn.dev/mizchi/articles/rewrite-readability-for-ai</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/rewrite-readability-for-ai</guid><pubDate>Wed, 26 Mar 2025 15:35:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bXwFLZ7r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%25AC%25E6%2596%2587%25E6%258A%25BD%25E5%2587%25BA%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%2520readability.js%2520%25E3%2582%2592%2520DOM%2520%25E9%259D%259E%25E4%25BE%259D%25E5%25AD%2598%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E7%259B%25B4%25E3%2581%2599%2528WIP%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[【React】useRef() で初回の2回実行に対応する]]></title><description><![CDATA[
 背景
React の StrictMode って、開発環境で useEffect を2回実行しちゃうんですよね。
('react 純関数'とかでググれば中の話が出てきます)
最初は useState でフラグを管理してたんですが、「あれ？ useRef のほうがよくね？」となったので、この記事を書きました。


 useRef とは？
useRef は React のフックで、ざっくり言うとこんな感じで使えます。


DOM 要素への参照を保持（ref 属性）
コンポーネント間で値を保持（再レンダリングなし）
useEffect の実行制御（今回のメインテーマ）


 基本的な使い方...]]></description><link>https://zenn.dev/antapp/articles/3345dd5fe04a5b</link><guid isPermaLink="true">https://zenn.dev/antapp/articles/3345dd5fe04a5b</guid><pubDate>Wed, 26 Mar 2025 15:17:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KxDXEhy0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591useRef%2528%2529%2520%25E3%2581%25A7%25E5%2588%259D%25E5%259B%259E%25E3%2581%25AE2%25E5%259B%259E%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kutsu-4ta%2528yamashit...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZGQ1ZTdjY2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kutsu-4ta(yamashita_antapp)</dc:creator></item><item><title><![CDATA[Better Authのスキーママイグレーション管理の仕組み]]></title><description><![CDATA[
 Better Auth はどうやってDBアダプタごとのスキーママイグレーションを扱っているのか？
この記事では、Better AuthというTypeScript向け認証・認可ライブラリのスキーママイグレーション管理について解説します。開発者Beka Cruさんが実装した仕組みを見ていきましょう。
Better Authは、TypeScript向けの包括的な認証・認可ライブラリで、様々なデータベースやフレームワークに対応しています。今回は、Better Authがどのようにして多様なDBアダプタ（Kysely、Prisma、Drizzleなど）に対応し、スキーママイグレーションを管理し...]]></description><link>https://zenn.dev/coji/articles/better-auth-schema-migration-mechanism</link><guid isPermaLink="true">https://zenn.dev/coji/articles/better-auth-schema-migration-mechanism</guid><pubDate>Wed, 26 Mar 2025 13:42:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--18AELpqQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Better%2520Auth%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[テストケースごとにvi.mockでモックした関数の返り値を変えたい]]></title><description><![CDATA[タイトルの通り、テストケースごとに vi.mock でモックした関数の返り値を変えたいです。
結果的にできたのですが、ググってもAIに聞いてもズバリの情報が得られませんでした。他に良いやり方があるかもしれませんが、とりあえずこれでできましたというメモになります。
!
本記事において、Vitestのバージョンは以下です。

"vitest": "3.0.8"
"vite": "6.2.1"



 前提
src
├── my-module.ts
└── sample.ts
こんな感じで各ファイルがあったとします。

my-module.ts
export const getMyValue ...]]></description><link>https://zenn.dev/dyoshikawa/articles/vi-mock-change-value</link><guid isPermaLink="true">https://zenn.dev/dyoshikawa/articles/vi-mock-change-value</guid><pubDate>Wed, 26 Mar 2025 08:00:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rm0-wc4Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25ABvi.mock%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2597%25E3%2581%259F%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E8%25BF%2594%25E3%2582%258A%25E5%2580%25A4%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dyoshikawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmN2M2YzVmZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dyoshikawa</dc:creator></item><item><title><![CDATA[MCPサーバー入門＆社内サービス連携で日常業務を圧縮する]]></title><description><![CDATA[
 初めに
色々話題になっているMCPですが皆さん使っていますか？
コーディングや開発周りでも既に色々なところで採用事例が紹介されており、かくいう私も採用前後で開発体験や実装スピードに顕著な変化を感じています。
とはいえ、日々の仕事においては幸か不幸か”開発”以外のタスクが多いのも事実であり、特に現職では情報が

日々のやりとり =&gt; Slack
社内の規定や情報 =&gt; Kibela
プロジェクトや一般的な資料 =&gt; GoogleDrive
チケット管理 asana or Jira

のようになっており、ブックマークや拡張機能などを駆使しながらも必要な情報を探すのに一苦...]]></description><link>https://zenn.dev/akizarashi/articles/02783c2b0133f5</link><guid isPermaLink="true">https://zenn.dev/akizarashi/articles/02783c2b0133f5</guid><pubDate>Wed, 26 Mar 2025 02:17:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jFHtiB6w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2586%25E7%25A4%25BE%25E5%2586%2585%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25A7%25E6%2597%25A5%25E5%25B8%25B8%25E6%25A5%25AD%25E5%258B%2599%25E3%2582%2592%25E5%259C%25A7%25E7%25B8%25AE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saboten%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiOTIyZTg0ODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saboten</dc:creator></item><item><title><![CDATA[【1日1zenn - day20】vitestでuseStateやuseRefをmockする方法]]></title><description><![CDATA[最近UXデザイン側のタスクが多くて中々コードを書けていなかったのですが、
ちょっと落ち着いてコードを書いたら案の定詰まったのでサクッと振り返ります。

 状況

言語

React
TypeScript
Vitest


実装内容

モーダルを下スワイプすることで閉じるhooks

スワイプした距離がモーダルの高さの一定以上だったらhandleCloseを作動させる


元々あるモーダルに適用させていたが、ほかのモーダルにも実装することになったため、src/hooks配下の共通hooksとして切り出した


事象

以下のエラーが出るようになった

TypeError: Cannot r...]]></description><link>https://zenn.dev/shunsuke108m/articles/72ee0635779a6c</link><guid isPermaLink="true">https://zenn.dev/shunsuke108m/articles/72ee0635779a6c</guid><pubDate>Tue, 25 Mar 2025 13:59:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S567Us53--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25901%25E6%2597%25A51zenn%2520-%2520day20%25E3%2580%2591vitest%25E3%2581%25A7useState%25E3%2582%2584useRef%25E3%2582%2592mock%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%25AE%25E7%2594%25B0%25E5%25B3%25BB%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG9Jdy1QSHNvSW1WVGpKTmxFbkhnZkRyZ0pBVlRSQzhIaWMweDVJUmZLS3hlUjZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宮田峻輔</dc:creator></item><item><title><![CDATA[ZustandのSelector書くのメンドくさい問題にさようなら：Selectorの自動生成で快適Global state管理]]></title><description><![CDATA[ご注意！
この記事は私が知りたい内容を AI にまとめさせたものです。あしからず🙇‍♂️

 TL;DR

Zustandにおいて、Selectorを自動生成することで、コードの簡素化とパフォーマンスの向上が可能である。
これにより、手動でのSelector記述の手間を省き、パフォーマンスの低下を防ぐことができる。


 はじめに

Zustandは、Reactのための軽量な状態管理ライブラリであり、シンプルなAPIと高い柔軟性を持つ。
状態管理において、必要な状態のみを購読するSelectorの使用は、不要な再レンダリングを防ぎ、パフォーマンス向上に寄与する。
しかし、各状態に対して手...]]></description><link>https://zenn.dev/arx8/articles/3569178ffe56dd</link><guid isPermaLink="true">https://zenn.dev/arx8/articles/3569178ffe56dd</guid><pubDate>Tue, 25 Mar 2025 09:58:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---GRjk6Wq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zustand%25E3%2581%25AESelector%25E6%259B%25B8%25E3%2581%258F%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2581%258F%25E3%2581%2595%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AB%25E3%2581%2595%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E3%2582%2589%25EF%25BC%259ASelector%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%25A7%25E5%25BF%25AB%25E9%2581%25A9Global%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:arx8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwOWNlNDhjNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>arx8</dc:creator></item><item><title><![CDATA[特定の Component tree だけで使える状態管理をZustand + React Contextで実現する]]></title><description><![CDATA[ご注意！
この記事は私が知りたい内容を AI にまとめさせたものです。あしからず🙇‍♂️

 TL;DR（要約）

Zustandは軽量で使いやすい状態管理ライブラリだが、アプリ全体ではなく「特定のコンポーネントサブツリー内だけで共有したい状態」にも使いたいことがある。
そのような場合、ZustandとReact Contextを組み合わせることで、状態のスコープを適切に制御できる。
この記事では、グローバルでない状態管理を実現する実装方法とその利点を解説する。



 状態管理の課題：全部グローバルにしたくはない
Reactアプリケーションにおける状態管理では、グローバルステートの扱い...]]></description><link>https://zenn.dev/arx8/articles/0c0dafb6dc2aa3</link><guid isPermaLink="true">https://zenn.dev/arx8/articles/0c0dafb6dc2aa3</guid><pubDate>Tue, 25 Mar 2025 09:33:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zpRAZENY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%2520Component%2520tree%2520%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592Zustand%2520%252B%2520React%2520Context%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:arx8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwOWNlNDhjNzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>arx8</dc:creator></item><item><title><![CDATA[Next.js 実践入門 - TypeScript 編]]></title><description><![CDATA[本書では Next.js における TypeScript について学べます。

【習得できること】
- Next.js で開発するために必要な TypeScript の知識
- Next.js で開発するために必要な TypeScript の設定
- Next.js で開発するために必要な TSConfig の設定方法
- Next.js で開発するために必要な TSConfig の各種項目の理解

【対象読者】
- Next.js の利用者
- TypeScript のについて学び直したい人

【前提知識】
- Next.js の初歩的な知識

【本書の特徴】
- ステップバイステップで構築方法を学べる
- ソースコードを参考にしながら学習
]]></description><link>https://zenn.dev/hayato94087/books/b174f8b1cd80db</link><guid isPermaLink="true">https://zenn.dev/hayato94087/books/b174f8b1cd80db</guid><pubDate>Tue, 25 Mar 2025 04:03:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X1gEc3zb--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80MWU2MGZlNDhiLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[useOptimisticでさくっと実装する楽観的更新(Optimistic Update)]]></title><description><![CDATA[
 はじめに
UI/UXにおける、Optimistic Updateって知っていますか？日本語にすると楽観的更新などと呼ばれたりします。実は日常にたくさん存在しており、見かけたことはあるかなと思います。
例えば、Xのいいねボタンです。「いいね」した瞬間にハートに色がつくのですが、サーバーへのリクエストとUIの更新は同時に行われています。つまりサーバーへのリクエスト結果を待たずにUIを更新しているということです。これが楽観的更新になります。

リクエスト結果を待ってからUIを更新する場合、ユーザーが「いいね」をしてからハートに色がつくまで時間がかかり、UXが悪くなってしまいます。そのため本...]]></description><link>https://zenn.dev/gemcook/articles/4c1a327a505f8f</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/4c1a327a505f8f</guid><pubDate>Tue, 25 Mar 2025 03:55:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q6rJNh3E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useOptimistic%25E3%2581%25A7%25E3%2581%2595%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A8%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%25A5%25BD%25E8%25A6%25B3%25E7%259A%2584%25E6%259B%25B4%25E6%2596%25B0%2528Optimistic%2520Update%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KM%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjk0ZGQyMWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KM</dc:creator></item><item><title><![CDATA[QAエンジニアがWebアプリケーションフロントエンドのテストコードを書いてみる（テストスパイ編）]]></title><description><![CDATA[
 はじめに
ReactなどのWebアプリケーションフレームワークを用いたフロントエンド開発経験ゼロのQAエンジニアが、Webアプリケーションのテストコードを書いてみるシリーズです。
背景として、エンジニアに対して、「テストコードを書いてください」とよくお願いしてしまいます。しかし、エンジニアから「テストコードを書くので書き方を教えてください」と返答されると、それに答えられるスキルがないので、自分なりに簡単なWebアプリケーションのコードとそれを対象としたテストコードを書いてみることにしました。
本書では、テストスパイを使ってテストコードを紹介します。

 テストスパイとは
本節は、xU...]]></description><link>https://zenn.dev/jyoppomu/articles/85db46f4ce106d</link><guid isPermaLink="true">https://zenn.dev/jyoppomu/articles/85db46f4ce106d</guid><pubDate>Tue, 25 Mar 2025 03:08:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xLobvL1M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:QA%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258CWebw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2520Yoshida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dWTk8taTFaYXc2blBpeUpQQi16cHN5SXRycEFBeDhObk9OajUxYUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuki Yoshida</dc:creator></item><item><title><![CDATA[Vitepress ドキュメントを MCP 化する]]></title><description><![CDATA[
 はじめに
今回の実装は mastra というフレームワークの初期化時に追加できる MCP のドキュメントサーバーがめちゃくちゃ便利だったので、それに影響を受けて手元の Vitepress 製のドキュメントを MCP (Model Context Protocol) 化した際の記録です。
今回は自分の手元の Vitepress 製のドキュメントを MCP 経由で取得できるようにしてみました。


 環境情報
今回使用した環境は以下の通りです。

Node.js: v20.17.1
pnpm: 9.11.5
VitePress: 1.6.3


 準備

 パッケージのインストール
Vi...]]></description><link>https://zenn.dev/heavenosk/articles/vitepress-mcp</link><guid isPermaLink="true">https://zenn.dev/heavenosk/articles/vitepress-mcp</guid><pubDate>Tue, 25 Mar 2025 00:27:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nHmSC83C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vitepress%2520%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%2520MCP%2520%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B8%25E3%2581%25B6%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hoMWZIZ0JrazVrQ3N2c2dQYS10azVkMG0yTk02ZHBDM3BBWXdKPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>へぶん</dc:creator></item><item><title><![CDATA[1152円と1時間でブログアプリをデプロイできる]]></title><description><![CDATA[
 はじめに
約 1150 円を払うことで、blog アプリの原型をフルスクラッチで作成でき、vercel へデプロイまでできました。
概略を備忘録として残しておきます。

FW : nextjs
css : tailwind
エディタ : vscode
拡張機能 : Cline
使用した AI モデル : claude-3.7-sonnet
所要時間 : 1 時間程度
かかった料金 : 7.69 ドル（約 1,152 円）　（149.79 円/ドル）


 成果物
https://nextjs-blog-app-roan.vercel.app/
https://github.com/n...]]></description><link>https://zenn.dev/nekoallergy/articles/web-nextjs-cline-blog</link><guid isPermaLink="true">https://zenn.dev/nekoallergy/articles/web-nextjs-cline-blog</guid><pubDate>Mon, 24 Mar 2025 14:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2oEWY6zo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1152%25E5%2586%2586%25E3%2581%25A81%25E6%2599%2582%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NekoAllergy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkMzhmNmU1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NekoAllergy</dc:creator></item><item><title><![CDATA[prisma-schema-fixer で schema.prisma を補正する]]></title><description><![CDATA[Prismaを使っていると、schema.prismaファイルで次のような命名規則を適用したいことがあります。

テーブル名やカラム名をスネークケース（user_profileなど）にしたい

DB設計の慣習としてスネークケースが一般的であるため


データベース上のテーブル名は複数形(users)、コード上のモデル名は単数形(User)にしたい

データベース上の名前は、@@mapや@mapで指定できますが、これを毎回書くのは大変です。
また、複数形/単数形のチェックはもっと大変です。
これを自動で行ってくれるツールとして、prisma-case-formatがあります。

iiian...]]></description><link>https://zenn.dev/onozaty/articles/prisma-schema-fixer</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/prisma-schema-fixer</guid><pubDate>Mon, 24 Mar 2025 13:38:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--smMNVwHL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prisma-schema-fixer%2520%25E3%2581%25A7%2520schema.prisma%2520%25E3%2582%2592%25E8%25A3%259C%25E6%25AD%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[pnpmとNext.jsでのReact Suspense型エラーを解決する]]></title><description><![CDATA[最近 Next.js プロジェクトでpnpmを使用中に、React Suspenseコンポーネントに関する不思議な型エラーに遭遇しました。この記事では、その問題と解決策を共有します。

 発生した問題
Next.jsプロジェクトでReactのSuspenseコンポーネントを使用した際に、以下のようなTypeScriptエラーが発生しました：
Type 'ReactElement&lt;unknown, string | JSXElementConstructor&lt;any&gt;&gt;' is not assignable to type 'ReactNode'.
Property...]]></description><link>https://zenn.dev/fumiyamizuguchi/articles/5e1b05caa2f063</link><guid isPermaLink="true">https://zenn.dev/fumiyamizuguchi/articles/5e1b05caa2f063</guid><pubDate>Mon, 24 Mar 2025 12:12:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LgLz1iQY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pnpm%25E3%2581%25A8Next.js%25E3%2581%25A7%25E3%2581%25AEReact%2520Suspense%25E5%259E%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fumiya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwNWE5NWQwZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Fumiya</dc:creator></item><item><title><![CDATA[TypeScriptでフルスタック開発マスターへの道・家計簿アプリ構築（作成中）]]></title><description><![CDATA[家計簿アプリを作成します。
記事を少しづつ更新・追加していきますので、気長にお待ちください。
また、私のYouTubeのチャンネルに解説動画も公開予定です。
動画も併せて、ぜひご覧ください。
https://www.youtube.com/@arafipro

GitHubリポジトリも公開しています。
https://github.com/arafipro/expense-tracker-app
]]></description><link>https://zenn.dev/arafipro/books/expense-tracker-app</link><guid isPermaLink="true">https://zenn.dev/arafipro/books/expense-tracker-app</guid><pubDate>Mon, 24 Mar 2025 10:35:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jxicGwOt--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kZjAyZDI2MDk0LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>arafipro(HIROKI CHIYODA)</dc:creator></item></channel></rss>