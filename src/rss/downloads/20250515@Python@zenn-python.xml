<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 15 May 2025 04:39:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[LiNGAMで因果探索する際の概観分析について調査した（正規性）]]></title><description><![CDATA[
 はじめに
こんにちは、因果探索アプリケーション Causalas 開発の井手です。
今回は、因果探索アルゴリズムの一つであるLiNGAMを用いた因果探索における、概観分析について調査しました。
LiNGAMに関連する論文を中心に調査を行い、因果探索の際に共通して実施される概観分析の項目として、正規性の分析方法についてまとめましたので紹介します。

 正規性
LiNGAMは非ガウス性を仮定とした因果探索手法です。
そのため、多くの論文では、因果探索を実行するデータセットの各変数が正規分布に従うかどうかを検証し、LiNGAMの前提条件を満たしているかを確認しています。

 ヒストグラム
...]]></description><link>https://zenn.dev/as_causal/articles/6a5b7c3f9745a6</link><guid isPermaLink="true">https://zenn.dev/as_causal/articles/6a5b7c3f9745a6</guid><pubDate>Thu, 15 May 2025 03:35:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xax4Nmqa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LiNGAM%25E3%2581%25A7%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A2%25E7%25B4%25A2%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%25B3%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E6%259F%25BB%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E6%25AD%25A3%25E8%25A6%258F%25E6%2580%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25BA%2595%25E6%2589%258B%2520%25E9%25BA%25BB%25E5%258F%258B%25E7%25BE%258E%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNDhjNDQ5MDQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SCREEN%2520AS%2520%25E5%259B%25A0%25E6%259E%259C%25E6%258E%25A2%25E7%25B4%25A2%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEJja2JDb2wtY3MyNG56dUZkT0tNOEVWVU5JeXNXbmhPbGZ5LTJIdU9BUkMwVmR3PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>井手 麻友美</dc:creator></item><item><title><![CDATA[uvでライブラリをグルーピングして最小限の依存関係で起動できるようにする]]></title><description><![CDATA[
 始めに
Pythonに限らずアプリケーションを大規模で運用していくほどライブラリの依存関係が増えていきます。その時にAPIとバッチ等の用途に応じたアプリケーションごと分割する方法もありますが二重管理が面倒になります。JavaではGradleを使用してマルチプロジェクト構成にしておくことで、必要なライブラリだけで起動するようにできました。
今回の記事では、Pythonのuvを使用してライブラリをグルーピングすることで、必要なライブラリを最小限にする方法を記載します。

 環境

Python

3.13


uv

0.7.2




 実装

 ライブラリのグルーピング
depend...]]></description><link>https://zenn.dev/kirimaru/articles/b67401a01dda80</link><guid isPermaLink="true">https://zenn.dev/kirimaru/articles/b67401a01dda80</guid><pubDate>Thu, 15 May 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TtH8Vr5q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%25E3%2581%25A7%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E6%259C%2580%25E5%25B0%258F%25E9%2599%2590%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E4%25B8%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1OTcxNmNjNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きり丸</dc:creator></item><item><title><![CDATA[PythonとOpenAI APIで実践！MCP開発入門 【第1回】AI開発のスタートライン！Pythonプログラミング環境構築 完全ガイド]]></title><description><![CDATA[
 はじめに

 AI開発の世界へ、ようこそ！その第一歩は「環境構築」から
皆さん、こんにちは！今日から始まる新シリーズ「PythonとOpenAI APIで実践！はじめてのMCP（モデルコンテキストプロトコル）開発入門」へ、ようこそお越しくださいました。このシリーズでは、今話題のOpenAI APIを使いこなし、AIにこちらの意図や状況（コンテキスト）を的確に伝え、より賢い応答を引き出すための「モデルコンテキストプロトコル（MCP）」的な考え方と、その実践方法を、Pythonプログラミングを通じて学んでいきます。
AI、機械学習、大規模言語モデル（LLM）…こうした言葉を耳にする機会が...]]></description><link>https://zenn.dev/querypie/articles/f8fedd7fbe66a5</link><guid isPermaLink="true">https://zenn.dev/querypie/articles/f8fedd7fbe66a5</guid><pubDate>Thu, 15 May 2025 00:55:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o11G_nRm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8OpenAI%2520API%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25EF%25BC%2581MCP%25E9%2596%258B%25E7%2599%25BA%25E5%2585%25A5%25E9%2596%2580%2520%25E3%2580%2590%25E7%25AC%25AC1%25E5%259B%259E%25E3%2580%2591AI%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25EF%25BC%2581Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:QueryPie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MzUyMzdkYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>QueryPie</dc:creator></item><item><title><![CDATA[sorted(args, key=lambda x: x[0])について]]></title><description><![CDATA[
 1. 文字列リストのソート
以下の例では、words リスト内の各文字列の 1文字目 (x[0]) を基準にしてソートを行う：
words = ["banana", "apple", "cherry"]
sorted_words = sorted(words, key=lambda x: x[0])
print(sorted_words)  # 出力: ['apple', 'banana', 'cherry']


lambda x: x[0] の x は "banana", "apple", "cherry" が順に渡される。

x[0] はそれぞれ 'b', 'a', 'c' と...]]></description><link>https://zenn.dev/aki05162525/articles/2aa0f4c4b7a3bf</link><guid isPermaLink="true">https://zenn.dev/aki05162525/articles/2aa0f4c4b7a3bf</guid><pubDate>Thu, 15 May 2025 00:03:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zb8c5IQn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sorted%2528args%252C%2520key%253Dlambda%2520x%253A%2520x%255B0%255D%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBaM1pHbFo2RUJSc0NDTnVqeUpRV0U0eXEzczZJeTNYR1NPdHE2a21ZR3dNSWpqTXA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いるか</dc:creator></item><item><title><![CDATA[【初心者向け】Pythonのtype() と isinstance() の違いを整理する]]></title><description><![CDATA[
 はじめに
Pythonでは、変数の「型（データ型）」を調べたい場面がよくあります。
そのときによく使われるのが type() と isinstance() です。
私自身、最初は「どちらを使えばいいのか？」「違いがよくわからない」と感じました。
本記事では、type() と isinstance() の違いについて、
役割・使いどころ・注意点を初心者向けに整理します。

 1. type() の基本
type() は、オブジェクトの正確な型を取得するための関数です。
print(type(123))        # &lt;class 'int'&gt;
print(type("h...]]></description><link>https://zenn.dev/fd2025/articles/27aef5ada237c5</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/27aef5ada237c5</guid><pubDate>Wed, 14 May 2025 22:55:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C5O0kdh9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%25E3%2581%25AEtype%2528%2529%2520%25E3%2581%25A8%2520isinstance%2528%2529%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[Termuxでpythonを使う]]></title><description><![CDATA[https://zenn.dev/dameyodamedame/articles/937421d81b5949
上記の記事の詳細記事です。
日本では最初に教えるプログラミング言語をScratchにしている場合も多いようですが、Termux環境は基本CLIなので、動作しません。なのでここでは最初にPythonを選択します。

 Pythonをインストールする
~ $ pkg install python
インストール中に何か聞かれたら⏎すればOKです。勝手にデフォルトの選択肢が適宜選ばれます。

 エディタでPythonのプログラムを書く
nanoを使ってloop.pyという名前のファイル...]]></description><link>https://zenn.dev/dameyodamedame/articles/5b61268cf03c95</link><guid isPermaLink="true">https://zenn.dev/dameyodamedame/articles/5b61268cf03c95</guid><pubDate>Wed, 14 May 2025 16:50:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Za7IlMRW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Termux%25E3%2581%25A7python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dameyodamedame%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dameyodamedame</dc:creator></item><item><title><![CDATA[log変換で見えてきた落とし穴──Targetの12%が“変動なし”だった話]]></title><description><![CDATA[
 はじめに
log変換は、株価のような桁の大きな時系列データを扱う上で、非常に有効なスケーリング手法です。
本研究でも、XGBoostモデルにおいて価格スケールの歪みを是正するために、log変換を導入しました。
しかし、logを使って予測Target（log収益率）を定義した結果、思わぬ落とし穴に遭遇したのです。


 Target定義：log差による収益率
本研究では、以下のようにして翌営業日の収益率（logベース）を予測ターゲットとしました。
df["LogClose"] = np.log(df["Close"])
df["Target"] = df["LogClose"].shi...]]></description><link>https://zenn.dev/kto2myk/articles/247daaf4734b9f</link><guid isPermaLink="true">https://zenn.dev/kto2myk/articles/247daaf4734b9f</guid><pubDate>Wed, 14 May 2025 15:39:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hInkYVw9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:log%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E7%25A9%25B4%25E2%2594%2580%25E2%2594%2580Target%25E3%2581%25AE12%2525%25E3%2581%258C%25E2%2580%259C%25E5%25A4%2589%25E5%258B%2595%25E3%2581%25AA%25E3%2581%2597%25E2%2580%259D%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A5%259E%25E7%2594%25B0%25E3%2580%2580%25E6%2599%25BA%25E5%25BC%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NjdiNTRjYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>神田　智弥</dc:creator></item><item><title><![CDATA[生成AIアプリをゼロから作る（第1回）ColabとGradioで環境を整えよう]]></title><description><![CDATA[こんにちは！この連載では、Python と Gradio、OpenAI API を使って、生成AIを活用した質問応答アプリを段階的に開発していきます。
初学者でも取り組める内容になっているので、

💡「生成AIって触ってみたいけど、何から始めればいいの？」
💡「ChatGPTの仕組みをアプリで体験してみたい！」

という方にぴったりの内容です。

 はじめに
この連載では「生成AIアプリの開発」にフォーカスしており、
Google Colabの基本的な使い方やPython言語そのものの学習については詳しく触れません。
「Colabって何？」「Pythonってどう書くの？」という方には少し...]]></description><link>https://zenn.dev/ykoba933/articles/f6a64d7cd1bb3c</link><guid isPermaLink="true">https://zenn.dev/ykoba933/articles/f6a64d7cd1bb3c</guid><pubDate>Wed, 14 May 2025 10:10:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--68mcRtQF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590AI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588%25E7%25AC%25AC1%25E5%259B%259E%25EF%25BC%2589Colab%25E3%2581%25A8Gradio%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykoba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M3MjI3ZjE2MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykoba</dc:creator></item><item><title><![CDATA[精度を引き上げるLog変換の裏技：XGBoostと相性抜群な理由を数学で解剖する]]></title><description><![CDATA[
 1. 現場でよくある問題：「株価はバラつきすぎる」

株価などの金融データは桁も動きも大きすぎる
XGBoostにそのまま突っ込むと、大きな値に引っ張られがちになる
⇒ モデルが一部のスケールに過剰適合するリスク




 2. 実はみんな使ってる「log変換」という裏技


よく見る処理：
df["LogClose"] = np.log(df["Close"])
df["Target"] = df["LogClose"].shift(-1) - df["LogClose"]



これ、ただの前処理じゃない


学習の安定性と精度に効く「重要な変換」




 3. Logの何がい...]]></description><link>https://zenn.dev/kto2myk/articles/3ddbad2e568768</link><guid isPermaLink="true">https://zenn.dev/kto2myk/articles/3ddbad2e568768</guid><pubDate>Wed, 14 May 2025 10:03:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HKN6V_SA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B2%25BE%25E5%25BA%25A6%25E3%2582%2592%25E5%25BC%2595%25E3%2581%258D%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258BLog%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25AE%25E8%25A3%258F%25E6%258A%2580%25EF%25BC%259AXGBoost%25E3%2581%25A8%25E7%259B%25B8%25E6%2580%25A7%25E6%258A%259C%25E7%25BE%25A4%25E3%2581%25AA%25E7%2590%2586%25E7%2594%25B1%25E3%2582%2592%25E6%2595%25B0%25E5%25AD%25A6%25E3%2581%25A7%25E8%25A7%25A3%25E5%2589%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A5%259E%25E7%2594%25B0%25E3%2580%2580%25E6%2599%25BA%25E5%25BC%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NjdiNTRjYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>神田　智弥</dc:creator></item><item><title><![CDATA[GitHub Copilotによるユニットテスト自動生成の体験レポート]]></title><description><![CDATA[
 調査日
2025年5月13日（火）

 調査目的
GitHub Copilotを用いて、ユニットテストの自動生成能力と開発効率の向上度を体験し、Copilotの導入効果を定性的・定量的に把握する。

 実施環境


OS：Windows 11


エディタ：Visual Studio Code (v1.89)


拡張機能：

Python
GitHub Copilot



言語：Python 3.11


テストツール：unittest



 テスト対象コード
# src/my_module.py
def add(a: int, b: int) -&gt; int:
    r...]]></description><link>https://zenn.dev/homatsu_tech/articles/f41f1b9c5c3dae</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/f41f1b9c5c3dae</guid><pubDate>Wed, 14 May 2025 09:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6CyRqQmy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Copilot%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%25AE%25E4%25BD%2593%25E9%25A8%2593%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[生成モデルを実装してみる ~拡散モデル実装までの道のり~(VAE編)]]></title><description><![CDATA[
 概要
拡散モデル(diffusion model)という単語を何かで見かけたけど、なにそれわからん。ってなったので実装して拡散モデルについてざっくり理解しようと思い色路調べたのでその備忘録になります。
データを生成するタイプのモデルだったので、クラシックなVAE、GAN、も実装して歴史を辿りながらdiffusion modelの実装を行おうと思います。
本記事では、その第1歩として VAE（Variational Autoencoder） を取り上げます。

VAE &lt;-イマココ
GAN
Diffusion Model


 目次

概要
目次
VAEとは

モデル構造

En...]]></description><link>https://zenn.dev/knee_kakkun/articles/vae_ngaopisejfpoaijgaerj124ml</link><guid isPermaLink="true">https://zenn.dev/knee_kakkun/articles/vae_ngaopisejfpoaijgaerj124ml</guid><pubDate>Wed, 14 May 2025 07:24:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nft4_UoT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%259F%25E6%2588%2590%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520%7E%25E6%258B%25A1%25E6%2595%25A3%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E9%2581%2593%25E3%2581%25AE%25E3%2582%258A%7E%2528VAE%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knee_kakkun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYjliNWNhYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knee_kakkun</dc:creator></item><item><title><![CDATA[「y_hat」の意味と使い方：機械学習・統計モデリングにおける命名の基礎]]></title><description><![CDATA[Pythonなどのコードを読んでいると、y_hat や theta_hat といった変数名を目にすることがあります。この「_hat」という接尾辞には、単なる命名の癖以上の意味が込められています。
本記事では、統計・機械学習における「_hat」の由来とその使い方について、数学的背景から解説します。


 1. 数学における「hat（ハット）」の意味
もともと「hat（帽子）」という言葉は、数学や統計学において「推定値」や「予測値」を示す**記号（ˆ）**として使われてきました。
特に統計学の推定理論（Estimation Theory）では、真の母数や関数に対して、それをデータから推定した...]]></description><link>https://zenn.dev/kotai/articles/bc0ef81b8ad060</link><guid isPermaLink="true">https://zenn.dev/kotai/articles/bc0ef81b8ad060</guid><pubDate>Wed, 14 May 2025 03:37:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8lOjepHq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258Cy_hat%25E3%2580%258D%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25EF%25BC%259A%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25BB%25E7%25B5%25B1%25E8%25A8%2588%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E5%2591%25BD%25E5%2590%258D%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kotai2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gzSEtteFhtSDhmSkd3aDV3cVYtY2tvbVB1NE1rbTN4bWhQRmE2eGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kotai2003</dc:creator></item><item><title><![CDATA[負荷テスト｜Locust with Minikube]]></title><description><![CDATA[
 概要
この記事ではMinikubeで動く単一のクラスタ上に、Python負荷検証ツールLocustを複数構築する。テスト対象サーバに対して、複数のLocustから一斉に負荷をかけられるようになるまでの環境構築手順を記す。
この内容は次リポジトリでも確認可能である：
https://github.com/inuverse44/locust-with-minikube

 導入と背景（読み飛ばしてOK）
GKE上に存在するサービスの負荷検証をLocustで実施しておりました。対象サービスに対してAPIを実行しまくって、パルス状の負荷をかけた時に、設定通りにpodが増加してくれるかどうかを...]]></description><link>https://zenn.dev/tatsukikodama/articles/34abd263427902</link><guid isPermaLink="true">https://zenn.dev/tatsukikodama/articles/34abd263427902</guid><pubDate>Wed, 14 May 2025 01:34:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ALZ3fsuy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25EF%25BD%259CLocust%2520with%2520Minikube%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:INUVERSE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMzBhMjAyNzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>INUVERSE</dc:creator></item><item><title><![CDATA[【PyTorch】モデルの中間層の出力を取得する「Hook」の使い方：ResNetでの具体例付き]]></title><description><![CDATA[PyTorchで深層学習モデルの**中間層の出力（特徴量）**を取得したいとき、モデル構造を壊さずにアクセスできるのが「Hook（フック）」です。
この記事では、WideResNet50 を例にとって、forward_hook を使って中間特徴マップを抽出する方法を、実用コードとともに解説します。

 0.Hookとは？なぜ使うのか？
PyTorchの Hook（フック） とは、モデルの 特定の層の順伝播や逆伝播のタイミングで、入力や出力にアクセスできる仕組み です。とくに forward_hook を使うと、「順伝播（forward）」の 出力 をキャッチできます。

 フックが活躍す...]]></description><link>https://zenn.dev/kotai/articles/91bca72e931da0</link><guid isPermaLink="true">https://zenn.dev/kotai/articles/91bca72e931da0</guid><pubDate>Tue, 13 May 2025 17:14:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hwyo8vK2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590PyTorch%25E3%2580%2591%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E4%25B8%25AD%25E9%2596%2593%25E5%25B1%25A4%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2580%258CHook%25E3%2580%258D%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25EF%25BC%259AResNet%25E3%2581%25A7%25E3%2581%25AE%25E5%2585%25B7%25E4%25BD%2593%25E4%25BE%258B%25E4%25BB%2598%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kotai2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gzSEtteFhtSDhmSkd3aDV3cVYtY2tvbVB1NE1rbTN4bWhQRmE2eGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kotai2003</dc:creator></item><item><title><![CDATA[FastMCP 2.0を用いてHTTP RequestからHTTP headerやquery parameterを簡単に取得する方法]]></title><description><![CDATA[本記事では、FastMCP 2.0を用いて、MCP Client(Streamable HTTP)のHTTP RequestからHTTP HeaderやQuery Parameterを取得する方法を紹介します。

 背景
筆者は、MCPを使用したサービスの開発を進める中で、MCPサーバ上でHTTPヘッダーやクエリーパラメータを取得する必要が生じました。
そのため、FastMCPを用いてMCP Client(Streamable HTTP)のHTTP RequestからHTTP Headerを取得する方法を調査しました。
MCPのorganizationから提供されているPython SD...]]></description><link>https://zenn.dev/5enxia/articles/10b6fb06be1dc0</link><guid isPermaLink="true">https://zenn.dev/5enxia/articles/10b6fb06be1dc0</guid><pubDate>Tue, 13 May 2025 15:11:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I6Ukcy2x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastMCP%25202.0%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6HTTP%2520Request%25E3%2581%258B%25E3%2582%2589HTTP%2520header%25E3%2582%2584query%2520parameter%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:5enxia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlMDI3NjY3MmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>5enxia</dc:creator></item><item><title><![CDATA[手を動かして学ぶ！MCPステップバイステップ実践ガイド for Beginners - Vol.3 requestsで作るMCPクライアント]]></title><description><![CDATA[
 1. はじめに: サーバーの次は「クライアント」の出番です！
皆さん、こんにちは！「手を動かして学ぶ！MCPステップバイステップ実践ガイド for Beginners」へようこそ！シリーズ第3回目となりました。
前回のVol.2では、PythonのFlaskライブラリを使って、皆さんの手で初めての「MCPサーバー」の原型を作成し、実際に起動するところまでを体験しましたね。http://127.0.0.1:5000/ にブラウザでアクセスすると、自分で作ったサーバーから「Hello, MCP Server from Flask!」というメッセージが返ってくるのを確認できたでしょうか？ ...]]></description><link>https://zenn.dev/querypie/articles/0e44d3ed9e41af</link><guid isPermaLink="true">https://zenn.dev/querypie/articles/0e44d3ed9e41af</guid><pubDate>Tue, 13 May 2025 14:22:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--liKm-3wd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2589%258B%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581MCP%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E5%25AE%259F%25E8%25B7%25B5%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2520for%2520Beginners%2520-%2520Vol.3%2520request...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:QueryPie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MzUyMzdkYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>QueryPie</dc:creator></item><item><title><![CDATA[モデルの推論・学習時間を評価する（PyTorch, profiler）]]></title><description><![CDATA[
 なんか学習時間長くないか？？？
って思う瞬間、ありますよね。私は研究を進めていて、結構この悩みがあります。学習待ってる時間って虚無過ぎませんか？
どこが長くなっているのか特定するために、start = time.time()とend = time.time()で処理を挟んで、print(end - start)って書いて、処理ごとに同じことを繰り返して…
やってられません。しかも、これはCPUの実行待ちの間もどんどん計測されてしまって精度もよくないし、得られる情報が少なすぎます。
そこで、今回はPyTorchに用意されているtorch.profilerを使って詳細にモデルのボトルネッ...]]></description><link>https://zenn.dev/kita_no_in/articles/0b1bcc759c10c3</link><guid isPermaLink="true">https://zenn.dev/kita_no_in/articles/0b1bcc759c10c3</guid><pubDate>Tue, 13 May 2025 13:05:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XVOb88b4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E6%258E%25A8%25E8%25AB%2596%25E3%2583%25BB%25E5%25AD%25A6%25E7%25BF%2592%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588PyTorch%252C%2520profiler%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25A5%25A5%25E3%2581%25AE%25E9%2599%25A2%25E7%2594%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmYTRkMjk4ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>奥の院生</dc:creator></item><item><title><![CDATA[uv + maturin + PyO3でRustをPythonから呼ぶ]]></title><description><![CDATA[PyO3/maturin は、Rust コードを Python から使えるようにバインディングを生成し、Pythonパッケージとしてビルド・配布するためのツールチェインです。
この記事では、maturin を用いて Rust ライブラリを Python から使用し、更に Rust 実装に基づき Python の型定義ファイル(.pyi)を自動生成したり、独自の Python 実装部分を記述する方法について説明します。

 準備
Python のモダンなパッケージマネージャである uv をインストールします。既にインストール済みの方は飛ばしてください。
他のパッケージマネージャを使いたいと...]]></description><link>https://zenn.dev/nahco3/articles/519560fe186cb0</link><guid isPermaLink="true">https://zenn.dev/nahco3/articles/519560fe186cb0</guid><pubDate>Tue, 13 May 2025 12:07:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bmfO1Dlr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%2520%252B%2520maturin%2520%252B%2520PyO3%25E3%2581%25A7Rust%25E3%2582%2592Python%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nahco314%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3ZmRiZWNiNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nahco314</dc:creator></item><item><title><![CDATA[kaggleコミュニティコンペ開催報告と上位解法]]></title><description><![CDATA[
 この記事は何？
Kaggle Competitions MasterのRyushiです！
2025/5/10に同じくKaggle Masterのyukiさんとコンペを主催しましたので、そのまとめ記事です。

 コンペ概要

 1. コンペ内容
与えられた写真がどの国で撮影されたかを分類するコンペを開催しました。
分類対象の国は以下の5つです。

日本
アメリカ
イギリス
ブラジル
オーストラリア


 2. データセット

 CSVファイル


train.csv / test.csv
画像と紐づくID、撮影月、正解ラベルが含まれています。
train.csvのみ、写真が撮影された緯...]]></description><link>https://zenn.dev/ryushi496/articles/6213f94a4c7f29</link><guid isPermaLink="true">https://zenn.dev/ryushi496/articles/6213f94a4c7f29</guid><pubDate>Tue, 13 May 2025 10:16:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8lOZ_1Dx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kaggle%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E9%2596%258B%25E5%2582%25AC%25E5%25A0%25B1%25E5%2591%258A%25E3%2581%25A8%25E4%25B8%258A%25E4%25BD%258D%25E8%25A7%25A3%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryushi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNDdmZmFlY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryushi</dc:creator></item><item><title><![CDATA[【失敗談】Gemini 2.0 APIでグーグル検索によるグラウンディング機能を使おうとして2日間潰した話]]></title><description><![CDATA[
 結論を3行で

Gemini APIに検索させると、Brave APIでURLを取得してスクレイピングするよりも早くて便利らしいと知る
公式のサンプルはGemini 1.5 モデル用。2.0以降のやり方を探すのに2日間かかる
解決した後に親切な方がnoteに書いてるのを知って力抜ける

最初にそのnoteの記事も紹介しておきます。
https://note.com/masa_kazama/n/n8eff1a4be1da

 事の経緯
ある時、Xで「Brave APIを使うよりもGeminiに検索させた方が速くて便利」って話を見かけて、自分でもやってみたくなった、というのがすべてです。...]]></description><link>https://zenn.dev/mirai_asset/articles/2d813cec0e63fa</link><guid isPermaLink="true">https://zenn.dev/mirai_asset/articles/2d813cec0e63fa</guid><pubDate>Tue, 13 May 2025 06:27:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1MojTUYH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25AB%2587%25E3%2580%2591Gemini%25202.0%2520API%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A62%25E6%2597%25A5%25E9%2596%2593%25E6%25BD%25B0%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2589%25E3%2581%2584%25E3%2582%2588%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGtpS2J0RDdlbUJiaWVnaEMxV1RWVkQ4NmxtS0lEajB5UFl5bVVIRnp0MkkwTDZOR3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みらいよたろう</dc:creator></item></channel></rss>