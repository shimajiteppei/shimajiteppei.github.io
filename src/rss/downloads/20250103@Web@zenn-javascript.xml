<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 03 Jan 2025 09:52:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[fullPage.jsで水平スライドを自動再生する方法]]></title><description><![CDATA[
 はじめに &amp; 初期デモ
この記事では、ページ上の1つまたは複数の水平スライダーを自動でアニメーションさせる設定を、fullPage.jsでどのように行うかを解説します。
説明を飛ばして例をすぐに見たい方はこちらのコードペンをご覧ください：
こちらのコードペンでデモを確認できます。


 チュートリアル
デモの動作を理解したい方のために説明を始めます。

 a) afterLoad コールバック
ここでは、afterLoadコールバックを使用します。このコールバックに記述した内容は、垂直セクション間を移動するたびに実行されます。詳細はfullPage.jsドキュメントに記載され...]]></description><link>https://zenn.dev/alvarotrigo/articles/9f18b42fbb41e7</link><guid isPermaLink="true">https://zenn.dev/alvarotrigo/articles/9f18b42fbb41e7</guid><pubDate>Fri, 03 Jan 2025 09:37:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RiML67Jm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fullPage.js%25E3%2581%25A7%25E6%25B0%25B4%25E5%25B9%25B3%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%2586%258D%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Alvaro%2520Trigo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZTc5MDBkNTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Alvaro Trigo</dc:creator></item><item><title><![CDATA[TypeScript で Web 開発をする際の候補メモ]]></title><description><![CDATA[
 概要
以前のプロジェクトで使っていたり、進行中に差し替えまでは出来ないけど次使うならこれを使おうと思っていたライブラリやツールなどが、いざ新しくプロジェクトを作ろうと初期構築を始めたら色々と失念している事ってよくありませんか？
最近実際それがあり、個別のページにわかれて技術メモはとってあったりするのですが探しながらは手間なのとブクマしただけのものもあるので、インデックス的に手軽に気になった技術をメモっておく見ながら構築したり技術選定の前段階に使うようなノートを作ったので誰かのお役に立つかもと公開してみます。
気軽に雑にメモるのを前提に作ったものをそのまま公開しているので文体等は統一さ...]]></description><link>https://zenn.dev/akineko/articles/f611a806947c96</link><guid isPermaLink="true">https://zenn.dev/akineko/articles/f611a806947c96</guid><pubDate>Fri, 03 Jan 2025 02:29:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qMA5PFr4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520Web%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2580%2599%25E8%25A3%259C%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akineko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3MWFkNDUwODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akineko</dc:creator></item><item><title><![CDATA[contentful.jsのv10から登場した2つのクライアントチェーン修飾子について解説]]></title><description><![CDATA[
 この記事で解説すること

contentful.jsを使ったエントリーの取得
contetful.jsでフィールドにReferencesのあるエントリーを取得したときの動作
クライアントチェーン修飾子のwithoutLinkResolutionとwithoutUnresolvableLinksについて解説


 contentful.jsを使ったエントリーの取得
contentful.jsはCDA(Content Delivery API) と CPA(Content Preview API)を利用するためのjavascriptのクライアントライブラリです。
このライブラリを使用する...]]></description><link>https://zenn.dev/nagatsukey/articles/8c6f451f9b82a0</link><guid isPermaLink="true">https://zenn.dev/nagatsukey/articles/8c6f451f9b82a0</guid><pubDate>Thu, 02 Jan 2025 18:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GtlmQzkr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:contentful.js%25E3%2581%25AEv10%25E3%2581%258B%25E3%2582%2589%25E7%2599%25BB%25E5%25A0%25B4%25E3%2581%2597%25E3%2581%259F2%25E3%2581%25A4%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%25E4%25BF%25AE%25E9%25A3%25BE%25E5%25AD%2590%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nagatsukey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p4NmpCYnVoYjA5VHFhcGdzTUpmeXM0bXp0YmktdTNPRFo4VlgyPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nagatsukey</dc:creator></item><item><title><![CDATA[英語学習サイト ✏️eigopencil.com をリリースしました。]]></title><description><![CDATA[
 アプリケーションの説明
eigopencil.comは、英語のライティングができるスペースを提供します。

 なぜこれを作ったか
自分の英語力向上のために開発しました。

 サイトURL,README
https://eigopencil.com/question
https://github.com/KazumaWada/eigopencil#eigopencilcom

 使用技術
フロントエンド: HTML/CSS/Tailwind CSS
バックエンド: Ruby on Rails
データベース: PostgreSQL
インフラ: Docker
デプロイに使用したソフトウェア...]]></description><link>https://zenn.dev/kazumawada/articles/3ffb67eb690290</link><guid isPermaLink="true">https://zenn.dev/kazumawada/articles/3ffb67eb690290</guid><pubDate>Thu, 02 Jan 2025 10:36:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YYekFRjU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%258B%25B1%25E8%25AA%259E%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%2520%2520eigopencil.com%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AB%25E3%2582%25BA%25E3%2583%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4NzZiNmIwYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>カズマ</dc:creator></item><item><title><![CDATA[console.logについて理解していますか？]]></title><description><![CDATA[
 はじめに
console.log()を使っていますか？
コンソールデバッグをしない派の人もまったく使わないことはないでしょう。
https://developer.mozilla.org/ja/docs/Web/API/console/log_static
// 文字列を渡すと表示される
console.log("Hello, world!"); // Hello, world
わかりやすいですね。
// オブジェクトも表示する
console.log({ name: "Taro" }); // { name: 'Taro' }
オブジェクトも表示します。
では、これはどう表示される...]]></description><link>https://zenn.dev/ncdc/articles/you-dont-know-console-log</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/you-dont-know-console-log</guid><pubDate>Thu, 02 Jan 2025 09:00:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sXUt8AZZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:console.log%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ratmie%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvci5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ratmie</dc:creator></item><item><title><![CDATA[setInterval() の引数にアロー関数を使う【個人学習まとめ】]]></title><description><![CDATA[
 setInterval()って？
構文
setInterval(関数,待ち時間);
第一引数に待ち時間(ミリ秒)が経過するたびに実行する関数本体を指定する。
第二引数に待ち時間を指定する(省略可。省略した場合は0になる)。
!
ここからはLeetCodeの「2725. Interval Cancellation」の回答中にやらかしたことをもとに書きます。
fn: 問題から与えられた関数
args: 問題から与えられた配列
t: インターバル時間


 間違い例
実際に自分がやらかしたコード。
setInterval(fn(...args),t);
このように書くと、fnが即座に実行さ...]]></description><link>https://zenn.dev/o0rororo0o/articles/b52b1042301f2b</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/b52b1042301f2b</guid><pubDate>Thu, 02 Jan 2025 05:52:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wc4hfx3S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:setInterval%2528%2529%2520%25E3%2581%25AE%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%25AD%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[[神機能]React Compilerに触れてみた]]></title><description><![CDATA[
 React Compilerとは
React Compilerは、Metaが開発した新しいコンパイラで、ビルド時のみに実行されるツールであり、Reactアプリを自動的に最適化してくれます。
https://ja.react.dev/learn/react-compiler

 React Compilerの特徴
React Compilerの一番大きな機能としては、useMemoやuseCallback、React.memoを使わずとも、パフォーマンスの最適化をしてくれる機能かと思います。
メモ化は適用し忘れたり、誤って適用したりしてしまうことも多いので、その部分を意識しなくていいと...]]></description><link>https://zenn.dev/ryohei0509/articles/43aee8aa41f65f</link><guid isPermaLink="true">https://zenn.dev/ryohei0509/articles/43aee8aa41f65f</guid><pubDate>Wed, 01 Jan 2025 08:48:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b_65rqAk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25A5%259E%25E6%25A9%259F%25E8%2583%25BD%255DReact%2520Compiler%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hukuryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2JhYWM4YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hukuryo</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#１２ GSAP Sample３ Drower Menu Animation２】]]></title><description><![CDATA[
 【#１２ GSAP Sample３ Drower Menu Animation２】
YouTube: https://youtu.be/KhjZQdOJpn8
https://youtu.be/KhjZQdOJpn8
今回も引き続きGSAPを使用して、
ドロワーメニューを作成していきます。
今回は、JSの部分を実装します。
まずは、CSSを変更して、
メニューを閉じた状態にします。

css/main.css
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
html,
body {
  width: 100%;
 ...]]></description><link>https://zenn.dev/web_life_ch/articles/9c36d71969b832</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/9c36d71969b832</guid><pubDate>Wed, 01 Jan 2025 06:08:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8cAoGKUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2591%25EF%25BC%2592%2520GSAP%2520Sample%25EF%25BC%2593%2520Drower%2520Menu%2520Animation%25EF%25BC%2592%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[Leafletで位置情報の現在地をマーカーで常時更新してみた]]></title><description><![CDATA[Leafletのプラグイン「UserMarker」使用と「navigator.geolocation.watchPosition」使って、位置情報の現在地をマーカーで常時更新してみました。
実装すると以下のようになります。


 まずは全体のコード
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
&lt;meta name="viewport" ...]]></description><link>https://zenn.dev/ausssxi/articles/4fa3311a1a6f6a</link><guid isPermaLink="true">https://zenn.dev/ausssxi/articles/4fa3311a1a6f6a</guid><pubDate>Wed, 01 Jan 2025 00:43:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z_RvVifx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Leaflet%25E3%2581%25A7%25E4%25BD%258D%25E7%25BD%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%25AE%25E7%258F%25BE%25E5%259C%25A8%25E5%259C%25B0%25E3%2582%2592%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25A7%25E5%25B8%25B8%25E6%2599%2582%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2586%2585%25E7%2594%25B0%25E5%258E%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjNDgzNzUzOWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>内田厚</dc:creator></item><item><title><![CDATA[初心者向け Service Worker 完全ガイド]]></title><description><![CDATA[
 Service Workerとは？
Service Workerは、Webブラウザのバックグラウンドで動作するJavaScriptファイルで、オフライン対応やプッシュ通知など、より優れたユーザー体験を実現するための機能を提供します。
簡単に言うと：

ブラウザとネットワークの間に立つ「仲介役」
Webページとは別のスレッドで動作する「裏方さん」
アプリのような機能を実現する「魔法使い」


 なぜService Workerが必要？


オフライン対応: インターネット接続がない時でもアプリを使用可能に

高速な読み込み: キャッシュを活用して表示速度を改善

プッシュ通知: ユーザ...]]></description><link>https://zenn.dev/susumomo/articles/3c122bda0781ab</link><guid isPermaLink="true">https://zenn.dev/susumomo/articles/3c122bda0781ab</guid><pubDate>Tue, 31 Dec 2024 14:57:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--36PxgUC_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2520Service%2520Worker%2520%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiOTdhN2MwZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>momo</dc:creator></item><item><title><![CDATA[toggle する カスタムコンポーネントを作成してみよう！]]></title><description><![CDATA[皆様、 &lt;input type=checkbox /&gt; を使っておられますでしょうか？

 &lt;input type="checkbox" /&gt; とは
HTMLInputElement の type=checkbox は name が設定されており、 checked の時だけ value が FormData に設定される コントロールです。
よく css で :checked を使って toggle の再現をされているところを見ますが、 いっそのこと カスタムコンポーネントとして作り直して見ましょうというのが今回の 取り組みです。

 カスタムコンポーネントと F...]]></description><link>https://zenn.dev/juners/articles/2159c3b0411bf6</link><guid isPermaLink="true">https://zenn.dev/juners/articles/2159c3b0411bf6</guid><pubDate>Tue, 31 Dec 2024 13:57:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---0tF0O5F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:toggle%2520%25E3%2581%2599%25E3%2582%258B%2520%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[Google Cloud Functions Emulator使ってみる]]></title><description><![CDATA[Google Cloud Functionsのemulatorがあるらしいので使ってみます
https://github.com/GoogleCloudPlatform/cloud-functions-emulator
 $ npm install -g @google-cloud/functions-emulator
関数の作成・デプロイ

index.js
exports.helloWorld = function(req, res) {
    console.log(req.body);
    res.status(200).send("hello world");
}

エミ...]]></description><link>https://zenn.dev/shikazuki/articles/7f807a2b66046dc6a15c</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/7f807a2b66046dc6a15c</guid><pubDate>Tue, 31 Dec 2024 13:05:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z9Mcv2M3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Cloud%2520Functions%2520Emulator%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[Vue.jsでお手製RangeSlider]]></title><description><![CDATA[
 完成形
それっぽいものを作ってみました。


 なぜ実装しようと思ったか
私は普段はReactを使っています。ReactでもComponent外のマウス操作で画面を更新したいときがあります。そんなときはbodyなどに対してaddEventListenerによるイベントを設定し、refを用いてDOMからleftやwidthを取得してstateを更新することがあります。
Vue.jsではどんな感じかなーということでやってみました。

 実装
&lt;template&gt;
  &lt;div class="range_slider" :style="{width: width + 'p...]]></description><link>https://zenn.dev/shikazuki/articles/f035167df64f74036856</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/f035167df64f74036856</guid><pubDate>Tue, 31 Dec 2024 13:03:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8hkK4q86--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue.js%25E3%2581%25A7%25E3%2581%258A%25E6%2589%258B%25E8%25A3%25BDRangeSlider%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[色を透過させたときのカラーコードをJSで求める]]></title><description><![CDATA[
 経緯
色を一定値で薄くしたくて単にrgbaの指定で薄くすると、当然の如く透過しており背景がうっすら見えてしまいます。
薄い色を指定すれば済むかもしれませんが、javascriptで計算してみました。

 アルファブレンド
2つの画像を重ねたときの重なっている箇所の色を求めるものです。
透過させている赤と青を重ねると紫になりますが、この紫のカラーコードを求めるようなものと思っております。(詳しくないです。)
式的には以下になります。
out_{rgb} = src_{rgb} * alpha_{src} + dest_{rgb} * (1 - alpha_{src})
今回はこれをより...]]></description><link>https://zenn.dev/shikazuki/articles/6c5386791b34d6194da7</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/6c5386791b34d6194da7</guid><pubDate>Tue, 31 Dec 2024 13:03:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mBpPn3c4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2589%25B2%25E3%2582%2592%25E9%2580%258F%25E9%2581%258E%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592JS%25E3%2581%25A7%25E6%25B1%2582%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[Draft.jsのデータ保存について]]></title><description><![CDATA[
 概要
Reactの復習ついでに、Draft.jsを使っていたら躓いたのでメモ。
Draft.js自体はReactで作られたリッチエディタフレームワークです。(https://github.com/facebook/draft-js)

 やりたいこと

エディタで編集した内容をファイルに保存すること
ファイルに保存したデータからエディタの状態を復元すること

Editor自体の実装は以下のようにしておきます。
Electronを使って実装をしていたので、fsでファイルの保存・読み込みを行います。

Editor.js
import React, {Component} from 'r...]]></description><link>https://zenn.dev/shikazuki/articles/1db87a945e2bbb99505b</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/1db87a945e2bbb99505b</guid><pubDate>Tue, 31 Dec 2024 13:03:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l-KDAfOH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Draft.js%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[React Reduxには今後Redux Toolkitも使うのがいいと思う]]></title><description><![CDATA[ReactをTypeScriptで始めることが随分楽になったと感じています。Create React Appの以下のコマンドでOKです。
$ npx create-react-app my-app --template typescript
https://create-react-app.dev/docs/adding-typescript/#installation
2020年2月の中頃からReduxのテンプレートが利用可能となり、以下のコマンドで始めることができます。
$ npx create-react-app my-app --template redux
# or 
$ np...]]></description><link>https://zenn.dev/shikazuki/articles/02fb27dc741cbff18811</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/02fb27dc741cbff18811</guid><pubDate>Tue, 31 Dec 2024 13:03:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VtT1pBYY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Redux%25E3%2581%25AB%25E3%2581%25AF%25E4%25BB%258A%25E5%25BE%258CRedux%2520Toolkit%25E3%2582%2582%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2581%258C%25E3%2581%2584%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[prettierを使って過去のコミットをすべてフォーマットする]]></title><description><![CDATA[
 困ったことに
古い古い自社ライブラリのお話です。はじめのコードはインデントが4で作成されていました。後から入ってきた私はJavaScriptのファイルのインデントは2と聞かされておりましたので、IDEの設定で2にしておいたのです。
古いライブラリなので改修の頻度は少ないですが、新規の機能を作成しました。新しく作成されたファイルはインデントが2で書かれました。気づかないレビュー者。見かねてEslintを入れてくれました。EditorConfigも入れてくれました。EslintとEditorConfigでインデントが食い違っています。2なのか4なのか、混乱するIDE。私は悲しみました。
...]]></description><link>https://zenn.dev/shikazuki/articles/388b8d9efccc4afef747</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/388b8d9efccc4afef747</guid><pubDate>Tue, 31 Dec 2024 12:57:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DHdRklGx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prettier%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2581%258E%25E5%258E%25BB%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259F%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2581%25B9%25E3%2581%25A6%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[BitbucketのJavaScriptプロジェクトをビルドしてS3にデプロイする]]></title><description><![CDATA[React.jsなどのSPAアプリケーションをBitbucket Pipelineを使ってS3にデプロイします。割とBitbucketが好きです。

 用意

 S3へのデプロイIAMユーザーを作成
IAM &gt; ユーザー &gt; 認証情報 &gt; アクセスキー からアクセスキーを作成し、アクセスキーIDとシークレットアクセスキーをメモしておきましょう。ここではs3-deploy-userとしておきます。

 S3のバケットを作成
なんでも良いです。ここではdeploy-bucketとしておきます。
バケットポリシーを設定し、s3-deploy-userでbucketを更新できる...]]></description><link>https://zenn.dev/shikazuki/articles/109b78e8d14a2e4269d4</link><guid isPermaLink="true">https://zenn.dev/shikazuki/articles/109b78e8d14a2e4269d4</guid><pubDate>Tue, 31 Dec 2024 12:57:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JM9GgZHk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bitbucket%25E3%2581%25AEJavaScript%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6S3%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shikazuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlZDgyOGI0ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shikazuki</dc:creator></item><item><title><![CDATA[React19を触る前にReactの進化をおさらい！Todoリストを作って変遷を体験してみた]]></title><description><![CDATA[
 最初に
2024年12月5日にReact19の安定版がリリースされるなど、Reactはさまざまな進化をしてきています。
今回はTodoリストアプリを作成していき、それをおさらいしていきます。

 この記事でやること
さまざまなversionのReactで同じアプリを作成していき、Reactの進化を体験していきます。

 React15
使いやすさ: ★★☆☆☆
メリット: ★★★☆☆

 アプリ作成

 react15インストール
npm install react@15 react-dom@15

 コード
クラスコンポーネントで書き、this.stateでの状態管理とthis.s...]]></description><link>https://zenn.dev/daiju81/articles/227934f5c16038</link><guid isPermaLink="true">https://zenn.dev/daiju81/articles/227934f5c16038</guid><pubDate>Tue, 31 Dec 2024 12:34:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0Da7GpRd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2582%2592%25E8%25A7%25A6%25E3%2582%258B%25E5%2589%258D%25E3%2581%25ABReact%25E3%2581%25AE%25E9%2580%25B2%25E5%258C%2596%25E3%2582%2592%25E3%2581%258A%25E3%2581%2595%25E3%2582%2589%25E3%2581%2584%25EF%25BC%2581Todo%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%25A4%2589%25E9%2581%25B7%25E3%2582%2592%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daiju%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyZjdiNGU0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daiju</dc:creator></item><item><title><![CDATA[es6-promiseをコードリーディングしてPromiseの挙動を理解する]]></title><description><![CDATA[
 最初に
es6-promiseはPromiseの基本的な仕組みを自前で実装して、以前のJavaScriptでも動くようになっています。
es6-promiseのコードから主要な部分をコードリーディングしてPromiseの仕組みを理解していきます。
https://github.com/stefanpenner/es6-promise

 コードの理解

 状態管理
Promiseは下記のように3つの状態を管理しています。
早期returnをして、Promiseの状態がpendingの時だけ状態を変化するようにしています。

PENDING: undefined(初期状態)
FUFIL...]]></description><link>https://zenn.dev/daiju81/articles/f904c16384a02e</link><guid isPermaLink="true">https://zenn.dev/daiju81/articles/f904c16384a02e</guid><pubDate>Tue, 31 Dec 2024 12:29:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RBfQHNsu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:es6-promise%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6Promise%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daiju%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyZjdiNGU0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daiju</dc:creator></item></channel></rss>