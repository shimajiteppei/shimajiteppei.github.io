<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 03 Nov 2024 10:50:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【再表現シリーズ】イラストを文字列で再表現]]></title><description><![CDATA[
 背景
最近、「身の回りのものにある関数を通したら、別の表現ができるんじゃないか？」と考えつきました。ある関数＝アルゴリズムです。
個人的には、汎用性もあるし、割と面白い考えだと思っています。
それではやっていきましょう。何卒何卒。

 イラスト→文字列
イラスト全体を文字列のみで再表現します。イラストの各ピクセルを文字列に置き換えるようなイメージです。
元の画像はこちら。ずとまよさんの「綺羅キラー」サムネです。

!
「ずっと真夜中でいいのに。」の著作権はとてもおおらかなので画像使わせてもらってます。
異議申し立てがある場合は、すぐに画像の削除処理をさせていただきます。

https...]]></description><link>https://zenn.dev/chanpaya/articles/bf910937b119a0</link><guid isPermaLink="true">https://zenn.dev/chanpaya/articles/bf910937b119a0</guid><pubDate>Sun, 03 Nov 2024 10:38:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hvzVtoET--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2586%258D%25E8%25A1%25A8%25E7%258F%25BE%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2580%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25A7%25E5%2586%258D%25E8%25A1%25A8%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chanpaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FmYmY1NGIxMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chanpaya</dc:creator></item><item><title><![CDATA[ExcelからCloudFormationテンプレートを生成]]></title><description><![CDATA[
 概要
AWS EC2構築用のExcelパラメータシートをPythonでCloudFormationテンプレートに変換する方法について紹介します

 使用するPythonライブラリ


Jinja
変数やif、for文を使用して、HTMLやYAMLなどのファイルを動的に生成可能
日本語の変数名が使用可能

OpenPyXL
Excelファイルの読み書きが可能
名前の定義 機能を使用


 例
元のExcelパラメータシート

Jinjaテンプレート

if文

EBSのIOPSは、gp2の場合は指定できず、gp3の場合に指定可能です


for文

Tagの数は可変であるため、動的に処...]]></description><link>https://zenn.dev/metalmental/articles/20241103_jinja-cloudformation</link><guid isPermaLink="true">https://zenn.dev/metalmental/articles/20241103_jinja-cloudformation</guid><pubDate>Sun, 03 Nov 2024 08:40:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dJa3w4Kt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2581%258B%25E3%2582%2589CloudFormation%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:metalmental%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzJYbHgtVTZpT1J6VWI0WVZiYjlTUWNoa1FMRzZnalktdmFiZl9YYjJocHd3dk01NHY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>metalmental</dc:creator></item><item><title><![CDATA[poetryで始めるLangGraphセットアップ]]></title><description><![CDATA[
 このセクションで説明しないこと

pythonやpoetryなどのインストールの仕方
ディレクトリや作業箇所の作成の仕方
エディタのインストールなど
セットアップ後の実装
など。
この記事では、セットアップのみになります。


 用意するもの

エディタ

VSCode, Cursor, PyCharmなど




 poetry初期化
まずは、作業ディレクトリで、poetryを初期化しましょう。

poetryを初期化

poetry init

設定

Package name [02]:  任意
Version [0.1.0]:
Description []:
Author [...]]></description><link>https://zenn.dev/o_kai/articles/43c6d0d5c04138</link><guid isPermaLink="true">https://zenn.dev/o_kai/articles/43c6d0d5c04138</guid><pubDate>Sun, 03 Nov 2024 08:26:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Qkfc-Z8g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:poetry%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BLangGraph%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:o_kai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNTk5NDA1MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>o_kai</dc:creator></item><item><title><![CDATA[【python】zeroxのAI OCR試してみる！]]></title><description><![CDATA[
 はじめに
以下のGithubリポジトリで公開されているzeroxというライブラリにより、マルチモーダルLLMを活用したOCRができるとのことで試してみました。
https://github.com/getomni-ai/zerox
python×streamlitでpdfファイルをアップロードして、テキスト化するまでをこの記事では説明します。
ライブラリについて、隅々まで把握したわけではないですが、自分が調べてわかった内容などをまとめますので、同じライブラリを活用して、資料をテキスト化したい方の参考になれば幸いです。
!
情報は2024年11月3日時点での情報です。最新の情報は公式の...]]></description><link>https://zenn.dev/peishim/articles/13e92f1682551d</link><guid isPermaLink="true">https://zenn.dev/peishim/articles/13e92f1682551d</guid><pubDate>Sun, 03 Nov 2024 07:57:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0AnrNaPG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590python%25E3%2580%2591zerox%25E3%2581%25AEAI%2520OCR%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:peishim%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNmIxNjYxMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>peishim</dc:creator></item><item><title><![CDATA[設定ファイル内容を一元管理できる! pyconfviewer]]></title><description><![CDATA[
 はじめに
色々自分で作っているとどのプログラミング言語でもアプリケーションを作る場合に .env なども含め様々な設定ファイルが必要になると思います。
これが1つのファイルで済むなら管理も簡単なのですが、複数ファイルにまたがると設定を一括で見れるものはないな.. なんて思うことがあります。
できれば、開発用と本番用で設定ファイルは同じだけど、中身が違うのでその差分も見たいな... なんて思うこともありました。
それを解決するために設定ファイルの内容を HTML に出力し、閲覧できる Python ライブラリを作成しました。
それが pyconfviewer です!

 pyconfv...]]></description><link>https://zenn.dev/apo_space81/articles/99134d65b83029</link><guid isPermaLink="true">https://zenn.dev/apo_space81/articles/99134d65b83029</guid><pubDate>Sun, 03 Nov 2024 02:34:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iuwfjzYV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E4%25B8%2580%25E5%2585%2583%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2521%2520pyconfviewer%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pkaiy81%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puOVNTNmxJd0xqNGpXclgzWlEyTHhIMUJBWE16Z1duRFJNcGRLeXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pkaiy81</dc:creator></item><item><title><![CDATA[参考記事を元に、Python実行環境Anacondaをインストールしてみた。]]></title><description><![CDATA[
 参考記事を元にPython実行環境Anacondaをインストールしてみた。

以下、参考にしたサイト
https://www.javadrive.jp/python/install/index5.html#section1
Anaconda は Python 自身と Python でよく利用される NumPy や Jupyter といったライブラリをまとめてインストールしてくれるディストリビューション(必要なソフトウェアをまとめてパッケージしたもの)です。

※ 参考サイトの手順でインストールを行っていった備忘録になります。

 0.インストール環境

CPU：Intel(R) Co...]]></description><link>https://zenn.dev/ma_nakaya/articles/bb93677992fa51</link><guid isPermaLink="true">https://zenn.dev/ma_nakaya/articles/bb93677992fa51</guid><pubDate>Sat, 02 Nov 2024 15:36:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H4CMuSfQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258F%2582%25E8%2580%2583%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E5%2585%2583%25E3%2581%25AB%25E3%2580%2581Python%25E5%25AE%259F%25E8%25A1%258C%25E7%2592%25B0%25E5%25A2%2583Anaconda%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2582%2584%25E3%2582%2593%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかやん</dc:creator></item><item><title><![CDATA[XBRLから抽出した財務諸表をもとに自分用のExcel表をつくる 後編]]></title><description><![CDATA[
 好きな勘定科目を抜粋したり、指標が入った表をつくる
XBRLから抽出した財務諸表をもとに、自分の好きな勘定科目だけを抜粋する、あるいはそこに指標を混ぜるということで、GPT-4oを使ってコードを書いていきます。後編です。
!
再びの宣伝ですが、XBRLから財務諸表の項目を抽出するために、拙作「PythonとExcelによるXBRL解析　株式投資に役立つ財務分析の準備」で作成したアプリっぽいものを使用しています。


抽出した10年分の財務諸表

 calculate_metrics.pyのコードを書く
前編ではdata_extraction.pyのコードを書いたので、後編では各種計算...]]></description><link>https://zenn.dev/mikamori/articles/501cd9f0507349</link><guid isPermaLink="true">https://zenn.dev/mikamori/articles/501cd9f0507349</guid><pubDate>Sat, 02 Nov 2024 12:51:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iyE4jdbm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XBRL%25E3%2581%258B%25E3%2582%2589%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25B2%25A1%25E5%258B%2599%25E8%25AB%25B8%25E8%25A1%25A8%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2581%25AEExcel%25E8%25A1%25A8%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2520%25E5%25BE%258C%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mikamori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYTJlNWU4YWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mikamori</dc:creator></item><item><title><![CDATA[XBRLから抽出した財務諸表をもとに自分用のExcel表をつくる 前編]]></title><description><![CDATA[
 好きな勘定科目を抜粋したり、指標が入った表をつくる
XBRLから抽出した財務諸表をもとに、自分の好きな勘定科目だけを抜粋する、あるいはそこに指標を混ぜるということで、GPT-4oを使ってコードを書いていきます。前編です。
!
XBRLから財務諸表の項目を抽出するために、拙作「PythonとExcelによるXBRL解析　株式投資に役立つ財務分析の準備」で作成したアプリっぽいものを使用しています。(宣伝)


抽出した10年分の財務諸表

 MasterファイルをExcelで作成する
好みの表を作るためのリストとして「Master_Analytics.xlsx」というExcelファイルを...]]></description><link>https://zenn.dev/mikamori/articles/9349d940a132f9</link><guid isPermaLink="true">https://zenn.dev/mikamori/articles/9349d940a132f9</guid><pubDate>Sat, 02 Nov 2024 12:50:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zz8y_uWf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XBRL%25E3%2581%258B%25E3%2582%2589%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25B2%25A1%25E5%258B%2599%25E8%25AB%25B8%25E8%25A1%25A8%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2581%25AEExcel%25E8%25A1%25A8%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2520%25E5%2589%258D%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mikamori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYTJlNWU4YWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mikamori</dc:creator></item><item><title><![CDATA[Azure AI Searchの検索結果にベクトルデータが出ないようにする方法]]></title><description><![CDATA[
 課題
AI Searchで登録しているインデックスにベクトルデータがあると、↓のように検索結果に含まれるからめちゃくちゃ邪魔です。


Azure Portal上でインデックスを作る場合は、フィールドタブに遷移して対象のスキーマの「取得可能」のチェックを外すだけで解決します。
しかし運用するにあたってインデックスの登録はコードで自動化させたいです。


 実装
結論、対象のSearchFieldクラスのhiddenパラメータをTrueにする。

create_index.py
SearchField(
    name="フィールド名",
    # ↓追加する
    hidden...]]></description><link>https://zenn.dev/headwaters/articles/bbe571d85497cc</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/bbe571d85497cc</guid><pubDate>Sat, 02 Nov 2024 12:16:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hPfxcPoD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520AI%2520Search%25E3%2581%25AE%25E6%25A4%259C%25E7%25B4%25A2%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AB%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258C%25E5%2587%25BA%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ikebowsan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyNTM1ZTc4OGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikebowsan</dc:creator></item><item><title><![CDATA[会社の資料を今すぐDifyで要約しよう！]]></title><description><![CDATA[

 はじめに
最近、Qiitaに投稿される記事を見ていると、「Dify」という単語をよく目にするようになりました。記事の内容から、自分のPC上でChatGPTのような「チャットボット」を簡単に作成できるツールのようだと感じたため、今回はDifyの構築方法や操作感について確認してみることにしました。

 Difyのインストール
Difyのインストールと環境設定は、公式サイトの以下のページを参考に進めました。
https://docs.dify.ai/ja-jp/getting-started/install-self-hosted/docker-compose
今回はWindows OS...]]></description><link>https://zenn.dev/ogiki/articles/612beb9357fba2</link><guid isPermaLink="true">https://zenn.dev/ogiki/articles/612beb9357fba2</guid><pubDate>Sat, 02 Nov 2024 11:50:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eHf1erpM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E8%25B3%2587%25E6%2596%2599%25E3%2582%2592%25E4%25BB%258A%25E3%2581%2599%25E3%2581%2590Dify%25E3%2581%25A7%25E8%25A6%2581%25E7%25B4%2584%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259C%25A8%25E6%259D%2591%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkZjNiYWMwZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>木村たろう</dc:creator></item><item><title><![CDATA[Alexa献立発表スキル作ってみた]]></title><description><![CDATA[僕は寮生なので毎日のご飯は寮食堂で食べています。給食みたいなもんです。そこで寮食堂の献立を発表するAlexaスキルを作ってみました。製作期間は大体3週間くらいです。この記事は思った事の殴り書きです。あまり技術的なことは書いていないですぜよ

 Alexaスキルとは

Alexaスキルは、Alexa搭載端末に機能を追加する音声起動アプリです。


スキルを使用して機能を追加することで、Alexaでの新しい体験が可能になります。スキルには次のようなさまざまなカテゴリーがあります。

とのことでAlexaに追加できる拡張機能のようなものですな

 作ろう
大まかな流れを書き留めておくだけなので...]]></description><link>https://zenn.dev/mitsuijao/articles/7973ac16c6e82f</link><guid isPermaLink="true">https://zenn.dev/mitsuijao/articles/7973ac16c6e82f</guid><pubDate>Sat, 02 Nov 2024 09:31:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ab9yU7Mv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alexa%25E7%258C%25AE%25E7%25AB%258B%25E7%2599%25BA%25E8%25A1%25A8%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AB%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mitsuiJao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjc0NmZlNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitsuiJao</dc:creator></item><item><title><![CDATA[Django の select_related と prefetch_related を SQL で理解しよう]]></title><description><![CDATA[
 概要
Django の ORM を SQL で理解しておきたいのでここに記載する。

 対象者
SQL はちょっとわかるけど、Django の ORM はよくわからん！という方向け。

 select_related

select_related はすなわち、INNER JOIN である。
Model 定義は以下であったとする。
from django.db import models


class City(models.Model):
    # ...
    pass


class Person(models.Model):
    # ...
    hometown...]]></description><link>https://zenn.dev/higakin/articles/bd957e5308ef61</link><guid isPermaLink="true">https://zenn.dev/higakin/articles/bd957e5308ef61</guid><pubDate>Sat, 02 Nov 2024 07:20:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hfir_lEq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520%25E3%2581%25AE%2520select_related%2520%25E3%2581%25A8%2520prefetch_related%2520%25E3%2582%2592%2520SQL%2520%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:snowindy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfalA0RUVIaDhadXlXZy1SbG15WU96R3laVXRMVWZUaEdWNDN4blBzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>snowindy</dc:creator></item><item><title><![CDATA[pythonの仮想環境の作成]]></title><description><![CDATA[仮想環境の作成
python -m venv .venv
仮想環境の有効化
venv\Scripts\activate
]]></description><link>https://zenn.dev/oota_12/articles/b7c231b2a3036f</link><guid isPermaLink="true">https://zenn.dev/oota_12/articles/b7c231b2a3036f</guid><pubDate>Sat, 02 Nov 2024 05:49:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--roc4lA7R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hokke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4NWYxNzA0NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hokke</dc:creator></item><item><title><![CDATA[minilangの宿題をやる]]></title><description><![CDATA[「350行くらいのPythonで書くインタプリタ」の「拡張のアイデア」にある宿題をやっていきます。順番は適当です。
解説は最小限で行きます。

 コメントを導入する
!から行末までをコメントとして扱うようにしました。
Input source and enter Ctrl+D:
print 5; ! print 6;
! print 7;
print 8; ! print 9;
Output:
['program', ['print', 5], ['print', 8]]
5
8
コード中に!を見つけたら改行(\n)まで読み飛ばしてから次のトークンを読みに行きます。字句解析で読み飛ばして...]]></description><link>https://zenn.dev/kb84tkhr/articles/minilang-homework</link><guid isPermaLink="true">https://zenn.dev/kb84tkhr/articles/minilang-homework</guid><pubDate>Sat, 02 Nov 2024 05:38:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CfZRxnh6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:minilang%25E3%2581%25AE%25E5%25AE%25BF%25E9%25A1%258C%25E3%2582%2592%25E3%2582%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kb84tkhr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKd25XTDE5OE9xdG5Xa1UycWZBM3ZkRXJhemtJWTl1VVNndDhySWQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kb84tkhr</dc:creator></item><item><title><![CDATA[Google Cloud Vision APIを用いて、単一ページから構成される透明テキスト付きPDFを作成する]]></title><description><![CDATA[
 概要
PDFを対象に、Google Cloud Vision APIを使って、透明テキスト付きPDFを作成する機会がありましたので、備忘録です。
以下、simpleで検索した例です。


 背景
今回は単一ページから構成されるPDFを対象とします。

 手順

 画像の作成
OCRの対象とする画像を作成します。
デフォルトの設定だとボヤけた画像ができてしまったので、解像度を2倍に設定し、また後述するプロセスで、解像度を考慮した位置合わせを実施しています。
以下をインストールします。

requirements.txt
PyMuPDF
Pillow

import fitz  # Py...]]></description><link>https://zenn.dev/nakamura196/articles/8115a61034be7a</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/8115a61034be7a</guid><pubDate>Sat, 02 Nov 2024 04:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3VUcrgKC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Cloud%2520Vision%2520API%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2581%25E5%258D%2598%25E4%25B8%2580%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258B%25E3%2582%2589%25E6%25A7%258B%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E9%2580%258F%25E6%2598%258E%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E4%25BB%2598%25E3%2581%258DPDF%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[【初心者向け】Pythonの仮想環境を作成する]]></title><description><![CDATA[
 はじめに
今回は、Pythonの仮想環境を作成する方法を紹介します。

 私の動作環境

MacBook Air M1 2020
メモリ 16GB
MacOS Sonoma 14.7
Python 3.12.6

!
本記事で紹介する方法は、あくまで一例として提供しています。
Pythonのバージョンについては、ご自身の環境に合わせて十分に調査・変更してご活用ください。
なお、これらの手順を実行したことによる結果や影響について、筆者は一切の責任を負いかねますので、ご了承ください。


 仮想環境を使用する利点
仮想環境は、プロジェクトごとに独立した実行環境を作成できる仕組みです。
こ...]]></description><link>https://zenn.dev/joho0724/articles/sankaku0724-newcreate35</link><guid isPermaLink="true">https://zenn.dev/joho0724/articles/sankaku0724-newcreate35</guid><pubDate>Sat, 02 Nov 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nwkL5lDi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2582%2593%25E3%2581%258B%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkODI3MDRjMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さんかく</dc:creator></item><item><title><![CDATA[【Raspberry Pi／Python】venv(仮想環境)でRPi.GPIOを使う]]></title><description><![CDATA[
 RPi.GPIOモジュールと仮想環境
Raspberry Piが有する特徴の一つとして、GPIO (General Purpose Input Output)の存在がある。多くの場合、これをプログラムで制御することになる。Pythonならば、Raspberry Piに標準で搭載されているRPi.GPIOを使うことができる。

 仮想環境の需要と概要
輓近のPythonでは、方針転換を以て、pipの使用に制限が加わった。

 pip install error
$ pip install TkEasyGUI
error: externally-managed-environment

...]]></description><link>https://zenn.dev/amenaruya/articles/368c0d8d642eb1</link><guid isPermaLink="true">https://zenn.dev/amenaruya/articles/368c0d8d642eb1</guid><pubDate>Fri, 01 Nov 2024 23:48:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3wJHqc02--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Raspberry%2520Pi%25EF%25BC%258FPython%25E3%2580%2591venv%2528%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%2529%25E3%2581%25A7RPi.GPIO%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:amenaruya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwZDg5YWZmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>amenaruya</dc:creator></item><item><title><![CDATA[AWS Lambdaのレイヤーでnumpyを使うとエラーが出る]]></title><description><![CDATA[
 エラー2本立て
忘備録です。誰かの助けになれば幸せ

 AttributeError: module 'os' has no attribute 'add_dll_directory'
lambdaのレイヤーでnumpyをインストールすると、importエラーが発生します。
[ERROR] AttributeError: module 'os' has no attribute 'add_dll_directory'
osとかdllってあるのでOS関係のエラーなのかなーと。
AWSではLinux上で実行されているため、Windowsでダウンロードしたライブラリだとエラーが出る感じらし...]]></description><link>https://zenn.dev/mitsuijao/articles/de3f4c42067781</link><guid isPermaLink="true">https://zenn.dev/mitsuijao/articles/de3f4c42067781</guid><pubDate>Fri, 01 Nov 2024 16:01:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---YFUw49C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Lambda%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E3%2581%25A7numpy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mitsuiJao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjc0NmZlNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitsuiJao</dc:creator></item><item><title><![CDATA[uv （pythonパッケージマネージャー）の使い方　詳細版]]></title><description><![CDATA[簡易版はこちら
Pythonのパッケージ管理はこれまで pip、venv、poetry などで行われてきましたが、最近 uv が注目を集めています。
本稿では uv をシステム開発で使うための詳細な情報、特に、poetry、venv、pipからの移行手順を解説します。

uv公式ドキュメント
uv (github)


 1. uvの概要

 1.1 uvとは？
uvは 高速な動作、クロスプラットフォーム対応のロックファイル、ツール管理の専用インターフェースを提供することで、快適な開発環境を実現しています。


 1.2 uvのアーキテクチャ
uvはRustで実装されており、高いパフォー...]]></description><link>https://zenn.dev/tabayashi/articles/52389e0d6c353a</link><guid isPermaLink="true">https://zenn.dev/tabayashi/articles/52389e0d6c353a</guid><pubDate>Fri, 01 Nov 2024 15:32:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1thAF5Tz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%2520%25EF%25BC%2588python%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25EF%25BC%2589%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2580%2580%25E8%25A9%25B3%25E7%25B4%25B0%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinichiro%2520Tabayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shinichiro Tabayashi</dc:creator></item><item><title><![CDATA[uv （pythonパッケージマネージャー）の使い方　簡易版]]></title><description><![CDATA[詳細版はこちら
読者が uvをシステム開発にすぐに応用できることを目指します。

uv公式ドキュメント
uv (github)


 -1. なぜ uv なのか

名前の由来は UniVerse （宇宙！） とか UltraViolet （紫外線）とかっぽいんですが、実際のところ何が由来なのかわかりませんでした（参照）

pip, pip-tools, pipx, poetry, pyenv, twine, virtualenv といった従来のパッケージマネージャーを置き換えることができる！

公式曰く、extremely fast なパッケージマネージャーということで、 pip の 1...]]></description><link>https://zenn.dev/tabayashi/articles/197205349d6935</link><guid isPermaLink="true">https://zenn.dev/tabayashi/articles/197205349d6935</guid><pubDate>Fri, 01 Nov 2024 15:28:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BCKp4iMe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%2520%25EF%25BC%2588python%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25EF%25BC%2589%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2580%2580%25E7%25B0%25A1%25E6%2598%2593%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinichiro%2520Tabayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shinichiro Tabayashi</dc:creator></item></channel></rss>