<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-03-29T11:07:53+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2005595</id>
    <published>2025-03-29T11:07:53+09:00</published>
    <updated>2025-03-29T11:09:22+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/jarapeno/items/25d1c2e06cf429030796"/>
    <url>https://qiita.com/jarapeno/items/25d1c2e06cf429030796</url>
    <title>Randoop導入計画 ~序~</title>
    <content type="html">概要
Randoopというツールをご存知でしょうか？
簡単に言うとJUnitでカバレッジの高いテストコードを自動で生成してくれるツールです。
Javaで動くためGradleタスクとして組み込むことも…</content>
    <author>
      <name>jarapeno</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2005485</id>
    <published>2025-03-29T02:42:20+09:00</published>
    <updated>2025-03-29T09:41:59+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/y-vectorfield/items/79c7ee73b1f5c10c19d6"/>
    <url>https://qiita.com/y-vectorfield/items/79c7ee73b1f5c10c19d6</url>
    <title>【検証】オブジェクト指向の申し子Javaの代名詞とも言えるあの構文が消えた...!?HelloWorldが3行で書けてしまう!?</title>
    <content type="html">概要
オブジェクト指向の申し子と言っても過言では無いJavaのmain()関数の実装について大きな変更が追加され公開されたという噂を以前から耳にしていました。先日、ネットで以下の記事を見付けました。…</content>
    <author>
      <name>y-vectorfield</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2005417</id>
    <published>2025-03-28T22:53:59+09:00</published>
    <updated>2025-03-29T13:31:51+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/smats-rd/items/563690e75853da3e4d40"/>
    <url>https://qiita.com/smats-rd/items/563690e75853da3e4d40</url>
    <title>【メモ】Java の例外と JavaScript、TypeScript の例外はどう違うか</title>
    <content type="html">この記事は何？
JavaとJavaScriptはどちらも例外処理の仕組みを持っていますが、その設計思想や機能には多少の違いがあるようなので整理してメモにしたものです。どなたかのお役に立てば幸いです。
1. 型システムと例外オブジェク…</content>
    <author>
      <name>smats-rd</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2005276</id>
    <published>2025-03-28T16:01:00+09:00</published>
    <updated>2025-03-28T16:01:00+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuutaka0129/items/3d9b8549cbe1792de77a"/>
    <url>https://qiita.com/yuutaka0129/items/3d9b8549cbe1792de77a</url>
    <title>DIについて</title>
    <content type="html">【DI】
役割→オブジェクトの依存関係を外部から注入する仕組み
RepositoryとServiceクラスで、インターフェイスで定義すると、依存関係が低くなる。使わない場合は、依存関係が強くなる。
…</content>
    <author>
      <name>yuutaka0129</name>
    </author>
  </entry>
</feed>
