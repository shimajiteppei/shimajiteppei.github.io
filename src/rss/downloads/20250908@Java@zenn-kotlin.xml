<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0e48b65ca2.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 08 Sep 2025 06:39:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[フェンリルの5DAYSインターンに参加してきた]]></title><description><![CDATA[
 はじめに
2025年8月25日〜29日にフェンリルさんの東京・大阪本社で開催されたAndroidコース（対面）のインターンに参加させていただきました。
課題内容は公開できないため、本記事では全体の雰囲気や流れ、そこで得た学びを中心にまとめます。
https://www.wantedly.com/projects/2074531

 1日目
初日は大阪本社で同時開催されていたインターン生と合わせて簡単な自己紹介からスタート。
その後、会社説明やインターン期間中に取り組むタスクの説明、環境構築を行いました。
参加人数は大阪を含めて約15名。インターン生2〜3名ごとにチューターが1人つく体...]]></description><link>https://zenn.dev/uchimura00/articles/5af687b79adcca</link><guid isPermaLink="true">https://zenn.dev/uchimura00/articles/5af687b79adcca</guid><pubDate>Sun, 07 Sep 2025 15:51:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zLzGOHyf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%25AA%25E3%2583%25AB%25E3%2581%25AE5DAYS%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uchimura00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjhhU25SZzhYdGxsaE94M1ZBeDVuM2JLdmNFUkpaQ0M1RU9mOC1jRmt3SFlJOU9LND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uchimura00</dc:creator></item><item><title><![CDATA[Segが学んだMVI ~個人の意見を添えて~]]></title><description><![CDATA[
 まえがき
どうも、segです。まえがきは読まなくていいです。
普段はJetpack Composeを使ってアプリ開発をしていく際に、クライアント側をClean ArchitectureとMVIを用いています。
ただ、Clean ArchitectureとMVIを人に説明できるほどの理解がなっていないので、今回はMVIについて色々理解を深ぼっていきたいと思います。
(やる気があればClean Architectureについても出す)
あと初心者が書いている無いようなので、鼻で笑いながら読んでやって下さい。
ということでさっそく

 1. MVIとは
Cycle.jsが発案したUI層に関...]]></description><link>https://zenn.dev/segnities007/articles/98060c7b687657</link><guid isPermaLink="true">https://zenn.dev/segnities007/articles/98060c7b687657</guid><pubDate>Sat, 06 Sep 2025 14:51:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yVkDJKk5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Seg%25E3%2581%258C%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0MVI%2520%7E%25E5%2580%258B%25E4%25BA%25BA%25E3%2581%25AE%25E6%2584%258F%25E8%25A6%258B%25E3%2582%2592%25E6%25B7%25BB%25E3%2581%2588%25E3%2581%25A6%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Seg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ZGRmYWRlMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Seg</dc:creator></item><item><title><![CDATA[[Android][Kotlin][Vuforia][AR]Vuforiaのサンプルコード(Image Target)を動かしてみた。]]></title><description><![CDATA[
 Abstruct

Vuforiaサンプルコードをビルド→動作させてみた。
コード説明


 背景
ちょっと思い立って、Vuforia動かしてみようかと思った。
以前この記事で動かし方を書いたんだけど、今回動かしてみると動かねー。ビルドが通らねー。Android Gradle Pluginバージョンが8系になって過去のコードが軒並みビルドエラーになってもう大変。githubのコードが全然動かん。
Vuforiaまだサービスやってくれててよかったんだけど、公式サンプルコードもビルドが通らん。
なので、ビルドが通るようにしてgithubに公開してみた。
今回も目標到達点は↓これ


 準...]]></description><link>https://zenn.dev/rg687076/articles/80f8ddd22f643f</link><guid isPermaLink="true">https://zenn.dev/rg687076/articles/80f8ddd22f643f</guid><pubDate>Fri, 05 Sep 2025 18:48:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E7pqsSse--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAndroid%255D%255BKotlin%255D%255BVuforia%255D%255BAR%255DVuforia%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2528Image%2520Targe...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aaaa1597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlYmE2MTczYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aaaa1597</dc:creator></item><item><title><![CDATA[Kotlinにおける快適なテスティングエコシステム]]></title><description><![CDATA[
 Open-source tools for your testing ecosystem
持続可能なソフトウェアに欠かせないソフトウェアテスティングにおけるエコシステムにおいて、Kotlinプロジェクトで利用可能で人気のソフトウェアを紹介します。
今回紹介するのは下記です


detekt: Static Code Analyzer (静的解析)

kover: Kotlin Coverage Tool (テストカバレッジ)

allure: Testing Report (テストレポートのビジュアライズ)


 Detekt
https://github.com/detekt/de...]]></description><link>https://zenn.dev/hondaya14/articles/kotlin-testing-ecosystem</link><guid isPermaLink="true">https://zenn.dev/hondaya14/articles/kotlin-testing-ecosystem</guid><pubDate>Thu, 04 Sep 2025 17:24:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3YNkQ4BS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E5%25BF%25AB%25E9%2581%25A9%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hondaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1NTk4ZjlhNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hondaya</dc:creator></item><item><title><![CDATA[[Android][Kotlin]初回起動を判別するサンプルコード]]></title><description><![CDATA[
今回のコードはココ↓
https://github.com/aaaa1597/AndKot-FirstLaunchFlagSample.git

 Abstruct

Androidのアプリ開発で、初回起動を判別するコード
とその説明


 背景
Androidでアプリ開発してると権限まわりのコーディングが発生することがあって。
でそうするとshouldShowRequestPermissionRationale()※なげー! って関数を使うことになるんだけど、これだけじゃ不十分で、初回起動の判定を実装する必要がある。
プリファレンスで出来るやんねって思って実装したら、それが罠でPix...]]></description><link>https://zenn.dev/rg687076/articles/9188edc78b48ca</link><guid isPermaLink="true">https://zenn.dev/rg687076/articles/9188edc78b48ca</guid><pubDate>Wed, 03 Sep 2025 12:51:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jgKhz6px--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAndroid%255D%255BKotlin%255D%25E5%2588%259D%25E5%259B%259E%25E8%25B5%25B7%25E5%258B%2595%25E3%2582%2592%25E5%2588%25A4%25E5%2588%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aaaa1597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlYmE2MTczYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aaaa1597</dc:creator></item><item><title><![CDATA[Jetpack Compose NavigationでSerializableされていない型の値を渡す方法]]></title><description><![CDATA[Navigation Compose 2.8以降のType Safe Navigationでは、Serializableされていない型やカスタムシリアライザーが必要な型を引数として渡すことができます。この記事では、その実装方法を3つのアプローチで解説します。

 概要
Type Safe NavigationではルートクラスをSerializableにすることで型安全な画面遷移が実現できますが、以下のような型は標準では対応していません：

LocalDate、UUIDなどのJava標準型
カスタムdata class
既存ライブラリの型

これらを安全に渡すための手法を実例とともに紹介し...]]></description><link>https://zenn.dev/tarobu/articles/89e0b3d4787713</link><guid isPermaLink="true">https://zenn.dev/tarobu/articles/89e0b3d4787713</guid><pubDate>Tue, 02 Sep 2025 14:03:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S4L2gym3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520Compose%2520Navigation%25E3%2581%25A7Serializable%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2584%25E5%259E%258B%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E6%25B8%25A1%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%258D%25E3%2581%25B6%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjZGU4Y2MwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たろぶー</dc:creator></item><item><title><![CDATA[【Android】cloneアプリのapplicationIdなどを変更して別アプリとして流用する]]></title><description><![CDATA[Android アプリ開発において、既存プロジェクトやテンプレートプロジェクトを clone して流用したい場面があると思います。
または、適当に applicationId を設定したものの、後から正式なものに変更したい。などの場合もあるあるかと思います。
そんな場合の applicationId や Project 名などを変更する方法についてざっとまとめてみました。


 検証環境

Android Studio Narwhal Feature Drop | 2025.1.2
検証前の applicationId は com.example.test.app と仮定します。

※ ...]]></description><link>https://zenn.dev/ncdc/articles/android_applicationid</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/android_applicationid</guid><pubDate>Tue, 02 Sep 2025 01:17:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KboI_TKr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Android%25E3%2580%2591clone%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEapplicationId%25E3%2581%25AA%25E3%2581%25A9%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%25A6%25E5%2588%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%25B5%2581%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMDVkNzJkN2EuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーと</dc:creator></item><item><title><![CDATA[jOOQ の起動後最初のクエリが遅い問題]]></title><description><![CDATA[
 先にまとめ
jOOQ を大量(数百以上)のテーブルを持つデータベースで使うとき、クラスローディング等で起動後最初のリクエストで時間がかかることがある。
リクエストを受け付ける前に適当な jOOQ クエリを一度流しておくなど、適切にウォームアップしましょう。

 問題
jOOQ を ORM として利用してるバックエンドプロジェクトで、以下の様な問題に遭遇しました。
https://www.jooq.org/

起動直後の1発目リクエストが必ず遅い (2秒以上)
2発目以降のリクエストは、概ね 500ms 以下で処理できる
jOOQ を呼び出していないリクエストはそれほど遅くない
JDB...]]></description><link>https://zenn.dev/moneyforward/articles/1b1f145593ce09</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/1b1f145593ce09</guid><pubDate>Mon, 01 Sep 2025 00:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VaTvxv2---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jOOQ%2520%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E5%25BE%258C%25E6%259C%2580%25E5%2588%259D%25E3%2581%25AE%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2581%258C%25E9%2581%2585%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hktechno%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1MGU0MTgwOWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hktechno</dc:creator></item><item><title><![CDATA[Jetpack Composeでパーティクルシステムを作る]]></title><description><![CDATA[
 はじめに
アプリを作っていてインタラクティブなフィードバッグが欲しい場面があり、パーティクルシステムを作ってみたので実装した方法について解説します。
改善点や間違いがあれば指摘していただけると幸いです。

 技術概要

 実装アーキテクチャ


Particle データクラス: パーティクルの状態管理

ParticleScope インターフェース: パーティクル機能の提供

ParticleWrapper Composable: パーティクルシステムのメイン実装

Modifier拡張: クリック時のパーティクル発生機能（ただし、Buttonコンポーザブルに対して適用してもパーティ...]]></description><link>https://zenn.dev/yuta02/articles/e4f64fa53e7b1c</link><guid isPermaLink="true">https://zenn.dev/yuta02/articles/e4f64fa53e7b1c</guid><pubDate>Sat, 30 Aug 2025 10:21:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aKqerS_f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520Compose%25E3%2581%25A7%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AF%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpYXhweFYtd1NuN3BEeTlZdGtMemFJeTJhN0RIQUFjSEkwQjFuNGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーた</dc:creator></item><item><title><![CDATA[[Android][Kotlin]レーダーViewを作ってみた。]]></title><description><![CDATA[













https://github.com/aaaa1597/AndKot-RadarViewSample/tree/main

 Abstract

一般的なイメージのレーダーをandroid Viewとして作ってみた。
使い方の説明
ソースコードの説明


 概要
BLEアプリを作ってて、レーダー画面を表示したかったので、ないかな～と探したんだけど意外になかったので作ってみた。レーダー画面は何となく緑っぽいのイメージなのでそのイメージを大事に。
ソースコードはページ上部のgithubリンクに配置済。

 使い方

レイアウトXMLに適当に配置して頂ければ。
画面...]]></description><link>https://zenn.dev/rg687076/articles/90d4c289775a7a</link><guid isPermaLink="true">https://zenn.dev/rg687076/articles/90d4c289775a7a</guid><pubDate>Fri, 29 Aug 2025 12:45:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rWz02k22--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAndroid%255D%255BKotlin%255D%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BCView%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aaaa1597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlYmE2MTczYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aaaa1597</dc:creator></item><item><title><![CDATA[Kotlin's Syntax Sugar / Kotlinのシンタックスシュガー —— Embracing Kotlin]]></title><description><![CDATA[
 Kotlinを愛でる - Syntax Sugar

 What is "syntax sugar"?

Syntax Sugar 糖衣構文
プログラミング言語において、読み書きのしやすさのために設計されている。より明確に、より簡潔に、あるいは一部の人が好むような別のスタイルで表現が可能になる.
ref: https://en.wikipedia.org/wiki/Syntactic_sugar


 Kotlin's syntax sugar

 呼び出し/演算子

 property access (getter/setter)
getterやsetterがproperyのように...]]></description><link>https://zenn.dev/hondaya14/articles/kotlin-syntax-sugar</link><guid isPermaLink="true">https://zenn.dev/hondaya14/articles/kotlin-syntax-sugar</guid><pubDate>Wed, 27 Aug 2025 11:46:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2PVdYjz5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2527s%2520Syntax%2520Sugar%2520%252F%2520Kotlin%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25AC%25E3%2583%25BC%2520%25E2%2580%2594%25E2%2580%2594%2520Embracing%2520Ko...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hondaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1NTk4ZjlhNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hondaya</dc:creator></item><item><title><![CDATA[koogのStructured dataを試す]]></title><description><![CDATA[AIエージェントのキャッチアップを始めており、単純な興味でKotlinでAIエージェントが実装できるkoogをお試ししてみています。
https://docs.koog.ai/
その中で構造化されたデータをkoogで構造化されたデータを返す方法を探していたところ、Structured dataという項目を見つけたので試してみました。その際のメモです。
https://docs.koog.ai/structured-data/
Structured dataはlangchainなどでも提供されているstructured_outputとおそらく同様のもので、LLMに対してユーザーが定義したフ...]]></description><link>https://zenn.dev/asahima/articles/34192d39182ee7</link><guid isPermaLink="true">https://zenn.dev/asahima/articles/34192d39182ee7</guid><pubDate>Sun, 24 Aug 2025 07:27:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8GY1iL79--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:koog%25E3%2581%25AEStructured%2520data%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shogo-ma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzNmZjMGY2YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shogo-ma</dc:creator></item><item><title><![CDATA[Androidで「1秒後に実行する」時に出てくるHandlerは何をしているのか？]]></title><description><![CDATA[Androidアプリ開発では、例えば 1秒（1000ミリ秒）後に処理を実行したい場合、次のような方法が紹介されます。

kotlin
Handler(Looper.getMainLooper()).postDelayed({
    Log.d("hogehuga", "1秒後に実行されました")
}, 1000)

このコードがどのように動作しているのかは、Javaでの記述を見るとより理解しやすいと思います。

java
new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {
    @Override
    ...]]></description><link>https://zenn.dev/aokiti/articles/5aed1cc879fffd</link><guid isPermaLink="true">https://zenn.dev/aokiti/articles/5aed1cc879fffd</guid><pubDate>Sun, 24 Aug 2025 03:41:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x11E_JfN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25A7%25E3%2580%258C1%25E7%25A7%2592%25E5%25BE%258C%25E3%2581%25AB%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2580%258D%25E6%2599%2582%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258BHandler%25E3%2581%25AF%25E4%25BD%2595%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Aokiti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1YTUwYWRlMTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Aokiti</dc:creator></item><item><title><![CDATA[DockerでマルチモジュールのMavenプロジェクトをDocker Multi-stage buildsでビルドする]]></title><description><![CDATA[
 はじめに
MavenプロジェクトをDockerコンテナ化する際に、Docker Multi-stage buildsを活用して効率的にイメージを構築する方法について理解を深めたいという思いで執筆しています。

 Multi-stage builds おさらい
Multi-stage buildsは、一つのDockerfileの中で複数のFROMステートメントを使用し、段階的にイメージを構築する手法です。
https://docs.docker.com/build/building/multi-stage/

 なぜMulti-stage buildsが必要なのか おさらい
従来の単一...]]></description><link>https://zenn.dev/tetoteto/articles/docker-multistage-builds</link><guid isPermaLink="true">https://zenn.dev/tetoteto/articles/docker-multistage-builds</guid><pubDate>Sat, 23 Aug 2025 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Txg97os---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AEMaven%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592Docker%2520Multi-stage%2520builds%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TetoTeto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlIN1NhY21HVFFmR3hWQ1d2R01nX29ETVR0WU82UXJ6WGg1Z3dZOUs4VWRJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TetoTeto</dc:creator></item><item><title><![CDATA[【Kotlin】画像選択のテストがしたいのに・・・]]></title><description><![CDATA[!
外でもアプリ開発ができるようにと、ノートパソコンを買いました。
その新しいPCにAndroidStudioを入れて、画像選択機能を実装しました。
スマホの中にあるPhoto等から写真を選択して、アプリに表示するという機能なのです。
出来上がったので、さっそくテストするぜー🔥と思ったのですが、
エミュレータに画像は1件も登録されていませんでした。。。。


 登録したい画像
PCの中にエミュレータに登録したい画像を用意します。
とりま、私はこの3枚にしてみました。


 エミュレーを起動
AndroidStudioで画像を登録したいエミュレータを起動させます。
右側サイドバーのDive...]]></description><link>https://zenn.dev/rucco/articles/4a204ec4ab45a7</link><guid isPermaLink="true">https://zenn.dev/rucco/articles/4a204ec4ab45a7</guid><pubDate>Fri, 22 Aug 2025 21:59:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HKh00nix--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Kotlin%25E3%2580%2591%25E7%2594%25BB%25E5%2583%258F%25E9%2581%25B8%25E6%258A%259E%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25AB%25E3%2583%25BB%25E3%2583%25BB%25E3%2583%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258B%25E3%2582%258B%25E3%2581%2599%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYzRhOWZjNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>るるすた</dc:creator></item><item><title><![CDATA[KotlinでNative Buildするときの2パターン —— Kotlin/Native・GraalVM]]></title><description><![CDATA[Kotlin は KMP（Kotlin Multiplatform）によって複数のプラットフォームで同一コードを動かせます。多くの文脈では iOS/Android が語られがちですが、Desktop/Server-side も対象です。本稿では Ktor を使って


Kotlin/Native で単体実行可能バイナリ
AOTコンパイルしてNative ImageをGraalVMで実行

の2パターンの最小構成をまとめます.
作成したリポジトリ



 Ktor × Kotlin/Native
Ktor（JetBrains 製の Web フレームワーク）を Kotlin/Native で...]]></description><link>https://zenn.dev/hondaya14/articles/ktor-kotlin-native-graalvm</link><guid isPermaLink="true">https://zenn.dev/hondaya14/articles/ktor-kotlin-native-graalvm</guid><pubDate>Fri, 22 Aug 2025 11:56:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BtuTUhWo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25A7Native%2520Build%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE2%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%25E2%2580%2594%25E2%2580%2594%2520Kotlin%252FNative%25E3%2583%25BBGraalVM%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hondaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1NTk4ZjlhNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hondaya</dc:creator></item><item><title><![CDATA[首掛け型ウェアラブルカメラ THINKLETのカメラ映像をWebでプレビューしながら写真撮影する]]></title><description><![CDATA[
 はじめに
初めまして。Fairy Devices株式会社 プロダクト開発部のtzwです。デバイス試作チームとして、当社のデバイスやライブラリを使ったAndroid/THINKLETアプリの試作をしています。
今回当社の首掛け型ウェアラブルカメラデバイスTHINKLETを使い、カメラ映像をWebブラウザで確認しながら写真撮影できるアプリを試作しましたのでご紹介します。
また今回の実装では、Gemini in Android Studio をフルに活用して、コーディングしました。その所感についてもお伝えします。

 開発背景
THINKLETは、首から掛けて使用するウェアラブルカメラデバ...]]></description><link>https://zenn.dev/fairydevices/articles/fa1f6638bb7a99</link><guid isPermaLink="true">https://zenn.dev/fairydevices/articles/fa1f6638bb7a99</guid><pubDate>Thu, 21 Aug 2025 12:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H_7mr0J4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A6%2596%25E6%258E%259B%25E3%2581%2591%25E5%259E%258B%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%2520THINKLET%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25A1%25E3%2583%25A9%25E6%2598%25A0%25E5%2583%258F%25E3%2582%2592Web%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E5%2586%2599%25E7%259C%259F%25E6%2592%25AE%25E5%25BD%25B1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tzw%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MjE4ODkwNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25BB%25E3%2582%25BA%25E5%2585%25AC%25E5%25BC%258F%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1YjZlZTJjYzkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tzw</dc:creator></item><item><title><![CDATA[Gradle Multi-Project構成でCircleCIのrerun failed testsを実行する際の設定]]></title><description><![CDATA[
 これなに
CircleCIの"rerun failed tests"を有効にしているのですが、Flaky testに出会したので目論見通り"rerun failed tests"を実行したところ、そのテストだけが実行され成功したけど違う理由でエラーになったので、それの対処法を残しておくページです。

 起きたエラー
9: Task failed with an exception.
-----------
* What went wrong:
Execution failed for task ':example2:test'.
&gt; No tests found for giv...]]></description><link>https://zenn.dev/moneyforward/articles/dea4ce51db47e6</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/dea4ce51db47e6</guid><pubDate>Thu, 21 Aug 2025 08:31:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--feN8PvXb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradle%2520Multi-Project%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7CircleCI%25E3%2581%25AErerun%2520failed%2520tests%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sh-ogawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dQMUxWY0xrRDB3M0E3clJtNWdQRWxmUVA2aDBUdjdDakpoLXRQU3c9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sh-ogawa</dc:creator></item><item><title><![CDATA[ViewModelからstringResの文字列を参照したくなったら]]></title><description><![CDATA[!
うん。タイトルが長い🤔
多言語対応を予定している場合、できる限りテキストはstringResを使いたいと思っています。
ViewModelからは呼び出せないので、どう対応すべきかを記録しておきます。


 結論
ViewModelにはInt型の@StringResを持たせて、UI側でviewModelの@StringResをIntで取得し、文字列に変換。

 具体的に
例えば、strings.xmlに以下のようなexample_messageがあるとする。

&lt;resource&gt;
    &lt;string name="example_success"&gt;成功しまし...]]></description><link>https://zenn.dev/rucco/articles/00ea96f1f32f27</link><guid isPermaLink="true">https://zenn.dev/rucco/articles/00ea96f1f32f27</guid><pubDate>Tue, 19 Aug 2025 19:55:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KcetTpWC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ViewModel%25E3%2581%258B%25E3%2582%2589stringRes%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258B%25E3%2582%258B%25E3%2581%2599%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYzRhOWZjNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>るるすた</dc:creator></item><item><title><![CDATA[JetBrains公式のKotlin製AIエージェントフレームワーク"Koog"やるぞ]]></title><description><![CDATA[
 はじめに
スマートラウンドで野生のAIエンジニアをやっている福本です🐈
普段はLangChainやMastraを使ったAIワークフロー/エージェントの新規開発や運用をやっています。
最近、登記簿PDFファイルからデータを抽出して自動で資本政策を作る”AI資本政策”という機能を作ったりしました。
というわけでAIエージェントやワークフロー開発には色々と興味を持っているわけですが、先日のKotlinConf 2025でJetBrainsが公式で提供するAIエージェント開発のフレームワークKoogが発表されました👇️
https://blog.jetbrains.com/ai/2025/0...]]></description><link>https://zenn.dev/smartround_dev/articles/9faa2d870b15b2</link><guid isPermaLink="true">https://zenn.dev/smartround_dev/articles/9faa2d870b15b2</guid><pubDate>Tue, 19 Aug 2025 00:39:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1FIWSy88--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JetBrains%25E5%2585%25AC%25E5%25BC%258F%25E3%2581%25AEKotlin%25E8%25A3%25BDAI%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2522Koog%2522%25E3%2582%2584%25E3%2582%258B%25E3%2581%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Teruhisa%2520Fukumoto%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwNDUyOGFmZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2589%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwODYyM2MyYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Teruhisa Fukumoto</dc:creator></item></channel></rss>