<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 23 Aug 2025 06:28:26 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【DaVinci Resolve API】タイムライン上の選択クリップを取得する手法]]></title><description><![CDATA[!
本記事で解説する手法は2025/8/21時点で存在しない機能の代替案です。
API の更新に伴って不要になる可能性があります。


 まえがき
こんにちは、火注ゆかなです。
DaVinci Resolve のスクリプトを組んでる人の中にはタイムライン上の選択クリップに対する処理を実装したい方もいらっしゃることかと思います。
そして色々調べた結果、API にそんな機能は存在しないという事実に直面してガッカリするまでがワンセットじゃないでしょうか。
なんで実装しないんでしょうね？
私も実現方法なんてないだろうと思っていたのですが、先日 X(旧Twitter) の DM で「選択クリップの...]]></description><link>https://zenn.dev/hitsugi_yukana/articles/hy_alternative_getselected-timelineitem</link><guid isPermaLink="true">https://zenn.dev/hitsugi_yukana/articles/hy_alternative_getselected-timelineitem</guid><pubDate>Sat, 23 Aug 2025 06:09:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8ZXrPSY3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DaVinci%2520Resolve%2520API%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E4%25B8%258A%25E3%2581%25AE%25E9%2581%25B8%25E6%258A%259E%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2581%25AB%25E6%25B3%25A8%25E3%2582%2586%25E3%2581%258B%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzNTBiMWIwZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>火注ゆかな</dc:creator></item><item><title><![CDATA[『AIに仕事を奪われたくない君へ贈る、24時間働く"自分だけのAIアシスタント"開発日誌』]]></title><description><![CDATA[こんにちは、あやとです。

あなたも、心のどこかで感じていませんか？「このままAIツールを使うだけの側でいれば、いつか自分の仕事はAIに奪われるのではないか」という、漠然とした不安を。

私もそうでした。だから、決めたのです。単なるAIの「消費者」でいることをやめよう。APIを直接叩き、自分だけの自動化システムを構築する、「生産者」になろう、と。

この本は、そんな私の挑戦の物語である『開発日誌』から生まれた、最終的な“答え”です。物語で語られた数々の失敗、泥沼のデバッグ、そしてAIアシスタントですら見抜けなかった権限の罠…。その全ての苦しみの末にたどり着いた、最も安全で、最も確実で、最もシンプルな「勝利の方程式」だけを、ここに凝縮しました。]]></description><link>https://zenn.dev/colorfulwave/books/e4179ec88d81b8</link><guid isPermaLink="true">https://zenn.dev/colorfulwave/books/e4179ec88d81b8</guid><pubDate>Sat, 23 Aug 2025 04:15:05 GMT</pubDate><dc:creator>あやと＠AI自動化に「挑戦する」人</dc:creator></item><item><title><![CDATA[PythonでL9直交表を使ったコンジョイント分析 – 効用値計算編]]></title><description><![CDATA[本記事はコンジョイント分析連載の第2回です。
#1 PythonでパパッとL9直交表作成して分析準備
#2 PythonでL9直交表を使ったコンジョイント分析 – 効用値計算編  ← 今回
#3 Excelで購買確率シミュレーション編 ← 次回予定
#4 UI化（Streamlit等で応用） ← 予定

 📌はじめに
今回は 「直交表を用いたコンジョイント分析」 を、実際のデータを使って試してみます。
コンジョイント分析を使うと、製品やサービスのどの要素が消費者の選好に影響しているかを定量的に明らかにできます。
直交表の作り方を知りたい方は、前回の記事もご覧ください。
❓コンジョイント分...]]></description><link>https://zenn.dev/swatchp/articles/ed86b13dd4081e</link><guid isPermaLink="true">https://zenn.dev/swatchp/articles/ed86b13dd4081e</guid><pubDate>Sat, 23 Aug 2025 01:41:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6pfQJlK6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7L9%25E7%259B%25B4%25E4%25BA%25A4%25E8%25A1%25A8%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E5%2588%2586%25E6%259E%2590%2520%25E2%2580%2593%2520%25E5%258A%25B9%25E7%2594%25A8%25E5%2580%25A4%25E8%25A8%2588%25E7%25AE%2597%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Swatch-p%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YTg2ZTBmZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Swatch-p</dc:creator></item><item><title><![CDATA[ChatGPTを使ってRustで新しいプログラミング言語をつくり始めた話(四則演算)]]></title><description><![CDATA[
 はじめに
本記事では、自作プログラミング言語 Pyro に四則演算機能を追加した過程をご紹介いたします。
Pyro は Python ライクな構文を持ち、Rust にトランスパイルして実行可能な軽量言語です。

 プロジェクト構成
プロジェクトは Cargo ワークスペースとして構成されています。
pyro_lang_test/
├── Cargo.toml
└── crates
    ├── pyroc        # フロントエンド（字句解析・構文解析）
    ├── pyrorts      # Rust コード生成
    └── pyroc-bin    # CLI ...]]></description><link>https://zenn.dev/collabostyle/articles/08d14d0ee9e0f1</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/08d14d0ee9e0f1</guid><pubDate>Fri, 22 Aug 2025 13:26:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sxjKFt6E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Rust%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%25E8%25A9%25B1%2528%25E5%259B%259B%25E5%2589%2587%25E6%25BC%2594%25E7%25AE%2597%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2594%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[サマーインターン@マネーフォワードの参加記]]></title><description><![CDATA[マネーフォワードのエンジニアサマーインターンシップ(8/1-8/15)にデータエンジニアとして参加させていただきました！
参加記を書くのが推奨されているとのことで，せっかくなので書いてみようと思い書くことにしました．

 インターン参加までの経緯
マネーフォワードのことは英語を公用語として採用している会社として認知しており興味をもっていました．面接でもともと興味のあったデータエンジニアリング関係のインターンシップにちょうど枠があると伺い，インターンシップに参加させていただくことにしました．
もともと私は機械学習系のバックグラウンドが主でデータエンジニアリングに関しては経験がほとんどありま...]]></description><link>https://zenn.dev/ryoryon66/articles/811da2fd626909</link><guid isPermaLink="true">https://zenn.dev/ryoryon66/articles/811da2fd626909</guid><pubDate>Fri, 22 Aug 2025 10:15:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MIuCCVNk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2540%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%258F%2582%25E5%258A%25A0%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryoryon66%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzMTllZTdmZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoryon66</dc:creator></item><item><title><![CDATA[ランチェスターの法則でマーケティング分析！一般化モデルとPythonでのシミュレーションを試してみました...]]></title><description><![CDATA[
 はじめに：戦場からビジネスへ、数学で切り込む！
ランチェスターの法則、皆さんはご存知でしょうか？ 1914年にイギリスの数学者フレデリック・ランチェスターが航空戦を分析するために作った数理モデルです。戦場で兵士が減っていく様子を微分方程式で表現し、どちらが勝つかを計算します。シンプルだけど、めっちゃ奥深いんですよ！ これが、ビジネスの世界、例えば市場シェアや売上の争いにもバッチリ応用できるんです。
今回は、日本のSIerを題材に、ランチェスターの法則をちょっとアレンジして遊んでみました。対象は某SIer4社です。第一法則と第二法則をパラメータで一般化し、2者対立をn者対立に拡張。さら...]]></description><link>https://zenn.dev/ni_minamipapa/articles/da039aab6912c5</link><guid isPermaLink="true">https://zenn.dev/ni_minamipapa/articles/da039aab6912c5</guid><pubDate>Fri, 22 Aug 2025 06:03:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kRaOMEFv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2581%25E3%2582%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E6%25B3%2595%25E5%2589%2587%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E5%2588%2586%25E6%259E%2590%25EF%25BC%2581%25E4%25B8%2580%25E8%2588%25AC%25E5%258C%2596%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A8Python%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:N%25EF%25BC%2586I%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3M2Y1NTMxN2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>N＆Iシステムズ</dc:creator></item><item><title><![CDATA[【Python】PythonでRFC6587形式のSyslogログを生成する]]></title><description><![CDATA[
 PythonでRFC6587形式のSyslogログを生成する
Syslog を TCP で転送するときの仕様として RFC6587 があり、そこで定義されている Octet Counting フレーミングをテストしたいときがあります。
しかし実際の環境を準備する前に「サンプルログを作って確認したい」ことも多いので、Python で簡単に RFC6587 形式のログを生成するプログラムを書いてみました。


 プログラム本体
import argparse
import random
import string
from datetime import datetime

def ge...]]></description><link>https://zenn.dev/qa_dev/articles/b315ab46dd2674</link><guid isPermaLink="true">https://zenn.dev/qa_dev/articles/b315ab46dd2674</guid><pubDate>Thu, 21 Aug 2025 23:35:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2oI-qwGx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Python%25E3%2581%25A7RFC6587%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AESyslog%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:qa_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGRfRnVZcmtndVIzVW1ScTVFMWdDMmozVmR4cFRjV29uUTJYd2JOQ2RhQ3ltaEFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>qa_dev</dc:creator></item><item><title><![CDATA[ChemPyを使ってみる -install-]]></title><description><![CDATA[
 背景
反応速度解析をやってみたいなーと思いながら、なかなかぴったりのPythonパッケージがなく、ちまちま自分で作ったりしていたのですが、最近、「これは良いのでは」というのに出会いました。紹介してくれたGeminiありがとう。
ChemPy (https://github.com/bjodah/chempy.git) というパッケージです。主に "physical/inorganic/analytical chemistry" 向け、ということで、有機化学的に、使い方に戸惑う部分もありますが、中々素敵な感じです。ところが、検索をかけてみても、あまり関連する記事が出てこず、日本語だとこ...]]></description><link>https://zenn.dev/pejpo/articles/012aaac6aace14</link><guid isPermaLink="true">https://zenn.dev/pejpo/articles/012aaac6aace14</guid><pubDate>Thu, 21 Aug 2025 22:18:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vBnCeVFY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChemPy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520-install-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr_O%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGEzYWJiZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dr_O</dc:creator></item><item><title><![CDATA[Pythonで学ぶRAG入門 ― LangChainとStreamlitで作る質問箱アプリ]]></title><description><![CDATA[
 ✨ はじめに
こんにちは、リーディング・エッジ社でAIエンジニアをしている和泉です。
今回は、LangChainを使って RAG（Retrieval-Augmented Generation） を体験できる「質問箱アプリ」を作るサンプルプログラムをご紹介したいと思います。
今回の記事の対象者は RAG を使ったことがない Python エンジニアです。

 🧩 RAGの仕組み
まず、RAGの流れをイメージしましょう。
RAGの本質は「LLM単体では持たない情報を、ベクトル検索で補強してから回答させる」ことです。


 🛠 アプリの構成


UI: Streamlit（チャット UI ...]]></description><link>https://zenn.dev/izumi_toshinori/articles/49d05d72d3a173</link><guid isPermaLink="true">https://zenn.dev/izumi_toshinori/articles/49d05d72d3a173</guid><pubDate>Thu, 21 Aug 2025 15:10:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2j2XUe72--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6RAG%25E5%2585%25A5%25E9%2596%2580%2520%25E2%2580%2595%2520LangChain%25E3%2581%25A8Streamlit%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%25B3%25AA%25E5%2595%258F%25E7%25AE%25B1%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Izumi%2520Toshinori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5MTgzNzUwYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Izumi Toshinori</dc:creator></item><item><title><![CDATA[Python x 自作英単語学習アプリ で勉強しよう！]]></title><description><![CDATA[
 🤖 【プログラミング初心者向け】Python で作るAI英単語暗記アプリ
機械学習とWebアプリの基本から応用まで、楽しく学んでみませんか？今回は、Python で Streamlit を使って、AIが学習状況を分析してくれる英単語暗記アプリを作成します。辞書（dict）、if文、ループ（for文）、関数、機械学習、データ処理など、プログラミングの基本要素を実際に使いながら、インテリジェントな学習アプリの技術を身につけていきましょう。
AI、機械学習、データ分析、条件分岐、データ管理まで含む本格的なWebアプリを、ステップバイステップで学んでいきましょう。

 🌟 この記事を読めば....]]></description><link>https://zenn.dev/sola_au/articles/11c2c7b31242f8</link><guid isPermaLink="true">https://zenn.dev/sola_au/articles/11c2c7b31242f8</guid><pubDate>Thu, 21 Aug 2025 14:16:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wAJkEQS5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520x%2520%25E8%2587%25AA%25E4%25BD%259C%25E8%258B%25B1%25E5%258D%2598%25E8%25AA%259E%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2581%25A7%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOLA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNNYlhBdFBoeHNoM0ttS0NPTkRWU0tOY2hDenZ6ZVBvaTZ5MzdvNTh3SnBEMWpYdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOLA</dc:creator></item><item><title><![CDATA[Aimシリーズ：入門してみた]]></title><description><![CDATA[今回から、Aimという実験管理ツールに入門してみます。
※ 出張中につき、短編になります。

 Aimとは？
Aimとはオープンソースの実験管理ツールになります。Aimを利用すると実験を実行し、その結果発生する様々なメタデータを一元的に取り扱い、グラフィカルに解析することができます。Aimを利用することで以下のようなことが実現できます。

MLパイプラインのロギングを可能にする
UIを通してメタデータを比較分析できる
ML学習を効率的に実行可能
実験管理のオーガナイズができる

https://github.com/aimhubio/aim/

 早速使ってみる
今回はGitHub上で提...]]></description><link>https://zenn.dev/akasan/articles/6221f74bea622d</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/6221f74bea622d</guid><pubDate>Thu, 21 Aug 2025 12:28:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tupmSf7C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Aim%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25EF%25BC%259A%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[【初心者向け】pipenv shell終了時の落とし穴：exitとdeactivateの違いを理解する]]></title><description><![CDATA[Pythonでの仮想環境に慣れておらず、仮想環境から抜け出す際に躓いたので備忘録です。
初心者向けです。

 この記事でわかること

pipenvとvenvでの終了方法の違いとその理由


 実際に起ったこと


pipenv shellで仮想環境を使用開始

deactivateを実行（これで仮想環境を終了したつもりだった）
再度、仮想環境に入ろうとpipenv shellを実行すると以下のようになり、正しく起動できない。Shell for UNKNOWN_VIRTUAL_ENVIRONMENT already activated.
New shell not activated to...]]></description><link>https://zenn.dev/kira_edu/articles/302e3cf9536cc9</link><guid isPermaLink="true">https://zenn.dev/kira_edu/articles/302e3cf9536cc9</guid><pubDate>Thu, 21 Aug 2025 11:29:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1YuYN2LC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591pipenv%2520shell%25E7%25B5%2582%25E4%25BA%2586%25E6%2599%2582%25E3%2581%25AE%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E7%25A9%25B4%25EF%25BC%259Aexit%25E3%2581%25A8deactivate%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kira13%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkZmMwOTM5ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kira13</dc:creator></item><item><title><![CDATA[尿酸高値の原因を探る - 血液検査データを使った相関分析]]></title><description><![CDATA[
 はじめに
本記事では、私自身の血液検査データを用いて、尿酸値の推移と他の血液検査項目との関連性を分析します。
!
あくまで統計的手法を用いた個人的な血液検査データを分析する方法や視点を共有するものであり、医学的診断・治療・予防などを目的とするものではありません。服薬・治療等は必ず医師の指導のもとで行ってください。


 概要
自身の定期的な血液検査データをもとに、尿酸値と他の血液検査項目との統計的な相関を分析します。
具体的には数値データの傾向を可視化し、尿酸値に影響を与える他の検査項目との相関の強さから、その要因を考察します。

 分析データと方法



項目
内容




データ...]]></description><link>https://zenn.dev/28thjul2025/articles/1399eec96be131</link><guid isPermaLink="true">https://zenn.dev/28thjul2025/articles/1399eec96be131</guid><pubDate>Thu, 21 Aug 2025 09:00:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--doI_QoHe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B0%25BF%25E9%2585%25B8%25E9%25AB%2598%25E5%2580%25A4%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%25E3%2582%2592%25E6%258E%25A2%25E3%2582%258B%2520-%2520%25E8%25A1%2580%25E6%25B6%25B2%25E6%25A4%259C%25E6%259F%25BB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%259B%25B8%25E9%2596%25A2%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Lukas%2520Saito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkNDhlYmRhMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Lukas Saito</dc:creator></item><item><title><![CDATA[DjangoとOllamaでGPT-OSSをアプリに組み込む]]></title><description><![CDATA[
 DjangoとOllamaでGPT-OSSをアプリに組み込む

近年、ChatGPTをはじめとする生成AIの利用が一般化し、Webサービスや業務システムにも組み込まれるようになっています。クラウド提供のAI APIは手軽で高性能ですが、利用コスト、外部サーバーへのデータ送信によるプライバシーリスク、そしてインターネット接続に依存する といった課題も抱えています。
こうした背景から注目されているのが、ローカル環境で動作可能なオープンソースの大規模言語モデルです。自分のマシンで推論を行えば、クラウド依存を避けつつ、コストとセキュリティをコントロールできます。
この記事では、その一例として...]]></description><link>https://zenn.dev/kinniku_coder/articles/2025-08-21-running_gptoss_django_ollama</link><guid isPermaLink="true">https://zenn.dev/kinniku_coder/articles/2025-08-21-running_gptoss_django_ollama</guid><pubDate>Thu, 21 Aug 2025 00:16:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1O1b3G58--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%25E3%2581%25A8Ollama%25E3%2581%25A7GPT-OSS%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinniku_coder%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiODRlZjgzNDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kinniku_coder</dc:creator></item><item><title><![CDATA[AWS InspectorがJinja2のXSS脆弱性を検出していたので、autoescapeを使って対応]]></title><description><![CDATA[
 はじめに
先日、AWS Inspectorによる脆弱性スキャンで、Lambda関数のJinja2テンプレートエンジンにXSS（クロスサイトスクリプティング）の脆弱性が検出されました。
今回はその対応方法と、簡単な例を使ってどのように解決したかを残しておきます！

 結論
Jinja2のEnvironment()の引数にautoescape=Trueを追加する。
env = Environment(
    autoescape=True,  # この設定を追加
    loader=DictLoader({
        'greeting.html': '&lt;h1&gt;He...]]></description><link>https://zenn.dev/taroyamada5963/articles/d82cf9edd073c7</link><guid isPermaLink="true">https://zenn.dev/taroyamada5963/articles/d82cf9edd073c7</guid><pubDate>Wed, 20 Aug 2025 21:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wl6ZKHf---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Inspector%25E3%2581%258CJinja2%25E3%2581%25AEXSS%25E8%2584%2586%25E5%25BC%25B1%25E6%2580%25A7%25E3%2582%2592%25E6%25A4%259C%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581autoescape%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkOTBhMWI3M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota</dc:creator></item><item><title><![CDATA[技術調査 - OpenRemote]]></title><description><![CDATA[
 ■概要
OpenRemoteは、デバイスの統合、ルールの作成、データの分析と可視化を行う、100%オープンソースのIoTプラットフォームです。
システムの中心は、ManagerというJavaアプリケーションです。Managerは、システム内のアセット（資産）の現在状態を捉えるIoTコンテキストブローカーとして機能します。利用者は、スマートシティやエネルギー管理などの特定ドメインに合わせて、アセットや属性の動的なスキーマを柔軟に作成できます。
このプラットフォームは、すぐに使えるアプリケーションではなく、特定の要件に合わせてIoTソリューションを構築するためのフレームワークとして設計さ...]]></description><link>https://zenn.dev/suwash/articles/open_remote_20250821</link><guid isPermaLink="true">https://zenn.dev/suwash/articles/open_remote_20250821</guid><pubDate>Wed, 20 Aug 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D4xBm_hq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E8%25AA%25BF%25E6%259F%25BB%2520-%2520OpenRemote%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:suwa-sh%2520%252F%2520%25E8%25AB%258F%25E8%25A8%25AA%25E7%259C%259F%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNlQ0cjdIdGJrWG10aG42OE53dmlHWXBLcGI5VWQ5N3hnRS1aQnM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>suwa-sh / 諏訪真一</dc:creator></item><item><title><![CDATA[PythonとQuarryで24時間無料の自作Minecraftサーバーに挑戦してみた（接続・チャット編）　ver1.15]]></title><description><![CDATA[
 開発の経緯
皆さんは、「Minecraftサーバーを無料で24時間公開したい」と思ったことはありませんか？ しかし、一般的なMinecraftサーバーは最低でも4GB程度のRAMを要求するなど、それなりのスペックが必要なため、無料のホスティングサービスで動かすのは困難です。
そこで今回は、Pythonのライブラリを使って、より軽量な自作サーバーの開発に挑戦してみました。

 開発方法
サーバーの自作には、主にQuarryというPythonライブラリを使用します。

 Quarryとは
Quarryは、Minecraftのネットワークプロトコルを扱うためのライブラリです。公式ドキュメン...]]></description><link>https://zenn.dev/codseowner/articles/21c0f84a7045f4</link><guid isPermaLink="true">https://zenn.dev/codseowner/articles/21c0f84a7045f4</guid><pubDate>Wed, 20 Aug 2025 11:07:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PvqCgpgs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8Quarry%25E3%2581%25A724%25E6%2599%2582%25E9%2596%2593%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25AE%25E8%2587%25AA%25E4%25BD%259CMinecraft%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E6%258E%25A5%25E7%25B6%259A%25E3%2583%25BB%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E7%25B7%25A8%25EF%25BC%2589%25E3%2580%2580ver...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:codseowner%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>codseowner</dc:creator></item><item><title><![CDATA[PythonでパパッとL9直交表作成 – 分析準備編]]></title><description><![CDATA[本記事はコンジョイント分析連載の第1回です。
#1 PythonでパパッとL9直交表作成して分析準備← 今回
#2 PythonでL9直交表を使ったコンジョイント分析 – 効用値計算編 ← 次回予定
#3 Excelで購買確率シミュレーション編  ← 予定
#4 UI化（Streamlit等で応用） ← 予定

 📌はじめに
Python を使って L9直交表 を簡単に作成し、コンジョイント分析や実験計画法にすぐ使える形に整える方法を紹介します。
!
💡 ポイント
直交表作成の目的や因子・水準の整理を先に考えることで、分析の意味を損なわず、効率よく準備できます。



 📌直交表とは？
...]]></description><link>https://zenn.dev/swatchp/articles/efc38e8bb86bdc</link><guid isPermaLink="true">https://zenn.dev/swatchp/articles/efc38e8bb86bdc</guid><pubDate>Wed, 20 Aug 2025 10:10:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--peR1TYyr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2591%25E3%2583%2583%25E3%2581%25A8L9%25E7%259B%25B4%25E4%25BA%25A4%25E8%25A1%25A8%25E4%25BD%259C%25E6%2588%2590%2520%25E2%2580%2593%2520%25E5%2588%2586%25E6%259E%2590%25E6%25BA%2596%25E5%2582%2599%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Swatch-p%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5YTg2ZTBmZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Swatch-p</dc:creator></item><item><title><![CDATA[ChatGPTを使ってRustで新しいプログラミング言語をつくり始めた話]]></title><description><![CDATA[
 はじめに
「自分の言語をつくる」――プログラミングに携わっていると、一度は考えたことがある人も多いと思います。
今回、Rustを用いて新しいプログラミング言語を設計・実装し始めました。
目指すのは次のような言語です：

Pythonに近い記法で扱いやすい
高速に動作する
Web開発に特化した機能を標準で備える

言語名は Pyro（パイロ） としました。

 前提条件
cargoがインストールされている
Rustが動く環境である

 現時点でできること
現状はまだ最小限の機能しか実装していません。
以下のようなコード：

examples/app.pyro
print("Hello,...]]></description><link>https://zenn.dev/collabostyle/articles/9bd16a97291d01</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/9bd16a97291d01</guid><pubDate>Wed, 20 Aug 2025 06:32:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QX1rtea8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Rust%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E5%25A7%258B%25E3%2582%2581%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2594%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[「カテゴリカル変数の相関係数」をご存知ですか？]]></title><description><![CDATA[統計学には様々な分析手法がありますが、変数間の相関関係の強さを定量的に測るための「相関係数（ピアソンの積率相関係数）」は非常に有名でよく使われています。
通常、連続変数（量的変数）間の相関関係を定量評価するために使われる相関係数ですが、カテゴリカル変数（質的変数）に対して使える相関係数も存在します。
私が所属する株式会社 GA technologies ではマンションの設備の充実度のスコアリングといったことも行っており、マンションの設備データは「宅配ボックスの有無」「インターネット対応かどうか」「浴室のタイプ（"3 点ユニットバス", "2 点ユニットバス", "独立洗面台"）」など様々...]]></description><link>https://zenn.dev/gatechnologies/articles/2025-07-31-ordinalcorr</link><guid isPermaLink="true">https://zenn.dev/gatechnologies/articles/2025-07-31-ordinalcorr</guid><pubDate>Wed, 20 Aug 2025 04:23:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tq6qKvAg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2582%25AB%25E3%2583%2586%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25AB%25E3%2583%25AB%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E7%259B%25B8%25E9%2596%25A2%25E4%25BF%2582%25E6%2595%25B0%25E3%2580%258D%25E3%2582%2592%25E3%2581%2594%25E5%25AD%2598%25E7%259F%25A5%25E3%2581%25A7%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mitama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1OTcyZGY4ODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEGA%2520technologies%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gwZHZiWTg0aVd4ZGU4cU1Db2FFTWZ0Zk9SVWJncko1cDFtTjlSR3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitama</dc:creator></item></channel></rss>