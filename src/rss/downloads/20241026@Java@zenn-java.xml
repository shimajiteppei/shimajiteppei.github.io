<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 26 Oct 2024 02:25:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Javaの強みを徹底解説③：ガベージコレクション]]></title><description><![CDATA[こんにちは NSS の江口と申します。前回の記事（JITコンパイラ）に引き続きJavaの話となります。
今回は ガベージコレクション について話していこうと思います。前回と同様に今回記載している内容はJava21に準拠しています。

 ガベージコレクションとは

Heap領域内に確保されたメモリを自動的に解放する仕組みです。誰からも参照されなくなったメモリを対象にします。
現在の多くのプログラミング言語では当たり前にサポートされていることが多いです。（贅沢ですね。）

 ガベージコレクションの種類
では具体的にどうやってメモリを片付けるのかという話ですが、これという一つに決まっているわけ...]]></description><link>https://zenn.dev/nss_fs_eng/articles/c39ea03c8d052a</link><guid isPermaLink="true">https://zenn.dev/nss_fs_eng/articles/c39ea03c8d052a</guid><pubDate>Thu, 24 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MTWaokai--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E5%25BC%25B7%25E3%2581%25BF%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E2%2591%25A2%25EF%25BC%259A%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NSS%2520%25E9%2587%2591%25E8%259E%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjk2ODBmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NSS 金融エンジニアリンググループ</dc:creator></item><item><title><![CDATA[Tomcatのデフォルトページを非表示にしたい]]></title><description><![CDATA[
 はじめに
Tomcatのインストール・初期設定を行い、アクセスしたところデフォルトページ（ウェルカムページ）が表示されていました。
ユーザ側にTomcat使っていることがモロバレでセキュリティ上もあまりよろしくないし、何より格好悪いので非表示にしたいと思います。

 環境

OS : Ubuntu
Tomcat : 9.0.58


 結論
表示元のindex.htmlを空にするだけ！

 やり方

バックアップファイルを作成する
htmlファイルは/var/lib/tomcat9/webapps/ROOT/index.htmlにありました。

cp /var/lib/tomcat9...]]></description><link>https://zenn.dev/boku_uchujin/articles/dc68a8ebce1f15</link><guid isPermaLink="true">https://zenn.dev/boku_uchujin/articles/dc68a8ebce1f15</guid><pubDate>Thu, 24 Oct 2024 14:01:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EJ5meyIv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tomcat%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E9%259D%259E%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:boku_uchujin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYWQ4MmM5YjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>boku_uchujin</dc:creator></item><item><title><![CDATA[【Java / SpringBoot】Dockerfileから作られたイメージをもとにコンテナを起動し疎通確認を行うまでの流れ]]></title><description><![CDATA[
 はじめに
この記事では、簡単なSpringbootアプリをdockerで動かす方法や、その際に使用するdockerコマンドなど、疎通確認までに必要な内容を記載しています。

 この記事の対象者
・Dockerについてあまり知らない方、もしくは知識を深めたい方
・SpringBootアプリでdockerコンテナを作成してみたい方
・最近Dockerに触れておらず、復習も兼ねて確認したい方

 開発環境
・Java 21
・SpringBoot 3.3.4
・macOS 14.6.1
・Eclipse_2024-06

 そもそもDockerとは
ソフトウェアの開発やデプロイを効率化する...]]></description><link>https://zenn.dev/keita09/articles/0b09fbcb9ad3c3</link><guid isPermaLink="true">https://zenn.dev/keita09/articles/0b09fbcb9ad3c3</guid><pubDate>Wed, 23 Oct 2024 16:04:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yTjGNn-3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%2520%252F%2520SpringBoot%25E3%2580%2591Dockerfile%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%2589%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E7%2596%258E%25E9%2580%259A%25E7%25A2%25BA%25E8%25AA%258D%25E3%2582%2592%25E8%25A1%258C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjZGUxZTY1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita</dc:creator></item><item><title><![CDATA[Javaを勉強してみたPart2]]></title><description><![CDATA[
 前回からの続き・・・
・今回はオブジェクト指向的な考え方を勉強してみた
・PythonやC#で既になんとなくは知ってるのでちょっと飛ばし気味
!
more
「文字列をInt型に変換」
int i = Integer.parseInt(文字列);
「文字列をDouble型に変換」
double i = Integer.parseDouble(文字列);


 メソッド
・一言で「処理する関数的なもの」

 オーバーロード
・存在しているメソッドと名前が同じメソッドを宣言すること。
・引数の個数で判別する
具体的に…
【メソッド名・引数の型・引数の個数】この３つ（シグネチャ）の要素が考慮...]]></description><link>https://zenn.dev/picaneru/articles/f1de28dfbe8125</link><guid isPermaLink="true">https://zenn.dev/picaneru/articles/f1de28dfbe8125</guid><pubDate>Wed, 23 Oct 2024 14:05:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O7iHU9l---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259FPart2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Picaneru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpZU0J1MnpyQ2dKdE5RazdabjByWnVRREowSmczZU1JNkJDbmhOREtxWWVVVF93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Picaneru</dc:creator></item><item><title><![CDATA[自分用　Javaの予約語]]></title><description><![CDATA[abstract: 抽象クラスや抽象メソッドを定義するために使用される。
assert: プログラムの実行時に条件をチェックし、条件が偽の場合にエラーを発生させるために使用される。
boolean: 真理値（true または false）を表すデータ型。
break: ループや switch 文を終了するために使用される。
byte: 8ビットの整数を表すデータ型。
case: switch 文の各選択肢を定義するために使用される。
catch: 例外を捕捉するためのブロックを定義するために使用される。
char: 16ビットのUnicode文字を表すデータ型。
class: 新しいクラ...]]></description><link>https://zenn.dev/sanagi/articles/cd88e4f2f80b50</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/cd88e4f2f80b50</guid><pubDate>Wed, 23 Oct 2024 13:36:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KZxazI0s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2580%2580Java%25E3%2581%25AE%25E4%25BA%2588%25E7%25B4%2584%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item><item><title><![CDATA[Javaの強みを徹底解説②：JITコンパイラ]]></title><description><![CDATA[こんにちは NSS の江口と申します。前回の記事（Javaの強みを徹底解説①：Javaのいいところ） に引き続きJavaの話となります。
今回はJITコンパイラについて話していこうと思います。
なお、今回記載している内容は Java21 に準拠しております。

 JITコンパイラとは
JIT とは Just In Time の略で言葉の通り 必要に応じたコンパイラ という意味になります。
Javaもいわゆるコンパイル言語なのですが、Write once, run anywhereを実現するために以下のようにコンパイルコードから動的にネイティブコードによる実行に変換しています。

コンパイ...]]></description><link>https://zenn.dev/nss_fs_eng/articles/70a969eb51969b</link><guid isPermaLink="true">https://zenn.dev/nss_fs_eng/articles/70a969eb51969b</guid><pubDate>Tue, 22 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6Av2rB24--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E5%25BC%25B7%25E3%2581%25BF%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E2%2591%25A1%25EF%25BC%259AJIT%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NSS%2520%25E9%2587%2591%25E8%259E%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjk2ODBmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NSS 金融エンジニアリンググループ</dc:creator></item><item><title><![CDATA[Spring boot 検索]]></title><description><![CDATA[
 Spring bootで検索処理を実装する際に調べたものをメモ

 1. 動的にSQLを生成する場合
使用ケース
検索条件が可変で、複雑な条件を動的に追加する必要がある場合。
使用技術
Criteria API: プログラム的にクエリを構築。
利点
柔軟性が高く、条件を自由に変更できる。
コンパイル時に型安全が確保される。

// CriteriaBuilderを使用してクエリを作成するためのビルダーオブジェクトを取得
CriteriaBuilder cb = entityManager.getCriteriaBuilder();

// Jobエンティティを対象にしたクエリオブジェ...]]></description><link>https://zenn.dev/sanagi/articles/14c44118acca55</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/14c44118acca55</guid><pubDate>Tue, 22 Oct 2024 14:30:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BtqODPKE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Spring%2520boot%2520%25E6%25A4%259C%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item><item><title><![CDATA[Javaを勉強してみたPart1]]></title><description><![CDATA[
 初めに
なんとなくJavaを触ったことはあったけど、改めてJavaを勉強するので自分の備忘録として作成します。

 学習のまとめ

 エスケープシーケンス
・プログラムの文字列では改行やタブを表現するのに特殊な文字を使って表現する
\n　改行
\t　タブ
\r　復帰（キャリッジリターン）

 データの型
char　文字型
boolean　真偽
byte　バイト
short　整数
int　整数
long　float　double　小数

 ペランド
・演算子による演算の対象となるもの

 キャスト
・データの型を変換する
double型の変数dをint型に変換する
double d =...]]></description><link>https://zenn.dev/picaneru/articles/44451b8fa46ecf</link><guid isPermaLink="true">https://zenn.dev/picaneru/articles/44451b8fa46ecf</guid><pubDate>Tue, 22 Oct 2024 14:26:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WDcWLS2K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259FPart1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Picaneru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpZU0J1MnpyQ2dKdE5RazdabjByWnVRREowSmczZU1JNkJDbmhOREtxWWVVVF93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Picaneru</dc:creator></item><item><title><![CDATA[Insomnia入門：コレクションのエクスポートと公開方法]]></title><description><![CDATA[InsomniaはAPI開発者にとって非常に便利なツールですが、コレクションを他のチームメンバーと共有し、公開できるようにする方法は少し複雑かもしれなせん。ここでは、コレクションをエクスポートし、公開する手順を詳しくご説明いたします。


 1. コレクションのエクスポート
まずは、Insomniaのコレクションをエクスポートする方法をご説明いたします。


Insomniaを開き、エクスポートしたいコレクションを選択します。
コレクション名の右上にある三点リーダーをクリックし、「Export (JSON)」を選択します。
ダイアログが表示されるので、適切な場所にJSONファイルを保存す...]]></description><link>https://zenn.dev/ayakasweet/articles/daf9b74c860086</link><guid isPermaLink="true">https://zenn.dev/ayakasweet/articles/daf9b74c860086</guid><pubDate>Tue, 22 Oct 2024 11:40:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aFYXOVU1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Insomnia%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A8%25E5%2585%25AC%25E9%2596%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:AyakaSweet%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYjVlNTc2ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>AyakaSweet</dc:creator></item><item><title><![CDATA[Getting started with Testcontainers for Java をやってみる]]></title><description><![CDATA[
 はじめに
Testcontainers というのを知ったので試しに Java でやってみようと思います。

 Testcontainers とは？
https://testcontainers.com/
公式では以下のように書かれています。
実際の依存関係を持つユニットテスト
Testcontainersは、データベース、メッセージブローカー、ウェブブラウザなど、Dockerコンテナ
で実行できるものなら何でも、使い捨ての軽量インスタンスを提供するためのオープンソースライブラリ
です。
また Getting started with Testcontainers for Java の...]]></description><link>https://zenn.dev/rescuenow/articles/ad57b1637f206a</link><guid isPermaLink="true">https://zenn.dev/rescuenow/articles/ad57b1637f206a</guid><pubDate>Tue, 22 Oct 2024 02:17:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zg5UdX4D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Getting%2520started%2520with%2520Testcontainers%2520for%2520Java%2520%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takeuchi_kazuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZGM2NTEzMmUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takeuchi_kazuya</dc:creator></item><item><title><![CDATA[【Javaプログラム初歩】野球の審判シミュレータ]]></title><description><![CDATA[野球審判のシミュレータを作成しました。ちょうど、ジャイアンツ対ベイスターズの試合を見ていて、カウントのロジックをプログラムで作ってみたいと思った次第です。

 プログラムの概要
このプログラムは、ユーザーからの入力に基づいて「ボール」「ストライク」「アウト」をカウントし、それに応じてメッセージを表示します。ボールが4つになるとフォアボール、ストライクが3つになるとバッターアウト、アウトが3つになるとチェンジが発生します。

 プログラム全文
class BaseballCount {
    public static void main(String[] args) {
       ...]]></description><link>https://zenn.dev/taiyok/articles/4351aeb64ce153</link><guid isPermaLink="true">https://zenn.dev/taiyok/articles/4351aeb64ce153</guid><pubDate>Tue, 22 Oct 2024 01:43:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FXRgUfn9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E5%2588%259D%25E6%25AD%25A9%25E3%2580%2591%25E9%2587%258E%25E7%2590%2583%25E3%2581%25AE%25E5%25AF%25A9%25E5%2588%25A4%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%2583%25E3%2582%25AF%25E5%25B1%258B%2540%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5NmJjOTA0YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マック屋@ソフトウェアエンジニア</dc:creator></item><item><title><![CDATA[メソッドやフィールドからドット演算子の型を考える(おまけでポインターも)]]></title><description><![CDATA[!
説明にはJavaおよびHaskellを用います。
おまけではC/C++のポインターに触れます。


 この記事の目的
今回の記事では普段あまり考えない式に登場する.(ドット演算子)の型についての独自の考えを述べていきます。ただし、これは「ドット演算子には型がある」という主張を行うものではなく、「もし、ドット演算子がこのような型を持つ場合には辻褄があう」程度の主張です[1]。
そして、その上でドット演算子と辻褄があう型を持つような演算子を関数型言語で用いた場合のコードの比較を行い、関数型言語のアイデアとそれ以外の言語のアイデアの橋渡しとなることがこの記事の目的です。

 メソッド・チェ...]]></description><link>https://zenn.dev/kinumiya/articles/f2c881cbc69812</link><guid isPermaLink="true">https://zenn.dev/kinumiya/articles/f2c881cbc69812</guid><pubDate>Mon, 21 Oct 2024 15:29:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U-uwCBYn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2584%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2583%2589%25E3%2583%2583%25E3%2583%2588%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2528%25E3%2581%258A%25E3%2581%25BE%25E3%2581%2591%25E3%2581%25A7%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2582%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B5%25B9%25E5%25AE%25AE%25E7%25B4%2580%25E4%25BB%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbFJ6bEwyWTBTZGRLRF9MSzhQU0xvRzRaZk5IMGdGdGRMSVl1Q3U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>絹宮紀仁</dc:creator></item><item><title><![CDATA[バイナリデータのパースに便利なKaitai Struct]]></title><description><![CDATA[
 はじめに
バイナリデータをパースするためのライブラリである『Kaitai Struct』について紹介します。
IoTのサービスにおいては、機器から送信されてくるデータはJSONのような人に優しいフォーマットではなく、独自のバイナリフォーマットであるシーンがあります。
筆者らが開発・運営している「Cariot（キャリオット）」というサービスでは、サーバ側のコードをJavaで開発していますが、バイナリデータのパースに関するデファクトのJavaライブラリというものはありません。その中で、「Kaitai Struct」は使い心地がよく、利用を始めて少し時間も経ち、慣れてきたので、この機会に紹...]]></description><link>https://zenn.dev/cariot_dev/articles/9a2ccf501c80c3</link><guid isPermaLink="true">https://zenn.dev/cariot_dev/articles/9a2ccf501c80c3</guid><pubDate>Mon, 21 Oct 2024 09:45:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uIbawlyp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAKaitai%2520Struct%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_endo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMjE5NTM5MjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Cariot%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjMDRiZjE3ZDUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_endo</dc:creator></item><item><title><![CDATA[[個人開発] 立て替え管理アプリを開発しました]]></title><description><![CDATA[
 概要
個人開発でiOSアプリを作りました。開発開始から半年程度経過しているため忘れている部分は多いですが、思い出しながら背景や使用した技術などを書いていきます！

 作ったアプリ: Tateca - ずっと使える立て替え管理アプリ
Tatecaは、友達やカップルとの立て替えを簡単に管理できるアプリです。一度グループを作成すれば、そのまま長期的に使い続けられます。グループ内で立て替えの記録を追加し合うことで、実質的な返済を行います。
個人的にはかなりアイコンがお気に入りです！


 App Store
ダウンロードはこちら
https://apps.apple.com/app/id65...]]></description><link>https://zenn.dev/taka_noiri/articles/9d5dd2197f1bac</link><guid isPermaLink="true">https://zenn.dev/taka_noiri/articles/9d5dd2197f1bac</guid><pubDate>Mon, 21 Oct 2024 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--116W1ouc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%255D%2520%25E7%25AB%258B%25E3%2581%25A6%25E6%259B%25BF%25E3%2581%2588%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZjBhN2YzMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taka</dc:creator></item><item><title><![CDATA[Javaの強みを徹底解説①：Javaのいいところ]]></title><description><![CDATA[こんにちは NSS の江口と申します。
NSSでは入社の際に新人研修としてC言語とJavaを学習します。
その後現場に出てからも ずっとJavaを利用してまいりました。
そのまま 15 年、特に疑問を抱くことなく過ごしてきたのですが、様々な言語が登場しては下火になっている中、根強い人気を誇っています。
私自身Javaは結構好きでこれからも発展してほしいので、改めてなぜこれほどまでに Java が強いのかを考察してまいりたいと思います。

 理由① シェア
IPAが発表している資料によると、開発プロダクトの 42.4% が Java で動作しているそうです。
ソフトウェア開発 分析データ集...]]></description><link>https://zenn.dev/nss_fs_eng/articles/8b0ff2821276ff</link><guid isPermaLink="true">https://zenn.dev/nss_fs_eng/articles/8b0ff2821276ff</guid><pubDate>Sun, 20 Oct 2024 23:00:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z42iWiyw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E5%25BC%25B7%25E3%2581%25BF%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E2%2591%25A0%25EF%25BC%259AJava%25E3%2581%25AE%25E3%2581%2584%25E3%2581%2584%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NSS%2520%25E9%2587%2591%25E8%259E%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjk2ODBmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NSS 金融エンジニアリンググループ</dc:creator></item><item><title><![CDATA[Java　超入門 ~1~]]></title><description><![CDATA[
 特徴

 1.コンパイラ言語
機械語に一括変換する事で処理が高速

 2.オブジェクト指向開発
「　データと処理　」を1セットとして
プログラムを組み立ていく開発手法に適した言語。
(処理を部品化してそれらを組み合わせる事で1つのプログラムを構築)

 3.OSを選ばない
javaは、windows,macos,Linuxなど
どのプラットフォームでも動く
(なんで？JVM上で動作するから。)

 JVM
JavaVirtualMachine
Java仮想マシンの事

 JVM言語
相互運用性があるので、ScalaやKotkinのコードをjavaで使用できる

 環境構築に必要なもの...]]></description><link>https://zenn.dev/azukidayo/articles/8d61602ba63326</link><guid isPermaLink="true">https://zenn.dev/azukidayo/articles/8d61602ba63326</guid><pubDate>Sun, 20 Oct 2024 09:31:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nQ3Bwr8Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Java%25E3%2580%2580%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2520%7E1%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:azuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2YTFiMDlmMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>azuki</dc:creator></item><item><title><![CDATA[KMPで「import shared」が機能しない時の対処法]]></title><description><![CDATA[
 はじめに
Android StudioでKotlin Multiplatform(KMP)を使用してiOSアプリを作成し、Xcodeでそのアプリを開いた際にimport sharedでモジュールが正しくインポートされず、エラーが発生してしまいました。

ContentView（2行目でエラー発生）
import SwiftUI
import shared

struct ContentView: View {
	let greet = Greeting().greet()

	var body: some View {
		Text(greet)
	}
}

struct Conte...]]></description><link>https://zenn.dev/joho0724/articles/sankaku0724-newcreate34</link><guid isPermaLink="true">https://zenn.dev/joho0724/articles/sankaku0724-newcreate34</guid><pubDate>Sat, 19 Oct 2024 03:00:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qhnqLQuW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:KMP%25E3%2581%25A7%25E3%2580%258Cimport%2520shared%25E3%2580%258D%25E3%2581%258C%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2582%2593%25E3%2581%258B%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkODI3MDRjMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さんかく</dc:creator></item><item><title><![CDATA[Eclipse の Maven ビルドで MyBatis Generator を実行する]]></title><description><![CDATA[
 はじめに
MyBatis Generator は、データベースのテーブル情報をもとにSQLを実行するためのコードを自動生成するものです。モデルクラス、Mapperインターフェイスクラス、そしてMapper XMLファイルなどを自動生成してくれるため、コード作成が楽になります🐤
今回は、Eclipse の Maven ビルドで MyBatis Generator を実行する方法を解説します。

 前提

使用するデータベースおよびテーブルは作成済み（今回は Oracle を使用しています）
pom.xml に MyBatis Generator ライブラリの使用が記載済み

  &lt...]]></description><link>https://zenn.dev/azunyan/articles/4a53e600994613</link><guid isPermaLink="true">https://zenn.dev/azunyan/articles/4a53e600994613</guid><pubDate>Thu, 17 Oct 2024 03:53:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p7s1GmQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Eclipse%2520%25E3%2581%25AE%2520Maven%2520%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A7%2520MyBatis%2520Generator%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25BF%25E3%2582%258A%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlODc0NGRhYmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えみり〜</dc:creator></item><item><title><![CDATA[Java StreamAPIに慣れる ~デバッグ方法の紹介~]]></title><description><![CDATA[
 はじめに
Rehab for JAPANレセプトバックエンドエンジニアの荒金です。
レセプトのビジネスロジック部ではJava StreamAPIがよく用いられています。
StreamAPIは便利かつコードの記載量を減らせますが、コレクションに対する処理を一気に行ってしまうため、ループ毎の処理を追いたい時には一手間必要となります。
この記事では、業務を通して学べたJava StreamAPIのデバッグ方法についていくつか紹介します。

 ターゲット

StreamAPIのデバッグ方法が分からない方
StreamAPIを触り始めた方、抵抗感ある方
IntelliJ IDEAの「Strea...]]></description><link>https://zenn.dev/rehabforjapan/articles/stream_debug</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/stream_debug</guid><pubDate>Thu, 17 Oct 2024 03:07:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZCmsWk_Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520StreamAPI%25E3%2581%25AB%25E6%2585%25A3%25E3%2582%258C%25E3%2582%258B%2520%7E%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:aragane%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwYTQ5Y2UwZjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aragane</dc:creator></item><item><title><![CDATA[Java spring bootログ出力 Apache Log4j2]]></title><description><![CDATA[
 Apache Log4j2について
ネットに良いの無くって3時間も詰まったためメモとして残します。
まず、Apache Log4j2とはJavaアプリケーション向けのロギングライブラリ。
ロギング（logging)、コンピューターの動作記録やアクセス履歴などを定期的に記録することです
柔軟なログ出力（コンソール、ファイル、データベースなど）
異なるログレベル（INFO、DEBUG、ERRORなど）のサポート
設定の柔軟性（XML、JSON、YAML、プロパティファイル）
高パフォーマンスな非同期ロギング
前のバージョンは脆弱性があったため最新バージョンを使ってください

 Gradl...]]></description><link>https://zenn.dev/sanagi/articles/e8e95ed2af9139</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/e8e95ed2af9139</guid><pubDate>Wed, 16 Oct 2024 11:10:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WAeQmlc---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520spring%2520boot%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25BA%25E5%258A%259B%2520Apache%2520Log4j2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item></channel></rss>