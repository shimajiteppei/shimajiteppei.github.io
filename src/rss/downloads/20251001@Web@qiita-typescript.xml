<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-10-01T18:18:53+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2087430</id>
    <published>2025-10-01T18:18:53+09:00</published>
    <updated>2025-10-01T18:18:53+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hal_mkiin/items/8a0f648481156a4d053a"/>
    <url>https://qiita.com/hal_mkiin/items/8a0f648481156a4d053a</url>
    <title>【TanStack Router × Vitest】`npm run test`を実行時に発生した`Client-only API called on the server side`の解決方法</title>
    <content type="text">はじめに
Tanstack RouterとVitestを利用してテスト実行時に発生したエラー解決方法についてまとめたものになります。

エラーと発生時の環境
以下の記事で紹介されているTanstack RouterとVitestを利用したIntegrationテストを作成...</content>
    <author>
      <name>hal_mkiin</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2087416</id>
    <published>2025-10-01T17:36:21+09:00</published>
    <updated>2025-10-01T17:36:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/penguindaruma/items/2781e8b9a3062c1767de"/>
    <url>https://qiita.com/penguindaruma/items/2781e8b9a3062c1767de</url>
    <title>【ポケモンで学ぶ】JavaScriptのin演算子を完全理解！プロパティ判定でエラーを回避する方法</title>
    <content type="text">はじめに
JavaScriptやTypeScriptでまあまあ見かける "in" 演算子。
なんとなく使ってたけどちゃんとは理解してなかったので、ポケモンを例にまとめてみた。
参考：みんな大好きMDNのドキュメント

ざっくりとした説明
"in" は、指定したプロパ...</content>
    <author>
      <name>penguindaruma</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2087217</id>
    <published>2025-10-01T08:25:09+09:00</published>
    <updated>2025-10-01T08:25:09+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/roll1226/items/55becd0bd5bda155437c"/>
    <url>https://qiita.com/roll1226/items/55becd0bd5bda155437c</url>
    <title>TypeScriptでスプレッド構文の利用にはご注意を</title>
    <content type="text">スプレッド構文とは
...を使用して配列の要素を展開出来るもんです
多くの方が使用しているかと思われます

何に注意が必要なのか
下記コードを見てエラーになるだろ、感じる方がいるかと思われます
ですが予想に反してエラーにならず実行が出来てしまいます
const us...</content>
    <author>
      <name>roll1226</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2087029</id>
    <published>2025-09-30T19:47:25+09:00</published>
    <updated>2025-09-30T19:47:25+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tomato_otamoT/items/7b3ed527c9c5612329fb"/>
    <url>https://qiita.com/Tomato_otamoT/items/7b3ed527c9c5612329fb</url>
    <title>React.FragmentでDOMをクリーンに保つ</title>
    <content type="text">React では複数要素を返すときにラッパーが必要になる
React でコンポーネントを作っていると、1つのコンポーネントは必ず「単一の要素」を返す必要がある、というルールに必ずぶつかります。
例えばこんなコードは「返すのは1つの要素にしてください」と怒られてしまいます。...</content>
    <author>
      <name>Tomato_otamoT</name>
    </author>
  </entry>
</feed>
