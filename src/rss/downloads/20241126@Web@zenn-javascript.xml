<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 26 Nov 2024 05:04:54 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Googleタグマネージャーのデバッグ方法]]></title><description><![CDATA[＜本記事のターゲット層＞

Googleタグマネージャー初心者
カスタムHTMLを自作したい人
カスタムHTMLのデバッグのやり方が分からない人
Googleタグマネージャーのプレビュー使い方が分からない人

前回記事：
Googleタグマネージャーのタグの発火順序

 1. はじめに
前回、Googleタグマネージャーのタグの発火順序についてご説明をさせて頂きました。
今回は、カスタムHTMLでJavaScriptのデバッグ方法に困っている人、Googleタグマネージャーのプレビューの使い方が分からない人向けに解説をしていきたいと思います。
開発者の方でもIDE（Integrated ...]]></description><link>https://zenn.dev/ochtum/articles/99cb2fa5150483</link><guid isPermaLink="true">https://zenn.dev/ochtum/articles/99cb2fa5150483</guid><pubDate>Tue, 26 Nov 2024 03:34:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eWVAVzmD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%25E3%2582%25BF%25E3%2582%25B0%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2582%25AF%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlN2Q3YWZkMjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オクトゥム</dc:creator></item><item><title><![CDATA[AWS SDKのライフサイクルをfor JavaScript v2 & v3から辿る]]></title><description><![CDATA[
 はじめに
AWS SDKは、AWSサービスをプログラムから実行するための公式ライブラリです。JavaやPythonなど、多くの言語に提供されています。
SDKにはライフサイクルがあり、新しいメジャーバージョンのサポートとともに、古いバージョンはメンテナンスモードへと移行し、やがてサポート終了となります。
この記事では、AWS SDK for JavaScriptのv2とv3を例に、そのライフサイクルを辿っていきます。

 AWS SDK for JavaScript v2 &amp; v3から辿る
JavaScript用のSDKは、2018〜2025年にかけてv2からv3に切り替えが...]]></description><link>https://zenn.dev/ncdc/articles/fee65aa161e96c</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/fee65aa161e96c</guid><pubDate>Tue, 26 Nov 2024 00:27:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ozMbF35v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520SDK%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2595%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AB%25E3%2582%2592for%2520JavaScript%2520v2%2520%2526%2520v3%25E3%2581%258B%25E3%2582%2589%25E8%25BE%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:K%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3OTg0NTdlYjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>K</dc:creator></item><item><title><![CDATA[PrettierとESLint(Flat Config)で最低限の設定をする]]></title><description><![CDATA[
 概要
2024年11月現在、初学者向けのESlintのFlat Config(eslint.config.js)とPrettierを組み合わせた設定方法がなかった(見つけられなかった)のでハンズオン形式で紹介します。

 ESLint(Flat Config)とは
ESLintの設定ファイルはこれまで.eslintrcを使用してきましたが、バージョン9以降eslint.config.jsで設定するようになりました。このeslint.config.jsで設定することをFlat Configと呼ぶそうです。
ただし、.eslintrcとeslint.config.jsでは設定の記述方法が...]]></description><link>https://zenn.dev/holypotter0304/articles/d58ba15caac660</link><guid isPermaLink="true">https://zenn.dev/holypotter0304/articles/d58ba15caac660</guid><pubDate>Mon, 25 Nov 2024 15:00:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wKJ7oRE---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prettier%25E3%2581%25A8ESLint%2528Flat%2520Config%2529%25E3%2581%25A7%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2582%258A%25E3%2581%25BD%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZTZlMjBlZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほりぽた</dc:creator></item><item><title><![CDATA[【マサカリ求む】二次元の物体にかかる空気抵抗が完全に理解できたかもしれない話]]></title><description><![CDATA[
 三行で
既知の二次元図形にかかる空気抵抗を計算したい！！！
だから自分なりに方法を考えてみました！！！
結果は使えるか正直微妙なところです！！！

 注釈
この記事は三年ほど前に投降した記事のブラッシュアップ版となります。

 思想の話

 何故にそんなことを考えたの？
当初の目的は、「空気抵抗を最小限にするにはどんな断面がいいの？」という疑問に対する答えでした。
そのためにこの記事を参考にジュコーフスキー翼を作ってみて、その抗力を調べようと思ったのですが、
「抗力係数が分からねぇ…」という根本的な問題にぶち当たりました(当然ですが)。

 で、それじゃあどうやって抗力を求めるの？
...]]></description><link>https://zenn.dev/onlinsanity/articles/6444e959dbf87c</link><guid isPermaLink="true">https://zenn.dev/onlinsanity/articles/6444e959dbf87c</guid><pubDate>Mon, 25 Nov 2024 12:51:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nx4F20c0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Toru%2520Kabasawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBMFI0MHlxc3NqZWxFQ01HSjR4SVBiTkZmSnBXTlFUc0E3VXhiPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Toru Kabasawa</dc:creator></item><item><title><![CDATA[SECCON CTF 13 - writeup]]></title><description><![CDATA[

脆弱エンジニアでSECCON CTF 13に参加し、全体結果は38/653、国内結果は10/303でした。国内決勝に進めるチーム数は全部で8チームで、国内1位のieraeは国際決勝に行く関係で、9位までが進めることとなります。つまり、あと一歩及ばず、でした。
SECCON BeginnerからCTFにハマって、SECCON本戦に向けてほぼ毎週末CTFをやってきたので、本当に本当に悔しい気持ちでいっぱいです。あとちょっとうまくできてればな、と後悔している点がたくさんあります。また来年再トライして絶対決勝行ってやります！
チームはほぼ全員揃っていた+アスースンが行ったリアルトリリオンゲー...]]></description><link>https://zenn.dev/tchen/articles/0efc8f9679a818</link><guid isPermaLink="true">https://zenn.dev/tchen/articles/0efc8f9679a818</guid><pubDate>Mon, 25 Nov 2024 12:03:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nUdl9Wn9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:SECCON%2520CTF%252013%2520-%2520writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-chen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndGbmw3UUNSVkZRdDdIRXpZYm84alBZQW0xYzhXTXhUc0c2UkgzMXRjV3NsMll3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-chen</dc:creator></item><item><title><![CDATA[JSConf JP 2024に初スポンサー＆初参加してきました]]></title><description><![CDATA[2024年11月23日に行われた JSConf 2024 に初参加してきたレポートです！
現地の空気感や印象に残ったセッション、所属会社がスポンサーした感想など自分が感じたことを書いています。よかったら読んでみてください！

 自己紹介
TimeTreeでフロントエンドエンジニアとして働いている @fujikky です。
JavaScriptなどのフロントエンド関連の技術は前職のヤフー時代から触れ合っていましたが、2012〜2015年ぐらいは主にiOS開発を行っていて、2016年ごろから再びフロントエンド開発に戻ってきました。2024年からはスタッフエンジニアとしてフロントエンドの技術相...]]></description><link>https://zenn.dev/timetree/articles/66bb00f7fa1e3c</link><guid isPermaLink="true">https://zenn.dev/timetree/articles/66bb00f7fa1e3c</guid><pubDate>Mon, 25 Nov 2024 11:10:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--91nUXHXl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSConf%2520JP%25202024%25E3%2581%25AB%25E5%2588%259D%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25EF%25BC%2586%25E5%2588%259D%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fujikky%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MDU4MGVlNDguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TimeTree%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2dFRjSGtRdmJhSkFoekM4SzhyVkwxaTBPYTE3c3FlR2xlV3FhOHc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fujikky</dc:creator></item><item><title><![CDATA[【JavaScript × Terraform】次世代のモダン AltJS「JS.tf」の紹介]]></title><description><![CDATA[人類は HCL (Hashicorp Configuration Language) で JavaScript を記述するべきなので、次世代のモダン AltJS である「JS.tf」をリリースしました。
https://github.com/koki-develop/terraform-provider-js
https://registry.terraform.io/providers/koki-develop/js/latest/docs
例えば次のコードは標準出力に hello world と出力する JS.tf のプログラムです。

example.tf
data "js_fun...]]></description><link>https://zenn.dev/terraform_jp/articles/jstf-introduction</link><guid isPermaLink="true">https://zenn.dev/terraform_jp/articles/jstf-introduction</guid><pubDate>Mon, 25 Nov 2024 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k7kumZFu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%2520%25C3%2597%2520Terraform%25E3%2580%2591%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%2520AltJS%25E3%2580%258CJS.tf%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:koki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYzYyOWJmZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:terraform-jp%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hiNFlHemhPbVVNRThrZjV5Z01DakFoOWsxeEtCTzRLdWdVMExDQWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[この世でいちばん分かりやすいPromiseの用語1分図解 (「resolvedだがsettledではない」とは)]]></title><description><![CDATA[
 図解

すべてのPromiseは​pending(処理中)/settled(完了した)の​2つの状態のいずれかに属します​


settled(完了した)はfullfilled(満たされた、成功した)/rejected(拒否された、失敗した)のいずれかに分類されます


また、resolved(解決された)​という状態もあります

他のPromiseに処理を委譲した(=locked in)ときのみ「解決したが、完了していない」​という状態になります





 locked in

locked inは「他のPromiseに処理を委譲している」状態です。
「あなたのタスクを部下に丸投...]]></description><link>https://zenn.dev/alma/articles/b7af6ae4e8a133</link><guid isPermaLink="true">https://zenn.dev/alma/articles/b7af6ae4e8a133</guid><pubDate>Mon, 25 Nov 2024 08:10:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JlPwe7zm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2581%25AE%25E4%25B8%2596%25E3%2581%25A7%25E3%2581%2584%25E3%2581%25A1%25E3%2581%25B0%25E3%2582%2593%25E5%2588%2586%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584Promise%25E3%2581%25AE%25E7%2594%25A8%25E8%25AA%259E1%25E5%2588%2586%25E5%259B%25B3%25E8%25A7%25A3%2520%2528%25E3%2580%258Cresolved%25E3%2581%25A0%25E3%2581%258Csettled%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E3%2580%258D%25E3%2581%25A8%25E3%2581%25AF%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Alma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXJlWlFRMk8tVEpDb2x1WFh6bWtnMVlZRVJKVjN6bXotZnpEallvdm9MSmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Alma</dc:creator></item><item><title><![CDATA[NodeCGでスポーツコーダ#4:環境構築(ESLintの設定)]]></title><description><![CDATA[[重要]今回の設定は難しいので、飛ばしても問題ありません

 概要
NodeCGを使ってスポーツコーダが作れるか検証していきます。
今回はESLintを設定して、エラー箇所を素早く発見します。
また、前回導入したPrettierとESLintは機能が一部競合するのでエラーが起きないようにします。

 ESLintとは
ESLintは、JavaScriptやTypeScriptのコードを静的解析してエラーやコードスタイルの問題を検出し、修正を提案してくれるツールです。端的にいうと「コードをチェックして間違いや汚い部分を教えてくれる賢い先生」です。
ただし、コード整形はPrettierで行う...]]></description><link>https://zenn.dev/holypotter0304/articles/4de1f6c6c6d123</link><guid isPermaLink="true">https://zenn.dev/holypotter0304/articles/4de1f6c6c6d123</guid><pubDate>Mon, 25 Nov 2024 05:51:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mb5nuaco--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NodeCG%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25234%253A%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528ESLint%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2582%258A%25E3%2581%25BD%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZTZlMjBlZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほりぽた</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#２ Lenis Smooth Scroll】]]></title><description><![CDATA[
 【#２ Lenis Smooth Scroll】
YouTube: https://youtu.be/N1sRwkCvdHk
https://youtu.be/N1sRwkCvdHk
今回はSmooth Scroll用のライブラリ
「Lenis」の設定を行います。
https://lenis.darkroom.engineering/
スクロールできる要素の作成と
「Lenis」の読み込みを行います。

index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset...]]></description><link>https://zenn.dev/web_life_ch/articles/56bf5fa0ad5741</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/56bf5fa0ad5741</guid><pubDate>Mon, 25 Nov 2024 04:33:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TaKiIgoR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2592%2520Lenis%2520Smooth%2520Scroll%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[駅すぱあと路線図JavaScriptライブラリrosen.jsを使って路線図のハイライトを描く]]></title><description><![CDATA[本記事はヴァル研究所の支援として作成された記事です
駅すぱあとは乗り換え案内サービスとして有名ですが、駅すぱあとの路線図をWebページに埋め込むことができるのを知っているでしょうか。駅すぱあとの路線図をWebページに埋め込むことで、Webサイトへの訪問者が目的地までの経路を探しやすくなります。日本の大都市圏では電車での移動が多いので、路線図を中心とした地図は便利です。
そんな地図埋め込みを手軽に実現してくれるライブラリがrosen.jsです。これは駅すぱあと公式のライブラリであり、地図と駅・路線情報などを組み合わせてさまざまな可視化を行えます。

本記事では、rosen.jsを使って路線...]]></description><link>https://zenn.dev/ekispert_api/articles/81f6dc6661e9a1</link><guid isPermaLink="true">https://zenn.dev/ekispert_api/articles/81f6dc6661e9a1</guid><pubDate>Mon, 25 Nov 2024 00:54:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0GKz4v2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3JavaScript%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AArosen.js%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25A2%25E3%2583%2584%25E3%2582%25B7%2540MOONGIFT%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllZWU4MmU5MDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520API%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqN3UwNEd0OEkzbTVsd2xaRUhBbjNlcko0QjZxNWlBd1V6N2tqT1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アツシ@MOONGIFT</dc:creator></item><item><title><![CDATA[[Typescript]日付を扱う上で出会ったバグについて]]></title><description><![CDATA[最近業務で日付関連のフォームをいじることが多々あり、その際起きたバグについてシェアします。

 new Date()でパースしたら挙動が異なる
yyyy-MM-dd、yyyy.MM.dd、yyyyMMdd形式で入力した日付文字列をyyyy/MM/ddにフォーマットする処理で出会いました。

// yyyy-MM-dd形式

// Chrome
new Date('2024-11-20')
// =&gt; Wed Nov 20 2024 09:00:00 GMT+0900 (日本標準時)

new Date('2023-02-29')
// =&gt; Wed Mar 01 2023 0...]]></description><link>https://zenn.dev/barabara/articles/8f9f6351acfc91</link><guid isPermaLink="true">https://zenn.dev/barabara/articles/8f9f6351acfc91</guid><pubDate>Sun, 24 Nov 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A_1oK-zL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypescript%255D%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E4%25B8%258A%25E3%2581%25A7%25E5%2587%25BA%25E4%25BC%259A%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2590%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2590%25E3%2583%25A9%25E3%2583%2590%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyYWRmZGRkNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>バラバラ</dc:creator></item><item><title><![CDATA[SPAでAuth0のライブラリを使ってログインした際にセットされるCookieについて]]></title><description><![CDATA[
 この記事の内容について
正直、Auth0のコミュニティサイトで展開された内容を読めば十分です。
上記リンクの内容を自分で改めてまとめたにすぎません。

 はじめに
SPAでAuth0を使用し、ログインを行うと以下画像のようなCookieがセットされます。

何かしら使用されていそうですが、実際に何に使用しているかは分かっていませんでした。
そこで、今回はauth0から始まるCookieが何のために存在しているかについて、まとめた記事です。

 結論

当該Cookieはブラウザ上でログインしているかを検証するフラグ的な役割です

そのため、盗まれても特に不都合はありません


トーク...]]></description><link>https://zenn.dev/maronn/articles/cookie-by-auth0-in-spa</link><guid isPermaLink="true">https://zenn.dev/maronn/articles/cookie-by-auth0-in-spa</guid><pubDate>Sun, 24 Nov 2024 16:01:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3G1V2tHd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SPA%25E3%2581%25A7Auth0%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AB%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2582%258BCookie%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25AD%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYzVlMmFlYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マロン</dc:creator></item><item><title><![CDATA[Next.js App routerでパフォーマンス・UX改善をする4つの方法]]></title><description><![CDATA[
 はじめに
Next.js App routerは、なんとなく開発しているとUXの悪いアプリケーションができてしまいがちです。
ですが、今回紹介する方法を実装すれば、ユーザーがストレスの感じないアプリケーションをそれなりに開発できますので、ぜひみていただければと思います。
対象: Next.js v14

 この記事を見て欲しい人

Next.js App router 初心者の人
Next.js App routerで開発したアプリケーションが、もったりしていて悩んでいる人
Next.js App routerで、UXやパフォーマンスの良いアプリケーションを作りたい人


 pref...]]></description><link>https://zenn.dev/yarai/articles/89bc38843153eb</link><guid isPermaLink="true">https://zenn.dev/yarai/articles/89bc38843153eb</guid><pubDate>Sun, 24 Nov 2024 13:44:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bSGXxZVX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520router%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25BBUX%25E6%2594%25B9%25E5%2596%2584%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B4%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu_aoringo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[JSConf JP 2024 に参加しました！]]></title><description><![CDATA[
 はじめに
2024/11/23 に開催された JSConf JP 2024 に参加しました。
今回が初参加です。
気付いたらチケットが売り切れており、 waiting list に登録して購入できました 🙌
また、各セッションはライブ配信されており、当日現地参加できなかった方も視聴できるようです。ありがたいです。
最大4トラック進行されていました。セッション数が多く、ボリューミーなカンファレンスでした。

 聴いたセッション

 LT: Promise.try: シンプルで強力な同期/非同期統合の未来 - 実装の深層とPromiseの進化
https://jsconf.jp/2024...]]></description><link>https://zenn.dev/conayw/articles/f11db09f92df8d</link><guid isPermaLink="true">https://zenn.dev/conayw/articles/f11db09f92df8d</guid><pubDate>Sun, 24 Nov 2024 13:31:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UcYNY3k7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSConf%2520JP%25202024%2520%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:conayw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkNjE4YWY3Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>conayw</dc:creator></item><item><title><![CDATA[【JavaScript】textareaに改行制限を実装する方法（予測変換(IME)対応）]]></title><description><![CDATA[
 はじめに
とあるプロジェクトで入力可能な文字数と行数が決まっているtextareaを実装する必要がありました。
文字数制限はmaxLengthを使って簡単に解決できましたが、行数制限はなかなか難しかったので、解決方法を記事として書こうと思います。

 この記事で実装するtextareaの条件

5行目まで入力可能。
textareaの標準のスクロールバーとリサイズ機能は非表示にする。


index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8"...]]></description><link>https://zenn.dev/kariu/articles/186c61a6192e9a</link><guid isPermaLink="true">https://zenn.dev/kariu/articles/186c61a6192e9a</guid><pubDate>Sun, 24 Nov 2024 09:16:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--86-rgp7l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591textarea%25E3%2581%25AB%25E6%2594%25B9%25E8%25A1%258C%25E5%2588%25B6%25E9%2599%2590%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588%25E4%25BA%2588%25E6%25B8%25AC%25E5%25A4%2589%25E6%258F%259B%2528IME%2529%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kariu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlOGU0ZmFlMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kariu</dc:creator></item><item><title><![CDATA[JavaScript用Azure OpenAIライブラリはv2でOpenAIを利用するように変更された]]></title><description><![CDATA[
 要約
Azure OpenAI ライブラリにクライアント実装は含まれなくなったのでOpenAIを利用しましょう。

 Azure OpenAIライブラリとは？
Azure OpenAI Serviceでは本家OpenAIとほとんど同じAPIを提供していますが、Azure用のライブラリ(@azure/openai
)が別に提供されていました。どちらのライブラリでも、どちらのAPIにアクセスすることが可能でした。

 @azure/openai v2リリース
ほとんど同じ物が実装されているためか、@azure/openaiのv2からは本家OpenAIのクライアント(openai)を利用す...]]></description><link>https://zenn.dev/ashphy/articles/c300a963d1e53e</link><guid isPermaLink="true">https://zenn.dev/ashphy/articles/c300a963d1e53e</guid><pubDate>Sun, 24 Nov 2024 08:32:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fFEToBZq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E7%2594%25A8Azure%2520OpenAI%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AFv2%25E3%2581%25A7OpenAI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ashphy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5YWstZi01V09kbXFWT1d0TWxkWVpVdUlkYWVuZDJEdkRnMlBQSHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ashphy</dc:creator></item><item><title><![CDATA[NodeCGでスポーツコーダ#1:環境構築(Reactなしver)]]></title><description><![CDATA[
 概要
NodeCGを使ってスポーツコーダが作れるか検証していきます。
今回はNodeCGをJavascirpt(Reactなし)で構築します。

 背景

 スポーツコーダとは
スポーツコーダはスポーツ中継やライブ配信時に使うテロップシステムです。今までは専用機や専用システムを使っていましたが、NodeCGで代替できないか実際に構築しながら検証をしていきます。

 NodeCGとは
NodeCGは、主にライブ配信やeスポーツ大会で使われるオープンソースのツールで、配信画面に表示するオーバーレイや情報パネルを簡単に管理・作成できるフレームワーク(Node.js)です。
主な特徴：

ス...]]></description><link>https://zenn.dev/holypotter0304/articles/557c87bcaab0a7</link><guid isPermaLink="true">https://zenn.dev/holypotter0304/articles/557c87bcaab0a7</guid><pubDate>Sun, 24 Nov 2024 06:49:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QDXR1piT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NodeCG%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25231%253A%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528React%25E3%2581%25AA%25E3%2581%2597ver%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2582%258A%25E3%2581%25BD%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZTZlMjBlZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほりぽた</dc:creator></item><item><title><![CDATA[リッチテキストエディタの作成 - ReactやDraft.jsを活用]]></title><description><![CDATA[
 はじめに
リッチテキストエディタは、テキストを装飾する、リンクを挿入する、画像を埋め込むなど、多彩な操作が可能なツールです。エディタはブログ記事作成ツールやCMSなど、さまざまな用途で利用されています。本記事では、ReactとDraft.jsを活用して、基本的なリッチテキストエディタを自作する方法を解説します。


 なぜDraft.jsを選ぶのか？
Draft.jsは、Facebookが開発したリッチテキストエディタのためのフレームワークです。
以下の特徴があります：


豊富な拡張性：プラグインやカスタムデータ構造の追加が容易。

リアルタイム編集：状態管理がしやすく、エディタ内...]]></description><link>https://zenn.dev/ippei523/articles/b09f2f8e35d6f4</link><guid isPermaLink="true">https://zenn.dev/ippei523/articles/b09f2f8e35d6f4</guid><pubDate>Sun, 24 Nov 2024 06:02:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AKzskBKd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2581%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2520-%2520React%25E3%2582%2584Draft.js%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259A%2587%25E4%25BA%25BA%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiNTRjZWFmYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>暇人エンジニア</dc:creator></item><item><title><![CDATA[nodeでjsの実行環境を一瞬で構築する方法]]></title><description><![CDATA[
 1. Node.jsをインストール



公式サイトにアクセス
Node.js公式サイトにアクセスします。


バージョンを選択


LTS (Long Term Support): 安定版。推奨。

Current: 最新の機能を試したい場合に選択。



インストール
ダウンロードしたインストーラを実行し、インストール手順に従います。


確認
インストール後、ターミナルまたはコマンドプロンプトで以下のコマンドを実行してインストールを確認します:
node -v
npm -v

これにより、Node.jsとnpm（Node Package Manager）のバージョンが表示されま...]]></description><link>https://zenn.dev/aki_on/articles/addf23f8be8683</link><guid isPermaLink="true">https://zenn.dev/aki_on/articles/addf23f8be8683</guid><pubDate>Sat, 23 Nov 2024 08:28:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vTRvUljG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:node%25E3%2581%25A7js%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki_on%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyMWRmYzJhY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki_on</dc:creator></item></channel></rss>