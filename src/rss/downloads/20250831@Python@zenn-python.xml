<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 31 Aug 2025 11:32:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[LeetCodeを頑張るログ]]></title><description><![CDATA[!
最終更新日：2025-08-31


 背景
本記事は LeetCode を解きながら理解を整理し、進捗を記録していくシリーズです。
案件の配属や転職時に技術面接を受ける機会が増えてきたため、その場に応じて対応できるよう理解を深めておきたいと思ったのがきっかけです。
また、データ構造とアルゴリズムをしっかり学んでおくと、
いいコードがわかったり、よくないコードの判断基準にもなるからとアドバイスを受けたことがきっかけでもあります。
ずっと前から、競技プログラミングにも興味を持ち始めたというのもありますが...。
※LeetCodeがなんぞやというのは他の記事でもいっぱい説明してあります...]]></description><link>https://zenn.dev/akagikouzanh/articles/f6c0c4498a44fb</link><guid isPermaLink="true">https://zenn.dev/akagikouzanh/articles/f6c0c4498a44fb</guid><pubDate>Sun, 31 Aug 2025 11:28:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rAf8jVYc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%25E3%2582%2592%25E9%25A0%2591%25E5%25BC%25B5%25E3%2582%258B%25E3%2583%25AD%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akagikouzanh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlMmVlMTlkMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akagikouzanh</dc:creator></item><item><title><![CDATA[#1:LeetCode-TwoSumをやってみる]]></title><description><![CDATA[
 問題(翻訳)


TwoSum (Difficulty: Easy)


整数配列 nums と整数 target が与えられています。
合計が target になるような 2 つの数のインデックス を返してください。
各入力には 必ず 1 つの解 が存在すると仮定してよいものとします。
同じ要素を 2 回使用することはできません。
答えは 任意の順序 で返して構いません。


 制約


 2 &lt;= nums.length &lt;= 104 


 -10^9 &lt;= nums[i] &lt;= 10^9 


 -10^9 &lt;= target &lt;= 10^...]]></description><link>https://zenn.dev/akagikouzanh/articles/731cb7a423502f</link><guid isPermaLink="true">https://zenn.dev/akagikouzanh/articles/731cb7a423502f</guid><pubDate>Sun, 31 Aug 2025 11:15:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1WRw6qDh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25231%253ALeetCode-TwoSum%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akagikouzanh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlMmVlMTlkMmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akagikouzanh</dc:creator></item><item><title><![CDATA[Cursorのターミナルでpyenvの設定が効かないとき]]></title><description><![CDATA[
 問題
Cursorのターミナルでpyenvの設定が効かなかった。Cursorを再起動しても変わらない。
macのターミナル
$ python --version
Python 3.10.16
Cursorのターミナル
$ python --version
Python 3.12.2

pyenv local 3.10.16 &amp;&amp; python --version
Python 3.12.2

 解決策
Cursorには独自のPythonの設定があるので、それを変更する。

Cmd + Shift + P (Mac) または Ctrl + Shift + P (Wind...]]></description><link>https://zenn.dev/yuzutaro/articles/4d88f70e392854</link><guid isPermaLink="true">https://zenn.dev/yuzutaro/articles/4d88f70e392854</guid><pubDate>Sun, 31 Aug 2025 09:12:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6wayE-yv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cursor%25E3%2581%25AE%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25A7pyenv%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25A3%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMTQ2NTg5OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たっくん</dc:creator></item><item><title><![CDATA[【Flask入門】Flaskでフォームを作って入力を受け取るまで（コード解説編）]]></title><description><![CDATA[
 【Flask入門】Flaskでフォームを作って入力を受け取るまで（コード解説編）
前回の記事では「「Flask入門】Flaskでフォームを作って入力を受け取るまで」でフォームから入力を送信できるところまで作りました。
今回はそのコードを1行ずつ解説していきます。


 app.py の解説
from flask import Flask, request, render_template
flask ライブラリから必要な機能をインポートしています。


Flask : アプリ本体を作るためのクラス

request : フォームなどから送られたデータを受け取るためのオブジェクト

r...]]></description><link>https://zenn.dev/abs_abe/articles/f282a21d1854d4</link><guid isPermaLink="true">https://zenn.dev/abs_abe/articles/f282a21d1854d4</guid><pubDate>Sun, 31 Aug 2025 07:31:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ia2EIPO6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Flask%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591Flask%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A7%25A3%25E8%25AA%25AC%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEABS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzgtcmdpOWVUVGJva09LTzlHai1xaGVOS1F2d2lmQ1NUQkN6ODM4dENETXhXWFVrOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社ABS</dc:creator></item><item><title><![CDATA[Vertex AI Pipelinesに入門してみよう]]></title><description><![CDATA[今回はVertex AI Pipelinesに入門するための最もシンプルなところを紹介しようと思います。

 Vertex AI Pipelinesとは？
Vertex AI Pipelinesは、MLのパイプラインを記述することができるサービスになります。MLワークフローをおーけストレートすることにより、データ準備からモデルの学習、モニタリングまで全て自動で行うことができるようになります。MLOpsを実現するためにはMLのライフサイクルを可能な限り自動化するための取り組みが必要であり、そのための手段としてとても有益なツールとなります。
パイプラインを記述するためにはKubeflow P...]]></description><link>https://zenn.dev/akasan/articles/5697384428538b</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/5697384428538b</guid><pubDate>Sun, 31 Aug 2025 07:18:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--stTreRXj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vertex%2520AI%2520Pipelines%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[【Azure OpenAI 40日】 Day10：Blob→Azure AI Searchで最小RAGを構築]]></title><description><![CDATA[
 ✍️ TL;DR

今日の到達点：Blobに置いたMarkdown/テキストを Indexer でSearchへ自動取り込みし、Pythonから検索ヒットを確認
学び：

RG再利用で資産を持ち越す運用が楽になる
Index → Data Source → Indexer の順で作ると事故りにくい
つまずきは「キー不一致」「不要設定」で起きやすいが最小構成で回避できる


コスト：Search Freeで0円（不可ならBasicの時間課金/短時間）＋ Storageはほぼゼロ



 🧭 今日のゴール

既存RG（Japan East）上で Blob → Search の最小RAG土...]]></description><link>https://zenn.dev/masau/articles/azure-openai-40days-day10-search-blob</link><guid isPermaLink="true">https://zenn.dev/masau/articles/azure-openai-40days-day10-search-blob</guid><pubDate>Sun, 31 Aug 2025 07:12:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KpiCiKHl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Azure%2520OpenAI%252040%25E6%2597%25A5%25E3%2580%2591%2520Day10%25EF%25BC%259ABlob%25E2%2586%2592Azure%2520AI%2520Search%25E3%2581%25A7%25E6%259C%2580%25E5%25B0%258FRAG%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MasaU_Tech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NTZmODk1MmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MasaU_Tech</dc:creator></item><item><title><![CDATA[【Flask入門】Flaskでフォームを作って入力を受け取るまで]]></title><description><![CDATA[この記事では、Flaskでフォームを作って入力を受け取るまでの手順をまとめます。
コピペで動かすだけでなく、フォルダ構成からコードの意味まで理解していきます。


 1. フォルダ構成を準備する
現在の app.py があるフォルダに templates というフォルダを作ります。
その中に index.html を置きます。
study-log/
├── app.py
└── templates/　←フォルダ追加
└── index.html　←ファイル追加


templates/ : HTMLファイルを置くフォルダ（Flaskのルール）

index.html : トップページ用の...]]></description><link>https://zenn.dev/abs_abe/articles/676af8eeb73519</link><guid isPermaLink="true">https://zenn.dev/abs_abe/articles/676af8eeb73519</guid><pubDate>Sun, 31 Aug 2025 05:30:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--piFa675---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Flask%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591Flask%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E5%258F%2596%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEABS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzgtcmdpOWVUVGJva09LTzlHai1xaGVOS1F2d2lmQ1NUQkN6ODM4dENETXhXWFVrOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株式会社ABS</dc:creator></item><item><title><![CDATA[ニュース収集パイプラインをDuckDB + BigQueryで構築する]]></title><description><![CDATA[最近、業務外で構築したニュース収集システムのアーキテクチャについて説明します。

 初期の要求

ニュースソースからニュースを収集する
収集したニュースはBigQueryに格納する
BigQueryに格納したニュース情報をGoogle Spreadsheet(以下、GSheet)で参照する


 初期構築
まずは、RSSを取得するaggregatorをGitHub Actions上でBashスクリプトを使って構築しました。

1時間おきにXMLをダウンロードし、yqコマンドでJSON Lines(以下、jsonl)に変換します。

https://mikefarah.gitbook.io...]]></description><link>https://zenn.dev/watarukura/articles/20250824-rb8j1afiwfbene8gkd3g9glvqfso</link><guid isPermaLink="true">https://zenn.dev/watarukura/articles/20250824-rb8j1afiwfbene8gkd3g9glvqfso</guid><pubDate>Sun, 31 Aug 2025 04:46:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gxx6A9n0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E5%258F%258E%25E9%259B%2586%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592DuckDB%2520%252B%2520BigQuery%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watarukura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMTExZjcyNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>watarukura</dc:creator></item><item><title><![CDATA[【Python】複数のPythonバージョンの切り替え]]></title><description><![CDATA[
 はじめに
Pythonのパッケージを使う際、Python 3.9 - 3.11といったようにPythonのバージョンが指定されていることが多々あります。特定のバージョンのPythonを使わないと、パッケージがうまく動作しない事は、機械学習のパッケージを使う時などによくある事です。
もし、別のバージョンのPythonが必要となった際、再インストールするのは面倒です。こんな時の問題を解決してくれる主要なツールとしてpyenvがあります。
今回は、pyenvを使用して安全に複数のバージョンのPythonをインストールし、コマンドで簡単にPythonのバージョンを切り替える方法について解説し...]]></description><link>https://zenn.dev/fpaico/articles/e1ba265969a3bd</link><guid isPermaLink="true">https://zenn.dev/fpaico/articles/e1ba265969a3bd</guid><pubDate>Sun, 31 Aug 2025 04:42:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tzhoyZE8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEPython%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%252B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYjU3MjE2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[【Python】物体検出 YOLOの最新動向・実装]]></title><description><![CDATA[
 1. はじめに
物体検出は監視カメラなどの映像から特定の物体を検出する技術です。物体検出は、コンピュータビジョンの中で非常に重要なタスクであり、YOLO（You Only Look Once）モデルはその中でも最も主要なアルゴリズムの一つです。YOLOは、高速かつ高精度な物体検出を実現するために設計され、リアルタイムでの物体検出において広く利用されています。本記事では、YOLOの概要と、2024年時点での最新バージョン（YOLOv11）について解説します。そして、PythonでYOLOを実装する方法についてもわかりやすく説明します。

 2. YOLOの概要
YOLOは、物体検出タス...]]></description><link>https://zenn.dev/fpaico/articles/afebb920641d69</link><guid isPermaLink="true">https://zenn.dev/fpaico/articles/afebb920641d69</guid><pubDate>Sun, 31 Aug 2025 04:40:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9gOT6hOI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%2520YOLO%25E3%2581%25AE%25E6%259C%2580%25E6%2596%25B0%25E5%258B%2595%25E5%2590%2591%25E3%2583%25BB%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%252B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYjU3MjE2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[【Python】骨格推定の概要、様々なパターンの実装]]></title><description><![CDATA[
 はじめに
骨格推定（Pose Estimation）は、画像や動画から人物の関節位置を特定する技術で、スポーツ分析やリハビリテーション、人間の動作認識、AR（拡張現実）など、さまざまな分野で利用されています。リアルタイムで骨格推定を行うためには、高速で効率的な推定手法が求められます。
本記事では、代表的な骨格推定ライブラリであるMediaPipeとOpenPoseを比較し、その後、MediaPipeを使った骨格推定の実装方法を紹介します。

 骨格推定の実装方法
骨格推定を実現するためのライブラリにはいくつかの選択肢がありますが、MediaPipeとOpenPoseが代表的です。両者...]]></description><link>https://zenn.dev/fpaico/articles/1cb617f609fa5c</link><guid isPermaLink="true">https://zenn.dev/fpaico/articles/1cb617f609fa5c</guid><pubDate>Sun, 31 Aug 2025 04:37:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0fE4jmAS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E9%25AA%25A8%25E6%25A0%25BC%25E6%258E%25A8%25E5%25AE%259A%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2580%2581%25E6%25A7%2598%25E3%2580%2585%25E3%2581%25AA%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%252B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYjU3MjE2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[【Python】Ollamaで構築したLLMをGUIで表示する方法]]></title><description><![CDATA[
 1. はじめに
本記事では、Ollamaで構築した日本語対応のローカルLLMをGUIで表示する方法を解説します。
LLMの構築は、OpenAI等のWebAPIを用いて実装する方法と、自分のPCにモデルをダウンロードして実装する方法があります。今回は後者の方法（ローカルLLMの構築）を解説しつつ、ChatGPTライクなGUIで表示してみます。
ローカルLLMを構築すると、CUIで実行できますが、一般利用には向かないです。そのため、ChatGPTのようなGUIに表示して利用してみます。GUIで表示する方法は少し設定が難しいので、それも含めて記事にしてみました。

 2. 動作環境

Ub...]]></description><link>https://zenn.dev/fpaico/articles/5b5f2b243ba716</link><guid isPermaLink="true">https://zenn.dev/fpaico/articles/5b5f2b243ba716</guid><pubDate>Sun, 31 Aug 2025 04:28:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M-JfL2Sx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Ollama%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%259FLLM%25E3%2582%2592GUI%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%252B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYjU3MjE2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[【Python】お手軽に顔認証を実装する②]]></title><description><![CDATA[
 はじめに
Pythonのライブラリを使い、お手軽に顔認証を実装するテーマの第2回目になります。
前回の記事はこちら --&gt; 【Python】お手軽に顔認証を実装する①
今回は、画像データをクライアントからサーバに送り、サーバで顔認証を行い、認証結果をクライアントに返却するプログラムを実装していきます。顔認証を実践で使うときは、このパターンが多いかと思いますので、ぜひ読んでみてください。

 今回実装するシステムのイメージ図


 動作環境

M1 Mac
Python 3.9.6


 ライブラリのインストール
前回に引き続き、顔検出・顔認証の機能に関しては、無料で使えるPyt...]]></description><link>https://zenn.dev/fpaico/articles/3fa35f9f48b340</link><guid isPermaLink="true">https://zenn.dev/fpaico/articles/3fa35f9f48b340</guid><pubDate>Sun, 31 Aug 2025 04:24:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MJZY0t4d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E9%25A1%2594%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%252B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYjU3MjE2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[【Python】お手軽に顔認証を実装する①]]></title><description><![CDATA[
 はじめに
Pythonのライブラリを使う事で、お手軽に顔認証を実装する事ができます。まだ、顔認証を実装した事がない、顔認証を使ったアプリを作りたいといった方に、ぜひ読んでいただきたいです。
次回の記事はこちら --&gt; 【Python】お手軽に顔認証を実装する②

 動作環境

M1 Mac
Python 3.9.6


 ライブラリのインストール
今回は、無料で使えるPythonのライブラリとしてface-recognitionを使用します。face-recognitionは、dlibという機械学習・画像処理関連のオープンソースのライブラリによって作られたPythonのライブラ...]]></description><link>https://zenn.dev/fpaico/articles/29800f51f34378</link><guid isPermaLink="true">https://zenn.dev/fpaico/articles/29800f51f34378</guid><pubDate>Sun, 31 Aug 2025 04:21:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--58Gz6rdi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E9%25A1%2594%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%252B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzYjU3MjE2ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[Python 並列処理入門 ～ GIL・スレッド・プロセスまとめ ～]]></title><description><![CDATA[
 🐍 Python 並列処理入門 ～ GIL・スレッド・プロセスまとめ ～

この記事は自分用のメモを生成AIにまとめさせたものです。


 📚 1. グローバルインタプリタロック（GIL）とは？
Python（特に CPython）には GIL（Global Interpreter Lock） という仕組みがあり、
「一度に一つのスレッドしか実行できない」 制限があります。

 🔸 GILのポイント

メモリ管理を安全にするためのロック
Pythonのマルチスレッドは GILの影響で実質「擬似並列」

マルチスレッドで速くなるのは I/O待ちの時だけ




 🔥 2. CPUバウン...]]></description><link>https://zenn.dev/naorex/articles/python_gil_practice</link><guid isPermaLink="true">https://zenn.dev/naorex/articles/python_gil_practice</guid><pubDate>Sun, 31 Aug 2025 03:51:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U3Ttps9k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E4%25B8%25A6%25E5%2588%2597%25E5%2587%25A6%25E7%2590%2586%25E5%2585%25A5%25E9%2596%2580%2520%25EF%25BD%259E%2520GIL%25E3%2583%25BB%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2520%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naorex%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1NWZjMzEzOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>naorex</dc:creator></item><item><title><![CDATA[Effective Python 3版(英語版) の読書メモ]]></title><description><![CDATA[
 Effective Pythonについて
https://www.amazon.co.jp/dp/0138172188
Effective PythonはPythonのより効果的な書き方についてのヒントをまとめた書籍です。
これはEffective Software DevelopmentシリーズのPython版となります。
2025年8月時点での最新は3版となり、3.13までを網羅しています。



版数
発売日
Pythonのバージョン
項目数




1版
2016/1/23
3.4
59


2版
2020/7/16
3.8
90



3版(英語のみ)
2024/11/30...]]></description><link>https://zenn.dev/mima_ita/articles/baf92f68d0f34b</link><guid isPermaLink="true">https://zenn.dev/mima_ita/articles/baf92f68d0f34b</guid><pubDate>Sun, 31 Aug 2025 03:26:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nlpt9VEC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Effective%2520Python%25203%25E7%2589%2588%2528%25E8%258B%25B1%25E8%25AA%259E%25E7%2589%2588%2529%2520%25E3%2581%25AE%25E8%25AA%25AD%25E6%259B%25B8%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mima_ita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pjcDFUQmpUT3lBUnl4aHM3aVk1MEg2b0JZZ3FrRzFjTTZVblJMPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mima_ita</dc:creator></item><item><title><![CDATA[Python と Ollama で学ぶLangChain実践入門 - 生成AI・AIエージェント構築]]></title><description><![CDATA[生成AIやAIエージェントを「使う」から「作る」へ。

『Python と Ollama で学ぶLangChain実践入門』は、AIエージェント開発の第一歩を踏み出すための実践書です。

プロンプト設計や会話履歴の管理といった基礎から、外部知識を統合するRAG、LangGraphを使ったAgentの状態管理やツール呼び出しまでを、Pythonのコードとともに解説。

さらに、ローカル環境で活用できるOllamaを組み合わせることで、Web APIやクラウド等の有料サービスを利用する事なく、プライバシーに配慮した安全なAIエージェント構築を解説します。

「自分の手でAIを動かしたい」と考えるエンジニア、研究者に最適な入門書です。]]></description><link>https://zenn.dev/fpaico/books/67296fa452ebde</link><guid isPermaLink="true">https://zenn.dev/fpaico/books/67296fa452ebde</guid><pubDate>Sun, 31 Aug 2025 03:08:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---BvEWo19--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMTRiZjBiYzcxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Keita+</dc:creator></item><item><title><![CDATA[【Django】プロジェクトの新規作成方法]]></title><description><![CDATA[
 はじめに
こんにちは！
今回は Python で人気のフルスタックWebフレームワークである Django を使って、
仮想環境構築 → プロジェクト作成 → DB接続 → 一覧表示 までを体験できる記事を書きました。

 前提条件

Python 3.10 以上をインストール済の方（3.3 以降でもOKですが新しいバージョン推奨）
コマンドライン操作ができること


 筆者の環境

macOS
python 3.12.3
django 5.2.5


 1.仮想環境の構築方法
Django のプロジェクトを作成するときは仮想環境を構築するのがおすすめです。
プロジェクト毎に独立した...]]></description><link>https://zenn.dev/tanaodev/articles/new-django-project-20250827</link><guid isPermaLink="true">https://zenn.dev/tanaodev/articles/new-django-project-20250827</guid><pubDate>Sun, 31 Aug 2025 01:01:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vH90cCza--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Django%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E6%2596%25B0%25E8%25A6%258F%25E4%25BD%259C%25E6%2588%2590%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%25AA%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmODEyZjNhZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たなお</dc:creator></item><item><title><![CDATA[【Python】EDINET APIで財務データ自動収集！差分更新で自分だけの最強データベースを作る（後編）]]></title><description><![CDATA[
 はじめに：データ収集のその先へ
前編の記事では、PythonとEDINET APIを使って、企業の財務データ（CSV形式）を全自動で収集し、年/四半期ごとに整理して保存するデータ収集基盤を構築しました。
これにより、ローカル（またはGoogle Drive）に最新の財務データが自動で蓄積される環境が手に入りました。しかし、データ分析のたびに数百、数千のZIPファイルやCSVファイルを個別に読み込むのは、依然として非効率です。
そこで後編となるこの記事では、収集した大量のZIPファイルをSQLiteデータベースに取り込み、高速に検索・集計できる本格的な分析基盤へと進化させる方法を徹底解...]]></description><link>https://zenn.dev/investaitech/articles/6532577daab512</link><guid isPermaLink="true">https://zenn.dev/investaitech/articles/6532577daab512</guid><pubDate>Sat, 30 Aug 2025 23:11:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TvQUUxTn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591EDINET%2520API%25E3%2581%25A7%25E8%25B2%25A1%25E5%258B%2599%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%2587%25AA%25E5%258B%2595%25E5%258F%258E%25E9%259B%2586%25EF%25BC%2581%25E5%25B7%25AE%25E5%2588%2586%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AE%25E6%259C%2580%25E5%25BC%25B7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Invest_AI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMjUyZjk0NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Invest_AI</dc:creator></item><item><title><![CDATA[【Python×EDINET API】CSVで財務データを自動取得！差分更新で構築する金融分析データベース]]></title><description><![CDATA[
 はじめに：財務データ収集は「CSV」でスマートに始めよう
企業の財務データ分析、興味はあるけど「データの入手が面倒…」と感じていませんか？特に、上場企業の有価証券報告書などが集まるEDINETは情報の宝庫ですが、一つ一つ手作業でダウンロードするのは現実的ではありません。
この記事では、PythonとEDINET APIを使って、企業の財務データ（CSV形式）を全自動で収集し、継続的に更新し続けるデータ基盤を構築する方法を、ステップ・バイ・stepで徹底解説します。

 この記事で実現できること


EDINET APIを叩いて、必要な書類の情報を自動で取得
2回目以降は差分のみを更新...]]></description><link>https://zenn.dev/investaitech/articles/97d7a7836eefdf</link><guid isPermaLink="true">https://zenn.dev/investaitech/articles/97d7a7836eefdf</guid><pubDate>Sat, 30 Aug 2025 22:50:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oZxy-pMw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25C3%2597EDINET%2520API%25E3%2580%2591CSV%25E3%2581%25A7%25E8%25B2%25A1%25E5%258B%2599%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258F%2596%25E5%25BE%2597%25EF%25BC%2581%25E5%25B7%25AE%25E5%2588%2586%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E9%2587%2591%25E8%259E%258D%25E5%2588%2586%25E6%259E%2590%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Invest_AI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMjUyZjk0NzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Invest_AI</dc:creator></item></channel></rss>