<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 26 May 2025 06:36:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[DVC のコア概念と Tips]]></title><description><![CDATA[
 はじめに
機械学習モデルの研究開発やオペレーションズ・リサーチでは、大量のデータや実験条件、実験結果を正確に紐付けて管理することが求められます。また、実行コストが高めの処理を多段階で行うことが基本になってきます。その際、

処理フローの下流だけを変えたときに上流が再実行される無駄をなくしたい
細粒度に切ったスクリプトを正しい順番で手動で実行するなどやっていられない

というジレンマに悩まされることになります。
これらに対するソリューションの一つが DVC (Data Version Control) です。DVC は Git の上での使用を前提とした開発言語非依存のデータ・実験管理ツ...]]></description><link>https://zenn.dev/mutex_inc/articles/dvc-core-concepts-and-tips</link><guid isPermaLink="true">https://zenn.dev/mutex_inc/articles/dvc-core-concepts-and-tips</guid><pubDate>Mon, 26 May 2025 02:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HesKe4he--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DVC%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2582%25A2%25E6%25A6%2582%25E5%25BF%25B5%25E3%2581%25A8%2520Tips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tony%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmOTE5ZmY2NmEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:mutex%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4YjZmMTNmZDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tony</dc:creator></item><item><title><![CDATA[【備忘録】Pythonでnp構造体を用いてモデル化するときのTips]]></title><description><![CDATA[
 1. はじめに
本記事はゼミの無線通信のキックオフとして受けた課題を解くときに使った手法などの個人的備忘録です．
最後に具体的な利用方法としてコードは貼りますが，本当に個人的なものですので，多めに見ていただけると幸いです．
[TOR]

 2. 手法

 2.1 フラグ・属性の命名
モデルを構造体で表現するときの属性は，何度も呼び出すものであったりするので，その場で適当な変数に数値を入れて判断させるより， IntEnum を用いて命名した方がよい．
= auto() と表記することで中身の値は気にしてないということを明確に主張できるし，呼び出すときは xxx.valueとすることで，...]]></description><link>https://zenn.dev/riel/articles/a803fe43b6b77c</link><guid isPermaLink="true">https://zenn.dev/riel/articles/a803fe43b6b77c</guid><pubDate>Mon, 26 May 2025 02:34:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Fy_aC-_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591Python%25E3%2581%25A7np%25E6%25A7%258B%25E9%2580%25A0%25E4%25BD%2593%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AETips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2588%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDI0cmo0OUtuWE5XbjhhdVY4Nlg0MTd1QmpPZnNqVFMxMkQxNDlBRmRIOTFQZzdJST1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りえる</dc:creator></item><item><title><![CDATA[【AWS × LINE】Cost Explorer APIで月額料金をBot通知するLambda構成]]></title><description><![CDATA[
 ✨ 目的
ユーザーがLINE Botにメッセージを送ると、LambdaがAWS Cost Explorer APIを使用してAWSのコストを取得し、請求書風のメッセージとしてLINEへ返信します。サーバーレス設計によりコスト効率が高く、イベント駆動型で課金最小化を実現しています。


 ⛏️ 構成概要

ユーザーがLINE Botにメッセージを送信
LINEはMessagin APIを通じて、Webhook URLにデータ（JSON）をPOST
API Gateway経由でLambdaがWebhookリクエストを受信
Lambda関数がコードを実行し、メッセージ内容を解析
Cost ...]]></description><link>https://zenn.dev/ikihsoy/articles/5cb037ffdaa697</link><guid isPermaLink="true">https://zenn.dev/ikihsoy/articles/5cb037ffdaa697</guid><pubDate>Mon, 26 May 2025 02:09:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q1YAtOac--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%2520%25C3%2597%2520LINE%25E3%2580%2591Cost%2520Explorer%2520API%25E3%2581%25A7%25E6%259C%2588%25E9%25A1%258D%25E6%2596%2599%25E9%2587%2591%25E3%2582%2592Bot%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258BLambda%25E6%25A7%258B%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNkd4Z0RjTWJGZGtBOW5JM3QwcFJ5ZnFqemZ0NkJjekxSQWtOOFY4UT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yossy</dc:creator></item><item><title><![CDATA[【初心者向け】Pythonの in と not in の使い方のまとめ]]></title><description><![CDATA[
 はじめに
Pythonで頻繁に使われるキーワードに in と not in があります。


x in リスト：x がリストに含まれていれば True


x not in リスト：x がリストに含まれていなければ True（in の否定）

とてもシンプルで直感的に使える構文ですが、
リスト以外にも使える ことや、文字列・辞書との違いなど、
意外と奥が深いポイントもあります。
本記事では、Pythonの in / not in の使い方を整理して解説します。

 1. リストに対する使い方
最もよく使われるのは、リストに特定の値が含まれているかを調べる使い方です。
fruits =...]]></description><link>https://zenn.dev/fd2025/articles/f121772954fcda</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/f121772954fcda</guid><pubDate>Sun, 25 May 2025 22:55:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1ffeABBk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%25E3%2581%25AE%2520in%2520%25E3%2581%25A8%2520not%2520in%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[Amazon Q CLIでゲームが簡単に作れた]]></title><description><![CDATA[Amazon Q CLIでゲームを作るとTシャツがもらえるイベントが開催されているので、ぼくも作ってみました。
盤面に置かれている赤い球を2つの手球で順に弾き、最終的に3つの球で作られる三角形の大きさがスコアになるゲームです。

所要時間は、Amazon Q CLIやPyGameのインストールを含めて2時間半ほどでした。ただし、どんなゲームを作るか決めるのに1時間くらい要した形です。
Amazon Q CLIの書いてくれたコードは、下記リポジトリで公開しています。READMEやLICENSEも書いてもらいました。
https://github.com/iwamot/amazon-q-bi...]]></description><link>https://zenn.dev/iwamot/articles/9b0dcc8a459dda</link><guid isPermaLink="true">https://zenn.dev/iwamot/articles/9b0dcc8a459dda</guid><pubDate>Sun, 25 May 2025 13:54:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZLYjcauB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amazon%2520Q%2520CLI%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%258C%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258C%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takashi%2520Iwamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0MWIwYTMwOTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takashi Iwamoto</dc:creator></item><item><title><![CDATA[ミニ四駆をモデルとしたGNCシミュレーションの発展的実装]]></title><description><![CDATA[
 ミニ四駆をモデルとしたGNCシミュレーションの発展的実装：タイヤモデル、制御則の深化[非AIエンジニアによるAI時代のコーディング]
前回の記事「ウェイポイント追従シミュレーションの世界」では、基本的な運動モデルと、ウェイポイント追従のための制御ロジックの構築について解説しました。今回は、さらに一歩進んで、より現実的なシミュレーションを目指し、Vehicleをミニ四駆に当てはめ、以下の点に焦点を当てて掘り下げていきます。今回も、主にCursorのAgent機能を用いて開発しました。


高度なタイヤモデルの実装：スリップ率を考慮した摩擦力の計算、回転抵抗、そして旋回時のトルク配分。
...]]></description><link>https://zenn.dev/renue/articles/e27e834a576e36</link><guid isPermaLink="true">https://zenn.dev/renue/articles/e27e834a576e36</guid><pubDate>Sun, 25 May 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GtI10az5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%258B%25E5%259B%259B%25E9%25A7%2586%25E3%2582%2592%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259FGNC%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E7%2599%25BA%25E5%25B1%2595%25E7%259A%2584%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:renue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMTQ0YTkzZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>renue</dc:creator></item><item><title><![CDATA[競プロ用Python入力早見表]]></title><description><![CDATA[競技プログラミング（主にAtCoder）でよく出現する入力パターンと、Pythonでの受け取り方法をまとめました。
各例には具体的な入力データとその処理結果を併記しています。
このページは自分用に内容を更新することがあります。

 1. 単一の値を受け取る

 1.1 整数
N = int(input())
print(N)
入力:
5
出力:
5

 1.2 文字列
S = input()
print(S)
入力:
hello
出力:
hello

 1.3 浮動小数点数
X = float(input())
print(X)
入力:
3.14
出力:
3.14

 2. 同一行の複数...]]></description><link>https://zenn.dev/code_garten/articles/877d50ba48d466</link><guid isPermaLink="true">https://zenn.dev/code_garten/articles/877d50ba48d466</guid><pubDate>Sun, 25 May 2025 08:56:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D8wG9LgR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E7%2594%25A8Python%25E5%2585%25A5%25E5%258A%259B%25E6%2597%25A9%25E8%25A6%258B%25E8%25A1%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:code-garten%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>code-garten</dc:creator></item><item><title><![CDATA[はやぶさノーティング③ ノートのフレームワーク化と自動化の第一歩]]></title><description><![CDATA[
 前回のおさらい
前回の記事では、はやぶさノーティングの基本環境構築と解説までを実施した。


 TL;DR
今回は、まだもう少し、今後色んな便利機能を追加していく前にこのノート術の考え方の整理とフレームワーク化をしておくことで、後々の機能追加をラクにしていく。料理をする前には、キッチンを使いやすくしておいた方がいいよね🍎

GTDの考え方を参考にしながら、タスク管理術としてノートのフォルダ管理をきめ細かく考えておく
今後のために、プロンプトを構造化しておくことでメンテナンスしやすくする
タスクの自動追加までをいったん仕組み化する。



 GTDを意識したノートのディレクトリ構造と役...]]></description><link>https://zenn.dev/acntechjp/articles/20250524_hayabusa3</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/20250524_hayabusa3</guid><pubDate>Sun, 25 May 2025 05:48:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m9RWL7LI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AF%25E3%2582%2584%25E3%2581%25B6%25E3%2581%2595%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E2%2591%25A2%2520%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%258C%2596%25E3%2581%25A8%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%25AE%25E7%25AC%25AC%25E4%25B8%2580%25E6%25AD%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Inoue%252C%2520Takuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGZLdG9HY1lxTVQtVWNWUzVtVHZ5ODJ2aTNaNmNXZUdjVzNFTlRxa092ZDB2ZTJocz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Inoue, Takuya</dc:creator></item><item><title><![CDATA[『Django + Docker 』でデータ分析の環境構築をしてみた！]]></title><description><![CDATA[
 はじめに
最近、転職サイトで 「データサイエンティスト募集」 をよく見かけます。回帰分析や統計モデルは難しそうに感じるかもしれませんが、まずは データ分析ができる開発環境 を用意するところから始めましょう。
このガイドでは、Docker を使って Python（Django）＋ MySQL ＋ Nginx の環境を最短で構築します。コピペで動くので、初心者の方も安心してください。

 開発環境の概要



項目
内容




ホスト OS
Windows + Docker Desktop（WSL2 推奨）


FW
Django 3.2 以上


DB
MySQL 8.0


Web...]]></description><link>https://zenn.dev/rasshii/articles/9415a3cb82580c</link><guid isPermaLink="true">https://zenn.dev/rasshii/articles/9415a3cb82580c</guid><pubDate>Sun, 25 May 2025 05:39:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9F2hP4RO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258EDjango%2520%252B%2520Docker%2520%25E3%2580%258F%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2589%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDBQeTMtLWw0WnZwdnFnY0ZMVjlJV0J3V1FrVDA4by1Jelh5UHl6UE1LRlc5cWRIST1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>らっしー</dc:creator></item><item><title><![CDATA[Gemini API TTS（Text-to-Speech）で漫才音声を生成してみた]]></title><description><![CDATA[
 はじめに
先日開催されたGoogle I/O 2025、AI関連の新発表が目白押しでしたが、その中でも自分の心を鷲掴みにしたのが、「Gemini 2.5」に搭載されたネイティブText-to-Speech（TTS）機能です。
デモで披露されたその声は、とても自然で感情豊か。
「これなら、Geminiだけで漫才のような音声コンテンツが作れるのでは？」
そんなくだらないアイディアが浮かびました。
思い立ったが吉日、今回はとりあえずGemini APIを使い、この最新TTS機能で漫才の生成を試してしてみた記録を、Zennの記事としてまとめます。
https://ai.google.dev/...]]></description><link>https://zenn.dev/sonicmoov/articles/bd862039bcba46</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/bd862039bcba46</guid><pubDate>Sun, 25 May 2025 00:02:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0CKjrgf8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemini%2520API%2520TTS%25EF%25BC%2588Text-to-Speech%25EF%25BC%2589%25E3%2581%25A7%25E6%25BC%25AB%25E6%2589%258D%25E9%259F%25B3%25E5%25A3%25B0%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takemo101%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDBmZGFmNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takemo101</dc:creator></item><item><title><![CDATA[「バイナリインデックス付き木（BIT/Fenwick Tree）徹底解説!!：アルゴリズムの原理・数理的な構造・高速化の理由」]]></title><description><![CDATA[
 記事本文ドラフト


 はじめに
アルゴリズムやデータ構造の勉強をしていると、「区間和の高速計算」や「1点更新の高速化」がしばしば課題になります。
その代表的な解決策が「バイナリインデックス付き木（BIT: Binary Indexed Tree, または Fenwick Tree）」です。
本記事では、BITの数学的な背景から実装・応用例まで、学術的かつ直感的に分かりやすく解説します。


 バイナリインデックス付き木（BIT）とは
BITは、配列上の「部分和（区間和）」や「要素の値変更」をO(logN)で処理できるデータ構造です。
競技プログラミングやデータベース、区間集計が多用...]]></description><link>https://zenn.dev/kto2myk/articles/6e3b81a35fdfa1</link><guid isPermaLink="true">https://zenn.dev/kto2myk/articles/6e3b81a35fdfa1</guid><pubDate>Sat, 24 May 2025 16:46:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e4VG1D4r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E4%25BB%2598%25E3%2581%258D%25E6%259C%25A8%25EF%25BC%2588BIT%252FFenwick%2520Tree%25EF%25BC%2589%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2521%2521%25EF%25BC%259A%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AE%25E5%258E%259F%25E7%2590%2586%25E3%2583%25BB%25E6%2595%25B0%25E7%2590%2586%25E7%259A%2584%25E3%2581%25AA%25E6%25A7%258B%25E9%2580%25A0%25E3%2583%25BB%25E9%25AB%2598...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A5%259E%25E7%2594%25B0%25E3%2580%2580%25E6%2599%25BA%25E5%25BC%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NjdiNTRjYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>神田　智弥</dc:creator></item><item><title><![CDATA[flake8エラーを解消しPythonコード品質を改善（開発日記 No.085）]]></title><description><![CDATA[!
この記事はgemini-2.0-flash-001によって自動生成されています。


 関連リンク

前回の開発日記


 はじめに
昨日はCI/CDパイプラインの構築を進めました。今日は、プロジェクト全体のflake8エラーを解消し、Pythonコードの品質を改善することに取り組みます。

 背景と目的
プロジェクトを進める上で、コードの品質を維持することは非常に重要です。flake8は、Pythonのコードスタイルをチェックするためのツールであり、エラーや警告を検出してくれます。今回は、flake8のエラーを解消することで、コードの可読性、保守性を向上させ、将来的なバグの発生を抑...]]></description><link>https://zenn.dev/centervil/articles/2025-05-24_085_dev-diary</link><guid isPermaLink="true">https://zenn.dev/centervil/articles/2025-05-24_085_dev-diary</guid><pubDate>Sat, 24 May 2025 14:55:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o7NkXxGv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flake8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2597Python%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2593%2581%25E8%25B3%25AA%25E3%2582%2592%25E6%2594%25B9%25E5%2596%2584%25EF%25BC%2588%25E9%2596%258B%25E7%2599%25BA%25E6%2597%25A5%25E8%25A8%2598%2520No.085%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:centervil%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YlVZNXZiN0NvbG1TN0tPQmhqQ2M5V3lIRXYwVVhwZ2YyY2wxYTc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>centervil</dc:creator></item><item><title><![CDATA[ROS2(windows11) の初手]]></title><description><![CDATA[ROS2 に手を出してみる。
19時間前に Kilted Kaiju がリリースされていました。
結論から言うと下記に書いてある通りにすればよい。
https://docs.ros.org/en/kilted/Installation/Windows-Install-Binary.html

 探索
よくわからんが ros2 run demo_nodes_cpp talker が動くところまでやろう。


https://github.com/ros2/ros2/releases/tag/release-kilted-20250523 バイナリパッケージを発見。 ros2-kilted-...]]></description><link>https://zenn.dev/ousttrue/articles/c90c9651ed0646</link><guid isPermaLink="true">https://zenn.dev/ousttrue/articles/c90c9651ed0646</guid><pubDate>Sat, 24 May 2025 13:24:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--APdfoRN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:ROS2%2528windows11%2529%2520%25E3%2581%25AE%25E5%2588%259D%25E6%2589%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ousttrue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzZjA3OTNjNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ousttrue</dc:creator></item><item><title><![CDATA[はやぶさノーティング② 環境構築とベース部分の実装]]></title><description><![CDATA[
 TL;DR

はやぶさノーティング第二回は環境構築と基本機能の実装編。

Markdown + Git + Obsidian の基本環境構築と設定のポイント。
Qdrantとの同期を設定。
仮想プロジェクトの進捗ノートのLLM(Github Copilot)による最新化は結構うまくいった。



 前回のおさらい
前回の記事では、"はやぶさノーティング" の概念を紹介しました。

"Markdownファイル＋Git＋LLM" を核にしたノート術
メモ作成・整理・検索を ほぼ自動化 する仕組み
セキュリティを考慮した1PC完結型の設計

今回は実際に環境を作り、ベースになるノートのデー...]]></description><link>https://zenn.dev/acntechjp/articles/20250524_hayabusa2</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/20250524_hayabusa2</guid><pubDate>Sat, 24 May 2025 07:23:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F-6IbeCb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AF%25E3%2582%2584%25E3%2581%25B6%25E3%2581%2595%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E2%2591%25A1%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E9%2583%25A8%25E5%2588%2586%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Inoue%252C%2520Takuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGZLdG9HY1lxTVQtVWNWUzVtVHZ5ODJ2aTNaNmNXZUdjVzNFTlRxa092ZDB2ZTJocz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Inoue, Takuya</dc:creator></item><item><title><![CDATA[🔐 Flask実践編：ログイン機能とセッション管理を作ってみよう]]></title><description><![CDATA[Flaskを使ってユーザー登録フォームができたら、次は「ログイン」や「ログアウト」などのセッション管理を学ぶステップです。このページでは、ログイン処理の基本的な作り方を、Flaskのセッション機能を使って実践的に紹介します。

 🧠 このページで学べること

ユーザー情報の保存（仮のデータベースを使って管理する方法）
ログインフォームの作成（HTMLでユーザー名とパスワードの入力欄を作る）
正しいユーザーかどうかの確認（送られてきたデータをチェックする）
ログイン状態を記録するセッションの使い方（ログイン中かどうかを判定）
ログアウト処理の作成（ログイン状態を解除する方法）


 💾 ユ...]]></description><link>https://zenn.dev/oit2003/articles/3430c165eef8bc</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/3430c165eef8bc</guid><pubDate>Sat, 24 May 2025 06:37:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lb4DUqHo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Flask%25E5%25AE%259F%25E8%25B7%25B5%25E7%25B7%25A8%25EF%25BC%259A%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25A8%25E3%2582%25BB%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[MCPをちょっとだけ理解できるかもしれない記事]]></title><description><![CDATA[
 執筆日
2025/5/24

 はじめに
完全攻略ガイド！みたいな感じにしたかったのですが思ったより完全攻略できなかったので、ちょっとわかったことを共有します。このブログで話すことは以下です。言語はpythonを使います。

MCPってたぶんこんな感じ

FastMCPを使ってMCPサーバーをpythonで立ててみる

Inspectorを使ってMCPサーバーをWeb GUIでデバッグしてみる
OpenAI の AgentSDK を使ってGPTとMCPサーバーのやり取りを実践してみる


 概要

 MCPとは
Model Context Protocol（Model Capabil...]]></description><link>https://zenn.dev/headwaters/articles/8d9a3e56ad4e1c</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/8d9a3e56ad4e1c</guid><pubDate>Sat, 24 May 2025 06:33:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PMyA6JI6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%25A0%25E3%2581%2591%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[Azure Functionを使用した MCP ツールの構築（引数付き）：その２]]></title><description><![CDATA[第 1 回では、シンプルな hello_mcp Azure 関数を作成し、ローカルでのテスト方法と Azure クラウドへのデプロイ方法について学びました。これは、Microsoft Copilot (MCP) ツールを Azure Functions を使ってどのように実装するかを理解するための良い出発点でした。
今回は、引数を受け取る MCP ツールを実装します — 具体的には、2つの整数を受け取り、その合計を返すツールです。これにより、MCP システムからの構造化された入力を処理する方法や、エラーが発生した際の適切なレスポンスの返し方について学ぶことができます。全てのコードがfun...]]></description><link>https://zenn.dev/dxclab/articles/3ec6c739232e1d</link><guid isPermaLink="true">https://zenn.dev/dxclab/articles/3ec6c739232e1d</guid><pubDate>Sat, 24 May 2025 05:54:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T3nYKQAI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520Function%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%2520MCP%2520%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%2588%25E5%25BC%2595%25E6%2595%25B0%25E4%25BB%2598%25E3%2581%258D%25EF%25BC%2589%25EF%25BC%259A%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Mustahid%2520Ahmed%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlN2I4MjBlOGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DXC%2520Lab%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSV90TGZNaEtmUjJCTENPd2hIUFlKejV1dk9NY0ZNMGcyTHdvaFlQcDdGUlpZMDZRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mustahid Ahmed</dc:creator></item><item><title><![CDATA[既存Pythonプロジェクトをuv管理へ移行する動機と方法]]></title><description><![CDATA[
 記事概要
既存Pythonプロジェクトをuv管理へ移行する動機やその方法を記載します。
uvの詳しい使い方についてはこの記事ではカバーしません。（別途記事作成予定）
注：本記事の内容はuvのv0.6.13時の情報に基づきます。最新情報は公式Docを参照ください

 想定読者

uvは気になっているが移行に二の足を踏んでいるような人

→とりあえずブランチ切って移行してみて使い心地を体験すると良いと思います。




 Pythonプロジェクトのよくある既存構成
既存Pythonプロジェクトはここではよくある以下の構成を想定とします。



管理対象
管理方法




Pythonバー...]]></description><link>https://zenn.dev/teihenn/articles/202504-how-to-migrate-to-uv</link><guid isPermaLink="true">https://zenn.dev/teihenn/articles/202504-how-to-migrate-to-uv</guid><pubDate>Sat, 24 May 2025 03:53:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uKqyn17---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A2%25E5%25AD%2598Python%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592uv%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E5%258B%2595%25E6%25A9%259F%25E3%2581%25A8%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyossy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNmIwMjg3YzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyossy</dc:creator></item><item><title><![CDATA[サカバンバスピス(模型の方)のプリクラを作った]]></title><description><![CDATA[
 Intro
ハロー！MAYAです。
1年半ぐらいに作ったSAKABANN_Timeを解説していきます。
環境依存が激しくて今のところラズパイ以外では動いたことがないのですが
動いてる画像がこれしかなかった…しかもズレてる
こんな感じになってます。

 Main
全体像がこんな感じです
https://github.com/PGA942/SAKABANN-Time/blob/main/kaohaihu.py
GitHub見れない人向け
kaohaihu.py
import cv2
import numpy as np
cascade = cv2.CascadeClassifier("/...]]></description><link>https://zenn.dev/xepos/articles/0b6a508965020e</link><guid isPermaLink="true">https://zenn.dev/xepos/articles/0b6a508965020e</guid><pubDate>Fri, 23 May 2025 22:41:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hVDh-QdU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25B3%25E3%2583%2590%25E3%2582%25B9%25E3%2583%2594%25E3%2582%25B9%2528%25E6%25A8%25A1%25E5%259E%258B%25E3%2581%25AE%25E6%2596%25B9%2529%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MAYA_Vistro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjYTYwY2ExZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MAYA_Vistro</dc:creator></item><item><title><![CDATA[プログラミング言語が多すぎる！！]]></title><description><![CDATA[
 初めに
４月末にサークルに入ったばかりで分からないことばかりですが、よろしくお願いします。

 言語多くね？
このサークルに入ってまず、dartって何だ？となりました。
そもそも私が知っていたのってpython、c言語くらいでした。
それが急にjava、c++、c#、dartと知らない言語が身近なものとなり、いろいろと違いを調べてみました。ぜひ読んでみてください。

 python
pythonは１番有名な言語だと私は思ってます。
現段階で私はまだ学んでいませんが、秋ごろから学べたらいいと思っています。
調べたところ、pythonはwebアプリ開発や人工知能の開発が得意らしく、また、...]]></description><link>https://zenn.dev/pochipochitudoi/articles/6c86a66ce14bf3</link><guid isPermaLink="true">https://zenn.dev/pochipochitudoi/articles/6c86a66ce14bf3</guid><pubDate>Fri, 23 May 2025 20:46:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JsWx3bbN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%258C%25E5%25A4%259A%25E3%2581%2599%25E3%2581%258E%25E3%2582%258B%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B0%25E3%2581%25AC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwMGFjMDNhYWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25BD%25E3%2581%25A1%25E3%2581%25BD%25E3%2581%25A1%25E3%2581%25AE%25E3%2581%25A4%25E3%2581%25A9%25E3%2581%2584%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5MjNmMmQyMTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ばぬ</dc:creator></item></channel></rss>