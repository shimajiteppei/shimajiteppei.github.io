<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 19 Jan 2025 05:08:10 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ECS（Rails API）のEC2をt3からt4gに変更した記録]]></title><description><![CDATA[自分の環境では terraform でインスタンスを立ち上げているのでその前提で書いていきます。

 インスタンスタイプの違い
まず t3 と t4g は何が違うの？という疑問があると思いますので自分が調べた範囲を書き出します。



項目／インスタンスタイプ
t3
t4g




CPU アーキテクチャ
x86（intel）
arm ベース（AWS Graviton2）


パフォーマンス
1
1.4


通常価格（small）
USD 0.0272/h
USD 0.0216/h


Savings Plans,リザーブド前払価格（small）
USD 140/y
USD 111/y
...]]></description><link>https://zenn.dev/isosa/articles/0089c054f87fcd</link><guid isPermaLink="true">https://zenn.dev/isosa/articles/0089c054f87fcd</guid><pubDate>Sun, 19 Jan 2025 05:07:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--npAZD6mu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECS%25EF%25BC%2588Rails%2520API%25EF%25BC%2589%25E3%2581%25AEEC2%25E3%2582%2592t3%25E3%2581%258B%25E3%2582%2589t4g%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYWRkZGNkNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka</dc:creator></item><item><title><![CDATA[Laravel Sailを使った環境構築と「Ports are not available」のエラー対処]]></title><description><![CDATA[Laravelの開発環境を整えるにあたって、Laravel Sailを使用しました。
Laravel Sailを使った環境構築の方法と発生したエラーの対処について記述します。
（記載内容はWindows環境です。）

 Laravel Sailとは
Laravel Sailは、Dockerを使った開発環境です。
Laravel Sailの場合、MySQLやMailHog、Redisといったツールが各コンテナの中に入っています。
（※Laravel Sailのインストールをするには、Dockerのインストールが必要。）
（※さらにWindowsの場合、Dockerをインストールする前にWS...]]></description><link>https://zenn.dev/yomogi12/articles/9c63dfc1dcd033</link><guid isPermaLink="true">https://zenn.dev/yomogi12/articles/9c63dfc1dcd033</guid><pubDate>Sat, 18 Jan 2025 16:53:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GAhW0BIq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%2520Sail%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E3%2580%258CPorts%2520are%2520not%2520available%25E3%2580%258D%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yomogimoyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVdMc2hPTXhGcnZyNmZtUGZmbmpQX0R5MUJQeU1lZTkxS3NTRzBhajBQU3c4MFlvVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yomogimoyo</dc:creator></item><item><title><![CDATA[Docker イメージにクレデンシャル情報を含めて復元してみた]]></title><description><![CDATA[Docker イメージで環境変数を使用するとクレデンシャル情報(秘密情報)を含める場合があり、イメージが流出した際に復元できてしまいます。今回はそれをテストしてみました。

 何が問題なのか？
Dockerfile にて ARG、ENV に渡された情報はイメージにも書き込まれ、それがセキュリティリスクになるということでした。以下のような書き方で発生します。
Dockerfile

ARG SECRET_KEY
ENV SECRET_KEY=${SECRET_KEY}

!
この時クレデンシャル情報を直書きしていなくてもリスクが生まれることに注意してください。

今回クレデンシャル情報はG...]]></description><link>https://zenn.dev/isosa/articles/0dcd64b809abcb</link><guid isPermaLink="true">https://zenn.dev/isosa/articles/0dcd64b809abcb</guid><pubDate>Sat, 18 Jan 2025 05:24:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4iAplV4u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2587%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A3%25E3%2583%25AB%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6%25E5%25BE%25A9%25E5%2585%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYWRkZGNkNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka</dc:creator></item><item><title><![CDATA[Dockerで学習用のPython環境の構築するメモ]]></title><description><![CDATA[
 Dockerで学習用のPython環境の構築するメモ
Dockerで学習用のPython環境を構築を行ったのでコードのメモ。

 今回の環境について

Pythonについての学習用の環境
本番環境の予定がない


 コード

 Dockerfile
FROM python:3.13-bullseye

USER root
RUN apt-get update

RUN groupadd python \
&amp;&amp; useradd python -m -g python

# COPY ./requirements.txt /home/python
# RUN pip in...]]></description><link>https://zenn.dev/mitate_gengaku/articles/docker-python-environment</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/docker-python-environment</guid><pubDate>Fri, 17 Jan 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7jUPoOGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E5%25AD%25A6%25E7%25BF%2592%25E7%2594%25A8%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[各種システム及びコマンドのプロキシ設定ガイド]]></title><description><![CDATA[
 はじめに
既に3週間は何かの病気に掛かり続けている @___nix___  です。

 背景
制約のある環境では経路も限定されていることがあります。
或いは特定のIPからの接続のみ許可されているケースもあります。
そんな時はプロキシを経由して外部にアクセスします。

 概要
プロキシ経由のアクセスですが、OSの設定をしたとしてもシステムやコマンドが独自に経路を決めてしまうので、「あれ？設定したのにプロキシ経由にならないな」ということが発生します。
今回、OSやシステム、或いはコマンドによるプロキシ設定をまとめてみました。

 設定方法

 1. Linux システム全般

 環境変数...]]></description><link>https://zenn.dev/nix/articles/04810a519df02e</link><guid isPermaLink="true">https://zenn.dev/nix/articles/04810a519df02e</guid><pubDate>Fri, 17 Jan 2025 08:33:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--do_B0Lna--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%2584%25E7%25A8%25AE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E5%258F%258A%25E3%2581%25B3%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:___nix___%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYWYxODlkNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>___nix___</dc:creator></item><item><title><![CDATA[TypeScriptとpnpmとdockerで自動テストを導入した話]]></title><description><![CDATA[
 環境

バックエンドフレームワーク: hono
フロントフレームワーク: Next.js
ORM: prisma
ランタイム: Node.js
テスト: vitest
dockerランタイム: PodmanDesktop（ファイルシステムにvirtiofsを使用）
PC: MacBookPro M2
DB: TiDB
CI: Github Actions


 2023年にPHPでテストを導入したときの反省点
元々テストが無いコードだったのでユニットテストが書きづらく、インテグレーションテストメインでテストを記述するように導入した。
チームの方々はテスト導入後に挫折せずにテストを書き...]]></description><link>https://zenn.dev/daijinload/articles/fa0dcd219d48c1</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/fa0dcd219d48c1</guid><pubDate>Fri, 17 Jan 2025 05:51:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y9mRUBwc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A8pnpm%25E3%2581%25A8docker%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item><item><title><![CDATA[WSL2＋Dockerでdocker-composeで始まるコマンドを実行する場所について]]></title><description><![CDATA[Dockerの勉強をしているのですが、
わからな過ぎて頭がドッカーんとなってます。
こんにちは、
ワニかず@40歳 出戻りエンジニアです。
今回は、
WSL2＋Dockerでdocker-composeで始まるコマンドを実行する場所
についてまとめました。
なお、
この記事は超初心者向けの記事になります。
（私の備忘録）

 docker-composeで始まるコマンドは何処で実行すればいい？

 条件

Windows
WSL2
Docker Desktop
VS Code

イメージ図は以下のような形です。

 実行する場所
docker-compose で始まるコマンドは、
必ず ...]]></description><link>https://zenn.dev/40_comeback_eng/articles/52b014173a9aa4</link><guid isPermaLink="true">https://zenn.dev/40_comeback_eng/articles/52b014173a9aa4</guid><pubDate>Fri, 17 Jan 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ThqWxv3q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25EF%25BC%258BDocker%25E3%2581%25A7docker-compose%25E3%2581%25A7%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E5%25A0%25B4%25E6%2589%2580%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%258B%25E3%2581%258B%25E3%2581%259A%254040%25E6%25AD%25B3%2520%25E5%2587%25BA%25E6%2588%25BB%25E3%2582%258A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGNhZmRmOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワニかず@40歳 出戻りエンジニア</dc:creator></item><item><title><![CDATA[docker がマルウェア扱いされる件]]></title><description><![CDATA[
PCを再起動した際画像のポップアップが突然出てきて、
題名の通りで困っていて下記の記事通り実行すると、
https://qiita.com/Grangclark/items/7e83190d3d30ea14e238
(公式のworkaroundはこちら)
記事通りではあるけど
cp: /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd: No such file or directory
cp: /Applications/Docker.app/Contents/MacOS/com.doc...]]></description><link>https://zenn.dev/marimoofficial/articles/661af29a459423</link><guid isPermaLink="true">https://zenn.dev/marimoofficial/articles/661af29a459423</guid><pubDate>Thu, 16 Jan 2025 14:01:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JeiNyRio--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520%25E3%2581%258C%25E3%2583%259E%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E6%2589%25B1%25E3%2581%2584%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2599%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhMDljMmY1YzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おすし</dc:creator></item><item><title><![CDATA[脱Nginx？ Traefik v3で作る次世代のリバースプロキシ環境]]></title><description><![CDATA[
 はじめに
最近、開発環境のリバースプロキシとしてTraefikを採用する機会がありました。
実際に使ってみると、その使いやすさと機能性に驚かされます。
特にバージョン3以降は、Nginxと比較しても大きなアドバンテージがある場面が増えてきました。
ただ、日本語での情報が少なく、特にv3に関する実践的な知見の共有が不足していると感じています。
本記事では、実際の開発経験をもとに、Traefikの特徴や具体的な活用方法をご紹介します。

 こんな課題を抱えていませんか？

Nginxの設定ファイルが複雑で管理が大変
コンテナのスケールアウト時の設定変更が面倒
リバースプロキシの状態を可視...]]></description><link>https://zenn.dev/ichimia111/articles/b1e610023e4c52</link><guid isPermaLink="true">https://zenn.dev/ichimia111/articles/b1e610023e4c52</guid><pubDate>Thu, 16 Jan 2025 02:06:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iVy6lfbX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2584%25B1Nginx%25EF%25BC%259F%2520Traefik%2520v3%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2581%25AB%25E3%2582%2583%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ZGRmOWUxMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ににゃあ</dc:creator></item><item><title><![CDATA[Dockerでlinuxの勉強のための環境を構築する方法]]></title><description><![CDATA[
 はじめに
linuxのペンギンが可愛いので、linuxの勉強を始めたみなさんこんにちは。
この記事ではlinuxの勉強のための環境をDockerを用いて構築する方法を紹介します。

 対象読者

linuxの勉強をしたい方
Dockerを使ってみたい方
linuxのペンギンが好きな方


 結論

docker-compose.yaml
version: '3.8'

services:
  rocky-linux:
    image: rockylinux:9
    container_name: rocky-linux-container
    ports:
      -...]]></description><link>https://zenn.dev/09250852/articles/c259cf4a365001</link><guid isPermaLink="true">https://zenn.dev/09250852/articles/c259cf4a365001</guid><pubDate>Wed, 15 Jan 2025 13:25:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CzCj1m-v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7linux%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxN2FmNDgwMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とつ</dc:creator></item><item><title><![CDATA[【自分用メモ】【環境構築】Windows WSL2 Python Node.js docker]]></title><description><![CDATA[毎回忘れるので、WindowsのWSL2のインストールから、GitHub, Python, node, Dockerの一連の手順のメモ

 WSL2
以下、WindowsのPowershellで、
wsl --install -d Ubuntu-24.04
デフォルトだと、メモリーを食うので、C:\Users\{ユーザー名}\.wslconfig
で、wsl2のメモリ・swap上限の設定をする

.wslconfig
[wsl2]
memory=2GB
swap=0
localhostForwarding=True

PCを再起動して、Ubuntuのbashで、
sudo apt upd...]]></description><link>https://zenn.dev/hikaelis/articles/04fe99839a3fc2</link><guid isPermaLink="true">https://zenn.dev/hikaelis/articles/04fe99839a3fc2</guid><pubDate>Wed, 15 Jan 2025 12:41:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gEKyMB74--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591%25E3%2580%2590%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2591Windows%2520WSL2%2520Python%2520Node.js%2520docker%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikaelis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmFlMWI5ZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hikaelis</dc:creator></item><item><title><![CDATA[GHCRにpush]]></title><description><![CDATA[
 内容
name: Push Docker Image to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: "Setup Docker Buildx"
      uses: docker/setup-buildx...]]></description><link>https://zenn.dev/kiwamizamurai/articles/e7986b44cc78b8</link><guid isPermaLink="true">https://zenn.dev/kiwamizamurai/articles/e7986b44cc78b8</guid><pubDate>Wed, 15 Jan 2025 03:12:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CB1bW7T4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:GHCR%25E3%2581%25ABpush%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwamizamurai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNmlfQml4aE1xOXZXUzBiSk5VZ1ZYb2ZDNkVva0toRGNkZXJzSjg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwamizamurai</dc:creator></item><item><title><![CDATA[Starship で使う Nerd Fonts のアイコンフォントを調べる方法]]></title><description><![CDATA[
 はじめに
この記事では、Starship などの Powerline 系プロンプトをカスタマイズするときに使う Nerd Fonts のアイコンフォントを調べる方法について解説します。
例として、Starship を使ってプロンプト表示をカスタマイズしたものが次の図になります。いろいろなアイコンフォントがあったので試しに表示してみたものです。

Nerd Fonts を使ったプロンプト
なお、色付きの絵文字は Nerd Fonts 以外のフォントでも対応しているものです。色がついていないものは Nerd Fonts がインストールされた環境でないと正しく表示されません。
ちなみに、こ...]]></description><link>https://zenn.dev/hiro345/articles/20250114_starship</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250114_starship</guid><pubDate>Tue, 14 Jan 2025 10:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wTiPPUEE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Starship%2520%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2520Nerd%2520Fonts%2520%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[Next.js,Prisma,MySQL環境をDockerで構築する]]></title><description><![CDATA[今回は備忘録として記録に残しておこうと思います

 Dockerの構築
npx create-next-app
ここの設定は各自で
cd app
touch docker-compose.yml
mkdir -p docker/mysql/sql
touch ./docker/mysql/sql/1_init.sql
touch .env
順番に編集していきます
version: '3'
services:
  db:
    image: mysql:8.0
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT...]]></description><link>https://zenn.dev/itsukinuko/articles/d2020be8e85727289c2d</link><guid isPermaLink="true">https://zenn.dev/itsukinuko/articles/d2020be8e85727289c2d</guid><pubDate>Tue, 14 Jan 2025 02:12:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V-vYeFk9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252CPrisma%252CMySQL%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhODMyNzI4NTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>itsuki</dc:creator></item><item><title><![CDATA[自作鯖のNextプロジェクトを独自ドメインで公開する方法]]></title><description><![CDATA[STEP 1: DockerとDocker Composeのインストール
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo apt-get update
sudo apt-get inst...]]></description><link>https://zenn.dev/itsukinuko/articles/0870a6982b0b56ad1c51</link><guid isPermaLink="true">https://zenn.dev/itsukinuko/articles/0870a6982b0b56ad1c51</guid><pubDate>Tue, 14 Jan 2025 02:11:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aBnV-Sp1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E4%25BD%259C%25E9%25AF%2596%25E3%2581%25AENext%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E7%258B%25AC%25E8%2587%25AA%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:itsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhODMyNzI4NTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>itsuki</dc:creator></item><item><title><![CDATA[モジュールのimportが原因でCloud Run上のNode.jsアプリケーションの起動が遅いの時の対処方法]]></title><description><![CDATA[こんにちは、バックエンドエンジニアの飯沼です。私たちが開発している旅行アプリ『NEWT（ニュート）』のAPIはNode.jsで動かしています。モノリシックな構成で約2年半ほど機能拡張を続けた結果、いつの間にかAPIの起動速度は30秒近くまで遅くなってしまいました。ここまで遅くなるとセールなどのイベントでトラフィックが急増した際に、APIインスタンスのスケールアウトが間に合わずエラーを返す割合が高くなってきます。
この記事では、起動速度が遅い問題を解決するために行ったことを、後学のために過程も含めて共有します。今回の内容は業務委託で協力してくださった與那城さんによる取り組みです。（ありがと...]]></description><link>https://zenn.dev/reiwatravel/articles/e34b3a1bd3aff5</link><guid isPermaLink="true">https://zenn.dev/reiwatravel/articles/e34b3a1bd3aff5</guid><pubDate>Tue, 14 Jan 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JDLbG6Q2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AEimport%25E3%2581%258C%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A7Cloud%2520Run%25E4%25B8%258A%25E3%2581%25AENode.js%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%258C%25E9%2581%2585%25E3%2581%2584%25E3%2581%25AE%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shumpei%2520IINUMA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1ZWFiNjc3MGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E4%25BB%25A4%25E5%2592%258C%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2599%25E3%2583%25AB%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjOTI2YTQ2NjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shumpei IINUMA</dc:creator></item><item><title><![CDATA[DevContainerとHonoとPrismaでバックエンドの環境を構築【忘備録】]]></title><description><![CDATA[
 はじめに
開発環境の構築は常に課題となりやすく、特にチームでの開発において「自分の環境では動くのに...」という状況は頻繁に発生します。この記事では、DevContainer を使用して、誰でも同じ開発環境を簡単に構築できる方法と、OpenAPI 定義から型を自動生成する仕組みを紹介します。

 DevContainer とは
DevContainer は、VS Code と Docker を組み合わせた開発環境のソリューションです。開発環境全体をコンテナ化し、チーム全体で完全に同じ環境を共有することができます。
主なメリット：

チーム全体で完全に同じ開発環境を共有
新メンバーの環...]]></description><link>https://zenn.dev/dotlog_techblog/articles/3b5f1dea030870</link><guid isPermaLink="true">https://zenn.dev/dotlog_techblog/articles/3b5f1dea030870</guid><pubDate>Mon, 13 Jan 2025 16:11:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fAQkh6s0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DevContainer%25E3%2581%25A8Hono%25E3%2581%25A8Prisma%25E3%2581%25A7%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2580%2590%25E5%25BF%2598%25E5%2582%2599%25E9%258C%25B2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:junjun_1345%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYjk5ODg5MDAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2589%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjOTc3YTE2ZTYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>junjun_1345</dc:creator></item><item><title><![CDATA[ECR のイメージをダウンロード]]></title><description><![CDATA[手順の概要は次の通りです。
1.ECR に Docker でログインします。
2.イメージを ECR リポジトリからダウンロードします。

 ECR にログイン

$ aws ecr get-login-password --region &lt;region&gt; --profile test | docker login --username AWS --password-stdin &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com

Login Succeeded

Logging in with your p...]]></description><link>https://zenn.dev/isosa/articles/6a469b60afc74a</link><guid isPermaLink="true">https://zenn.dev/isosa/articles/6a469b60afc74a</guid><pubDate>Sun, 12 Jan 2025 08:08:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HnJ0gvOd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECR%2520%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjYWRkZGNkNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka</dc:creator></item><item><title><![CDATA[【Next.js】Prismaをつかってみたい]]></title><description><![CDATA[Node.js および TypeScript の ORM であるPrisma。
Next.js でつかってみたいので、設定していきます！

 そもそも ORM とは？
ORM(Object Relational Mapper) とは、オブジェクト指向のように RDB を操作できるもの。
SQL を書く必要がなく、プログラミング言語と RDB の間を取り持ってくれるというイメージ。
つまり、プログラム ↔ ORM ↔ RDBとなります。

 あらためて Prisma とは？
https://www.prisma.io/docs/concepts/overview/what-is-prism...]]></description><link>https://zenn.dev/kuuki/articles/nextjs-use-prisma-postgresql-local</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/nextjs-use-prisma-postgresql-local</guid><pubDate>Sun, 12 Jan 2025 04:22:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XVnU3dgK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591Prisma%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[Dockerfileの「ENV PYTHONDONTWRITEBYTECODE 1」について【初心者向けの記事】]]></title><description><![CDATA[今回は、前回に引き続き、
dockerfileの設定についてまとめました。

dockerfile
ENV PYTHONDONTWRITEBYTECODE 1

dockerfileに「ENV PYTHONDONTWRITEBYTECODE 1」と記載することで、

Pythonが.pycファイル（コンパイル済みのPythonコード）を生成するのを防ぎます
.pycファイルはキャッシュとして使われますが、不要なディスク容量を使用し、時にデバッグを複雑にすることがあります
イメージのサイズを小さく保つのに役立ちます

3.は何となく理解できるのですが、
1と2について、もう少し掘り下げて説...]]></description><link>https://zenn.dev/40_comeback_eng/articles/3a43e205501034</link><guid isPermaLink="true">https://zenn.dev/40_comeback_eng/articles/3a43e205501034</guid><pubDate>Sun, 12 Jan 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8_pZxGf6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dockerfile%25E3%2581%25AE%25E3%2580%258CENV%2520PYTHONDONTWRITEBYTECODE%25201%25E3%2580%258D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%258B%25E3%2581%258B%25E3%2581%259A%254040%25E6%25AD%25B3%2520%25E5%2587%25BA%25E6%2588%25BB%25E3%2582%258A%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZGNhZmRmOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワニかず@40歳 出戻りエンジニア</dc:creator></item></channel></rss>