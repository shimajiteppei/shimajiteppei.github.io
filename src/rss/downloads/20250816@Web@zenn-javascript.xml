<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 16 Aug 2025 00:16:12 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[で、実際useStateってどう動いてんの？]]></title><description><![CDATA[
 📢 このシリーズについて
このシリーズは、React公式ドキュメント（ https://ja.react.dev/ ）を(できるだけ)全て読み、学んだことやコード例、自分なりの補足をまとめていくチャレンジの記録です。

 目的


Reactの基礎〜応用を公式の正しい情報で体系的に理解する
自分の言葉でアウトプットして知識を定着させる

このシリーズでは、ただ内容をなぞるのではなく、**「自分がReactを使っていても気づかなかった事実や落とし穴」**を重点的にまとめます。
読んだときに「へぇ、そうなんだ！」となったポイントは必ず記録します！

 目次 - 本記事で取り扱う内容

な...]]></description><link>https://zenn.dev/miry/articles/723e57ed19ad8b</link><guid isPermaLink="true">https://zenn.dev/miry/articles/723e57ed19ad8b</guid><pubDate>Fri, 15 Aug 2025 13:40:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IJH1CwXI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A7%25E3%2580%2581%25E5%25AE%259F%25E9%259A%259BuseState%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A9%25E3%2581%2586%25E5%258B%2595%25E3%2581%2584%25E3%2581%25A6%25E3%2582%2593%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%259F_miry41%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2MTRjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タカミ_miry41</dc:creator></item><item><title><![CDATA[マジカルミライ2025プログラミングコンテストに参戦してみた]]></title><description><![CDATA[昨年に引き続き、初音ミク「マジカルミライ 2025」プログラミング・コンテストに参戦してみました。
今年は昨年のメンバーmoomindaniとべりんぐに加え、このた、トキナイ、Yunatty の5名のメンバーで参加しました。
開発したリリックアプリは大変嬉しいことに入選となりました！

リリックアプリとは楽曲の歌詞を表示するアプリでして、今回のマジカルミライ2025の受賞曲が課題曲になってます。
2025/8/15現在はミクナビアプリ（要会員登録）経由で一般投票受付中です。8/19 正午まで。
ぜひ遊んでみて、気に入ったら投票していただけたら大変嬉しいです。
エントリーNo.7: リリッ...]]></description><link>https://zenn.dev/moomindani/articles/d1c88c83ba2a94</link><guid isPermaLink="true">https://zenn.dev/moomindani/articles/d1c88c83ba2a94</guid><pubDate>Fri, 15 Aug 2025 11:57:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wZDDkazu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2582%25B8%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%259F%25E3%2583%25A9%25E3%2582%25A42025%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E5%258F%2582%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:moomindani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2s0RktaMEMwcENoMWRfLWVkZndHTmc0US1ENl9aZ0J3SFdhNmZtZWFPalRETk5nND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>moomindani</dc:creator></item><item><title><![CDATA[TypeScript Utility Types【型レベル編】]]></title><description><![CDATA[
 はじめに
この記事では、TypeScript の型システムを活用した高度な型操作を実例を交えて詳しく解説します。Template Literal Types を活用した型安全なシステム設計や、カスタム Utility Types の作成方法まで、実践的なテクニックを紹介していきます。

 Template Literal Types を活用した高度な型操作

 イベント名の生成と型安全性
// イベント名のパターンを定義
type EventType = "user" | "post" | "comment";
type Action = "create" | "update" | ...]]></description><link>https://zenn.dev/aoken/articles/typescript-utility-types-type-level-programming</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-utility-types-type-level-programming</guid><pubDate>Fri, 15 Aug 2025 05:39:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sSVi9ovc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Utility%2520Types%25E3%2580%2590%25E5%259E%258B%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[TypeScript Utility Types【文字列・Union型編】]]></title><description><![CDATA[
 はじめに
この記事では、TypeScript の文字列操作や Union 型の操作に特化した Utility Types を実例を交えて詳しく解説していきます。

 文字列操作の Utility Types

 Uppercase&lt;T&gt; - 文字列を大文字に変換
Uppercase&lt;T&gt;は、文字列リテラル型を大文字に変換します。
type Greeting = "hello world";
type UpperGreeting = Uppercase&lt;Greeting&gt;; // "HELLO WORLD"

// 使用例：定数の生成
type Ht...]]></description><link>https://zenn.dev/aoken/articles/typescript-utility-types-string-union</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-utility-types-string-union</guid><pubDate>Fri, 15 Aug 2025 05:39:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uWFJgomb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Utility%2520Types%25E3%2580%2590%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2583%25BBUnion%25E5%259E%258B%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[TypeScript Utility Types【関数・Promise編】]]></title><description><![CDATA[
 はじめに
この記事では、TypeScript の関数や Promise に特化した Utility Types を実例を交えて詳しく解説していきます。

 関数に関する Utility Types

 ReturnType&lt;T&gt; - 関数の戻り値の型を取得
ReturnType&lt;T&gt;は、関数の戻り値の型を抽出します。
function getUser() {
  return { name: "John", age: 30, email: "john@example.com" };
}

type User = ReturnType&lt;typeof get...]]></description><link>https://zenn.dev/aoken/articles/typescript-utility-types-functions-guide</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-utility-types-functions-guide</guid><pubDate>Fri, 15 Aug 2025 05:39:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hY1HMFNM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Utility%2520Types%25E3%2580%2590%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%25BBPromise%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[TypeScript Utility Types【基本編】]]></title><description><![CDATA[
 はじめに
この記事では、TypeScript で最も頻繁に使用される基本的な Utility Types を実例を交えて詳しく解説していきます。

 基本の Utility Types

 Partial&lt;T&gt; - プロパティを全てオプショナルに
Partial&lt;T&gt;は、型Tのすべてのプロパティをオプショナル（?付き）にします。
interface User {
  id: number;
  name: string;
  email: string;
  age: number;
}

// すべてのプロパティがオプショナルになる
type Partial...]]></description><link>https://zenn.dev/aoken/articles/typescript-utility-types-basic-guide</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-utility-types-basic-guide</guid><pubDate>Fri, 15 Aug 2025 05:39:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0VuUGw-9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Utility%2520Types%25E3%2580%2590%25E5%259F%25BA%25E6%259C%25AC%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[stateを腹落ちするためには”レンダリング”を理解らなきゃダメらしい]]></title><description><![CDATA[
 📢 このシリーズについて
このシリーズは、React公式ドキュメント（ https://ja.react.dev/ ）を(できるだけ)全て読み、学んだことやコード例、自分なりの補足をまとめていくチャレンジの記録です。

 目的


Reactの基礎〜応用を公式の正しい情報で体系的に理解する
自分の言葉でアウトプットして知識を定着させる


 内容
このシリーズでは、ただ内容をなぞるのではなく、「自分がReactを使っていても気づかなかった事実や落とし穴」を重点的にまとめます。
読んだときに「へぇ、そうなんだ！」となったポイントは必ず記録します！

 目次 - 本記事で取り扱う内容

...]]></description><link>https://zenn.dev/miry/articles/9d5aaa75fc71e1</link><guid isPermaLink="true">https://zenn.dev/miry/articles/9d5aaa75fc71e1</guid><pubDate>Thu, 14 Aug 2025 13:53:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JjQ2qc44--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:state%25E3%2582%2592%25E8%2585%25B9%25E8%2590%25BD%25E3%2581%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2581%25AF%25E2%2580%259D%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E2%2580%259D%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258D%25E3%2582%2583%25E3%2583%2580%25E3%2583%25A1%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%259F_miry41%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2MTRjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タカミ_miry41</dc:creator></item><item><title><![CDATA[Node.jsのモジュール解決とnpm workspacesにおけるモノレポ参照の仕組み]]></title><description><![CDATA[
 はじめに
モノレポを利用しはじめるにあたって、npm workspacesで他パッケージのモジュールを参照する仕組みを調べたのでまとめました。

 1. Node.jsの基本モジュール解決ルール
Node.jsでは、require('foo') のようにモジュール名が渡されたとき、次の順で探索します。


コアモジュールの確認
http や fs など、Node.jsに組み込みのモジュールがあればそれを即座に返す。


相対／絶対パス指定の確認
./foo や /path/to/foo のようにパスで指定された場合は、そのパスを直接解決。


名前（識別子）による探索
現在のファイル...]]></description><link>https://zenn.dev/papanyanko/articles/how-nodejs-resolves-workspace-in-npm-workspaces</link><guid isPermaLink="true">https://zenn.dev/papanyanko/articles/how-nodejs-resolves-workspace-in-npm-workspaces</guid><pubDate>Thu, 14 Aug 2025 11:58:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uw6Yp70F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%25A8npm%2520workspaces%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:papanyanko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZGFlNzE5YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>papanyanko</dc:creator></item><item><title><![CDATA[【初心者向け】JavaScriptのconsole.log() ってなんだろう？]]></title><description><![CDATA[
 はじめに
JavaScriptをつかって、DOMを操作して動的な変更を加えている中で、そもそもconsole.log()を使っているが、これってどんな目的で何に使われているのか疑問に思ったため、ここにメモとしてまとめていきます。
※この記事はあくまで初心者のメモとして見ていただけますと幸いです。

 コンソールとは
コンソールはブラウザの開発者ツールにあり、ウェブページ上では見えない情報も確認できます。
用途は主に以下の2つがあります。

コンソールには、ログに記録されたメッセージを表示することとJavaScript を実行することの 2 つの主な用途があります。
※https://...]]></description><link>https://zenn.dev/mabo23/articles/934e173cbf8d9a</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/934e173cbf8d9a</guid><pubDate>Thu, 14 Aug 2025 11:31:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OvgmBGZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591JavaScript%25E3%2581%25AEconsole.log%2528%2529%2520%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25E3%2582%258D%25E3%2581%2586%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[#120 日本人に読めないフォント 強化練習ツールを作ってみた]]></title><description><![CDATA[
 概要
「Electroharmonix」という、日本人に読めないことで有名なフォントがあります。
今回はこちらのフォントの解読スキルを習得すべく、Chrome拡張機能を作成しました。この拡張機能を使用すると、すべてのウェブサイトがElectroharmonixフォントで表示され、スパルタ的に読み方を練習できます。さらに、ワンクリックでカスタムフォント表示と通常表示を切り替え可能です。なお、Electroharmonixは英数字しか対応していないため日本語には雰囲気が似ている「バナナスリップ plus」フォントを使用しました。

画像出典: 日本人にだけ読めないフォント「Electro...]]></description><link>https://zenn.dev/nxted_sapporo/articles/ac514c67a8feb4</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/ac514c67a8feb4</guid><pubDate>Thu, 14 Aug 2025 06:37:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h0oFj0q6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523120%2520%25E6%2597%25A5%25E6%259C%25AC%25E4%25BA%25BA%25E3%2581%25AB%25E8%25AA%25AD%25E3%2582%2581%25E3%2581%25AA%25E3%2581%2584%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2583%2588%2520%25E5%25BC%25B7%25E5%258C%2596%25E7%25B7%25B4%25E7%25BF%2592%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[Nuxt4 公式モジュール選択ガイド]]></title><description><![CDATA[
 概要
Nuxt4で新規プロジェクトを構築する際に新たな選択項目の公式モジュール選択についての解説になります。
初期構築を進めていくと下記質問をされます。
こちらの選択肢をYESにすると公式モジュールを導入することができます。
Would you like to install any of the official modules

 公式モジュールの選択肢
プロジェクト作成時に選択できる公式モジュールは以下の通りです。

 @nuxt/ui: UI Framework 🎨
Webサイトやアプリの見た目を作るための、ボタンやフォームといったUIコンポーネント集です。


Tailwi...]]></description><link>https://zenn.dev/shunsuke_stack/articles/d48919661a1043</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/d48919661a1043</guid><pubDate>Thu, 14 Aug 2025 04:53:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lLzfVEz6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt4%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E9%2581%25B8%25E6%258A%259E%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[【JavaScript】参照型と値型の違いをclassListプロパティで体感する]]></title><description><![CDATA[
 はじめに
要素.classListプロパティの挙動を確かめるため、以下のコードで id 属性が p2 の pタグ を取得し、その値の変化を観察しました。

 prac1.html
&lt;body&gt;
    &lt;div id="target1" class="bg-red"&gt;
        &lt;p id="p1"&gt;
            Hello World 1
        &lt;/p&gt;
    &lt;/div&gt;

    &lt;div id="target2" class="bg-red"&gt;
        &lt;p i...]]></description><link>https://zenn.dev/mabo23/articles/b2c17fefee90dc</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/b2c17fefee90dc</guid><pubDate>Wed, 13 Aug 2025 11:31:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RZatA73k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E5%258F%2582%25E7%2585%25A7%25E5%259E%258B%25E3%2581%25A8%25E5%2580%25A4%25E5%259E%258B%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592classList%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25A7%25E4%25BD%2593%25E6%2584%259F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[ページ離脱時にアラートを出したかった]]></title><description><![CDATA[
 概要
Nuxtで以下の方法でページ離脱をするときに window.confirm('hogehoge') してOKならそのまま遷移、キャンセルなら留まるみたいなことをしたかった

リロード(離脱というかコンポーネントのunmount)
単純にどっか行く
ブラウザの「戻る」ボタン


 😥できなかったこと1: beforeunloadイベントの追加
export default defineComponent({
  setup() {
    const handleBeforeUnload = () =&gt; {
      const isConfirm = window.co...]]></description><link>https://zenn.dev/mt5/articles/41a046d7ddd259</link><guid isPermaLink="true">https://zenn.dev/mt5/articles/41a046d7ddd259</guid><pubDate>Wed, 13 Aug 2025 09:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nRpUqeFT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E9%259B%25A2%25E8%2584%25B1%25E6%2599%2582%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2583%25BC%25E3%2581%258F%25E3%2581%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2OGY2M2MyNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おーくぼ</dc:creator></item><item><title><![CDATA[Error: error:0308010C:digital envelope routines::unsupported]]></title><description><![CDATA[
 これなに


npm start でサーバー起動しようとしたら Error: error:0308010C:digital envelope routines::unsupported というエラーが出た
その時の解決方法をメモ


 原因

Node.js のバージョンと Webpack の互換性の問題
Node.js v17 以降で OpenSSL の変更が原因で発生するようになった模様で、v16 以前は発生しなかったらしい


 解決方法

 その１：npm_modules フォルダを削除して再インストール


npm_modules: フォルダを削除する

npm insta...]]></description><link>https://zenn.dev/su3_hokkaido/articles/2024-12-01_digital_envelop_routines_unsupported</link><guid isPermaLink="true">https://zenn.dev/su3_hokkaido/articles/2024-12-01_digital_envelop_routines_unsupported</guid><pubDate>Wed, 13 Aug 2025 06:50:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4pjniQvH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Error%253A%2520error%253A0308010C%253Adigital%2520envelope%2520routines%253A%253Aunsupported%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Su3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmY2Q1YTk5MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Su3</dc:creator></item><item><title><![CDATA[無限ローディングに泣かない！CORSとポート競合の向き合い方]]></title><description><![CDATA[
 はじめに
Webアプリケーションを開発していると、デプロイ環境では問題なく動くのに、なぜかローカル環境だけは無限ローディングのままでデータが表示されない、そんな経験ありませんか？
最近、私自身がまさにこの無限ローディング地獄に陥ってしまいました。GitHub Actionsでデプロイされたプレビュー版は問題なく動きます。しかし、最新にしたはずの自分のローカル環境だと、テーブルがずっとくるくる回りっぱなし。
ブラウザの開発者ツールを見ても、明確なエラーが分からず頭を抱えました。

 Web開発のセキュリティ「CORS」とは
無限ローディングの裏に潜んでいた原因、それがCORS(Cros...]]></description><link>https://zenn.dev/emoba_tech/articles/5884b042402326</link><guid isPermaLink="true">https://zenn.dev/emoba_tech/articles/5884b042402326</guid><pubDate>Wed, 13 Aug 2025 05:08:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GCiFg7mG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E9%2599%2590%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E6%25B3%25A3%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581CORS%25E3%2581%25A8%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E7%25AB%25B6%25E5%2590%2588%25E3%2581%25AE%25E5%2590%2591%25E3%2581%258D%25E5%2590%2588%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nekoyukichi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmNTk5ZjM4YjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Emoba%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkMjEyNmVjZDkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nekoyukichi</dc:creator></item><item><title><![CDATA[Node.jsでマルチCPUコアを使ってスケールする方法（+Kubernetes）]]></title><description><![CDATA[
 はじめに
ある日、トラフィックがドカっと増えてアプリが落ちました🥹
「CPUは2コアあるし、余裕でしょ」と思っていたのに、どうやら1コアしか使われてない様子…
原因は単純で、Node.jsはデフォルトでマルチコアを使わないんですよね。
なので今回は、clusterモジュールを使って「疑似マルチコア化」してみた話です。

 そもそもJavaScriptってなんでシングルスレッドなの？
この設計は、ブラウザの主流用途である「DOM操作との親和性」と「直感的な非同期処理」を実現するために選ばれたもの。

JavaScript is single-threaded by nature. Th...]]></description><link>https://zenn.dev/quicksilversel/articles/enable-multi-cpu-nodejs</link><guid isPermaLink="true">https://zenn.dev/quicksilversel/articles/enable-multi-cpu-nodejs</guid><pubDate>Wed, 13 Aug 2025 01:53:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9KZNr4Qk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581CPU%25E3%2582%25B3%25E3%2582%25A2%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B9%25E3%2582%25B1%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588%252BKubernetes%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BE%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1NmE2MDZlMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゾイ</dc:creator></item><item><title><![CDATA[#119　【ThreeJS】自作のモデルを読み込んで夏っぽい雰囲気の出力に挑戦してみた]]></title><description><![CDATA[
 はじめに
一時期、趣味で3Dモデリングをやっていた時期があり、前から興味があったThreeJSを触ってみましたので備忘録的な意味を込めて記事にしました。

 概要
今回、自作したガチャガチャのモデルを使用して少し夏っぽい雰囲気を感じられるレンダリングを目指して色々と試してみました。
ThreeJSの機能に触れるということも目的にしていたため、少し遠回りな実装もあると思いますがご了承ください。

 ディレクトリ構成
今回の最終的なディレクトリ構成は以下のようになります。
  ├── assets モデルやHDR、テクスチャを格納する
  │  │
  │  ├── models
  │...]]></description><link>https://zenn.dev/nxted_sapporo/articles/57d5b8ef73a73b</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/57d5b8ef73a73b</guid><pubDate>Wed, 13 Aug 2025 01:06:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g0NQaUgi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523119%25E3%2580%2580%25E3%2580%2590ThreeJS%25E3%2580%2591%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7%25E5%25A4%258F%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E9%259B%25B0%25E5%259B%25B2%25E6%25B0%2597%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[WASM の約束と現実のギャップ──組み込みデバイスで 142 倍速くするハードウェア加速の可能性]]></title><description><![CDATA[
 1. 導入：WASM の「ほぼネイティブ速度」は本当か？
「WebAssembly（以下、WASM）は C / C++ / Rust などのコードをブラウザでほぼネイティブ速度で動かせる」と聞いたことがある人は多いでしょう。
しかし、Raspberry Pi で単純なフィボナッチ計算を試してみると、想像以上に遅い……そんな経験はありませんか？
WASM は、ブラウザ上の性能ボトルネックを解消し、安全かつ高効率でコードを実行するために設計されました。コードをバイナリ形式にコンパイルし、小さなサイズで高速に起動し、ほぼネイティブ速度で動作できるはずです。
実際、デスクトップ PC やノー...]]></description><link>https://zenn.dev/zoe_nichika/articles/ca1c48ca7ca25a</link><guid isPermaLink="true">https://zenn.dev/zoe_nichika/articles/ca1c48ca7ca25a</guid><pubDate>Wed, 13 Aug 2025 01:04:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0COZ9lDk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WASM%2520%25E3%2581%25AE%25E7%25B4%2584%25E6%259D%259F%25E3%2581%25A8%25E7%258F%25BE%25E5%25AE%259F%25E3%2581%25AE%25E3%2582%25AE%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2597%25E2%2594%2580%25E2%2594%2580%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25A7%2520142%2520%25E5%2580%258D%25E9%2580%259F%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%25E3%2583%258F%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E5%258A%25A0%25E9%2580%259F%25E3%2581%25AE%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NichikaP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiMDI5ZjQ1YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NichikaP</dc:creator></item><item><title><![CDATA[XSS脆弱性の基礎からDOMPurifyによる防御までReactで学ぶ]]></title><description><![CDATA[
 XSS(クロスサイトスクリプティング)とは
XSS（クロスサイトスクリプティング）とは、Webアプリケーションに悪意のあるスクリプト（JavaScriptなど）を埋め込み、ユーザーのブラウザ上で実行させることで情報の盗聴や不正操作を行う攻撃手法です。
例えば、ブログの記事投稿機能にscriptタグで悪意あるスクリプト（ポップアップ表示や外部サイトへの自動リダイレクトなど）を埋め込んで投稿するケースなどがあります。
Twitter,Yahooニュース,YouTubeといった著名なサービスでも、
以下の表のように被害を受けたことがあります。



サービス
西暦
概要
備考




Tw...]]></description><link>https://zenn.dev/ohimusdev46301/articles/479ac19d593cb5</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/479ac19d593cb5</guid><pubDate>Tue, 12 Aug 2025 19:15:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PRSN4lsg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XSS%25E8%2584%2586%25E5%25BC%25B1%25E6%2580%25A7%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589DOMPurify%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%2598%25B2%25E5%25BE%25A1%25E3%2581%25BE%25E3%2581%25A7React%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[【繰り返し処理の最適化】JavaScriptの setInterval を使わずに GSAP の onRepeat で実装する。]]></title><description><![CDATA[繰り返し処理を実装する際はsetIntervalを使用することが多いかと思いますが、今回はGSAPのonRepeatで実装する方法をご紹介します。

 setInterval で実装する際の気になる点
setIntervalで繰り返し処理を実装する際の気になる点は以下です。

別タブを選択すると実行間隔が間引きされて実行され続ける

ブラウザはパフォーマンスを最適化するため、アクティブでないタブ（別タブを選択している場合など）のJavaScript実行を制限します。この現象は「スロットリング」と呼ばれ、ブラウザによって実行制限は変化します。
例えば、以下のコードを実行中に別のタブに切り替...]]></description><link>https://zenn.dev/kurichan/articles/80c12db2c8b2b6</link><guid isPermaLink="true">https://zenn.dev/kurichan/articles/80c12db2c8b2b6</guid><pubDate>Tue, 12 Aug 2025 15:57:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rjoCG-RZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E3%2580%2591JavaScript%25E3%2581%25AE%2520setInterval%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25AB%2520GSAP%25C2%25A0%25E3%2581%25AE%2520onRepeat...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258A%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjN2IzM2RiNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くりちゃん</dc:creator></item></channel></rss>