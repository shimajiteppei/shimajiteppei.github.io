<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 07 Feb 2025 08:37:57 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[decoder onlyのデータセットに関して]]></title><description><![CDATA[
 学習方法

pretrain(事前学習)
インストラクションチューニング


 CausalLMの前提

CausalLM modelsの場合、labels を 質問応答モデルのように考えてはいけない。


代わりに、labels と input_ids は形状が同じになるように作成 する必要があります。
数学的に表すと、インデックス k の labels トークンを予測するために、input_ids のインデックス 0 から k-1 までのトークンを使用

pred_token_k = model(input_ids[:k])

 ポイント1

損失 (loss)の算出はlabel...]]></description><link>https://zenn.dev/timoneko/articles/70fde2fa81bb5d</link><guid isPermaLink="true">https://zenn.dev/timoneko/articles/70fde2fa81bb5d</guid><pubDate>Fri, 07 Feb 2025 07:06:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hFOPjCI7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:decoder%2520only%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2597%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:timoneko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4NjZlZGEzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>timoneko</dc:creator></item><item><title><![CDATA[旋律の歌唱可能性の定量化に向けた歌唱の正確さの一分析]]></title><description><![CDATA[
 はじめに
この記事では、卒業研究の『旋律の歌唱可能性の定量化に向けた歌唱の正確さの一分析』における分析手法について簡単に述べます。

 分析手法

 時間同期
録音データと正解データ(実験で使用した音源)において、開始地点を揃えるようにするためにnumpyのcorrelate関数を用いました。

 ノイズ調整
参加者の独自の環境で録音しているため、ノイズが入らないように振幅値を1.0で正規化し、0.01以下の音声はフィルタリングするようにしました。

 単位変換
今回の周波数推定は単位がHzになっています。しかし、この単位では半音上がった際にHzでは約1.06倍上がるため、数値として...]]></description><link>https://zenn.dev/kahamimi/articles/3506f44dffe6ca</link><guid isPermaLink="true">https://zenn.dev/kahamimi/articles/3506f44dffe6ca</guid><pubDate>Fri, 07 Feb 2025 07:04:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8PFgM3M7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%258B%25E5%25BE%258B%25E3%2581%25AE%25E6%25AD%258C%25E5%2594%25B1%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AE%25E5%25AE%259A%25E9%2587%258F%25E5%258C%2596%25E3%2581%25AB%25E5%2590%2591%25E3%2581%2591%25E3%2581%259F%25E6%25AD%258C%25E5%2594%25B1%25E3%2581%25AE%25E6%25AD%25A3%25E7%25A2%25BA%25E3%2581%2595%25E3%2581%25AE%25E4%25B8%2580%25E5%2588%2586%25E6%259E%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B7%259D%25E5%258E%259F%25E6%259C%25AA%25E6%25B3%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YVV6Z1ZleUNNOVU1NExBVWNxMV9oYmFIYXVCMlU1QmtuZHV3UWo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>川原未波</dc:creator></item><item><title><![CDATA[Pythonのコンパイラを作りたい #2 - Python AST から LLVM IR を生成するまでの概略]]></title><description><![CDATA[こんにちは。前回の記事（「#1 - 開発の背景と概要」) では、Python コードを LLVM IR にコンパイルするプロジェクトの全体像や開発のモチベーションなどを紹介しました。
今回は、「Python AST から LLVM IR を生成するまでの概略」 についてご説明します。
具体的には、次のようなステップを追います。

Python のソースコードを ast モジュールでパースして抽象構文木 (AST) を得る
AST の各ノードを巡回 (Visitor パターン) して「どのように LLVM IR に変換するか」を決める
LLVM IR をテキストとして組み立て、.ll ファ...]]></description><link>https://zenn.dev/t3tra/articles/d03c8047287296</link><guid isPermaLink="true">https://zenn.dev/t3tra/articles/d03c8047287296</guid><pubDate>Fri, 07 Feb 2025 06:56:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---DWvbz_G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2520%25232%2520-%2520Python%2520AST%2520%25E3%2581%258B%25E3%2582%2589%2520LLVM%2520IR%2520%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E6%25A6%2582%25E7%2595%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t3tra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2MDdkNzY3ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t3tra</dc:creator></item><item><title><![CDATA[スポーツデータサイト一覧(サッカー編)]]></title><description><![CDATA[スポーツデータの分析に興味があるけれど、「どのサイトを見ればいいのかわからない」「どんなデータが手に入るのか知りたい」と思ったことはありませんか？
この記事では、サッカーデータを取得できる主要なサイトを 「リーグ公式サイト」 と 「スタッツまとめサイト」 に分類し、紹介します。試合ごとの基本スタッツを確認したい場合から、選手やチームの詳細なパフォーマンスデータを分析したい場合まで、用途に応じて活用してください！

 リーグ公式サイト

Jリーグ

https://www.jleague.jp/stats/

プレミアリーグ

https://www.premierleague.com/s...]]></description><link>https://zenn.dev/genki_morph/articles/2d8133a902234e</link><guid isPermaLink="true">https://zenn.dev/genki_morph/articles/2d8133a902234e</guid><pubDate>Fri, 07 Feb 2025 06:44:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BplbX3Xr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2584%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E4%25B8%2580%25E8%25A6%25A7%2528%25E3%2582%25B5%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:genki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5ZDE2MzM0ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>genki</dc:creator></item><item><title><![CDATA[Pythonのコンパイラを作りたい #1 - 開発の背景と概要]]></title><description><![CDATA[こんにちは。これから続ける(かもしれない)「Pythonのコンパイラを作りたい」では私が取り組んでいる「PythonコードをLLVM IRへ変換し、ネイティブバイナリを生成する」プロジェクト pyc のあれこれをご紹介します。
https://github.com/t3tra-dev/pyc
初回のこの記事では、開発の背景・モチベーションや全体像など、「なぜわざわざPythonのコンパイラを作るのか？」という部分をざっくりとお話ししようと思います。

 なぜPythonをコンパイルするのか？

 1. Pythonの高速化がしたい
Pythonはとても書きやすく、多くのライブラリが揃って...]]></description><link>https://zenn.dev/t3tra/articles/056b406cb688da</link><guid isPermaLink="true">https://zenn.dev/t3tra/articles/056b406cb688da</guid><pubDate>Fri, 07 Feb 2025 06:34:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ad2lXYQj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2520%25231%2520-%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E8%2583%258C%25E6%2599%25AF%25E3%2581%25A8%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t3tra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2MDdkNzY3ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t3tra</dc:creator></item><item><title><![CDATA[【初心者向け】Python Numpy 二次元配列の指定（スライシング）]]></title><description><![CDATA[Pythonの数値計算ライブラリNumpyは、多次元配列を効率的に扱うための強力なツールです。特に、二次元配列（行列）の操作は、データ分析や機械学習において頻繁に行われます。
本記事では、Numpyの二次元配列における要素の指定（スライシング）に焦点を当て、様々なテクニックを具体的なコード例を交えながら解説します。

 基本的なスライシング
まずは、基本的なスライシングの方法から見ていきましょう。
# 2次元配列の指定
import numpy as np
a_list = np.arange(0, 12).reshape(3,4)
a_list
array([[ 0,  1,  2, ...]]></description><link>https://zenn.dev/yogurt/articles/ada71fa5638321</link><guid isPermaLink="true">https://zenn.dev/yogurt/articles/ada71fa5638321</guid><pubDate>Fri, 07 Feb 2025 06:28:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_EQYXeSy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%2520Numpy%2520%25E4%25BA%258C%25E6%25AC%25A1%25E5%2585%2583%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E6%258C%2587%25E5%25AE%259A%25EF%25BC%2588%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmFiYWU4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨーグルト</dc:creator></item><item><title><![CDATA[【学習ログ】Pythonを使ってJSONデータをExcelへ自動変換]]></title><description><![CDATA[今回は、Pythonスクリプトを通じて、JSONからExcelへの変換処理について学習したので、アウトプットとして記事を共有します。

 ディレクトリ構成図
─ json_to_excel
    ├ input
    |   ├ sample1.json
    |   ├ sample2.json
    |   └ template.xlsx
    ├ output
    |   └output.xlsx(ない場合は自動的に作成される)
    └ src
        └main.py
    ・・・

 スクリプトの概要
このスクリプトは以下の機能を提供します。

指定...]]></description><link>https://zenn.dev/headwaters/articles/22efecffa7bf15</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/22efecffa7bf15</guid><pubDate>Fri, 07 Feb 2025 05:51:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LtnYORZ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%2591Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6JSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592Excel%25E3%2581%25B8%25E8%2587%25AA%25E5%258B%2595%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yamao%2520Kodai%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3dLeXFnYjlkS1pTb2p6Q2UweWN3Z0NLUzJ4QXBfaUlmMElSa1ZmX19xRVlLVFpRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yamao Kodai</dc:creator></item><item><title><![CDATA[PythonのクロージャとJavaScriptのクロージャ、実装の違い]]></title><description><![CDATA[
 Pythonのクロージャ


定義方法: 関数の中で別の関数を定義し、内側の関数が外側の関数の変数を参照する。

def outer_function(text):
    def inner_function():
        print(text)
    return inner_function

closure = outer_function('Hello, Python!')
closure()  # Output: Hello, Python!


再代入の制限: nonlocalキーワードが必要。

def outer_function(count):
    ...]]></description><link>https://zenn.dev/pypypymi/articles/b683b56f2c726b</link><guid isPermaLink="true">https://zenn.dev/pypypymi/articles/b683b56f2c726b</guid><pubDate>Fri, 07 Feb 2025 03:35:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hw1eo3UH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2581%25A8JavaScript%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2580%2581%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tac-tac-go%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WTctaEpSdWxmSTVwMGhQX3dSXzk0dzhab1pQbGtXaHd4ejB5UG1HLWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tac-tac-go</dc:creator></item><item><title><![CDATA[検索結果の評価プロンプト]]></title><description><![CDATA[import openai
from openai.resources.chat.completions import ChatCompletion
import os, json

def evaluate_relevance(question: str, search_results: list) -&gt; str:
    """
    質問文と検索結果のリストに基づいて、各検索結果（"text" フィールド）の関連性評価を実行する関数

    :param question: 質問文
    :param search_results: [{ "idx": int, "sc...]]></description><link>https://zenn.dev/yunosuke068/articles/a051bd99bfcf6a</link><guid isPermaLink="true">https://zenn.dev/yunosuke068/articles/a051bd99bfcf6a</guid><pubDate>Thu, 06 Feb 2025 23:52:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nfHX3YxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A4%259C%25E7%25B4%25A2%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25AE%25E8%25A9%2595%25E4%25BE%25A1%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yunosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZUxYNl83dzZHbUdMY2pqcTF6OFNxa2ZTQmJVWWJmcXdlcGdSczV5eEZucXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yunosuke</dc:creator></item><item><title><![CDATA[RAGシステム導入前に、全文検索 / セマンティック検索 / ハイブリット検索を整理してみた]]></title><description><![CDATA[
 はじめに
ChatGPTを活用したRAGシステムの開発案件に参画することになったので、キャッチアップしたことを記載していきます。RAG（Retrieval Augmented Generation）とは検索拡張生成のことで、社内専用GPTと言えばイメージしやすいでしょう。AIに企業独自のデータ（大量の社内ナレッジや文書、就業規則など）を学習させ、そのデータを元にAIが適宜回答します。また、外部のAIモデルがその企業独自データを学習することはないため、データ流出の心配はなく、セキュリティ面でも安心です。

 主なユースケース
こちらが参考になります。
https://www.softb...]]></description><link>https://zenn.dev/shuto2828/articles/5090433d38e42c</link><guid isPermaLink="true">https://zenn.dev/shuto2828/articles/5090433d38e42c</guid><pubDate>Thu, 06 Feb 2025 23:34:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eD6J1IN4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RAG%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E5%25B0%258E%25E5%2585%25A5%25E5%2589%258D%25E3%2581%25AB%25E3%2580%2581%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%2520%252F%2520%25E3%2582%25BB%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E6%25A4%259C%25E7%25B4%25A2%2520%252F%2520%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2585%25E3%2583%25BC%25E3%2581%25A8%25EF%25BD%259C%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNlMWJmNjg1NTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しゅーと｜フリーランスエンジニア</dc:creator></item><item><title><![CDATA[Python記事リンク]]></title><description><![CDATA[自分用Python記事まとめ]]></description><link>https://zenn.dev/eastxe/books/4973ca390045ab</link><guid isPermaLink="true">https://zenn.dev/eastxe/books/4973ca390045ab</guid><pubDate>Thu, 06 Feb 2025 21:39:28 GMT</pubDate><dc:creator>EAST</dc:creator></item><item><title><![CDATA[Progate終わったら何をする？]]></title><description><![CDATA[Progateで一通り基礎を学んだら次は何をすべきでしょうか。
ざっくり言うと、「アウトプット」ということなんでしょうが、どうアウトプットしたらよいか悩む方もいらっしゃると思います。
ということで私なりに3つピックアップしました。少しでも参考になる部分があれば幸いです。
（一番理想なのは楽しいと思えることに取り組むことだと思います。）
!
Pythonに絞った内容になっています。


 車輪の再発明をする
車輪の再発明とは、既に世の中にあって知られている物を、もう一度作ることを言います。
「既にあるものをまた発明する」ということなので、一般的にはネガティブな言葉として捉えられますが、勉強...]]></description><link>https://zenn.dev/python_academia/articles/5182ff602ccdd5</link><guid isPermaLink="true">https://zenn.dev/python_academia/articles/5182ff602ccdd5</guid><pubDate>Thu, 06 Feb 2025 21:32:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WF_LcmWR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Progate%25E7%25B5%2582%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E4%25BD%2595%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Python%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2587%25E3%2583%259F%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NzE0ZDdkNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Pythonアカデミア</dc:creator></item><item><title><![CDATA[uvでライブラリのinstallが必要なスクリプトを実行する方法]]></title><description><![CDATA[
 概要
uvだとglobalのpythonが使えない（2025/02/07）
その場合でもライブラリのinstallが必要なpythonスクリプトを手軽に実行する方法がある

 参考文献

https://docs.astral.sh/uv/guides/scripts/#declaring-script-dependencies


 方法1 --with を利用する
test.pyを用意する
import time
from rich.progress import track

for i in track(range(20), description="For example:...]]></description><link>https://zenn.dev/eastxe/articles/bb24dd900ae7ce</link><guid isPermaLink="true">https://zenn.dev/eastxe/articles/bb24dd900ae7ce</guid><pubDate>Thu, 06 Feb 2025 16:23:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KeLwfTS8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%25E3%2581%25A7%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AEinstall%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:EAST%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5NmMwNGM4YmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>EAST</dc:creator></item><item><title><![CDATA[【初心者向け】AnacondaでPython仮想環境（Windows）]]></title><description><![CDATA[Python開発をもっと快適に！Anacondaで仮想環境を構築しよう！（Windows編）
Pythonで開発を行う際、プロジェクトごとに異なるライブラリのバージョンを使用したい場面は多々あります。
そんな時に役立つのが、仮想環境です。
仮想環境を使うことで、プロジェクトごとに独立したPython環境を構築でき、ライブラリのバージョン管理や依存関係の衝突を避けることができます。
「仮想環境って何？どうやって作るの？」
そんな疑問をお持ちのあなたも、この記事を読めば大丈夫！
Anacondaを使った仮想環境の構築方法を、Windows環境向けに分かりやすく解説します。
この記事を読めば、...]]></description><link>https://zenn.dev/yogurt/articles/00a97508af8114</link><guid isPermaLink="true">https://zenn.dev/yogurt/articles/00a97508af8114</guid><pubDate>Thu, 06 Feb 2025 11:44:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cbssSd-5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Anaconda%25E3%2581%25A7Python%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2588Windows%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmFiYWU4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨーグルト</dc:creator></item><item><title><![CDATA[決定木ってなに...?]]></title><description><![CDATA[
 記事を書いた経緯
最近kaggleのコンペで機械学習にちょっと手を出しておりその関係で、LightGBMというモデルを使用している。
初心者にはよく使われているらしく確かに、原理をあまり理解していなくてもなんとなくパラメータをポチポチ設定をしてなんとなく使用しても、意外と使うことができる。
しかも大してスペックが良くないPCでもそんなに時間がかからない。(複雑なことをしていないからだと思うが数十秒)
これだけ軽いなら、ちょっとした機械学習による分析や異常検知や傾向予測をアプリとかに組み込めそうだなと思いつつどんなものか調べてみた。
[参考記事]
https://zenn.dev/ot...]]></description><link>https://zenn.dev/amana/articles/2a84a2d02db292</link><guid isPermaLink="true">https://zenn.dev/amana/articles/2a84a2d02db292</guid><pubDate>Thu, 06 Feb 2025 11:12:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GDM1jB7y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25B1%25BA%25E5%25AE%259A%25E6%259C%25A8%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB...%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MjJkN2U5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[【初心者向け】Pandas時系列データの基礎]]></title><description><![CDATA[データ分析において、時系列データの扱いは非常に重要です。
株価の変動、気温の変化、売上データなど、様々なデータが時系列データとして存在します。
「Pandasで時系列データを扱えるようになれば、データ分析がもっと深く、もっと面白くなる！」
そう思ったことはありませんか？
この記事では、1か月分、1年分のデータを簡単に作成する方法や、月平均データの作成方法について解説していきます。
具体的なコード例を交えながら、初心者の方でも分かりやすいように丁寧に解説します。

 時系列データの基礎

 １か月分のデータをつくる
import pandas as pd

df_M = pd.date_r...]]></description><link>https://zenn.dev/yogurt/articles/786ec227f643e6</link><guid isPermaLink="true">https://zenn.dev/yogurt/articles/786ec227f643e6</guid><pubDate>Thu, 06 Feb 2025 10:56:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--17x2WLsZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Pandas%25E6%2599%2582%25E7%25B3%25BB%25E5%2588%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmFiYWU4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨーグルト</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-391｜A - Lucky Direction]]></title><description><![CDATA[
 設問ページ

🔗ABC-391 A - Lucky Direction



 提出結果
def getString():
    return input()


def main():
    S = getString()
    dirs = ["N", "NE", "E", "SE", "S", "SW", "W", "NW"]

    i = dirs.index(S)

    print(dirs[(i + 4) % 8])


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/efd961e74532a0</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/efd961e74532a0</guid><pubDate>Thu, 06 Feb 2025 10:15:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L1j0py-f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-391%25EF%25BD%259CA%2520-%2520Lucky%2520Direction%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-390｜A - 12435]]></title><description><![CDATA[
 設問ページ

🔗ABC-390 A - 12435



 提出結果
def getIntList():
    return list(map(int, input().split()))


def main():
    A = [0] + getIntList()

    d = []
    for i in range(1, len(A)):
        if A[i] == i:
            continue
        else:
            d.append(i)

    print("Yes" if len(d) == 2 an...]]></description><link>https://zenn.dev/hyperdb/articles/a95e2f0974b377</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/a95e2f0974b377</guid><pubDate>Thu, 06 Feb 2025 10:15:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--50nadgef--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-390%25EF%25BD%259CA%2520-%252012435%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-390｜B - Geometric Sequence]]></title><description><![CDATA[
 設問ページ

🔗ABC-390 B - Geometric Sequence



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    N = getInt()
    A = getIntList()

    r = True
    if N &gt; 2:
        for i in range(N - 2):
            # 等比中項
            i...]]></description><link>https://zenn.dev/hyperdb/articles/9504e999dbbd8b</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/9504e999dbbd8b</guid><pubDate>Thu, 06 Feb 2025 10:15:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xI2eTLwj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-390%25EF%25BD%259CB%2520-%2520Geometric%2520Sequence%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-391｜B - Seek Grid]]></title><description><![CDATA[
 設問ページ

🔗ABC-391 B - Seek Grid



 提出結果
def getIntMap():
    return map(int, input().split())


def getStringRow(N):
    return [input() for _ in range(N)]


def main():
    N, M = getIntMap()
    S = getStringRow(N)
    T = getStringRow(M)

    target = "".join(T)

    limit = N - M + 1

    r ...]]></description><link>https://zenn.dev/hyperdb/articles/138b232a91dbcb</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/138b232a91dbcb</guid><pubDate>Thu, 06 Feb 2025 10:15:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LlCqHUC7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-391%25EF%25BD%259CB%2520-%2520Seek%2520Grid%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item></channel></rss>