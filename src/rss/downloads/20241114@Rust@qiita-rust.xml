<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/rust/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/rust/feed"/>
  <title>Rustタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでRustタグが付けられた新着記事</description>
  <updated>2024-11-14T12:33:45+09:00</updated>
  <link>https://qiita.com/tags/rust</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1935871</id>
    <published>2024-11-14T12:33:45+09:00</published>
    <updated>2024-11-14T12:33:45+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nxted_sapporo/items/7f9bf9bf42206992f3c3"/>
    <url>https://qiita.com/nxted_sapporo/items/7f9bf9bf42206992f3c3</url>
    <title>#71　Understanding opaque types</title>
    <content type="html">Introduction
Rust is a systems programming language known for its safety and concurrency features. …</content>
    <author>
      <name>nxted_sapporo</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1935835</id>
    <published>2024-11-14T10:50:40+09:00</published>
    <updated>2024-11-14T11:12:48+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/ohisama@github/items/0eb0e5709ab5d210f72b"/>
    <url>https://qiita.com/ohisama@github/items/0eb0e5709ab5d210f72b</url>
    <title>wslでrust その9</title>
    <content type="html">概要
wslでrustやってみた。
練習問題やってみた。
練習問題
インラインアセンブラを実行せよ。
方針

cpuidを取得してみる。

サンプルコード
use std::arch::asm;

fn …</content>
    <author>
      <name>ohisama@github</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1935777</id>
    <published>2024-11-14T07:46:50+09:00</published>
    <updated>2024-11-14T07:46:50+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Is_Apple_/items/4c8dfabfd502092cc9b2"/>
    <url>https://qiita.com/Is_Apple_/items/4c8dfabfd502092cc9b2</url>
    <title>Rust 遅延初期化</title>
    <content type="html">Rustにおける遅延初期化（Lazy Initialization）は、変数やデータを必要になるまで初期化しない技法のことです。Rustの所有権システムやメモリ安全のため、通常の変数は宣言と同時に値…</content>
    <author>
      <name>Is_Apple_</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1935705</id>
    <published>2024-11-13T22:50:53+09:00</published>
    <updated>2024-11-13T23:00:09+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Yuki_Oshima/items/cc6c663a39b797b6bf24"/>
    <url>https://qiita.com/Yuki_Oshima/items/cc6c663a39b797b6bf24</url>
    <title>Rustプログラムの終了コードを徹底解説</title>
    <content type="html">概要
Rustプログラムの終了コード(exit code)を把握することは、プログラムの挙動を理解する上で非常に重要です。本記事では、Rustプログラムがどのように終了コードを決定するかを詳しく解説…</content>
    <author>
      <name>Yuki_Oshima</name>
    </author>
  </entry>
</feed>
