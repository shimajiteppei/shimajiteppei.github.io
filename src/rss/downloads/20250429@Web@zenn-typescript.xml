<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 29 Apr 2025 06:20:55 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ゼロから始めるAzure Functions入門｜サーバレスAPIを作ろう]]></title><description><![CDATA[サーバレス開発に挑戦してみたいけど、何から始めればいいかわからない――そんなあなたへ。
この本では、Azure Functionsを使って、ゼロから「自分だけのサーバレスAPI」を作成し、世界に公開するまでを徹底的にサポートします。

開発環境の構築から、TypeScriptによる本格API実装、Azureへのデプロイ、トラブル対応まで、すべて実践ベースで解説。
無料枠を活用するので、コストを気にせず安心して学べます。

単なる知識ではなく、「手を動かして、自分の成果を形にする」ことを重視。
これから副業・個人開発・クラウドエンジニアを目指す方に、最初の成功体験を届けます。

最初の一歩を、この一冊から踏み出しませんか？]]></description><link>https://zenn.dev/falcode/books/f842a997cc4ae0</link><guid isPermaLink="true">https://zenn.dev/falcode/books/f842a997cc4ae0</guid><pubDate>Tue, 29 Apr 2025 06:15:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yHtzwSEd--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci80YjY5MzJhMjE0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>fal（ファル）｜文系出身エンジニア × Azure × TypeScript</dc:creator></item><item><title><![CDATA[クソしょうもないDiscord BotをWebから操作できるようにしてみた話【TypeScript】【初学者】]]></title><description><![CDATA[
 はじめに
記事を開いてくれてありがとうございます！JavaScript/TypeScriptをほんの少しだけ触ったことがあるだけのただのニートです。
以前、クソしょうもないDiscord Botを作成したことがありました。
https://zenn.dev/miyabitti256/articles/0c82573e0df645
あれから約1年が経ち、Botにいくつかアップデートを重ねてきました。その中で、「ブラウザからBotの機能を操作できたら面白いのでは？」と思い立ち、今回新たに挑戦してみました。
Discord Botを含め、完全無料(fly.ioだけクレジットカードは必要です...]]></description><link>https://zenn.dev/miyabitti256/articles/discordbot-web-app</link><guid isPermaLink="true">https://zenn.dev/miyabitti256/articles/discordbot-web-app</guid><pubDate>Tue, 29 Apr 2025 05:34:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G6Jf7u47--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2582%25BD%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%25E3%2582%2582%25E3%2581%25AA%25E3%2581%2584Discord%2520Bot%25E3%2582%2592Web%25E3%2581%258B%25E3%2582%2589%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2580%2590%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyabitti%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjVmZThjM2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyabitti</dc:creator></item><item><title><![CDATA[Nuxt で TypeScript を利用する際の tsconfig 設定を整理する]]></title><description><![CDATA[
 はじめに
久しぶりに記事を書きます。最近インプットが多すぎて記事を書けなくなってきてしまっているので、インプットをちゃんと供養しないと...。
今回は、Nuxt で TypeScript を利用する際に tsconfig.json の設定によく迷いがちなので、改めて整理しようかなと思いこの記事を書くことにしました。

 Nuxt で TypeScript を利用するには
まず、Nuxt で TypeScript を利用するにはまず vue-tsc のインストールが必要です。
npm install -D vue-tsc
また、　nuxt.config.ts には、最低限下記の設定があ...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/5d9f6f1ffdfde9</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/5d9f6f1ffdfde9</guid><pubDate>Tue, 29 Apr 2025 05:29:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rmoNZoFG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt%2520%25E3%2581%25A7%2520TypeScript%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%2520tsconfig%2520%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2582%2589%25E3%2581%2593%25E3%2582%258D%2520%252F%2520karacoro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNmQwMjRkZGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>からころ / karacoro</dc:creator></item><item><title><![CDATA[MCP Quickstart For Server Developersを読む(TypeScript)]]></title><description><![CDATA[
 はじめに
MCPドキュメントのQuickstartの For Server Developersを読みながら動かしたことをメモしておこうと思います。
https://modelcontextprotocol.io/quickstart/client
今回はTypeScriptでやっていきます。
少しだけmodelcontextprotocol/typescript-sdkの内部実装も見ていってるので、quickstartからさらに深掘りたいという方には興味持ってもらえるかもしれません。

 読んでいく

 セットアップ
$ npm init -y
Wrote to ./package...]]></description><link>https://zenn.dev/yasi/articles/learn-mcp-server-typescript</link><guid isPermaLink="true">https://zenn.dev/yasi/articles/learn-mcp-server-typescript</guid><pubDate>Tue, 29 Apr 2025 04:14:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gpWkmnKu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520Quickstart%2520For%2520Server%2520Developers%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2528TypeScript%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yasi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEd1cFBMTS1wcXlaYVlPcE5Uek9QemJpcXNCU3pMRHlJTlhaMTlTRnQ2RnVVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yasi</dc:creator></item><item><title><![CDATA[AIを活用した無料の一時的なメールサービスをシェアする]]></title><description><![CDATA[
 ChatTempMail
👉 https://chat-tempmail.com
AI搭載の使い捨てメールサービスで、完全無料の安全・高速・スパムフリーなメール体験を提供します。多言語対応のリアルタイム翻訳やコンテンツ要約、AI質問応答機能で、プライバシーを守りながら効率的なメール管理が可能です。


 主な特徴



無料使い捨てメール：短期利用向けの仮メールアドレスを無料で即時発行


リアルタイム翻訳機能：言語の壁を越えたコミュニケーションを無料でサポート


AI自動要約：長文メールを瞬時に理解できる無料要約サービス


インテリジェントQ&amp;A：メール内容への質問に無...]]></description><link>https://zenn.dev/selenium39/articles/e2ccbfd7f16178</link><guid isPermaLink="true">https://zenn.dev/selenium39/articles/e2ccbfd7f16178</guid><pubDate>Tue, 29 Apr 2025 03:58:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aQePuwb---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25AE%25E4%25B8%2580%25E6%2599%2582%25E7%259A%2584%25E3%2581%25AA%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Selenium39%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1NTJhZGRmYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Selenium39</dc:creator></item><item><title><![CDATA[動くけど危ない。TypeScript×JavaScriptの注意ポイント]]></title><description><![CDATA[業務中、以下のようなコードを見かけました。
（実際はNext.jsのコードでしたが、JavaScriptの言語仕様に関わる部分だけをシンプルに抜き出しています。）
const tags: string[] = ['hoge']
console.log(`https://example.com/${tags}`)

/* https://example.com/hogeと出力されるが、tagsの要素数が2つ以上になるとカンマで要素が連結され、https://example.com/hoge,fugaのようになる。
偶然、要素数が2つ以上のものがなくて設定されたリンクが404エラーにならなか...]]></description><link>https://zenn.dev/ohimusdev46301/articles/ce0b917110c42a</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/ce0b917110c42a</guid><pubDate>Tue, 29 Apr 2025 03:42:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1EgD5S9R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%2595%25E3%2581%258F%25E3%2581%2591%25E3%2581%25A9%25E5%258D%25B1%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2582TypeScript%25C3%2597JavaScript%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[初心者のためのBuilderパターン]]></title><description><![CDATA[
 はじめに
Builderパターンは複雑なオブジェクトを段階的に構築できるようにする生成パターンです。初心者の方にとって、このパターンを理解することで、コードの可読性を高め、メンテナンスを容易にする重要なスキルを身につけることができます。
この記事では、Builderパターンの基本概念から実践的な実装まで、TypeScriptを使って初心者にも分かりやすく解説します。

 Builderパターンとは
Builderパターンは、複雑なオブジェクトの構築プロセスをその表現から分離する生成パターンです。このパターンを使用すると、同じ構築プロセスを作成できます。
簡単に言えば、Builderパ...]]></description><link>https://zenn.dev/umibudou/articles/fd2119a61944aa</link><guid isPermaLink="true">https://zenn.dev/umibudou/articles/fd2119a61944aa</guid><pubDate>Tue, 29 Apr 2025 03:02:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tiucg9yh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEBuilder%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Umibudou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Umibudou</dc:creator></item><item><title><![CDATA[242. Valid Anagram]]></title><description><![CDATA[2つの文字列 s と t が与えられたとき、t が s のアナグラム（並び替えたもの）であれば true を、そうでなければ false を返してください。

 例 1:

入力: s = "anagram", t = "nagaram"

出力: true



 例 2:

入力: s = "rat", t = "car"

出力: false



 制約:

1 &lt;= s.length, t.length &lt;= 5 * 10⁴

s と t は小文字の英字のみで構成されています。


]]></description><link>https://zenn.dev/idapan/articles/97fceaa103577d</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/97fceaa103577d</guid><pubDate>Mon, 28 Apr 2025 20:48:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8ebCwibn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:242.%2520Valid%2520Anagram%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[supabaseデータ取得(joinまとめて取得)でデータがSelectQueryErrorになる問題の解決方法]]></title><description><![CDATA[
 下記構文で取得データがSelectQueryErrorエラーになっている
 const { data, error } = await supabase
      .from("users")
      .select(`*,coment_table("user_coment")`)

 やろうとしていること
usersテーブルから全て(*)取得と
coment_tableからuser_comentを取得
これを一度にまとめて叩いて取得しようとしている
通信が一回でよく、配列もまとまるので便利な方法だ

 結論
"*"を使わないようにし、取得したいデータを直接宣言する
 cons...]]></description><link>https://zenn.dev/wakki/articles/a95857ccb2e9fd</link><guid isPermaLink="true">https://zenn.dev/wakki/articles/a95857ccb2e9fd</guid><pubDate>Mon, 28 Apr 2025 20:06:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YZE50xLf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:supabase%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%2528join%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%2529%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258CSelectQueryError%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkOTg4YTEyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワッキー</dc:creator></item><item><title><![CDATA[Reactでstorybookのインタラクションテストをやってみる]]></title><description><![CDATA[こんにちは、今回は、ReactにStorybookを導入して、インタラクションテストを試してみたことを記事にしました。

 Storybookとは？
Storybookは、UIコンポーネントのカタログ作成・テストなどができるツールです。
デザイン確認やユーザーインタラクションのテストが簡単に行えます。
主にReact、Vue、Angularなどのフレームワークで使用されることが多いです。

 導入することのメリット・デメリット

 メリット

すでに作成済みであるコンポーネントなどが分かりやすくなる
コンポーネントの状態確認がしやすい
新メンバーが既存コンポーネントの理解がしやすい
コン...]]></description><link>https://zenn.dev/rh820/articles/ecedd2a8a24fda</link><guid isPermaLink="true">https://zenn.dev/rh820/articles/ecedd2a8a24fda</guid><pubDate>Mon, 28 Apr 2025 16:15:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oKssYRc8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7storybook%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjM2JkYzhiZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hodii</dc:creator></item><item><title><![CDATA[never型と推論されたことによるTypeScriptの型エラー]]></title><description><![CDATA[
 はじめに
Vercelへのデプロイ時にエラーが発生したので原因と対処法についてまとめます。

 問題
VercelにNext.jsのプロジェクトをデプロイしたところ、以下のようなエラーがログに表示されました。
[20:37:35.476] Running build in Washington, D.C., USA (East) – iad1
[20:37:35.493] Cloning github.com/Juna1013/mdl-welcome-site (Branch: main, Commit: da2307b)
[20:37:36.216] Cloning complet...]]></description><link>https://zenn.dev/jun1013/articles/98b8043c814f61</link><guid isPermaLink="true">https://zenn.dev/jun1013/articles/98b8043c814f61</guid><pubDate>Mon, 28 Apr 2025 12:27:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4wn5LcSl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:never%25E5%259E%258B%25E3%2581%25A8%25E6%258E%25A8%25E8%25AB%2596%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BTypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Juna1013%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MjYwNDRhY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Juna1013</dc:creator></item><item><title><![CDATA[Vitestを使ってコンポーネントテストをしたい]]></title><description><![CDATA[Vitestを使ったコンポーネントテストのサンプルコードを紹介する]]></description><link>https://zenn.dev/xeiculy/books/70b7a814520e14</link><guid isPermaLink="true">https://zenn.dev/xeiculy/books/70b7a814520e14</guid><pubDate>Mon, 28 Apr 2025 12:17:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--awFyZlW---/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jZDM1YjkyYjQzLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>柿</dc:creator></item><item><title><![CDATA[JSON を CSV 用に変形するときは Array.prototype.flatMap() / flat() がいいよって小ネタ]]></title><description><![CDATA[
 どういうこと
色々なAPIをJSON形式で取得して、CSV形式に書き出したい、という需要はよくあります。
とはいえ、取得したデータの状態だとネストしていて、そのままではcsv-stringifyするには不適切なことがあります。
https://csv.js.org/stringify/
つまり、深さ1のkey-valueのJSONにしたいです。で flatMap() だとそういう処理が楽に書けるよってことです。

 コード
Deno で書いていますが、適宜Importは読み替えしてください。
Order には複数の Item が紐づいています。これをCSV用に、 Item 1つにつき...]]></description><link>https://zenn.dev/mr_ozin/articles/bfcdd53054e9e1</link><guid isPermaLink="true">https://zenn.dev/mr_ozin/articles/bfcdd53054e9e1</guid><pubDate>Mon, 28 Apr 2025 10:40:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3C5cZQnA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSON%2520%25E3%2582%2592%2520CSV%2520%25E7%2594%25A8%25E3%2581%25AB%25E5%25A4%2589%25E5%25BD%25A2%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AF%2520Array.prototype.flatMap%2528%2529%2520%252F%2520flat%2528%2529%2520%25E3%2581%258C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mr_ozin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNzc4ZGFjYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mr_ozin</dc:creator></item><item><title><![CDATA[【Next.js + Orval + MSW】型安全 API クライアント & モック環境構築]]></title><description><![CDATA[こんにちは。チームラボのフロントエンド班の志田です。好きなものはモアイです🗿
今回初めて技術記事を書いてみました。
Next.js、Orval、MSW に関して気になっている方、ちょっと長いですが、ぜひ最後までお付き合いください！

 はじめに
フロントエンド開発において、RESTful API を呼び出す処理（API クライアントコード）を作るのは結構手間がかかります。GET なのか POST なのか、リクエストやレスポンスの型は何なのかなど、考慮することが多いです。
といったことから近年では OpenAPI スキーマから、型定義や API クライアントコードを自動で生成するツールがよ...]]></description><link>https://zenn.dev/teamlab_fe/articles/b895776223a3b2</link><guid isPermaLink="true">https://zenn.dev/teamlab_fe/articles/b895776223a3b2</guid><pubDate>Mon, 28 Apr 2025 09:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ffa2dbE0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%2520%252B%2520Orval%2520%252B%2520MSW%25E3%2580%2591%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%2520API%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%2520%2526%2520%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25A9%25E3%2583%259C%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%258F%25AD%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMDc2NDA4YWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25A9%25E3%2583%259C%25E3%2580%2580%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%258F%25AD%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVmY2M0MTZmNGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>チームラボ フロントエンド班</dc:creator></item><item><title><![CDATA[チープリサーチ：Mastra で Deep Research の模倣し、Open Cheap Research を作りました。]]></title><description><![CDATA[こんにちは、オートロ株式会社で代表をしております。福田です。今回も、オープン開発チームで試した内容を共有したいと思います。
今回は、日本でも大人気になっている TypeScript で AI エージェント開発ができる、Mastra を使ってディープリサーチの模倣品の Open Cheap Research を開発した話をします。
ソースコードは、こちらで公開しております。

 Mastra とは
Mastra は、AI エージェントを開発するためのフレームワークです。ほとんどの AI エージェント開発フレームワークが、Python で公開されているのに対して、Mastra は、TypeS...]]></description><link>https://zenn.dev/open_developers/articles/ca49b32c4f8232</link><guid isPermaLink="true">https://zenn.dev/open_developers/articles/ca49b32c4f8232</guid><pubDate>Mon, 28 Apr 2025 09:12:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1zrjtaCm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2581%25EF%25BC%259AMastra%2520%25E3%2581%25A7%2520Deep%2520Research%2520%25E3%2581%25AE%25E6%25A8%25A1%25E5%2580%25A3%25E3%2581%2597%25E3%2580%2581Open%2520Cheap%2520Research%2520%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%25A6%258F%25E7%2594%25B0%25E5%25BF%2597%25E9%2583%258E%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3Nzg4MGI3YTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSk10eHRDLUlpSzFEdnk4UVVnODJaRGhCZ1gtUDZZOHVLdm1tSDhQNklVMEJzbDk4ZGI9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>福田志郎</dc:creator></item><item><title><![CDATA[Hono と Satori で動的 OGP 画像生成を遊び倒す]]></title><description><![CDATA[
 なぜこの遊びを始めたか
みなさん、ウェブページの OGP (Open Graph Protocol) 画像、どうしていますか？
静的な画像を事前に用意しておくのが一般的だと思いますが、今回は以前の@syumai さんのアイコンの色が変わるOGPのポストに触発されて「他にも何か面白いことができないか？」と考えOGPで遊んでみました!
https://github.com/ponyo877/ogp-playground
Cloudflare Workers というエッジ環境で、Hono と Satoriを使い、リクエストに応じてリアルタイムに OGP 画像を生成する、そんな遊びをしてみま...]]></description><link>https://zenn.dev/ponyo877/articles/8f5a4fb254ccd6</link><guid isPermaLink="true">https://zenn.dev/ponyo877/articles/8f5a4fb254ccd6</guid><pubDate>Mon, 28 Apr 2025 07:42:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SBB3aBHk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520%25E3%2581%25A8%2520Satori%2520%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%2520OGP%2520%25E7%2594%25BB%25E5%2583%258F%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E9%2581%258A%25E3%2581%25B3%25E5%2580%2592%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ponyo877%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkMzM5MWQwY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ponyo877</dc:creator></item><item><title><![CDATA[シンプルで使いやすい新たなRPCライブラリ~oRPCとは何者か？~]]></title><description><![CDATA[
 はじめに
こんにちは、エンジニアの籏野です。
先日、oRPCというライブラリのV1がリリースされました。
https://x.com/unnoqcom/status/1912153521060987057
oRPCはTypeScriptを利用するシステムにおいてRPC(Remote Procedure Call)を実現するためのライブラリです。
RPCの特徴は、クライアント側からはメソッドを呼び出すような感覚でAPIを利用することができ、REST APIのようにエンドポイントを意識する必要がなくなることが挙げられます。
RPCを実現する有名なライブラリとしてtRPCがありますが、どの...]]></description><link>https://zenn.dev/forcia_tech/articles/202504_hatano_orpc</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/202504_hatano_orpc</guid><pubDate>Mon, 28 Apr 2025 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VstzfLFu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E6%2596%25B0%25E3%2581%259F%25E3%2581%25AARPC%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%7EoRPC%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E8%2580%2585%25E3%2581%258B%25EF%25BC%259F%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[Webブラウザのセキュリティについて理解しよう(Origin,SOP,CORS)]]></title><description><![CDATA[
 はじめに
はじめまして。大学4年生のとうふと申します。
今回は、3回目のZenn投稿になります！
Web開発をしていると、CORSという言葉を一度は耳にしたことがあるのではないでしょうか？
私自身初めて個人開発を始めた際、開発中に「設定しないとうまく動かないけど、そもそもCORSって何をしているの？」と疑問に思ったことがあり、Webブラウザのセキュリティについて勉強しました。
今回の記事では、そこで得た知識をできるだけコンパクトかつわかりやすくまとめ、読んでくださる皆さんにもスムーズに理解してもらえるよう工夫しています。
ぜひ最後までご覧いただけると嬉しいです！

 前提
本記事では...]]></description><link>https://zenn.dev/dem3860/articles/a0478649339e8b</link><guid isPermaLink="true">https://zenn.dev/dem3860/articles/a0478649339e8b</guid><pubDate>Mon, 28 Apr 2025 02:18:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lsx4KUGq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2528Origin%252CSOP%252CCORS%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%2586%25E3%2581%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5M2U5NTg3ZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とうふ</dc:creator></item><item><title><![CDATA[リトライ処理時のExponential Backoff（指数関数バックオフ）戦略]]></title><description><![CDATA[
 はじめに
Google Drive APIについて調べていたところ、使用制限の箇所で指数バックオフアルゴリズムに関する記述がありました。
https://developers.google.com/workspace/drive/labels/limits?hl=ja
自分が初めてエンジニアになった頃に、あるエンジニアがAngulerのRxJSを使用して指数バックオフを作成していたことがあり、その時はあまり理解できていなかったので、改めて調べてみることにしました。


 Exponential Backoff（指数関数バックオフ）とは
指数バックオフとは、通信に失敗した際に、待ち時間...]]></description><link>https://zenn.dev/arsaga/articles/5b15281c7fb9fa</link><guid isPermaLink="true">https://zenn.dev/arsaga/articles/5b15281c7fb9fa</guid><pubDate>Mon, 28 Apr 2025 01:44:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XszGNtJK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E5%2587%25A6%25E7%2590%2586%25E6%2599%2582%25E3%2581%25AEExponential%2520Backoff%25EF%25BC%2588%25E6%258C%2587%25E6%2595%25B0%25E9%2596%25A2%25E6%2595%25B0%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AA%25E3%2583%2595%25EF%25BC%2589%25E6%2588%25A6%25E7%2595%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%258D%25E3%2581%25A1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkN2YzMzc0YjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Arsaga%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczM2I3ZDlmZDUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まさきち</dc:creator></item><item><title><![CDATA[React Hook Formで「どちらか一方が必須」なフォームの再評価はdepsが便利]]></title><description><![CDATA[
 はじめに
フォームで「メールアドレスか電話番号のどちらかは必須」としたい場面があるとします。
しかし実装してみると、片方を入力してももう片方のバリデーションエラーが残ってしまうなど、思ったように動かず苦戦することがあります。
メールアドレスを入力しても、電話番号側のエラーが残ってしまう例
こうした「どちらか一方を満たせばOK」というバリデーションは、deps オプションを活用すると、スムーズに実現できます。

 depsとは？
deps は dependencies（依存関係）の略で、あるフィールドが他のフィールドの値に依存してバリデーションを再評価するための仕組みです。
React...]]></description><link>https://zenn.dev/kaz_z/articles/react-hook-form-deps</link><guid isPermaLink="true">https://zenn.dev/kaz_z/articles/react-hook-form-deps</guid><pubDate>Mon, 28 Apr 2025 00:46:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZT55CoSv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hook%2520Form%25E3%2581%25A7%25E3%2580%258C%25E3%2581%25A9%25E3%2581%25A1%25E3%2582%2589%25E3%2581%258B%25E4%25B8%2580%25E6%2596%25B9%25E3%2581%258C%25E5%25BF%2585%25E9%25A0%2588%25E3%2580%258D%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E5%2586%258D%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25AFdeps%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZTM2MzIzZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuho</dc:creator></item></channel></rss>