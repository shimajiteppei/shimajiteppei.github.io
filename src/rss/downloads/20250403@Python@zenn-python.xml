<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 03 Apr 2025 11:30:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[駅すぱあと Python SDKを使って駅簡易情報を取得する]]></title><description><![CDATA[本記事はヴァル研究所の支援として作成された記事です
駅すぱあとはAPIを公開しており、駅情報や経路探索などをAPI経由で行えます。メソッドはすべてGETメソッドで、情報取得系のみです。レスポンスはJSONまたはXMLで返ってきます。
この駅すぱあと APIを利用しやすくするSDKを開発しはじめました。SDKはPythonで作っており、CLIやWebサービスなどから利用できます。
今回は、スタンダードプランで提供されている駅簡易情報取得APIに対応したので、その使い方を解説します。

 必要な情報
SDKを利用する際にはAPIキーが必要です。無料トライアルがあるので、こちらから取得してくだ...]]></description><link>https://zenn.dev/ekispert_api/articles/511d9c1edd8ad4</link><guid isPermaLink="true">https://zenn.dev/ekispert_api/articles/511d9c1edd8ad4</guid><pubDate>Thu, 03 Apr 2025 07:39:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c1qMgmgP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520Python%2520SDK%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%25A7%2585%25E7%25B0%25A1%25E6%2598%2593%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25A2%25E3%2583%2584%25E3%2582%25B7%2540MOONGIFT%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllZWU4MmU5MDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520API%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqN3UwNEd0OEkzbTVsd2xaRUhBbjNlcko0QjZxNWlBd1V6N2tqT1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アツシ@MOONGIFT</dc:creator></item><item><title><![CDATA[python3エンジニア認定実践試験対策③]]></title><description><![CDATA[
 はじめに


Python実践レシピに沿って学習します。


 以前の記事


Python3エンジニア認定実践試験対策①
第4章pythonのクラス、第6章テキストの処理

Python3エンジニア認定実践試験対策②
第10章汎用OS・ランタイムサービス、第11章ファイルとディレクトリへのアクセス


 今回の範囲



章
タイトル
問題数
問題割合
備考




16
テスト
3
7.5%
16.4 pytest は除く16.5 pydoc は除く


17
デバッグ
2
5.0%
17.3 traceback は除く




 16：テスト

 doctest
「&gt;&g...]]></description><link>https://zenn.dev/tuki24/articles/355dce741ea7be</link><guid isPermaLink="true">https://zenn.dev/tuki24/articles/355dce741ea7be</guid><pubDate>Thu, 03 Apr 2025 05:59:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---4dhw8r1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E8%25AA%258D%25E5%25AE%259A%25E5%25AE%259F%25E8%25B7%25B5%25E8%25A9%25A6%25E9%25A8%2593%25E5%25AF%25BE%25E7%25AD%2596%25E2%2591%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdmOFA0QUY2NEIwNGdDVzVpVkpfakMweTFtOGVMeGxQQlhiV2tmSWdvRFhmOF9nPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つき</dc:creator></item><item><title><![CDATA[Pythonアプリケーションでタイムゾーンを扱う方法]]></title><description><![CDATA[
 始めに
小ネタです。
Pythonでdatetime型を扱うときに、timezone情報を与えることができます。
from datetime import datetime
from zoneinfo import ZoneInfo

datetime.now(tz=ZoneInfo("UTC"))
簡単にtimezoneに合わせた時刻へ変更できることはメリットではあるのですが、timezoneなし（native datetime）とあり（aware datetime）の時刻を比較すると次のエラーが発生します。
&lt;ExceptionInfo TypeError("can't c...]]></description><link>https://zenn.dev/kirimaru/articles/2b2b88d2bbc62e</link><guid isPermaLink="true">https://zenn.dev/kirimaru/articles/2b2b88d2bbc62e</guid><pubDate>Thu, 03 Apr 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---NJmscT8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%258A%25E4%25B8%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1OTcxNmNjNDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きり丸</dc:creator></item><item><title><![CDATA[【Python】nonlocal宣言とは何か？]]></title><description><![CDATA[今回はPythonプログラミングで使われる「nonlocal宣言」について説明します。
ぼくが初めてこの機能を知ったときは「なんだこれ？」と思いましたが、実はとても便利な機能です。

 nonlocal宣言とは？
Pythonでは、関数の中に関数を作ることができます。
これを「ネスト（入れ子）された関数」と呼びます。
そのとき、内側の関数から外側の関数で定義された変数を変更したいことがあります。
その時に使うのが「nonlocal宣言」です。
nonlocal宣言を使うと、内側の関数から外側の関数の変数を参照するだけでなく、変更することもできるようになります。

 なぜnonlocal宣...]]></description><link>https://zenn.dev/hovinci/articles/aea561f783069a</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/aea561f783069a</guid><pubDate>Thu, 03 Apr 2025 02:40:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GymIVMIC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591nonlocal%25E5%25AE%25A3%25E8%25A8%2580%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[Pythonの環境をMiniForgeからuvへ移行する方法]]></title><description><![CDATA[uvが良さそうという噂を聞いたので、MiniForgeからuvに移行することを決意しました。
直接のきっかけは以下のUdemy講座の受講です。eikichi先生ありがとうございます！
Python初学者でもOK！UV×VSCode×GitHub×Vast aiを活用したデータ分析・AI開発環境構築術
MiniForgeはインストールしてないよって人は、最初のMiniForgeの削除を読み飛ばせばuvのセットアップ記事として読めます！

 MiniForgeの削除
MiniForgeを断固たる決意で削除します。以下記事の最後にちゃんとアンインストールの方法が書いてあります。
https:/...]]></description><link>https://zenn.dev/karaage0703/articles/029b45ff78bc57</link><guid isPermaLink="true">https://zenn.dev/karaage0703/articles/029b45ff78bc57</guid><pubDate>Wed, 02 Apr 2025 17:31:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fJcsw1qD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592MiniForge%25E3%2581%258B%25E3%2582%2589uv%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2582%2589%25E3%2581%2582%25E3%2581%2592%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hDZEtvakJfZXdDTjNCV1Z0WXIteFNIZ0hmRjlXZmt3QzI5c0Y0aXYwPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>からあげ</dc:creator></item><item><title><![CDATA[MCP の Quickstart を HTTP+SSE で実装してみる]]></title><description><![CDATA[
 はじめに
すごい勢いで MCP(Model Context Protocol) が広がってきています。Anthropic が主導する規格でありながら、OpenAI の Agents SDK でもサポートすることを発表しました。
https://x.com/OpenAIDevs/status/1904957755829481737
また Github Star 数で比較しても、他の AI エージェント系のフレームワークと比較しても MCP の注目度は群を抜いていることがわかるかと思います。

MCP クライアントとサーバー間の通信として stdio（標準入力および標準出力を介した通信）...]]></description><link>https://zenn.dev/atsukish/articles/e4e1009ab19c3c</link><guid isPermaLink="true">https://zenn.dev/atsukish/articles/e4e1009ab19c3c</guid><pubDate>Wed, 02 Apr 2025 15:16:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_xvNQVq7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520%25E3%2581%25AE%2520Quickstart%2520%25E3%2582%2592%2520HTTP%252BSSE%2520%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atsukish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1ZWMzOTBhY2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>atsukish</dc:creator></item><item><title><![CDATA[AIの未来を垣間見る！「Auto-GPT徹底解説」記事のススメ]]></title><description><![CDATA[AI技術が急速に発展する今、注目すべきキーワードの一つが「自律型エージェント」です。かつては人の手によって一つひとつ指示を与える必要があったタスクも、今やAI自身が考え、調べ、判断し、行動する時代に入りつつあります。
そんな中で登場したのが「Auto-GPT」。GPT-4などの大規模言語モデル（LLM）をベースにしながらも、単なるチャットボットにとどまらず、目標を与えるだけで自律的に処理を進めてくれる革新的な仕組みです。
今回ご紹介するのは、Omomuki Tech Blogによる記事
📘 Auto-GPT徹底解説：Pythonライブラリとしての使い方と未来
です。この記事では、Auto...]]></description><link>https://zenn.dev/omomuki/articles/0912cf94f4668a</link><guid isPermaLink="true">https://zenn.dev/omomuki/articles/0912cf94f4668a</guid><pubDate>Wed, 02 Apr 2025 13:55:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DxdcRWlB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25AE%25E6%259C%25AA%25E6%259D%25A5%25E3%2582%2592%25E5%259E%25A3%25E9%2596%2593%25E8%25A6%258B%25E3%2582%258B%25EF%25BC%2581%25E3%2580%258CAuto-GPT%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%258D%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B9%25E3%2583%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:omomuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3ZmI3NDM2Y2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>omomuki</dc:creator></item><item><title><![CDATA[強化学習の基礎的な手法で簡単なRPG風ゲームを攻略してみた]]></title><description><![CDATA[強化学習を勉強したい！
そう思っていろいろな資料を読み漁るなどして、勉強に励んできました。
が、数式や最適化手法をいろいろ追いかけるよりも、実際に使ってみたほうが頭に入りそう。
というわけで、簡単なゲームを設定して強化学習の基礎的な手法を適用してみました。

 強化学習について
強化学習の基本的な知識については、他の方々の素晴らしい記事がございますので、そちらを参照いただければと。
以下の動画が非常に分かりやすく、大いに参考にさせていただきました。おすすめです。
https://youtube.com/playlist?list=PLhDAH9aTfnxI1OywfnxXCDTWGtYL...]]></description><link>https://zenn.dev/shogoromaru/articles/b72da85b4419c5</link><guid isPermaLink="true">https://zenn.dev/shogoromaru/articles/b72da85b4419c5</guid><pubDate>Wed, 02 Apr 2025 12:02:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C_lDCttz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BC%25B7%25E5%258C%2596%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259A%2584%25E3%2581%25AA%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AARPG%25E9%25A2%25A8%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E6%2594%25BB%25E7%2595%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shogo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1ZmU4NThmOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shogo</dc:creator></item><item><title><![CDATA[PythonでDIする（Dependency Injector）]]></title><description><![CDATA[dependency_injector は Python 向けの依存性注入ライブラリです。

 基本的な使い方
Dependency Injector を利用して依存性注入を行う基本的な流れは、以下の手順で実現します。

サービスの定義
まず、抽象クラス（インターフェース）を定義し、その実装となる具体的なサービスクラスを作成します。
これにより、サービスの実装が呼び出し元から独立し、後から簡単に入れ替えやテストが行える設計になります。
コンテナの設定
次に、dependency_injector の containers.DeclarativeContainer を継承したコンテナクラス...]]></description><link>https://zenn.dev/hono8944/articles/22b76fa3410781</link><guid isPermaLink="true">https://zenn.dev/hono8944/articles/22b76fa3410781</guid><pubDate>Wed, 02 Apr 2025 11:33:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hI3fNzwe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7DI%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Dependency%2520Injector%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hono%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWxkYnktbHdTdmg3X3lGcTl6alF6M3hBRlNJdHI4LWw4OHl0U01FQXJ6dkIyZ2dRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hono</dc:creator></item><item><title><![CDATA[【Isaac Sim × Isaac Lab入門】#1 PythonスクリプトでIsaac Simに空のシーンを表示してみる]]></title><description><![CDATA[以下の記事にて、NVIDIA Isaac Sim をIsaac Labから起動することができた。
https://zenn.dev/kprn/articles/9b6afc80ca1956
今回からは、Isaac Simの3D環境内をPythonスクリプトで操作する方法を調査する。
今回はPart1として、公式チュートリアルを参考に、

Pythonスクリプトを実行し、Isaac Simで空のシーンを開く

というシンプルな操作を試してみる。

 手順
前回までの手順で、C:\Users\{ユーザ名}\work\にIsaacLabディレクトリが配置されている状況からスタートする。

 手...]]></description><link>https://zenn.dev/kprn/articles/57dea2a3951bd3</link><guid isPermaLink="true">https://zenn.dev/kprn/articles/57dea2a3951bd3</guid><pubDate>Wed, 02 Apr 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dlJKRoL8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Isaac%2520Sim%2520%25C3%2597%2520Isaac%2520Lab%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591%25231%2520Python%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7Isaac%2520Sim%25E3%2581%25AB%25E7%25A9%25BA%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E8%25A1%25A8...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmykprn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0YTc2MmJkMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmykprn</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-398｜B - Full House 3]]></title><description><![CDATA[
 設問ページ

🔗ABC-398 B - Full House 3



 提出結果
def getIntList():
    return list(map(int, input().split()))


def main():
    A = getIntList()

    d = dict()
    for n in A:
        d.setdefault(n, 0)
        d[n] += 1

    c = []
    for x in d.keys():
        if d[x] &gt;= 2:
            c.append...]]></description><link>https://zenn.dev/hyperdb/articles/97b49c94958fd2</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/97b49c94958fd2</guid><pubDate>Wed, 02 Apr 2025 08:52:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hyOy1Hxq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-398%25EF%25BD%259CB%2520-%2520Full%2520House%25203%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-398｜A - Doors in the Center]]></title><description><![CDATA[
 設問ページ

🔗ABC-398 A - Doors in the Center



 提出結果
def getInt():
    return int(input())


def main():
    N = getInt()

    d, m = divmod(N, 2)
    if m == 0:
        print("-" * (d - 1) + "==" + "-" * (d - 1))
    else:
        print("-" * d + "=" + "-" * d)


if __name__ == "__main__":
    mai...]]></description><link>https://zenn.dev/hyperdb/articles/5a94801fdf571b</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/5a94801fdf571b</guid><pubDate>Wed, 02 Apr 2025 08:52:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--865uJf5r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-398%25EF%25BD%259CA%2520-%2520Doors%2520in%2520the%2520Center%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[Streamlitを使って、スプレッドシートをバックエンドにした社内運用できるデータアプリを作る手順]]></title><description><![CDATA[
本記事では、Streamlitを使ってスプレッドシートをバックエンドにした社内運用できるデータアプリを構築する手順をご紹介します。Streamlitがどのようなケースに相性が良いのかという点についても掘り下げてご紹介します。

前回の記事では、スプレッドシートをバックエンドにしたデータアプリを構築する複数の方法をご紹介しました。今回は、そのときに紹介したコードベースのフレームワークの1つ、Streamlitを取り上げて、社内運用するためのデータアプリの構築手順を説明したいと思います。
前回の記事はこちらです。
https://zenn.dev/morph_tech_blog/artic...]]></description><link>https://zenn.dev/morph_tech_blog/articles/9a62ebfdb1f476</link><guid isPermaLink="true">https://zenn.dev/morph_tech_blog/articles/9a62ebfdb1f476</guid><pubDate>Wed, 02 Apr 2025 06:51:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OpsggMVY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E7%25A4%25BE%25E5%2586%2585%25E9%2581%258B%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B0%258F%25E9%2587%258E%25E5%25AF%25BA%2520%25E9%259A%25BC%25E4%25BA%25BA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YmQ0Y2Q4MGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Morph%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiYTU4NzJjNWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小野寺 隼人</dc:creator></item><item><title><![CDATA[【Python】デコレータについてまとめてみた！]]></title><description><![CDATA[
 デコレータとは

既存の関数やクラスの動作を変更したり拡張したりするための仕組み。
　　　= 関数やクラスを「装飾」するもの。

既存のコードを変更せずに機能を拡張できる。
コードの重複を減らし、DRY（Don't Repeat Yourself）原則に従える。




 やってみる
とりま hello world
# デコレータを定義
def my_decorator(func):
    def wrapper():
        print("bofore...")
        func() # 呼び出し元の関数を実行
        print("after...")
...]]></description><link>https://zenn.dev/takami544/articles/4a68ea6e086f5c</link><guid isPermaLink="true">https://zenn.dev/takami544/articles/4a68ea6e086f5c</guid><pubDate>Wed, 02 Apr 2025 04:59:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ouvFrXnK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZmE4ZDYxNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TS</dc:creator></item><item><title><![CDATA[Pythonデコレーター入門：概要から具体例まで]]></title><description><![CDATA[
 🌟 はじめに
おぐまです。
本記事ではPythonのデコレーターについて基本的な概念から具体的なコード例、実行順序の詳細な説明および実行結果を通してその仕組みや活用方法を詳しく解説します。
実際の利用例を確認することでデコレーターの理解がより一層深まるでしょう。
!
このチュートリアルは、Pythonの基本が理解できている中級者向けです。所要時間は約10分程度です。


 👷‍♂️ 事前準備
以下の環境とツールをご用意ください。

 💻 開発環境



項目
要件




Python
3.8以上


テキストエディタ/IDE
VSCode（推奨）




 📖 ステップバイステップ...]]></description><link>https://zenn.dev/ap_com/articles/python-decorator-introduction</link><guid isPermaLink="true">https://zenn.dev/ap_com/articles/python-decorator-introduction</guid><pubDate>Wed, 02 Apr 2025 03:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V_WARymA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2587%25E3%2582%25B3%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E6%25A6%2582%25E8%25A6%2581%25E3%2581%258B%25E3%2582%2589%25E5%2585%25B7%25E4%25BD%2593%25E4%25BE%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:9mak%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5N2NlMjBhZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2583%25BC%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25BA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5YTdiNjViNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>9mak</dc:creator></item><item><title><![CDATA[【Streamlit】でサクッとアプリ開発]]></title><description><![CDATA[
 Streamlit

 概要

PythonのWeb UI フレームワーク

フロントエンド（HTML/CSS/Javascript）の知識０でもフロントエンド開発が可能。
他ライブラリとの互換性が高い（特に機械学習、データサイエンス領域）

例）PyTorch, TensorFlow, pandas, ...






 環境構築
!
動作環境

OS: Mac
Pythonバージョン：3.13.2



インストール

pip3 install streamlit

バージョン確認

streamlit --version

 デモアプリの起動

公式が公開しているサンプルを起...]]></description><link>https://zenn.dev/takami544/articles/9951ae2f3760c5</link><guid isPermaLink="true">https://zenn.dev/takami544/articles/9951ae2f3760c5</guid><pubDate>Wed, 02 Apr 2025 02:43:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YI-wPOOT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Streamlit%25E3%2580%2591%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZmE4ZDYxNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TS</dc:creator></item><item><title><![CDATA[ローカルLLMの実用性が爆上げ：オフライン環境でも使える最新AI活用術]]></title><description><![CDATA[
 ローカルLLMの実用性が爆上げ：オフライン環境でも使える最新AI活用術

 はじめに
2023年から2024年にかけて爆発的に普及した大規模言語モデル（LLM）。ChatGPTやClaudeをはじめとするクラウドベースのサービスが多くの企業や個人に活用される一方で、ローカル環境で動作するLLMの需要も着実に高まっています。

特に最近では、オープンソースモデルの性能向上と最適化技術の進化により、ローカルLLMの実用性が「爆上げ」といえるほど向上しました。かつては「クラウドLLMの劣化版」と見なされがちだったローカルLLMが、特定のユースケースでは最適な選択肢として注目を集めるようにな...]]></description><link>https://zenn.dev/taku_sid/articles/20250402_local_llm</link><guid isPermaLink="true">https://zenn.dev/taku_sid/articles/20250402_local_llm</guid><pubDate>Wed, 02 Apr 2025 00:50:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8xXEgyCY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E3%2581%25AE%25E5%25AE%259F%25E7%2594%25A8%25E6%2580%25A7%25E3%2581%258C%25E7%2588%2586%25E4%25B8%258A%25E3%2581%2592%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2582%2582%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E6%259C%2580%25E6%2596%25B0AI%25E6%25B4%25BB%25E7%2594%25A8%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taku_sid%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFFIVERiOTUwakhtTUJlendZR0RaeHlPX290RnJISktCY2ZYUFFuY1dVVGNGRkd1d3A9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taku_sid</dc:creator></item><item><title><![CDATA[SNS作ったけど、公開できなかった]]></title><description><![CDATA[
 開発したSNS



 自分について
22歳です。3年間浪人していて去年大学入りましたが金銭面や将来に不安があったりで12月に休学してしまい、この開発をスタートしました。
もともとAIの開発がしたかったのですが、GPUが買えず休学なども重なり、追い詰められた結果、優先順位はかなり低かったですが、もともと作りたかったSNSを作ることになりました

 構成


バックエンド: Python

データベース: PostgreSQL

キャッシュ: Redis

フロントエンド: typescript（4つのプロジェクトで構成）

認証: 自作

インフラ: AWS

cssは生のcss使っ...]]></description><link>https://zenn.dev/shi_san/articles/8ea96aa4daba01</link><guid isPermaLink="true">https://zenn.dev/shi_san/articles/8ea96aa4daba01</guid><pubDate>Tue, 01 Apr 2025 15:44:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U0uLjwtL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SNS%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A9%25E3%2580%2581%25E5%2585%25AC%25E9%2596%258B%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25AD%25BB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTc5ejJLOE9HMy1iblZweS03UTk2R3p4cHpiRUVkUnpJbi03djFnYXZoZDBmV0ZBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>死</dc:creator></item><item><title><![CDATA[【AtCoder】ABC399をPythonで解く]]></title><description><![CDATA[
 1. はじめに

 目的
ABCを解くことにより、とにかくRatingを上げていく。

 フィードバックして欲しい点
私は競技プログラミング初心者のため、いただいたアドバイスをすぐに理解できず、何度も質問してしまうかもしれません。それでも構わないという心優しい方がいらっしゃれば、ぜひアドバイスをいただけると嬉しいです。丁寧に教えていただけると、とても助かります！

アルゴリズムの選択と最適化

今の実装よりも効率的なアルゴリズムがあるか？

計算量を減らせる部分や、ボトルネックになっている処理はないか？


コードの可読性と整理

もっとシンプルに書ける部分はないか？

変数名や関数...]]></description><link>https://zenn.dev/keiiita/articles/c97e27c0b0cc20</link><guid isPermaLink="true">https://zenn.dev/keiiita/articles/c97e27c0b0cc20</guid><pubDate>Tue, 01 Apr 2025 14:49:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UNHYJsfV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AtCoder%25E3%2580%2591ABC399%25E3%2582%2592Python%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keiiita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjJLZ2laOThYRjRJZDdaeEN6djVpWHdTY3pZODQ3c3pWbWhvUVZXcTRuaTMtRkJ0VT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keiiita</dc:creator></item><item><title><![CDATA[【Python】最長回文部分文字列(longest palindromic substring)]]></title><description><![CDATA[
 最長回文部分文字列について
こんにちは！アルゴリズムの勉強において、最長回文部分文字列を求める問題について触れる機会があったので、まとめていきたいと思います。まず、最長回文部分文字列とは、与えられた文字列の中で、部分文字列であり、かつ回文で最長のものです。例えば、babadなら最長回文部分文字列は "bab" または "aba"です。要は、最長の回文を見つけ出せ！ということです。

 アプローチの仕方
今回はいろんな解き方がある中で今回は、中心展開法（Expand Around Center） で解いていこうと思います。中心展開法（Expand Around Center） は、le...]]></description><link>https://zenn.dev/daichi09167/articles/b129b4042ff9ef</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/b129b4042ff9ef</guid><pubDate>Tue, 01 Apr 2025 14:39:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3jFCCnWZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E6%259C%2580%25E9%2595%25B7%25E5%259B%259E%25E6%2596%2587%25E9%2583%25A8%25E5%2588%2586%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%2528longest%2520palindromic%2520substring%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YTc4OTEwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item></channel></rss>