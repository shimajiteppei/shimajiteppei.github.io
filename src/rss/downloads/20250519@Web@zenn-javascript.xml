<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 19 May 2025 12:05:02 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScriptの型のみで四則演算を実装する]]></title><description><![CDATA[
 TypeScriptの型のみで四則演算を実装する

 コード
そこまで高度なことはしていないと思うので、今回使った文法のみメモします。

 BuildArray&lt;A&gt; extends [...BuildArray&lt;B&gt;, ...infer Rest]


BuildArray&lt;B&gt;で配列を生成し、...で配列の要素を展開

infer Restで残りの要素をRestという型変数に推論

BuildArray&lt;A&gt; extends ~でA配列は[...BuildArray&lt;B&gt;, ...infer Rest]の構造を持つ配列か...]]></description><link>https://zenn.dev/mitate_gengaku/articles/type-level-arithmetic-operations</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/type-level-arithmetic-operations</guid><pubDate>Mon, 19 May 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RvyQhXSy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7%25E5%259B%259B%25E5%2589%2587%25E6%25BC%2594%25E7%25AE%2597%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[TypeScriptの型のみでシンプルなOXゲームを作ってみた]]></title><description><![CDATA[
 TypeScriptの型のみでシンプルなOXゲームを作ってみた
先日見かけたこの記事に衝撃を受けた。自由な型を設計できるTypeScriptのとりこになった。(けんた食堂さん風)

自分も型のみで何か作ってみたいと思いシンプルなOXゲームを実装しました。

 コード
色々な型を組み合わせることで実現しました。そこまで高度なことはしていないと思うので、今回使った文法のみメモします。
/**
 * 空のマス型
 */
type EmptyCell = " ";

/**
 * ユーザー型
 */
type Player = "O" | "X";

/**
 * 指定できるインデックス型
...]]></description><link>https://zenn.dev/mitate_gengaku/articles/type-level-tic-tac-toe</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/type-level-tic-tac-toe</guid><pubDate>Mon, 19 May 2025 09:59:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aQ6UodhC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AAOX%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[初心者によるJavaScriptスコープについて1「スコープの重要性とグローバルスコープ」]]></title><description><![CDATA[こんにちは。ブログ主です。今回はJavaScriptのスコープについてChatGPTと会話したり、jsprimerを読んだりしてわかったことがあったのでまとめます。

 概要
JavaScriptでプログラミングする上で避けては通れない「スコープ」の概念について実例を交えながら軽く説明します。内容については目次を活用し、欲しい内容をさらってください。この記事では「そもそもスコープとは」や「スコープの重要性」や「グローバルスコープ」について説明します。以下常体。

 そもそもスコープとは？
変数や関数にアクセスできる範囲(有効範囲)こと。scopeという英語の意味は「範囲」という意味からも...]]></description><link>https://zenn.dev/ripoh/articles/f8be6f52dadc28</link><guid isPermaLink="true">https://zenn.dev/ripoh/articles/f8be6f52dadc28</guid><pubDate>Mon, 19 May 2025 07:56:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L5DeTnd1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BJavaScript%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A61%25E3%2580%258C%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E9%2587%258D%25E8%25A6%2581%25E6%2580%25A7%25E3%2581%25A8%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:w4daka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2ZjZDZhMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>w4daka</dc:creator></item><item><title><![CDATA[Misoca API v3を使って、請求書を複製してみたいと思った]]></title><description><![CDATA[こんにちは☀️
TRUSTART株式会社のみつです！
Misocaは、無料プランである程度の機能が利用できる請求書サービス。
個人で活動されてる方たちにとっては、制限ありでもこの機能で無料はアツい？と勝手に思ってたり。
請求書の複製をターミナルからコマンドでできないかなぁとふと思い、Misoca API v3でどんなことができるのかなを覗いてみました！

 Misoca APIって便利なのでは・・・？
普段、見積書や請求書をパパッと作りたい時に利用しています！

 これまでのわたし
同じ会社様宛に毎月発行する請求書があります。

ログインをする ← ID, PASS入力とか地味に大変です...]]></description><link>https://zenn.dev/trustart_dev/articles/ef4a4ffbf386b4</link><guid isPermaLink="true">https://zenn.dev/trustart_dev/articles/ef4a4ffbf386b4</guid><pubDate>Mon, 19 May 2025 05:15:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Z1sHH-i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Misoca%2520API%2520v3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E8%25AB%258B%25E6%25B1%2582%25E6%259B%25B8%25E3%2582%2592%25E8%25A4%2587%25E8%25A3%25BD%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mi2__user%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4Y2I1MTc4ODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TRUSTART%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4Mzg0MzQ2ZDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mi2__user</dc:creator></item><item><title><![CDATA[jest で test 間でオブジェクトを共有する]]></title><description><![CDATA[
 jest で global-setup をいい感じに使って backend にアクセスするための client を複数の .test ファイルで共有する
jestで、テストのファイルを複数に分割してシナリオを記述したい。
その際、beforeAll() などで全てのファイルで同じようなオブジェクト（例えば、ネットワークリクエストを行うクライアントなど）初期化をしている。
そんな経験はないでしょうか。
私は以下の方法によってそれを解決しました。
まず、テストが子ワーカープロセスを生成して並列実行されないようにします。
   "scripts": {
        "test:in-b...]]></description><link>https://zenn.dev/sabiuyack/articles/340bd6ce7daec2</link><guid isPermaLink="true">https://zenn.dev/sabiuyack/articles/340bd6ce7daec2</guid><pubDate>Mon, 19 May 2025 04:40:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fE58feLi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jest%2520%25E3%2581%25A7%2520test%2520%25E9%2596%2593%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E5%2585%25B1%25E6%259C%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:soya-miyoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwN2Y3N2I1MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soya-miyoshi</dc:creator></item><item><title><![CDATA[React開発での絶対パス設定まとめ]]></title><description><![CDATA[React でコンポーネントをインポートするたびに ../ を繰り返していて、見づらい・修正が大変と感じたことはありませんか？
この記事では、import useStyles from "../components/styles"; のような相対パスではなく、import useStyles from "components/styles"; のような絶対パスでインポートする設定方法を紹介します。

 ✅ やりたいこと
例えば以下のような構成のとき：
├── App.tsx
├── components/
│ └── styles.ts
通常は以下のような相対パスになります。
impor...]]></description><link>https://zenn.dev/leegrey/articles/7690d298f97d3d</link><guid isPermaLink="true">https://zenn.dev/leegrey/articles/7690d298f97d3d</guid><pubDate>Sun, 18 May 2025 13:24:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FjU3wbba--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%25AE%25E7%25B5%25B6%25E5%25AF%25BE%25E3%2583%2591%25E3%2582%25B9%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GlobalPaws%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwNTcxOWUyM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GlobalPaws</dc:creator></item><item><title><![CDATA[Typescript 関数の理解を深める]]></title><description><![CDATA[日頃プログラミングをしていてTypescriptの関数について理解を深めたいなと思い記事を書きました。
内容は僕が理解不足だったり深めたい箇所がメインですのでそこをご了承いただけると嬉しいです！

 void関数における早期returnについて
戻り値の型がvoidである関数においても、returnによる処理の中断が可能です。
この性質を活用することで、条件によって処理を早期に終了させ、不要なネストや処理の継続を避けることができます。
function doSomething(): void {
  if (someCondition) return;
  console.log("続行...]]></description><link>https://zenn.dev/you_ik/articles/a1f48acb35f6ec</link><guid isPermaLink="true">https://zenn.dev/you_ik/articles/a1f48acb35f6ec</guid><pubDate>Sun, 18 May 2025 09:56:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KO67HafI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%2520%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2582%2592%25E6%25B7%25B1%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25AB%25E3%2581%25B5%25E3%2581%2581%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjYTY1YmYwYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨルシカふぁん</dc:creator></item><item><title><![CDATA[バーコードリーダー実装に使えるライブラリを比べてみた]]></title><description><![CDATA[
 背景
バーコードスキャン機能付きのアプリの開発に興味を持ち、色々と調べていました。私は本を読むのが好きで、読んだ本を簡単に管理できるアプリがあればなぁと思って試しに簡単なアプリを作ってみました。
今まで考えたことがなかったのですが、バーコードスキャンを使う場面はたくさんあると気づきました。

在庫管理
モバイル決済
チケット認証
レジでの買い物
棚卸し作業

などなど、バーコード／QR コードの読み取りはいろんな業務で便利ですね。
そう思ってから、巷のバーコードスキャンライブラリにどんな種類があるのか、比較検討するための調査をしてみました。
この記事では、

どのバーコードスキャンラ...]]></description><link>https://zenn.dev/maidog/articles/bb5fdaebba1f8c</link><guid isPermaLink="true">https://zenn.dev/maidog/articles/bb5fdaebba1f8c</guid><pubDate>Sat, 17 May 2025 18:43:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SC7kVpzD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E6%25AF%2594%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Marina%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2NDA3ZjJiOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Marina</dc:creator></item><item><title><![CDATA[ノーコードでニューラルネットワークのPythonコードを生成するアプリの開発]]></title><description><![CDATA[
 1.はじめに
現在，機械学習，特にニューラルネットワークは現在のテクノロジー分野で欠かせない技術となっていますが，機械学習を知らない人には，実装やニューラルネットワークの仕組みの理解のハードルが依然として高いままです．プログラミングの知識やライブラリの理解が必要とされるため，初学者自身がコードを作成するのは，難しいように感じます．
そこで私は，プログラミングの専門知識がなくても，わずか数クリックでPyTorchを使った本格的なニューラルネットワークのコードを生成できるWebアプリケーション「No-Code Neural Network Code Generator」を開発しました．こ...]]></description><link>https://zenn.dev/kenjiendou/articles/39d0a5e96b57fd</link><guid isPermaLink="true">https://zenn.dev/kenjiendou/articles/39d0a5e96b57fd</guid><pubDate>Sat, 17 May 2025 16:55:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jzgAWKPg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258E%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A9%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AEPython%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2582%2593%25E3%2581%2598%25E3%2581%2588%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1ODFiNmE1MmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けんじえんどう</dc:creator></item><item><title><![CDATA[JavaScriptでABC406(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc406

 A - Not Acceptable
https://atcoder.jp/contests/abc406/tasks/abc406_a
0時00分からの分数を求めて比較するのが楽で確実な気がします
C \times 60 + D &lt; A \times 60 + B ってことですね
https://atcoder.jp/contests/abc406/submissions/65847652
1分03秒 AC!

 B - Product Calculator
https://atcoder.jp/conte...]]></description><link>https://zenn.dev/aya_koto/articles/f6233c939b6bd4</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/f6233c939b6bd4</guid><pubDate>Sat, 17 May 2025 13:49:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P9B7lkPU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC406%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[【Vue.js】ユーザーアクション編[methods/v-on:(@)/emit()]]]></title><description><![CDATA[
 methods()
!

 【methods】とは

[実装例]あいさつボタンを押した際に下にこんにちはと表示される。
・イベントに応じた処理（関数）を定義することができる。
・Vue2では、export defalt methodsとすることで関数を定義することができた。
・Vue3では、&lt;script setup&gt;構文を使うことで、methodsオブジェクトの定義は不要となった。
Vue2での記述方法　VS Vue3での記述方法

Vue2だとexport defalt methodsとする必要があった。
&lt;template&gt;
  &lt;button @...]]></description><link>https://zenn.dev/code_journey_ys/articles/538de1849cfa9f</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/538de1849cfa9f</guid><pubDate>Sat, 17 May 2025 09:18:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Xw6zSTp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue.js%25E3%2580%2591%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25B7%25A8%255Bmethods%252Fv-on%253A%2528%2540%2529%252Femit%2528%2529%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[正規表現（Regular Expression）]]></title><description><![CDATA[
 正規表現とは
文字列の集合を特定の記法で表現する。正規表現は、デリミタ（/「スラッシュ」）で囲んで使用することがほとんど。
URLにマッチするかを判定する場合、「\」のようなエスケープを使用することが多い。
デリミタで正規表現で囲んでURLの確認するようなコードを書いた際に、プログラマ的に見づらくなってしまうこともあるので、「#」に変換すると読みやすくなることがある。

 正規表現を使うと具体的にどんなことができるのか？
主に以下のようなことで良く使用する。

判定
検索
置換


 正規表現の種類
正規表現は以下のようなものがある。また、正規表現は記法の組み合わせでいろんなパターン...]]></description><link>https://zenn.dev/monyyy/articles/819c9e3aeee37e</link><guid isPermaLink="true">https://zenn.dev/monyyy/articles/819c9e3aeee37e</guid><pubDate>Sat, 17 May 2025 08:01:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x7frfDmR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25EF%25BC%2588Regular%2520Expression%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUxJMlItWWhrem0zQUVwMW5TeU1acUFrWlA2TWtvZjRwNUs5VGhkV2EzXzRVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mon</dc:creator></item><item><title><![CDATA[JavaScriptのDateはなぜ月を0から数えるのか？仕様の背景と対策を調べてみた]]></title><description><![CDATA[console.log(new Date(2025,5,17));
// Mayではないことに最初は驚くと思います
Tue Jun 17 2025 00:00:00 GMT+0900 (日本標準時)
上記のように、JavaScriptで月を指定する際、
なぜ1から12ではなく0から11で表すのかふと疑問に思ったので調べてみました。

 MDNを見てみる
Dateオブジェクトに関するMDNのページを見てみたものの、なぜ1からではなく0から始まっているのかということに言及するような記載はありませんでした、、、
※getMonth()のページも見てみたが同様でした、、、
言語仕様を説明するドキ...]]></description><link>https://zenn.dev/ohimusdev46301/articles/50d5ebc277d9b1</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/50d5ebc277d9b1</guid><pubDate>Sat, 17 May 2025 02:29:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MAMRPmpr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEDate%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%259C%25E6%259C%2588%25E3%2582%25920%25E3%2581%258B%25E3%2582%2589%25E6%2595%25B0%25E3%2581%2588%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25E4%25BB%2595%25E6%25A7%2598%25E3%2581%25AE%25E8%2583%258C%25E6%2599%25AF%25E3%2581%25A8%25E5%25AF%25BE%25E7%25AD%2596%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[🌳 ディレクトリ構造を簡単テキスト化！nodejs/cliツール「filetree」]]></title><description><![CDATA[
 ✨ はじめに
開発プロジェクトを進めていると、「このプロジェクトのディレクトリ構造をドキュメントに載せたい」「チームメンバーに特定の範囲のファイル構成を伝えたい」といった場面がよくありますよね。そんなとき、手動でツリー構造を書き出すのは手間がかかりますし、ミスも起こりやすいものです 😥
今回ご紹介する @telosh/filetree は、そんな悩みを解決してくれる Node.js 向けの npm パッケージです。指定したディレクトリのファイルやフォルダの構造を、簡単に美しいツリー形式の文字列で出力してくれます！

 📦 @telosh/filetree とは？
@telosh/fi...]]></description><link>https://zenn.dev/terumi_web/articles/09bfbe35b0835d</link><guid isPermaLink="true">https://zenn.dev/terumi_web/articles/09bfbe35b0835d</guid><pubDate>Sat, 17 May 2025 02:15:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_REyC5GT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E9%2580%25A0%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%258C%2596%25EF%25BC%2581nodejs%252Fcli%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%258Cfiletree%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:telosh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzMGVkN2M4NDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>telosh</dc:creator></item><item><title><![CDATA[【Vue.js】状態管理編[ref/reactive/v-model/compted/watch]+Pinia]]></title><description><![CDATA[
 ref()
!

 【ref()】とは


[実装例]カウントアップのボタンが押される（click）と数値（count）が増える（increment）
・数値や文字列などの単一の値の状態を管理したい時に用いる。
・リアクティブな変数を定義して、単方向に状態を管理する。
・変数.valueとすることで&lt;script&gt;内で値を取得することができる。
【リアクティブ】とは
・「変数の変化を追いかける」仕組みのこと。
・値の変化を自動で監視して、画面の表示も勝手に更新してくれる。


ref（）の実装例と解説
countという変数をref関数で監視している
&lt;templat...]]></description><link>https://zenn.dev/code_journey_ys/articles/e620a3e8f0238b</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/e620a3e8f0238b</guid><pubDate>Fri, 16 May 2025 14:35:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AoP6Pxlr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue.js%25E3%2580%2591%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E7%25B7%25A8%255Bref%252Freactive%252Fv-model%252Fcompted%252Fwatch%255D%252BPinia%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Reactナニソレおいしいの？というそこのあたなへ]]></title><description><![CDATA[
 はじめに
初めに勉強した時、もし私がこの記事に出会っていたら挫折はしなかったと断言できる記事に仕上げました。
Reactを学習したいけどなにからやればいいかわからない人や現在勉強していて躓いている人は是日最後まで読んで見て下さい。
私はReactをあらゆる教材（Reactチュートリアル（公式）・Udemy・Youtube）を使って学習しましたが幾度となく挫折して勉強を投げ出してきました。
しかし今回基本の「き」から勉強することで理解が深まり挫折しにくくなったと思いますのでその教材と学んだことをまとめます。
この記事を読むことで得られるもの

Reactってなに？
Reactの基本JS...]]></description><link>https://zenn.dev/keit0025/articles/08231345b6a233</link><guid isPermaLink="true">https://zenn.dev/keit0025/articles/08231345b6a233</guid><pubDate>Fri, 16 May 2025 09:04:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rn1VferT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2583%258A%25E3%2583%258B%25E3%2582%25BD%25E3%2583%25AC%25E3%2581%258A%25E3%2581%2584%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2581%259D%25E3%2581%2593%25E3%2581%25AE%25E3%2581%2582%25E3%2581%259F%25E3%2581%25AA%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUV0WmxKQU1pNUN0dlhsdzh1OWhGZTZCaEdiWEpHY1o3dEJpU3Q5TWlHanBVeUpNST1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keita</dc:creator></item><item><title><![CDATA[[React] 親から渡すのか、子に書けばいいのか、どっちなんだい]]></title><description><![CDATA[
 悩んでる
React で使いまわしたい関数がありました。こんなのです。
const getRelativeTimeString = (date) =&gt; {
        const targeDate = date instanceof Date ? date : new Date(date);

        // 現在時刻との差分をミリ秒で計算
        const now = new Date();
        const diff = now.getTime() - targeDate.getTime();

        // 秒、分、時間、日、月、年...]]></description><link>https://zenn.dev/miyan0mori/articles/480fb179f3e006</link><guid isPermaLink="true">https://zenn.dev/miyan0mori/articles/480fb179f3e006</guid><pubDate>Fri, 16 May 2025 04:54:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MAA-kmXv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%255D%2520%25E8%25A6%25AA%25E3%2581%258B%25E3%2582%2589%25E6%25B8%25A1%25E3%2581%2599%25E3%2581%25AE%25E3%2581%258B%25E3%2580%2581%25E5%25AD%2590%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%2591%25E3%2581%25B0%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%25E3%2580%2581%25E3%2581%25A9%25E3%2581%25A3%25E3%2581%25A1%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2584%25E3%2581%25AE%25E3%2582%2582%25E3%2582%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlMjQ4OTg3YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みやのもり</dc:creator></item><item><title><![CDATA[【Vue3・Nuxt3】最新のVue3で、`<script setup>`で単に値をexportする（defineExposeではない）]]></title><description><![CDATA[
 結論
下記のように、先に&lt;script&gt;（&lt;script setup&gt;でない）でexportすればよいです。

実際に動く環境: Vue3: An example to export consts from components


GoodExportValue.vue
&lt;template&gt;
  &lt;p&gt;dummy&lt;/p&gt;
&lt;/template&gt;

&lt;script lang="ts"&gt;
import { a } from '../utils/a'
import { b } from '../utils...]]></description><link>https://zenn.dev/aiya000/articles/f7faffce4eab5d</link><guid isPermaLink="true">https://zenn.dev/aiya000/articles/f7faffce4eab5d</guid><pubDate>Thu, 15 May 2025 14:17:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--glVknD-9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue3%25E3%2583%25BBNuxt3%25E3%2580%2591%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEVue3%25E3%2581%25A7%25E3%2580%2581%2560%253Cscript%2520setup%253E%2560%25E3%2581%25A7%25E5%258D%2598%25E3%2581%25AB%25E5%2580%25A4%25E3%2582%2592export%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588define...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2582%2584%2520-%2520aiya000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pZVUM0QXdxcVdtMVZmVWtiQXFzdE5ra1BFZU1FOUN0NFY1UzdiPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あいや - aiya000</dc:creator></item><item><title><![CDATA[初心者によるJavascript講座1(変数と宣言)]]></title><description><![CDATA[これは初心者によるjs講座です。（ChatGPTと会話して作りました）

 目的
・JavaScriptにおける変数と宣言の基本を理解すること
・変数はプログラムでデータを扱うために欠かせないことを紹介する

 まとめ（忙しい人向け）
・変数とは、データを保存するための名前付きの箱。
・変数を宣言するには、var / let / constを使う。
・基本は const、値を変えたいときだけ let を使う。
・varは再宣言できてしまうため、バグのもとになりやすいので基本使わない。
・変数にはスコープ（使える範囲）があり、letとconstはブロック単位、varは関数単位で管理される。...]]></description><link>https://zenn.dev/ripoh/articles/af561e6fc8aaca</link><guid isPermaLink="true">https://zenn.dev/ripoh/articles/af561e6fc8aaca</guid><pubDate>Thu, 15 May 2025 12:57:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k2b8DX_1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BJavascript%25E8%25AC%259B%25E5%25BA%25A71%2528%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25A8%25E5%25AE%25A3%25E8%25A8%2580%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:w4daka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2ZjZDZhMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>w4daka</dc:creator></item><item><title><![CDATA[TermuxでJavaScript(node.js)]]></title><description><![CDATA[
上記の記事の詳細記事です。

 典型的なJavasScript
JavaScriptというとHTMLの中のスクリプト要素でもよく使用されます。典型的なのだとこんなのですね。

counter.html
&lt;span id="counter"&gt;0&lt;/span&gt;
&lt;script&gt;
addEventListener("DOMContentLoaded", (event) =&gt; {
    const counter_span = document.querySelector('#counter');
    function countup(e) {
...]]></description><link>https://zenn.dev/dameyodamedame/articles/3b83a6184d8cae</link><guid isPermaLink="true">https://zenn.dev/dameyodamedame/articles/3b83a6184d8cae</guid><pubDate>Thu, 15 May 2025 09:13:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H-LQMBNz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Termux%25E3%2581%25A7JavaScript%2528node.js%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dameyodamedame%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dameyodamedame</dc:creator></item></channel></rss>