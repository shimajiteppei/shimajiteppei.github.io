<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 02 Dec 2024 11:08:11 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Envoy入門（その５）Auth0 で RBAC]]></title><description><![CDATA[
 はじめに
マイクロサービスやWeb API界隈では、サービス間のネットワークの制御をライブラリではなく、プロキシのコンテナをサイドカーとして使うのだとか。そのデファクトスタンダード的な立ち位置なのが Envoy さん。
（その４）のおわりに で匂わせた

今回、Lua を取り上げたのは、Auth0 で RBAC（Role-Based Access Control）を設定して、JWT に反映された内容に応じた認可を Envoy で実現したかったためです。

をやります。

 やってみた

 環境構築

 Envoy
（その３）の環境構築と同じリポジトリを git clone して頂いて...]]></description><link>https://zenn.dev/robon/articles/611cb5f284f611</link><guid isPermaLink="true">https://zenn.dev/robon/articles/611cb5f284f611</guid><pubDate>Mon, 02 Dec 2024 09:37:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RotJEnDj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Envoy%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2595%25EF%25BC%2589Auth0%2520%25E3%2581%25A7%2520RBAC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>荒木 岳夫</dc:creator></item><item><title><![CDATA[docker images none をまとめて消す]]></title><description><![CDATA[
 気が付いたらnoneだらけ
開発が進んできたある日、
何気にdocker imagesをたたいてみると、

(;´･ω･) なんやこれ
気が付いたら &lt;none&gt; まみれに
・・・掃除しよ
ヾ(・ω&lt;)ﾉ"　三三三●　ⅱⅲ コロコロ♪
------------------- ↓ 本題はここから ↓-------------------

 noneイメージ確認
docker imagesで一覧をとってきてdocker rmiで撤去の流れ
imagesのフィルターには -f "dangling=true"を使う
 docker images -f "dangling=...]]></description><link>https://zenn.dev/dozo/articles/8e48e315f39ffc</link><guid isPermaLink="true">https://zenn.dev/dozo/articles/8e48e315f39ffc</guid><pubDate>Mon, 02 Dec 2024 00:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jcnRxRXd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520images%2520none%2520%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E6%25B6%2588%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dozo</dc:creator></item><item><title><![CDATA[Claude DesktopでMCPサーバーエラーへの対処（Windows環境）]]></title><description><![CDATA[
 はじめに
Keitoさんの動画を見ながら、Claude DesktopでMCPデビューを目指しましたが、私のWindows環境だと「Could not attach to MCP server」というエラーに遭遇。その解消方法を紹介します。
https://youtu.be/eHrp9hKZed8?si=Ktp2G2C6sOebBVyU

 困った個所
・Claude desktopのsettingsのDeveloperの個所にはbrave-searchが出てくる
・でもチャットで使えないし、トンカチマークみたいな2 MCP tools availableが出てこない


 原因
・...]]></description><link>https://zenn.dev/channnnsm/articles/6fc50a86a1e03e</link><guid isPermaLink="true">https://zenn.dev/channnnsm/articles/6fc50a86a1e03e</guid><pubDate>Sun, 01 Dec 2024 16:26:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hiSyurD0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Desktop%25E3%2581%25A7MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25EF%25BC%2588Windows%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:channnnsm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkODNiNmZmODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>channnnsm</dc:creator></item><item><title><![CDATA[git commit前にdockerコンテナ内でlintを強制する方法]]></title><description><![CDATA[
 git commit前にdockerコンテナ内でlintを強制する方法
構造上husky, lint-stagedが実行できないプロジェクトでgit commit前にdockerコンテナ内でlintを強制する方法についてのメモ。
例えば以下のようなコンテナとdocker-compose.yml, Dockerfileが分離しているプロジェクト構造の場合。
├ .git
├ src // コンテナ
├ Dockerfile
├ docker-compose.yml
git hooksという機能を使用してスクリプトを実行するとcommit前にlintを実行することができるようになる。

...]]></description><link>https://zenn.dev/mitate_gengaku/articles/git-pre-commit</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/git-pre-commit</guid><pubDate>Sun, 01 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Kt5bHI3G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:git%2520commit%25E5%2589%258D%25E3%2581%25ABdocker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2586%2585%25E3%2581%25A7lint%25E3%2582%2592%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[RustのDockerビルド時の依存関係のキャッシュで詰まった話]]></title><description><![CDATA[
 最初に結論
Hello,World!プログラムが実行されてしまうのは、RUN cargo buildのまえにRUN touch src/main.rsを挟むことで解決できる

 はじめに
RustのプログラムをDockerで動かすときに、素朴にDockerfileを書くと、依存関係のビルドにとてつもなく時間がかかってしまうので、Cargo.lockとCargo.tomlだけをコピーしてからビルドして、その後にソースコードをコピーしてビルドすることによって依存関係が変わっていない場合にDockerのキャッシュを効かせるテクニックがあります。
参考: https://zenn.dev/u...]]></description><link>https://zenn.dev/harui/articles/df03573597e3d9</link><guid isPermaLink="true">https://zenn.dev/harui/articles/df03573597e3d9</guid><pubDate>Sun, 01 Dec 2024 07:32:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TJoe-j0S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AEDocker%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2599%2582%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Harui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSS1VaExIUDlyTFBxTWlsQU1EUnEwTUN1UDhwSnYwYk9hYkNpMDJ4eFdhYXpOLUdzYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Harui</dc:creator></item><item><title><![CDATA[GitHub Actionsで特権コンテナを使う]]></title><description><![CDATA[
 この記事は
本記事はGitHub Dockyard Advent Calendar 2024の2日目の記事です。そして、SORACOM Advent Calendar 2024シーズン2の2日目の記事です。
SORACOM Arcを題材に、GitHub Actionsで特権コンテナを使う方法を紹介します。

 特権コンテナとは
特権コンテナとは、Dockerのドキュメントでは以下のように説明されています。

デフォルトでは、Docker コンテナは「unprivileged」（権限がない）ため、Docker コンテナの中で Docker デーモンを動かす等ができません。これは、デフォ...]]></description><link>https://zenn.dev/showm001/articles/2024-12-02-01</link><guid isPermaLink="true">https://zenn.dev/showm001/articles/2024-12-02-01</guid><pubDate>Sun, 01 Dec 2024 07:18:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MY2agfel--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7%25E7%2589%25B9%25E6%25A8%25A9%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2583%25BC%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pxdDNnYVBBT2tDTTVSUWxmWGhzNXI3eGxaZl96Tm8ySU9oVUVJbm9RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょーちゃん</dc:creator></item><item><title><![CDATA[Tilt, ctlptlを使ったKubernetesマイクロサービス用ローカル開発環境構築]]></title><description><![CDATA[
 はじめに
本記事では、Tilt、ctlptlを使用してDocker+Kubernetesのローカル開発環境を構築する方法について説明します。

 前提
Dockerの実行環境はすでに構築されているものとしています。

 ツールの概要


Tilt: Tiltは、ローカル開発環境でのマイクロサービスのビルド、デプロイ、デバッグを簡素化するツールです。

保存したファイルに関連するコンテナを自動でリビルド・デプロイしてくれるため、稼働確認の負荷が低減できます。



ctlptl: ctlptlは、Kubernetesクラスターの管理を簡素化するツールで、ローカル開発環境でのクラスターの...]]></description><link>https://zenn.dev/zooth/articles/34b1ea470d4545</link><guid isPermaLink="true">https://zenn.dev/zooth/articles/34b1ea470d4545</guid><pubDate>Sun, 01 Dec 2024 06:46:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B3kws7lR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tilt%252C%2520ctlptl%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FKubernetes%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E7%2594%25A8%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryamay%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c3NG1TYWFmSmJQWkY5THVIWWd5b2ZNRXB2WXJZWXhkU3BYdkJyPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryamay</dc:creator></item><item><title><![CDATA[VSCode Dev Containerを使用する方法]]></title><description><![CDATA[ご覧いただきありがとうございます。Furuyaです。
今回は、「VSCode Dev Containerを使用する方法」についてまとめます。

 環境
PC：MacBook Pro 13-inch, 2020, Four Thunderbolt 3 ports
macOS：Sonoma 14.6.1
Shell: zsh

 前提条件
すでにdocker環境が構築されていることが前提となります。
Next.js開発環境をDockerに０から作成する方法は以下でまとめていますので、dokcer環境が未構築の方はこちらを参照してください。
https://zenn.dev/k0y0k0y0/...]]></description><link>https://zenn.dev/k0y0k0y0/articles/article_20241129</link><guid isPermaLink="true">https://zenn.dev/k0y0k0y0/articles/article_20241129</guid><pubDate>Sun, 01 Dec 2024 06:01:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V6sUfE2c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520Dev%2520Container%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuma%2520Furuya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2YTg5YjIwNjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takuma Furuya</dc:creator></item><item><title><![CDATA[PostgreSQLのRLS (Row Level Security) キャッチアップ]]></title><description><![CDATA[
 概要
今回は RLS (Row Level Security) に関してサポートしているPostgreSQLを使って
色々動かしながら試していきたいと思います。

 RLS (Row Level Security)
https://www.postgresql.org/docs/current/ddl-rowsecurity.html

Row Security Policies では、通常のクエリで返される行や、データ変更コマンドで挿入、更新、削除できる行をユーザーごとに制限します。この機能は Row-Level Security とも呼ばれます。


 特徴

デフォルトではテー...]]></description><link>https://zenn.dev/slowhand/articles/a4f4ee6d627299</link><guid isPermaLink="true">https://zenn.dev/slowhand/articles/a4f4ee6d627299</guid><pubDate>Sat, 30 Nov 2024 13:38:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bINZEbtb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2581%25AERLS%2520%2528Row%2520Level%2520Security%2529%2520%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:slowhand%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwY2YzMGUzMDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>slowhand</dc:creator></item><item><title><![CDATA[Azure DevOps/Pipelinesでの自動ビルド環境構築]]></title><description><![CDATA[
 概要
Azure DevOps/Pipelinesでの自動ビルド環境構築について具体例を示しながら紹介します。
Azure DevOpsはGitHub、Azure PipelinesはGitHub Actionsのようなサービスです。
Azure DevOps上のGitリポジトリに対してpushされたりPull Requestが発行されたりするのをトリガーに、ビルドやテスト、デプロイなどを自動で実行することができます。
GitHubでなくMicrosoft社のAzure DevOpsなら職場環境上使いやすいという方もいると思います。

 自動化の内容
この記事ではC++のアプリケーシ...]]></description><link>https://zenn.dev/teasy/articles/azure-devops-tutorial</link><guid isPermaLink="true">https://zenn.dev/teasy/articles/azure-devops-tutorial</guid><pubDate>Fri, 29 Nov 2024 13:43:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2UmhxJYK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520DevOps%252FPipelines%25E3%2581%25A7%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:teasy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjMGVlZDQ5MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>teasy</dc:creator></item><item><title><![CDATA[docker環境でLaravel開発環境構築]]></title><description><![CDATA[
 laravelアプリケーション作成手順

 はじめに
dockerのインストールは完了している前提で記述
新たにプロジェクトを作成する
今回はUbuntuを使用

 アプリケーションの作成
アプリケーションを作成したいディレクトリで以下のコマンドを実行
curl -s https://laravel.build/practice | bash
practiceの部分は好きな名前にしてOK

 Laravel Sailの起動
アプリケーションが作成されたらアプリケーションディレクトリに移動する
cd ./practice
以下のコマンドでsailを起動する
./vendor/bin/s...]]></description><link>https://zenn.dev/nosho/articles/afaf4ea302a065</link><guid isPermaLink="true">https://zenn.dev/nosho/articles/afaf4ea302a065</guid><pubDate>Thu, 28 Nov 2024 15:16:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jQf3-J2O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Laravel%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meltulto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxZWY2ZTNkNmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meltulto</dc:creator></item><item><title><![CDATA[error getting credentials - err: exit status 127, out:の対応]]></title><description><![CDATA[docker build したら死んだ。
docker build -t cloudbuild-cicd-sample .
...省略
--------------------
   1 |     # ビルドステージ
   2 | &gt;&gt;&gt; FROM node:18-alpine AS builder
   3 |     WORKDIR /app
   4 |     
--------------------
ERROR: failed to solve: node:18-alpine: error getting credentials - err: exit s...]]></description><link>https://zenn.dev/okarin_9029/articles/28ad9f5be08309</link><guid isPermaLink="true">https://zenn.dev/okarin_9029/articles/28ad9f5be08309</guid><pubDate>Thu, 28 Nov 2024 14:45:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pSZAvFtE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:error%2520getting%2520credentials%2520-%2520err%253A%2520exit%2520status%2520127%252C%2520out%253A%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%258B%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZmJ3LTdOdFB0TEJkSTZIa3cyU3BuSlRVNlFINXF2TkxYNUxDMXNnZWlGU0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おかりん</dc:creator></item><item><title><![CDATA[docker コンテナを他の PC にコピーする]]></title><description><![CDATA[!
docker ぜんぜん詳しくないので、間違ったことしていたら教えてください。

先日、とある開発 PC で稼働中の docker コンテナを、別の開発 PC に移転 (コピー) したい需要が発生しました。プラットフォームは Windows で Docker for Desktop を使っています。docker 詳しくないので Bing Chat に聞いてみながらやってみた結果を、自分の備忘録的に、以下にメモします。

 コピー元 PC での作業

 コンテナをイメージにコミット
まずは、docker commit コマンドを使用して、移転したいコピー元の docker コンテナのスト...]]></description><link>https://zenn.dev/j_sakamoto/articles/85fbeb26406c8c</link><guid isPermaLink="true">https://zenn.dev/j_sakamoto/articles/85fbeb26406c8c</guid><pubDate>Thu, 28 Nov 2024 14:13:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NFsyb0rK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E4%25BB%2596%25E3%2581%25AE%2520PC%2520%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540jsakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVX243dnJ5ZFlLb2NxdUhSUkIxSGZ4NGpVekNsdGNmZ290R2hfNWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@jsakamoto</dc:creator></item><item><title><![CDATA[Terraformを使ってGoogleCloud上にKaggle環境をささっと構築する]]></title><description><![CDATA[
 はじめに
サクッと Kaggle 環境を構築したいときってありますよね。今回は Terraform を使って Google Cloud Platform 上に Kaggle 環境を構築する方法を紹介します。この記事を読むことで、以下のような複数のインスタンスを立ち上げることができるようになります。

初めから Kaggle API が使える状態
初めから Docker が使える状態
初めから GitHub が使える状態
自身が指定した ssh public key が登録された状態
GCS へのアクセス権限がある状態
静的 IP アドレスが割り当てられている状態

以下、リポジトリに...]]></description><link>https://zenn.dev/takayoshi/articles/002-kaggle-iac</link><guid isPermaLink="true">https://zenn.dev/takayoshi/articles/002-kaggle-iac</guid><pubDate>Thu, 28 Nov 2024 13:26:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1iXs0-lY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Terraform%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6GoogleCloud%25E4%25B8%258A%25E3%2581%25ABKaggle%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E3%2581%2595%25E3%2581%2595%25E3%2581%25A3%25E3%2581%25A8%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takayoshi%2520Makabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h6YnFRZlFKcm94eEJGRFN2X191VUhaTi1PYm5SRWJfUEVCVktfPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takayoshi Makabe</dc:creator></item><item><title><![CDATA[「Dockerってつまり何なの！？」「VirtualBoxとの違いは？」Dockerはパソコンのアパートだ！]]></title><description><![CDATA[
 記事を書いた人
はじめまして🤗
事務職から未経験でエンジニアに転職した、のえぞうと申します。
北海道で育ち、現在も北海道に住んでいます。
未経験で辛かったこと、理解するのが難しかったこと、たくさんありました。
この記事を読んでくださる皆様のお幸せとご活躍を願い、ほんの少しでもお役に立てれば、
なまら（北海道弁で「とても」の意）嬉しいです。

 まえがき
こちらは 🔰初学者向けの易しい記事🔰です
この記事にたどり着いた方々、
少なからずDockerについてのモヤモヤ💭を抱えているのではないでしょか？🤨
また初学者に説明するためのヒントをお探しの方もいるかも知れませんね。
この記事では
...]]></description><link>https://zenn.dev/b_tm/articles/978c04a8a8d57e</link><guid isPermaLink="true">https://zenn.dev/b_tm/articles/978c04a8a8d57e</guid><pubDate>Thu, 28 Nov 2024 10:05:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Oj5gFMp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CDocker%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A4%25E3%2581%25BE%25E3%2582%258A%25E4%25BD%2595%25E3%2581%25AA%25E3%2581%25AE%25EF%25BC%2581%25EF%25BC%259F%25E3%2580%258D%25E3%2580%258CVirtualBox%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%25EF%25BC%259F%25E3%2580%258DDocker%25E3%2581%25AF%25E3%2583%2591%25E3%2582%25BD%25E3%2582%25B3%25E3%2583%25B3%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A0%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AE%25E3%2581%2588%25E3%2581%259E%25E3%2581%2586%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEBTM%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUhtc1Z1eV9BeU1GMzBGTHpxTmd2dk1mdzBKdDhnRnVJOW54MjBsSmZzYzB2TmNNVT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>のえぞう</dc:creator></item><item><title><![CDATA[AIで爆美女を描く方法😍]]></title><description><![CDATA[
 生成例




 必要なもの
https://github.com/comfyanonymous/ComfyUI
https://github.com/ltdrdata/ComfyUI-Manager
https://civitai.com/models/717933/aki-anime
https://civitai.com/models/684646/lyhanimeflux

VRAMが多いGPU(足りない場合はVRAM使用量を下げる方法調べてみてください)


 画像生成の方法
以下のworkflowをダウンロードして、ComfyUIで読み込んでください。足りないCustom...]]></description><link>https://zenn.dev/z4q/articles/516bfb43eefa70</link><guid isPermaLink="true">https://zenn.dev/z4q/articles/516bfb43eefa70</guid><pubDate>Thu, 28 Nov 2024 06:29:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HgK6f59N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25A7%25E7%2588%2586%25E7%25BE%258E%25E5%25A5%25B3%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%25E6%2596%25B9%25E6%25B3%2595%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:z4q%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkh5WXpJQXQ1WkdDMzloelpvZ01XMXlRekwwOHZUbVd0bVZFck90U2s5NkxhcUt3Zkw9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>z4q</dc:creator></item><item><title><![CDATA[VS Code+DevContainer+Dockerで最強Python開発環境(Remote編)]]></title><description><![CDATA[!
本記事は、Aidemy Advent Calendar 2024の投稿です。


 概要

 本書の内容
前回の続きで、VS CodeとDockerを利用したPython用開発環境(リモート接続編)の設定/利用方法を説明します。前回の利便性をそのままに、機械学習を目的としたGPUサーバーでの開発等が可能になります。
本書で実現する開発環境の概略図は以下です。

!
接続先(RemoteMachine)は、オンプレのGPUサーバー、クラウド上のVM、RaspberryPi などが可能で、多くのケースで利用できます。


 前提

下記のソフトウェアがインストール済みであること

Loc...]]></description><link>https://zenn.dev/aidemy/articles/vscode-env-python-ssh</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/vscode-env-python-ssh</guid><pubDate>Thu, 28 Nov 2024 03:01:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BwunPFte--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%252BDevContainer%252BDocker%25E3%2581%25A7%25E6%259C%2580%25E5%25BC%25B7Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%2528Remote%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:masa-suke%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlZWRhMzE2NjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masa-suke</dc:creator></item><item><title><![CDATA[M1/M2対応　Docker+Python開発環境構築手順]]></title><description><![CDATA[
 あいさつ
こんにちは。
最近Python勉強しようかなと密かに企んでるのですが、M1MacBookProでpyenvで開発環境を構築しようとしたけど詰まってできなかったので、もういっそ仮想環境作るかってことでそのやり方をまとめました。
正確じゃない内容もあったりすると思うから参考程度に使ってください。

 M1/M2 MacBookでDockerを使ったPython環境構築手順

 1. Dockerのインストール
手順
1.Docker Desktopをダウンロード
•公式サイトからDocker Desktopをダウンロードしインストール。
　•M1/M2 Mac対応版を選択してく...]]></description><link>https://zenn.dev/sanpi34/articles/d7ee30ce659f2c</link><guid isPermaLink="true">https://zenn.dev/sanpi34/articles/d7ee30ce659f2c</guid><pubDate>Wed, 27 Nov 2024 16:30:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IT3IlYBY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%252FM2%25E5%25AF%25BE%25E5%25BF%259C%25E3%2580%2580Docker%252BPython%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sanpi34%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTM1NzYwZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sanpi34</dc:creator></item><item><title><![CDATA[PostgreSQLをDockerで環境構築しよう！]]></title><description><![CDATA[
 概要
本記事はDockerを使ってPostgreSQLの環境構築の手順を載せてます。
パソコンにPostgreSQLをインストールしなくてもPostgreSQLを実行できます。
Web系のエンジニアで知らない人は、ほぼいないくらい大事な技術です🥺

 対象読者

PostgreSQLの環境構築にかなり苦戦している人
Dockerを知らない人
自分の環境を汚したくない人


 Dockerとは

資料通りに進めているのに、上手くインストールできない。
他の人と実行結果が異なってしまう。

こんな問題よくありますよね。
その原因の一つに互いに実行している環境が違う(環境差異) があります...]]></description><link>https://zenn.dev/urassh/articles/0ccdb9a18924f1</link><guid isPermaLink="true">https://zenn.dev/urassh/articles/0ccdb9a18924f1</guid><pubDate>Wed, 27 Nov 2024 07:55:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nCu1Rx3F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2582%2592Docker%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2582%2589%25E3%2581%25A3%25E3%2581%2597%25E3%2582%2585%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1R2ZnUWI2M0JNaXE5UzhJYnZJVV9VakxVaFZEZlhFUS1sLTdzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うらっしゅ</dc:creator></item><item><title><![CDATA[Dockerfileのリファクタリング]]></title><description><![CDATA[
 はじめに
拙作のFACE01は日本人専用顔学習モデルを備えたオープンソースの顔認証フレームワークです。
https://github.com/yKesamaru/FACE01_DEV

動画元：アベプラ
環境構築をしないでも使えるようにDockerイメージをDockerHubに用意しています。
さてバージョンが上がるたびにDockerイメージを作り直すのですが、自動化しているスクリプトやDockerfileの運用実績はあるものの非効率なコードなため、タイミング的にちょうどよいと思いリファクタリングすることになりました。
自動化スクリプト: FACE01_DEV/make_Docker...]]></description><link>https://zenn.dev/ykesamaru/articles/85f17a632fd22a</link><guid isPermaLink="true">https://zenn.dev/ykesamaru/articles/85f17a632fd22a</guid><pubDate>Wed, 27 Nov 2024 07:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cxobJwLO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dockerfile%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yKesamaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4MmM3NDMxNjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yKesamaru</dc:creator></item></channel></rss>