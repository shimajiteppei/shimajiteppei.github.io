<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 24 May 2025 09:14:33 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Spring Bootで予約機能を実装してみた｜バリデーション・例外処理]]></title><description><![CDATA[
 はじめに
現在、Spring Bootを使って「イベント予約管理システム」の開発を進めています。
今回の記事では、「予約機能」の実装についてまとめました。
予約機能では以下のようなことを行いました。

Service層・Controller層 の実装
Formによるバリデーション設定（入力チェック）
バリデーションエラーや存在しないIDなどの Exception（例外）処理
APIの POST / GET を使った登録・一覧取得の動作確認

また、今後の開発に向けて、Spring BootでのMVC構成の基本も一緒に振り返りながら、
コードの一部をピックアップして解説していきます。
...]]></description><link>https://zenn.dev/hiruma_devlog/articles/e0896cb3179275</link><guid isPermaLink="true">https://zenn.dev/hiruma_devlog/articles/e0896cb3179275</guid><pubDate>Fri, 23 May 2025 13:33:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KeLtyA0X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25A7%25E4%25BA%2588%25E7%25B4%2584%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BD%259C%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25BB%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiruma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDhjN2U2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiruma</dc:creator></item><item><title><![CDATA[Javaの例外処理：基本と体系的な整理]]></title><description><![CDATA[
 ✅ Javaの例外処理 概要まとめ

 1️⃣ レガシー方式の例外処理（昔のやり方）

条件文（if）で1つずつチェックしてエラーを処理
例外が発生しても throw を使わず、直接メッセージを出力
コードが長くなり、if文のネストで可読性が悪化
保守性が低い


 2️⃣ OOP方式の例外処理（オブジェクト指向）

条件を関数に分け、問題があれば throwで例外を投げる

呼び出し元では try-catch でまとめて処理
可読性・保守性・再利用性が向上



 ✅ Checked例外 vs Unchecked例外



分類
Checked Exception
Unchecke...]]></description><link>https://zenn.dev/kmj13/articles/java-exception-summary-ja</link><guid isPermaLink="true">https://zenn.dev/kmj13/articles/java-exception-summary-ja</guid><pubDate>Fri, 23 May 2025 12:50:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q6iez77T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E4%25BD%2593%25E7%25B3%25BB%25E7%259A%2584%25E3%2581%25AA%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmj99%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno0azlnb19fcW1fbjVxdkFCYkJNU2U5X2VfYWZkTGEtbHVNZDFXR2pWV05CZTBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmj99</dc:creator></item><item><title><![CDATA[Spring Data JPAで監査情報を自動管理する]]></title><description><![CDATA[
 概要
エンティティクラスにはデータの作成・修正することを管理するためのフィールドを用意することが多いです。
一般的によく使われるフィールドとしては、以下のようなものがあります：

作成者
作成日時
更新者
更新日時

これらのフィールドは、エンティティを新規作成または更新するたびに、毎回値を設定する必要があり、手間がかかります。

 エンティティ例)

Member.class

@Entity
public class Member {

    @Column
    private LocalDateTime createdAt;
    @Column
    private...]]></description><link>https://zenn.dev/heimish27/articles/0338784d7ca4ed</link><guid isPermaLink="true">https://zenn.dev/heimish27/articles/0338784d7ca4ed</guid><pubDate>Fri, 23 May 2025 06:52:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--45BAxVh_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Data%2520JPA%25E3%2581%25A7%25E7%259B%25A3%25E6%259F%25BB%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:heimish27%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZDc5ODI0ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>heimish27</dc:creator></item><item><title><![CDATA[(java) staticのポイントまとめ]]></title><description><![CDATA[staticはいつも混乱するけど、今度こそ理解したい！
⭐️static は クラスに属するメンバー（変数・メソッドなど） を定義するキーワードです。
つまり、インスタンスを生成しなくても使えるというのが最大の特徴です。

 staticのポイントまとめ


staticはクラスに属しており、インスタンス化せずに使用できる。

static変数（クラス変数）は、すべてのインスタンスで共有される。

staticメソッドは、インスタンス化せずにクラス名から呼び出すことができる。
　→ そのため、インスタンス変数やインスタンスメソッドを直接使うことはできない。

staticブロックは、クラ...]]></description><link>https://zenn.dev/hyoni/articles/585a2136506dcc</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/585a2136506dcc</guid><pubDate>Fri, 23 May 2025 06:29:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TcFITcYQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528java%2529%2520static%25E3%2581%25AE%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[Javaの「オーバーライド」をざっくりまとめてみた[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者Wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。
間違い等あれば、指摘いただけると助かります。

 対象読者

Javaを勉強中の方
Java Silver試験を勉強中の方
Javaのオーバーライドをざっくり知りたい方


 目次
1. オーバーライドとは
2. Overrideアノテーション
3. super
4. ...]]></description><link>https://zenn.dev/wakinoza/articles/5b5e3550b2f77d</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/5b5e3550b2f77d</guid><pubDate>Fri, 23 May 2025 03:52:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hWFiiayt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2580%258C%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2580%258D%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[Spring BootでのEntity + Repository実装＆JPAによるDB操作まとめ]]></title><description><![CDATA[
 はじめに
現在、Spring Bootを使って「イベント予約管理システム」を開発中です。
このアプリは、イベントの一覧を表示したり、予約を行ったりできる、シンプルかつ実用的なWebアプリを目指しています。
今回は、いよいよ データベースと連携する処理 に取り組みました！
具体的には、以下のような流れで実装を進めています：

Entity（エンティティ）の作成
Repository（リポジトリ）の実装
テストデータの登録（CommandLineRunner）
ブラウザでデータの確認（H2コンソール）

これまでの記事も併せてご覧ください

学習計画を立てた話
Javaの基礎とオブジェク...]]></description><link>https://zenn.dev/hiruma_devlog/articles/d67afc31fd045c</link><guid isPermaLink="true">https://zenn.dev/hiruma_devlog/articles/d67afc31fd045c</guid><pubDate>Wed, 21 May 2025 00:52:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FB-Hvd9j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25E3%2581%25A7%25E3%2581%25AEEntity%2520%252B%2520Repository%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%2586JPA%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BDB%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiruma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDhjN2U2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiruma</dc:creator></item><item><title><![CDATA[#2.5 Javaで作る理由って？コメントから考えた選択の話]]></title><description><![CDATA[
 #2.5 なぜJava？コメントをきっかけに立ち止まって考える
こんなコメントいただきました👇

このアプリって、フロントだけで実装できると思います。Java（Spring Boot）使う理由はあるのでしょうか。

正直、嫌な質問ですね。（笑）でも、ちゃんと考えないといけない話です。


 💬 コメントに対する返答
確かに「インターバルタイマー」は、タイマー機能とUIがメインのアプリで、
サーバー側の処理は不要です。HTML/CSS/JavaScriptだけで完結できます。
その通りです！
実際、必要ない処理を無駄に書かないで必要十分で適切に書くことの方が効率的で正しいと思っています...]]></description><link>https://zenn.dev/magma_program/articles/1463e8a7298190</link><guid isPermaLink="true">https://zenn.dev/magma_program/articles/1463e8a7298190</guid><pubDate>Wed, 21 May 2025 00:37:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UiI0cHTy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25232.5%2520Java%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A3%25E3%2581%25A6%25EF%25BC%259F%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258B%25E3%2582%2589%25E8%2580%2583%25E3%2581%2588%25E3%2581%259F%25E9%2581%25B8%25E6%258A%259E%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mAgmA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlE1LTgyWVdfSW5kQURGZFBlNi1nOWxVWGVNT0xzTm1nOHVWemwxMUQyLTFiM3Q2TT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mAgmA</dc:creator></item><item><title><![CDATA[javaのstaticとはなんだろう。。。]]></title><description><![CDATA[最近、javaの初歩的な勉強をしていてstaticとはなんだろう、、、と素朴に思ったので調べました。
結論から言うとstaticとはクラス共通の変数、メソッド、クラス（ネスト化されたもの）を作るための予約語です。
対比はおそらくインスタンス化された変数、メソッドになります。
最初に簡単にクラスとインスタンスを振り返ると、
クラスとは・・・設計図
インスタンスとは・・・設計図を元に作られたもの
と考えられます。
だから、インスタンスで同じクラスから2つのインスタンスが作られた時、同じ変数でも違うものとして扱われるんですね。
そのうえでstaticを見てみましょう。
staticはクラスから...]]></description><link>https://zenn.dev/octstein/articles/f14df675a54fda</link><guid isPermaLink="true">https://zenn.dev/octstein/articles/f14df675a54fda</guid><pubDate>Mon, 19 May 2025 12:50:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--grTKCxW2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:java%25E3%2581%25AEstatic%25E3%2581%25A8%25E3%2581%25AF%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25E3%2582%258D%25E3%2581%2586%25E3%2580%2582%25E3%2580%2582%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:october%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmFWUncxdUc5OHZXaUx6c1Z6cmRMNnRYMml2dGJEVVNNNnJvTGQ0QXRtVDFUVWZtWT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>october</dc:creator></item><item><title><![CDATA[Javaの「継承」をざっくりまとめてみた[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者Wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。
間違い等あれば、指摘いただけると助かります。

 対象読者

Javaを勉強中の方
Java Silver試験を勉強中の方
Javaの継承の基本事項（オーバーライド以外の項目）についてざっくり知りたい方


 目次
1.共通部分をまとめる事の重要性
2.継承とは
3.メ...]]></description><link>https://zenn.dev/wakinoza/articles/88174bad1f7c31</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/88174bad1f7c31</guid><pubDate>Mon, 19 May 2025 07:13:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OvckboyL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2580%258C%25E7%25B6%2599%25E6%2589%25BF%25E3%2580%258D%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[[LikeLion Backend] Week 3｜Spring Bootで1:NリレーションのCRUD APIを実装してみた]]></title><description><![CDATA[
 🏁 はじめに
LikeLionバックエンドコース第3週の課題として、
「勉強セッション（Session）とGPTフィードバック（Feedback）」のドメインを設計し、1:Nのリレーション関係を持つCRUD APIをSpring Bootで実装してみました。
今回の課題では、ドメイン設計・JPAによるリレーション構築・RESTful APIの設計といったバックエンド開発の基本的なスキルを実践的に学びました。


 🧩 使用技術スタック

Java 17
Spring Boot 3.x
Spring Data JPA
MySQL
Lombok
Postman



 🧱 ドメイン設計
...]]></description><link>https://zenn.dev/hyeon_marina247/articles/351ddd1766aeb1</link><guid isPermaLink="true">https://zenn.dev/hyeon_marina247/articles/351ddd1766aeb1</guid><pubDate>Mon, 19 May 2025 04:18:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---UWDtC7x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLikeLion%2520Backend%255D%2520Week%25203%25EF%25BD%259CSpring%2520Boot%25E3%2581%25A71%253AN%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AECRUD%2520API%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hyeon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNzUyOTRmNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hyeon</dc:creator></item><item><title><![CDATA[NetfixはJavaで出来ている  ~2025年のNetflixのバックエンド事情~]]></title><description><![CDATA[
 情報源・引用元
この辺りになります
https://www.youtube.com/watch?v=XpunFFS-n8I&amp;t=1451s
https://www.infoq.com/presentations/netflix-java/

 前提
NetflixはJavaで出来ている
GO、Pythonも使われているが一部でありJavaがあくまでメイン
大きく2つのシステムで構成される

 Netflix Streaming

いわゆる私たち一般ユーザーが見るNetflixのことである
[特徴]
・高RPS（RequestPerSecond）
想像通りとは思うが、トラフィッ...]]></description><link>https://zenn.dev/oimo23/articles/42ded4d95af9c3</link><guid isPermaLink="true">https://zenn.dev/oimo23/articles/42ded4d95af9c3</guid><pubDate>Sun, 18 May 2025 23:36:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rw1Ciepi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Netfix%25E3%2581%25AFJava%25E3%2581%25A7%25E5%2587%25BA%25E6%259D%25A5%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2520%2520%7E2025%25E5%25B9%25B4%25E3%2581%25AENetflix%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E4%25BA%258B%25E6%2583%2585%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:oimo23%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMTY1N2Q5M2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oimo23</dc:creator></item><item><title><![CDATA[Java × Spring Boot 開発のためのローカル環境構築ガイド]]></title><description><![CDATA[JavaでSpring Bootを使った開発を始めるために、ローカル環境を構築しました。
この記事では、その手順をわかりやすくまとめています。


 やったこと

IntelliJ IDEA Community のインストール
JDK（Java開発キット）のインストール
Spring Initializr（https://start.spring.io/）を使ったプロジェクトの作成

IntelliJ IDEAで使うプラグインの追加
GitHubとの連携設定



 IntelliJ IDEA Community とは？
IntelliJ IDEA は、JetBrains社が提供するJa...]]></description><link>https://zenn.dev/hiruma_devlog/articles/2394a1d27c62d1</link><guid isPermaLink="true">https://zenn.dev/hiruma_devlog/articles/2394a1d27c62d1</guid><pubDate>Sun, 18 May 2025 13:11:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--689DJxh2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25C3%2597%2520Spring%2520Boot%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiruma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDhjN2U2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiruma</dc:creator></item><item><title><![CDATA[Javaメソッドが意味不明だったので、ポケモンとレジで覚えたら最強だった【マイクラModにも役立つ】]]></title><description><![CDATA[
 🔍 逆引きメソッド目次【Java × ポケモン × コンビニ】
🔹 第1章 Javaのメソッドを学ぼう！〜ポケモンとコンビニで基礎理解〜
🔹 1.1 メソッドとは？
🔹 1.2 ポケモンの例：こうげきメソッド
🔹 1.3 コンビニの例：レジでお礼を言う
🔹 第2章 戻り値がvoid（なし）のメソッド活用法
🔹 2.1 voidメソッドとは？
🔹 2.2 ポケモンの例：メッセージだけ表示するメソッド
🔹 2.3 コンビニの例：レシートメッセージを表示するだけ
🔹 第3章 引数と戻り値ありのメソッドを学ぼう！
🔹 3.1 ポケモンの例：ダメージ計算メソッド
🔹 3.2 コンビニの例：おつ...]]></description><link>https://zenn.dev/nakamotojp/articles/80a55457f8f260</link><guid isPermaLink="true">https://zenn.dev/nakamotojp/articles/80a55457f8f260</guid><pubDate>Sun, 18 May 2025 10:18:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vNsLe54N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%258C%25E6%2584%258F%25E5%2591%25B3%25E4%25B8%258D%25E6%2598%258E%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E3%2583%259D%25E3%2582%25B1%25E3%2583%25A2%25E3%2583%25B3%25E3%2581%25A8%25E3%2583%25AC%25E3%2582%25B8%25E3%2581%25A7%25E8%25A6%259A%25E3%2581%2588%25E3%2581%259F%25E3%2582%2589%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2590%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25A9Mod%25E3%2581%25AB%25E3%2582%2582%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MzcxNGVkNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamoto</dc:creator></item><item><title><![CDATA[Java初心者の1週間：基礎 & オブジェクト指向を学んでみた感想]]></title><description><![CDATA[
 Java学習記録：第1週まとめ（Java基礎 &amp; オブジェクト指向）

 はじめに
こちらの記事で、今回のJava学習の背景や全体スケジュールをまとめています
Java未経験からWebアプリを作る学習ロードマップ（Zenn）

 学習期間
2025年5月4日〜5月17日（全14日間）
当初の予定より1週間ほどオーバーしてしまいましたが、ここから巻き返していきます
焦らず、でも確実に進めていきたいです。

 第1週の学習目的

Java未経験からでも業務で言われたことを理解できるレベルになる
最終ゴールである「イベント予約・管理システム」の開発に向けて、基礎体力をつける

Ja...]]></description><link>https://zenn.dev/hiruma_devlog/articles/c5ad0c7653bd74</link><guid isPermaLink="true">https://zenn.dev/hiruma_devlog/articles/c5ad0c7653bd74</guid><pubDate>Sat, 17 May 2025 08:19:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QBLtGhdf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE1%25E9%2580%25B1%25E9%2596%2593%25EF%25BC%259A%25E5%259F%25BA%25E7%25A4%258E%2520%2526%2520%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2582%2592%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiruma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZDhjN2U2NjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiruma</dc:creator></item><item><title><![CDATA[newで魂が入る！？Javaのインスタンス化をキャラでイメージ！]]></title><description><![CDATA[
 はじめに：
Java初心者として学んだことを、自分なりにかみくだいてまとめた初心者向けの記事です。まだまだ試行錯誤中ですが、読みやすさを目指してがんばっています！

 登場人物と設定
基本的な設定です。今回の話に登場していないキャラクターも含まれますが、コメントアウトされているキャラクターたちも和気あいあいと過ごしている設定だと思ってください。
登場人物と設定：ここをクリック
【登場人物】
Mainクラス (Main.java)

🤗mainさん ：メソッド階級 / かなり特別な存在

何かあったら、自分たちが何をすればいいかを教えてくれるとみんなから信頼されている。全てのクラスの中...]]></description><link>https://zenn.dev/n_su2/articles/2025-05-17-character_java2</link><guid isPermaLink="true">https://zenn.dev/n_su2/articles/2025-05-17-character_java2</guid><pubDate>Sat, 17 May 2025 04:20:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sPh6L9Op--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:new%25E3%2581%25A7%25E9%25AD%2582%25E3%2581%258C%25E5%2585%25A5%25E3%2582%258B%25EF%25BC%2581%25EF%25BC%259FJava%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E5%258C%2596%25E3%2582%2592%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25A9%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Norikf%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0ODRhZGEyMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Norikf</dc:creator></item><item><title><![CDATA[MATSim入門：大規模交通シミュレーションを可能にするオープンソースの交通モデリングツール]]></title><description><![CDATA[
 1. はじめに
皆さんは「交通シミュレーション」と聞いて、どんなものを想像しますか？

渋滞の様子を再現するアニメーション？
駅やバス停の混雑状況を予測するシステム？
それとも未来のスマートシティに向けた交通の最適化？

実は、これらすべてを支える技術のひとつに、MATSim（Multi-Agent Transport Simulation Toolkit） というオープンソースのツールがあります。
筆者も独学で学び始めて間もないですが、本記事では「MATSimとは何か」を簡単にご紹介します。
MATsim公式サイト：https://matsim.org/


 2. MATSimと...]]></description><link>https://zenn.dev/sknj/articles/844d7307828e58</link><guid isPermaLink="true">https://zenn.dev/sknj/articles/844d7307828e58</guid><pubDate>Fri, 16 May 2025 12:50:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zHDT0Jdf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MATSim%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E4%25BA%25A4%25E9%2580%259A%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E4%25BA%25A4%25E9%2580%259A%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:knj%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1ZjAwMTRiMTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knj</dc:creator></item><item><title><![CDATA[なぜ複数のプログラミング言語を使い分けるのか？～C、C++、Java、Python比較で見えるそれぞれの役割～]]></title><description><![CDATA[
 なぜ複数のプログラミング言語を使い分けるのか？～C、C++、Java、Python比較で見えるそれぞれの役割～
AIによる回答がわかりやすかったので掲載しておきます。CSの基礎で習うのかな？
ソフトウェア開発の世界には、数多くのプログラミング言語が存在します。なぜ一つの万能な言語で全てを開発するのではなく、プロジェクトや目的によって異なる言語が使われるのでしょうか？
それは、それぞれの言語が持つ「得意なこと」「苦手なこと」が異なり、「適材適所」で使い分けることで、より効率的で質の高いソフトウェア開発が可能になるからです。
この記事では、代表的な言語であるC言語、C++、Java、Py...]]></description><link>https://zenn.dev/wyuma/articles/ddb90b50a9ff19</link><guid isPermaLink="true">https://zenn.dev/wyuma/articles/ddb90b50a9ff19</guid><pubDate>Fri, 16 May 2025 12:05:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HAfEROWR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%25EF%25BD%259EC%25E3%2580%2581C%252B%252B%25E3%2580%2581Java%25E3%2580%2581Python%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%25A7%25E8%25A6%258B%25E3%2581%2588%25E3%2582%258B%25E3%2581%259D%25E3%2582%258C%25E3%2581%259E%25E3%2582%258C%25E3%2581%25AE%25E5%25BD%25B9%25E5%2589%25B2%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wYuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkZjJmOWZjMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wYuma</dc:creator></item><item><title><![CDATA[[Java/Spring Boot]Thymeleaf]]></title><description><![CDATA[
 Thymeleafとは
ThymeleafはテンプレートにJavaのデータ（コントローラーから渡された変数）を反映させて、内容が動的に変化するHTMLページを生成するために使用されます。

 Thymeleaf属性



属性
役割
例




th:text
文字列を表示
&lt;p th:text="${name}"&gt;&lt;/p&gt;


th:if
条件がtrueなら表示
&lt;div th:if="${flag}"&gt;表示&lt;/div&gt;


th:unless
条件がfalseなら表示
&lt;div th:unless="${flag}"&gt;非...]]></description><link>https://zenn.dev/kasai/articles/852551e7d42085</link><guid isPermaLink="true">https://zenn.dev/kasai/articles/852551e7d42085</guid><pubDate>Fri, 16 May 2025 08:36:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DXAd23It--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%255BJava%252FSpring%2520Boot%255DThymeleaf%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasai%2520Ukyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlYjgwMzQ4N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasai Ukyo</dc:creator></item><item><title><![CDATA[【開発日記#2】企画書を作ってみた｜インターバルタイマーの設計メモ]]></title><description><![CDATA[こんにちは、mAgmAです！
前回の記事（[開発日記#1]
(https://zenn.dev/magma_program/articles/db3242a6cde0d8)）
では、インターバルタイマーを作る動機や方向性について書きました。
今回はその続きとして、簡単な企画書・設計メモをまとめてみました！


 📌 アプリの概要
| アプリ名 | Web Interval Timer（仮） |
| 概要 | 作業時間・休憩時間を自由に設定できる、シンプルなWebタイマー |
| 利用者 | 集中して作業したい人、トレーニングに活用したい人 |
| 技術 | Java（Spring Boo...]]></description><link>https://zenn.dev/magma_program/articles/defda5a65240a8</link><guid isPermaLink="true">https://zenn.dev/magma_program/articles/defda5a65240a8</guid><pubDate>Fri, 16 May 2025 04:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0XGb7aoq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E9%2596%258B%25E7%2599%25BA%25E6%2597%25A5%25E8%25A8%2598%25232%25E3%2580%2591%25E4%25BC%2581%25E7%2594%25BB%25E6%259B%25B8%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BD%259C%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mAgmA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlE1LTgyWVdfSW5kQURGZFBlNi1nOWxVWGVNT0xzTm1nOHVWemwxMUQyLTFiM3Q2TT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mAgmA</dc:creator></item><item><title><![CDATA[Javaの「可変長引数」をざっくりまとめてみた[Java初心者]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者Wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。
間違い等あれば、指摘いただけると助かります。

 対象読者

Javaを勉強中の方
Java Silver試験を勉強中の方
Javaの「可変長引数」についてざっくり知りたい方


 目次
1. 可変長引数とは
2. 可変長引数のルール
3. 可変長引数のオーバーロード
...]]></description><link>https://zenn.dev/wakinoza/articles/7381559b628c83</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/7381559b628c83</guid><pubDate>Fri, 16 May 2025 04:24:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EA6kMc4_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2580%258C%25E5%258F%25AF%25E5%25A4%2589%25E9%2595%25B7%25E5%25BC%2595%25E6%2595%25B0%25E3%2580%258D%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%255BJava%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item></channel></rss>