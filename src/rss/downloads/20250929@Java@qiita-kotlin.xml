<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2025-09-29T16:37:59+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2086384</id>
    <published>2025-09-29T16:37:59+09:00</published>
    <updated>2025-09-29T16:38:31+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nozomi2025/items/edac8442de45a28fbe43"/>
    <url>https://qiita.com/nozomi2025/items/edac8442de45a28fbe43</url>
    <title>【Clean Architecture】SRP: The Single Responsibility Principle（単一責任の原則）</title>
    <content type="text">はじめに
「きれいな設計」を語るときに必ず出てくるのが SOLID原則。その中で最も基本的かつ重要なのが SRP（単一責任の原則） です。
この記事では、定義・背景・具体例・実務での適用方法を整理します。

1. 定義
単一責任の原則（SRP） とは：

クラスやモジュ...</content>
    <author>
      <name>nozomi2025</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2086217</id>
    <published>2025-09-29T16:33:37+09:00</published>
    <updated>2025-09-29T16:33:38+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tomori-ry/items/19e1be317371d7adb10b"/>
    <url>https://qiita.com/tomori-ry/items/19e1be317371d7adb10b</url>
    <title>【Android】AudioRecordで録音機能を実装する（PCM→WAV変換まで）</title>
    <content type="text">はじめに
前回の記事では、Android標準APIのMediaRecorderを使って手軽に録音する方法を紹介しました。MediaRecorderは録音からエンコード、ファイル保存までしてくれますが、生の音声データを扱うことはできません。
そこで今回は、同じく標準APIで...</content>
    <author>
      <name>tomori-ry</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2086314</id>
    <published>2025-09-29T14:25:08+09:00</published>
    <updated>2025-09-29T14:25:08+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/void_takazu/items/6d369ced970d3e4d138a"/>
    <url>https://qiita.com/void_takazu/items/6d369ced970d3e4d138a</url>
    <title>Roomでメモアプリを永続化する - 実務レベルの詳細設計書</title>
    <content type="text">1. はじめに

1.1. 目的
本ドキュメントは、先日作成した基本設計書に基づき、シンプルメモアプリにRoomデータベースを用いたデータ永続化機能を実装するための詳細設計を定義する。
本設計書のゴールは、開発者が実装作業に着手する際に、迷いや曖昧さを一切排除し、コードの...</content>
    <author>
      <name>void_takazu</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2086283</id>
    <published>2025-09-29T13:05:04+09:00</published>
    <updated>2025-09-29T13:05:04+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Ringoame196/items/d1f06cec766c54eedb7f"/>
    <url>https://qiita.com/Ringoame196/items/d1f06cec766c54eedb7f</url>
    <title>Kotlinの抽象クラス・openクラス・インターフェースをMinecraftプラグイン開発で学ぶ（自分用メモ）</title>
    <content type="text">はじめに
Kotlin で共通処理をまとめる方法について、
「abstract class」「open class」「interface」それぞれの使いどころをMinecraftを例に出し自分なりに整理し、メモを兼ねて記事にしました。
同じような悩みを持つ方の参考になれば...</content>
    <author>
      <name>Ringoame196</name>
    </author>
  </entry>
</feed>
