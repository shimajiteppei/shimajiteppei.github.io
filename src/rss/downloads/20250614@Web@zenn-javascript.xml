<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 14 Jun 2025 05:32:59 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[HTML5製のwebアプリをTauri 2.0でexe化する]]></title><description><![CDATA[
 はじめに
HTML＋CSS＋JavaScriptで作ったwebアプリをデスクトップアプリ化したい。Electronだとnode.jsに加えてChromiumによるレンダリングはスペック盛りすぎだと思う。exeサイズが大きくなるのも好ましくない。
今回は、HTML5アプリを、Tauri 2.0でexe化して実行できるようにします。


 1. HTML5プログラムを用意する
HTML5プログラムを作成し、1つのフォルダにまとめてフォルダ内のindex.htmlからブラウザで起動できるようにして、動作確認までしておきます。
例えば以下のようなもの。

ソースコードは以下から取得
http...]]></description><link>https://zenn.dev/nfukuoka/articles/qiita-20250613-07a341af9e9a4407d0af</link><guid isPermaLink="true">https://zenn.dev/nfukuoka/articles/qiita-20250613-07a341af9e9a4407d0af</guid><pubDate>Sat, 14 Jun 2025 05:15:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g0IAgqjH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML5%25E8%25A3%25BD%25E3%2581%25AEweb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Tauri%25202.0%25E3%2581%25A7exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nfukuoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZmNmOTYyNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nfukuoka</dc:creator></item><item><title><![CDATA[AWSのキャンペーンに乗ってゲームを作ってみる]]></title><description><![CDATA[前回の記事はゲームの開発環境を作ったのでした。
https://zenn.dev/euptilurus/articles/0966723ec46be2
今度こそ、Amazon Qに聞きながらゲームを作ってみます。
先日、偶然見つけたキャンペーンの記事はこれです。
AWS公式ブログの記事です。ゲームを作るのは生まれて初めてです。AWSのTシャツも欲しいです。
https://aws.amazon.com/jp/blogs/news/build-games-with-amazon-q-cli-and-score-a-t-shirt/
WSLのUbuntuから再びAmazon Qを起動します。...]]></description><link>https://zenn.dev/euptilurus/articles/b10e646f243ebf</link><guid isPermaLink="true">https://zenn.dev/euptilurus/articles/b10e646f243ebf</guid><pubDate>Fri, 13 Jun 2025 17:27:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M9skGwo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%259A%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AB%25E4%25B9%2597%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25AE%25E5%258D%25B5%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5NjUwZmNkMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>デザイナーの卵の勉強ブログ</dc:creator></item><item><title><![CDATA[ゲームを作る開発環境を整える]]></title><description><![CDATA[前回の記事は以下です。
Amazon Q Developerに助けてもらえる環境ができました。
https://zenn.dev/euptilurus/articles/c6b10e62817bf2
そういえば、言語とパッケージの環境を忘れていました。
Pythonでゲームを作る場合と、Javascriptでゲームを作る場合、どんなものが必要でしょうか。Amazon Qに聞いてみます。
&gt; あなたはウェブアプリの開発者であり、ゲームの制作が得意です。ブラウザだけで遊べるゲームを作ります。動作環境はGoogle Chromeで、スマートフォンではタップとフリック操作、PCではマウスの...]]></description><link>https://zenn.dev/euptilurus/articles/0966723ec46be2</link><guid isPermaLink="true">https://zenn.dev/euptilurus/articles/0966723ec46be2</guid><pubDate>Fri, 13 Jun 2025 15:43:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ebQgKxjq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25AE%25E5%258D%25B5%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5NjUwZmNkMzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>デザイナーの卵の勉強ブログ</dc:creator></item><item><title><![CDATA[JavaScriptとクッキーでユーザーのタイムゾーンを検出・記憶するスマートWeb時計の作り方]]></title><description><![CDATA[📝 はじめに
このチュートリアルでは、HTML、CSS、JavaScriptを使用して、ユーザーのローカルタイムゾーンを自動的に検出し、ブラウザのクッキーに保存するスマートな時計を作成します。これは、ユーザーの地域に応じたパーソナライズされたツールやダッシュボードを作成する際に非常に役立ちます。

このガイドの終わりには、以下の機能を備えた完全なWeb時計を作成できます：


Intl.DateTimeFormat()を使用してユーザーのタイムゾーンを検出
タイムゾーンをクッキーに保存
リアルタイムの時刻を表示し、毎秒更新
次回訪問時にタイムゾーンを記憶

この手法は、計算機、ダッシュボ...]]></description><link>https://zenn.dev/hinatatachibana/articles/1bc8154fbfb677</link><guid isPermaLink="true">https://zenn.dev/hinatatachibana/articles/1bc8154fbfb677</guid><pubDate>Fri, 13 Jun 2025 15:22:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F32Pje4m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25BE%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E6%25A4%259C%25E5%2587%25BA%25E3%2583%25BB%25E8%25A8%2598%25E6%2586%25B6%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588Web%25E6%2599%2582%25E8%25A8%2588%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hinatatachibana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUJvMEJIMzFZekZyTnNpVGZYUFptSm5TVm5WVlhiRlpwN2pvdnA1S2RUOEttNFFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hinatatachibana</dc:creator></item><item><title><![CDATA[Astro新時代! 再ビルド不要のLive Content Collections]]></title><description><![CDATA[
 はじめに
!
Live Content Collectionsとは？
従来のビルド時にデータを取得する方式とは異なり、ユーザーがページにアクセスしたとき(ランタイム)に、APIやデータベースから直接データを取得するための新しい仕組み。


 Live Content Collectionsとは？
これまでAstroのコンテンツCollectionsは、Markdownやjsonをもとにビルド時に静的なHTMLを生成するのが基本で、これはAstroの代名詞でもあるパフォーマンスに優れる一方、頻繁に更新されるデータを扱うには、都度々々サイトを再ビルドする必要があった。
しかし、Live ...]]></description><link>https://zenn.dev/katsuyuki/articles/69081373cf9f0b</link><guid isPermaLink="true">https://zenn.dev/katsuyuki/articles/69081373cf9f0b</guid><pubDate>Fri, 13 Jun 2025 14:46:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Duz8KLAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E6%2596%25B0%25E6%2599%2582%25E4%25BB%25A3%2521%2520%25E5%2586%258D%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AELive%2520Content%2520Collections%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LaPh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiYzcxMjA0NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>LaPh</dc:creator></item><item><title><![CDATA[【Laravel】静的ファイル管理方法]]></title><description><![CDATA[
 はじめに
Webアプリケーション開発を進めていて、CSSやJavaScriptといった静的ファイルの置き場所について迷ったことはありませんか？
public/ディレクトリに置いてよいファイルやresources/ディレクトリに置くべきファイルなど、安全性や保守性の観点から正しい構成を知ることはとても大切です。この記事では、Laravelにおける静的ファイルの配置に関する方針を紹介します。

 対象者

CSSやJSファイルをpublic/に直接置いてしまっているエンジニア
チーム開発をしている方
ViteやLaravel Mixのビルドを見直したい方


 Laravel ディレクト...]]></description><link>https://zenn.dev/ykbone/articles/b1fcce41c176cc</link><guid isPermaLink="true">https://zenn.dev/ykbone/articles/b1fcce41c176cc</guid><pubDate>Fri, 13 Jun 2025 10:56:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g1wtY2nc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel%25E3%2580%2591%25E9%259D%2599%25E7%259A%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E7%25AE%25A1%25E7%2590%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykbone%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyYmU2ODQzYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykbone</dc:creator></item><item><title><![CDATA[Web制作に最適！Astro × Nano Storesで学ぶ状態管理の基本]]></title><description><![CDATA[
 この記事を書こうと思った理由

状態管理について理解が浅く、自分自身の学習のために Nano Stores を使ってみたかったため。
Astro を使っている同じような立場の、コーダー・エンジニアの参考になればと思ったため。
普段の開発で React などのフレームワークを使わず、JS/TS 単体で実装している人向けに情報を共有したかったため。


 ゴール

Nano Stores を使って、状態管理を体験してみる
状態管理の基本的な考え方を少しでも理解する


 対象者

「状態管理って何？」というレベルの方
JavaScript/TypeScript 単体で Web 制作をして...]]></description><link>https://zenn.dev/d2cid_inc/articles/8835c3a527dc16</link><guid isPermaLink="true">https://zenn.dev/d2cid_inc/articles/8835c3a527dc16</guid><pubDate>Fri, 13 Jun 2025 07:55:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8JdnAlcl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%25AB%25E6%259C%2580%25E9%2581%25A9%25EF%25BC%2581Astro%2520%25C3%2597%2520Nano%2520Stores%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:taku%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjNDM3ZGE5YjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BED2C%2520ID%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnlhZ3d2T2FJRExLV2pYWVVkLXNpUDVzM1c0TXRHQ1pzbUVJZWpKTDVsMHMxYk9CUT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taku</dc:creator></item><item><title><![CDATA[JavaScriptだけでやってきた私が今からReactを学ぶ理由]]></title><description><![CDATA[
 はじめに
これまで関わってきた制作現場では、ずっと素のJavaScriptやjQueryが中心。
しかも複数の制作会社が関わっていたため、自分だけReactやNext.jsに乗り換えるわけにもいかず、技術の波に乗れずにいました。
でも、技術書やSNSの情報を見ていると、「このままじゃマズいかも」という焦りも。
そんな思いから、いまさらですがReactを勉強してみました。
この記事では、初心者目線でReactの基本を整理してみます。
同じような立場の方のヒントになればうれしいです。

 なぜReactなのか？
Reactを学んで気づいたのは、単なる流行りじゃなく、根本的な開発の考え方そ...]]></description><link>https://zenn.dev/akky709/articles/1ea43e213c0818</link><guid isPermaLink="true">https://zenn.dev/akky709/articles/1ea43e213c0818</guid><pubDate>Fri, 13 Jun 2025 06:40:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nNiJg-QV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258D%25E3%2581%259F%25E7%25A7%2581%25E3%2581%258C%25E4%25BB%258A%25E3%2581%258B%25E3%2582%2589React%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akky%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akky</dc:creator></item><item><title><![CDATA[CODE BATTLER を支える技術]]></title><description><![CDATA[https://code-battler.heartrails.com/
本記事では、Javascript コードでバトルする戦略対戦ゲーム CODE BATTLER の実装に使用した技術をご紹介していきます。似たような仕組みのゲームを自分でも作ってみたい！という方はご参考ください。
CODE BATTLER の紹介、プレイヤー向けの記事はこちらをどうぞ。
https://techblog.heartrails.com/ja/articles/code-battler

 ユーザの Javascript を安全に実行する
CODE BATTLER では、ユーザー入力の Javascrip...]]></description><link>https://zenn.dev/heartrails/articles/6915c0c2c2cb3d</link><guid isPermaLink="true">https://zenn.dev/heartrails/articles/6915c0c2c2cb3d</guid><pubDate>Fri, 13 Jun 2025 02:01:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3djo5G5G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CODE%2520BATTLER%2520%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Ohkubo%2520KOHEI%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0ODIyMDRiZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258F%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25BA%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hveGZBMXppa0NMRUgtWnR1ZFBnWFA3b2o3OFNjc0FMamFJVktXM0E9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ohkubo KOHEI</dc:creator></item><item><title><![CDATA[日付や時間の計算に役立つユーティリティ関数をまとめてみた]]></title><description><![CDATA[日報やCSV出力、Excel貼り付けなど、日付や時間を扱う際に役立つユーティリティ関数をTypeScriptで整理してみました。
数字に弱いので、必要な時に参考しようと思います😀
主な言語
TypeScript


 🕒 1. parseTimeToDecimal(timeStr: string): number

"2:30" → 2.5 に変換する関数です。
作業時間の合計や平均を出す時にとても便利です。

例：分 ÷ 60 = 小数点（例：30 ÷ 60 = 0.5 → 2 + 0.5 = 2.5）

export function parseTimeToDecimal(timeS...]]></description><link>https://zenn.dev/hyoni/articles/d2931c3174dde4</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/d2931c3174dde4</guid><pubDate>Fri, 13 Jun 2025 01:53:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pd536S2x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2584%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[React	コンポーネント分割の際に出たエラーについて]]></title><description><![CDATA[Udemyでの学習にて以下のようなエラーがコンポーネントを分割して読み込み際に出たのでその対策を記録しておきます。

 発生したエラー
Failed to parse source for import analysis because the content contains invalid JS syntax. If you are using JSX, make sure to name the file with the .jsx or .tsx extension.
翻訳すると「無効なJS構文が見つかり。インポート分析に失敗しました。jsxを使用している場合は、ファイル名に.j...]]></description><link>https://zenn.dev/hosoya_ren/articles/7c3a00988a288a</link><guid isPermaLink="true">https://zenn.dev/hosoya_ren/articles/7c3a00988a288a</guid><pubDate>Fri, 13 Jun 2025 00:30:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EjTjz2No--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2509%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E5%2588%2586%25E5%2589%25B2%25E3%2581%25AE%25E9%259A%259B%25E3%2581%25AB%25E5%2587%25BA%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hosoya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0JfWGxNdE5wRVlwTm5GUENGWV9DZ0RPYjZ4d3k3TnhtNWRpcDVTbHNIWGtyWllYND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hosoya</dc:creator></item><item><title><![CDATA[【応用編】基本の型から進化したjQueryの“使える”テンプレート]]></title><description><![CDATA[
 はじめに
jQueryでちょっとしたUIを作ろうとしたとき、

気づけばコードがぐちゃぐちゃ
「これ何の処理だっけ？」と自分で書いたコードに戸惑う

そんな経験、ありませんか？
私も実務で何度もそういう壁にぶつかりながら、試行錯誤を繰り返してきました。
そんな中でようやく「これなら使い回せる」と思える構造にたどり着いたのが、今回のテンプレートです。

イベント処理がバラバラに書かれて読みにくい
ウィンドウサイズごとの分岐処理が煩雑
チームでコードを共有すると「何がどこに書かれているか分からない」と言われる

この記事では、そんな悩みを解決するために、
前回紹介した「基本の型」をベース...]]></description><link>https://zenn.dev/akky709/articles/b19ddface6b892</link><guid isPermaLink="true">https://zenn.dev/akky709/articles/b19ddface6b892</guid><pubDate>Thu, 12 Jun 2025 05:02:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sSuRuJZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25BF%259C%25E7%2594%25A8%25E7%25B7%25A8%25E3%2580%2591%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E5%259E%258B%25E3%2581%258B%25E3%2582%2589%25E9%2580%25B2%25E5%258C%2596%25E3%2581%2597%25E3%2581%259FjQuery%25E3%2581%25AE%25E2%2580%259C%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E2%2580%259D%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akky%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akky</dc:creator></item><item><title><![CDATA[フレームワーク対決！レーダーチャートでVueとStructiveを比較しよう]]></title><description><![CDATA[
 Structiveとは？
StructiveはシングルファイルベースのWebコンポーネントを採用したビルドレスなフレームワークです。一見シンプルですが、構造駆動型のテンプレートや状態管理の簡素化により、宣言的かつリアクティブなUIを手軽に構築できるという特徴があります。

 構造駆動型とは
UI・状態・状態派生・状態更新・親子連携で、構造パスを使ってアプリを構築していくスタイルです。構造パスはデータの階層構造上の位置を示すパスを示し、リスト要素についてはワイルドカード*を使って表現します。
構造パスの例、
users = [ { name:"Alice" }, { name:"Bob...]]></description><link>https://zenn.dev/mogera/articles/f153c2396f9b59</link><guid isPermaLink="true">https://zenn.dev/mogera/articles/f153c2396f9b59</guid><pubDate>Thu, 12 Jun 2025 00:35:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h2Pv-ixl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E5%25AF%25BE%25E6%25B1%25BA%25EF%25BC%2581%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7Vue%25E3%2581%25A8Structive%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mogera%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeU81R0xzNDk1VUxWUy1MTlZLdktsQWpMY3NuZnZueC00S1lYWUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mogera</dc:creator></item><item><title><![CDATA[ブラウザの新規タブへのデータ転送する方法]]></title><description><![CDATA[ウェブ開発をしていると、新しいタブを開きながらデータを転送する必要がある状況によく遭遇します。最近のプロジェクトでも似たような要件がありました。商品一覧ページで、ユーザーが選択した最大500個の商品IDを新しいタブの詳細ページに転送する必要がありました。各IDは10桁の文字列で、新しいタブではこれらのIDを使ってAPIを呼び出し、詳細情報を取得する必要がありました。
簡単に見えるこの作業は、想像以上に多くの悩みをもたらしました。500個のID、最大で約5,000文字になるデータを、どのように転送するのが最も効率的でしょうか？

 検討過程：各手法の限界
複数の手法を検討する中で、それぞれ...]]></description><link>https://zenn.dev/sonsu/articles/5e1e9df823a4fe</link><guid isPermaLink="true">https://zenn.dev/sonsu/articles/5e1e9df823a4fe</guid><pubDate>Wed, 11 Jun 2025 17:40:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--slDmDNGZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25AE%25E6%2596%25B0%25E8%25A6%258F%25E3%2582%25BF%25E3%2583%2596%25E3%2581%25B8%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25BB%25A2%25E9%2580%2581%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sonsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZGVkNzE0NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sonsu</dc:creator></item><item><title><![CDATA[ElectronでMainとRendererから共通ファイルを使う設定方法]]></title><description><![CDATA[
 環境
electron + vite + react + typescript

 共通ディレクトリを作る
src/
├─ main/
├─ renderer/
├─ common/ ← 追加


 tsconfig.jsonを設定する
tsconfig.node.jsonを以下のように設定します。 (Mainプロセス用)
{
  "extends": "@electron-toolkit/tsconfig/tsconfig.node.json",
  "include": [
    "electron.vite.config.*",
    "src/main/**/*",
  ...]]></description><link>https://zenn.dev/mstn_/articles/6acb0d2753c54d</link><guid isPermaLink="true">https://zenn.dev/mstn_/articles/6acb0d2753c54d</guid><pubDate>Wed, 11 Jun 2025 14:25:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O2OHVMbZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Electron%25E3%2581%25A7Main%25E3%2581%25A8Renderer%25E3%2581%258B%25E3%2582%2589%25E5%2585%25B1%25E9%2580%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2drUmpodDM4dWpKbVFoTzFTYVNMeXYyRkQ3M3g0d2dUWW5fY0N3QWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ましろ</dc:creator></item><item><title><![CDATA[Tampermonkeyで3日溶かした末に辿り着いた、動的サイトスクレイピングの5つの壁]]></title><description><![CDATA[最初は「ちょっとメッセージ履歴を抽出するだけ」のつもりだった。Tampermonkeyでサクッと書けば1時間で終わるだろうと。結果的に3日間、延べ20時間以上を費やすことになるとは思ってもいなかった。
この記事は、その過程で遭遇した5つの壁と、それぞれをどう乗り越えたかの記録である。同じ道を通る人の時間を少しでも節約できれば幸いだ。

 第1の壁：静的なHTMLなんてもう存在しない
最初のコードは本当にシンプルだった。
// ==UserScript==
// @name         メッセージ抽出
// @match        https://example.com/*
// ...]]></description><link>https://zenn.dev/unikoukokun/articles/86e8e883765393</link><guid isPermaLink="true">https://zenn.dev/unikoukokun/articles/86e8e883765393</guid><pubDate>Wed, 11 Jun 2025 13:26:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bVdJYDaX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tampermonkey%25E3%2581%25A73%25E6%2597%25A5%25E6%25BA%25B6%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E6%259C%25AB%25E3%2581%25AB%25E8%25BE%25BF%25E3%2582%258A%25E7%259D%2580%25E3%2581%2584%25E3%2581%259F%25E3%2580%2581%25E5%258B%2595%25E7%259A%2584%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE5%25E3%2581%25A4%25E3%2581%25AE%25E5%25A3%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25B3%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmYjA3NjA5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユニコ🦄</dc:creator></item><item><title><![CDATA[「MCP × Streamable HTTP」で始める！ツール連携の第一歩]]></title><description><![CDATA[
 背景
社内でAIチャットボットを作る際にMCPを使う運びとなりました。
AIアプリケーションのツール連携において、MCPを使うケースが多数となってきています。
それだけにMCP連携の実装を押さえておくことは重要だと考えます。
そこで、本記事ではMCPの通信部分のみに着目したサンプル実装を通して、MCPのクライアント・サーバー連携を理解できるようになることを目指します。

 対象読者

JavaScript 初級者～中級者
MCPの基礎概念を知っている人(MCPの概要についてはこちら)
AIアプリケーションでツール連携をしたい人
Streamable HTTPを使ったクライアント・サー...]]></description><link>https://zenn.dev/serio/articles/15a458d52d6f8f</link><guid isPermaLink="true">https://zenn.dev/serio/articles/15a458d52d6f8f</guid><pubDate>Wed, 11 Jun 2025 06:25:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_t_PtWKU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CMCP%2520%25C3%2597%2520Streamable%2520HTTP%25E3%2580%258D%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25EF%25BC%2581%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25AE%25E7%25AC%25AC%25E4%25B8%2580%25E6%25AD%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AF%25E3%2581%2597%25E3%2581%258F%25E3%2582%258C%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OGEyY2UyNGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25BB%25E3%2583%25AA%25E3%2582%25AA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はしくれ</dc:creator></item><item><title><![CDATA[JavaScriptのループ変数命名の提案：「$1, $2」でシンプルに整理しよう]]></title><description><![CDATA[
 はじめに
JavaScriptでループのインデックス変数を命名するとき、よく使われるのが i, j, k や単に index といった名前です。しかしこれらの命名は、ネストが深くなると意味が不明瞭になったり、混乱の元になることがあります。
この記事では、これらの問題を解決するためのシンプルな命名規則を提案し、その具体的な利点や活用方法について詳しく解説します。

 提案する命名規則：$1, $2, $3

提案する方法は非常にシンプルです。

ループの深さに応じて、インデックス変数を $1, $2, $3 のように命名する

例えば次のように書きます。
for (let $1 = 0...]]></description><link>https://zenn.dev/mogera/articles/955a436a3c4710</link><guid isPermaLink="true">https://zenn.dev/mogera/articles/955a436a3c4710</guid><pubDate>Wed, 11 Jun 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OMilcMs5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E5%25A4%2589%25E6%2595%25B0%25E5%2591%25BD%25E5%2590%258D%25E3%2581%25AE%25E6%258F%2590%25E6%25A1%2588%25EF%25BC%259A%25E3%2580%258C%25241%252C%2520%25242%25E3%2580%258D%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mogera%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeU81R0xzNDk1VUxWUy1MTlZLdktsQWpMY3NuZnZueC00S1lYWUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mogera</dc:creator></item><item><title><![CDATA[２日目トピック5つ]]></title><description><![CDATA[トピック
]]></description><link>https://zenn.dev/keisuke4649/articles/ff0f16233a330c</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/ff0f16233a330c</guid><pubDate>Wed, 11 Jun 2025 00:27:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A1ZPsnp0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2592%25E6%2597%25A5%25E7%259B%25AE%25E3%2583%2588%25E3%2583%2594%25E3%2583%2583%25E3%2582%25AF5%25E3%2581%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[関西人のボクがJS/TSのPromiseについて解説するで]]></title><description><![CDATA[
 TypeScript Promise について
まいど！TypeScriptの勉強は捗ってまっか？とりあえず何か作って勉強や！と意気込んだものの、いきなりプロミスがよーわからんってなったそこの君！今日もとりあえず分かった風になれる簡単解説をお届けするで！

 Promiseってなんやねん？
Promiseっちゅうんは、非同期処理を扱うためのオブジェクトやで。要するに「今すぐには結果が分からんけど、後で結果を教えたるわ」っちゅう約束みたいなもんや。プロミスって約束のことやしな。
JavaScriptでもTypeScriptでも使えるけど、TypeScriptやとちゃんと型がついて安心や...]]></description><link>https://zenn.dev/fushimeer/articles/82d005a3a7808b</link><guid isPermaLink="true">https://zenn.dev/fushimeer/articles/82d005a3a7808b</guid><pubDate>Tue, 10 Jun 2025 13:44:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--64etIGe3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%25A2%25E8%25A5%25BF%25E4%25BA%25BA%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25AF%25E3%2581%258CJS%252FTS%25E3%2581%25AEPromise%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meer%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMDM4NzI4NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meer</dc:creator></item></channel></rss>