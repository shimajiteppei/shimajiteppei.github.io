<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 28 May 2025 04:48:13 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Vue3】俺のcomputed(() => x.value)の値が子コンポーネントに勝手にアップデートされるんだが【TypeScript】]]></title><description><![CDATA[
 俺のcomputed(() =&gt; x.value)の値が子コンポーネントに勝手にアップデートされるんだが


type TがT extends Record&lt;string, unknown&gt;で
かつcomputed({ get, set })でなく、computed(() =&gt; x.value)の形だった（WritableComputedRefでなかった）

な場合の話。
（余談だけど、T extends Objectみたいに、Object型は使ってないですよね？）

 結論

実際に確認できる環境: https://stackblitz.com/edit/v...]]></description><link>https://zenn.dev/aiya000/articles/04288f9fe9bb27</link><guid isPermaLink="true">https://zenn.dev/aiya000/articles/04288f9fe9bb27</guid><pubDate>Tue, 27 May 2025 18:48:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GhLc6aJ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vue3%25E3%2580%2591%25E4%25BF%25BA%25E3%2581%25AEcomputed%2528%2528%2529%2520%253D%253E%2520x.value%2529%25E3%2581%25AE%25E5%2580%25A4%25E3%2581%258C%25E5%25AD%2590%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E5%258B%259D%25E6%2589%258B%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2582%2593%25E3%2581%25A0...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2582%2584%2520-%2520aiya000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pZVUM0QXdxcVdtMVZmVWtiQXFzdE5ra1BFZU1FOUN0NFY1UzdiPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あいや - aiya000</dc:creator></item><item><title><![CDATA[型でランダムを表現する（TypeScriptの型レベルプログラミングでマインスイーパー: 前編）]]></title><description><![CDATA[
 初めに
こんにちは。最近 TypeScript の型をこねるのにハマっている yossuli です。
記事投稿コンテスト、盛り上がっていますね！
特に先日 TSKaigi が開催されてからより一層盛り上がってる気がします。
僕も現地で参加して、今すごく TS のモチベが高いです。
このモチベをプロダクト開発に向けることができればいいのですが、あいにく僕は何かを作ることには関心がないのです...
今年就活性で何かしらアウトプットしないと面接で何もアピールできず困ってしまうので、せめて記事を書いてアピールしようという次第です。
#1 日 1Zenn と題して毎日記事を書いていて本日が 5...]]></description><link>https://zenn.dev/yossuli/articles/fb5f169fc0d235</link><guid isPermaLink="true">https://zenn.dev/yossuli/articles/fb5f169fc0d235</guid><pubDate>Tue, 27 May 2025 18:13:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BDTHAbVI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2581%25A7%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2582%2592%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2591%25E3%2583%25BC%253A%2520%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yossuli%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYmRjMjQzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yossuli</dc:creator></item><item><title><![CDATA[Zod 再帰型の新しい解決方法]]></title><description><![CDATA[
 はじめに
先日、Zodの創設者であるColin McDonnell氏が興味深いツイートを投稿しました。
(ツイートはこちら)

"whoa. I just found a way to properly infer recursive types in z.object() — no casting, no z.lazy(), no scopes/registries, no special syntax. i've been trying to do this for literally years"

つまり、z.object()で再帰型（recursive type）をより型安...]]></description><link>https://zenn.dev/sonsu/articles/2292c4f06fc774</link><guid isPermaLink="true">https://zenn.dev/sonsu/articles/2292c4f06fc774</guid><pubDate>Tue, 27 May 2025 17:52:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LLapbOXu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zod%2520%25E5%2586%258D%25E5%25B8%25B0%25E5%259E%258B%25E3%2581%25AE%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sonsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZGVkNzE0NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sonsu</dc:creator></item><item><title><![CDATA[公開鍵暗号を TypeScript で学ぶ]]></title><description><![CDATA[
 公開鍵暗号とは
データを暗号化して扱いたいことがあります。インターネットで誰かと通信するときは、通信経路で誰が盗み見ているか分かりません。送信者と受信者だけが中身を確認できるように暗号化を施しておくと安心です。他には、データベースに保存するようなシステムを開発するとき、センシティブなデータを暗号化して保存しておくことで安心感が得られるかもしれません(得られないかもしれません)。
人間が読める状態のデータを平文、読めないように暗号化されたデータを暗号文と呼びます。また、暗号文を平文に戻すことを復号と呼びます。
以前共通鍵暗号についての記事を書きました。
https://zenn.dev...]]></description><link>https://zenn.dev/stin/articles/459732c7f30b4e</link><guid isPermaLink="true">https://zenn.dev/stin/articles/459732c7f30b4e</guid><pubDate>Tue, 27 May 2025 16:07:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fXvbIYsK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2585%25AC%25E9%2596%258B%25E9%258D%25B5%25E6%259A%2597%25E5%258F%25B7%25E3%2582%2592%2520TypeScript%2520%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%25A6%25E3%2581%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMTEyZmJmM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すてぃん</dc:creator></item><item><title><![CDATA[TSKaigi2025個人的参加レポート/メモ]]></title><description><![CDATA[
 はじめに
今回、TSKaigiに初めて参加しました。TS自体は2020年頃から
実務で必要になった経緯で始めて今も継続的にTSを使用している筆者です。
話題の？ts-goの話やFP、JSPrimer、Coding Agent x TSと言った有名どころの
セッションをメインで聴講させていただきまして、大変学びが多かったです。
登壇された方々、運営の皆様ありがとうございました。
Tシャツ含め色々と配布物やスタンプラリーもあり、そちらも含めて楽しかったです！

 総合的な感想
真面目な話を書くと、まだたくさんソフトウェア開発には面白いところがあるなと思った次第です。
FPの話ではもっとO...]]></description><link>https://zenn.dev/rinrin_yuuki/articles/8c7b1b32e55624</link><guid isPermaLink="true">https://zenn.dev/rinrin_yuuki/articles/8c7b1b32e55624</guid><pubDate>Tue, 27 May 2025 15:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KFxvyaeP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TSKaigi2025%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%252F%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuuki.h%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxZThjOWI3NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuuki.h</dc:creator></item><item><title><![CDATA[RooCode に自動でリファクタさせるオーケストレーター用プロンプト]]></title><description><![CDATA[Deno + Claude4 + RooCode。Claude 4 が進化しているので、それに合わせて Roo のプロンプトを書き直した。
リポジトリはここ
https://github.com/mizchi/vibed-pathfinder
たぶん .roo/rules/rules.md と .roo/rules-orchestrator/01_workflows.md だけ見ればいいです。
オーケストレーター用のプロンプト
https://github.com/mizchi/vibed-pathfinder/blob/main/.roo/rules-orchestrator/01_w...]]></description><link>https://zenn.dev/mizchi/articles/ai-refactoring</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ai-refactoring</guid><pubDate>Tue, 27 May 2025 14:44:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qK-b-VdY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:RooCode%2520%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25AA%25E3%2583%25BC%25E3%2582%25B1%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E7%2594%25A8%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[Reactで拡大・縮小・移動が可能なMermaidコンポーネントを実装する]]></title><description><![CDATA[
 Reactで拡大・縮小・移動が可能なMermaidコンポーネントを実装する
ReactでMermaidを使ってアーキテクチャ図を表示することがありました。小規模な図だととても便利なMermaidなのですが、大規模な図では拡大ができず見にくいと思うことが多々ありました。なので、大規模な図でも見やすいように拡大・縮小・移動が可能なコンポーネントの実装に挑戦しました。

 リポジトリ


 デモURL


 ライブラリ
{
  "dependencies": {
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
...]]></description><link>https://zenn.dev/mitate_gengaku/articles/zoom-move-able-react-mermaid</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/zoom-move-able-react-mermaid</guid><pubDate>Tue, 27 May 2025 13:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9hixEJPl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E6%258B%25A1%25E5%25A4%25A7%25E3%2583%25BB%25E7%25B8%25AE%25E5%25B0%258F%25E3%2583%25BB%25E7%25A7%25BB%25E5%258B%2595%25E3%2581%258C%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAMermaid%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[PostgreSQL + Prismaでタグ管理：正規化 vs JSONB vs 配列 パフォーマンス徹底比較]]></title><description><![CDATA[こんにちは、cojiです。今回はPostgreSQL + Prismaでタグ機能を実装する時のパフォーマンスについて、気になったので本格的にベンチマークを取ってみました。
正規化、JSONB、配列型の3つのアプローチで、どれが一番速いのか？データ量が増えたらどうなるのか？実際に10,000件と100,000件のデータでPrismaを使って検証してみたので、結果をシェアします。
ソースコードはGitHubで公開してるので、気になる方はこちらもチェックしてみてください。
https://github.com/coji/tags_benchmark

 先に結論：どのアプローチがおすすめ？
い...]]></description><link>https://zenn.dev/coji/articles/postgresql-prisma-tag-management-benchmark</link><guid isPermaLink="true">https://zenn.dev/coji/articles/postgresql-prisma-tag-management-benchmark</guid><pubDate>Tue, 27 May 2025 12:08:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2YdBqOre--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%2520%252B%2520Prisma%25E3%2581%25A7%25E3%2582%25BF%25E3%2582%25B0%25E7%25AE%25A1%25E7%2590%2586%25EF%25BC%259A%25E6%25AD%25A3%25E8%25A6%258F%25E5%258C%2596%2520vs%2520JSONB%2520vs%2520%25E9%2585%258D%25E5%2588%2597%2520%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%25BE%25B9%25E5%25BA%2595%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[Standalone時代のIonic Angularでion-iconをスマートに扱う！]]></title><description><![CDATA[
 Standalone時代のIonic Angularでion-iconをスマートに扱う！ 〜ion-icon-angular-standaloneのご紹介〜
atama plusという教育の会社でエンジニアをしている@ippeiukaiです。
Ionic AngularのStandalone構成が導入され、コンポーネントの取り扱い方が大きく変わりました。特に、ion-iconコンポーネントに関しては、使用するアイコンのSVGデータを事前にロードし、ioniconsライブラリのaddIcons関数を使って登録する必要が生じ、以前のようにname属性を指定するだけでは表示されなくなりまし...]]></description><link>https://zenn.dev/atamaplus/articles/dfcaac49c50577</link><guid isPermaLink="true">https://zenn.dev/atamaplus/articles/dfcaac49c50577</guid><pubDate>Tue, 27 May 2025 07:20:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6QcUXfEA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Standalone%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AEIonic%2520Angular%25E3%2581%25A7ion-icon%25E3%2582%2592%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:atama%2520plus%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTM3M2I1YWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:atama%2520plus%2520techblog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5YjY3ZWVlNWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>atama plus株式会社</dc:creator></item><item><title><![CDATA[展開したreadonly配列とextendsの話]]></title><description><![CDATA[
 はじめに
皆さん型を捏ねるのはお好きですか？
僕は最近捏ね始めた初心者なのですが、何やら最近型の再帰上限が上がったらしいですね。
いろんなことができて面白いなと思っている次第です。

ox ゲームや数独を作っていらっしゃる方もいるようですね...
型をつかいこなせていてかっこいい...

僕は体系的に学ぶのが得意でないので場当たり的に調べては試してを繰り返していて、数日前に面白い型を作ることができ記事にしました。
https://zenn.dev/yossuli/articles/eb3e471d954c15
その記事の中では、やりたいことはできていたので深堀はしなかった TS の型...]]></description><link>https://zenn.dev/yossuli/articles/2cc7275de41c49</link><guid isPermaLink="true">https://zenn.dev/yossuli/articles/2cc7275de41c49</guid><pubDate>Tue, 27 May 2025 05:55:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5Yd6bmJG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B1%2595%25E9%2596%258B%25E3%2581%2597%25E3%2581%259Freadonly%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A8extends%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yossuli%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYmRjMjQzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yossuli</dc:creator></item><item><title><![CDATA[#101　三目並べの盤面の探索と評価]]></title><description><![CDATA[
 三目並べの盤面の探索と評価
今回の記事は三目並べの探索の評価(=つまり、三目並べAIの作成)をしてみようと思います
この記事は前回の続きです

 実装方針
以下の2つの機能を実装していきます

勝敗判定
探索関数

任意の深さまでの探索を行います




 勝敗判定
前回の記事と同じ要領で、3つの石が並んだパターンをコンストラクタ内で生成します
constructor(/*省略*/){

//略

    this.judgeBoards = [];

    for (let i = 0n; i &lt; 6n; i++) {
        for (let j = 0n; j ...]]></description><link>https://zenn.dev/nxted_sapporo/articles/67b3cd9e3f510f</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/67b3cd9e3f510f</guid><pubDate>Tue, 27 May 2025 04:27:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--55QWH5J_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523101%25E3%2580%2580%25E4%25B8%2589%25E7%259B%25AE%25E4%25B8%25A6%25E3%2581%25B9%25E3%2581%25AE%25E7%259B%25A4%25E9%259D%25A2%25E3%2581%25AE%25E6%258E%25A2%25E7%25B4%25A2%25E3%2581%25A8%25E8%25A9%2595%25E4%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[プロファイラを利用して Node.js サーバーのレスポンス時間を 200 秒 → 20 秒に短縮した話]]></title><description><![CDATA[
 どんな問題を解決したのか
こんにちは、ダイニーの ogino です。
ダイニーでは、飲食店向けのクラウド POS レジを開発しています。その機能の一つとして、一ヶ月分の売上などの情報を印刷できる「月締伝票」があります。

月締伝票のサンプル
月締伝票に記載するデータは、Node.js バックエンドで集計をしています。この API はダイニーのバックエンド全体の中で最も重く、最近では一部店舗でレスポンスに 200 秒以上かかりタイムアウトエラーが発生していました。
その結果、月締伝票を発行することができないため顧客の業務に支障をきたし、複数の問い合わせが来ている状態でした。
プロファイ...]]></description><link>https://zenn.dev/dinii/articles/improve-latency-with-profiler</link><guid isPermaLink="true">https://zenn.dev/dinii/articles/improve-latency-with-profiler</guid><pubDate>Tue, 27 May 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r9CR1cEV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%2520Node.js%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%2520200%2520%25E7%25A7%2592%2520%25E2%2586%2592%252020%2520%25E7%25A7%2592%25E3%2581%25AB%25E7%259F%25AD%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ogino%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNTVhMGJiNDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Dinii%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNWJkMjFjOWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ogino</dc:creator></item><item><title><![CDATA[tsgoを使えばeslintによる型チェックは高速化されるのか]]></title><description><![CDATA[
 はじめに
こんにちは。普段Next.jsを使って学習支援に繋がるwebアプリ開発をしているけいじと申します。
最近、tsgoがリリースされて、typescriptのコンパイルが高速化されると話題です。私も普段typescriptを使っていて、柔軟性と堅牢性を兼ね備えた良い言語だなあと日々感じているのですが、少し不満があったりもします。それが、 eslintによる型チェックの動作が遅い ということです。
ほとんどの場合は、 node_modules など余計なディレクトリを監視対象に入れないなどに注意をしておけば気にならない速度で動作しますが、ファイル数が多くなってきたり、devcon...]]></description><link>https://zenn.dev/kg_filled/articles/73df96c38c8e9e</link><guid isPermaLink="true">https://zenn.dev/kg_filled/articles/73df96c38c8e9e</guid><pubDate>Tue, 27 May 2025 00:42:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GTMY6Js_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tsgo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0eslint%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AF%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KGFilled%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS29PNi1XamQ4ZW54NXdWdHRDUmQ3TTE3cmx0QVJibjZBTVVtdFhhdko0SGZnSXM2cz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KGFilled</dc:creator></item><item><title><![CDATA[MastraによるAIエージェントの”メモリ”について]]></title><description><![CDATA[こんにちは。AI ShiftでWebフロントエンジニアをしている安井です。今回はMastraのメモリに焦点を当てて解説をしていきます。

 はじめに
MastraはTypeScriptでAIエージェントを構築するためのフレームワークです。エージェント、ワークフロー、RAG、評価といった主要機能だけでなく、直感的にデバッグ可能なplayground uiや運用を見据えたOpsの機能なども豊富に備わっています。
https://mastra.ai/
また本記事は2025/05時点での内容に基づいています。

 コンテキストウィンドウ

メモリは、エージェントが会話の文脈を把握するために重要な...]]></description><link>https://zenn.dev/aishift/articles/e59cbc6ad07a29</link><guid isPermaLink="true">https://zenn.dev/aishift/articles/e59cbc6ad07a29</guid><pubDate>Tue, 27 May 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aDYZs_ez--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BAI%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E2%2580%259D%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E2%2580%259D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ytaisei%25EF%25BC%2588%25E3%2581%259F%25E3%2581%2584%25E3%2581%259B%25E3%2583%25BC%25EF%25BC%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNDQwNmNlMGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AI%2520Shift%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTZlNDI3NWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ytaisei（たいせー）</dc:creator></item><item><title><![CDATA[TypeScriptをバックエンドで使わない理由]]></title><description><![CDATA[
 はじめに
!
この記事は、下記の記事への反論というよりも、「 TypeScript でバックエンドを書く」というテーマについて、別の観点から整理したい という意図で書いています。
元記事は、文脈が分かりづらいと感じたため、自分なりにバックエンドの特性にフォーカスして再整理しています。

最近、以下の記事を見かけました。
https://zenn.dev/anatoo/articles/a9eebb9414c156
記事の内容は、バックエンドも TypeScript で書きましょうという内容です。
たしかに、TypeScript は現代のフロントエンド開発においてデファクトスタンダード...]]></description><link>https://zenn.dev/putcho/articles/32ee8d7ed8ce15</link><guid isPermaLink="true">https://zenn.dev/putcho/articles/32ee8d7ed8ce15</guid><pubDate>Mon, 26 May 2025 23:34:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UGiGstsu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%2592%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%25AA%25E3%2581%2584%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:putcho01%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwMzQyNTM3MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>putcho01</dc:creator></item><item><title><![CDATA[Storybookで複雑なNext.jsコンポーネントを表示する：subpath importsを使った効果的なモック戦略]]></title><description><![CDATA[
 はじめに
Next.jsアプリケーションでStorybookを使用する際、useSearchParamsやsignInなどのNext.js固有のフックや外部ライブラリに依存するコンポーネントをStorybookで表示するのは困難です。従来のモック方法では複雑になりがちで、保守性に課題がありました。
本記事では、Storybook公式が推奨するSubpath Importsを使用した効果的なモック戦略を紹介します。この方法により、型安全性を保ちながら、再利用可能で保守しやすいモック環境を構築できます。

 従来のモック方法の課題

 問題のあるアプローチ
// ❌ 従来の問題のあるアプ...]]></description><link>https://zenn.dev/fugithora812/articles/260244a2fad95b</link><guid isPermaLink="true">https://zenn.dev/fugithora812/articles/260244a2fad95b</guid><pubDate>Mon, 26 May 2025 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B8s7d1Ck--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Storybook%25E3%2581%25A7%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AANext.js%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259Asubpath%2520imports%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%258A%25B9%25E6%259E%259C%25E7%259A%2584%25E3%2581%25AA%25E3%2583%25A2...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junpei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Junpei</dc:creator></item><item><title><![CDATA[Edge Worker って JS しか動かないの？もも 🍑 の RAG 大冒険メモ]]></title><description><![CDATA[
💟 読んでほしい人

Slack や MTG ログを丸ごと溜め込んで RAG したい新人さん
Edge Functions/Cloudflare Workers/Vercel Edge に興味あるフロント勢
「JS 以外動かせないの？！」とモヤモヤしてるバックエンド勢
Obsidian／PostgreSQL どっちにデータ入れよう…と迷い中のノート魔 📝




 0️⃣ もも 🍑 のひとりごと (ᐢ ˙꒳˙ ᐢ)💗

「Slack 全履歴と議事録をローカルで保持して、自分ぽい返信を Gemini に作らせたいんだけど…
Edge Worker、Python、Obsidian…頭ぐるぐ...]]></description><link>https://zenn.dev/koshiosaki/articles/2c8f4e9a7969c2</link><guid isPermaLink="true">https://zenn.dev/koshiosaki/articles/2c8f4e9a7969c2</guid><pubDate>Mon, 26 May 2025 16:48:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SiCoIitf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Edge%2520Worker%2520%25E3%2581%25A3%25E3%2581%25A6%2520JS%2520%25E3%2581%2597%25E3%2581%258B%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25EF%25BC%259F%25E3%2582%2582%25E3%2582%2582%2520%2520%2520%25E3%2581%25AE%2520RAG%2520%25E5%25A4%25A7%25E5%2586%2592%25E9%2599%25BA%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzNjQwNTUxY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もも</dc:creator></item><item><title><![CDATA[ts5.8正式リリース前の情報に踊らされていた話]]></title><description><![CDATA[
 結論
条件付き戻り値型に対するナローイングは、ts5.8 ではサポートされませんでしたが開発は続けられていてts5.9 でサポート予定のようです...
!
まったく情報を終えていませんでした
当分はサポートされないようです
https://github.com/microsoft/TypeScript/issues/61648#issuecomment-2851713498

ゆっくり待ちましょう。

declare const record: Record&lt;string, string[]&gt;;
declare const array: string[];

functi...]]></description><link>https://zenn.dev/yossuli/articles/8822d0ea6eaa34</link><guid isPermaLink="true">https://zenn.dev/yossuli/articles/8822d0ea6eaa34</guid><pubDate>Mon, 26 May 2025 15:42:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O5ibizZB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ts5.8%25E6%25AD%25A3%25E5%25BC%258F%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E5%2589%258D%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%25AB%25E8%25B8%258A%25E3%2582%2589%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yossuli%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYmRjMjQzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yossuli</dc:creator></item><item><title><![CDATA[はじめてのLangChain入門｜GPTに記憶や検索機能を持たせる方法とは？]]></title><description><![CDATA[
 LangChainとは何か？

 はじめに
ChatGPTなどの大規模言語モデル（LLM）を使ったプロダクトやサービスが増えてきました。
個人開発でも「チャットボットを作った」といったものが多く見られます。
しかし、実際に使ってみるとこんな悩みにぶつかることがありませんか？

毎回ゼロからの会話になってしまい、文脈を覚えてくれない
外部データやツールを使いたいが、GPT単体ではできない
複数ステップの処理や判断を自動でやってほしい

こうした限界を乗り越えるために開発されたのが「LangChain」というライブラリ。
LangChainとは何か、何ができるのか、そしてどんな人に向いて...]]></description><link>https://zenn.dev/nami_y/articles/69811f5dffad17</link><guid isPermaLink="true">https://zenn.dev/nami_y/articles/69811f5dffad17</guid><pubDate>Mon, 26 May 2025 15:33:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RvNE5LLP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AELangChain%25E5%2585%25A5%25E9%2596%2580%25EF%25BD%259CGPT%25E3%2581%25AB%25E8%25A8%2598%25E6%2586%25B6%25E3%2582%2584%25E6%25A4%259C%25E7%25B4%25A2%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%259B%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nami_y%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hyQ2tIb0hXWWNUWDBGeHRoakFhU3hIUExSSVJjcXkxaThCUFdNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nami_y</dc:creator></item><item><title><![CDATA[TypeScriptで学ぶデザインパターン 〜Iterator編〜]]></title><description><![CDATA[この記事はJava言語で学ぶデザインパターンを読んで学んだ内容を、TypeScriptのサンプルコードに落としこんでみた記録です。「Iterator パターン」とは何かを理解し、TypeScriptの言語仕様との関係性を把握できる内容となっています。

 Iterator パターンとは
Iterator パターンは、何らかの集合に対して順番に繰り返して全体をスキャンする方法を提供するデザインパターンです。GoF（Gang of Four）によって定義された23のデザインパターンの1つであり、TypeScriptでは言語レベルでIterator インターフェースが提供されています。
本の中...]]></description><link>https://zenn.dev/frontendflat/articles/7fc09b0e8419c9</link><guid isPermaLink="true">https://zenn.dev/frontendflat/articles/7fc09b0e8419c9</guid><pubDate>Mon, 26 May 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vur49KwZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%25E3%2580%259CIterator%25E7%25B7%25A8%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25B1%25B1%25E6%259D%2591%2520%25E7%25A5%2590%25E8%25B2%25B4%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyMjUxMzg1ODUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEFLAT%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlZjQ5ODRmMTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山村 祐貴</dc:creator></item></channel></rss>