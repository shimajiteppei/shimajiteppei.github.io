<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 06 Sep 2025 11:26:29 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[非数 や -0.0 は truthy?]]></title><description><![CDATA[
 これは何？
浮動小数点数を bool に変換できちゃう人たちが、0, -0.0, 非数 をどうするのか調べてみた。

 調査結果

 C / C++
たぶん、浮動小数点数としては「0 は falsy、それ以外は truthy」なので
下表の仕様になる。



値
0.0
-0.0
非数




結果
false
false
true



で、手元で実際そうだった。未定義動作とかでもないと思う。

 Ruby
ruby は、nil と false 以外全部 truthy なので



値
0.0
-0.0
非数




結果
true
true
true



となる。

 Pyth...]]></description><link>https://zenn.dev/nabetani/articles/19591496dfaadb</link><guid isPermaLink="true">https://zenn.dev/nabetani/articles/19591496dfaadb</guid><pubDate>Sat, 06 Sep 2025 07:57:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HhnXc40O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259D%259E%25E6%2595%25B0%2520%25E3%2582%2584%2520-0.0%2520%25E3%2581%25AF%2520truthy%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takenori%2520NABETANI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwNjk0ZGU4YzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takenori NABETANI</dc:creator></item><item><title><![CDATA[JavaScriptの関数の参照と無名関数について調べてみた]]></title><description><![CDATA[
 はじめに
JavaScriptで関数を呼び出す際に、今までなんとなくfunc()とfuncを使っていたのでそれぞれの実行タイミングや役割についてしっかり理解するためにまとめてみました。

 関数の実行タイミングについて
例えば以下のhandleClick関数があった場合、実行する際に複数の記法があると思います。
function handleClick() {
 console.log('クリックされました。');
}

 パターンA
document.addEventListener('click', handleClick)

 パターンB
document.addEventLi...]]></description><link>https://zenn.dev/shusaku009/articles/func_callback</link><guid isPermaLink="true">https://zenn.dev/shusaku009/articles/func_callback</guid><pubDate>Sat, 06 Sep 2025 06:49:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y6PKUvgT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%258F%2582%25E7%2585%25A7%25E3%2581%25A8%25E7%2584%25A1%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shusaku009%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YWY1OGM1NjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shusaku009</dc:creator></item><item><title><![CDATA[TanStack DB ~状態管理の新しい考え方~]]></title><description><![CDATA[
 はじめに
TanStack が新たに公開した TanStack DB について調べたので、その概要を紹介します。
https://tanstack.com/db/latest
!
こちらの記事はReact Tokyo ミートアップ #8にて発表させていただいた内容をより深堀りした記事となっています。
登壇資料はこちらです。
https://speakerdeck.com/bmthd/tanstack-db-zhuang-tai-guan-li-noxin-siikao-efang


 TanStack DBとは
TanStack DBは、フロントエンドに 永続化層（DB） を設け、...]]></description><link>https://zenn.dev/bmth/articles/tanstack-db-csq</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/tanstack-db-csq</guid><pubDate>Fri, 05 Sep 2025 18:06:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QeSJMu3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TanStack%2520DB%2520%7E%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E8%2580%2583%25E3%2581%2588%25E6%2596%25B9%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZTk3NzVhNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[定数に関数を代入する考え方]]></title><description><![CDATA[
 JavaScriptの「関数式」を学んで気づいたこと
定数に関数を代入す流イメージがつかずまとめました。


 実際に書いてみたコード
// 関数式（アロー関数）
const square = (num) =&gt; {
  return num * num;
};

console.log(square(5));   // 25
console.log(square(10));  // 100
#学んだこと・気づき
関数も「値」扱いできる
数値や文字列を代入するのと同じように、関数も代入できる。
const に代入することで再代入を防げる
間違えて関数を書き換えるのを防げるのは安心...]]></description><link>https://zenn.dev/ikkoz/articles/be16a938ba3daa</link><guid isPermaLink="true">https://zenn.dev/ikkoz/articles/be16a938ba3daa</guid><pubDate>Fri, 05 Sep 2025 13:51:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1UVgRn7Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E8%2580%2583%25E3%2581%2588%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%25A3%25E3%2581%2593%25E3%2581%2586%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMWY4MWI3MzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いっこうチャンネル</dc:creator></item><item><title><![CDATA[キャラを動かして学ぶ！　ゲームプログラミング超入門🔰]]></title><description><![CDATA[本書は「小さな動作サンプル」を積み重ねながら、JavaScript と enchant.js の基礎を学ぶ教材です。
背景とスプライトの表示から、タイムラインによる移動、キー操作処理、タップ処理、スコア表示までを丁寧に解説します。
最終回では簡単な動く仕組みとしてまとめ、次の制作へつなげます。]]></description><link>https://zenn.dev/takasupika/books/86956e7744d494</link><guid isPermaLink="true">https://zenn.dev/takasupika/books/86956e7744d494</guid><pubDate>Fri, 05 Sep 2025 12:07:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YLzwbmpR--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iY2Y4MmUxMTgxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>たかたか</dc:creator></item><item><title><![CDATA[『モダンJavaScriptの基本から始める React実践の教科書』で、最新環境だと4章序盤が動かないので、動くように読み替えたことメモ]]></title><description><![CDATA[※　「動かない」原因は、自分の誤入力などの可能性もあります
※　調べた範囲で「ReactDOM.renderが非推奨」や、そもそもの「create-react-app自体が非推奨」になったことが原因だと推測しますが、詳細やその発生理由までは追っていません

 読み替えたこと一覧
前提：create-react-app で初期ファイルを作成し、出来るだけそのまま使う。（95ページの『現在の構成』に合わせない）

96ページ～：修正対象ファイル

- index.js
+ App.js
※ 99ページ以降はApp.jsが修正対象ファイルになるので、そこまでは気にせず読み進む方が楽
※ 101...]]></description><link>https://zenn.dev/ihok/articles/6e5e257da679a7</link><guid isPermaLink="true">https://zenn.dev/ihok/articles/6e5e257da679a7</guid><pubDate>Fri, 05 Sep 2025 06:06:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qIEcf5bO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3JavaScript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2520React%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%25AE%25E6%2595%2599%25E7%25A7%2591%25E6%259B%25B8%25E3%2580%258F%25E3%2581%25A7%25E3%2580%2581%25E6%259C%2580%25E6%2596%25B0%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A0%25E3%2581%25A84%25E7%25AB%25A0%25E5%25BA%258F%25E7%259B%25A4%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E5%258B%2595%25E3%2581%258F...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ihok%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhESUZGcEliSGtLNnV4SnBJQnl1eGtCQkwwWU5zamE5VGx6bzk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ihok</dc:creator></item><item><title><![CDATA[Vue3の算出プロパティについて調べてみた]]></title><description><![CDATA[Vue 3の算出プロパティ（Computed Properties）は、コンポーネント内のリアクティブなデータに基づいて値を動的に計算するための機能です。テンプレート内の複雑なロジックをシンプルにし、コードの見通しを良くするために非常に役立ちます。


 算出プロパティとは？ 🤔
一言で言うと、「他のデータから派生するデータ」を定義するためのものです。例えば、firstName と lastName というデータがあったときに、それらを組み合わせて fullName というデータを表示したい場合などに使います。
最大の特徴はキャッシュ機能です。算出プロパティが依存している元のデータ（例：...]]></description><link>https://zenn.dev/shunsuke_stack/articles/1a1c283168f4e6</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/1a1c283168f4e6</guid><pubDate>Fri, 05 Sep 2025 02:07:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d-pT1Bkk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AE%25E7%25AE%2597%25E5%2587%25BA%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[JavaScriptのコールバック関数を理解する - Express.jsの実装から学ぶ非同期処理の基本]]></title><description><![CDATA[
 JavaScript のコールバック関数を理解する - Express.js の実装から学ぶ非同期処理の基本
Express.js でシンプルな API を作りながら、コールバック関数の仕組みとJavaScript の非同期処理について深く理解していきます。

 はじめに
クラウドエース株式会社 第一開発部 喜村です。
普段は SRE 領域を担当していますが、とある事情で TypeScript を触る機会があり Express.js を使った Web アプリ開発に挑戦しました。
そこで最初に出会ったのがこのようなコードでした：
app.ts:
app.get('/', (req, r...]]></description><link>https://zenn.dev/cloud_ace/articles/804c0d088d2535</link><guid isPermaLink="true">https://zenn.dev/cloud_ace/articles/804c0d088d2535</guid><pubDate>Thu, 04 Sep 2025 11:51:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hAR_Rlas--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520-%2520Express.js%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B9%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OGMwYmM4MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クラウドエース株式会社</dc:creator></item><item><title><![CDATA[js x-forライブラリを作成しました　]]></title><description><![CDATA[AIに作らせたので、間違っているかもしれません。
以下に仕様を書くので、確認できる方はソースを読んで確認してください。
基本的に、繰り返し要素を含むコンテンツについて、データとの連携をするためのライブラリとなります。
オブジェクトのプロパティとテンプレートのclass名が対応し、textContentを置換する形で要素を描画します。
クリックの取得は、can_click classを付与した要素をクリックした場合に専用の関数が呼ばれる仕組みとなります。
全体を囲うもよし、削除等の特定のボタンを囲うのもありです。
基本的な方針として、シンプルな実装にしたかったので、複数クリック要素には対応...]]></description><link>https://zenn.dev/kemii/articles/2c39f3c3a680af</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/2c39f3c3a680af</guid><pubDate>Thu, 04 Sep 2025 09:42:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bTN9LmgY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:js%2520x-for%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[Vue3 shallowRefについて調べてみた]]></title><description><![CDATA[はい、Vue 3のshallowRefについて詳しく解説しますね。
shallowRefは、Vue 3のComposition APIで提供される関数の一つで、浅い (shallow) リアクティブな参照を作成します。これは、よく使われるrefと似ていますが、リアクティビティの追跡範囲に大きな違いがあります。
一言で言うと、shallowRefは.valueプロパティの再代入のみを検知し、オブジェクト内部のプロパティ変更は追跡しません。


 refとの主な違い
shallowRefを理解する上で最も重要なのが、refとの違いです。


ref: ディープ（深い）リアクティビティ


....]]></description><link>https://zenn.dev/shunsuke_stack/articles/fd954a3d5e9fd6</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/fd954a3d5e9fd6</guid><pubDate>Thu, 04 Sep 2025 01:29:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DOemRoHB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%2520shallowRef%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[thisとは]]></title><description><![CDATA[
 thisとは

thisは読み取り専用のグローバル変数のようなもの


 thisの参照先とは

thisの参照先は条件によって異なる


 スクリプトの場合

スクリプトの場合
function test() {
	console.log(this)
}

これをブラウザで呼び出すと

スクリプトの場合
test() // =&gt; Window {frames: Window, postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, …}

つまりこのthisはグローバルオブジェクト、ブラウザではwindowオブジェクトとなる

 モジュールの...]]></description><link>https://zenn.dev/y_mi/articles/0ec3a46e8980be</link><guid isPermaLink="true">https://zenn.dev/y_mi/articles/0ec3a46e8980be</guid><pubDate>Wed, 03 Sep 2025 23:53:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dKABvBoy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:this%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちー。</dc:creator></item><item><title><![CDATA[【個人開発】葬送のフリーレン Online - 時の彼方の旅路 を公開しました 🎮]]></title><description><![CDATA[
 はじめに
個人でプログラミングを勉強している大学生です。
タイトルは
『葬送のフリーレン Online - 時の彼方の旅路』 です。
フリーレンの世界観をモチーフにした 非公式のファンメイド作品 ですが、遊んでいただいて感想をもらえると嬉しいです 🙌



 🎮 ゲーム概要


ジャンル: ブラウザで遊べるRPG

使用技術: HTML / CSS / JavaScript

特徴:

マップ探索（森・雪原・砂漠など）
ターン制バトル（ゾルトラークなどの魔法あり）
村や宿屋、宝箱イベント
大ボス「断頭台のアウラ」戦
BGM切替（探索、戦闘、ボス戦）



👉 実際に遊べるリンクはこち...]]></description><link>https://zenn.dev/imshota1009/articles/d00cab449c07d7</link><guid isPermaLink="true">https://zenn.dev/imshota1009/articles/d00cab449c07d7</guid><pubDate>Wed, 03 Sep 2025 12:38:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bqTXh3y_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E8%2591%25AC%25E9%2580%2581%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25AC%25E3%2583%25B3%2520Online%2520-%2520%25E6%2599%2582%25E3%2581%25AE%25E5%25BD%25BC%25E6%2596%25B9%25E3%2581%25AE%25E6%2597%2585%25E8%25B7%25AF%2520%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkU2WEFtWXBUYVBFUnFEMHAwYnNjdG5TVDVrUkNsXy1zSHlsd2s1RjY1ek9sTzhpcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょうた</dc:creator></item><item><title><![CDATA[Mastraでマルチエージェントワークフローを動かすまでの備忘録]]></title><description><![CDATA[
 背景
現在、社内でAIチャットボットを開発しています。こちらのAIチャットボットでは、質問を投げるとまず社内のナレッジ情報を検索し、検索にヒットしない場合はWeb検索を行い回答を返すような動作を期待しています。このようなエージェントを階層型マルチエージェントで構築しようとしたところ、いくつか問題点が出てきました。たとえば社内のナレッジ情報が検索ヒットせずWeb検索を実行しても、Web検索結果ではなくLLMが生成した結果を回答に使うといった問題が発生しました。
このような結果になってしまったのはAIエージェントのシステムプロンプトの記述のみで条件分岐のような制御を行っているためだと考え...]]></description><link>https://zenn.dev/serio/articles/655673a6b59f66</link><guid isPermaLink="true">https://zenn.dev/serio/articles/655673a6b59f66</guid><pubDate>Wed, 03 Sep 2025 07:20:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EzE9Ltcj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25A7%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AF%25E3%2581%2597%25E3%2581%258F%25E3%2582%258C%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OGEyY2UyNGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25BB%25E3%2583%25AA%25E3%2582%25AA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はしくれ</dc:creator></item><item><title><![CDATA[URLを綺麗にして取得するブックマークレット]]></title><description><![CDATA[SNSでシェアされたリンクを開いてURLをコピーすると、utmやfbclidなどのパラメータが付与されていることがあります。これらのパラメータはアクセス解析のために使われるもので、取り除きたい方も多いと思います（私もそのひとり）。
たとえば、FacebookでシェアされたYahoo! Japanのトップページを開くとアドレスバーの中のURLは以下のようになります。

これをそのままコピーして共有すると、URLが長くなってしまい、見た目も良くありません。また、アクセス解析のためのパラメータが付与されていることで、プライバシーの観点からも気になる方もいるでしょう（上記URLのパラメータ部分は...]]></description><link>https://zenn.dev/kwaka1208/articles/get-title-and-clean-url</link><guid isPermaLink="true">https://zenn.dev/kwaka1208/articles/get-title-and-clean-url</guid><pubDate>Wed, 03 Sep 2025 06:31:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ijoeS4s1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:URL%25E3%2582%2592%25E7%25B6%25BA%25E9%25BA%2597%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E3%2583%2596%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kenichi%2520Wakabayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMjI4MDllOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kenichi Wakabayashi</dc:creator></item><item><title><![CDATA[View Transitions API（ビュー遷移 API）を使ってみよう！]]></title><description><![CDATA[はい、どうも。
今回はView Transitions API（ビュー遷移 API）を試してみましょう。
View Transitions APIが登場してからそこそこ経ちますが、普段仕事で使うことがないものなので、ノータッチでした。
調査がてら試してみようという感じです。

 View Transitions APIとは？
View Transitions APIは、ウェブページの状態変化・・・DOMの更新のことですね・・・をスムーズにアニメーションさせるためのAPIです。
ブラウザネイティブの機能のため、今までJavascriptやCSSで頑張っていたものを簡単に実装できます。
これ...]]></description><link>https://zenn.dev/sonicmoov/articles/f819f4904e793f</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/f819f4904e793f</guid><pubDate>Wed, 03 Sep 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xjBhZ5mK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:View%2520Transitions%2520API%25EF%25BC%2588%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E9%2581%25B7%25E7%25A7%25BB%2520API%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%25AE%2589%25E7%25AB%258B%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5OTlmM2U4MGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>安立</dc:creator></item><item><title><![CDATA[Vueのデータバインディングについて調べてみた]]></title><description><![CDATA[
 Vueのデータバインディングについて
Vue.jsにおけるバインド（bind）とは、一言で言うと「データと見た目（DOM）を結びつける（連携させる）仕組み」のことです。これをデータバインディングと呼びます。
データバインディングを使うと、JavaScriptのデータ（変数やオブジェクト）が変更されたときに、Webページの表示が自動的に更新されるようになります。これにより、DOMを直接操作するコードを書く手間が省け、コードがシンプルで分かりやすくなります。
主要なバインドにはいくつか種類があります。


 テキストのバインド（マスタッシュ構文）
最も基本的なバインド方法で、{{ }}（...]]></description><link>https://zenn.dev/shunsuke_stack/articles/b1c16525b47998</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/b1c16525b47998</guid><pubDate>Wed, 03 Sep 2025 01:07:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v6YLcnK4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[🌱 GitHubの草が花に育つ！？「Contribution Flower」を作りました 🌸]]></title><description><![CDATA[GitHubを毎日使っていると、緑色の草（Contribution）がどんどん増えていくのを見るのが楽しいですよね。
でもその草が「花」になって育ったら、もっとワクワクすると思いませんか？
そこで作ったのが、GitHubの貢献を美しい花の成長に変えるWebアプリ「Contribution Flower」 です。
Github 👉 https://github.com/imshota1009/Push-up-counter/tree/main
🌼 どんなアプリ？
「Contribution Flower」は、あなたのGitHub活動を花の成長に見立てて可視化してくれるアプリです。
コントリ...]]></description><link>https://zenn.dev/imshota1009/articles/c9a19036c0056d</link><guid isPermaLink="true">https://zenn.dev/imshota1009/articles/c9a19036c0056d</guid><pubDate>Wed, 03 Sep 2025 00:02:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YBp6gpvY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520GitHub%25E3%2581%25AE%25E8%258D%2589%25E3%2581%258C%25E8%258A%25B1%25E3%2581%25AB%25E8%2582%25B2%25E3%2581%25A4%25EF%25BC%2581%25EF%25BC%259F%25E3%2580%258CContribution%2520Flower%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkU2WEFtWXBUYVBFUnFEMHAwYnNjdG5TVDVrUkNsXy1zSHlsd2s1RjY1ek9sTzhpcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょうた</dc:creator></item><item><title><![CDATA[📱💪 スマホで腕立て回数をAIが自動カウントしてくれる時代がきた！]]></title><description><![CDATA[「今日は腕立て30回やったはず…あれ、数え間違えたかも？」
トレーニング中、こんな経験ありませんか？
僕もそうなんですが、腕立てをやってると途中で回数が分からなくなる問題が本当に多いんです。
しかも「ちゃんとフォームできてるのか？」も自信がなくなる…。
そんな時に見つけたのが、スマホのカメラだけで腕立て回数を自動で数えてくれるAIアプリです。
Github 👉 https://github.com/imshota1009/Push-up-counter/tree/main
🤖 仕組みはめちゃシンプル
このアプリは TensorFlow.jsのMoveNet というAIを使って、
カメラに...]]></description><link>https://zenn.dev/imshota1009/articles/cabeb2a736bb66</link><guid isPermaLink="true">https://zenn.dev/imshota1009/articles/cabeb2a736bb66</guid><pubDate>Tue, 02 Sep 2025 23:47:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kRhHKxUi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520%2520%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259B%25E3%2581%25A7%25E8%2585%2595%25E7%25AB%258B%25E3%2581%25A6%25E5%259B%259E%25E6%2595%25B0%25E3%2582%2592AI%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%258C%25E3%2581%258D%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkU2WEFtWXBUYVBFUnFEMHAwYnNjdG5TVDVrUkNsXy1zSHlsd2s1RjY1ek9sTzhpcW09czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょうた</dc:creator></item><item><title><![CDATA[JavaScript/TypeScriptでプリミティブ型を理解する]]></title><description><![CDATA[はじめまして！
フロントエンドエンジニア志望の大学生です！
今回が初めての技術記事投稿になります。
まだ拙い部分もあるかと思いますが、JavaScript / TypeScript におけるプリミティブ型について、自分なりに整理して解説していきます。

 はじめに
みなさんは、プログラミングで変数を使っているときに、「プリミティブ型とは何ですか？」と聞かれたら、すぐに説明できますか？
正直なところ、自分はまだうまく説明できませんでした。
「文字列や数値がプリミティブ型だ」ということは知っていても、実際にどんなものなのかを深く理解する機会はあまりありませんでした。
そこで今回は、プリミティ...]]></description><link>https://zenn.dev/oimozenn/articles/3cb6f02325cbfd</link><guid isPermaLink="true">https://zenn.dev/oimozenn/articles/3cb6f02325cbfd</guid><pubDate>Tue, 02 Sep 2025 16:39:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lAOmQ-yQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%252FTypeScript%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AA%25E3%2583%259F%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E5%259E%258B%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A0%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxYmFhY2IwMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほだか</dc:creator></item><item><title><![CDATA[TypeScriptとJavaScriptとECMAScriptの違いがわからない人のための記事]]></title><description><![CDATA[※これはChatGPTで生成したものを加筆・修正したものです。
JavaScriptを書いているとよく出てくる「TypeScript」「ECMAScript」「ES6」などの用語。最初はこれらの違いが曖昧で混乱するかもしれません。
この記事ではそれぞれの違いを整理し、TypeScriptがどんな特徴を持つのかをわかりやすく解説します。

 🌐 JavaScript / TypeScript / ECMAScript の関係



用語
ざっくり言うと




JavaScript
実際に動くスクリプト言語


ECMAScript
JavaScriptの"仕様書"の名前


TypeSc...]]></description><link>https://zenn.dev/tajicode/articles/192defdfa2227c</link><guid isPermaLink="true">https://zenn.dev/tajicode/articles/192defdfa2227c</guid><pubDate>Tue, 02 Sep 2025 00:51:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vlTK60iV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A8JavaScript%25E3%2581%25A8ECMAScript%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%258C%25E3%2582%258F%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tajima%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZjY2YmNkYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tajima</dc:creator></item></channel></rss>