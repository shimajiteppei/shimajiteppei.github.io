<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 01 Jun 2025 08:38:05 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[「AtCoder Beginner Contest 186 B - Blocks on Grid」メモ]]></title><description><![CDATA[
 問題
AtCoder Beginner Contest 186
https://atcoder.jp/contests/abc186/tasks/abc186_b

 考察
二次元配列を次のコードで入力から受け取る
a = [list(map(int, input().split())) for _ in range(h)]
二次元配列の最小値を求めて、それより大きい数からそれを引けばよい。

 ACコード
def minimum(a, h, w):
    ans = 10**9
    for i in range(h):
        for j in range(w):
 ...]]></description><link>https://zenn.dev/ripoh/articles/3cff687b4d56b4</link><guid isPermaLink="true">https://zenn.dev/ripoh/articles/3cff687b4d56b4</guid><pubDate>Sun, 01 Jun 2025 07:22:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nvb9p-06--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CAtCoder%2520Beginner%2520Contest%2520186%2520B%2520-%2520Blocks%2520on%2520Grid%25E3%2580%258D%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:w4daka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2ZjZDZhMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>w4daka</dc:creator></item><item><title><![CDATA[PEP 765 – Disallow return/break/continue that exit a finally block]]></title><description><![CDATA[PEP 765 では Python 3.14 から、finally ブロックの中から return / break / continue を使って外に抜けるコードが 非推奨（SyntaxWarningを出すよう） になります。

Title: Disallow return/break/continue that exit a finally block

Status: Final
Created: 15-Nov-2024
Python-Version: 3.14


 背景
Python の finallyブロックでは、return や break を使うと、そこで例外が再スローされ...]]></description><link>https://zenn.dev/ozro/articles/fa45248f47151d</link><guid isPermaLink="true">https://zenn.dev/ozro/articles/fa45248f47151d</guid><pubDate>Sun, 01 Jun 2025 02:51:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QMqm2wVv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PEP%2520765%2520%25E2%2580%2593%2520Disallow%2520return%252Fbreak%252Fcontinue%2520that%2520exit%2520a%2520fina...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2598%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwNjA5YTdlZmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おじろ</dc:creator></item><item><title><![CDATA[Pandas + AI = PandasAI]]></title><description><![CDATA[
 PandasAIとは
PandasAIは、自然言語を使用してPandasのDataFrameに対してクエリを実行できるPythonライブラリです。GPT-4oなどの大規模言語モデル（LLM）を活用し、自然言語で複雑なデータ分析タスクを実行することができます。

 PandasAIの主な機能

自然言語によるデータ分析
データ可視化
複雑なデータ操作の自動化


 セットアップ
インストール
pip install pandasai
必要な依存関係：

Python
pandas
OpenAI APIキー（OpenAIのモデルを使用する場合）


 基本的な使用方法
以下はPandas...]]></description><link>https://zenn.dev/upgradetech/articles/e4a4dfdb7cc55f</link><guid isPermaLink="true">https://zenn.dev/upgradetech/articles/e4a4dfdb7cc55f</guid><pubDate>Sun, 01 Jun 2025 00:54:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z6dGeHS5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Pandas%2520%252B%2520AI%2520%253D%2520PandasAI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:T.S%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4NmJmMzNhODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UPGRADE%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiNGIzNWM3NjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>T.S</dc:creator></item><item><title><![CDATA[Houdini Pythonでsticky noteテンプレートを作る（備忘録6）]]></title><description><![CDATA[
 複雑なネットワークを見やすくするためにsticky noteを使いたい
Houdiniのネットワークが複雑になると、どの部分でどのような作業をしたのか見失いやすくなります。そこで私は、各ノードの役割や作業内容を分かりやすくするために、sticky noteを用いてラベルを配置する方法を採用しています。しかし、毎回手動でsticky noteを作成し、位置を調整し、テキスト入力やフォントサイズの変更を行うのは非常に手間です。そこで、よく使う設定をテンプレート化し、Pythonスクリプトを使ってワンクリックで配置できるように工夫しました。


 環境
Windows10 Pro
Houd...]]></description><link>https://zenn.dev/mj31000/articles/5653030b728976</link><guid isPermaLink="true">https://zenn.dev/mj31000/articles/5653030b728976</guid><pubDate>Sun, 01 Jun 2025 00:19:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D7moA2my--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Houdini%2520Python%25E3%2581%25A7sticky%2520note%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B26%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidetake%2520Miyajima%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExNjJkNGI2MjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hidetake Miyajima</dc:creator></item><item><title><![CDATA[Pythonの range() の使い方と注意点]]></title><description><![CDATA[
 はじめに
Pythonで繰り返し処理を書くときに、よく登場するのが range() 関数です。
特に、for 文と一緒に使うことで「指定した回数だけ繰り返す」や「インデックス付きで処理をする」といった場面で重宝します。
本記事では、range() の基本的な使い方と注意点について解説します。

 1. 基本の使い方
range() は、指定した範囲の「整数の連続した値」を生成する関数です。
temp = range(5)
print(list(temp))  # [0, 1, 2, 3, 4]


range(n) と書くと、0から n-1 までの整数が生成されます（n は含まれない...]]></description><link>https://zenn.dev/fd2025/articles/21963cf5742ba9</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/21963cf5742ba9</guid><pubDate>Sat, 31 May 2025 23:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9BwsBaNy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%2520range%2528%2529%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[プログラミング学習で挫折しないためにどのようなマインドセットを持つべきか]]></title><description><![CDATA[プログラミング学習は挫折する人が多いみたいです。実際に調べてないので真意は分かりませんが、ネットには9割挫折するなんて書いてますね。（誘い文句だとは思いますが、、、）
ですが、私自身、学生の頃に一度挫折していますし、同じく挫折しそうな人はいると思います。あるいは私には無理だと思って足踏みしている方も。
そんな方が一人でも減れば万々歳ということで、個人的に持っておくべきだと思うマインドセットを紹介します。

 自分で乗り越える癖をつける
何か起きたときに自分で乗り越えようとしない人にとってプログラミングは難しいと思います。
プログラミングは、トライ＆エラーの連続。エラーが出たとき、「誰かに...]]></description><link>https://zenn.dev/python_academia/articles/fbb51eb2279844</link><guid isPermaLink="true">https://zenn.dev/python_academia/articles/fbb51eb2279844</guid><pubDate>Sat, 31 May 2025 22:27:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---z1AHU_P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25A7%25E6%258C%25AB%25E6%258A%2598%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2581%25A9%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4%25E3%2581%25B9%25E3%2581%258D%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Python%25E3%2582%25A2%25E3%2582%25AB%25E3%2583%2587%25E3%2583%259F%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NzE0ZDdkNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Pythonアカデミア</dc:creator></item><item><title><![CDATA[VSCode の Python デバッガ の機能をまとめる]]></title><description><![CDATA[意外とprintデバッグをしている人もいるような気がするのでまとめておきます。
生成AI時代だからこそコードベースがリッチになり、求められるデバッグ技術も高度になっている気がしています。

 debugpy - a debugger for Python
VSCodeではPython標準とは異なるデバッガが実装されています。
https://github.com/microsoft/debugpy
https://github.com/microsoft/vscode-python-debugger
VSCodeのPythonデバッガ(debugpy)は、言語公式のpdbからGUI 操作...]]></description><link>https://zenn.dev/headwaters/articles/edbb0d1fadf146</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/edbb0d1fadf146</guid><pubDate>Sat, 31 May 2025 14:33:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RPiBhJcc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%2520%25E3%2581%25AE%2520Python%2520%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AC%2520%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%2598%25BF%25E4%25B9%2585%25E6%25B4%25A5%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NjJhOTg2OGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>阿久津</dc:creator></item><item><title><![CDATA[はじめてのPython1: Hello, World!で学ぶ基本構文（初心者によるpython入門）]]></title><description><![CDATA[
 1,はじめに
これは、初心者のpython学習備忘録です。整理することで理解するためにやっています。

 本記事の目的
「Hello,world!」を通じてpythonの基本を学ぶことです。

 pythonが人気の理由

シンプル
読みやすい
用途が広い
の３つがあります。それぞれについて下で解説します。


 シンプル
例えば、「Hello,world!」と出力する場合
c++では
#include &lt;bits/stdc++.h&gt;
using namespace std;

int main() {
  cout &lt;&lt; "Hello, world!" &l...]]></description><link>https://zenn.dev/ripoh/articles/459495a507c5e7</link><guid isPermaLink="true">https://zenn.dev/ripoh/articles/459495a507c5e7</guid><pubDate>Sat, 31 May 2025 12:18:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GcYw4pq8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AEPython1%253A%2520Hello%252C%2520World%2521%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E5%259F%25BA%25E6%259C%25AC%25E6%25A7%258B%25E6%2596%2587%25EF%25BC%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258Bpython%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:w4daka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2ZjZDZhMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>w4daka</dc:creator></item><item><title><![CDATA[pythonでプライベートライブラリが使いたい]]></title><description><![CDATA[
 背景
副業で音声解析サービスを作っているんですが、バックエンドサーバーと解析モジュールでデプロイ頻度や開発者が異なるためメンテナンス性を高めたい

 目的
localとgithub actonsでプライベートリポジトリ内の別リポジトリにあるpythonライブラリをdepsとして使えるようにする

 内容
前提として対象のリポジトリでrelease tagを切っておく必要あり。
uvを使っているので以下のようにまず pyproject.toml に追記
dependencies = [
    "super_cool_dependency&gt;=0.1.0",
]

[tool.uv...]]></description><link>https://zenn.dev/kiwamizamurai/articles/c194a1323a920b</link><guid isPermaLink="true">https://zenn.dev/kiwamizamurai/articles/c194a1323a920b</guid><pubDate>Sat, 31 May 2025 09:10:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tXI4v8x8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:python%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwamizamurai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNmlfQml4aE1xOXZXUzBiSk5VZ1ZYb2ZDNkVva0toRGNkZXJzSjg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwamizamurai</dc:creator></item><item><title><![CDATA[[Python] typing.overload で引数に応じて返却値の型を変える]]></title><description><![CDATA[typing.overload を使うと、引数に応じて、返却値の型を定義できる。
https://docs.python.org/3/library/typing.html#typing.overload
例えば、キャッシュデータがあり、そこからキーを指定してデータを取り出すような関数。
from enum import Enum
from models.user import User

cached = {}

class CacheKey(Enum):
    # 現在のユーザー数
    USER_COUNT = 'USER_COUNT'
    # 直近登録されたユーザー
  ...]]></description><link>https://zenn.dev/tenkei/articles/1d3ac3efcf5b02</link><guid isPermaLink="true">https://zenn.dev/tenkei/articles/1d3ac3efcf5b02</guid><pubDate>Sat, 31 May 2025 08:48:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FevOI5LC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520typing.overload%2520%25E3%2581%25A7%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AB%25E5%25BF%259C%25E3%2581%2598%25E3%2581%25A6%25E8%25BF%2594%25E5%258D%25B4%25E5%2580%25A4%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOGQ2ZDA5MjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkei</dc:creator></item><item><title><![CDATA[関数ってどう分けたらいい？最近ぼくが意識していること]]></title><description><![CDATA[
 はじめに
「関数をどのタイミングで分けるべきか？」という問いは、初歩的なテーマに思えるかもしれません。しかし実際には、コードの読みやすさや保守性、さらにはチーム全体の生産性にも大きく関わる、非常に奥の深いトピックだと思います。
ここ半年ほど、社内のアーキテクトに相談しながら、自分なりに「関数を分ける判断」について意識的に考えるようになりました。その中で得た気づきや学びを整理し、備忘も兼ねてこの記事にまとめてみたいと思います。
サンプルコードはPythonで記述しています。
(型ヒントや構文がシンプルため)

 これまでの考え方
私自身、以前は主に以下の基準で関数を分けていました：

...]]></description><link>https://zenn.dev/pingu109/articles/47ec06ed30aff0</link><guid isPermaLink="true">https://zenn.dev/pingu109/articles/47ec06ed30aff0</guid><pubDate>Sat, 31 May 2025 08:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YqqoemX7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A9%25E3%2581%2586%25E5%2588%2586%25E3%2581%2591%25E3%2581%259F%25E3%2582%2589%25E3%2581%2584%25E3%2581%2584%25EF%25BC%259F%25E6%259C%2580%25E8%25BF%2591%25E3%2581%25BC%25E3%2581%258F%25E3%2581%258C%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keisuke%2520Ota%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1YWJhYzdlNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keisuke Ota</dc:creator></item><item><title><![CDATA[【Python - Pandas】概要とチュートリアル]]></title><description><![CDATA[PythonのライブラリであるPandas。
その概要とチュートリアルをまとめる。]]></description><link>https://zenn.dev/takami544/books/cb56b4af6f0bad</link><guid isPermaLink="true">https://zenn.dev/takami544/books/cb56b4af6f0bad</guid><pubDate>Sat, 31 May 2025 06:48:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HFtYnvXB--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hYjY0NzI1N2UxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>TS</dc:creator></item><item><title><![CDATA[🔐 Flaskパスワード暗号化とセキュリティ対策]]></title><description><![CDATA[
 📝 はじめに
ユーザー登録やログイン機能を作るとき、パスワードを安全に保存することはとても重要です。パスワードをそのまま保存してしまうと、情報漏えいのリスクが高くなります。また、アプリケーションの信頼性も大きく下がってしまいます。
このページでは、Flaskで使えるパスワード暗号化の方法と、合わせて行いたいセキュリティ対策の基本を詳しく紹介します。

 🔐 パスワードをハッシュ化する理由
「暗号化」ではなく、実際には「ハッシュ化（hash）」という方法を使います。

ハッシュ化とは、一方向の不可逆変換。元のデータに戻すことはできません
パスワードをハッシュ化して保存すれば、データベー...]]></description><link>https://zenn.dev/oit2003/articles/3e4b88664afe59</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/3e4b88664afe59</guid><pubDate>Sat, 31 May 2025 05:24:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DoaiaGK5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Flask%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E6%259A%2597%25E5%258F%25B7%25E5%258C%2596%25E3%2581%25A8%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[焼酎と清酒、ワインとチーズの関係]]></title><description><![CDATA[

 家計支出の相関関係
前回の記事で、AIの力を借りて、総務省が発表している家計調査をグラフにするツールを作りました。
!
総務省家計調査は、様々な品目の支出金額などを、都市別で集計した統計データです。690項目ｘ52都市（県庁舎在地＋政令都市）のデータが含まれています。

このツールを使って、いろんな品目をみていくと、それぞれの品目の相関関係を見たくなってきました。ぱっと見、九州地方では焼酎をよく飲むが、清酒はあまり飲まない傾向にあるように見えました。
焼酎の支出金額１位は、ダントツで宮崎市。そして、鹿児島市、熊本市、大分市、北九州市と。九州勢で占められています。九州男児（女子も）で...]]></description><link>https://zenn.dev/codelab_zero/articles/250521_article_2</link><guid isPermaLink="true">https://zenn.dev/codelab_zero/articles/250521_article_2</guid><pubDate>Sat, 31 May 2025 04:23:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PV7KuME5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25BC%25E9%2585%258E%25E3%2581%25A8%25E6%25B8%2585%25E9%2585%2592%25E3%2580%2581%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A8%25E3%2583%2581%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540zero%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@zero</dc:creator></item><item><title><![CDATA[RustでPyO3＋maturin環境の非破壊stubgenerator]]></title><description><![CDATA[
 はじめに
久しぶりの投稿になります。
今回は、RustのPyO3で使われるアトリビュートを解析し、既存のコードを壊さずにPythonのスタブファイル（.pyi）を生成するサブコマンドを作成したお話を紹介します。

 作成の経緯
PythonでGUIアプリケーションを開発する中で、MVVMアーキテクチャを採用し、ViewとViewModelはPythonで、Model部分をRustで実装しようと考えました。
PyO3とMaturinを使ってRustコードをPythonにバインドする際、Rust関数の変更がPython側からもすぐに把握できるようにしたくなりました。
そのため、Rustの...]]></description><link>https://zenn.dev/tikuwabu/articles/2fe5cb46f65efb</link><guid isPermaLink="true">https://zenn.dev/tikuwabu/articles/2fe5cb46f65efb</guid><pubDate>Sat, 31 May 2025 03:23:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E2SpmOj1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7PyO3%25EF%25BC%258Bmaturin%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AE%25E9%259D%259E%25E7%25A0%25B4%25E5%25A3%258Astubgenerator%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxMjdmZjRiODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item><item><title><![CDATA[Spark 4.0 でヒストグラムのplotを試してみる]]></title><description><![CDATA[
 Spark 4.0 で追加された DataFrame.plot
Spark 4.0がリリースされ、pysparkのデータフレームにplot()メソッドが追加された模様。
これまで自前でヒストグラムをプロットする関数を用意していたものの、ネイティブでプロットできるのであればありがたい。
ヒストグラムをプロットする関数について:


 pyspark.sql.DataFrame.plot を試してみる
適当なparquetファイルからデータフレームを作成
df = spark.read.parquet("test_data.parquet")
df.show(10)
+---+-----...]]></description><link>https://zenn.dev/rin_yokoyama/articles/dac185088ad0e7</link><guid isPermaLink="true">https://zenn.dev/rin_yokoyama/articles/dac185088ad0e7</guid><pubDate>Sat, 31 May 2025 00:56:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tq290VZ_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spark%25204.0%2520%25E3%2581%25A7%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AEplot%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rin%2520Yokoyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzBYWlVIcEZaNHhRWTM1STNmTFJaTnQ1VVRMaUd5N1l4T05fMVVwNWR6d2VMaWN3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rin Yokoyama</dc:creator></item><item><title><![CDATA[CUDAプログラミング学習環境をAzureで構築する]]></title><description><![CDATA[
 CUDAプログラミング学習環境をAzureのVMで構築する

 1. はじめに
この記事では、主にGPUコーディングの勉強を目的とした、クラウド上のCUDAプログラミング環境構築の方法を紹介しています。GPUプログラミングの実行環境が欲しいが、Google Colabでは物足りなさを感じているという人の役に立てばと思っています。
なお、参考までにですが、私がCUDAプログラミング環境構築に至り、記事化しようとした背景です。

NVIDIAのCEO（革ジャン）お墨付きのGPUプログラミング教科書、Programming Massively Parallel Processors（以下、...]]></description><link>https://zenn.dev/bobtk/articles/a84b26b46c6149</link><guid isPermaLink="true">https://zenn.dev/bobtk/articles/a84b26b46c6149</guid><pubDate>Fri, 30 May 2025 23:54:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0vHFN80b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CUDA%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Azure%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BC%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmE0SzgwSm1KVXMyRnZObHcwNjNUdkJVM3N2OGFXZHFpZ1VOVndvMmhMPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぼぶ</dc:creator></item><item><title><![CDATA[【公開】SVGをPNG/JPGに高精度変換する自動スクリプト「svg2img」を作った話]]></title><description><![CDATA[将棋AI「将棋神やねうら王（MyShogi）」の局面図や、ブラウザからしか保存できないSVG画像を高品質なPNG/JPG画像に変換するPythonスクリプトを作ったので、ここで紹介します。


 🧩 なぜ作ったか？
将棋神やねうら王を使って研究していると、「局面図を画像として保存したい」というニーズがある。しかし――

出力は SVG形式のみ

SNSやブログでは JPG/PNGしか使えない

手作業で変換するのはめんどくさい
ネットのSVG→PNG変換ツールは 精度がバラバラで信用できない


……という状況。
自分用に、高精度・完全自動・信頼性重視の変換スクリプトを作ったらかなり便利...]]></description><link>https://zenn.dev/yahoike/articles/161b4797c8b4ad</link><guid isPermaLink="true">https://zenn.dev/yahoike/articles/161b4797c8b4ad</guid><pubDate>Fri, 30 May 2025 14:59:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7phVol2z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591SVG%25E3%2582%2592PNG%252FJPG%25E3%2581%25AB%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2580%258Csvg2img%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2582%25B1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1M2E0NzJkY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>イケ</dc:creator></item><item><title><![CDATA[Youtubeの動画をpythonでMP4形式にする方法]]></title><description><![CDATA[
 はじめに
こんにちは！株式会社ヘッドウォータースの新卒2年目の矢野と申します。
この記事では、YouTubeの動画をPythonを使ってMP4形式でダウンロード・保存する方法を紹介します。
「動画を保存して、後から見返したい」という用途で使えるものです。
今回は yt-dlp という強力なライブラリを使って、コマンドラインだけでなくPythonスクリプト内で完結する形にします。


 使用技術

Python 3.x

yt-dlp（youtube-dlの後継であり、より強力かつ保守されているツール）



 概要
以下のような流れで、YouTubeの動画をMP4形式でダウンロードし...]]></description><link>https://zenn.dev/headwaters/articles/9f7a518116b22d</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/9f7a518116b22d</guid><pubDate>Fri, 30 May 2025 11:19:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aBi8vxAr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2581%25AE%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592python%25E3%2581%25A7MP4%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%259F%25A2%25E9%2587%258E%25E3%2580%2580%25E9%2599%25BD%25E8%25BC%259D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVhV2x5S1Rkc0NXVEVrV20wREF0UEx0dnN0VXpsaTBIQU1LZVZySzFaOXI1WmNRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>矢野　陽輝</dc:creator></item><item><title><![CDATA[【初心者OK】Blender自動化アドオンをPythonで開発！制作〜公開まで完全ガイド]]></title><description><![CDATA[
 はじめに
3Dモデリングをしていて「似たような作業を何度も繰り返すのが面倒」と感じたことはありませんか？
私自身、背景小物やアセットを配置する際に「整列」「間隔調整」「ランダム配置」などを毎回手動で行っており、地味に時間がかかっていました。
そこで今回は、BlenderのPython APIを使って、自分専用の自動化アドオンを作成し、作業効率を大幅に改善した実例をご紹介します。
このブログでは、以下のようなことが学べます：

Blenderアドオンの基本構造と開発の流れ
実際に使える自動配置ツールの紹介とコード解説

Python初心者でも実装できる内容にしているので、ぜひ最後までご...]]></description><link>https://zenn.dev/tkagawa/articles/874418558730c0</link><guid isPermaLink="true">https://zenn.dev/tkagawa/articles/874418558730c0</guid><pubDate>Fri, 30 May 2025 08:49:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tw87xRYq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585OK%25E3%2580%2591Blender%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2582%25A2%25E3%2583%2589%25E3%2582%25AA%25E3%2583%25B3%25E3%2582%2592Python%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2581%25E5%2588%25B6%25E4%25BD%259C%25E3%2580%259C%25E5%2585%25AC%25E9%2596%258B%25E3%2581%25BE%25E3%2581%25A7%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TKAGAWA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmItNzBTcWtSV0lHT2NDd1pMa05ocjBHamo0YlRBWmZWa1Vhamk0dnJKYXlualBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TKAGAWA</dc:creator></item></channel></rss>