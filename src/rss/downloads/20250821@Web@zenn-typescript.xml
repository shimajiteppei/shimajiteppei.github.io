<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 21 Aug 2025 04:49:33 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScript Mapped Types 公式ドキュメント]]></title><description><![CDATA[
 はじめに
TypeScript の Mapped Types（マップ型） は、既存の型を基に新しい型を生成する機能です。
TypeScript 公式ドキュメントの内容に基づき、Mapped Types の基本概念から応用的な使用方法まで、コード例とともに解説します。

 Mapped Types
繰り返しを避けたい場合、ある型を別の型に基づいて作成する必要があることがあります。
Mapped Types は、インデックスシグネチャの構文に基づいて構築されます。インデックスシグネチャは、事前に宣言されていないプロパティの型を宣言するために使用されます：
type OnlyBoolsAn...]]></description><link>https://zenn.dev/aoken/articles/typescript-mapped-types-official-docs</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-mapped-types-official-docs</guid><pubDate>Thu, 21 Aug 2025 01:01:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eFsZGw71--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Mapped%2520Types%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[TypeScript Conditional Types 公式ドキュメント]]></title><description><![CDATA[
 はじめに
TypeScript の Conditional Types は、入力の型に基づいて型を決定する仕組みです。
TypeScript 公式ドキュメントの内容に基づき、Conditional Types の基本概念から応用的な使用方法まで、コード例とともに解説します。

 Conditional Types
多くの有用なプログラムの中核では、入力に基づいて決定を下す必要があります。JavaScript プログラムも例外ではありませんが、値を簡単に内省できるという事実を考えると、これらの決定は入力の型にも基づいています。Conditional Types は、入力と出力の型の関係...]]></description><link>https://zenn.dev/aoken/articles/typescript-conditional-types-official-docs</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-conditional-types-official-docs</guid><pubDate>Wed, 20 Aug 2025 05:04:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6FkO01ZV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Conditional%2520Types%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[Relay ResolversでクライアントサイドのGraphQLスキーマを拡張する]]></title><description><![CDATA[GraphQLでデータを取得していると、UIの都合でどうしても取得後のデータを加工したいケースが時々発生します。
今回はRelay Resolversを使ってクライアントサイドでGraphQLのスキーマを拡張し、データを任意の形式に加工する方法を紹介します。

 前提

GraphQLクライアントはRelayを使用
サーバーがRelayのGraphQL Server Specificationを正しく実装している


 Relay Resolversとは
Relay Resolverとは、クライアントでのみ使用するデータをスキーマに定義できる仕組みです。
例えば、以下のような独自のフィー...]]></description><link>https://zenn.dev/plan_b/articles/cd6994a61cfd2d</link><guid isPermaLink="true">https://zenn.dev/plan_b/articles/cd6994a61cfd2d</guid><pubDate>Wed, 20 Aug 2025 01:09:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TVOMF-Zz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Relay%2520Resolvers%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AEGraphQL%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592%25E6%258B%25A1%25E5%25BC%25B5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sho%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5NWExMDlmYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PLAN-B%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MzFhYzYwZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sho</dc:creator></item><item><title><![CDATA[TypeScript & GraphQL でToDoアプリを開発する #7]]></title><description><![CDATA[
 ⬅️前回の記事はこちら
https://zenn.dev/agent_grow/articles/939d9197dd87c5

 ⭐️日本語/英語切り替え機能を実装
frontend/に国際化（i18n: internationalization）パッケージをインストール
% npm install @nuxtjs/i18n
frontend/にi18n/locales/en.jsonを作成

en.json
{
    "title": "To-Do",
    "new_task": "Enter a new task",
    "add": "Add",
    "edit...]]></description><link>https://zenn.dev/agent_grow/articles/34e1fba0f7aa01</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/34e1fba0f7aa01</guid><pubDate>Tue, 19 Aug 2025 23:00:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IoBwzJUq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%2526%2520GraphQL%2520%25E3%2581%25A7ToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2520%25237%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%25A2%25E3%2583%25A9%25E3%2582%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMWU4MWVlNDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>モラウ</dc:creator></item><item><title><![CDATA[TypeScript Indexed Access Types 公式ドキュメント]]></title><description><![CDATA[
 はじめに
TypeScript の Indexed Access Types は、他の型から特定のプロパティを検索するために使用する型です。
この記事では、TypeScript 公式ドキュメントの内容に基づき、Indexed Access Types の基本概念から実践的な使用方法まで、コード例とともに解説します。

 Indexed Access Types
別の型の特定のプロパティを検索するために indexed access type を使用できます：
type Person = { age: number; name: string; alive: boolean };
ty...]]></description><link>https://zenn.dev/aoken/articles/typescript-indexed-access-types-official-docs</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-indexed-access-types-official-docs</guid><pubDate>Tue, 19 Aug 2025 16:04:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f-CFAuL9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Indexed%2520Access%2520Types%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[Motion × グローバルステート管理（Context/Redux）でExitアニメーションがパッと消えた件]]></title><description><![CDATA[
 はじめに
こんにちは！PortalKeyの渋谷です。
今回はMotion（旧Framer Motion）についてです。
https://motion.dev/
Motionは簡単に言うとアニメーションが簡単につけられてすごい！というライブラリです。
今記事はMotionの詳しい使用方法等は省きます。
現在開発中のプロジェクトではReduxを用いて開発を行っています。
https://react-redux.js.org/
いい感じに機能が揃ってきたのでアニメーションを入れよう！という後づけの形でアニメーションを付ける際にMotionを使用したのですが、Exitアニメーションを設定して...]]></description><link>https://zenn.dev/portalkeyinc/articles/6538b333678251</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/6538b333678251</guid><pubDate>Tue, 19 Aug 2025 08:25:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nAtEA6KI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Motion%2520%25C3%2597%2520%25E3%2582%25B0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2588%25E7%25AE%25A1%25E7%2590%2586%25EF%25BC%2588Context%252FRedux%25EF%25BC%2589%25E3%2581%25A7Exit%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258C%25E3%2583%2591%25E3%2583%2583%25E3%2581%25A8%25E6%25B6%2588%25E3%2581%2588%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:da-shibuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR2Y0dCWGJ5bmIwc3k4TnQyZll4aU8xQ2xBN1ZwNzAtR2RJeTR4WW1uc2JEMEhRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>da-shibuya</dc:creator></item><item><title><![CDATA[zodでスキーマが可変のときのバリデーションを実装する]]></title><description><![CDATA[テナントごとにデータのスキーマが違ったりするときに、zodでバリデーションを行えるのでは？と思い立ち試しにやってみたそれの備忘録です。

 key-valueのペアからオブジェクトを作る
最初にkey-valueのペアの配列からオブジェクトを作れることを確認しました。以下のようにコードを書きました。
const inputs = [
  { key: "name", value: "Hanako" },
  { key: "age", value: 25 },
  { key: "email", value: "hanako@example.com" },
];
  
const obj...]]></description><link>https://zenn.dev/baba0119/articles/a766a9db54df8f</link><guid isPermaLink="true">https://zenn.dev/baba0119/articles/a766a9db54df8f</guid><pubDate>Tue, 19 Aug 2025 06:22:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kgYRLcFu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:zod%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%258C%25E5%258F%25AF%25E5%25A4%2589%25E3%2581%25AE%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:varvar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0ZGI3ZTBiMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>varvar</dc:creator></item><item><title><![CDATA[AI開発に適した言語とは？Python以外の最強言語もご紹介！]]></title><description><![CDATA[AI開発というと、まず思い浮かぶのはPythonですよね。でも実は、Python以外にも優秀な選択肢があるんです。
今回は、AI開発に適した言語の特徴から、Python以外の最強言語まで、実践的な視点でご紹介していきます。
また、本記事に辿り着いた方は個人でAI開発へ着手することに興味をお持ちかもしれません。そういった方へ向けたAIエンジニアに必要なものについて解説した記事がありますので、よろしければそちらも参考にしてください。
参考: AI開発の勉強は独学でもできる！初心者がAIエンジニアに必要な知識や必要勉強時間の解説 - Leograph株式会社

 AI開発の基本
プログラミング...]]></description><link>https://zenn.dev/kodamaleograph/articles/92b832dac239dd</link><guid isPermaLink="true">https://zenn.dev/kodamaleograph/articles/92b832dac239dd</guid><pubDate>Tue, 19 Aug 2025 04:50:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nU0toL6z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E9%2581%25A9%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FPython%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E6%259C%2580%25E5%25BC%25B7%25E8%25A8%2580%25E8%25AA%259E%25E3%2582%2582%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25A4%25E3%2583%2581%25E3%2583%25BB%25E3%2583%25AC%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnRtODctbUZWbVRicDlZUFNMaW9sNjZpQ1UxR0ZSU09SMmp2WExtdzhvUkh4MlV3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ケーイチ・レオ</dc:creator></item><item><title><![CDATA[【個人開発】Next.jsで犬タイプ診断アプリを作りました！]]></title><description><![CDATA[
 はじめに
12問の質問に答えることで、あなたの性格を10種類の犬タイプに分類するWebアプリケーションを作成しました🎉
https://dog-type-test.vercel.app/
↓実際のコードも公開しています
https://github.com/tsunadog/dog-type-test
この記事では、Next.jsを学び始めた初学者が、犬タイプ診断アプリを一から作ってみた過程と、その中で気づいたことや学びを紹介します。

 作成の経緯
自己紹介が遅れましたが、私は現在フロントエンドエンジニアへ転職を目指してNext.jsを勉強中です！
前職ではWebデザイナー（といっ...]]></description><link>https://zenn.dev/tsunadog/articles/fa489e8f1f6ccc</link><guid isPermaLink="true">https://zenn.dev/tsunadog/articles/fa489e8f1f6ccc</guid><pubDate>Tue, 19 Aug 2025 01:32:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PXU8Y67u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591Next.js%25E3%2581%25A7%25E7%258A%25AC%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E8%25A8%25BA%25E6%2596%25AD%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsunadog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZDZiMjViNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsunadog</dc:creator></item><item><title><![CDATA[【エンジニア必見】テストの真価は安心開発にあり！新人を支える環境づくりの実例]]></title><description><![CDATA[
 【エンジニア必見】テストの真価は安心開発にあり！新人を支える環境づくりの実例

 💭 この記事を書こうと思ったきっかけ
※この記事はテストの書き方や技術的な手法について解説するものではありません。テストが持つ「心理的な効果」や「チーム文化への影響」について、体験談をもとにお話しします。
技術顧問として多数の企業の案件に関わっているのですが、現場を見るたびに感じることがあります。それは「テストが整備されているチーム」と「そうでないチーム」での、新しいメンバーの成長スピードの圧倒的な違いです。
特に、コード修正時の不安感に大きな差が出ます。「このコード修正、他の機能に影響しないかな......]]></description><link>https://zenn.dev/sakupanda/articles/cee53646e52ed7</link><guid isPermaLink="true">https://zenn.dev/sakupanda/articles/cee53646e52ed7</guid><pubDate>Mon, 18 Aug 2025 22:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1o5H0op6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E5%25BF%2585%25E8%25A6%258B%25E3%2580%2591%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E7%259C%259F%25E4%25BE%25A1%25E3%2581%25AF%25E5%25AE%2589%25E5%25BF%2583%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258A%25EF%25BC%2581%25E6%2596%25B0%25E4%25BA%25BA%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A5%25E3%2581%258F%25E3%2582%258A%25E3%2581%25AE%25E5%25AE%259F%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2581%258F%25E3%2581%2595%25E3%2581%258F%25E3%2583%2591%25E3%2583%25B3%25E3%2583%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkZjVhZGNkMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さくさくパンダ</dc:creator></item><item><title><![CDATA[[React 19] useActionState を使用したフォームの実装]]></title><description><![CDATA[React19 で導入された新しいHookの学習ついでに CRUD アプリを useActionState で書き換えたのでその作業メモです。

 useActionState とは

フォームアクションの結果に基づいて状態を更新できるフック

フォームの入力値などの状態, 送信中かどうかのフラグ, フォーム送信時に実行する関数をまとめて管理できる。

フォームの入力値などの状態
→ useState でのフォームの入力値やエラーの状態管理が不要に
送信中かどうかのフラグ
→ 処理中の状態を管理できる（送信ボタンのダブルクリック防止など）
フォーム送信時に実行する関数
→ &lt;for...]]></description><link>https://zenn.dev/chocolat5/articles/34c89c1d6a28c5</link><guid isPermaLink="true">https://zenn.dev/chocolat5/articles/34c89c1d6a28c5</guid><pubDate>Mon, 18 Aug 2025 20:17:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RhLVH7dq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%252019%255D%2520useActionState%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chocolat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1YjE4NmVjMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chocolat</dc:creator></item><item><title><![CDATA[抽象化で理解する二分探索の本質 ~ 高階関数で「めぐる式」のさらに先へ ~]]></title><description><![CDATA[
 0. ごあいさつ
こんにちは、somnicattus と申します。TypeScript を使うソフトウェアエンジニアです。
二分探索アルゴリズムを高階関数で一般化した TypeScript ライブラリ "binary-search-generalized" を公開しました。

GitHub: https://github.com/somnicattus/binary-search-generalized

npm: https://www.npmjs.com/package/binary-search-generalized


このライブラリは、二分探索の一般化として知られる「めぐ...]]></description><link>https://zenn.dev/somnicattus/articles/fcb4a9d9ba3d53</link><guid isPermaLink="true">https://zenn.dev/somnicattus/articles/fcb4a9d9ba3d53</guid><pubDate>Mon, 18 Aug 2025 14:46:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HuyJApg---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%25BD%25E8%25B1%25A1%25E5%258C%2596%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E4%25BA%258C%25E5%2588%2586%25E6%258E%25A2%25E7%25B4%25A2%25E3%2581%25AE%25E6%259C%25AC%25E8%25B3%25AA%2520%7E%2520%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A7%25E3%2580%258C%25E3%2582%2581%25E3%2581%2590%25E3%2582%258B%25E5%25BC%258F%25E3%2580%258D%25E3%2581%25AE%25E3%2581%2595%25E3%2582%2589%25E3%2581%25AB%25E5%2585%2588%25E3%2581%25B8%2520%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:somnicattus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMTUyZWZmZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>somnicattus</dc:creator></item><item><title><![CDATA[TypeScriptでDSLを解析する]]></title><description><![CDATA[今回はJavaScriptの字句解析ツールmooとパーサーツールキットnearleyを使い，TypeScriptでドメイン固有言語 (DSL) の解析を行います．

 背景
テキストで作曲する手法 (MML) では，音色の定義もテキストで行います．例えば以下のように数値を記述することで，音色パラメーターが設定されます．
'@ FA  0  ; Flute
'@ 31, 0, 0, 0, 0,64, 0, 0, 0, 0
'@ 31, 0, 0, 0, 0,64, 0, 0, 0, 0
'@ 31,14, 8,12, 3,28, 0, 2, 3, 0
'@ 18, 8, 8,10, 4, ...]]></description><link>https://zenn.dev/rerrah/articles/1bfc2db7c567cd</link><guid isPermaLink="true">https://zenn.dev/rerrah/articles/1bfc2db7c567cd</guid><pubDate>Mon, 18 Aug 2025 11:09:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cCyUq1HC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7DSL%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rerrah%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0ZDFiNzdhZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rerrah</dc:creator></item><item><title><![CDATA[TypeScriptのas型アサーションをZodで型安全に置き換える]]></title><description><![CDATA[Effective Typescriptな勢いで書いています
TypeScriptで開発していると、外部APIのレスポンスや設定ファイルの読み込みなど、実行時まで型が確定しないデータを扱うことがよくあります。このような場面でasを使った型アサーションに頼ってしまうと、ランタイムエラーのリスクが高まります。
本記事では、Zodのz.infer（型推論）、parse（ランタイム検証）、refine（カスタムバリデーション）、transform（データ変換）を使って、as型アサーションを避ける方法をまとめます。

 従来の問題：型アサーションの危険性

 Before: 型アサーション
// ...]]></description><link>https://zenn.dev/pepabo/articles/b61931ca6820ef</link><guid isPermaLink="true">https://zenn.dev/pepabo/articles/b61931ca6820ef</guid><pubDate>Mon, 18 Aug 2025 10:57:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b40OJRqp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AEas%25E5%259E%258B%25E3%2582%25A2%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592Zod%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tetsuwo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0ZTQxODhhYTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GMO%25E3%2583%259A%25E3%2583%2591%25E3%2583%259C%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlhvdUdteF9Uanh5VXdmalVwOGx3VEE2dEduVExXMXNLQzN3ck1RUTM0RERpSFJ2WGQ9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tetsuwo</dc:creator></item><item><title><![CDATA[(TS/JS) Zodで始めるデータ検証とスキーマ宣言]]></title><description><![CDATA[Zodは、TypeScript/JavaScript環境でデータの検証を行い、スキーマ宣言を通じて型安全性を強化するライブラリです。

 Zodの役割


ランタイムデータ検証

APIリクエストボディ、URLパラメータ、環境変数など、外部から受け取るデータは信頼できない
Zodを利用することで、予期しない値（型不一致・必須値の欠落など）を事前に排除できる



型の自動生成

ZodスキーマからTypeScriptの型を推論可能
型宣言と検証ロジックを別々に記述する必要がなくなる



エラーメッセージの提供

どのフィールドが、なぜ失敗したのかを明確に把握できる



メンテナンスし...]]></description><link>https://zenn.dev/hyoni/articles/a2a87aff9a0b2f</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/a2a87aff9a0b2f</guid><pubDate>Mon, 18 Aug 2025 06:22:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ERm84p7N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528TS%252FJS%2529%2520Zod%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%25A8%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E5%25AE%25A3%25E8%25A8%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[【Playwright】独自実装なしでクライアント証明書に対応する]]></title><description><![CDATA[
 概要
こんにちは、booostのバックエンドエンジニアのma_meです。
社内ポータルなど、mTLS（クライアント証明書）で保護されたサイトをE2Eテストするケースがあると思います。
Playwright v1.43以降は公式の clientCertificates API が追加され、クライアント証明書の取り回しが簡単になりましたので、その使い方を紹介します。
公式ドキュメント：https://playwright.dev/docs/api/class-testoptions#test-options-client-certificates

 clientCertificates...]]></description><link>https://zenn.dev/booost/articles/13d87fa341d95c</link><guid isPermaLink="true">https://zenn.dev/booost/articles/13d87fa341d95c</guid><pubDate>Mon, 18 Aug 2025 03:58:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bg49-cue--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Playwright%25E3%2580%2591%25E7%258B%25AC%25E8%2587%25AA%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ma_me%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2MzgwYzJkYmQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Booost%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzZjVkODUyNTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ma_me</dc:creator></item><item><title><![CDATA[Kiro + Claude Code + CodeRabbit でWordPressのカスタムブロックを作ってみた]]></title><description><![CDATA[!
構築しながら書こうとしていたスクラップはこちら。
WordPressのカスタムブロックをAgentic Codingしてみる


 きっかけ
Claude Code触ってみたいな〜と思いながら触れていなかったので、

Claude CodeでAIコーディングやってみるぞ
「Claude CodeってWordPressのカスタムブロック作れるの？」という興味

から、マイブームKiroと一緒に並走型で進めてみることにしました。
このブログを書き始めてから公開まで結構時間が経ってるのでうろ覚えなところがある＋Kiroは割と出たばっかりのプレビュー版の頃です。

 前準備

 導入するMC...]]></description><link>https://zenn.dev/hamworks/articles/6172ae2f9fce99</link><guid isPermaLink="true">https://zenn.dev/hamworks/articles/6172ae2f9fce99</guid><pubDate>Mon, 18 Aug 2025 02:42:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CKyyf-l1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kiro%2520%252B%2520Claude%2520Code%2520%252B%2520CodeRabbit%2520%25E3%2581%25A7WordPress%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A1%25E3%2581%2582%25E3%2581%258D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2N2U3ZWNkMzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEHAMWORKS%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhY2MyYjExNTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちあき</dc:creator></item><item><title><![CDATA[【TS】オブジェクト型を判定する]]></title><description><![CDATA[
 概要
Typescriptである値がオブジェクト型かどうかを判定する際に単純にtypof arg ==== 'object'だけをしていたので備忘として整理しました。
有識者の方にいろいろアドバイスをいただきました！ありがとうございます！

 結論
今回判定したいオブジェクトは、

オブジェクトリテラル
自作クラスで作成
new 

const isObject = (arg:any): arg is object =&gt; {
    if (typeof arg !== 'object' || arg === null) return false;
    if (Object...]]></description><link>https://zenn.dev/noelsun/articles/913daa33aa261d</link><guid isPermaLink="true">https://zenn.dev/noelsun/articles/913daa33aa261d</guid><pubDate>Sun, 17 Aug 2025 13:16:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eGnbXjwI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TS%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%259E%258B%25E3%2582%2592%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noelsun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEpJT01tVEphcHlKMUMxU3ZrZGpoX1p1R29tYklscy1Cc2xlb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noelsun</dc:creator></item><item><title><![CDATA[TypeScript Typeof Type Operator 公式ドキュメント]]></title><description><![CDATA[
 はじめに
TypeScript の typeof 型演算子は、値から型を取得する演算子です。JavaScript の typeof 演算子とは異なり、型コンテキストで使用されます。
TypeScript 公式ドキュメントの内容に基づき、typeof 型演算子の基本概念から制限事項まで、コード例とともに整理しています。

 The typeof type operator

 JavaScript の typeof との違い
JavaScript には式のコンテキストで使用できる typeof 演算子が既に存在します：
// "string" という文字列を出力
console.log...]]></description><link>https://zenn.dev/aoken/articles/typescript-typeof-official-docs</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-typeof-official-docs</guid><pubDate>Sun, 17 Aug 2025 13:06:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qOJNWXLb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Typeof%2520Type%2520Operator%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item><item><title><![CDATA[TypeScript Keyof Type Operator 公式ドキュメント]]></title><description><![CDATA[
 はじめに
TypeScript の keyof 型演算子は、オブジェクト型のキーからユニオン型を生成する演算子です。
TypeScript 公式ドキュメントの内容に基づき、keyof 型演算子の基本概念から実践的な使用パターンまで、コード例とともに整理しています。

 The keyof type operator

 基本的な使用方法
keyof 演算子は、オブジェクト型を受け取り、そのキーの文字列または数値リテラルのユニオン型を生成します。
type Point = { x: number; y: number };
type P = keyof Point;
//   ^? t...]]></description><link>https://zenn.dev/aoken/articles/typescript-keyof-official-docs</link><guid isPermaLink="true">https://zenn.dev/aoken/articles/typescript-keyof-official-docs</guid><pubDate>Sun, 17 Aug 2025 13:06:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uR-wZlKH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Keyof%2520Type%2520Operator%2520%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258A%25E3%2581%2591%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4YWNlZmFmMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あおけん</dc:creator></item></channel></rss>