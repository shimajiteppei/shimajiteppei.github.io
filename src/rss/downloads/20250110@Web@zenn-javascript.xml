<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 10 Jan 2025 07:10:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[タブナビング (Tabnabbing) - 知っておくべきセキュリティリスク]]></title><description><![CDATA[
 タブナビングとは
タブナビングは、ユーザーが開いているブラウザタブの内容を悪意のあるページにすり替えることで、フィッシング詐欺を実行する攻撃手法です。この攻撃は、ユーザーの注意が他のタブに移っているときに実行されることが多く、特に複数のタブを開いて作業するユーザーが標的となります。

 攻撃の仕組み

ユーザーが正規のウェブサイトを開く
そのページから新しいタブで別のページを開く
ユーザーが新しいタブに注目している間に、元のタブの内容が悪意のあるページに置き換えられる
ユーザーが元のタブに戻ったとき、偽装されたログインページなどが表示される


 実装例
以下は、シンプルな攻撃コード...]]></description><link>https://zenn.dev/susumomo/articles/e013d0fe3914ae</link><guid isPermaLink="true">https://zenn.dev/susumomo/articles/e013d0fe3914ae</guid><pubDate>Fri, 10 Jan 2025 04:21:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LfFe7lJq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BF%25E3%2583%2596%25E3%2583%258A%25E3%2583%2593%25E3%2583%25B3%25E3%2582%25B0%2520%2528Tabnabbing%2529%2520-%2520%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%25E3%2581%25B9%25E3%2581%258D%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:momo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiOTdhN2MwZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>momo</dc:creator></item><item><title><![CDATA[Node.js v23.6.0：TypeScriptサポートが登場]]></title><description><![CDATA[
Node.js v23.6.0 が最近リリースされ、大きなアップデートとして --experimental-strip-types フラグが解除されました。これにより、Node.js は追加の設定なしで TypeScript ファイルをネイティブに実行できるようになりました。

 TypeScript の重要性
TypeScript は、JavaScript にオプションの静的型付けやインターフェース、ジェネリクス、型推論などの高度な機能を追加することで、JavaScript を拡張します。これにより、大規模な JavaScript アプリケーションのデファクトスタンダードとなっていま...]]></description><link>https://zenn.dev/leapcell/articles/67ee774d4a22d1</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/67ee774d4a22d1</guid><pubDate>Thu, 09 Jan 2025 19:30:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cWOe73ni--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%2520v23.6.0%25EF%25BC%259ATypeScript%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258C%25E7%2599%25BB%25E5%25A0%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[自作のAIにソースコード投げるやつをnpmに公開した]]></title><description><![CDATA[https://zenn.dev/yamadashy/articles/ai-tool-repomix-5000-star#cli実装
たまたまTwitterで流れてきたこの投稿を見て、自分も似たようなもの作ってんだよな、やっぱり同じ考えの人って多いんだな～と思いつつ、「えっファイルの指定できないん！？！？」という驚きが。
そして上記リンクの方がまとめてくださっている類似のプロジェクトと比較しても、自作したものはカスタム性こそショボいもののClaudeから利用した際の利便性は負けてないなと感じたので、いろいろ調べつつnpmに公開してみました。
githubもほとんどprivate、ろくに...]]></description><link>https://zenn.dev/chiepu3/articles/12e5970af5e93e</link><guid isPermaLink="true">https://zenn.dev/chiepu3/articles/12e5970af5e93e</guid><pubDate>Thu, 09 Jan 2025 19:05:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JthRE3p---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%25AEAI%25E3%2581%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%258A%2595%25E3%2581%2592%25E3%2582%258B%25E3%2582%2584%25E3%2581%25A4%25E3%2582%2592npm%25E3%2581%25AB%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chiepu3%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chiepu3</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#１４ GSAP ScrollTrigger２】]]></title><description><![CDATA[
 【#１４ GSAP ScrollTrigger２】
YouTube: https://youtu.be/8uU7bjnadvg
https://youtu.be/8uU7bjnadvg
今回はScrollTriggerのオブジェクトで設定できる値について
詳しく見ていきます。
https://gsap.com/docs/v3/Plugins/ScrollTrigger/

js/main.js
// use a script tag or an external JS file
document.addEventListener("DOMContentLoaded", (event)...]]></description><link>https://zenn.dev/web_life_ch/articles/d9eac2119335d5</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/d9eac2119335d5</guid><pubDate>Thu, 09 Jan 2025 05:53:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O6eZZz-F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2591%25EF%25BC%2594%2520GSAP%2520ScrollTrigger%25EF%25BC%2592%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[思いつきで作ったAIツールが5000スターを獲得した話]]></title><description><![CDATA[とにかくケチりたい、そんな気持ちで作ったツールの話です。
元々開発にCline(Claude Dev)やAiderなどの開発ツールを駆使していました。
ただ、APIの料金が常に心配で、できる限り安く済ませたい気持ちもあり、Claude Proを契約してWeb版にファイルを1つ1つアップロードする日々を過ごしていました。
ある日それが面倒になってきて「全部1ファイルにしたらいい感じに読み込んでくれるのでは？」と思い、作ってみたら思いのほかうまくいったので公開しました。
https://github.com/yamadashy/repomix
百聞は一見にしかずということで、
こちらのデモに...]]></description><link>https://zenn.dev/yamadashy/articles/ai-tool-repomix-5000-star</link><guid isPermaLink="true">https://zenn.dev/yamadashy/articles/ai-tool-repomix-5000-star</guid><pubDate>Thu, 09 Jan 2025 00:36:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aN6-tgbG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2580%259D%25E3%2581%2584%25E3%2581%25A4%25E3%2581%258D%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C5000%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E7%258D%25B2%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamadashy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1ZVdzVUYtM0ZqUFZlT3BjY1pxZ2lXWlNmbUF1aEctQkNBenBUc0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamadashy</dc:creator></item><item><title><![CDATA[状態管理ライブラリのJotaiに入門する]]></title><description><![CDATA[
 はじめに
先日、Reactの状態管理ライブラリとして知られていたRecoilのリポジトリがアーカイブされたことが話題になりました。
https://github.com/facebookexperimental/Recoil

This repository has been archived by the owner on Jan 2, 2025. It is now read-only.

これまでRecoilを利用していた開発者も多く、戸惑った方もいるかもしれません。その中で、RecoilからJotaiへ移行したという事例も見かけるようになりました。
私自身も今回、Jotaiを...]]></description><link>https://zenn.dev/blueish/articles/8e992d1019c983</link><guid isPermaLink="true">https://zenn.dev/blueish/articles/8e992d1019c983</guid><pubDate>Wed, 08 Jan 2025 23:18:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3EJ7WzpT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AEJotai%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kiwichan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5YWRmNjMzNzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BLUEISH%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[タブレットのレスポンシブ対応：PC画面サイズの縮小版を表示する]]></title><description><![CDATA[
 概要
画面幅に基づいて適切なレイアウトを提供する実装方法を解説します。特に以下の2つのケースで、縮小表示を実現します：

小型スマートフォン（412px未満）：412px幅のレイアウトを縮小表示
タブレット（744px～1200px未満）：1200px幅のPCレイアウトを縮小表示


 コードによる実装

 1. viewport設定
(function () {
  var screenWidth = window.screen.width;
  var metaTag = document.createElement('meta');
  metaTag.name = "view...]]></description><link>https://zenn.dev/sarap422/articles/b61ea87791a81e</link><guid isPermaLink="true">https://zenn.dev/sarap422/articles/b61ea87791a81e</guid><pubDate>Wed, 08 Jan 2025 18:37:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I5OGe2wv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BF%25E3%2583%2596%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%2596%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%259APC%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AE%25E7%25B8%25AE%25E5%25B0%258F%25E7%2589%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarap422%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarap422</dc:creator></item><item><title><![CDATA[JavaとJavaScriptの根本的な相違点]]></title><description><![CDATA[JavaとJavaScriptは、それぞれ独自の特徴とアプリケーションを持つ、最も広く使用されているプログラミング言語の2つです。移植性とパフォーマンスで知られるJavaは、大規模な企業環境やAndroid開発で使用される強力な言語です。一方、JavaScriptは主にWeb開発に適用され、動的でインタラクティブなユーザー体験を可能にします。この記事では、JavaとJavaScriptの違いを紹介し、それぞれの特徴を強調して、あなたのプログラミング目標に最適なものを比較し、決定するのに役立ちます。

 Javaとは？
Javaは世界中の開発者の約35％が使用する広く使われているプログラミ...]]></description><link>https://zenn.dev/susie/articles/087a0edde683c8</link><guid isPermaLink="true">https://zenn.dev/susie/articles/087a0edde683c8</guid><pubDate>Wed, 08 Jan 2025 15:39:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lNrh6fgW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A8JavaScript%25E3%2581%25AE%25E6%25A0%25B9%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E7%259B%25B8%25E9%2581%2595%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXJGbUJlRm9GSF9MRGYyTXc4ellUbl80QVNkWE1TWjlzSkIxbFk3SFN4b2JybVZ2bz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スージー</dc:creator></item><item><title><![CDATA[JavaScriptで0パディング（ゼロパディング）を行う方法]]></title><description><![CDATA[
 0パディングとは
数値を文字として表現・表示する際に、指定された桁数に足りない分だけ左右に「0」を追加する処理のことです。
よく見る「01」とか「02」とかですね。
今回はこれのJavaScriptでの実装方法を2つご紹介したいと思います。

 String.prototype.slice()
1つ目がString.prototype.slice()を使用する方法です。
先に足りない桁数を文字列連携してString.prototype.slice()で文字列の終わりから取得します。
String.prototype.slice()は負の数を指定すると末尾から数えた値を取得できるのでそ...]]></description><link>https://zenn.dev/straw_engine/articles/299ec09ec6d824</link><guid isPermaLink="true">https://zenn.dev/straw_engine/articles/299ec09ec6d824</guid><pubDate>Wed, 08 Jan 2025 15:03:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7wZ8T5RL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A70%25E3%2583%2591%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25E3%2582%25BC%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2589%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hanatsuyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKellZZEM2T1pzUWxjdmVrSkMxZlhCOXhxcTd6bmZkMzZCdGtuT249czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hanatsuyo</dc:creator></item><item><title><![CDATA[【初級者脱却】JavaScriptの非同期通信について#2 Promiseとは]]></title><description><![CDATA[
 前書
前回、async関数の戻り値はPromiseだと書きました。
では、Promiseとは何か。

 Promiseとは
Promiseとは、非同期処理の『結果』です。
『結果』なので、処理の成否に関わらず必ず完了している必要があります。

 Promiseの状態の変遷
Pending（未解決）
処理の結果が返せる状態になる前は、Pendingの状態になります。
この状態はまだ結果を返せません。
Resolved（解決）
正常に処理が完了した場合は、その結果としてResolvedを戻り値で返します。　　
Promiseのメソッドチェーンで記述した場合、Resolvedが返ったあとは...]]></description><link>https://zenn.dev/tkfm84/articles/15185693e6ee18</link><guid isPermaLink="true">https://zenn.dev/tkfm84/articles/15185693e6ee18</guid><pubDate>Wed, 08 Jan 2025 14:41:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1MQhWCLj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E7%25B4%259A%25E8%2580%2585%25E8%2584%25B1%25E5%258D%25B4%25E3%2580%2591JavaScript%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25232%2520Promise%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkfm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WmkwZ3dBMExsVjlLbWFxdmRPZXlpSi1vclNjeHY5ampUNFJ4Wl9xZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkfm</dc:creator></item><item><title><![CDATA[Cloudflare Workersプロキシ Request/Responseの複製時のエラーパターン]]></title><description><![CDATA[
 概要
Cloudflare Workersをリバースプロキシとして使用するとき、度々RequestとResponseの複製(clone、reconstruct)に悩まされます。
この記事ではそれらに関連して発生するエラーのパターンについて記載しています。
エラーメッセージなどでたどり着いた方の助けになれば幸いです。
Cloudflare Workersのプロキシについては以下の記事や公式Exampleが参考になります。
https://zenn.dev/yusukebe/articles/647aa9ba8c1550

 基本となるコード
Cloudflare WorkersをRou...]]></description><link>https://zenn.dev/aidemy/articles/d082d32c222bb2</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/d082d32c222bb2</guid><pubDate>Wed, 08 Jan 2025 06:09:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--85px-d-x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%2520Request%252FResponse%25E3%2581%25AE%25E8%25A4%2587%25E8%25A3%25BD%25E6%2599%2582%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:satoshun00%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3oyUWpxNG9uVFZEX1poVjMyb3p4VDRDTGdEbF9LVWR5Tl9XcGxYMEN1QWJFPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>satoshun00</dc:creator></item><item><title><![CDATA[ChatGPT API に文章のタイトルを考えてもらい、それを一覧表示する]]></title><description><![CDATA[ChatGPTを使って、文章のタイトルを考えてもらうシステム
ChatGPTに文章のタイトルをいくつか考えてもらい、そのタイトルを一覧で表示する。
手順

考えてもらうための文章を準備する
マークダウン形式でお願いする
返ってきたデータを加工する

まず、基礎となるChatGPT　APIとやりとりする大まかな方法をaxiosを使ってご紹介します・
ChatGPT APIは、modelとmessageとOpenAIで発行したKeyでやりとりすることができます。
以下の通りで出来ます。
const MODEL = "gpt-3.5-turbo"
const API_KEY = "" // O...]]></description><link>https://zenn.dev/1000_x_t30/articles/13874887b02dd8</link><guid isPermaLink="true">https://zenn.dev/1000_x_t30/articles/13874887b02dd8</guid><pubDate>Wed, 08 Jan 2025 04:40:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EV0pUtHP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%2520%25E3%2581%25AB%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AB%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2584%25E3%2580%2581%25E3%2581%259D%25E3%2582%258C%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2540ngtmtkyk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkNjk2NzYzNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka@ngtmtkyk</dc:creator></item><item><title><![CDATA[Sharp.js: 最強のNode.js画像処理フレームワーク]]></title><description><![CDATA[

 Node.js環境におけるSharpモジュールを用いた画像の効率的な処理方法
この記事では、Node.js環境においてSharpモジュールを用いて画像を効率的に処理する方法を紹介します。実際のコード例を通じて、大きな画像ファイルをネットワーク送信に適したJPEG、PNG、WebP、AVIF形式に変換する方法を示します。同時に、libvipsライブラリの強力な機能を利用して、画像処理の効率を高める方法も紹介します。

 1. Sharpモジュールのはじめに

 1.1 Sharpモジュールの紹介
視覚情報爆発の今日の時代において、画像処理技術は極めて重要になっています。Node.js...]]></description><link>https://zenn.dev/leapcell/articles/7270d133a71634</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/7270d133a71634</guid><pubDate>Wed, 08 Jan 2025 04:32:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qnoiD5IJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sharp.js%253A%2520%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AENode.js%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[input が含まれないcustom element にすれば大体解決した話]]></title><description><![CDATA[ということで 前回の話 の &lt;toggle-checkbox&gt;&lt;/toggle-checkbox&gt; の内部で使っていた input を排除した toggle-checkbox が完成しました。
ポイントとしては以下の通り

内部 checked は this.#checked に一元化
validation が必要かは ElementInternals.willValidate でチェック
validate で focus したい場合は 子として 何らかの要素が必要（自身ではダメ？
disabled の対応は別途実装必要

例: tabindex とか


spa...]]></description><link>https://zenn.dev/juners/articles/dc1d4b881879c3</link><guid isPermaLink="true">https://zenn.dev/juners/articles/dc1d4b881879c3</guid><pubDate>Wed, 08 Jan 2025 03:32:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CHWwhLK4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:input%2520%25E3%2581%258C%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584custom%2520element%2520%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258C%25E3%2581%25B0%25E5%25A4%25A7%25E4%25BD%2593%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[Reactで、Featuresにスタイルを持たないようにしてみた]]></title><description><![CDATA[
 前提

bulletproof-react を基準にしていること
tanstack-router を使用していること
react-hook-form と zod を使用していること
shadcn(UI ライブラリ)を使用していること
筆者自身に技術力を期待しないこと


 モチベーション
いつも悩んでいたのが、pages と features 両方でレイアウト（以下スタイル）を適応していた。features は、form タグの中身のレイアウトも適応させる形にしていた。
2024 年 9 月あたりで、SOLID 原則について改めて触れる機会があり、
ふと、「単一責任を考えるのであれば...]]></description><link>https://zenn.dev/nekomals/articles/b18f07095d5b86</link><guid isPermaLink="true">https://zenn.dev/nekomals/articles/b18f07095d5b86</guid><pubDate>Wed, 08 Jan 2025 02:05:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AUBgIeq4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E3%2580%2581Features%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2582%2593%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2tLcEsxSENsbUlvUWRaWkI3VXVmeGJkb0tTLWIyQ1VSWDVqYWxSbE9LeDJFQ3JVT3Yzdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うんや</dc:creator></item><item><title><![CDATA[ES6で変わったリストの巡回とイテラブル/イテレーターのプロトコル]]></title><description><![CDATA[この記事では、JavaScript ES6で導入された新しいリスト巡回方式と、それを支えるイテラブル/イテレーターのプロトコルについて解説します。

 1. 従来の方式と変化したES6でのリスト巡回

 従来のES5におけるリスト巡回
ES5では、リストを巡回するために以下のように記述していました：
const list = [1, 2, 3];

for (var i = 0; i &lt; list.length; i++) {
    console.log(list[i]);
}


list.lengthというプロパティを利用して、繰り返し条件を設定します。
インデックスiを使...]]></description><link>https://zenn.dev/heatherjin/articles/a98dc2c972abcb</link><guid isPermaLink="true">https://zenn.dev/heatherjin/articles/a98dc2c972abcb</guid><pubDate>Wed, 08 Jan 2025 01:44:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y0Z6YR3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ES6%25E3%2581%25A7%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E5%25B7%25A1%25E5%259B%259E%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%252F%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AA%25E3%2583%259C%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUQ0NnhSVTRQalhfb1c3RVMyRzQ5eS1kbXFibHp4azBWTDRGQjlCOHFuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハリボー</dc:creator></item><item><title><![CDATA[【JavaScript】Object.groupByを使って日毎の配列を作成する]]></title><description><![CDATA[こんにちは！
スペースマーケットでフロントエンドエンジニアをしているwharaguchiです。
今回は、先日あげた以下の記事に Object.groupByについてのコメントをいただいたため、そちらを試した記事になります。
https://zenn.dev/spacemarket/articles/cec64a21e2545a

 Object.groupBy とは
Object.groupByはES2024で新たに追加された静的メソッドで、特定のキーや条件に基づいてグループ化をするためのメソッドです。
先日の記事では、日をキーとした日毎の配列を作成したので確かにObject.group...]]></description><link>https://zenn.dev/spacemarket/articles/fbcb31d70aa17e</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/fbcb31d70aa17e</guid><pubDate>Wed, 08 Jan 2025 01:12:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GmW7CVij--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591Object.groupBy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2597%25A5%25E6%25AF%258E%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wharaguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMmY1NGY2MjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wharaguchi</dc:creator></item><item><title><![CDATA[Recoil 終了のお知らせ]]></title><description><![CDATA[
 Recoil 終了のお知らせ
Recoilが2025年始にarchivedされたようです。
冗長的な書き方をせずにglabal stateを扱えるライブラリだったので、度々使用していましたが、何かしらの影響で開発停止となりました。

This repository has been archived by the owner on Jan 2, 2025. It is now read-only.

https://github.com/facebookexperimental/Recoil

 理由を調べてみた
元Metaのメンテナーの方が、以下のようなポストをしていました。
ht...]]></description><link>https://zenn.dev/mk668a/articles/88685dfa915474</link><guid isPermaLink="true">https://zenn.dev/mk668a/articles/88685dfa915474</guid><pubDate>Tue, 07 Jan 2025 16:33:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d_ix3Oli--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Recoil%2520%25E7%25B5%2582%25E4%25BA%2586%25E3%2581%25AE%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNGY0NjgzMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>m</dc:creator></item><item><title><![CDATA[Node.jsのfetchでプロキシを利用する]]></title><description><![CDATA[Node.jsのv18からfetchが使えますが、このfetchは環境変数のHTTPS_PROXYやHTTP_PROXY、NO_PROXYなどに応じてプロキシを使ってくれるといったようなことはありません。
fetchを使っている箇所を適宜プロキシを使う形に書き換えるのは面倒なのと、利用しているライブラリ内でfetchを使っていると変更するのが困難な場合も発生しそうです。(実際発生してこれを書いています)

 Node.jsのfetchで環境変数に応じてプロキシを利用する方法
一律設定する方法が無いか調べたところ、Node.jsのfetchの実装として利用されているundiciのEnvHt...]]></description><link>https://zenn.dev/onozaty/articles/node-fetch-proxy</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/node-fetch-proxy</guid><pubDate>Tue, 07 Jan 2025 15:08:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9WxfBHl6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25AEfetch%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[react-queryをリコーディング | Reactでの非同期データ取得＆キャッシングのための軽量フックの紹介]]></title><description><![CDATA[皆さん、こんにちは！
私はReact Queryの基本的な機能（フェッチ、キャッシング、リトライなど）を模倣しつつ、よりコンパクトでカスタマイズしやすいパッケージとして軽量なReactフックに取り組んでいました。以下に、その内部動作の簡単な概要を、関連するコードセクションを参照しながら説明します。完全なコードを見たい場合は、リポジトリをご覧ください：
GitHubのフルソースコード。
このフックはnpmでも利用可能です：api-refetch。




 なぜ自作のフックを作ったのか？
React QueryやSWRはどちらも優れたライブラリですが、以下の理由からよりハンズオンなアプロー...]]></description><link>https://zenn.dev/aymericzip/articles/c7c8e42ac990b3</link><guid isPermaLink="true">https://zenn.dev/aymericzip/articles/c7c8e42ac990b3</guid><pubDate>Tue, 07 Jan 2025 14:26:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UzAl8wQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react-query%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2520%257C%2520React%25E3%2581%25A7%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25EF%25BC%2586%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25BB%25BD%25E9%2587%258F%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aymericzip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNDI4NDMxMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aymericzip</dc:creator></item></channel></rss>