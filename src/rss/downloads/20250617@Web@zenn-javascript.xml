<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 17 Jun 2025 05:42:35 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[🕒 JavaScriptでストップウォッチを作ってみた｜スタート・ストップ・リセット機能付き]]></title><description><![CDATA[ストップウォッチは一見シンプルなツールに見えるかもしれませんが、JavaScriptで正確なタイマー機能を実装するには、意外と多くの学びがあります。
イベント処理、時間の計算、UIの更新方法、そしてsetIntervalのドリフト問題など、さまざまな課題に直面しました。
この記事では、**JavaScript（バニラJS）**だけで構築したストップウォッチの作り方を、ソースコード付きで解説します。

🔧 ストップウォッチの基本構造（HTML）
まずは最もシンプルな構造から始めます。必要なのは、時間を表示するエリアと3つのボタン（スタート・ストップ・リセット）だけです。
html
Copy...]]></description><link>https://zenn.dev/hinatatachibana/articles/1c465bc740bab0</link><guid isPermaLink="true">https://zenn.dev/hinatatachibana/articles/1c465bc740bab0</guid><pubDate>Tue, 17 Jun 2025 04:53:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OE3KxeVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520JavaScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hinatatachibana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUJvMEJIMzFZekZyTnNpVGZYUFptSm5TVm5WVlhiRlpwN2pvdnA1S2RUOEttNFFBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hinatatachibana</dc:creator></item><item><title><![CDATA[コード品質を保つ ESLint のルール設定]]></title><description><![CDATA[
 はじめに
ESLint は JavaScript/TypeScript プロジェクトにおいて、コードの品質を保つために欠かせないツールです。適切な設定により、チーム全体でコードの一貫性を保ち、バグの早期発見やメンテナンス性の向上を実現できます。
本記事では、当プロジェクトで採用している ESLint 設定を、その目的や効果に応じて以下のカテゴリーに分類して解説します：


可読性（Readability）: コードの読みやすさを向上させるルール

メンテナンス性（Maintainability）: 長期的な保守性を高めるルール

品質・複雑性管理（Quality &amp; Comp...]]></description><link>https://zenn.dev/superstudio/articles/cf84eb91eb560e</link><guid isPermaLink="true">https://zenn.dev/superstudio/articles/cf84eb91eb560e</guid><pubDate>Tue, 17 Jun 2025 01:11:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VgytrIo5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2593%2581%25E8%25B3%25AA%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A4%2520ESLint%2520%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Mun%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4NWIxMTkzZGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SUPER%2520STUDIO%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjFmZWMwMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mun</dc:creator></item><item><title><![CDATA[配列のconstって意味なくね？の違和感から始める配列の"非"破壊的操作の勉強【Javascript/Typescript】]]></title><description><![CDATA[Typescript初心者の時にconstを使っていると、
値の変更ができないのが使いづらいと思っていたのですが、その一方で、
「配列やオブジェクトの場合はconstでも中身の値は変更できるんだ！ラッキー！」
と思ってコーディングしていました。しかしある時、
「あれ、配列の中身の値を変えれたらconst使ってる意味なくね？letで良くね？」
そんな違和感に気付いてしまったエンジニアの方々が、配列の破壊的操作と"非"破壊的操作について学ぶきっかけになればと思い、この記事を書きました

 破壊的操作とは
ここまで読んでくれた方は気付いるかもしれませんが、配列の破壊的操作とは、
配列やオブジェ...]]></description><link>https://zenn.dev/kanamo/articles/f4670121ca45cd</link><guid isPermaLink="true">https://zenn.dev/kanamo/articles/f4670121ca45cd</guid><pubDate>Mon, 16 Jun 2025 21:34:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ac_HROW4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AEconst%25E3%2581%25A3%25E3%2581%25A6%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AD%25EF%25BC%259F%25E3%2581%25AE%25E9%2581%2595%25E5%2592%258C%25E6%2584%259F%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%2522%25E9%259D%259E%2522%25E7%25A0%25B4%25E5%25A3%258A%25E7%259A%2584%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2580%2590Javascript%252FTypesc...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25AA%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZGZmMzkyOTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かなも</dc:creator></item><item><title><![CDATA[A2A JS サンプル: 映画エージェント]]></title><description><![CDATA[

 ソースコード
A2A JS サンプル: 映画エージェント

 プロジェクト概要
このプロジェクトは、A2A（Agent-to-Agent）フレームワークで構築された包括的な映画情報エージェントを実演します。このエージェントは、TMDB（The Movie Database）APIを活用して詳細な映画情報、検索機能、およびOpenRouter統合を通じたAI駆動の会話機能を提供します。

 主な機能


強化されたTMDB API統合: Bearerトークン認証を使用した現代的な実装

包括的な映画検索: 年、アダルトコンテンツなどのフィルターで映画を検索

マルチ検索機能: 映画、...]]></description><link>https://zenn.dev/czmilo/articles/1aef63f48e8750</link><guid isPermaLink="true">https://zenn.dev/czmilo/articles/1aef63f48e8750</guid><pubDate>Mon, 16 Jun 2025 07:03:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Mlr4Ujj7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:A2A%2520JS%2520%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%253A%2520%25E6%2598%25A0%25E7%2594%25BB%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:milo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1ViZDhTc2tuMVIwekdDeEdoX05MbUdISW1pV21UaDdZdnBhSmR2WDM3V2JzWlJEUks9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>milo</dc:creator></item><item><title><![CDATA[大規模 Node.js サーバーに潜むパフォーマンス上のリスクを Event Loop から理解する]]></title><description><![CDATA[潜んでいるリスク、一番苦手なリスクです！どうも、whatasoda です。
モノリシックなサービスでは、サービスの成長とともに 1 つのアプリケーションの中にさまざまな性質の処理が混在するようになります。Node.js のようなシングルスレッドで処理が実行されるランタイムでは、複数の処理を走らせる場合に 1 つしかないスレッドを取り合う形で互いの処理を待機させ合うような振る舞いをすることがあります。
技術スタックを TypeScript に統一しているダイニーでは当然バックエンドの API サーバーを Node.js 上で実行しています。過去、「注文の受付」や「会計処理」といったリアルタ...]]></description><link>https://zenn.dev/dinii/articles/f09d21542871ae</link><guid isPermaLink="true">https://zenn.dev/dinii/articles/f09d21542871ae</guid><pubDate>Mon, 16 Jun 2025 05:08:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JBN3bZzq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%2520Node.js%2520%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E6%25BD%259C%25E3%2582%2580%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E4%25B8%258A%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AF%25E3%2582%2592%2520Event%2520Loop%2520%25E3%2581%258B%25E3%2582%2589%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:whatasoda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNTVhMGJiNDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Dinii%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlZWE3MDkzNTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>whatasoda</dc:creator></item><item><title><![CDATA[【Day7】ユーザーフィードバックの収集と改善サイクル]]></title><description><![CDATA[こんにちは、Keisukeです。
個人開発7日目となり、今回はユーザーフィードバックの収集とその活用について取り組んだ内容を共有します。開発において、どんなに良い機能でもユーザーの声を反映しなければ本当の意味で価値あるものにはなりません。そこで、積極的にユーザーテストを実施し、実際の使い勝手や改善点を探るフェーズに入りました。
まず、先日実装した新機能を限定的に公開し、数名のユーザーに試してもらいました。リアルな操作感や使い勝手を確認することができ、予想以上に役立つ意見が集まりました。たとえば、操作フローの一部が分かりにくい、読み込みに時間がかかる、表示項目の説明が不足している、といった...]]></description><link>https://zenn.dev/keisuke4649/articles/675d44d92f01ec</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/675d44d92f01ec</guid><pubDate>Sun, 15 Jun 2025 22:44:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6rbH5ikU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Day7%25E3%2580%2591%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E5%258F%258E%25E9%259B%2586%25E3%2581%25A8%25E6%2594%25B9%25E5%2596%2584%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[スプレッド構文を１行で理解する【Javascript / Typescript 初心者向け】]]></title><description><![CDATA[スプレッド構文の使い方が初心者の頃はよく分かっておらず、Webで調べてみても難しい説明ばかりでなかなか理解が進まなかった記憶があるので、
簡単な文言を使って１行でスプレッド構文の使い方を説明したいと思い、記事にしました。

 解説
スプレッド構文を1行で説明すると、
配列やオブジェクトの外側の括弧 ( [], {} ) を取り除くことです。
具体的に説明すると、arrと[...arr]は同じ配列を表し、objと{...obj}は同じオブジェクトを表すことになります。
// 配列の場合
const arr = [1, 2, 3];
console.log(arr); // [1, 2, 3...]]></description><link>https://zenn.dev/kanamo/articles/39e8da9c41025d</link><guid isPermaLink="true">https://zenn.dev/kanamo/articles/39e8da9c41025d</guid><pubDate>Sun, 15 Jun 2025 22:23:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ozIWHmyn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%25A7%258B%25E6%2596%2587%25E3%2582%2592%25EF%25BC%2591%25E8%25A1%258C%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Javascript%2520%252F%2520Typescript%2520%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25AA%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4ZGZmMzkyOTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かなも</dc:creator></item><item><title><![CDATA[（失敗談）スマートフォンで操作してAWSに開発環境を作れるか]]></title><description><![CDATA[
 abstract
Androidスマートフォンで、AWSに開発環境を作れるか？
上手く行かず挫折した話。

 本論

 ここからスマートフォン
仕事で疲れ切ってるので、寝ながら趣味&amp;お勉強のために開発など出来ないか。スマホのブラウザでなんとかならないか？極力低コストで。
という不真面目極まりない動機で、眠っているAWS環境を掘り起こしてみた。
Androidアプリで AWS Console という公式アプリが有るけど、開発をするという感じではない。
ブラウザから無理矢理AWSマネジメントコンソールにサインイン！
スクリーンショット1


Cloudshellの起動は上手く行っ...]]></description><link>https://zenn.dev/mieses/articles/9b84ddeb7ababb</link><guid isPermaLink="true">https://zenn.dev/mieses/articles/9b84ddeb7ababb</guid><pubDate>Sun, 15 Jun 2025 14:58:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g9Umb_AJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2588%25E5%25A4%25B1%25E6%2595%2597%25E8%25AB%2587%25EF%25BC%2589%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25B3%25E3%2581%25A7%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6AWS%25E3%2581%25AB%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:n%25E7%2595%25AA%25E7%2585%258E%25E3%2581%2598%25E3%2581%25AE%25E3%2581%258A%25E5%258B%2589%25E5%25BC%25B7%25E8%25A8%2598%25E4%25BA%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjNENE84YzVlTlM4eGw0MlYwbFBObkdVZXhVWFdhT3cwVVZ5TldIb0pJQW00LWFmST1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n番煎じのお勉強記事</dc:creator></item><item><title><![CDATA[ツリーシェイキングと副作用 ツリーシェイキングが効く時と効かない時]]></title><description><![CDATA[
 用語の整理：「ビルド」と「バンドル」
一般的に「ビルド」は、ソースコードを本番用に変換する一連の工程全体（トランスパイル・圧縮・バンドルなどを含む広義の用語）を指します。
一方「バンドル」は、その中の一工程で、複数のファイルやモジュールを1つまたは少数のファイルにまとめる処理です。ツリーシェイキングもこのバンドル工程の中で行われます。

補足：「ビルド」と「バンドル」の関係
「ビルド」は、ソースコードを本番用に変換・最適化する全体の工程を指し、その中に「バンドル」（複数ファイルの結合）や「トランスパイル」「圧縮」などが含まれます。
「バンドル」は「ビルド」の一工程（または一形態）であ...]]></description><link>https://zenn.dev/illionillion/articles/2025-06-14-tree-shaking-and-side-effect</link><guid isPermaLink="true">https://zenn.dev/illionillion/articles/2025-06-14-tree-shaking-and-side-effect</guid><pubDate>Sun, 15 Jun 2025 13:31:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4rujHP9s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2584%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E5%2589%25AF%25E4%25BD%259C%25E7%2594%25A8%2520%25E3%2583%2584%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258F%25E6%2599%2582%25E3%2581%25A8%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVQMXV1aHVjMjhGSms3b1JxbHdRQ3BQUncyblVUMlp2SWpmYUN0VHhkM1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sei</dc:creator></item><item><title><![CDATA[登壇ノート「アプリ開発者として、フロントエンドとして考えるアプリケーションセキュリティ」]]></title><description><![CDATA[以下のイベントの登壇ノートです。
https://nishinomiya.connpass.com/event/356978/


 セキュリティを学ぼうとして手を付けるもの

 明らかな脆弱性


セキュリティを学ぼうとすると、真っ先に教わるのは「明らかな脆弱性」


書籍多数


SQLインジェクション


/user?name=' OR '1'='1 でリクエストを送るとすべてのユーザがヒットしたり：
app.get("/user", (req, res) =&gt; {
  const name = req.query.name;
  db.get(`SELECT * FROM ...]]></description><link>https://zenn.dev/rdlabo/articles/75d004ccad0d67</link><guid isPermaLink="true">https://zenn.dev/rdlabo/articles/75d004ccad0d67</guid><pubDate>Sun, 15 Jun 2025 07:09:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8Kjh1qqd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2599%25BB%25E5%25A3%2587%25E3%2583%258E%25E3%2583%25BC%25E3%2583%2588%25E3%2580%258C%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A6%258A%25E5%258E%259F%25E6%2598%258C%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPaXJOMUlrUWZNc0J2Vlljc1NzOGRGYW9USjV1TnZNTHF5TUp4cWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>榊原昌彦</dc:creator></item><item><title><![CDATA[ChatGPTでVoiceroid2の作業を効率化するWebアプリを作ってみた～その1～]]></title><description><![CDATA[
 🛠️ ChatGPTでVoiceroid2の作業を効率化するWebアプリを作ってみた～その1～

 🎬 はじめに
動画制作において、VOICEROID2で音声を合成し、動画編集ソフトへ取り込むまでの工程が煩雑で悩んでいました。本記事では、その課題を解決するためにChatGPTを活用して効率化の方法を探り、ローカル環境で動作するWebアプリケーションを構築した事例をご紹介します。
実際に利用したプロンプトも一部公開するので参考にしていただければ幸いです。

 🎯 背景と課題
VOICEROID2で音声を生成するには、以下のような手順を踏む必要があります。

喋らせるテキストを入力
音声...]]></description><link>https://zenn.dev/pwrengineer/articles/4ee18ef1828662</link><guid isPermaLink="true">https://zenn.dev/pwrengineer/articles/4ee18ef1828662</guid><pubDate>Sun, 15 Jun 2025 00:33:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u2BUUsrG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7Voiceroid2%25E3%2581%25AE%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BD%259E%25E3%2581%259D%25E3%2581%25AE1%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:PWR%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M5MTM5YzVkZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>PWR</dc:creator></item><item><title><![CDATA[【Day6】新機能の試作と実装チャレンジ]]></title><description><![CDATA[こんにちは、Keisukeです。
個人開発も6日目に入り、昨日企画した新機能の試作と実装に取り組みました。実際にコードを書いて動くものを作ることで、設計だけでは見えなかった課題や改善点が浮き彫りになりました。今回はその挑戦と学びについてまとめます。
まず、Firebaseのリアルタイム更新機能やAPI連携部分に着手しました。これまで使ったことのない技術も多く、特に非同期処理の扱いに苦戦しました。リアルタイムでデータが変わると画面表示も自動で更新される仕組みですが、その同期タイミングや処理順序の調整が思った以上に難しかったです。テストを繰り返しながら、動作の安定化を目指しました。
また、ユ...]]></description><link>https://zenn.dev/keisuke4649/articles/2062823127108d</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/2062823127108d</guid><pubDate>Sat, 14 Jun 2025 21:44:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RQrZ9GnY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Day6%25E3%2580%2591%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E8%25A9%25A6%25E4%25BD%259C%25E3%2581%25A8%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[ReactとTypeScriptでコールバック関数を理解しよう]]></title><description><![CDATA[
みなさんこんにちは。
最近はTypeScriptとReactを使ったフロントエンドのコードを書くことが増えてきました。まだまだ初学者なのですが、何かを調べていると「コールバック関数」という言葉をよく目にします。意味が曖昧なままだったので、この機会に整理して覚えようと思います。
最初は、async/awaitやuseMemo、useCallbackを使う場面でよく耳にする印象でした。


 コールバック関数とは

コールバック関数は、引数として他の関数に渡され、その関数の中で必要に応じて呼び出される関数です。呼び出されるタイミングは関数の処理の途中や後、あるいは非同期イベントが発生した時...]]></description><link>https://zenn.dev/sho0226/articles/1d93c7ee8a0ac3</link><guid isPermaLink="true">https://zenn.dev/sho0226/articles/1d93c7ee8a0ac3</guid><pubDate>Sat, 14 Jun 2025 19:13:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y4HBnwyg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8TypeScript%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzM2Y4ZjVhN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょう</dc:creator></item><item><title><![CDATA[Vercel デプロイエラーの解決方法（Next.js 15対応）]]></title><description><![CDATA[
 はじめに
Next.js 15のプロジェクトをVercelにデプロイする際に、以下のようなエラーに遭遇しました。
Error: Command "npm run build" exited with 1
ローカル環境では npm run build が正常に動作するにもかかわらず、Vercelでのデプロイが失敗するという状況でした。本記事では、このエラーの原因と解決方法について解説します。

 エラーの詳細

 環境情報

Next.js: 15.3.3
Node.js: 18.17.0以上
Tailwind CSS: v4
Vercel CLI: 41.7.8


 エラー発生時の...]]></description><link>https://zenn.dev/ryoushin/articles/027b9b8bbd9be4</link><guid isPermaLink="true">https://zenn.dev/ryoushin/articles/027b9b8bbd9be4</guid><pubDate>Sat, 14 Jun 2025 16:34:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JRSfq0fc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588Next.js%252015%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A2%2581%25E9%259C%2587%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkZGE1ZGRlZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>梁震</dc:creator></item><item><title><![CDATA[Vercelデプロイ時にCSSが崩れる問題を解決！Tailwind CSS v4の依存関係の罠]]></title><description><![CDATA[
 🚨 問題：ローカルでは動くのに本番環境でCSSが完全に崩れる
Next.js 15 + Tailwind CSS v4のプロジェクトで、以下のような症状に悩まされました：

✅ npm run dev → 正常に表示

✅ npm run build → ビルド成功

❌ Vercelデプロイ → CSSが完全に崩れる



 📝 環境
{
  "dependencies": {
    "next": "15.3.3",
    "react": "^19.0.0"
  },
  "devDependencies": {
    "@tailwindcss/postcss": "^...]]></description><link>https://zenn.dev/ryoushin/articles/45b9cac420b701</link><guid isPermaLink="true">https://zenn.dev/ryoushin/articles/45b9cac420b701</guid><pubDate>Sat, 14 Jun 2025 15:24:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FKpY3jec--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E6%2599%2582%25E3%2581%25ABCSS%25E3%2581%258C%25E5%25B4%25A9%25E3%2582%258C%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25EF%25BC%2581Tailwind%2520CSS%2520v4%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A2%2581%25E9%259C%2587%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkZGE1ZGRlZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>梁震</dc:creator></item><item><title><![CDATA[JavaScriptでABC410(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc410

 A - G1
https://atcoder.jp/contests/abc410/tasks/abc410_a
「AのうちK以上のものの個数」を出せば終わりです
https://atcoder.jp/contests/abc410/submissions/66717659
1分17秒 AC!

 B - Reverse Proxy
https://atcoder.jp/contests/abc410/tasks/abc410_b
B問題は言われたとおりやるの法則
箱にどのボールが入っているかは見ないので、箱のデー...]]></description><link>https://zenn.dev/aya_koto/articles/fc145bb59991f1</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/fc145bb59991f1</guid><pubDate>Sat, 14 Jun 2025 13:51:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jCWmb6-s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC410%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[スクロール連動URL更新とSEO対策を両立させるシングルページアプリケーションの実装]]></title><description><![CDATA[
 はじめに
モダンなポートフォリオサイトでは、スムーズなスクロール体験とSEO対策の両立が求められます。本記事では、Next.js 15を使用して、スクロールに応じてURLが変化し、各セクションが個別のURLを持ちながらも、シングルページアプリケーション（SPA）のような体験を提供する実装方法を解説します。

 実装の要件


各セクションが独立したURLを持つ - SEO対策として重要

スクロールに応じてURLが自動更新 - ユーザーの現在位置を反映

ブラウザの戻る/進むボタンが機能 - 適切なナビゲーション

直接URLアクセスで該当セクションを表示 - ディープリンク対応

...]]></description><link>https://zenn.dev/ryoushin/articles/0edb7e9cb02a86</link><guid isPermaLink="true">https://zenn.dev/ryoushin/articles/0edb7e9cb02a86</guid><pubDate>Sat, 14 Jun 2025 11:53:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FsIFVo3O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E9%2580%25A3%25E5%258B%2595URL%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%25A8SEO%25E5%25AF%25BE%25E7%25AD%2596%25E3%2582%2592%25E4%25B8%25A1%25E7%25AB%258B%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A2%2581%25E9%259C%2587%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkZGE1ZGRlZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>梁震</dc:creator></item><item><title><![CDATA[【JavaScript】typeof の使い方と注意点を解説（null や配列の扱いに注意）]]></title><description><![CDATA[
 はじめに
JavaScriptで変数のデータ型を調べるときに使われる typeof 演算子。
基本的な使い方はとてもシンプルですが、いくつか注意すべき落とし穴もあります。
本記事では、typeof の基本的な使い方から、
よくある落とし穴や、正しく型を判定するための代替手段についても解説します。

 1. typeof の基本的な使い方
typeof は、変数や値のデータ型を文字列で返す演算子です。
console.log(typeof 'hello'); // "string"
console.log(typeof 42);      // "number"
console.log...]]></description><link>https://zenn.dev/fd2025/articles/f1da66dee27db7</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/f1da66dee27db7</guid><pubDate>Sat, 14 Jun 2025 10:31:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GbaQh4tO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591typeof%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2588null%2520%25E3%2582%2584%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25AB%25E6%25B3%25A8%25E6%2584%258F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[electron + typescript + tailwind + vite の環境構築]]></title><description><![CDATA[pnpm create @quick-start/electron electron-playground --template react-ts
cd react-ts
pnpm install
pnpm install -D tailwindcss @tailwindcss/vite
electron.vite.config.ts を以下のように修正
import { resolve } from "path";
import { defineConfig, externalizeDepsPlugin } from "electron-vite";
import react from...]]></description><link>https://zenn.dev/mstn_/articles/82be50f5242599</link><guid isPermaLink="true">https://zenn.dev/mstn_/articles/82be50f5242599</guid><pubDate>Sat, 14 Jun 2025 08:23:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BJrarlRM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:electron%2520%252B%2520typescript%2520%252B%2520tailwind%2520%252B%2520vite%2520%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2drUmpodDM4dWpKbVFoTzFTYVNMeXYyRkQ3M3g0d2dUWW5fY0N3QWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ましろ</dc:creator></item><item><title><![CDATA[一日一処: TypeScriptでピラミッド建造プログラムをできるだけ長く書く]]></title><description><![CDATA[
 昔話
以前にピラミッドを建造するプログラムについての記事を投稿している。個人的には、ぎゅっと短くなったりシンプルなプログラムを好む。
https://zenn.dev/jinkutoriu/articles/ec81d4eced5dea

 モチベーション
前回はJavaScriptで可能な限り短縮を意識した記述を行った。今回はTypeScriptを使用して、できるだけ詳細で長いプログラムを書いてみる。
「プログラムを短くしよう」という考え方ももちろん大切だ。しかし、TypeScriptの機能をふんだんに用いて、具体的で正確で堅牢なものが作れるかもしれない。そして、なんといっても巨大...]]></description><link>https://zenn.dev/jinkutoriu/articles/7372822a4857c7</link><guid isPermaLink="true">https://zenn.dev/jinkutoriu/articles/7372822a4857c7</guid><pubDate>Sat, 14 Jun 2025 06:59:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AORh0zwY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%2597%25A5%25E4%25B8%2580%25E5%2587%25A6%253A%2520TypeScript%25E3%2581%25A7%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E5%25BB%25BA%25E9%2580%25A0%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E9%2595%25B7%25E3%2581%258F%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25B3%25A5%25E7%2594%259F%2520%25E7%2594%259A%25E5%258F%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZTA4MTQ0MTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鳥生 甚句</dc:creator></item></channel></rss>