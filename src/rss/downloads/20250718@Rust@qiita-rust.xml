<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/rust/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/rust/feed"/>
  <title>Rustタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでRustタグが付けられた新着記事</description>
  <updated>2025-07-18T09:07:21+09:00</updated>
  <link>https://qiita.com/tags/rust</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055264</id>
    <published>2025-07-18T09:07:21+09:00</published>
    <updated>2025-07-18T09:07:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/neko_the_shadow/items/a504308178ba6b618751"/>
    <url>https://qiita.com/neko_the_shadow/items/a504308178ba6b618751</url>
    <title>配列を一定サイズに分割する</title>
    <content type="text">配列を一定サイズに分割する方法を紹介します。
まず、n個ずつ非重複で分割したい場合はchunkを利用します。
let words = ["a", "b", "c", "d", "e", "f", "g", "h"];
for a in words.chunks(3) {
 ...</content>
    <author>
      <name>neko_the_shadow</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055263</id>
    <published>2025-07-18T09:06:24+09:00</published>
    <updated>2025-07-18T09:06:24+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/neko_the_shadow/items/6603dad02e47b4e3c8d1"/>
    <url>https://qiita.com/neko_the_shadow/items/6603dad02e47b4e3c8d1</url>
    <title>配列の要素を回転させたい</title>
    <content type="text">Rust には rotate_leftと rotate_rightというメソッドがあり、配列やベクタの要素を 指定した数だけ回転させることができます。
rotate_left(n) … 配列の要素を左にn個移動させます。先頭の要素は末尾に回り込みます。
let mut nu...</content>
    <author>
      <name>neko_the_shadow</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055236</id>
    <published>2025-07-18T06:51:59+09:00</published>
    <updated>2025-07-18T06:51:59+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tomomitsu_Keruma/items/7b3b8b3153e603d0023d"/>
    <url>https://qiita.com/Tomomitsu_Keruma/items/7b3b8b3153e603d0023d</url>
    <title>【暗号通貨・ブロックチェーンの開発】自作トークンの作成</title>
    <content type="text">spl-token をインストールする
cargo install spl-token-cli

SPLトークン作成（自作トークン）
spl-token create-token

新しいトークン（通貨やNFTのベースとなる「トークンミント」）を作成する。

トークン保...</content>
    <author>
      <name>Tomomitsu_Keruma</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2055079</id>
    <published>2025-07-17T18:53:25+09:00</published>
    <updated>2025-07-17T18:53:25+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/neko_the_shadow/items/5d068f76255d93cdbd04"/>
    <url>https://qiita.com/neko_the_shadow/items/5d068f76255d93cdbd04</url>
    <title>イテレータの最初のN個・最後のN個を取得する</title>
    <content type="text">イテレータの最初のN個の要素を取得するにはtakeを利用します。
let a = vec![0, 1, 2, 3, 4, 5];
let mut iter = a.iter().take(3);
assert_eq!(iter.next(), Some(&amp;amp;0));
asse...</content>
    <author>
      <name>neko_the_shadow</name>
    </author>
  </entry>
</feed>
