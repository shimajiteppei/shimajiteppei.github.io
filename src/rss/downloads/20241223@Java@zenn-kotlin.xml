<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 23 Dec 2024 09:10:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Windows版VS Code上のJupyterでKotlinを動かした]]></title><description><![CDATA[
 概要
Windows版Visual Studio CodeにJupyter Notebookの拡張機能をインストールして、Conda環境のPythonをインストールして、そこにkotlin-jupyter-kernelをインストールして、WindowsにJAVA_HOMEの環境変数を設定したところ、無事Kotlinを動かすことに成功した。

 環境
Windows 10
VS Code: 1.96.2
Java: 作業開始時点ではまだ入ってない
Python: 作業開始時点ではまだ入ってない
実行日: 2024/12/23

 経緯
Windows版Visual Studio Cod...]]></description><link>https://zenn.dev/i8v8c32ftf0ixdj/articles/7f1e1a157554b0</link><guid isPermaLink="true">https://zenn.dev/i8v8c32ftf0ixdj/articles/7f1e1a157554b0</guid><pubDate>Mon, 23 Dec 2024 08:38:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M2tvlF1Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E7%2589%2588VS%2520Code%25E4%25B8%258A%25E3%2581%25AEJupyter%25E3%2581%25A7Kotlin%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhMGYyMTQ1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>_</dc:creator></item><item><title><![CDATA[【Spring Boot(kotlin)】バリデーションを自作する]]></title><description><![CDATA[
 はじめに
KotlinのAnnotationsを読んでいて、annotation classを使って何かアウトプットしたいと思いこの記事を書いています。
日本の電話番号のフォーマットをチェックするためのカスタムバリデーションを作成してみました。

 作成したもの
@MustBeDocumented
@Target(AnnotationTarget.FIELD)
@Retention(AnnotationRetention.RUNTIME)
@Constraint(validatedBy = [JapanesePhoneNumberValidator::class])
annotati...]]></description><link>https://zenn.dev/ooooomu/articles/6d25ae15cc4a56</link><guid isPermaLink="true">https://zenn.dev/ooooomu/articles/6d25ae15cc4a56</guid><pubDate>Mon, 23 Dec 2024 00:27:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E4nDfjjo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%2528kotlin%2529%25E3%2580%2591%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Omu%2520%252F%2520%25E3%2581%258A%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMGNjMzFlYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Omu / おむ</dc:creator></item><item><title><![CDATA[【Jetpack Compose】脱 Tv Lazy Layout --- テスト編]]></title><description><![CDATA[
 本記事の内容
Android TV 向けのライブラリである tv-foundation 1.0.0-alpha11 にて、遂に Tv Lazy Layout が非推奨 になりました。
Tv Lazy Layout の引数である PivotOffsets に関して、デフォルト値を使用している場合は単に Tv のプレフィックスを外すだけで問題ないです。
しかし、デフォルトとは異なる値を設定している場合は、CompositionLocal を利用して BringIntoViewSpec インスタンスを配布する実装に変更する必要があります。
(詳しい内容は 移行前後の差分編, アニメーション...]]></description><link>https://zenn.dev/taked137/articles/9965f34cc1bbe8</link><guid isPermaLink="true">https://zenn.dev/taked137/articles/9965f34cc1bbe8</guid><pubDate>Sun, 22 Dec 2024 15:53:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lNO8C3ov--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591%25E8%2584%25B1%2520Tv%2520Lazy%2520Layout%2520---%2520%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taked137%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjhhOTUyYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taked137</dc:creator></item><item><title><![CDATA[K2とは？最新のKotlinコンパイラを理解しよう]]></title><description><![CDATA[
 K2とは？最新のKotlinコンパイラを理解しよう

 はじめに
投稿を始めて一週間になりました。
今回は、Kotlinの次世代コンパイラ「K2」について掘り下げていきます。
この記事を読むことで、K2の特徴、最新機能、そして導入すべきかどうか判断できる知識を得られます。
前回までの記事は以下になります。

Kotlin入門


 K2とは
K2はKotlinコンパイラの次世代バージョンを指します。
2024年現在、安定版のKotlinコンパイラは「K1」と呼ばれ、K2はその次に登場する進化版として開発されています。

 K2の特徴
K2の特徴を詳しく見ていきましょう：

 1. モ...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241222</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241222</guid><pubDate>Sun, 22 Dec 2024 13:37:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zf6odb81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:K2%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEKotlin%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[Kotlin×Gradle×JVMで実現するモジュラーモノリス]]></title><description><![CDATA[この記事は、[ispec] 医療に向き合う技術者集団の戦録 Advent Calendar 2024 の22日目の記事です！
https://adventar.org/calendars/10776

 はじめに
本記事では、KotlinとGradleを使ってモジュラーモノリスを実装する方法を解説します。モジュラーモノリスでは、アプリケーションを単一のデプロイメントユニットとして維持しながら、内部を論理的なモジュールに分割します。

 JVMシステムにおけるモジュール化の基礎

 JARファイルの役割
JVMで動作するプログラムは、一般的に「JAR（Java Archive）」という形式...]]></description><link>https://zenn.dev/ispec_inc/articles/050d00ee1c2015</link><guid isPermaLink="true">https://zenn.dev/ispec_inc/articles/050d00ee1c2015</guid><pubDate>Sun, 22 Dec 2024 03:59:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zKL0fYt3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25C3%2597Gradle%25C3%2597JVM%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AA%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:gucci%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmN2Y5YzE4ZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ispec%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2YzdmMTYwYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gucci</dc:creator></item><item><title><![CDATA[Kotlin入門: Androidアプリ開発の基本]]></title><description><![CDATA[
 Kotlin入門: Androidアプリ開発の基本

 はじめに
前回はKotlinのオブジェクト指向プログラミングの応用について学びました。
前回の記事は以下からご覧いただけます。
前回の記事
今回はKotlinを使用してのAndroidアプリ開発の基本について学んでいきます。

 Androidアプリ開発とは
Androidアプリ開発は、スマートフォンやタブレットなどのAndroidデバイス向けにアプリケーションを開発することです。
2017年にAndroid開発においてGoogleが公式にサポートするプログラミング言語であり、現在の主流の開発言語です。
Jetpack Comp...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241221</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241221</guid><pubDate>Sat, 21 Dec 2024 13:34:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3G2XpWH5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%253A%2520Android%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[spotlessでktlintをつかう]]></title><description><![CDATA[Kotlin の Formatter/Linter って何がデファクトスタンダードなんですかね…?
Spotless[1] を使って ktlint[2] による Lint/Format を行います. ktlint 単体だと Maven での設定が面倒なので, Spotless を使って設定します.
https://github.com/toms74209200/spotless-ktlint-example

 環境
Kotlin 2.0.21
Maven 3.9.9
spotless-maven-plugin 2.43.0

 使い方
spotless-maven-plugin のドキ...]]></description><link>https://zenn.dev/toms74209200/articles/kotlin-spotless-maven</link><guid isPermaLink="true">https://zenn.dev/toms74209200/articles/kotlin-spotless-maven</guid><pubDate>Sat, 21 Dec 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YpDPFg8x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:spotless%25E3%2581%25A7ktlint%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toms%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLV3Rva3h5eWFxT0M5ajlpQXhVQjF1NVlndDV3QUprRjVEc0lXcEVDNnVoUD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toms</dc:creator></item><item><title><![CDATA[Kotlin入門：オブジェクト指向プログラミングの応用]]></title><description><![CDATA[
 Kotlin入門：オブジェクト指向プログラミングの応用

 はじめに
前回はKotlinのオブジェクト指向プログラミングの基本について学びました。
前回の記事は以下からご覧いただけます。
前回の記事
今回はKotlinを使用しての課題を解決していきます。

 課題
以下の要件を満たす動物園の管理システムを作成してください

動物園には様々な動物がいます（犬、猫、鳥など）。
すべての動物は「名前」と「鳴き声」を持ちます。
特定の動物（犬や鳥）は「飛ぶ」や「走る」など特定の動作を持つことができます。
管理者はすべての動物の情報を表示する機能を持っています。


 実装
abstract ...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241220</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241220</guid><pubDate>Thu, 19 Dec 2024 22:29:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gg6GcEnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[IntelliJ Pluginの作り方（要点のみ）と作った感想]]></title><description><![CDATA[
 はじめに
IntelliJ Pluginの作り方は個人のブログでまとまっていたりするのですが、
イベントリスナーについてまで書いているものが見当たらなかったので書いて残しておくページです。

 作ったもの
https://plugins.jetbrains.com/plugin/26061-load-env-file
作った動機としては、IntellijのMarketplaceに公開されているこれ系のプラグインが自分の環境だと何故か動かなかったからです。
動いてる人もいるけど、頑張って動かすよりも自分で作った方が速そうだったので作った、というのが動機です。
project rootに...]]></description><link>https://zenn.dev/moneyforward/articles/a20a0678fca298</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/a20a0678fca298</guid><pubDate>Thu, 19 Dec 2024 08:45:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LWuLAmqw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:IntelliJ%2520Plugin%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25EF%25BC%2588%25E8%25A6%2581%25E7%2582%25B9%25E3%2581%25AE%25E3%2581%25BF%25EF%25BC%2589%25E3%2581%25A8%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sh-ogawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dQMUxWY0xrRDB3M0E3clJtNWdQRWxmUVA2aDBUdjdDakpoLXRQU3c9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sh-ogawa</dc:creator></item><item><title><![CDATA[Kotlin入門：オブジェクト指向プログラミングの基本]]></title><description><![CDATA[
 Kotlin入門：オブジェクト指向プログラミングの基本

 はじめに
前回はKotlinの拡張関数やラムダ式について学びました。
前回の記事は以下からご覧いただけます。
前回の記事
今回はKotlinを使用してのオブジェクト指向について学んでいこうと思います。

 オブジェクト指向プログラミングとは
オブジェクト指向プログラミング（OOP）は、プログラムをオブジェクト（データ）とその操作（メソッド）に分割するプログラミング手法です。
Kotlinはオブジェクト指向プログラミング（OOP）をサポートしており、クラス、継承、ポリモーフィズム、抽象クラス、インターフェースなど、OOPの基本...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241219</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241219</guid><pubDate>Thu, 19 Dec 2024 07:36:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8D5T57OD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[pigeonに入門してみた]]></title><description><![CDATA[
 What Pigeon?
以前、MethodChannelの使い方について解説した記事を書いたのですが、pigeonの解説は省いていました。
Swift、Kotlinで実装した機能から渡されるデータを型安全に扱うことができるパッケージらしい？
型安全か...
いつも気にしてない笑
以前エラーで詰まって勉強するのやめたがもしかしたら使うかもしれないのでもう一度やってみた。
今回は公式のバッテリーの残量を取得する機能を改造して、カスタムペインターで作成したバッテリーのUIを作成して、その中に数値を表示するデモアプリ作ってみました。
https://x.com/JBOY83062526/s...]]></description><link>https://zenn.dev/joo_hashi/articles/72b4746e87089d</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/72b4746e87089d</guid><pubDate>Thu, 19 Dec 2024 07:08:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jKs6ajwM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pigeon%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[Google Vision AIで支出管理🥺Kotlin × Quarkusでアプリ作ってみた]]></title><description><![CDATA[
 はじめに
※こちらはQiitaアドベントカレンダーで書いた記事となります。
この記事では Google Cloud Vision AI を使用して、レシートの店舗名・金額・購入日を読み取り、Firestoreに保存する方法 についてご紹介します。


 このアプリを作った理由
わたしは独学でこの会社に今年4月中途入社しました。振り返ると、入社してからは日々の業務に追われる中で、直近では主にテスト業務を担当していました。
そんな中、
•「何かを作って動かす楽しさ」を思い出したい
•よく行くお店で自分が一年間どのくらい浪費したのか計算したい（特にお菓子・デザート・お酒など..w）
という...]]></description><link>https://zenn.dev/kyojinnaapyon/articles/dc4139d97970de</link><guid isPermaLink="true">https://zenn.dev/kyojinnaapyon/articles/dc4139d97970de</guid><pubDate>Thu, 19 Dec 2024 04:51:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E_7abr7D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Vision%2520AI%25E3%2581%25A7%25E6%2594%25AF%25E5%2587%25BA%25E7%25AE%25A1%25E7%2590%2586%2520Kotlin%2520%25C3%2597%2520Quarkus%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NANA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JGUUpURkRTcU5McTJoV0RZMlhSaDBUUjYtbWJGd0xRQzBHTXcxaHN1cUlUR1lRbz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NANA</dc:creator></item><item><title><![CDATA[Kotlinによる関数型アプローチを活用した型安全な注文確認フロー]]></title><description><![CDATA[
!
この記事は 株式会社ログラス Productチーム Advent Calendar 2024 のシリーズ 2 19日目 の記事です。

かつ
!
この記事は毎週必ず記事がでるテックブログ Loglass Tech Blog Sprint の70週目の記事です！ 2年間連続達成まで 残り36週 となりました！

こんにちは、ログラスでエンジニアをしております南部です。
「この注文、必要なバリデーションがされずにユーザーに注文確認が実行されてない？」
コードリーディングをしていて、そんなヒヤッとする経験はありませんでしょうか。
結果問題ないことがほとんどですが、私は経験したことがありま...]]></description><link>https://zenn.dev/loglass/articles/5e08a7784981cc</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/5e08a7784981cc</guid><pubDate>Thu, 19 Dec 2024 00:43:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xit-WPpN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E6%25B3%25A8%25E6%2596%2587%25E7%25A2%25BA%25E8%25AA%258D%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2598%25E3%2583%25BC%25E3%2581%258A%25E3%2583%25BC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2IwODYzNzYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じーおー</dc:creator></item><item><title><![CDATA[OpenAIのAPIをAndroidから叩いてみる]]></title><description><![CDATA[
 はじめに
]]></description><link>https://zenn.dev/risako070310/articles/7ee4aaa93521c7</link><guid isPermaLink="true">https://zenn.dev/risako070310/articles/7ee4aaa93521c7</guid><pubDate>Wed, 18 Dec 2024 14:05:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---aXGge7k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%25E3%2581%25AEAPI%25E3%2582%2592Android%25E3%2581%258B%25E3%2582%2589%25E5%258F%25A9%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Risako%2520Kato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5ZWMzNjhiYWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Risako Kato</dc:creator></item><item><title><![CDATA[Swift SDKsを使ってAndroidでSwiftコードを動かす]]></title><description><![CDATA[
 Swift SDKsとは？
Swift 6.0から、swift sdkコマンドが追加されていることはご存知でしょうか？
Swift SDKsはSE-0387で提唱されたクロスコンパイルの仕組みで、異なるランタイム向けのビルドを簡単に行うことができます。
公式サイトではmacOSからLinux用の実行ファイルをビルドするための仕組みが紹介されています。

本記事では、この仕組みを使ってAndroidでSwiftコードを動かす最小の例を紹介します。
!
今回はApple Silicon搭載のmacを使って、Android Emulator上で動作させるものとしています。
ビルドターゲット...]]></description><link>https://zenn.dev/iceman/articles/3be478d9a20216</link><guid isPermaLink="true">https://zenn.dev/iceman/articles/3be478d9a20216</guid><pubDate>Wed, 18 Dec 2024 13:30:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--psbZiwBW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Swift%2520SDKs%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Android%25E3%2581%25A7Swift%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Iceman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiMzkxOWZhNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Iceman</dc:creator></item><item><title><![CDATA[Kotlin入門: 拡張関数やラムダ式を理解しよう]]></title><description><![CDATA[
 Kotlin入門: 拡張関数やラムダ式を理解しよう

 目次

はじめに
拡張関数とは？
ラムダ式の活用方法
高階関数の使い方
まとめ


 はじめに
前回はKotlinの基本文法について学びました。
前回の記事は以下からご覧いただけます。
前回の記事
今回は、Kotlinのモダンな特徴である拡張関数やラムダ式について学び、より高度な開発スキルを身につけましょう。


 1. 拡張関数とは？
Kotlinでは、拡張関数を利用して既存のクラスに新しいメソッドを追加できますが、クラスそのものを修正する必要はありません。
fun String.addPrefix(prefix: Strin...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241218</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241218</guid><pubDate>Wed, 18 Dec 2024 12:49:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A7kKx2kq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%253A%2520%25E6%258B%25A1%25E5%25BC%25B5%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2584%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[Jetpack Compose Navigation × トランジションで発生する Lifecycle イベントずれ問題への対処法]]></title><description><![CDATA[
 はじめに
Jetpack Compose で画面遷移を実装する際、NavHost や AnimatedNavHost を利用することで、美しいアニメーション付きの画面切り替えが可能です。
しかしこのとき、画面がまだ表示中（トランジション中）に Lifecycle.Event.ON_STOP が呼ばれてしまう という問題に遭遇することがあります。
本記事では、この問題の発生原因と、それに対処するための実例コードを紹介します。

 なぜ ON_STOP が早く呼ばれるのか？
Jetpack Compose Navigation では、新たな画面へ遷移する際に現在の画面の NavBackS...]]></description><link>https://zenn.dev/sekies/articles/bd5a4c74c20da0</link><guid isPermaLink="true">https://zenn.dev/sekies/articles/bd5a4c74c20da0</guid><pubDate>Wed, 18 Dec 2024 02:28:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DkAjUDQm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520Compose%2520Navigation%2520%25C3%2597%2520%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B8%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%2520Lifecycle%2520%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%259A...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yosuke%2520Seki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExN2NhMTMxNjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yosuke Seki</dc:creator></item><item><title><![CDATA[【入社エントリ】Septeni Japanに入社して２ヶ月が経ちました]]></title><description><![CDATA[
 はじめに

Septeni Japan株式会社でプロダクト開発を行なっているエンジニアの小塚です。
中途入社し２ヶ月が経ちました。
入社してから早速開発の方に入っているので時間の流れが早く感じていて、その分充実している感じがしています。
最も気持ちがフレッシュなうちに、当社で働く今の感情を書き残してみたいと思います。

 今までの経歴

メーカー営業 →　メーカー営業・事業企画　→ SIer（パブリッククラウドのパートナー）　→Septeni Japan
という経歴です。
エンジニアに転身したのは前職からで、それまでは事務系職種でした。ちなみに前職ではフロントエンドとバックエンド両方...]]></description><link>https://zenn.dev/septeni_japan/articles/2e759fa7612a66</link><guid isPermaLink="true">https://zenn.dev/septeni_japan/articles/2e759fa7612a66</guid><pubDate>Wed, 18 Dec 2024 01:43:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gyzdj7E_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2585%25A5%25E7%25A4%25BE%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2580%2591Septeni%2520Japan%25E3%2581%25AB%25E5%2585%25A5%25E7%25A4%25BE%25E3%2581%2597%25E3%2581%25A6%25EF%25BC%2592%25E3%2583%25B6%25E6%259C%2588%25E3%2581%258C%25E7%25B5%258C%25E3%2581%25A1%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:h_kozuka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlMzQ3Njk1ZjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Septeni%2520Japan%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlR4UWpDSnpQU241US1VRUREZy1peTduNllKUHA2bm53UlB6cUlTQWVEZ3BxT1NRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>h_kozuka</dc:creator></item><item><title><![CDATA[Kotlin入門: 基本文法をマスターしよう]]></title><description><![CDATA[
 Kotlin入門: 基本文法をマスターしよう

 はじめに
前回はKotlinの特徴と採用事例について紹介しました。
前回の記事は以下からご覧いただけます。
前回の記事
今回は、Kotlinの基本文法について学び、開発の第一歩を踏み出しましょう。

 Kotlinの基本文法

 1. 変数宣言
Kotlinでは変数の再代入の可否に応じて、以下の2種類のキーワードを使います。


val（再代入不可）

var（再代入可能）

以下のコード例を見てみましょう。
val name: String = "Kotlin"  // 再代入不可
var age: Int = 25        ...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241217</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241217</guid><pubDate>Tue, 17 Dec 2024 13:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FHnCv-Fp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%253A%2520%25E5%259F%25BA%25E6%259C%25AC%25E6%2596%2587%25E6%25B3%2595%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[Flutter側から右クリックで]]></title><description><![CDATA[
 💡Tips
Flutterで、Kotlin Nativeの設定をするときに右クリックでAndroid Studio開く方法があるメニューに表示されなくなった？
これは２年前からでしたね。2022年ごろかな。その昔からも表示されていないこともあった？
この方法は使えなかった？
https://minpro.net/the-open-android-module-in-android-studio-has-been-discontinued
開く方法はこちらの記事を参照
左上メニューからFile -&gt; Open -&gt; android/ディレクトリを選択して開く。
https:...]]></description><link>https://zenn.dev/joo_hashi/articles/2a1b6fbc8e7d54</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/2a1b6fbc8e7d54</guid><pubDate>Mon, 16 Dec 2024 23:15:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QAAc1TKX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flutter%25E5%2581%25B4%25E3%2581%258B%25E3%2582%2589%25E5%258F%25B3%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item></channel></rss>