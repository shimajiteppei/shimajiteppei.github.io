<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 02 Oct 2024 11:49:37 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Next.jsでBundle analyzerを使う方法 (windowsの人)]]></title><description><![CDATA[javascriptのバンドルサイズを測るためのモジュールbundle-analyzerを使うために公式ドキュメント通りにコードを書きましたが、うまくいきませんでした。
エラー

requireが使えない
ANALYZEが見つからない


 解決策
まず、next.config.jsファイルなのか、next.config.mjsファイルなのかを確認してください。1.next.config.jsファイルの場合は、公式ドキュメント通りに実装します。
2.next.config.mjsの場合は、以下のように設定します。

next.config.mjs
/** @type {import('n...]]></description><link>https://zenn.dev/maiamitorio/articles/2f3b4adc5d79c2</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/2f3b4adc5d79c2</guid><pubDate>Wed, 02 Oct 2024 05:43:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wTSozyBQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7Bundle%2520analyzer%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2520%2528windows%25E3%2581%25AE%25E4%25BA%25BA%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[Svelte入門(2)（途中。）]]></title><description><![CDATA[本記事は以下の記事の続きです。
https://zenn.dev/senbei139/articles/3a8adf88daefab

 はじめに
チュートリアルは以下の4部構成になっており、今回は1. Basic Svelteのうち、
Events、Bindings、Lifesycle、Storesの項目を対象とします。（1つの記事が長くなりすぎてしまうので。。）

Basic Svelte
Advanced Svelte
Basic SvelteKit
Advanced SvelteKit

https://learn.svelte.jp/tutorial/dom-events
!
...]]></description><link>https://zenn.dev/senbei139/articles/e82952ff5bea10</link><guid isPermaLink="true">https://zenn.dev/senbei139/articles/e82952ff5bea10</guid><pubDate>Tue, 01 Oct 2024 15:13:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3QlT_jdw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte%25E5%2585%25A5%25E9%2596%2580%25282%2529%25EF%25BC%2588%25E9%2580%2594%25E4%25B8%25AD%25E3%2580%2582%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:senbei139%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjYzc1N2EzMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>senbei139</dc:creator></item><item><title><![CDATA[AWS SDK for JavaScript v3 でデバッグログを出力する]]></title><description><![CDATA[
 これは何

AWS SDK for JavaScript v3 でデバッグログを出力する方法を調べたメモ
以下のドキュメントを読み解いた

https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/logging-sdk-calls.html

 適用に Node.js プロジェクトをセットアップ
mkdir app &amp;&amp; cd app
npm init -y
touch index.js

 AWS SDK for JavaScript v3 を使用するコードを書く
https://docs....]]></description><link>https://zenn.dev/noid11/articles/02b1eb2e7fa6b5</link><guid isPermaLink="true">https://zenn.dev/noid11/articles/02b1eb2e7fa6b5</guid><pubDate>Tue, 01 Oct 2024 14:40:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HI2GyYX3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520SDK%2520for%2520JavaScript%2520v3%2520%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noid11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlOWYzOTk2MDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noid11</dc:creator></item><item><title><![CDATA[JavaScript - Infinite Setter -]]></title><description><![CDATA[無限セット編
書き留めたままだったので供養。
ちょっと考えればわかるが、考えなかったので遭遇したことのメモ。

 なんの話？
Setter の定義によっては再帰的にコールされるよ、ていう話。
以降、上記のことを単に現象と書く。

 どんなことしちまったか？
下記のように class Kemomimi を定義し、そこには animalKind に対する Getter と Setter を定義した。
class Kemomimi {
  constructor(animalKind) {
    this.animalKind = animalKind;
  }
  get animalKi...]]></description><link>https://zenn.dev/ettsu/articles/ff0b12e04a873c</link><guid isPermaLink="true">https://zenn.dev/ettsu/articles/ff0b12e04a873c</guid><pubDate>Tue, 01 Oct 2024 13:51:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UBotJ1jx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%2520-%2520Infinite%2520Setter%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2581%25A3%25E3%2581%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExZDg0NjQ5YTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えっつ</dc:creator></item><item><title><![CDATA[package.jsonのscriptsを深堀りしてみた。]]></title><description><![CDATA[
 はじめに
2024年現在、cssやjsを使う多くのプロジェクトでpackage.jsonを見ることになると思います。
サーバサイド主体のプログラマーでも全く知らないと環境構築できないため必須の知識となっています。
しかし、ほとんどの人はコピペでコマンドを動かしていて、npm run が何をやっているのか知らないのではないでしょうか？
深堀してみましょう。

 scriptsはショートカット

package.json
{
    "private": true,
    "scripts": {
        "dev": "npm run development",
      ...]]></description><link>https://zenn.dev/k_tabuchi/articles/76acdabaaeaf1d</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/76acdabaaeaf1d</guid><pubDate>Tue, 01 Oct 2024 12:37:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WNLRL-EK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:package.json%25E3%2581%25AEscripts%25E3%2582%2592%25E6%25B7%25B1%25E5%25A0%2580%25E3%2582%258A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[Valtioはどのように生まれたか、3つ目のライブラリは必要だったのか？]]></title><description><![CDATA[こんにちは、Valtioの作者です。Zustand、Jotaiに続いて3つ目のライブラリも開発したわけですが、Valtioが生まれた経緯を記事にしてますので、よろしければご覧ください。
https://blog.axlight.com/posts/how-valtio-was-born/
以下、ChatGPTによる翻訳です。


 はじめに
Zustand v3と新しいJotaiをリリースした後、チーム内でグローバルステート用の別のライブラリを開発できるかどうかについて議論がありました。
この投稿では、Valtioの開発の始まりとそのAPIデザインについて振り返ります。

 最初のためら...]]></description><link>https://zenn.dev/dai_shi/articles/25eb34b1f1926b</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/25eb34b1f1926b</guid><pubDate>Tue, 01 Oct 2024 05:39:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f2rv2GR_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Valtio%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E7%2594%259F%25E3%2581%25BE%25E3%2582%258C%25E3%2581%259F%25E3%2581%258B%25E3%2580%25813%25E3%2581%25A4%25E7%259B%25AE%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AF%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[すぐ消えてしまう要素をDevToolsで確認するTips集]]></title><description><![CDATA[
 はじめに
こんばんは！
皆さんは以下のようなすぐ消えてしまう要素をDevToolsで確認したいときはどうしますか？

常に表示されるようにわざわざコードを修正してから、DevToolsで要素を確認したりしていませんか？DevToolsをうまく使うことで、わざわざコードの修正をせずとも簡単に要素の確認をできるのでそのちょっとしたTipsのご紹介です！

 ① CSSイベントでの確認方法
まずはCSSイベントで要素の表示制御を行っているパターンでの確認方法です。以下のようにCSSイベントのhoverで表示制御をしている要素を例にDevToolsで確認する方法を見ていきましょう！
impo...]]></description><link>https://zenn.dev/gemcook/articles/3e90d883100140</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/3e90d883100140</guid><pubDate>Tue, 01 Oct 2024 04:57:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---HLOwpa2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2599%25E3%2581%2590%25E6%25B6%2588%25E3%2581%2588%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592DevTools%25E3%2581%25A7%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258BTips%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:KM%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjk0ZGQyMWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KM</dc:creator></item><item><title><![CDATA[2024 JavaScript - 每日刷題任務]]></title><description><![CDATA[


2024 切版 每日任務
2024 JS 每日任務 
2024 JS 每週刷題



Since 2024-09-30

1 Even or Odd | #8kyu
Even or Odd - 偶數或奇數
目前個人等級：8 kyu

Description: 建立一個 function，使用一個整數做為參數，如果參數為偶數回傳 "Even" 如果為奇數回傳 "Odd"



 我的解法
function evenOrOdd(number) {
  return number % 2 === 0 ? 'Even' : 'Odd';
}



 反饋與思考


 最優解

Do I g...]]></description><link>https://zenn.dev/chloetseng/articles/69c83edc65283e</link><guid isPermaLink="true">https://zenn.dev/chloetseng/articles/69c83edc65283e</guid><pubDate>Tue, 01 Oct 2024 02:41:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ctv0zqRv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%2520JavaScript%2520-%2520%25E6%25AF%258F%25E6%2597%25A5%25E5%2588%25B7%25E9%25A1%258C%25E4%25BB%25BB%25E5%258B%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dolce%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmI0N2FhNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dolce</dc:creator></item><item><title><![CDATA[Chrome拡張機能にテキストファイルを埋め込む方法]]></title><description><![CDATA[
 解法
Chrome拡張機能にテキストファイルを埋め込んで利用するには、以下の手順を実行します：

マニフェストファイル（manifest.json）を作成し、テキストファイルをリソースとして宣言する
テキストファイル（例：data.txt）を作成し、必要な文字列を記述する
JavaScriptファイル（background.js）でテキストファイルを読み込む処理を実装する
作成したファイルを拡張機能としてパッケージ化する


 解説

 マニフェストファイル（Manifest V3）
{
  "manifest_version": 3,
  "name": "My Text File...]]></description><link>https://zenn.dev/nuits_jp/articles/2024-10-01-embed-text-file-chrome-extension</link><guid isPermaLink="true">https://zenn.dev/nuits_jp/articles/2024-10-01-embed-text-file-chrome-extension</guid><pubDate>Mon, 30 Sep 2024 23:38:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--84ErURGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Atsushi%2520Nakamura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kxcWVVUGV3Z1lrYXhhaE1uWW1rQnRRT0RVLWtNemJiMEhfTHo4MkE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Atsushi Nakamura</dc:creator></item><item><title><![CDATA[Rusty V8 で JavaScript のコードを実行する]]></title><description><![CDATA[
 Announcing Stable V8 Bindings for Rust
先日、Announcing Stable V8 Bindings for Rust というブログが公開され、JavaScriptエンジン 「V8」のバインディングライブラリ「Rusty V8」で初の安定版 129.0.0 をリリースしたと Deno の Ryan Dahl 氏が発表しました。

 V8 とは
まず、V8 JavaScript engine について、簡単に説明します。
V8 は Google が提供するオープンソースの JavaScript エンジンで、C++ で実装されており、主に Chr...]]></description><link>https://zenn.dev/codemountains/articles/f097d233af87f6</link><guid isPermaLink="true">https://zenn.dev/codemountains/articles/f097d233af87f6</guid><pubDate>Mon, 30 Sep 2024 13:38:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NkA3YMz2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rusty%2520V8%2520%25E3%2581%25A7%2520JavaScript%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B1%25B1%25E3%2581%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MGU2OTJiOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>山とコード</dc:creator></item><item><title><![CDATA[2024 JavaScript - 每週刷題任務]]></title><description><![CDATA[

Atomic Habits: Author James Clear mentioned that by improving just 1% every day, you can grow 37 times over the course of a year. This concept emphasizes the power of small, consistent changes—much like how atoms accumulate to create significant impact. 🚀💡


2024 切版 每日任務
2024 JS 每日任務
2024 JS 每日...]]></description><link>https://zenn.dev/chloetseng/articles/cf12f5c4936746</link><guid isPermaLink="true">https://zenn.dev/chloetseng/articles/cf12f5c4936746</guid><pubDate>Mon, 30 Sep 2024 10:49:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uCtd6ZYy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%2520JavaScript%2520-%2520%25E6%25AF%258F%25E9%2580%25B1%25E5%2588%25B7%25E9%25A1%258C%25E4%25BB%25BB%25E5%258B%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dolce%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmI0N2FhNTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dolce</dc:creator></item><item><title><![CDATA[JavaScriptで作る！ミニ言語のインタプリタ（４）〜組み込み関数]]></title><description><![CDATA[
 はじめに
前回の記事では、静的スコープの実装を行い、より直感的で予測可能な挙動のインタプリタを作ることができました。今回は、さらに機能を拡張し、入出力や数学的な操作を行う組み込み関数を実装していきます。

 組み込み関数の必要性
現在のインタプリタでは、ユーザーが定義した関数しか使用できません。しかし、実用的なプログラミング言語には、入出力や数学的な操作など、言語自体に組み込まれた便利な関数が存在します。これらの関数を「組み込み関数」と呼びます。組み込み関数を実装することで、以下のようなメリットがあります：

基本的な機能をユーザーが毎回実装する必要がなくなる
最適化された実装を提供...]]></description><link>https://zenn.dev/nextbeat/articles/41af9cf162af5b</link><guid isPermaLink="true">https://zenn.dev/nextbeat/articles/41af9cf162af5b</guid><pubDate>Mon, 30 Sep 2024 08:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tUdcPJ4B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2581%25E3%2583%259F%25E3%2583%258B%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25BF%25EF%25BC%2588%25EF%25BC%2594%25EF%25BC%2589%25E3%2580%259C%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E9%2596%25A2%25E6%2595%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kmizu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MzM5NTFkZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:nextbeat%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YlNka1h3ZXdRZENWdDRvbHk0OUkyNkgyNi1IS2k0R2phNGdJdno9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmizu</dc:creator></item><item><title><![CDATA[Scala の Wasm バックエンドを実装した]]></title><description><![CDATA[Scala.js 1.17.0 で実験的な Wasm backend がサポートされました！
https://www.scala-js.org/news/2024/09/28/announcing-scalajs-1.17.0/
リリースノートに書いてあるとおり、以下のような設定をすることでScala.jsがJSの代わりにWasmモジュール(とモジュールに渡すJS object)を生成することができます。
@JSExport によるモジュールのexportがサポートされていませんが、それ以外のsemanticsはサポートされており、既存のScala.jsアプリケーションを変更なしにWas...]]></description><link>https://zenn.dev/tanishiking/articles/2024-09-scala-wasm-backend</link><guid isPermaLink="true">https://zenn.dev/tanishiking/articles/2024-09-scala-wasm-backend</guid><pubDate>Mon, 30 Sep 2024 02:25:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QE4Mb93F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Scala%2520%25E3%2581%25AE%2520Wasm%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tanishiking%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2ZjcwZDg5NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tanishiking</dc:creator></item><item><title><![CDATA[学びをアウトプット：useEffectへの理解を深めよう！]]></title><description><![CDATA[
 はじめに
「副作用ってなに」「useEffectはどのタイミングで実行されるのか」
正直、これまであまり理解せずに実装していました。
そんな私がuseEffectについて学んだことをまとめてみました💫
同じように悩んでいる方々の手助けになれれば嬉しいです!!

 コンポーネントを純粋に保つ
useEffectを語る前にコンポーネントの純粋性について簡単にまとめます。
まず、純粋なコンポーネントとは公式には以下のように記載されてます。

冪等 (idempotent) であること
レンダリング時に副作用がない
ローカルな値以外を変更しない

原則、この純粋性に従ってコンポーネントを実装...]]></description><link>https://zenn.dev/kiman/articles/1363d33b114035</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/1363d33b114035</guid><pubDate>Mon, 30 Sep 2024 02:00:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pVLYBqrp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E3%2581%25B3%25E3%2582%2592%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25EF%25BC%259AuseEffect%25E3%2581%25B8%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2582%2592%25E6%25B7%25B1%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[2024年だけどJSのユニットテストをブラウザで動かす方法の紹介]]></title><description><![CDATA[
 できるだけnode.jsを使わずテストしたい
せっかくHotwireでnode.jsなどから解放された世界が手に入ったのに、
テスト用にnodeを動かすのはちょっともったいないなと思ったのがブラウザでユニットテストが動くかどうかを調べ始めたモチベーションでした。
特に業務で必要に駆られてというよりは単純な興味からでした。

 Mocha, Chai
Jestは無理で、ブラウザでの動作をサポートしながら一番モダンっぽいのはこれかなーという感じでした。今も使われていると思いますけど流行っていた時期もありましたよね。
https://mochajs.org/#running-mocha-i...]]></description><link>https://zenn.dev/osiro/articles/d290c38a5eba28</link><guid isPermaLink="true">https://zenn.dev/osiro/articles/d290c38a5eba28</guid><pubDate>Mon, 30 Sep 2024 01:02:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jxJr2CZg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%25E5%25B9%25B4%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9JS%25E3%2581%25AE%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:webuilder240%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxNWM3OGQwOWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OSIRO%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5OWUzODgyNWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>webuilder240</dc:creator></item><item><title><![CDATA[なんでReact Hook Formを使うの？]]></title><description><![CDATA[
 はじめに
この記事では、Reactを使用した従来のフォーム作成と「React Hook Form」を使ったフォーム作成の違いを比較します！また、React Hook Formを使用する理由と基本的な使い方について説明します。

 対象読者
この記事は、Reactを使っていて、楽にフォーム管理をしたい方向けです。
筆者はまだReact歴が浅いので、間違いがあればコメントで訂正お願いします＞＜

 今までの React のフォームの実装方法2パターン
Reactでフォームを扱う際には、「制御コンポーネント」と「非制御コンポーネント」という2つのアプローチがあります。これらは、フォームの状...]]></description><link>https://zenn.dev/utoutonissy/articles/6764804f826ab7</link><guid isPermaLink="true">https://zenn.dev/utoutonissy/articles/6764804f826ab7</guid><pubDate>Mon, 30 Sep 2024 01:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EgWEqv9U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A7React%2520Hook%2520Form%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AB%25E3%2581%25A3%25E3%2581%2597%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnhsdW1iSTdlLWZnaXBMNW9VVFBCdFN6WFdmcWxsOEZjcm5WUkh1RUJtN3dwOEdtOHI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>にっしー</dc:creator></item><item><title><![CDATA[[JavaScript]分割代入についてまとめてみた]]></title><description><![CDATA[
 はじめに
今回は配列（オブジェクト）から値（プロパティ）を取り出して、別の変数に代入することができる分割代入について気になったのでまとめてみました！
ちなみに英語では（Destructuring）と呼ぶみたいですよ！
では、やっていきましょう💁

 配列
const shoppingList = ["リンゴ", "バナナ", "レタス","トマト"];
const [apple, banana] = shoppingList; //←ココ

console.log(apple); //リンゴ
console.log(banana); // バナナ
2行目が分割代入となります。
配列の...]]></description><link>https://zenn.dev/saku_study/articles/3b48e126f168ef</link><guid isPermaLink="true">https://zenn.dev/saku_study/articles/3b48e126f168ef</guid><pubDate>Sun, 29 Sep 2024 13:50:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q4N2wtCx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZGQ5Y2M2ZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saku</dc:creator></item><item><title><![CDATA[Webの印刷ダイアログ周り知識まとめ]]></title><description><![CDATA[仕事で、javascriptのwindow.print()を使う機会がありました
そこら辺周りの知識がすっぽりなかったので、色々調べた自分用備忘録です

 window.print()とは
Web画面に表示されているものを印刷するために、印刷ダイアログを開きます
windowは省略可能なので、print()だけでも動きます
サンプルコード
&lt;button type="button" id="sample"&gt;印刷する&lt;/button&gt;
&lt;div&gt;
&lt;h1&gt;サンプル報告書&lt;/h1&gt;
&lt;h2&gt;サンプル項目1&lt;/h2&...]]></description><link>https://zenn.dev/find/articles/1f80d376afce04</link><guid isPermaLink="true">https://zenn.dev/find/articles/1f80d376afce04</guid><pubDate>Sun, 29 Sep 2024 10:21:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dgsDmQjC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2581%25AE%25E5%258D%25B0%25E5%2588%25B7%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E5%2591%25A8%25E3%2582%258A%25E7%259F%25A5%25E8%25AD%2598%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2594%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AB%25E5%25BD%25A9%25E4%25B9%2583%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1ODc5ZGEzMTcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEfind%2520%257C%2520%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E7%2589%25A9%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNTRmNDRjMjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピックル彩乃</dc:creator></item><item><title><![CDATA[JavaScriptちょっとわかる]]></title><description><![CDATA[本の対象者は変数とか関数とかルールをわかっている人を対象とします。この本は本業でTypeScriptを使うことがある筆者がJavaScriptの文法で普段使わない文法への理解が足りなかったり忘れていて困ったことが合ったのでアウトプットもかねて本を作ることにしました。

Reactを書いているときなどによく使うであろう文法なども紹介しつつ進めていこうと思います。

著者: Junichi Hashimoto]]></description><link>https://zenn.dev/jboysan/books/c479fd813801f2</link><guid isPermaLink="true">https://zenn.dev/jboysan/books/c479fd813801f2</guid><pubDate>Sun, 29 Sep 2024 07:13:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4ac6zUCN--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mZmYzZGIwMWRiLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>orechen422dazo</dc:creator></item><item><title><![CDATA[各言語の日本語文字変換ライブラリ一覧]]></title><description><![CDATA[（随時更新中、補足や他の言語についてはコメント欄で教えて下さい）

 凡例

 列名


名前：ライブラリ名（リンクはレジストリまたはレポジトリのホームページ）

作者：作者名・作者ID（リンクはGitHub等のリンク）

利用：利用ライセンス

（言語名）：サポートされている言語のバージョン

ひ⇆カ：ひらがなとカタカナの相互変換

ｶ⇆カ：半角カタカナと全角カタカナの相互変換

a1⇆Ａ１：半角英数字と全角英数字の相互変換

ひカ⇆R：ひらかな・カタカナとローマ字の相互変換

漢⇆かA：漢字と仮名やローマ字の相互変換（読み仮名）


 記号

✅　サポートされている
🔺　部分的にサポ...]]></description><link>https://zenn.dev/mkpoli/articles/07dd3a0d961058</link><guid isPermaLink="true">https://zenn.dev/mkpoli/articles/07dd3a0d961058</guid><pubDate>Sat, 28 Sep 2024 15:37:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u0-uO0bC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%2584%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E6%2596%2587%25E5%25AD%2597%25E5%25A4%2589%25E6%258F%259B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mkpoli%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNjVjYTVjMTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mkpoli</dc:creator></item></channel></rss>