<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 13 Dec 2024 09:28:45 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[OSS: kotlin-result v2の実装がsealed classをやめてvalue classを使うようになっていたので読んでみる]]></title><description><![CDATA[
!
この記事は 株式会社ログラス Productチーム Advent Calendar 2024 のシリーズ 1、13日目の記事です。


 はじめに
kotlin-resultは Rust、Elm、HaskellのResult型にインスパイアされたようなインターフェースを持つライブラリです。
https://github.com/michaelbull/kotlin-result
ちょうど2年前のアドベントカレンダーではこのkotlin-resultの実装を読んで、Kotlinの理解を深めていくという記事を書きました。
https://zenn.dev/loglass/article...]]></description><link>https://zenn.dev/loglass/articles/b8e6282e6d87cf</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/b8e6282e6d87cf</guid><pubDate>Fri, 13 Dec 2024 03:07:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Jy_nNVXS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OSS%253A%2520kotlin-result%2520v2%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258Csealed%2520class%25E3%2582%2592%25E3%2582%2584%25E3%2582%2581%25E3%2581%25A6value%2520class%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%2588%25E3%2581%2586...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuito%2520Sato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4NTA0YzQyMGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuito Sato</dc:creator></item><item><title><![CDATA[Spring Boot で Problem Details に対応するための kotlin での実装]]></title><description><![CDATA[
 はじめに
13日の金曜日ですね！
この記事は、株式会社エス・エム・エス Advent Calendar 2024 シリーズ2の12/13の記事です。
https://qiita.com/advent-calendar/2024/bm-sms
今回は tips として Spring Boot で REST API を開発する際に、Problem Details に対応するための kotlin での実装を紹介します。
サンプルコード全体はこちらにあります！
Spring では RFC 9457(Problem Details for HTTP APIs) に対応した実装のサポートが用意さ...]]></description><link>https://zenn.dev/bm_sms/articles/aec9aeca1fee34</link><guid isPermaLink="true">https://zenn.dev/bm_sms/articles/aec9aeca1fee34</guid><pubDate>Fri, 13 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OpsbxYf8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%2520%25E3%2581%25A7%2520Problem%2520Details%2520%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520kotlin%2520%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ponkan1219%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZTAzZGU0MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25A0%25E3%2583%25BB%25E3%2582%25A8%25E3%2582%25B9%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5YmMyZjQyYjUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ponkan1219</dc:creator></item><item><title><![CDATA[Swift Exportはどこから来たのか、Swift Exportは何者か、Swift Exportはどこへ行くのか]]></title><description><![CDATA[こんにちは。Androidエンジニアの豊川です。
この記事は、kubell Advent Calendar 2024（シリーズ 1）の13日目の記事です。

先日、Kotlin Multiplatform (KMP)のロードマップが更新されました。
魅力的な内容がたくさんありましたが、自分は特にSwift Exportがロードマップに加わることへ注目しています。
この機能は以前から要望が多く、気になっていた方も多いのではないでしょうか。
加えてKotlin 2.1.0にて早期アクセスが始まり、今後のアップデートがますます楽しみです。
一方で、Swift Exportは公開されて間もないた...]]></description><link>https://zenn.dev/f0x/articles/f0d2d1320794bd</link><guid isPermaLink="true">https://zenn.dev/f0x/articles/f0d2d1320794bd</guid><pubDate>Thu, 12 Dec 2024 22:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vKkMPkQY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Swift%2520Export%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2593%25E3%2581%258B%25E3%2582%2589%25E6%259D%25A5%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%25E3%2580%2581Swift%2520Export%25E3%2581%25AF%25E4%25BD%2595%25E8%2580%2585%25E3%2581%258B%25E3%2580%2581Swift%2520Export%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25B8%25E8%25A1%258C%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ren%2520Toyokawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzNmMxN2EzMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ren Toyokawa</dc:creator></item><item><title><![CDATA[React と Spring Boot で作るブログサービス]]></title><description><![CDATA[React と Spring Boot を使ってブログサービスを作成するチュートリアルです。書き終えた章から順次公開しています。]]></description><link>https://zenn.dev/mahata/books/full-stack-blog</link><guid isPermaLink="true">https://zenn.dev/mahata/books/full-stack-blog</guid><pubDate>Wed, 11 Dec 2024 13:26:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RSs37_AO--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jODQ5ZTFhNWIzLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Yasunori MAHATA</dc:creator></item><item><title><![CDATA[Result (sealed class)]]></title><description><![CDATA[
 はじめに
sealed class をついさっき初めて知ったのですが、さらに
Kotlin標準ライブラリのResultを活用したエラーハンドリング ... も知らず...
今回(自分のために)記事にしました。


 Resultとは？
Result は Kotlin 標準ライブラリで提供される型で、成功と失敗を安全に扱うための仕組みです。非同期処理やエラーハンドリングを簡潔かつ型安全に記述できるため、多くの場面で活用できます。


 Resultの特徴


成功 (Success) と 失敗 (Failure) を1つの型で表現できる。

型安全であり、例外を安全にカプセル化できる。...]]></description><link>https://zenn.dev/tko1975/articles/fc77c95ccedfb0</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/fc77c95ccedfb0</guid><pubDate>Wed, 11 Dec 2024 07:08:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IjEst2DM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:Result%2520%2528sealed%2520class%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[sealed class]]></title><description><![CDATA[
 はじめに
sealed class を初めて使ってみた内容を記事にしました。


 背景
OkHttp3を使ったAPIリクエストのレスポンスを、「成功」と「失敗」で明確に分けて扱いたい場合、Kotlinのsealed classを使う設計が非常に便利です。このアプローチにより、レスポンスの管理が簡潔で明確になります。
この記事では、sealed classを使ってレスポンスを処理する方法を解説します。


 実装例

 1. sealed classの定義
以下のように、ApiResponseというsealed classを定義します。
sealed class ApiRespons...]]></description><link>https://zenn.dev/tko1975/articles/a64c66b1056e91</link><guid isPermaLink="true">https://zenn.dev/tko1975/articles/a64c66b1056e91</guid><pubDate>Wed, 11 Dec 2024 06:52:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1c0tO7zs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:sealed%2520class%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takashi</dc:creator></item><item><title><![CDATA[深い位置にある apk を探してインストールする]]></title><description><![CDATA[❯ find . -name "*.apk" | fzf | xargs adb install

Performing Streamed Install
Success
fzf て素晴らしいですよ。


 🧑🏻‍💻 参考
https://android.benigumo.com/20241210/my_package_replaced/
]]></description><link>https://zenn.dev/maochanz/articles/5ba8427b7d14bc</link><guid isPermaLink="true">https://zenn.dev/maochanz/articles/5ba8427b7d14bc</guid><pubDate>Tue, 10 Dec 2024 06:58:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YlUXW5Mt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25B7%25B1%25E3%2581%2584%25E4%25BD%258D%25E7%25BD%25AE%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B%2520apk%2520%25E3%2582%2592%25E6%258E%25A2%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chanzmao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNjNhNDE1ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chanzmao</dc:creator></item><item><title><![CDATA[ARのSNS ソースコード公開します]]></title><description><![CDATA[
 経緯
何回かの記事に分けて発信していたARのSNSアプリなんですが、アプリをリリースしようとしたら、Google Play Storeのリリース基準に阻まれた為、リリースは諦めてソースコードを公開することに決めました。
https://qiita.com/yuto-ktok/items/f13d56d6aaceba892ecb#:~:text=Googleは、2023年11,使ってもらうだと！！

 機能
基本的にARCore + Geospatial APIを使い拡張世界にコンテンツを投稿でき、他者が投稿したコンテンツを閲覧できます。
画面構成は以下のようになっており、左上の電波塔...]]></description><link>https://zenn.dev/taiseishimizu/articles/0e02953e2c4e6a</link><guid isPermaLink="true">https://zenn.dev/taiseishimizu/articles/0e02953e2c4e6a</guid><pubDate>Mon, 09 Dec 2024 00:56:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tssqgAin--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AR%25E3%2581%25AESNS%2520%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimizu%2520taisei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNkbkpiUTBwWFVtRWpYczBRVmE4MzZsczIteTRQejh6NnQxeDlFWEhjYk90Q2pnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimizu taisei</dc:creator></item><item><title><![CDATA[ExposedでStatementInterceptorを使ってSQL文実行前後に処理を差し挟む]]></title><description><![CDATA[この記事はKotlin Advent Calendar 2024 9日目の記事です

 はじめに
こんにちは、株式会社スマートラウンドの@tsukakei1012です！
当社では、サーバーサイドKotlinで開発しており、ORマッパーとしてJetBrainsのExposedを利用しています
本記事では、ExposedでSQL文実行前後に処理を差し挟むための機構であるStatementInterceptorの紹介とサンプルコードを共有します

 StatementInterceptorとは
ExposedからRDBに対して発行されるSQL文（厳密にはStatementクラス）実行時の各ライ...]]></description><link>https://zenn.dev/smartround_dev/articles/a934e2eab8b8d2</link><guid isPermaLink="true">https://zenn.dev/smartround_dev/articles/a934e2eab8b8d2</guid><pubDate>Sun, 08 Dec 2024 21:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pWVQgoJL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Exposed%25E3%2581%25A7StatementInterceptor%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6SQL%25E6%2596%2587%25E5%25AE%259F%25E8%25A1%258C%25E5%2589%258D%25E5%25BE%258C%25E3%2581%25AB%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25B7%25AE%25E3%2581%2597%25E6%258C%259F%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tsukakei%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyZGQyNWFiZDUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2589%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZjUxNmM3MDMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsukakei</dc:creator></item><item><title><![CDATA[状態遷移の悩みを解決！DDDでシンプルかつ堅牢な状態遷移の設計を実現する方法]]></title><description><![CDATA[
!
この記事は 株式会社ログラス Productチーム Advent Calendar 2024 のシリーズ 2、9日目 の記事です。


 はじめに
ドメイン駆動設計（DDD）は、ビジネスドメインをソフトウェアに正確に反映させるための強力なアプローチです。その中でも、状態遷移の設計は、ドメインの振る舞いを表現するための核となる部分です。ドメインモデルで「状態」をどのように扱うかは、システム全体の品質に大きな影響を与えます。
例えば、注文管理システムでは、注文が「未処理（注文時）」→「処理中」→「配送中」→「配送完了」と遷移する過程を管理する必要があります。この状態遷移を正しく設計しな...]]></description><link>https://zenn.dev/loglass/articles/426977debf9fb0</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/426977debf9fb0</guid><pubDate>Sun, 08 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MC4fQuOK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258A%25B6%25E6%2585%258B%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AE%25E6%2582%25A9%25E3%2581%25BF%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25EF%25BC%2581DDD%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%258B%25E3%2581%25A4%25E5%25A0%2585%25E7%2589%25A2%25E3%2581%25AA%25E7%258A%25B6%25E6%2585%258B%25E9%2581%25B7%25E7%25A7%25BB%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%258A%25E3%2582%25AB%25E3%2583%25A0%25E3%2583%25A9%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4Zjk2YjhhYzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ナカムラ</dc:creator></item><item><title><![CDATA[Jetpack Compose でメールアプリを最も簡単に開く記述]]></title><description><![CDATA[指定したURLでWEBブラウザを開くならこう書けます。
@Composable
fun OpenLinkButton(
  urlHandler: UriHandler = LocalUriHandler.current
) {
  Button(
    onClick = {
      urlHandler.openUri("https://android.benigumo.com/")
    }
  ) {
    Text("Open Web link")
  }
}

もう想像はつくでしょう。メールアプリを開く場合は以下から。
https://android.benigum...]]></description><link>https://zenn.dev/maochanz/articles/41061f9c5ae59d</link><guid isPermaLink="true">https://zenn.dev/maochanz/articles/41061f9c5ae59d</guid><pubDate>Sun, 08 Dec 2024 11:07:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LEguZRdB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetpack%2520Compose%2520%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E6%259C%2580%25E3%2582%2582%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E9%2596%258B%25E3%2581%258F%25E8%25A8%2598%25E8%25BF%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chanzmao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllNjNhNDE1ZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chanzmao</dc:creator></item><item><title><![CDATA[障害を防ぐための関数型エラーハンドリング（前編）]]></title><description><![CDATA[
!
この記事は 株式会社ログラス Productチーム Advent Calendar 2024 のシリーズ 2、8日目 の記事です。

いつの間にか始まっていたアドベントカレンダー、本日は8日目になります。
気がつけばもう12月ですね。迫りくる年末年始、システム障害に振り回されずゆっくり過ごしたいものですよね。
さて本日はそんな障害に立ち向かうための、エラーハンドリングについてお話したいと思います。
ソフトウェア開発においてエラー処理は避けて通れない課題です。しかし、適切でないエラー処理はシステム全体の障害を引き起こしやすく、特に例外（Exception）の濫用は重大な問題を生みがち...]]></description><link>https://zenn.dev/loglass/articles/c19b79f17418f1</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/c19b79f17418f1</guid><pubDate>Sun, 08 Dec 2024 08:36:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Im9Pg8hx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259A%259C%25E5%25AE%25B3%25E3%2582%2592%25E9%2598%25B2%25E3%2581%2590%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:knih%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNTA1ZGU0NzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knih</dc:creator></item><item><title><![CDATA[ECSのTaskProtectionを利用して安全なタスクの入れ替えを実現する]]></title><description><![CDATA[
!
この記事は 株式会社ログラス Productチーム Advent Calendar 2024 のシリーズ 1、8日目 の記事です。


 はじめに
こんにちは、ログラスでエンジニアをしています粟田（@wooootack）です。
今日は久しぶりに純粋な技術記事を書こうと思います！ぜひ最後までお付き合いください。
唐突ですが、皆さんのバックエンドアプリケーションには非同期処理が実装されているでしょうか？
恐らく、ほとんどの方が 「はい」 と答えるのではないでしょうか。
現代のアプリケーションにおいて、非同期処理は非常に重要な役割を担っています。特に、ユーザーリクエストに対する迅速な応答...]]></description><link>https://zenn.dev/loglass/articles/safe-container-replace-with-task-protection</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/safe-container-replace-with-task-protection</guid><pubDate>Sun, 08 Dec 2024 03:41:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bIIsk7qq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECS%25E3%2581%25AETaskProtection%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%25AE%25E5%2585%25A5%25E3%2582%258C%25E6%259B%25BF%25E3%2581%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kyosuke%2520Awata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjYjE4NDM3MzYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kyosuke Awata</dc:creator></item><item><title><![CDATA[フェイクコンストラクタを使った段階的な拡張]]></title><description><![CDATA[!
本記事は Kotlin Advent Calendar 2024 の12月5日のものです。


 はじめに
KotlinにはJavaにはない便利な機能がたくさんありますが、そのうちの1つはFake constructors（フェイクコンストラクタ）でしょう。
フェイクコンストラクタは、見た目はクラスのコンストラクタなのですが実体はただのトップレベル関数です。
Kotlinの標準ライブラリにも存在し、例えば次のように定義されています。
public inline fun &lt;T&gt; List(size: Int, init: (index: Int) -&gt; T): Lis...]]></description><link>https://zenn.dev/nakamura_to/articles/1b65b63a30e814</link><guid isPermaLink="true">https://zenn.dev/nakamura_to/articles/1b65b63a30e814</guid><pubDate>Sun, 08 Dec 2024 03:24:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sIYDLGtR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A4%25E3%2582%25AF%25E3%2582%25B3%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E6%25AE%25B5%25E9%259A%258E%25E7%259A%2584%25E3%2581%25AA%25E6%258B%25A1%25E5%25BC%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura_to%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lSWkNjYVdwdlhnTTRldkc0QmM1QjhlZVFGbTUxYm1FZjhXbERLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura_to</dc:creator></item><item><title><![CDATA[moshiとは？]]></title><description><![CDATA[
 Moshi ドキュメント

 概要
Moshiは、KotlinとJavaのためのモダンなJSONライブラリです。GsonやJacksonの代替として使用でき、特にKotlinとの相性が優れています。

 主な特徴

Kotlinのデータクラスとの優れた統合
NullセーフティとJSONの型安全な変換
カスタマイズ可能なアダプター機能
軽量で高速な処理
AndroidプロジェクトでのProguard対応


 セットアップ

 Gradle依存関係の追加
dependencies {
    implementation("com.squareup.moshi:moshi:1.15.0...]]></description><link>https://zenn.dev/joo_hashi/articles/76d7cab278b6d2</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/76d7cab278b6d2</guid><pubDate>Sun, 08 Dec 2024 02:57:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1rqktDND--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:moshi%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[Kotlinのbyとは?]]></title><description><![CDATA[
 What by keyword?
Kotlinのbyというキーワードはなんなのか？
いつもおまじないでつけていた。
https://kotlinlang.org/docs/delegated-properties.html

 Delegated properties
一般的なプロパティの種類によっては、必要なたびに手動で実装することもできるが、一度実装してライブラリに追加し、後で再利用した方が便利なものもある。例えば
Lazyプロパティ：最初のアクセス時にのみ値が計算される。
Observableプロパティ：このプロパティの変更についてリスナーに通知される。
各プロパティに個別のフ...]]></description><link>https://zenn.dev/joo_hashi/articles/8385482f0057e3</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/8385482f0057e3</guid><pubDate>Sat, 07 Dec 2024 00:52:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kMttlMXo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Kotlin%25E3%2581%25AEby%25E3%2581%25A8%25E3%2581%25AF%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[iOS/Android両方のアプリを作るならCompose Multiplatformがベストだと思う]]></title><description><![CDATA[こんにちは！sugitaniと申します。
Black Cat CarnivalというSNSアプリを開発しています。現在ベータテスト中です。
本稿はBlack Cat CarnivalでのCompose Multiplatformの採用事例の紹介と、それを例にとったCompose Multiplatformのオススメを行います。

 "Compose Multiplatformがベストだと思う"なんてたいそうなこと言ってるけど、言うほど開発のことわかっているのかい？
…と思われるかもしれないので経歴をご紹介させていただきます

これまで主に開発してきたもの ⇒ ニコニコ生放送 / GANM...]]></description><link>https://zenn.dev/bcc/articles/b4191ae1de923e</link><guid isPermaLink="true">https://zenn.dev/bcc/articles/b4191ae1de923e</guid><pubDate>Fri, 06 Dec 2024 08:00:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rAzTRx-J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:iOS%252FAndroid%25E4%25B8%25A1%25E6%2596%25B9%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E3%2581%25AA%25E3%2582%2589Compose%2520Multiplatform%25E3%2581%258C%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A0%25E3%2581%25A8%25E6%2580%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sugitani%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwYmM4NTk3YjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Black%2520Cat%2520Carnival%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYzFhYWI0MGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sugitani</dc:creator></item><item><title><![CDATA[ASTでKotlinに入門する]]></title><description><![CDATA[この記事はKotlin Advent Calendar 2024 6日目の記事です。
おはようございます。今年の10月にKotlinに入門したinouehiといいます、よろしくお願いします！
Kotlinに慣れるためにとにかく手を動かしてみようということで、ASTを操作する簡単なツールを作ってみることにしました。ASTを観察することで言語仕様が垣間見えることも期待しています。

 想定読者

KotlinでASTを操作したい方
静的解析に興味がある方


 実装方法の調査・検討
右も左もわからない、KotlinもGradleもあんまりわからない状態だったのでひとまずChatGPTに聞いて...]]></description><link>https://zenn.dev/inoco/articles/8c2f56c2009c80</link><guid isPermaLink="true">https://zenn.dev/inoco/articles/8c2f56c2009c80</guid><pubDate>Thu, 05 Dec 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uPr5oL8I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AST%25E3%2581%25A7Kotlin%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:inouehi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4NmRhNGQ0NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>inouehi</dc:creator></item><item><title><![CDATA[AndroidのRealm周りでのクラッシュ調査(Realm access from incorrect thread)]]></title><description><![CDATA[原因究明までの記録
間違っていたらご指摘いただけると嬉しいです！Coroutineにもkotlinにも知見があるわけではないので、とても助かります！

 crashの内容
crash
Realm access from incorrect thread. Realm objects can only be accessed on the thread they were created.
crashlyticsのログ
io.realm.BaseRealm.checkIfValid (BaseRealm.java:530)
io.realm.BaseRealm.refresh (BaseR...]]></description><link>https://zenn.dev/hikawa/articles/30a0c4683795a1</link><guid isPermaLink="true">https://zenn.dev/hikawa/articles/30a0c4683795a1</guid><pubDate>Thu, 05 Dec 2024 12:11:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--irKCiu7W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E3%2581%25AERealm%25E5%2591%25A8%25E3%2582%258A%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E8%25AA%25BF%25E6%259F%25BB%2528Realm%2520access%2520from%2520incorrect%2520thread%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjYWVjNTU1ODYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hikawa</dc:creator></item><item><title><![CDATA[Kolinの初期化ブロックはクラスボディの順番で呼び出される]]></title><description><![CDATA[
 クイズ
皆さん以下のandroidのコードの誤りを見つけられるでしょうか？
Empty ActivityにInitTestClassを追加しただけです。
当然ですがバグはInitTestClassに含まれています。
package com.example.test_init_block

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToE...]]></description><link>https://zenn.dev/kiitosu/articles/7b0bf6e00ceaff</link><guid isPermaLink="true">https://zenn.dev/kiitosu/articles/7b0bf6e00ceaff</guid><pubDate>Thu, 05 Dec 2024 05:05:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9aC3YxOh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kolin%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AF%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%259C%25E3%2583%2587%25E3%2582%25A3%25E3%2581%25AE%25E9%25A0%2586%25E7%2595%25AA%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiitosu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJBNDNaZzRhRzk5b0NEMm5aMFY1RDJISlVUVGtySVB4UWhtaXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiitosu</dc:creator></item></channel></rss>