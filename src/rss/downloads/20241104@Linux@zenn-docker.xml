<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 04 Nov 2024 08:45:09 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Windows11上でCUDA + Pytorch + Jupyter環境をdocker-compose.yamlで構築する]]></title><description><![CDATA[
 はじめに
Windows上で手軽に構築できて環境を汚染しないJupyterの環境がほしいと思ったことことがきっかけで調べました。
本稿で使っているPytorchのバージョンは少し前のものだと思いますので、有識者は以下のサイトでほしいバージョンを探してください。
https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch

 参考記事
以下の記事で使われているコマンドをもとにdocker-compose.yamlを作成しました。
https://qiita.com/taro_kawasaki/items/6738ada8e...]]></description><link>https://zenn.dev/hrimfaxi_tpw/articles/1b3c9e19070dd7</link><guid isPermaLink="true">https://zenn.dev/hrimfaxi_tpw/articles/1b3c9e19070dd7</guid><pubDate>Mon, 04 Nov 2024 03:16:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1rll2M_B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows11%25E4%25B8%258A%25E3%2581%25A7CUDA%2520%252B%2520Pytorch%2520%252B%2520Jupyter%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592docker-compose.yaml...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2580%25E3%2581%25B5%25E3%2581%2581%25E3%2581%258F%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg5NGZhZjY3ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りむふぁくし</dc:creator></item><item><title><![CDATA[DockerのLayerFSとキャッシュの仕組みを理解する]]></title><description><![CDATA[
 はじめに
Dockerは、効率的な開発環境を提供するために、レイヤー化されたファイルシステム（LayerFS）とキャッシュ機能を活用しています。今回、Dockerイメージの最適化を考える中で、LayerFSについて調査する機会がありました。そのため、ここではLayerFSやキャッシュの仕組み、ファイル操作がディレクトリの状態にどのような影響を及ぼすか、パフォーマンス向上のためのベストプラクティス、LayerFSのデバッグ方法についてまとめています。

 対象読者

Dockerの基礎を理解しており、LayerFSの詳細に興味があるエンジニア
Dockerイメージのビルド効率や、レイヤ...]]></description><link>https://zenn.dev/nyanchu/articles/docker_layerfs_443b5a24194a5c</link><guid isPermaLink="true">https://zenn.dev/nyanchu/articles/docker_layerfs_443b5a24194a5c</guid><pubDate>Sun, 03 Nov 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--exrEongf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AELayerFS%25E3%2581%25A8%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyanchu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwZmQ5Njk4NzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyanchu</dc:creator></item><item><title><![CDATA[【Rails7+Docker】Rails7.2×Dockerの開発環境を一番シンプルに構築する]]></title><description><![CDATA[
 この記事を読む前に
「とにかく簡潔に、かつエラーなく、Rails7系×Dockerの環境構築を行う方法」をまとめます。
!
サクッと開発環境を作りたい方向けです。本当にシンプル。
本番環境へのデプロイなどを考えている方は、プラスαで必要な情報をお集めください。


 前提条件

Docker環境がある


 Outline
これから行う手順の概要です。
一番最後の【ゴール】までの手順で、一番難しい作業はこの記事を見つけることでしょうね:)。

【作成】プロジェクトディレクトリ、必要なファイルを作成
【編集】dockerを起動するために
【Railsアプリ作成】rails newでプロ...]]></description><link>https://zenn.dev/satosh/articles/c054da769225ee</link><guid isPermaLink="true">https://zenn.dev/satosh/articles/c054da769225ee</guid><pubDate>Sun, 03 Nov 2024 12:47:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_a4c6HTE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rails7%252BDocker%25E3%2580%2591Rails7.2%25C3%2597Docker%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25B8%2580%25E7%2595%25AA%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:satosh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1ZTQ3YjI0ZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>satosh</dc:creator></item><item><title><![CDATA[これでソースコード リーディングが捗る! OpenGrok の構築方法]]></title><description><![CDATA[
 Opengrok とは
OpenGrok は主にソースコードの検索ツールとして使用されています。OpenGrok はソースコード検索および相互参照エンジンで Java で書かれているオープンソースのプロジェクトです。
どんな感じか見てみたい方はこちらのページにあるアクセス可能な OpenGrok サイトがありますので、検索を試してみてください!

 構築する前に...
今回は Docker を使用します!
下記はすでにインストールされているものとして進めていきます。

Docker
Docker Compose


 構築方法(Docker)
基本的には公式の Github に記載が...]]></description><link>https://zenn.dev/apo_space81/articles/deab4ed1ad5d35</link><guid isPermaLink="true">https://zenn.dev/apo_space81/articles/deab4ed1ad5d35</guid><pubDate>Sun, 03 Nov 2024 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UYPVtTqE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2520%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%258C%25E6%258D%2597%25E3%2582%258B%2521%2520OpenGrok%2520%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pkaiy81%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkNjY4MzNlYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pkaiy81</dc:creator></item><item><title><![CDATA[DevContainerにある.node-versionを自動で書き替えられるようにした話]]></title><description><![CDATA[
 TL;DR


Dockerfileの環境に合わせて.node-versionをコマンドラインで自動的に更新できるようにしたよ

node -vとsedを組み合わせて実現しているよ


 経緯
自分のホームページをAstroを用いて構築しており、開発環境にはDevContainerを利用しています。

環境のレガシー化をなんとかしたいので、
Dependabotによるアップデートプルリクをpackage.json、Dockerfileに対して作成してもらうようにしています。
ホームページのビルド時にNode.jsのバージョンを固定する目的で.node-versionファイルを作成して...]]></description><link>https://zenn.dev/inajika/articles/auto-rewriting-node-version-on-devcontainer</link><guid isPermaLink="true">https://zenn.dev/inajika/articles/auto-rewriting-node-version-on-devcontainer</guid><pubDate>Sat, 02 Nov 2024 17:08:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Msz_HKPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DevContainer%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258B.node-version%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258D%25E6%259B%25BF%25E3%2581%2588%25E3%2582%2589%25E3%2582%258C%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2583%258A%25E3%2582%25B8%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwZTFlMDZmMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>イナジカ</dc:creator></item><item><title><![CDATA[CursorでZone.Identifierが表示される原因と解決策(Cursorで特定のファイルを非表示にする方法)]]></title><description><![CDATA[CursorでZone.Identifierが表示される原因と、その対策についてご説明します。

 Zone.Identifierとは？
Zone.Identifierは、Windowsがインターネットからダウンロードされたファイルに付与する隠しファイルです。ファイルの由来を示し、セキュリティ対策の一環として機能します。しかし、開発環境でこのファイルが表示されると邪魔です。

 CursorでZone.Identifierが表示される原因
WSL2環境でのファイル共有: WSL2とWindowsの間でファイルを共有する際に、Zone.Identifierが生成されることがあります。
Do...]]></description><link>https://zenn.dev/mkymdk/articles/59fcd8ae561d4a</link><guid isPermaLink="true">https://zenn.dev/mkymdk/articles/59fcd8ae561d4a</guid><pubDate>Sat, 02 Nov 2024 11:45:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--quXXyxzH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cursor%25E3%2581%25A7Zone.Identifier%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2528Cursor%25E3%2581%25A7%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E9%259D%259E%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mukaiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjOTQyMjgwY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mukaiyama</dc:creator></item><item><title><![CDATA[超高速Webサーバー「 LiteSpeed 」をDockerで試してみる]]></title><description><![CDATA[
 はじめに
この記事は最後まで読んで下さい。

 LiteSpeedとは？
LiteSpeedは、ApacheのようなWebサーバーで、高性能で効率的を特徴としており、特にPHPベースのアプリケーションに適しているらしい。リソース効率が良く、ページロードの高速化やサーバー負荷の軽減が期待できるらしい。

 Apacheと高い互換性がある
LiteSpeedは、Apacheの設定ファイル（httpd.confや.htaccessなど）をサポートしており、Apacheからスムーズに移行ができる（らしい）。Apacheで設定されている多くの機能やモジュールがそのまま利用でき（なんと❗️）、既...]]></description><link>https://zenn.dev/tomoakinagahara/articles/6c846f0a355fc2</link><guid isPermaLink="true">https://zenn.dev/tomoakinagahara/articles/6c846f0a355fc2</guid><pubDate>Sat, 02 Nov 2024 09:34:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6VPwemMS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25B6%2585%25E9%25AB%2598%25E9%2580%259FWeb%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2580%258C%2520LiteSpeed%2520%25E3%2580%258D%25E3%2582%2592Docker%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoaki%2520Nagahara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czREt6Z1p1U3hEcGVZaFY1ajhJSjNmTzFZODlMLXg3bVJxcFU1Q0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoaki Nagahara</dc:creator></item><item><title><![CDATA[2024年にまさかのphp5.3の開発環境を構築]]></title><description><![CDATA[2009年6月3日にPHP5.3がリリースされてから約15年
そんなに簡単にサーバを変えられないとか、古いシステムのバージョンアップにコストを掛けられないとかいろいろな状況があるとはいえ、IEすらなくなった今、もういいんじゃないかなぁと思います。
とはいえ、開発はしなければないらないということで・・・
弊社は基本的にDockerを使って、エンジニアの作業環境に、サーバーの仮想環境を構築し、VPS上にお客様の確認環境を2つ（本番コピー環境と機能追加時の確認環境）を用意しています。
開発環境はエンジニアのPCにDockerを利用して本番環境と同等の仮想環境を作っているので、設定ファイルを備忘...]]></description><link>https://zenn.dev/brainy_software/articles/ea182d94701c8a</link><guid isPermaLink="true">https://zenn.dev/brainy_software/articles/ea182d94701c8a</guid><pubDate>Sat, 02 Nov 2024 05:40:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4oCO9_O1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%25E5%25B9%25B4%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%2595%25E3%2581%258B%25E3%2581%25AEphp5.3%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Brainy-Software%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNWEyZmZlZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Brainy-Software</dc:creator></item><item><title><![CDATA[GitHub Actionsのdocker/build-push-actionにはcontext指定をする]]></title><description><![CDATA[こんにちはムーザルちゃんねるの@zaruです。GitHub Actionsの docker/build-push-action にはcontext指定をしたほうが良いケースがあります。それは・・・
GitHub Actionsのステップで生成したファイルをDockerイメージに含めたい時
なぜかというと、contextが指定されていない docker/build-push-action のデフォルト挙動は該当リポジトリからソースファイルを自動でcheckoutするからです。つまり、いくら前段のステップでファイルを作成したり更新したりしても全部無視されます。
そういう意味では、そもそも a...]]></description><link>https://zenn.dev/moozaru/articles/0bd3047e4f80bd</link><guid isPermaLink="true">https://zenn.dev/moozaru/articles/0bd3047e4f80bd</guid><pubDate>Fri, 01 Nov 2024 12:17:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IHUG2MY0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25AEdocker%252Fbuild-push-action%25E3%2581%25AB%25E3%2581%25AFcontext%25E6%258C%2587%25E5%25AE%259A%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:zaru%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiNDkwNTdmZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25AB%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25AD%25E3%2582%258B%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hTeWVOcHN2TEdOdTdPeUFlU1JEbDhUNkNOX1p3NHBXSHpIRHN2NlBFPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zaru</dc:creator></item><item><title><![CDATA[Go(Gin)でのDocker環境構築]]></title><description><![CDATA[
 はじめに
今Goのボイラーテンプレートを作っています。マイクロサービスが活発になっているので、
それに伴って作っています。その手始めにDockerの環境構築をしました。

 GoのDocker Image(GinでのDockerの環境構築)
以下のサイトを参考にしてみました。
https://hub.docker.com/_/golang

 まずはGo(Gin)の導入

Goのインストール
[Goの公式サイト]
https://golang.org/dl/からインストーラーをダウンロードしてインストール。


インストール後、以下のコマンドでGoのバージョンを確認
go versi...]]></description><link>https://zenn.dev/norihashimo/articles/2d9506865e0f6b</link><guid isPermaLink="true">https://zenn.dev/norihashimo/articles/2d9506865e0f6b</guid><pubDate>Thu, 31 Oct 2024 09:17:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SyMyfVZg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%2528Gin%2529%25E3%2581%25A7%25E3%2581%25AEDocker%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AE%25E3%2582%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4MjliYWRiYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>のり</dc:creator></item><item><title><![CDATA[【エンジニア中級～エンジニア上級】AWS環境でDockerバージョンアップ後に生じたデプロイエラーについて]]></title><description><![CDATA[
 はじめに
インストールしているDockerのバージョンが古くなっていて、バージョンアップの対応が必要だったため、バージョンアップした後にデプロイエラーが生じた事象がありました。バージョンアップによるもので生じるエラーなどはあったりしますが、今回の事象とその解決策を紹介します。

 レベル

エンジニア中級～エンジニア上級
※わかりやすい説明を心がけておりますが、それでも難易度は高めだと思います。


 環境

AWS
Docker 25.03
PHP 7.3
Python 3.8


 デプロイ方法

Bitbucketで対象ブランチに対してタグ番号入力してタグ付けをする。
AWSC...]]></description><link>https://zenn.dev/headwaters/articles/4bdd4895aa2db0</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/4bdd4895aa2db0</guid><pubDate>Thu, 31 Oct 2024 00:05:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zztXQiND--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E4%25B8%25AD%25E7%25B4%259A%25EF%25BD%259E%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E4%25B8%258A%25E7%25B4%259A%25E3%2580%2591AWS%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Docker%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E5%25BE%258C%25E3%2581%25AB%25E7%2594%259F%25E3%2581%2598%25E3%2581%259F%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:jemiya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjlhNTFjMDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jemiya</dc:creator></item><item><title><![CDATA[PostgreSQLのDockerを使う開発環境でよくやるTips]]></title><description><![CDATA[最近はデータベースをローカルにインストールしないで Docker を使用するケースが増えてきたなと思います。
DB をコンテナにすることでローカルや CI 上で簡単に環境を構築できるメリットがある一方、少し工夫をしないといけない点もあるのでそれを記事にまとめました。
なおタイトルに PostgreSQL と書いてありますが、他の DB でも同じようなケースには対応できるはずです。

 前提環境
これ以降はこのような docker-compose.yml を使用している前提で書いています。
# docker-compose.yml
services:
  db:
    image: po...]]></description><link>https://zenn.dev/tatsuyan/articles/psql-with-docker</link><guid isPermaLink="true">https://zenn.dev/tatsuyan/articles/psql-with-docker</guid><pubDate>Wed, 30 Oct 2024 07:52:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--osI13-Qg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PostgreSQL%25E3%2581%25AEDocker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2582%2588%25E3%2581%258F%25E3%2582%2584%25E3%2582%258BTips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A4%25E3%2581%2591%25E9%25BA%25BA%25E3%2583%2586%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyN2Q2ZGU5YmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>つけ麺テキーラ</dc:creator></item><item><title><![CDATA[【NextJS】Dockerでフロントとバックエンドを管理する際にnet::ERR_NAME_NOT_RESOLVEDというエラーが出る]]></title><description><![CDATA[こんにちは投資ロウトです。

 背景
Dockerでフロントエンドとバックエンドを管理する際に、モノリポのため、
以下のように構築をするが、同じDocker内のため、http://backend:port/...でアクセスしようとすると、net::ERR_NAME_NOT_RESOLVEDというエラーが出てしまう。
services:
  frontend:
    ...

  backend:
    ...

 解決策
めちゃめちゃ壁にぶつかりましたが、以下の記事に、Dockerで同一内であり、CORSは避けられそうに見えますが、ブラウザからアクセスするために、こちらのエラーのよう...]]></description><link>https://zenn.dev/doshirote/articles/6e314804c672f8</link><guid isPermaLink="true">https://zenn.dev/doshirote/articles/6e314804c672f8</guid><pubDate>Sun, 27 Oct 2024 14:23:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dSU1LVy6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590NextJS%25E3%2580%2591Docker%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A8%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25ABnet%253A%253AERR_NAME_NOT_RESOLV...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%258A%2595%25E8%25B3%2587%25E3%2583%25AD%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODY0NWMwOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>投資ロウトの技術ブログ</dc:creator></item><item><title><![CDATA[【FastAPI】boto3のライブラリがpoetryで追加できない]]></title><description><![CDATA[こんにちは投資ロウトです。

 背景
Dockerを起動したが、poetryでboto3をインストールしてもModuleが反映されなかった。
エラーログ
backend-1  |     from api.routers import xxx, yyy
backend-1  |   File "/src/api/routers/xxx.py", line 5, in &lt;module&gt;
backend-1  |     from api.common.aws.awsSecretManager import AWSSecretManager
backend-1  |   File...]]></description><link>https://zenn.dev/doshirote/articles/9b691450a33e6a</link><guid isPermaLink="true">https://zenn.dev/doshirote/articles/9b691450a33e6a</guid><pubDate>Sun, 27 Oct 2024 08:21:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m-jfSn3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FastAPI%25E3%2580%2591boto3%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%258Cpoetry%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%258A%2595%25E8%25B3%2587%25E3%2583%25AD%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODY0NWMwOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>投資ロウトの技術ブログ</dc:creator></item><item><title><![CDATA[DockerでOpenGL開発環境]]></title><description><![CDATA[
 はじめに
この記事ではDockerでOpenGLを使ったプログラミングができる環境を構築する方法を説明していきます。今回作成する環境はGUIアプリを表示するための環境としても使用可能です。

 なぜDocker

Dockerを使うことで、OpenGL開発環境の構築において環境依存の問題を軽減し、異なるシステム間でも同一の環境を簡単に再現可能にします。これにより、開発者間での動作の一貫性を保つことで、効率的に共同開発することができます。また、初心者の方のトラブルを解決しやすくすることができます。

 本題

 Dockefile

Dockerfile
FROM debian:boo...]]></description><link>https://zenn.dev/harukigoda/articles/5033bcb7206ab0</link><guid isPermaLink="true">https://zenn.dev/harukigoda/articles/5033bcb7206ab0</guid><pubDate>Sun, 27 Oct 2024 08:06:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--91e6sOmG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7OpenGL%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HarukiGoda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjRpajJYSTdYZ1hiNGdwR0lBYVdyWU02UHMyVmdUWU12WE1NMnIxUFRHaU1HSjZ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HarukiGoda</dc:creator></item><item><title><![CDATA[Docker Hubに登録されているイメージのタグ一覧をcurlコマンドで取得する方法]]></title><description><![CDATA[
 手順
以下のAPIエンドポイントからタグ一覧を取得できます。記事投稿時点では認証不要で利用できます。

https://hub.docker.com/v2/namespaces/{namespace}/repositories/{image}/tags

公式イメージの場合、パラメータの{namespace}にはlibraryを指定します。
##実行例
# debianイメージのタグ一覧を取得
curl -s https://hub.docker.com/v2/namespaces/library/repositories/debian/tags

# openapitools/op...]]></description><link>https://zenn.dev/moutend/articles/7cdb82940c5caa</link><guid isPermaLink="true">https://zenn.dev/moutend/articles/7cdb82940c5caa</guid><pubDate>Sun, 27 Oct 2024 01:28:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ckk9E_GN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Hub%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B0%25E4%25B8%2580%25E8%25A6%25A7%25E3%2582%2592curl%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiyuki%2520Koyanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2luT1BUc1lmTWF3NkFTeUViN24wS2cza184NktOcDh0WUtIbGh0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Koyanagi</dc:creator></item><item><title><![CDATA[Zabbix監視環境をWSL上に構築する]]></title><description><![CDATA[
 動機
監視ツールとしてよくZabbixが使われてますが、アラートをなんとなく見るばかりで動いている仕組みや設定方法をよく理解していなかったので自分で１から設定してみることにしました。

 概要
WSL上にZabbix Serverを構築してDockerコンテナ（RockeyLinux9）を監視対象にするところまでやります。

 実装

 作業環境
WSL :  Ubuntu 22.04.5 LTS (GNU/Linux 5.15.153.1-microsoft-standard-WSL2 x86_64)

 Zabbix server setup
https://www.zabbix...]]></description><link>https://zenn.dev/lian/articles/5c9321bc5a0374</link><guid isPermaLink="true">https://zenn.dev/lian/articles/5c9321bc5a0374</guid><pubDate>Sat, 26 Oct 2024 14:29:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BCttplTG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zabbix%25E7%259B%25A3%25E8%25A6%2596%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592WSL%25E4%25B8%258A%25E3%2581%25AB%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lian.1e%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVhUlRzNGM2OFlvVTdCaEx6cDFIZ1BIbVJFWGozUWl4d2dWODNIMlVTMkUxMVV3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lian.1e</dc:creator></item><item><title><![CDATA[nginx × dockerのリバースプロキシ設定で詰まったところ]]></title><description><![CDATA[

nginx × docker でフロントエンドとバックエンドの振り分けをしました!リバースプロキシ!!の時に、nginx.confの書き方など詰まる部分があったので、まとめておこうと思います


 環境

フロントエンド: nuxt
バックエンド: rails
Docker Desktop for Mac


 各ディレクティブがよくわからない件

そもそもどれが何を意味しているのか
nginx.confの構成をなんとなく理解します、、


Configuration File’s Structureによると、、、
ディレクティブ２種



sinpleディレクティブ


シンプルに...]]></description><link>https://zenn.dev/michan74/articles/321457956a437f</link><guid isPermaLink="true">https://zenn.dev/michan74/articles/321457956a437f</guid><pubDate>Sat, 26 Oct 2024 07:01:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--adLMtOFr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nginx%2520%25C3%2597%2520docker%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2582%2589%25E3%2582%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhOGZiMDg3OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どらやき</dc:creator></item><item><title><![CDATA[nginx × docker でフロントエンドとバックエンドの振り分けをしました!(リバースプロキシ)]]></title><description><![CDATA[
 環境

フロントエンド: nuxt
バックエンド: rails
Docker Desktop for Mac


 やりたいこと


http://localhost/でフロントエンドにもバックエンドにもアクセスする


パスによってフロントエンドとバックエンドへの振り分けをしたい

/api    -&gt; バックエンドへ
それ以外 -&gt; フロントエンドへ



現状

バックエンド: railsが動いている
compose.yaml
services:
    rails:
      build: .
      command: bundle exec puma
  ...]]></description><link>https://zenn.dev/michan74/articles/284f7094e6a952</link><guid isPermaLink="true">https://zenn.dev/michan74/articles/284f7094e6a952</guid><pubDate>Sat, 26 Oct 2024 05:07:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_3n8ZPCc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nginx%2520%25C3%2597%2520docker%2520%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A8%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E6%258C%25AF%25E3%2582%258A%25E5%2588%2586%25E3%2581%2591%25E3%2582%2592%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2521%2528%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2582%2589%25E3%2582%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhOGZiMDg3OTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どらやき</dc:creator></item><item><title><![CDATA[【AWS】ECRへpushされたimageから、ECSでコンテナを起動]]></title><description><![CDATA[
 はじめに

この記事では、AWSのコンテナ運用に関して、主にECSについて取り上げています。前回、ECRへpushを行なったため、今回はECSでタスクを起動する手順について、記述します。
&lt;前回までの記事&gt;
【Docker】【AWS】ECRへpushするまでの作業: https://zenn.dev/jun202407060017/articles/3ff7208354a205

 対象の方

AWSで、ECRやECSなどコンテナサービスを使ったクラウドインフラの初期キャッチアップを行いたい方。
運用ではAWSを触っているが、自力でAWSのECRやECSをこれから設定して...]]></description><link>https://zenn.dev/jun202407060017/articles/8e33668a51df7b</link><guid isPermaLink="true">https://zenn.dev/jun202407060017/articles/8e33668a51df7b</guid><pubDate>Fri, 25 Oct 2024 13:31:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s4Y5cH6v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%25E3%2580%2591ECR%25E3%2581%25B8push%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fimage%25E3%2581%258B%25E3%2582%2589%25E3%2580%2581ECS%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSllvVHVxY2k3QVJ4R01lckE0OEtsRmRZS2FMYXhJbUQxOEFFbmFzMDhUakl1UlYybmY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jun</dc:creator></item></channel></rss>