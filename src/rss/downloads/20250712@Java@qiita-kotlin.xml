<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2025-07-12T10:36:59+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2052405</id>
    <published>2025-07-12T10:36:59+09:00</published>
    <updated>2025-07-12T10:39:24+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Daiji256/items/2a9b4690f209db1fe878"/>
    <url>https://qiita.com/Daiji256/items/2a9b4690f209db1fe878</url>
    <title>EntryPoint を使った Composable 関数への依存性注入 with Hilt &amp; Compose</title>
    <content type="text">Composable 関数内で、Hilt によって @Provides や @Binds で提供されたオブジェクトを直接的に扱いたい場面があります。
通常、Hilt を用いた依存性注入は ViewModel を経由して行います。たとえば @HiltViewModel に依存...</content>
    <author>
      <name>Daiji256</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2049019</id>
    <published>2025-07-10T10:40:23+09:00</published>
    <updated>2025-07-10T10:40:23+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/engineer-first/items/3b3e4d9ae8fd4fd90ecb"/>
    <url>https://qiita.com/engineer-first/items/3b3e4d9ae8fd4fd90ecb</url>
    <title>Kotlinのスマートキャストについて</title>
    <content type="text">Kotlinの特徴
スマートキャストを用いることで、明示的なキャストを使う必要がなくなります。
コンパイラにて、isのチェックや明示的なキャストを必要なところに自動的に挿入してくれるからです。
fun printLength(obj: Any) {
    if (obj...</content>
    <author>
      <name>engineer-first</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2051102</id>
    <published>2025-07-09T06:36:14+09:00</published>
    <updated>2025-07-09T10:25:13+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/shokkaa/items/8036e1ac4f215f3bcf43"/>
    <url>https://qiita.com/shokkaa/items/8036e1ac4f215f3bcf43</url>
    <title>Kotlin AI Framework - Koog </title>
    <content type="text">概要
(自分メモ)
Kotlin KoogでAI Agentを試す。

環境

Ubuntu 24.04

Kotlin 2.1.21

Koog Agent 0.2.1

Node.js v24.3.0 (MCPサービス用)

LLM: Google Gemi...</content>
    <author>
      <name>shokkaa</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2050875</id>
    <published>2025-07-08T17:56:50+09:00</published>
    <updated>2025-07-08T17:56:50+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kmatsushita1012/items/9ee16aa97a88b89a9350"/>
    <url>https://qiita.com/kmatsushita1012/items/9ee16aa97a88b89a9350</url>
    <title>KotlinでTCAを再現してみた</title>
    <content type="text">はじめに
Swift+TCAで作成したアプリをKotlinに移植する機会がありました。TCAの使い心地がよく、取り入れてみたいと思ったのでChatGPTに壁打ちしながら作成しました。以前書いた記事よりも進歩があったのでもう一度まとめてみます。

JitPackで公開し...</content>
    <author>
      <name>kmatsushita1012</name>
    </author>
  </entry>
</feed>
