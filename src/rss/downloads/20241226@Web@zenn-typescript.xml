<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 26 Dec 2024 07:07:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[初心者でも安心！筋トレで学ぶTypeScript型設計の基本]]></title><description><![CDATA[
 はじめに
こんにちは。株式会社トリドリでバックエンドエンジニアをしている松田です！
弊社はフロントエンドもバックエンドも、TypeScriptメインで開発をすることが多く、型を使いこなせることが必要になってきます。そして経験が浅いうちには使いこなすことはおろか、理解すること自体少し労力がかかるのがこのジェネリクスです。
そこで今回はこのジェネリクスも含めた型設計の基本について、「筋トレ」を題材として理解を深めましょう！
初めは右も左もわからずジムに入会したてのトレーニー状態から、徐々に筋トレの仕方がわかってくるまでのストーリー仕立てで進めていきます。

 ジェネリクス、インターフェー...]]></description><link>https://zenn.dev/toridori/articles/6b4fade51a98c8</link><guid isPermaLink="true">https://zenn.dev/toridori/articles/6b4fade51a98c8</guid><pubDate>Thu, 26 Dec 2024 07:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3Tcl_G0W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25A7%25E3%2582%2582%25E5%25AE%2589%25E5%25BF%2583%25EF%25BC%2581%25E7%25AD%258B%25E3%2583%2588%25E3%2583%25AC%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6TypeScript%25E5%259E%258B%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:matsuda_t%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxOWMzMTdiMzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:toridori%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MTFlMzBiMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>matsuda_t</dc:creator></item><item><title><![CDATA[TypeScript一人カレンダー 2022/2024 目次と索引 O-Z・あーん]]></title><description><![CDATA[
 記号・A-N

https://zenn.dev/okunokentaro/articles/01jg07mjacswxqfgp2m69qn7ew


 O

O/R マッパー / 2202


Object.hasOwn() / 2417


Object.prototype.toString() / 2218


object() (Valibot) / 2405


Object （コンストラクタ） / 2215


object (型表記) / 2215


Ok&lt;T&gt; / 2223, 2416


Omit&lt;T, K&gt; / 2207, 2208, 2...]]></description><link>https://zenn.dev/okunokentaro/articles/01jg0ve6mk61rt8a6e7mbx66gc</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jg0ve6mk61rt8a6e7mbx66gc</guid><pubDate>Thu, 26 Dec 2024 06:48:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cv2xtHvB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25202022%252F2024%2520%25E7%259B%25AE%25E6%25AC%25A1%25E3%2581%25A8%25E7%25B4%25A2%25E5%25BC%2595%2520O-Z%25E3%2583%25BB%25E3%2581%2582%25E3%2583%25BC%25E3%2582%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[TypeScript一人カレンダー 2022/2024 目次と索引 記号・A-N]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事は『TypeScript 一人 Advent Calendar 2022』および『TypeScript 一人 Advent Calendar 2024』（TypeScript一人カレンダー） 全50記事の目次と索引ページです。

https://qiita.com/advent-calendar/2022/okunokentaro-ts
https://qiita.com/advent-calendar/2024/okunokentaro-ts

本アドベントカレンダー内の各記事では、2024年12...]]></description><link>https://zenn.dev/okunokentaro/articles/01jg07mjacswxqfgp2m69qn7ew</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jg07mjacswxqfgp2m69qn7ew</guid><pubDate>Thu, 26 Dec 2024 06:48:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VzdbGmF7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%25202022%252F2024%2520%25E7%259B%25AE%25E6%25AC%25A1%25E3%2581%25A8%25E7%25B4%25A2%25E5%25BC%2595%2520%25E8%25A8%2598%25E5%258F%25B7%25E3%2583%25BBA-N%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[Kintoneの設定管理システムを作ってみた]]></title><description><![CDATA[こんにちは！Septeni Japan 株式会社のエンジニアの大志万といいます。
今回は、TerraformなどのIaCのように、Kintoneの設定をファイルで管理し、必要に応じてデプロイできるようなシステムを作ったので、そのシステムについて紹介します。

 背景
私の会社ではKintoneを契約しており、社内システムのいくつかにKintoneを利用しています。
今までは、Kintoneを使ったシステム開発を行う際、毎回アプリをコピーして開発環境を作成していましたが、下記のような問題がありました。

開発環境で行った変更を本番環境に反映する際、手動で設定を変更する必要がある。
複数のア...]]></description><link>https://zenn.dev/septeni_japan/articles/2024-12_kintone_iac</link><guid isPermaLink="true">https://zenn.dev/septeni_japan/articles/2024-12_kintone_iac</guid><pubDate>Thu, 26 Dec 2024 04:29:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F-a3DHbf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kintone%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:oshiman%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlMzQ3Njk1ZjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Septeni%2520Japan%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMjBlMzNmNDcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oshiman</dc:creator></item><item><title><![CDATA[あのprisma previewFeaturesは今？]]></title><description><![CDATA[
 はじめに
はじめまして、株式会社トリドリでバックエンドを担当しているyrmzです。
私が所属するチームではNestJSをメインに開発業務を行っています。

 Prismaが発行するクエリ
ORMはprismaを使っているのですが、複数テーブルを取得しようとした際に複数クエリが発行されてしまうという問題があります。
例えば次のコードを実行したとしましょう。
await this.prisma.company.findUnique({
  where: { id },
  include: {
    shop: true,
  },
});
これに対して大抵の人は以下のようなクエリが発...]]></description><link>https://zenn.dev/toridori/articles/3820e3b137a0fd</link><guid isPermaLink="true">https://zenn.dev/toridori/articles/3820e3b137a0fd</guid><pubDate>Thu, 26 Dec 2024 03:41:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Df7t3a7O--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2582%25E3%2581%25AEprisma%2520previewFeatures%25E3%2581%25AF%25E4%25BB%258A%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yrmz%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxOWMzMTdiMzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:toridori%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxNzYyYjFmZjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yrmz</dc:creator></item><item><title><![CDATA[`node:test` のスナップショットテスト（--experimental-test-snapshots）を試す]]></title><description><![CDATA[https://www.mizdra.net/entry/2024/11/22/114114
この記事の中でスナップショットテスト（--experimental-test-snapshots）については名前だけで具体例が無かったのですが、ちょうどJestのスナップショットテストを使っているOSSをメンテしていたのでJest -&gt; node:test に置き換えられるか試してみました。

 node:test + TypeScriptのセットアップ
実際のコードを置き換えてみる前に、最小限のコードで node:test とTypeScriptを使ったテストを実行する方法を試してみます...]]></description><link>https://zenn.dev/kesin11/articles/20241130_node_test_snapshot</link><guid isPermaLink="true">https://zenn.dev/kesin11/articles/20241130_node_test_snapshot</guid><pubDate>Thu, 26 Dec 2024 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2uVjEOSS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2560node%253Atest%2560%2520%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%258A%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25EF%25BC%2588--experimental-test-snapshots%25EF%25BC%2589%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kesin11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5YnpxY196Y2VPbEhIWlJGajNaSDdYWlM0OXVCNzdFZVZjV2xrbXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kesin11</dc:creator></item><item><title><![CDATA[最低限の flat config（まずは no-unused-imports を動かす）]]></title><description><![CDATA[
 はじめに
Next.js 最新版（15.1系）で始めると、eslint は9系になるので flat config で設定しなくてはなりません。
確認した技術スタックは下記のとおりです。

next: 15.1.2
react: 19.0.0
react-dom: 19.0.0


 設定していく
今回は息子のためにトイプログラムを作りたいだけなので、
とりあえず no-unused-imports を効かすためにパッケージのインストールと設定をしていきます。
$ npm i -D typescript-eslint eslint-plugin-unused-imports

.vsc...]]></description><link>https://zenn.dev/seventhseven07/articles/06a02c4048decf</link><guid isPermaLink="true">https://zenn.dev/seventhseven07/articles/06a02c4048decf</guid><pubDate>Thu, 26 Dec 2024 00:40:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rOjkliVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2581%25AE%2520flat%2520config%25EF%25BC%2588%25E3%2581%25BE%25E3%2581%259A%25E3%2581%25AF%2520no-unused-imports%2520%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shumpei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyY2ZhOWM5YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shumpei</dc:creator></item><item><title><![CDATA[ReactコンポーネントをAngularで使う]]></title><description><![CDATA[はじめまして、@onicode3です。
AngularコンポーネントからReactコンポーネントを使う方法を紹介します。

 Angular から React コンポーネントを使う実装方法

 1. React パッケージのインストール
Reactをインストールします。
今回はテストの為、angularからreact-selectを表示してみます。
npm i react react-dom react-select
npm i -D @types/react @types/react-dom

 2. tsconfig.json の設定
tsconfig.json に jsx の設定を...]]></description><link>https://zenn.dev/onicode3/articles/react-in-angular</link><guid isPermaLink="true">https://zenn.dev/onicode3/articles/react-in-angular</guid><pubDate>Wed, 25 Dec 2024 22:51:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hKDnqpfD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592Angular%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onicode3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMmNlZTVjN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onicode3</dc:creator></item><item><title><![CDATA[TypeScript ORMのトランザクションをUsecaseで綺麗に扱う]]></title><description><![CDATA[
 ねらい
この記事のねらいは、Usecase層から複数のリポジトリを呼び出す際、ORM標準のトランザクション機能をそのまま利用することなく、型安全かつレイヤーの分離を崩さない方法でトランザクションを扱えるようにすることです。
具体的には、以下のようなコードでトランザクションを実行出来るようにしていきます。

Usecase サンプル
function OrderProduct(uRepo:UserRepository, pRepo: ProductRepository, oRepo:OrderRepository, tx: TransactionRunner) {
  return a...]]></description><link>https://zenn.dev/nsi/articles/a3a547fab86d79</link><guid isPermaLink="true">https://zenn.dev/nsi/articles/a3a547fab86d79</guid><pubDate>Wed, 25 Dec 2024 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xGJX2J3N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520ORM%25E3%2581%25AE%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B6%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592Usecase%25E3%2581%25A7%25E7%25B6%25BA%25E9%25BA%2597%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nsi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5NjA1NjBlYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nsi</dc:creator></item><item><title><![CDATA[TypeORMの未来とMikroORMの現在]]></title><description><![CDATA[
 Intro
!
この記事はMisskey Advent Calendar 2024 25日目の記事です。


 TypeORM
Misskeyのデータベースを支えるORM、TypeORMですが、7ヶ月ほど全く動きがなく、存続が危ぶまれていていました。
https://typeorm.io/
しかし最近TypeORMの未来について以下のページが追加されました。
https://typeorm.io/future-of-typeorm
詳しい経緯や内容はuki00aさんがまとめているので、以下の記事を参照してください。
https://scrapbox.io/uki00a/TypeORM...]]></description><link>https://zenn.dev/tkithrta/articles/5a2516cfe9b3cf</link><guid isPermaLink="true">https://zenn.dev/tkithrta/articles/5a2516cfe9b3cf</guid><pubDate>Wed, 25 Dec 2024 14:57:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vS1KeglZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeORM%25E3%2581%25AE%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25A8MikroORM%25E3%2581%25AE%25E7%258F%25BE%25E5%259C%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25BB%2592%25E3%2583%25B0%25E6%25A8%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NDRlMTA4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>黒ヰ樹</dc:creator></item><item><title><![CDATA[PortalKeyを支える技術 - WebRTCを使ったコミュニケーションプラットフォーム実装への挑戦の振り返り]]></title><description><![CDATA[
初めまして、PortalKeyの植森です。
Twitter(X)などではwakaba260というHNで活動しており、現在はPortalKeyという会社でCTOをしています。
PortalKeyでは現在、新規アプリとして軸となるサービスを開発中です。
今回、サービスをリリースする前にどんな人が作っているのか・どうやって作っているのかを伝えていこうということで技術ブログを始めることにしました。
よろしくお願いします。
はじめての技術ブログと今年1年の振り返りということで、それを実現するためにどういう技術を採用しているのか・なぜそれを採用したのか、そしてどういった設計をしているのかということ...]]></description><link>https://zenn.dev/portalkeyinc/articles/1e3ac0ce64f4e6</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/1e3ac0ce64f4e6</guid><pubDate>Wed, 25 Dec 2024 10:10:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RSWf-6tc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PortalKey%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520-%2520WebRTC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25B8%25E3%2581%25AE%25E6%258C%2591%25E6%2588%25A6%25E3%2581%25AE%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wakaba260%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hYOTVyU0tGaEZ1Xy00RWJGMXVDMldKcms2SEtYMFZ4MV91ZjhrRkE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakaba260</dc:creator></item><item><title><![CDATA[【TS】ユーザー定義型ガードの代わりにValibotを使う]]></title><description><![CDATA[
 はじめに
Specteeでエンジニアをしている永野です。
TypeScript での開発において、DB や Web API から取得した値が any 型になっていることがよくありますが、any をそのまま使ったり as で型アサーションをすることが危険であることはよく知られています。
そして、それらの危険性を回避するためにユーザー定義型ガードを使用することがあるかと思います。
しかし、ユーザー定義型ガードは危険性の存在する範囲を狭めることは出来ますが、完全に排除することは出来ません。
そこで、今回はユーザー定義型ガードの代わりに Valibot を使用する方法を紹介します。

 ユー...]]></description><link>https://zenn.dev/spectee/articles/bcd53c1aae0074</link><guid isPermaLink="true">https://zenn.dev/spectee/articles/bcd53c1aae0074</guid><pubDate>Wed, 25 Dec 2024 06:58:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r0-3ZNrX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TS%25E3%2580%2591%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E5%25AE%259A%25E7%25BE%25A9%25E5%259E%258B%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25ABValibot%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Y.N%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkwYzYyY2ZlNDQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Spectee%2520Developers%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlZjQyYWRjNGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y.N</dc:creator></item><item><title><![CDATA[Vite PWA⚡ を使用して、Service Worker を TypeScript で書く]]></title><description><![CDATA[
 動機
Firebase Cloud Messaging(以下: FCM) を利用するにあたって、Service Worker の実装が必要になりました。React Router v7 をフレームワークとして採用していたこともあり、public ディレクトリ直下に Service Worker 用の js ファイルを配置すれば問題ないのですが、以下の要件をできれば満たしたいと思ったのがきっかけになります。

Service Worker の実装も TypeScript で書きたい

開発中は TypeScript のファイルでも、良い感じに Service Worker が動いて欲しい...]]></description><link>https://zenn.dev/matazou/articles/030c830ef12ba9</link><guid isPermaLink="true">https://zenn.dev/matazou/articles/030c830ef12ba9</guid><pubDate>Wed, 25 Dec 2024 06:39:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M8AJw0hf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%2520PWA%2520%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581Service%2520Worker%2520%25E3%2582%2592%2520TypeScript%2520%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%259F%25E3%2581%259E%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2ODM3NjVmMTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>またぞー</dc:creator></item><item><title><![CDATA[アスキーフィルターをGLSLとP5.jsで実装した話]]></title><description><![CDATA[本記事はProcessing Advent Calendar2024の記事です。
なおフィルターのソースコードはここにあります。

 アスキーとは
7ビットで0b0000000から0b1111111までの番号を使い、数値に対応する文字や数字を定めたものです。

英語アルファベットの大文字と小文字
記号

0 ~ 9までの数字
制御文字

たとえば0b1000001と言う数字は英大文字のAを表しています。
アスキーはUnicodeのUTF-8と互換性があります。

 アスキーフィルターとは
画像や映像をピクセル単位でアスキー文字に置き換えるフィルターです。
画像や映像の色と座標で表示する文...]]></description><link>https://zenn.dev/hosoda_math/articles/dc84b8f111beb8</link><guid isPermaLink="true">https://zenn.dev/hosoda_math/articles/dc84b8f111beb8</guid><pubDate>Wed, 25 Dec 2024 05:14:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lRAbfbIe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25AB%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592GLSL%25E3%2581%25A8P5.js%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shingo%2520Hosoda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shingo Hosoda</dc:creator></item><item><title><![CDATA[今後のTypeScriptに期待すること / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の25日目です。昨日は『Biomeを使ったLintとフォーマット』を紹介しました。

 TypeScriptへの期待
TypeScript 一人 Advent Calendar 2024 最終日である本日は、TypeScriptの直近の流れを振り返りつつ「今後どんな進化があったら嬉しいか」を自由に妄想してみたいと思います。

 TypeScriptはここ数年でも進化を続けている
まずは、直近の振り返りから。TypeScriptは0...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9ertzced45pddnk6c6</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9ertzced45pddnk6c6</guid><pubDate>Wed, 25 Dec 2024 01:43:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RobEEshx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E5%25BE%258C%25E3%2581%25AETypeScript%25E3%2581%25AB%25E6%259C%259F%25E5%25BE%2585%25E3%2581%2599%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[[Typescript]よく使うユーティリティ型]]></title><description><![CDATA[
 TypeScript ユーティリティ型まとめ

 1. keyof

keyofを使用すると、インターフェースのキーをユニオン型として取得できます。
interface User {
  id: number;
  name: string;
  age: number;
  gender: "m" | "f";
}

type UserKey = keyof User; // 'id' | 'name' | 'age' | 'gender';

const userKey1: UserKey = 'phone';  // エラー
const userKey2: UserKey = ...]]></description><link>https://zenn.dev/heatherjin/articles/9f71eaed8a722f</link><guid isPermaLink="true">https://zenn.dev/heatherjin/articles/9f71eaed8a722f</guid><pubDate>Wed, 25 Dec 2024 00:51:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gt8Osjyt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypescript%255D%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AA%25E3%2583%259C%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUQ0NnhSVTRQalhfb1c3RVMyRzQ5eS1kbXFibHp4azBWTDRGQjlCOHFuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハリボー</dc:creator></item><item><title><![CDATA[Cloudflare Workers AI 使ってみた「画像分類編」]]></title><description><![CDATA[
 はじめに
こんにちは、ikechanこといけがわです。
前回の記事では、Cloudflare Workers AIを活用して、テキストから画像を生成する方法を試しました。今回はその続きとして、「生成した画像をどのように分類できるか」というテーマに取り組みます。具体的には、Cloudflare Workers AIのresnet-50モデルを使用して画像分類を試してみました。
普段のプロジェクトや開発では、画像が何であるかを自動で識別する必要がある場面はそれほど多くないかもしれません。しかし、生成した画像や外部からアップロードされた画像データを分類する仕組みを実装し、resnet-50...]]></description><link>https://zenn.dev/toraco/articles/6253eddf3a3d6f</link><guid isPermaLink="true">https://zenn.dev/toraco/articles/6253eddf3a3d6f</guid><pubDate>Wed, 25 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iYnScTPU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%2520AI%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%258C%25E7%2594%25BB%25E5%2583%258F%25E5%2588%2586%25E9%25A1%259E%25E7%25B7%25A8%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ikechan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5ZTBhNDI3ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:toraco%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlZTIxYjg3YWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikechan</dc:creator></item><item><title><![CDATA[ViteをMPAのモジュールバンドラとして使う]]></title><description><![CDATA[
この記事ではcreate vite (Vue + TypeScript)のボイラープレートを使います。Vueを選択していますが、末端技術は他を選択していても問題無いので、使うライブラリに合わせて適宜読み替えてください。
デフォルトではエントリーポイントは index.html だけのため、別Page(sub-page.html)を新規で作ります。
vite-project
  ├── src
  │  └── ...
  ├── index.html
+ ├── sub-page.html
  └── ...

 sub-page.html
&lt;!doctype html&gt;
...]]></description><link>https://zenn.dev/hairihou/articles/build-mpa-by-vite</link><guid isPermaLink="true">https://zenn.dev/hairihou/articles/build-mpa-by-vite</guid><pubDate>Tue, 24 Dec 2024 22:01:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8bgchphJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vite%25E3%2582%2592MPA%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hairihou%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2YWE2OWE2MjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hairihou</dc:creator></item><item><title><![CDATA[OpenAI API RateLimitError対策！フルスクラッチで実装するExponential Backoff]]></title><description><![CDATA[
 はじめに
こんにちは！
any株式会社でプロダクトチームに所属しているエンジニアの @fumiyan です！
この記事は、any Product Team Advent Calendar2024 最終日の25日目の記事になります。
https://qiita.com/advent-calendar/2024/anyinc
クリスマスは、Raspberry Piを3台使ってk8sを構築して遊ぶ予定です😇
本記事では、TypeScriptを用いてExponential Backoff（指数バックオフ）をフルスクラッチで実装し、OpenAI APIのRateLimitError対策を行った...]]></description><link>https://zenn.dev/any_dev/articles/e810fbd1dfb68d</link><guid isPermaLink="true">https://zenn.dev/any_dev/articles/e810fbd1dfb68d</guid><pubDate>Tue, 24 Dec 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AsalXhWT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520API%2520RateLimitError%25E5%25AF%25BE%25E7%25AD%2596%25EF%25BC%2581%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2581%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258BExponential%2520Backoff%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fumiyan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZjBlNjg2MzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:any%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY5ZDhmZGU0ZGYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fumiyan</dc:creator></item><item><title><![CDATA[第三話：〇からAIアプリを開発する方法]]></title><description><![CDATA[
 第三話：〇からAIアプリを開発する方法
ドンキの外国人行列は半端ないなぁと最近思うこの頃、です。
薬を買うために待っている間、TikTokで見た内容がディープフェイクではないか確認する為、トランプについてChatGPTに尋ねました。

Q:ドナルド・トランプはお酒を飲まないの？


A:ドナルド・トランプはお酒を飲まないそうです。その理由として、彼の兄であるフレッド・トランプ・ジュニアがアルコール依存症で苦しみ、1981年に42歳で亡くなったことが大きな要因とされています。


A:フレッド・トランプ・ジュニアの悲劇的な死が、ドナルド・トランプに「飲酒を避ける」という決意をさせたとさ...]]></description><link>https://zenn.dev/takayamasashi/articles/9da050c90cbd0b</link><guid isPermaLink="true">https://zenn.dev/takayamasashi/articles/9da050c90cbd0b</guid><pubDate>Tue, 24 Dec 2024 21:12:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7GrOUs6Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AC%25AC%25E4%25B8%2589%25E8%25A9%25B1%25EF%25BC%259A%25E3%2580%2587%25E3%2581%258B%25E3%2582%2589AI%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E8%25B0%25B7%25E6%2598%258C%25E5%25BF%2597-%25E3%2583%2596%25E3%2583%25AB%25E3%2583%2586%25E3%2583%258A%25E3%2582%25B5%25E3%2582%25B9Inc.%25E4%25BB%25A3%25E8%25A1%25A8%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高谷昌志-ブルテナサスInc.代表</dc:creator></item></channel></rss>