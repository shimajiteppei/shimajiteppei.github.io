<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 06 Jun 2025 05:35:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Next.js + Rails API を Docker コンテナで構築する手順]]></title><description><![CDATA[
 はじめに
昨今、フロントエンドに React（Next.js）を、バックエンドに Rails API を組み合わせた構成を見かける様になりました。
本記事では、「ホストマシンに Ruby や Node.js を一切インストールせず、すべて Docker コンテナ上で構築・起動する環境」をゼロから用意する手順を解説します。
本記事の手順に沿って必要なファイルを揃えれば、最後に docker compose up --build だけで開発環境が立ち上がり、Rails API と Next.js の開発サーバーを同時に動かせます。
また、本記事はあくまで開発の環境構築であり、本番環境の構...]]></description><link>https://zenn.dev/mothimothi/articles/821d6eb819b44a</link><guid isPermaLink="true">https://zenn.dev/mothimothi/articles/821d6eb819b44a</guid><pubDate>Thu, 05 Jun 2025 21:03:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UlaPPt_Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%252B%2520Rails%2520API%2520%25E3%2582%2592%2520Docker%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A1%25E3%2582%2582%25E3%2581%25A1%25E5%2592%258C%25E5%25B0%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1M2JhMTYwNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もちもち和尚</dc:creator></item><item><title><![CDATA[Next.jsとRailsを活用したDocker環境構築]]></title><description><![CDATA[
 はじめに
React、TypeScript、Tailwind CSS (v4)、Rails、PostgreSQLを扱えるDocker環境を構築する時に、インストールするパッケージをフロントエンド用とバックエンド用のディレクトリに分け、効率的に管理できるようにしたいと思ったので、備忘録として記事にまとめてみました。

 目標
フロントエンドのビルドツールにNext.jsを採用し、 React + TypeScript + Tailwind CSS (v4) + Rails + PostgreSQLを搭載したDocker環境の構築を目指します。
インストールするパッケージはフロントエンド...]]></description><link>https://zenn.dev/yutaro63b/articles/1ec49190a079eb</link><guid isPermaLink="true">https://zenn.dev/yutaro63b/articles/1ec49190a079eb</guid><pubDate>Thu, 05 Jun 2025 08:23:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GI5dWAW9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A8Rails%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FDocker%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkOWU2YWQyNjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユータロー</dc:creator></item><item><title><![CDATA[Claude CodeのDev Container Featureが出てた]]></title><description><![CDATA[知らん間にAnthropicから公式のDev Container Featuresが出ていた。
https://github.com/anthropics/devcontainer-features
devcontainer.json に以下のように記述することでDev ContainerにClaude Codeをセットアップすることができる。
"features": {
    "ghcr.io/anthropics/devcontainer-features/claude-code:1.0": {}
}
普段からDev Container上でClaude Codeを利用しているので、...]]></description><link>https://zenn.dev/fumitoito/articles/c57a7f42c29f83</link><guid isPermaLink="true">https://zenn.dev/fumitoito/articles/c57a7f42c29f83</guid><pubDate>Wed, 04 Jun 2025 23:52:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---uEzl0qf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25E3%2581%25AEDev%2520Container%2520Feature%25E3%2581%258C%25E5%2587%25BA%25E3%2581%25A6%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fumito%2520Ito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUFpMUJCUVNQMTg4NXFYdXlrMWEtUDZrZjZVQ0xTa3pDZVotMDRpYy1yYXFkQUFYOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Fumito Ito</dc:creator></item><item><title><![CDATA[Dockerfile初心者が0から軽量イメージを作って、動作確認までやってみた]]></title><description><![CDATA[
 マルチステージビルドで軽量化＆コンテナ内部からの動作確認で理解が深まったので共有します

 はじめに
フロントエンドエンジニアのゆず（@yuzunosk55）です。
プライベートでバックエンドやインフラ領域の理解を深めています。
この記事では、Honoを使って構築したアプリケーションのDockerfileを作る方法とDockerコンテナで動作させる方法を解説しています。
コンテナ起動後は、実際にリクエストなどを送り動作確認まで行ったのでその方法についても学んだ事を書いています。
初学者の参考になれば幸いです。
※ 未熟な身ですので誤りもあると思います。良かったらコメントなどでご指摘い...]]></description><link>https://zenn.dev/yuzunosk55/articles/db0a3ef87a6814</link><guid isPermaLink="true">https://zenn.dev/yuzunosk55/articles/db0a3ef87a6814</guid><pubDate>Wed, 04 Jun 2025 14:38:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2yR70V41--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dockerfile%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258C0%25E3%2581%258B%25E3%2582%2589%25E8%25BB%25BD%25E9%2587%258F%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E5%258B%2595%25E4%25BD%259C%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25BE%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MjIzZjAxZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆず</dc:creator></item><item><title><![CDATA[macOSで1Password SSH署名をDocker Dev Container内で使用する]]></title><description><![CDATA[
 1. はじめに
近年、セキュリティ向上のためにGitコミットにSSH署名を付与することが一般的になってきた。1PasswordのSSH Agent機能を使用することで、秘密鍵をローカルディスクに保存することなく、安全にコミット署名を行うことができる。
しかし、VS CodeのDev Containersを使用した開発環境では、コンテナ内から1PasswordのSSH Agentにアクセスできないという問題が発生する。本記事では、この問題を解決し、Docker Dev Container内でも1PasswordのSSH署名を使用する方法を解説する。

 2. 発生していた問題
Dev ...]]></description><link>https://zenn.dev/fumitoito/articles/494a0025790321</link><guid isPermaLink="true">https://zenn.dev/fumitoito/articles/494a0025790321</guid><pubDate>Wed, 04 Jun 2025 13:30:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hlgJNxmc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:macOS%25E3%2581%25A71Password%2520SSH%25E7%25BD%25B2%25E5%2590%258D%25E3%2582%2592Docker%2520Dev%2520Container%25E5%2586%2585%25E3%2581%25A7%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Fumito%2520Ito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUFpMUJCUVNQMTg4NXFYdXlrMWEtUDZrZjZVQ0xTa3pDZVotMDRpYy1yYXFkQUFYOD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Fumito Ito</dc:creator></item><item><title><![CDATA[Dockerはなぜ速い？軽量仮想化の秘密「カーネル共有とレイヤー構造」を徹底深掘り]]></title><description><![CDATA[
 はじめに
Dockerの最大の魅力は「軽量で高速でオーバーヘッドが少ない」仮想環境の提供ですが、
なぜそれが実現できるのか、深く理解していませんでした。

何が軽量なのか？
なぜ起動が早いのか？
オーバーヘッドがないとは？
といった疑問が湧いてきたので深掘りしてみようと思います。

今回は、Dockerの高速性の秘密である 「ホストOSのカーネル共有」 と 「レイヤー構造」 に焦点を当てて深掘りしていきます。

 対象

Dockerを使っているが、どういう動作をしているかまで理解できていない人


 従来の仮想化（VM）との違い
一言で言うと 「OSのエミュレーションが不要だから」...]]></description><link>https://zenn.dev/hokahiro/articles/docker-question</link><guid isPermaLink="true">https://zenn.dev/hokahiro/articles/docker-question</guid><pubDate>Wed, 04 Jun 2025 07:18:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oSj48Jvf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%259C%25E9%2580%259F%25E3%2581%2584%25EF%25BC%259F%25E8%25BB%25BD%25E9%2587%258F%25E4%25BB%25AE%25E6%2583%25B3%25E5%258C%2596%25E3%2581%25AE%25E7%25A7%2598%25E5%25AF%2586%25E3%2580%258C%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25AB%25E5%2585%25B1%25E6%259C%2589%25E3%2581%25A8%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E6%25A7%258B%25E9%2580%25A0%25E3%2580%258D%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E6%25B7%25B1%25E6%258E%2598%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2582%258D%25E3%2581%25AE%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGhham1Ib183ZGx3bERfU1JMSTJITGx0ZkU5N0tOQmstaEplblBNNVF5THVUdD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひろのぶ</dc:creator></item><item><title><![CDATA[ミリしらKubernetes〜ド初心者がKubernetesをある程度理解するまでの記録〜<実践編>]]></title><description><![CDATA[
 🙇‍♂️ はじめに
この記事ではKubernetesの実践編となっており、実際に手を動かしながら学習した記録になります。
基礎編は下記記事に掲載していますので、お時間あるときにどうぞ！
https://zenn.dev/wan0ri/articles/aa3c2efdde0b1c

 📕 Kubernetesリソース
リソースについては 前回の 📋 Kubernetesリソースの理解 の章でも記載しましたが、改めて詳細の説明を記載したいと思います。

 Pod
Pod とは、Kubernetesの最小単位のリソースです。
詳細については、以下の通りになります。

Dockerコンテナ...]]></description><link>https://zenn.dev/wan0ri/articles/4796bd18a92b47</link><guid isPermaLink="true">https://zenn.dev/wan0ri/articles/4796bd18a92b47</guid><pubDate>Wed, 04 Jun 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ksROLLhc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%25AA%25E3%2581%2597%25E3%2582%2589Kubernetes%25E3%2580%259C%25E3%2583%2589%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CKubernetes%25E3%2582%2592%25E3%2581%2582%25E3%2582%258B%25E7%25A8%258B%25E5%25BA%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%259C%253C%25E5%25AE%259F%25E8%25B7%25B5%25E7%25B7%25A8%253E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wan0ri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzM2M3Y2U5OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wan0ri</dc:creator></item><item><title><![CDATA[ミリしらKubernetes〜ド初心者がKubernetesをある程度理解するまでの記録〜<基礎知識編>]]></title><description><![CDATA[
 🙇‍♂️ はじめに
気合を入れてKubernetesの学習記録を書いていたら脅威の70000字超えになってしまいました💦
そこで、この記事ではKubernetesの基礎的な知識を掲載しようと思います。
実際のハンズオンは下記の記事よりご覧ください🙇‍♂️
https://zenn.dev/wan0ri/articles/4796bd18a92b47

 🎯 冒頭のご挨拶
筆者はDockerを業務で触ったことはございますが、Kubernetesを業務で触ったことがございません。
そこで、
Kubernetesを1ミリもしらない状態でアウトプットしていけばどこまで理解することができるのか...]]></description><link>https://zenn.dev/wan0ri/articles/aa3c2efdde0b1c</link><guid isPermaLink="true">https://zenn.dev/wan0ri/articles/aa3c2efdde0b1c</guid><pubDate>Wed, 04 Jun 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iCAPBbm0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%25AA%25E3%2581%2597%25E3%2582%2589Kubernetes%25E3%2580%259C%25E3%2583%2589%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CKubernetes%25E3%2582%2592%25E3%2581%2582%25E3%2582%258B%25E7%25A8%258B%25E5%25BA%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%25E3%2580%259C%253C%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598%25E7%25B7%25A8%253E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wan0ri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzM2M3Y2U5OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wan0ri</dc:creator></item><item><title><![CDATA[DinD vs DooD: CI/CD環境での選択と集中]]></title><description><![CDATA[
 はじめに
最近、会社でCI/CDに関する問題が発生した経験がありました。
GitLab CI/CD + ECR + AWS ECR Credential Helperを使用する環境で、コンテナ内でAWS ECR Credential Helperを使うためのdocker設定ファイルやAWS ECR Credential Helperファイルが見つからないという問題でした。
イメージをビルドする際に、そのバイナリやdocker設定ファイルを適用していなかったので当然のことでした。
関連内容をリサーチした結果、GitLabではこの問題を解決する2つの方法が提案されていました。[1]


...]]></description><link>https://zenn.dev/sonsu/articles/5ffb4c47a97ec3</link><guid isPermaLink="true">https://zenn.dev/sonsu/articles/5ffb4c47a97ec3</guid><pubDate>Tue, 03 Jun 2025 16:14:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G7MjyR_G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DinD%2520vs%2520DooD%253A%2520CI%252FCD%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2581%25AE%25E9%2581%25B8%25E6%258A%259E%25E3%2581%25A8%25E9%259B%2586%25E4%25B8%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sonsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZGVkNzE0NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sonsu</dc:creator></item><item><title><![CDATA[Alibaba Cloudのアウトバウンドトラフィック料金の整理]]></title><description><![CDATA[Alibaba Cloudでは、複数のサービスにおけるアウトバウンドトラフィックの料金がCloud Data Transfer（CDT）に統合されています。

 CDT（Cloud Data Transfer）
CDTは、Elastic Compute Service（ECS）、Elastic IP（EIP）、Classic Load Balancer（CLB）など、インターネットアクセスを提供する各リージョンの複数のサービスのインターネットデータ転送を、段階的価格設定に基づいて集計および課金します。
CDTでは、送信データ転送課金が適用され、課金サイクルは1時間ごとです。

 CDTが...]]></description><link>https://zenn.dev/kaikakin/articles/bf3b9864ac325a</link><guid isPermaLink="true">https://zenn.dev/kaikakin/articles/bf3b9864ac325a</guid><pubDate>Tue, 03 Jun 2025 12:19:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ieqSry1T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alibaba%2520Cloud%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2590%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2595%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E6%2596%2599%25E9%2587%2591%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAIKAKIN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YWM5N2IwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HAIKAKIN</dc:creator></item><item><title><![CDATA[AlibabaCloudのEdge Security Acceleration(ESA)とは？従来のCDNとの違いを徹底解説]]></title><description><![CDATA[近年、ウェブサービスの高速化とセキュリティ強化の重要性が増しています。Alibaba CloudのEdge Security Acceleration（ESA）は、これらのニーズに応える次世代のエッジ加速プラットフォームです。本記事では、ESAの特徴と、以前のDCDNや従来のCDNとの違いについて詳しく解説します。

 ESAとは？
ESA（Edge Security Acceleration）は、Alibaba Cloudが提供するエッジ加速サービスで、グローバルに分散された3,200以上のエッジノードを活用し、動的・静的コンテンツの高速配信と高度なセキュリティ機能を統合しています。
...]]></description><link>https://zenn.dev/kaikakin/articles/2c166fe6422312</link><guid isPermaLink="true">https://zenn.dev/kaikakin/articles/2c166fe6422312</guid><pubDate>Tue, 03 Jun 2025 11:49:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--epoosRl4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AlibabaCloud%25E3%2581%25AEEdge%2520Security%2520Acceleration%2528ESA%2529%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E5%25BE%2593%25E6%259D%25A5%25E3%2581%25AECDN%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAIKAKIN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YWM5N2IwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HAIKAKIN</dc:creator></item><item><title><![CDATA[Alibaba Cloud ACS入門：ALB IngressでKubernetesサービスを公開する方法]]></title><description><![CDATA[Alibaba CloudのACSクラスタにALB Ingressを導入することで、HTTP/HTTPSトラフィックを効率的に管理できます。

 1. ALB Ingress Controllerのインストール
ACSクラスターを作成するときに、ALB Ingress Controllerをインストールするように設定します。
もしくは下記の手順で後からインストールします。
ACKクラスタにALB Ingress Controllerをインストールするには、以下の手順を実行します
1.ACSコンソールにログイン
2.クラスター一覧からクラスター名をクリックして、詳細画面に遷移
3.左側のナ...]]></description><link>https://zenn.dev/kaikakin/articles/00d8e00a698cf0</link><guid isPermaLink="true">https://zenn.dev/kaikakin/articles/00d8e00a698cf0</guid><pubDate>Tue, 03 Jun 2025 11:23:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z4ch-xGD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alibaba%2520Cloud%2520ACS%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259AALB%2520Ingress%25E3%2581%25A7Kubernetes%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAIKAKIN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YWM5N2IwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HAIKAKIN</dc:creator></item><item><title><![CDATA[Alibaba Cloud ACS 入門：ArgoCDでGitOpsを始めよう]]></title><description><![CDATA[前回はAlibaba Cloudの完全サーバーレスKubernetesサービス「Container Service（ACS）」の概要を紹介しました。今回は、実際にACS上にGitOpsの仕組みを構築し、ArgoCDを使って自作Helmチャートをデプロイしてみます。

 1. 前提条件
以下の環境を前提とします：

ACSクラスタが作成済み
kubectl と helm コマンドがローカルにインストール済み
GitHubにHelmチャートを格納したリポジトリを用意済み


 2. ArgoCDのインストール
ACSクラスタにArgoCDをインストールします。まずはargocdという名前空間...]]></description><link>https://zenn.dev/kaikakin/articles/ef10631de1d8f6</link><guid isPermaLink="true">https://zenn.dev/kaikakin/articles/ef10631de1d8f6</guid><pubDate>Tue, 03 Jun 2025 11:00:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l-X3998A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alibaba%2520Cloud%2520ACS%2520%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259AArgoCD%25E3%2581%25A7GitOps%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAIKAKIN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YWM5N2IwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HAIKAKIN</dc:creator></item><item><title><![CDATA[Alibaba Cloud ACS 入門：プライベートイメージをシークレットレスで管理する方法]]></title><description><![CDATA[
 1. 概要

 aliyun-acr-credential-helperを使って、パスワードなしでACRからイメージをプルする方法
Kubernetes環境でプライベートなコンテナイメージを安全かつ効率的にデプロイするには、認証情報の管理が重要です。
Alibaba Cloudでは、aliyun-acr-credential-helperコンポーネントを利用することで、シークレットを明示的に設定せずに、ACRからイメージをプルすることが可能です。

 2. aliyun-acr-credential-helperとは？
aliyun-acr-credential-helperは、Al...]]></description><link>https://zenn.dev/kaikakin/articles/ce23f588628a72</link><guid isPermaLink="true">https://zenn.dev/kaikakin/articles/ce23f588628a72</guid><pubDate>Tue, 03 Jun 2025 09:48:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HelzvBW9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Alibaba%2520Cloud%2520ACS%2520%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HAIKAKIN%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YWM5N2IwZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HAIKAKIN</dc:creator></item><item><title><![CDATA[【デプロイ】（画像解説付）VercelとRender にそれぞれVueとDjangoアプリをデプロイ]]></title><description><![CDATA[
 達成イメージ

ローカルでの環境構築イメージ図

Vercelの画面（左）とRenderの画面（右）
!
フロントエンドであるVueをVercel（左）へデプロイし、バックエンドであるDjangoをRender（右）へデプロイし、データベースはRender用のDB（右）を用いて、それぞれを連携している状態。

デプロイのアーキテクチャ構成[ユーザー] 
    ↓
[Vercel - フロントエンド（Vue.js）](https://app-name-woad-two.vercel.app)
    ↓ API呼び出し
[Render - バックエンド(Django)](https:...]]></description><link>https://zenn.dev/code_journey_ys/articles/814faf0344bc22</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/814faf0344bc22</guid><pubDate>Tue, 03 Jun 2025 08:58:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GyAVmpAQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2580%2591%25EF%25BC%2588%25E7%2594%25BB%25E5%2583%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E4%25BB%2598%25EF%25BC%2589Vercel%25E3%2581%25A8Render%2520%25E3%2581%25AB%25E3%2581%259D%25E3%2582%258C%25E3%2581%259E%25E3%2582%258CVue%25E3%2581%25A8Django%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[🐳Docker基礎]]></title><description><![CDATA[
 🐳Dockerとは？
Dockerとは、コンテナ技術を使ってアプリケーションを実行・配布・管理するためのツールです。
Linuxカーネルの機能を直接使ってコンテナを実現しています。
イメージ（アプリの設計図）とコンテナ（実行中の実体）を区別します。
仮想マシンと違って軽量・高速に起動・削除ができます。

 コンテナとは？
コンテナは、「ホストOSのカーネルを共有しながら、隔離された環境で動くプロセス」のことです。
ホストのカーネルは使いますが、ファイルシステム・プロセス空間・ネットワークなどは仮想的に独立しています。

 カーネルとは？
カーネルとは、OSの中核部分でハードウェアとソ...]]></description><link>https://zenn.dev/kasai/articles/39d65d4825abc2</link><guid isPermaLink="true">https://zenn.dev/kasai/articles/39d65d4825abc2</guid><pubDate>Tue, 03 Jun 2025 07:11:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Bdfbe1Tv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%2520Docker%25E5%259F%25BA%25E7%25A4%258E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasai%2520Ukyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlYjgwMzQ4N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasai Ukyo</dc:creator></item><item><title><![CDATA[ローカルAMDマシンからARM向けDockerイメージをECRにpushする]]></title><description><![CDATA[Docker Hubからイメージをpullして、ECRのプライベートリポジトリにpushしたい。
ECSはARMで起動するが、ローカルマシンがAMDの時にどうするか。
例としてDify-appを挙げる。
langgenius/dify-api:1.2.0
https://hub.docker.com/layers/langgenius/dify-api/1.2.0/images/sha256-61ccc755edc0c4739ce36e992848199b40314a67b90e855c9883d4e95895fa48
アーキテクチャがAMDかARMかによってdocker imageが異...]]></description><link>https://zenn.dev/delta_tsuruta/articles/8f901a31c65bbb</link><guid isPermaLink="true">https://zenn.dev/delta_tsuruta/articles/8f901a31c65bbb</guid><pubDate>Tue, 03 Jun 2025 05:28:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HD8h8Fwe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABAMD%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2581%258B%25E3%2582%2589ARM%25E5%2590%2591%25E3%2581%2591Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ECR%25E3%2581%25ABpush%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ShutoTsuruta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmYmJlZTcxNWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ShutoTsuruta</dc:creator></item><item><title><![CDATA[【Docker編】Linux環境にDockerをインストールする方法]]></title><description><![CDATA[おかえりなさい。
今回は、Linux環境にDockerをインストールする手順について解説しています。※2025年6月時点

 環境情報
Ubuntu（ver20.04.6）にDocker（ver28.1.1）を入れる想定です。
Rubyの開発環境を構築するためにDockerを利用します。
ここでは、LinuxにDockerをインストールするところまでを記載しています。

 インストール手順

 １：パッケージリストの更新
次のコマンドを実行します。
$ sudo apt update
パスワード入力が求められるので、Linuxで使用しているユーザのパスワードを入力します。
もし更新できる...]]></description><link>https://zenn.dev/justintime/articles/a2befc72000ebb</link><guid isPermaLink="true">https://zenn.dev/justintime/articles/a2befc72000ebb</guid><pubDate>Mon, 02 Jun 2025 09:20:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XMa-1vZ2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E7%25B7%25A8%25E3%2580%2591Linux%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABDocker%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:justin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRrSEx6UzVKZ3ZOLTJLeW40NnFNeXk0Z2JlOXhkbnp5cFF5aXZldnhyV3F1Zm9RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>justin</dc:creator></item><item><title><![CDATA[Azure VMでDockerを使う時はサイズに気をつけましょう]]></title><description><![CDATA[
 Docker Desktopが使えない
Azure上に Standard B2s のVM（Windows）を立てて、Docker Desktop をインストールしたところ、docker run hello-world が動かず、docker info の Server セクションもエラー。
エラー文
Server:
error during connect: Get "http://%2F%2F.%2Fpipe%2FdockerDesktopLinuxEngine/v1.49/info": open //./pipe/dockerDesktopLinuxEngine: The sys...]]></description><link>https://zenn.dev/ncdc/articles/1f5de734159dcc</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/1f5de734159dcc</guid><pubDate>Sat, 31 May 2025 14:53:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2m3moyZh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520VM%25E3%2581%25A7Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AB%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25BE%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyNzFmNjZjZWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fumi</dc:creator></item><item><title><![CDATA[PHP-FPM 設定ファイル `www.conf` の解説（Docker + Nginx連携用）]]></title><description><![CDATA[このファイルは、PHP-FPM（FastCGI Process Manager）の設定ファイルです。
backend-php/etc/www.conf に配置されており、Docker Compose で PHP-FPM コンテナ内の /etc/php/8.1/fpm/pool.d/www.conf にマウントされています。
主に Nginx と PHP-FPM の連携と、PHPプロセスの制御（パフォーマンス） に関わる重要な設定を含みます。

 設定内容
[www]
listen = 9000

user = www-data
group = www-data

pm = dynamic...]]></description><link>https://zenn.dev/toshi052312/articles/79051f48948d64</link><guid isPermaLink="true">https://zenn.dev/toshi052312/articles/79051f48948d64</guid><pubDate>Sat, 31 May 2025 10:22:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m6cRq8wq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PHP-FPM%2520%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2520%2560www.conf%2560%2520%25E3%2581%25AE%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2588Docker%2520%252B%2520Nginx%25E9%2580%25A3%25E6%2590%25BA%25E7%2594%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyN2FlNzg3NGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toshi</dc:creator></item></channel></rss>