<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 15 Jun 2025 06:56:32 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[CDKTF使ってみたので感想ですの]]></title><description><![CDATA[CDKTFを使ってみました．
n番煎じですが，やったこと，感想を書きます．

 CDKTFとは
すでにZennに投稿されてる記事の方がわかりやすいと思いますし，自分の理解が誤っている気もするのですが，HCLを直接記述せずに（この記事を書いている時点だと）TypeScript，Python，Java，C#，Goで記述してTerraform経由で各種プロバイダでの構築ができるものです．

 メリット
Terraformを使えるインフラエンジニアやSREなどの専門の人が，プロジェクトや社内にいれば良いですが，いない場合でもソフトウェアエンジニアが馴染みのある言語でインフラ構築もできることだそう...]]></description><link>https://zenn.dev/toratti/articles/e32b86e18fee13</link><guid isPermaLink="true">https://zenn.dev/toratti/articles/e32b86e18fee13</guid><pubDate>Sun, 15 Jun 2025 01:01:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8g7FjNxX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDKTF%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2584%259F%25E6%2583%25B3%25E3%2581%25A7%25E3%2581%2599%25E3%2581%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2589%25E3%2581%25A3%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0OWE1ZTI0NjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とらっち</dc:creator></item><item><title><![CDATA[TypeScript で any 型より unknown 型を使うべき理由]]></title><description><![CDATA[TypeScript で型定義がどうにもならないときに、とりあえず any を使ってませんか？any 型は便利な逃げ道ですが型安全性を完全に放棄する危険な選択です。
そこで使いたいのが unknown 型です。同じように「何でも受け入れる」役割を果たしながら、TypeScript の型システムの恩恵を受けることができます。
この記事では、なぜ unknown 型が any 型より優れているのかを、実際のコード例と共に解説します。

 any 型が引き起こす 3 つの問題

 TypeScript の型チェック機能が完全に無効化される
any 型を使うと、TypeScript が型安全性を...]]></description><link>https://zenn.dev/m0t0taka/articles/bc27fa340f1f84</link><guid isPermaLink="true">https://zenn.dev/m0t0taka/articles/bc27fa340f1f84</guid><pubDate>Sun, 15 Jun 2025 00:55:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rOb9gZnh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520any%2520%25E5%259E%258B%25E3%2582%2588%25E3%2582%258A%2520unknown%2520%25E5%259E%258B%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25B9%25E3%2581%258D%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258E%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxZTJhNzliZWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぎー</dc:creator></item><item><title><![CDATA[ReactとTypeScriptでコールバック関数を理解しよう]]></title><description><![CDATA[
みなさんこんにちは。
最近はTypeScriptとReactを使ったフロントエンドのコードを書くことが増えてきました。まだまだ初学者なのですが、何かを調べていると「コールバック関数」という言葉をよく目にします。意味が曖昧なままだったので、この機会に整理して覚えようと思います。
最初は、async/awaitやuseMemo、useCallbackを使う場面でよく耳にする印象でした。


 コールバック関数とは

コールバック関数は、引数として他の関数に渡され、その関数の中で必要に応じて呼び出される関数です。呼び出されるタイミングは関数の処理の途中や後、あるいは非同期イベントが発生した時...]]></description><link>https://zenn.dev/sho0226/articles/1d93c7ee8a0ac3</link><guid isPermaLink="true">https://zenn.dev/sho0226/articles/1d93c7ee8a0ac3</guid><pubDate>Sat, 14 Jun 2025 19:13:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y4HBnwyg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8TypeScript%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzM2Y4ZjVhN2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょう</dc:creator></item><item><title><![CDATA[AI SDKでLLMの出力の型を制御する]]></title><description><![CDATA[この記事ではVercelのAI SDKを利用して，LLMの出力を制御する方法を紹介します．

 AI SDKとは
AI SDKはVercelが提供しているツールキットで，TypeScriptでAIを活用したアプリケーションを作成するための様々な機能を含んでいます．
その特徴として，例えば，

OpenAIやAnthropic，Grokなど様々なLLMモデルについて統一的な取り扱いを可能にしている
型安全で構造化された出力管理を可能にする
マルチモーダルに対応している
外部APIや関数をLLMから呼び出すことが可能になっている

などの点が挙げられます．
ここでは特に，型安全な出力が得られ...]]></description><link>https://zenn.dev/hiromu_ushihara/articles/ec09e502c85895</link><guid isPermaLink="true">https://zenn.dev/hiromu_ushihara/articles/ec09e502c85895</guid><pubDate>Sat, 14 Jun 2025 17:41:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pQgIAa9U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%2520SDK%25E3%2581%25A7LLM%25E3%2581%25AE%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hir%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0k0aEMzQ3pUejlLY215RDVDV3FBUTRNNnkxbnhRTHVvcnVHVlpmRzR0YnlvUFVBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hir</dc:creator></item><item><title><![CDATA[Reactの書き方について思ったこと]]></title><description><![CDATA[
 はじめに
先日公開した「君たちはReactをどうやってRuby on Railsに載せるべきか？」の中で、ReactをRailsに載せるモダンな最適解はReact Router SPA modeを使うことだろうという話をしました。
これをより簡単にするためにreact_router_rails_spa gemも用意し、さらにデモも用意しました(rrrails.castle104.com)。
このデモを作りながら、「そもそもReactってどうやって書くべきなんだろう？」 について色々考えたので、ここで簡単に紹介したいと思います。

ページ指向APIとテーブル指向APIについて
layo...]]></description><link>https://zenn.dev/naofumik/articles/05c62dd87721da</link><guid isPermaLink="true">https://zenn.dev/naofumik/articles/05c62dd87721da</guid><pubDate>Sat, 14 Jun 2025 17:04:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--n8htqmJP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naofumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1M2REcDFoU0toZ2VzbmhuSl9mQmNyYU1vNnR1dHJrWUYyY3hld2JGUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naofumi</dc:creator></item><item><title><![CDATA[React・Next.js・TypeScriptのキャッチアップのために、荒唐無稽なリモート理由を診断してくれるアプリを作成しました。]]></title><description><![CDATA[
 始めに
リモートワーク、それは昨今のWebエンジニアにとって、切っても切り離せないだろう。
リモートワークに関して、人によって考え方もバラバラだ。
それなのに、最近リモートワークを否定する企業も多くなった。
推進派だろうと、否定派だろうと、
それでもリモートワークは、
エンジニアにとって1つの手段であるはずだ。
だから、1つの対抗策として、このアプリを作成した。
https://remote-diagnosis-app.vercel.app/
このアプリはそれっぽいリモート理由を診断してくれる
後はその理由を、Slack等で上司に連絡するだけだ。
これで、後は自由気儘なリモートワーク...]]></description><link>https://zenn.dev/hiiragi/articles/create_remote-diagnosis-app</link><guid isPermaLink="true">https://zenn.dev/hiiragi/articles/create_remote-diagnosis-app</guid><pubDate>Sat, 14 Jun 2025 13:55:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AINEc_hH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2583%25BBNext.js%25E3%2583%25BBTypeScript%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2580%2581%25E8%258D%2592%25E5%2594%2590%25E7%2584%25A1%25E7%25A8%25BD%25E3%2581%25AA%25E3%2583%25AA%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2588%25E7%2590%2586%25E7%2594%25B1%25E3%2582%2592%25E8%25A8%25BA%25E6%2596%25AD%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258B%25E3%2582%25A2...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259F%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlNTNhZjcxZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>柊</dc:creator></item><item><title><![CDATA[n8nをCloud Runにサクッと（Supabase x Pulumi）]]></title><description><![CDATA[この記事では、オープンソースのワークフロー自動化ツール「n8n」を、GCPのサーバーレス環境であるCloud Runにサクッとデプロイする方法を紹介します。
データベースにはSupabase、IaCツールにはPulumiを使っていきます。

 はじめに
最近、個人的にn8nをよく触っています。
これ、プログラミングが苦手な自分みたいな奴でも、ノードを繋いでいくだけで本格的な自動化ワークフローが作れちゃう優れものなんです。
このn8nはセルフホスト用にDockerイメージが公式から提供されているので、「これ、どこかのサーバーレス環境にサクッとデプロイできたらもっと便利だな」と考えました。
...]]></description><link>https://zenn.dev/sonicmoov/articles/1308fd9ce78555</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/1308fd9ce78555</guid><pubDate>Sat, 14 Jun 2025 13:23:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LvUeU-xo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:n8n%25E3%2582%2592Cloud%2520Run%25E3%2581%25AB%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8%25EF%25BC%2588Supabase%2520x%2520Pulumi%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takemo101%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDBmZGFmNmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takemo101</dc:creator></item><item><title><![CDATA[Mastraで作ったAIサービスを実運用する上で困った点]]></title><description><![CDATA[
 はじめに
Mastraを使うと、簡単にLLMをつなげたWorkflowや各種Toolsを連携したAgentを作る事ができます。ドキュメントも充実しており、ドキュメントを参照するMCPサーバも提供されているので、簡単にそれっぽいものが作れてします。最高！
一方で、動作させるだけではなくデプロイメント、テスト、LLMの出力の品質など、サービスを実運用する上では困った事がたくさんあったので、今回はその内容と自分が行った対策についてまとめようと思います！

 成果物
本題の説明をわかりやすくするために、まずはMastraで作った成果物を共有します。サービスは以下のようなLINE BOTで２つ...]]></description><link>https://zenn.dev/k_koheyi/articles/07429bdfd47eaf</link><guid isPermaLink="true">https://zenn.dev/k_koheyi/articles/07429bdfd47eaf</guid><pubDate>Sat, 14 Jun 2025 11:59:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_e5VHDlR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FAI%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E5%25AE%259F%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E4%25B8%258A%25E3%2581%25A7%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k_kohey%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3ZjVlNTJmMDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k_kohey</dc:creator></item><item><title><![CDATA[Saas開発に使用した技術スタック(初期バージョン)]]></title><description><![CDATA[
 開発したSaas
私は先日以下のSaasを開発し、デモ版のリリースを行いました。
https://top.sophina.biz
このSaasはソフトウェア開発現場(主にアジャイル開発)のおいて

エンジニアによる人的ミスの削減
仕様のすれ違いの削減
進捗の把握ミスの削減
要件をタスク(チケット)に落とし込む時間の削減
新規プロジェクトメンバーが管理に慣れるまでの時間削減

を行い、素早い開発サイクルを実現させることのできるサービスです。
今現在クローズトベータの参加者を募集しております。
参加していただいた方には

ユーザーコミュニティへの招待
特別プランのご紹介

をさせていただ...]]></description><link>https://zenn.dev/asahi_tech_dev/articles/24eb9348299595</link><guid isPermaLink="true">https://zenn.dev/asahi_tech_dev/articles/24eb9348299595</guid><pubDate>Sat, 14 Jun 2025 11:58:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bGuHpAO0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Saas%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2528%25E5%2588%259D%25E6%259C%259F%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Asahi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGlPanJya2dDMFB4anhhaWVaU0JCY1pVdk4wTHpDeWZHOERfRlRaeDZBLXpRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Asahi</dc:creator></item><item><title><![CDATA[Reactを使用したSPA構成の構築]]></title><description><![CDATA[
 🚀 Reactを使用したSPA構成の構築

 📋 TL;DR（要約）
本記事で得られるもの:

✅ React 19 + TypeScriptによる最新SPA開発手法
✅ 効率的な開発環境構築（Vite、ESLint、Prettier）
✅ 実践的なアーキテクチャパターン（Atomic Design、Zustand）
✅ 保守性と拡張性を重視した設計思想

対象読者: Reactの基本を理解し、実践的なSPA開発スキルを身に付けたいエンジニア


 🎯 課題（背景・問題提起）

 フロントエンド開発の複雑化
モダンなWebアプリケーション開発では、以下の課題に直面することが多い


...]]></description><link>https://zenn.dev/purple_matsu1/articles/0a86783ff4ec7c</link><guid isPermaLink="true">https://zenn.dev/purple_matsu1/articles/0a86783ff4ec7c</guid><pubDate>Sat, 14 Jun 2025 09:40:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VG32nDrU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259FSPA%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purple%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5M2E5OTQyOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purple</dc:creator></item><item><title><![CDATA[electron + typescript + tailwind + vite の環境構築]]></title><description><![CDATA[pnpm create @quick-start/electron electron-playground --template react-ts
cd react-ts
pnpm install
pnpm install -D tailwindcss @tailwindcss/vite
electron.vite.config.ts を以下のように修正
import { resolve } from "path";
import { defineConfig, externalizeDepsPlugin } from "electron-vite";
import react from...]]></description><link>https://zenn.dev/mstn_/articles/82be50f5242599</link><guid isPermaLink="true">https://zenn.dev/mstn_/articles/82be50f5242599</guid><pubDate>Sat, 14 Jun 2025 08:23:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BJrarlRM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:electron%2520%252B%2520typescript%2520%252B%2520tailwind%2520%252B%2520vite%2520%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2drUmpodDM4dWpKbVFoTzFTYVNMeXYyRkQ3M3g0d2dUWW5fY0N3QWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ましろ</dc:creator></item><item><title><![CDATA[一日一処: TypeScriptでピラミッド建造プログラムをできるだけ長く書く]]></title><description><![CDATA[
 昔話
以前にピラミッドを建造するプログラムについての記事を投稿している。個人的には、ぎゅっと短くなったりシンプルなプログラムを好む。
https://zenn.dev/jinkutoriu/articles/ec81d4eced5dea

 モチベーション
前回はJavaScriptで可能な限り短縮を意識した記述を行った。今回はTypeScriptを使用して、できるだけ詳細で長いプログラムを書いてみる。
「プログラムを短くしよう」という考え方ももちろん大切だ。しかし、TypeScriptの機能をふんだんに用いて、具体的で正確で堅牢なものが作れるかもしれない。そして、なんといっても巨大...]]></description><link>https://zenn.dev/jinkutoriu/articles/7372822a4857c7</link><guid isPermaLink="true">https://zenn.dev/jinkutoriu/articles/7372822a4857c7</guid><pubDate>Sat, 14 Jun 2025 06:59:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AORh0zwY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%2597%25A5%25E4%25B8%2580%25E5%2587%25A6%253A%2520TypeScript%25E3%2581%25A7%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E5%25BB%25BA%25E9%2580%25A0%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E9%2595%25B7%25E3%2581%258F%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25B3%25A5%25E7%2594%259F%2520%25E7%2594%259A%25E5%258F%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZTA4MTQ0MTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鳥生 甚句</dc:creator></item><item><title><![CDATA[ChatGPTのように文字がリアルタイムで流れるストリーミング通信の仕組みを、実際のTypeScriptソースコードを使って説明する]]></title><description><![CDATA[TypeScriptでサーバーとクライアント間の文字列ストリーミング通信を実現する簡単なサンプルを、fetch APIのReadableStreamを使って説明します。


 仕組みの概要
サーバー側: 特定のエンドポイントにリクエストが来ると、HTTPレスポンスをすぐには完了させません。代わりに、res.write()を使って文字列の断片（チャンク）を少しずつ送信します。全てのデータを送り終えたら、res.end()でストリームを閉じます。
2.  クライアント側: fetch APIでサーバーにリクエストを送り、レスポンスのbody（ReadableStream）を取得します。このス...]]></description><link>https://zenn.dev/japan/articles/bb236b66cb9e91</link><guid isPermaLink="true">https://zenn.dev/japan/articles/bb236b66cb9e91</guid><pubDate>Sat, 14 Jun 2025 06:26:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y8fp29PE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E6%25B5%2581%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E3%2580%2581%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AETypeScript%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOFTBASE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0ODM2OTE0YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOFTBASE</dc:creator></item><item><title><![CDATA[TickTick MCP Serverを作りました]]></title><description><![CDATA[
 サマリー

TickTick Open APIを利用して、MCP Serverを作成しました。これにより、LLM からタスクの情報取得、編集、削除が可能になります。
MCP Serverの作成にはClaude Codeを利用しました。
MCP Serverからは"習慣トラッカー"に関する操作ができません。TickTick Open APIのスコープに、習慣に関する仕様がないため。今後、TickTick Open API が対応することを期待します。

https://github.com/tsutsuhiro/ticktick-mcp-server

 はじめに

 MCPとは
MC...]]></description><link>https://zenn.dev/tsutsuhiro/articles/c00dffde71cb6c</link><guid isPermaLink="true">https://zenn.dev/tsutsuhiro/articles/c00dffde71cb6c</guid><pubDate>Sat, 14 Jun 2025 05:44:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---NtrnOdQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TickTick%2520MCP%2520Server%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:htsutsumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiY2MxMDRiZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>htsutsumi</dc:creator></item><item><title><![CDATA[TypeScript での Object.assign と スプレッド構文の正しい使い分け]]></title><description><![CDATA[
 TypeScriptにおけるObject.assignとスプレッド構文の使い分け：型の落とし穴に注意！

 はじめに
TypeScriptでオブジェクトをマージするとき、Object.assign とスプレッド構文（...）のどちらを使うか、迷ったことはありませんか？
どちらも見た目は似ていますが、型の扱いに大きな違いがあることをご存知でしょうか？
この記事では、「スプレッド構文では型推論が変化することで、意図しない上書きが静かに行われる」問題を紹介しつつ、安全に使い分ける方法を解説します。


 1. よくあるスプレッド構文の使い方
例えば、設定オブジェクトにデフォルト値をマージす...]]></description><link>https://zenn.dev/qluqlu/articles/0cbb87179d1503</link><guid isPermaLink="true">https://zenn.dev/qluqlu/articles/0cbb87179d1503</guid><pubDate>Sat, 14 Jun 2025 04:13:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dr7ryvBP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%25E3%2581%25AE%2520Object.assign%2520%25E3%2581%25A8%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25AE%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%2584%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AB%25E3%2582%25AF%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjg1NWNiMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クルクル</dc:creator></item><item><title><![CDATA[Railway で Node.js Monorepo Docker デプロイ時に "Cannot find module" エラーが発生する]]></title><description><![CDATA[
 発生したエラー
Railway にデプロイした Node.js アプリケーションで、以下のエラーが発生しました。
node:internal/modules/cjs/loader:1252
  throw err;
  ^
 
Error: Cannot find module '/app/backend/dist/index.js'
    at Function._resolveFilename (node:internal/modules/cjs/loader:1249:15)
    at Function._load (node:internal/modules/cjs/l...]]></description><link>https://zenn.dev/ho_ri/articles/91b70e9d6b61ba</link><guid isPermaLink="true">https://zenn.dev/ho_ri/articles/91b70e9d6b61ba</guid><pubDate>Sat, 14 Jun 2025 03:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h4w52GyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Railway%2520%25E3%2581%25A7%2520Node.js%2520Monorepo%2520Docker%2520%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E6%2599%2582%25E3%2581%25AB%2520%2522Cannot%2520find%2520mod...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hol1kgmg%2520%2528%25E3%2581%25BB%25E3%2582%258A%25E3%2581%258B%25E3%2582%258F%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NmM0YjRmYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hol1kgmg (ほりかわ)</dc:creator></item><item><title><![CDATA[Next.js + Express.js + MySQL + Docker で簡単な Web アプリを作ろう！]]></title><description><![CDATA[
 この記事の対象読者
このチュートリアルは、以下のような人に向けたものです。

Webアプリを作ってみたい初学者
Node.jsを使ってみたい人
Next.jsを使ってみたい人
Dockerあんまりわかんない人


 この記事のゴール
Next.js（フロントエンド）＋ Express.js（バックエンド）＋ MySQL（データベース）＋ Docker（開発環境） を使って、超シンプルな Web アプリを作ります！

 前提条件

ホストOS: MacOS
Dockerインストール済み
エディタ:Cursor
プログラミングの基礎はわかる
データベースも少しわかる

Dockerについ...]]></description><link>https://zenn.dev/yyuta750/articles/8b6f5c1f565891</link><guid isPermaLink="true">https://zenn.dev/yyuta750/articles/8b6f5c1f565891</guid><pubDate>Fri, 13 Jun 2025 23:51:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9McQiAtN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%252B%2520Express.js%2520%252B%2520MySQL%2520%252B%2520Docker%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%2520Web%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDNhVVJLLWhHWnI5RnQtSE50T3NuXzJuU2lnMDgxdU1nNDlqLThtRWNWUWd4MlVBdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyuta</dc:creator></item><item><title><![CDATA[自社製品のリプレイスの技術選定を勝手に妄想する]]></title><description><![CDATA[
 今回の背景
私の今いる企業は自社開発の製品を持っているのですが、「あまりイケてない」企業です。
テストやドキュメントなど存在を知っているのかと疑うレベルですし、使っている技術も少し古いです。
リプレイスを提案してみても受け入れられるかわからないので、今回勝手にリプレイスするならこんな技術を使うという仮定のもと技術選定をしてみました。


 1. 現状の課題認識

使用技術：EJS + jQuery
強み：SSRによる高速な初期表示
課題：

jQueryによるDOM操作の煩雑化・スパゲッティコード化
UIや状態の再利用・分離が困難
テストしづらく、保守性が低い





 2. モダ...]]></description><link>https://zenn.dev/yyuta750/articles/474e76d3a7ee88</link><guid isPermaLink="true">https://zenn.dev/yyuta750/articles/474e76d3a7ee88</guid><pubDate>Fri, 13 Jun 2025 23:50:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ms13X14u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%25A4%25BE%25E8%25A3%25BD%25E5%2593%2581%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E9%2581%25B8%25E5%25AE%259A%25E3%2582%2592%25E5%258B%259D%25E6%2589%258B%25E3%2581%25AB%25E5%25A6%2584%25E6%2583%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDNhVVJLLWhHWnI5RnQtSE50T3NuXzJuU2lnMDgxdU1nNDlqLThtRWNWUWd4MlVBdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyuta</dc:creator></item><item><title><![CDATA[パターンマッチをつかいこなして効率的に型レベル減算しよう！！]]></title><description><![CDATA[
 はじめに
皆さんこんにちは。
最近はもっぱら型を捏ねてばかりで実益のあるコードをかけておらずまずいなぁと思っています。
27 卒学生エンジニアの yossuli と申します。
以前参加した LT にて型レベル四則演算を行うというものがありました。
今回はその中で登場した減算について、「型黒魔術完全に理解した」になる過程でより簡潔に書けるのではないかと思い、その周辺の技術について記事にしました。

 本題
型を捏ねていると以下のようなコードを書く場面がよくあるかなと思います
type Hoge&lt;T&gt; = T extends [any, ...infer U] ?　...
先...]]></description><link>https://zenn.dev/yossuli/articles/9939a0b03d3ca9</link><guid isPermaLink="true">https://zenn.dev/yossuli/articles/9939a0b03d3ca9</guid><pubDate>Fri, 13 Jun 2025 19:09:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DFMuStX0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E5%259E%258B%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E6%25B8%259B%25E7%25AE%2597%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yossuli%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYmRjMjQzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yossuli</dc:creator></item><item><title><![CDATA[Vercel AI SDK用のClaude Code providerを作ってみた]]></title><description><![CDATA[こんにちは、cojiです。
Vercel AI SDKのcommunity providerとして、Claude Code用のproviderを作ってみました。
https://github.com/coji/claude-code-ai-provider
せっかくClaude MAXに入っているので、高性能なモデルをフルに活用して自分用のLLMアプリを作りたくて。
最近普段使いにしてる Claude Code、「これをVercel AI SDKで使えたら便利そう」と思ったのがきっかけです。

 先に結論
Claude Code AI providerを作ることで、いつものVercel ...]]></description><link>https://zenn.dev/coji/articles/claude-code-ai-provider-unlimited-local-llm</link><guid isPermaLink="true">https://zenn.dev/coji/articles/claude-code-ai-provider-unlimited-local-llm</guid><pubDate>Fri, 13 Jun 2025 15:33:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oZPtysGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520AI%2520SDK%25E7%2594%25A8%25E3%2581%25AEClaude%2520Code%2520provider%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item></channel></rss>