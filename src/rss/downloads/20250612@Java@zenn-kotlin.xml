<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0e48b65ca2.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 12 Jun 2025 06:36:30 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Cursor × Androidで開発をする]]></title><description><![CDATA[
 Cursorとは

 VS Code ベースのデスクトップエディタ設計

オープンソースの VS Code をフォークしたものであるため、UI や操作感が VS Code と非常に近く、既存の拡張機能やテーマ、キーバインドをそのまま利用できる


 コードベースを理解したチャットサポート

専用のチャットUIが内蔵されており、そこから自然言語で「この関数の役割を教えて」「このコードにバグはないか？」といった質問を投げかけることができる
複数ファイルにまたがる質問でも、必要なファイルを自動でキャッシュして文脈に取り込んでくれるため、開発者がコード断片を手動でコピー＆ペーストする手間が省...]]></description><link>https://zenn.dev/jambo_dev/articles/12ef9d1cef71e0</link><guid isPermaLink="true">https://zenn.dev/jambo_dev/articles/12ef9d1cef71e0</guid><pubDate>Wed, 11 Jun 2025 01:48:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6rZ9h6ON--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cursor%2520%25C3%2597%2520Android%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Junnosuke%2520Takahashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1YWU1YTIyZTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Jambo%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwODBiOTcxNDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Junnosuke Takahashi</dc:creator></item><item><title><![CDATA[【解決】GitHub ActionsのAndroidテストが数時間も終わらない？根本原因と対策を徹底解説]]></title><description><![CDATA[
 【解決】GitHub ActionsのAndroidテストが数時間も終わらない？根本原因と対策を徹底解説
公開日: 2025年6月9日
タグ: Android, Kotlin, CI/CD, GitHub Actions, Coroutine, テスト, TDD
ローカル環境では一瞬で終わるテストが、なぜかGitHub Actions上では何時間も終わらずにタイムアウトしてしまう…。多くのAndroid開発者が一度は頭を悩ませるこの問題。
この記事では、その現象の根本原因である「ディスパッチャーの競合」を解き明かし、具体的なコード例を交えながら、恒久的な解決策をステップバイステップで...]]></description><link>https://zenn.dev/wyuma/articles/3db1832a1295bd</link><guid isPermaLink="true">https://zenn.dev/wyuma/articles/3db1832a1295bd</guid><pubDate>Tue, 10 Jun 2025 09:41:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dUSZvzKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2580%2591GitHub%2520Actions%25E3%2581%25AEAndroid%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%258C%25E6%2595%25B0%25E6%2599%2582%25E9%2596%2593%25E3%2582%2582%25E7%25B5%2582%25E3%2582%258F%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25E6%25A0%25B9%25E6%259C%25AC%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E5%25AF%25BE%25E7%25AD%2596%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wYuma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkZjJmOWZjMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wYuma</dc:creator></item><item><title><![CDATA[json-unit-assertjが便利]]></title><description><![CDATA[JSONのアサーションを専門に扱うライブラリ「json-unit-assertj」がある。このライブラリはJSON文字列を受け取り、内容をパースして結果を事細かにassertする際に利用できる。AssertJとの統合が果たされており、配列に対するcontainsExactlyInAnyOrderなどの便利関数をそのままJSON配列に対して使用することができる。
https://github.com/lukas-krecan/JsonUnit
仕事で多々JSONのassertをかける場面があるものの、とくに配列の要素の順序が一定とならずflakyテストになってしまうケースに直面した際、As...]]></description><link>https://zenn.dev/helloyuki/articles/b2f70d6265de2a</link><guid isPermaLink="true">https://zenn.dev/helloyuki/articles/b2f70d6265de2a</guid><pubDate>Mon, 09 Jun 2025 12:19:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pzJpBpE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:json-unit-assertj%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmMmQ2ZGJkN2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuki</dc:creator></item><item><title><![CDATA[KCLで理解するマルチストリーム処理の仕組み]]></title><description><![CDATA[
 はじめに
前回の記事では、KCL（Kinesis Client
Library）v3系を使ったマルチストリーム処理の実装について紹介しました。
しかし実装メインの内容だったので、「そもそもKCLって何？」「マルチストリーム処理って何がいいの？」といった基本的な部分は駆け足で進んでしまいました。
今回はその辺りをじっくり解説していきます。

 Kinesis Data Streamsとは
KCLを理解する前に、まずはKinesis Data Streamsの基本をおさえておきましょう。
Kinesis Data Streamsは、大量のデータをリアルタイムで処理するためのAWSのマネー...]]></description><link>https://zenn.dev/balista/articles/04-article-description-kcl-multistream</link><guid isPermaLink="true">https://zenn.dev/balista/articles/04-article-description-kcl-multistream</guid><pubDate>Sun, 08 Jun 2025 06:19:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R-ew2hg---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:KCL%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25A0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:balista-yu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjJiNDA1OWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>balista-yu</dc:creator></item><item><title><![CDATA[Kotlin Coroutinesの核心：Builder・CoroutineScope・Job・CoroutineContextの関係]]></title><description><![CDATA[
 本記事から何が得られるのか
Kotlin Coroutinesを利用する上で、「Coroutine Builder」「CoroutineScope」「Job」「CoroutineContext」といった概念は必ず目にするものです。
一方で、それらのつながりや役割について、しっくりくるようなメンタルモデルを作ることに苦労されている方も多いのではないでしょうか。かくいう私がそうでした。
そこで本記事では、Kotlin Coroutinesの基本文法には慣れているものの、その詳細には自信がない方を対象に、「Coroutine Builder」「CoroutineScope」「Job」「Co...]]></description><link>https://zenn.dev/kaseken/articles/99d92a128cbc9a</link><guid isPermaLink="true">https://zenn.dev/kaseken/articles/99d92a128cbc9a</guid><pubDate>Fri, 06 Jun 2025 08:27:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--objzIcs0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%2520Coroutines%25E3%2581%25AE%25E6%25A0%25B8%25E5%25BF%2583%25EF%25BC%259ABuilder%25E3%2583%25BBCoroutineScope%25E3%2583%25BBJob%25E3%2583%25BBCoroutine...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kent%2520Kaseda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MmUyNTgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kent Kaseda</dc:creator></item><item><title><![CDATA[JetBrainsとMistral AIが主催する、コード補完を進化させるコンテストに参加しませんか？]]></title><description><![CDATA[
 Context Collection Competition
こんにちは。Jetbrains公式代理店NATTOSYSTEMの私です。
今回はJetBrainsとMistral AIが主催する「Context Collection Competition」は、AIによるコード補完の精度向上を目指す国際的なコンペティションをご紹介いたします。
このイベントでは、リポジトリ全体から有益な情報を収集する「コンテキスト収集戦略」の開発が求められます。


 うん、コンペティションとコンテストのちがいってなんだ
🧠 ニュアンスの違い
コンペティションは「真剣勝負」「実力で勝ち抜く」ような、より...]]></description><link>https://zenn.dev/nattosystem_jp/articles/487ab43ef53da8</link><guid isPermaLink="true">https://zenn.dev/nattosystem_jp/articles/487ab43ef53da8</guid><pubDate>Thu, 05 Jun 2025 03:40:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a2EdQBTr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JetBrains%25E3%2581%25A8Mistral%2520AI%25E3%2581%258C%25E4%25B8%25BB%25E5%2582%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E8%25A3%259C%25E5%25AE%258C%25E3%2582%2592%25E9%2580%25B2%25E5%258C%2596%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%25B0%25E3%2581%25AD%25E3%2581%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYWQxMDhjNTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BENATTOSYSTEM%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねばねば</dc:creator></item><item><title><![CDATA[Android開発におけるJVMバージョン設定：Toolchain・Compatibility・jvmTarget・JAVA_HOMEの役割]]></title><description><![CDATA[Androidアプリのビルドには、Java Development Kit (JDK) のバージョンに関する種々の設定――例えば、Toolchain、Target Compatibility、Source Compatibility、Kotlin  jvmTarget、JAVA_HOME など――が関係します。
これらの設定の役割・違いは、Androidの公式ドキュメント [1]では、以下のような図として整理されています。しかし、少なくとも私にとっては、初見で簡単に理解できるものではありませんでした。

図. AndroidビルドにおけるJDKの関係 (Androidの公式ドキュメントよ...]]></description><link>https://zenn.dev/kaseken/articles/2e1ca01ab2ae23</link><guid isPermaLink="true">https://zenn.dev/kaseken/articles/2e1ca01ab2ae23</guid><pubDate>Thu, 29 May 2025 16:44:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hKvzwXFl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258BJVM%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E8%25A8%25AD%25E5%25AE%259A%25EF%25BC%259AToolchain%25E3%2583%25BBCompatibility%25E3%2583%25BBjvmTarget...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kent%2520Kaseda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1MmUyNTgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kent Kaseda</dc:creator></item><item><title><![CDATA[ポモドーロタイマーを作る【Jetpack Compose】]]></title><description><![CDATA[
 はじめに
今回は、Create a Pomodoro Timer using Jetpack Compose and MVVM | by Vaibhav Jain | Mediumを参考にして、Jetpack Composeでポモドーロタイマーを作ります。

 手順

 Step1: 新規プロジェクトの作成

「Empty Activiy」を選択し、「PomodoroTimerSample」という名前でプロジェクトを作成
※プロジェクト名は自由に設定OK
【任意】git管理する

以下のようにGit リポジトリを新たに作成する

git init


gitignoreを編集する
g...]]></description><link>https://zenn.dev/haru330/articles/e4c59325e45122</link><guid isPermaLink="true">https://zenn.dev/haru330/articles/e4c59325e45122</guid><pubDate>Tue, 27 May 2025 11:05:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jYUrTzbh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2583%25A2%25E3%2583%2589%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NzQyOWFkM2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はる</dc:creator></item><item><title><![CDATA[リスキリングとしての取り組み（2025/5：第2週）]]></title><description><![CDATA[2025年5月第2週（2025/5/11～2025/5/17）にリスキリング（プログラミング）として取り組んだことをまとめました。

 ＜Topic＞
先週とは打って変わって、堰を切ったように更新のオンパレード
そんな中、地味にコード修正や環境構築ノウハウ習得もあり、まぁまぁ充実な日々

 詳細は、GitHubを参照ください

 【5/11】


＜TypeScript＞ ReactNative 0.80.0-rc.0に更新



 【5/13】


＜OS＞  Windows 11 Insider Preview (Dev Channel) Build 26200.5600 が配信され...]]></description><link>https://zenn.dev/tatsukiyoshi/articles/534ba7d9ae5efc</link><guid isPermaLink="true">https://zenn.dev/tatsukiyoshi/articles/534ba7d9ae5efc</guid><pubDate>Fri, 23 May 2025 09:00:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---BzdLttC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AE%25E5%258F%2596%25E3%2582%258A%25E7%25B5%2584%25E3%2581%25BF%25EF%25BC%25882025%252F5%25EF%25BC%259A%25E7%25AC%25AC2%25E9%2580%25B1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25BE%25B0%25E8%2581%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlRwMzFwR2w4eEFqS3YtSlVsQVgyRnUyZDBCSU9OaEJFNG9TTGJSQWtVXzE0UktwVnM0QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>辰聖</dc:creator></item><item><title><![CDATA[GoF デザインパターン 入門 ~入門するまで編~]]></title><description><![CDATA[
 GoF デザインパターンとは
GoF（Gang of Four）デザインパターンとは、エリック・ガンマ、リチャード・ヘルム、ラルフ・ジョンソン、ジョン・ブリシディーズの4人（Gang of Four）が著書「Design Patterns: Elements of Reusable Object-Oriented Software」で提唱したオブジェクト指向設計の23のデザインパターンです。

 パターン

 生成に関するパターン (Creational Patterns)

Singleton（シングルトン）パターン
Factory Method（ファクトリメソッド）パターン
Ab...]]></description><link>https://zenn.dev/giglancer/articles/6f7211dab0d20d</link><guid isPermaLink="true">https://zenn.dev/giglancer/articles/6f7211dab0d20d</guid><pubDate>Thu, 22 May 2025 05:09:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b3lIukGD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GoF%2520%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%25E5%2585%25A5%25E9%2596%2580%2520%7E%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E7%25B7%25A8%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNWJjMTM0ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo</dc:creator></item><item><title><![CDATA[gradle Build File Basics]]></title><description><![CDATA[
 ビルドファイルの基本
gradleのファイルについて公式のリファレンスを読みながら学習をしてみた。

公式のテキストを翻訳して引用しております。

通常、ビルド スクリプト ( build.gradle(.kts))には、ビルド構成、タスク、およびプラグインの詳細が記述されます。
https://docs.gradle.org/current/userguide/build_file_basics.html
すべての Gradle ビルドは、少なくとも 1 つのビルド スクリプトで構成されます。

 ビルドスクリプト
ビルド スクリプトは、build.gradleGroovy で記述...]]></description><link>https://zenn.dev/forgehack/articles/1ba2051ae3a8b2</link><guid isPermaLink="true">https://zenn.dev/forgehack/articles/1ba2051ae3a8b2</guid><pubDate>Wed, 21 May 2025 05:05:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5jiRIYuA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:gradle%2520Build%2520File%2520Basics%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORGEHACK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkY3Z3hwejdDYVBET0xfT0N1d2hTcTl5VTFHXy1iRnlRQ0FwYzc5Q2FVUFVfekRTMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORGEHACK</dc:creator></item><item><title><![CDATA[gradle Settings File Basicsを読んでみた]]></title><description><![CDATA[
 Settings File Basics
タイトルの通りgradleの設定ファイルについて読んでみたことを書いている記事です。

 記事の対象者

gradleの設定ファイルに興味がある
gradleを使う機会がある人

こちらの記事の続きです。
https://zenn.dev/forgehack/articles/cf0bced1173421
https://docs.gradle.org/current/userguide/settings_file_basics.html

 設定ファイルの基本
設定ファイル（settings.gradle（.kts））は、すべてのGradl...]]></description><link>https://zenn.dev/forgehack/articles/10cc2096c3e69d</link><guid isPermaLink="true">https://zenn.dev/forgehack/articles/10cc2096c3e69d</guid><pubDate>Tue, 20 May 2025 14:37:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S_CgA0ul--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gradle%2520Settings%2520File%2520Basics%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORGEHACK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkY3Z3hwejdDYVBET0xfT0N1d2hTcTl5VTFHXy1iRnlRQ0FwYzc5Q2FVUFVfekRTMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORGEHACK</dc:creator></item><item><title><![CDATA[gradleコマンドラインをつかってみた！]]></title><description><![CDATA[
 Command-Line Interface Basics
コマンドラインインターフェイスの基本
前回の記事の続きになります。
https://zenn.dev/forgehack/articles/df358ba9e4c520

 記事の対象者

build.gradle &amp; build.gradle.ktsについて知りたい
コマンドラインインターフェイスを使ってみたい

公式の解説を翻訳して引用しております。
コマンドラインインターフェイスは、IDEの外側のGradleと相互作用する主要な方法です。
Gradle CLIは、ターミナルからGradleビルドと対話する主要な...]]></description><link>https://zenn.dev/forgehack/articles/cf0bced1173421</link><guid isPermaLink="true">https://zenn.dev/forgehack/articles/cf0bced1173421</guid><pubDate>Mon, 19 May 2025 22:12:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E_ZXRg0J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gradle%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORGEHACK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkY3Z3hwejdDYVBET0xfT0N1d2hTcTl5VTFHXy1iRnlRQ0FwYzc5Q2FVUFVfekRTMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORGEHACK</dc:creator></item><item><title><![CDATA[gradleの世界をのぞいてみるWrapper編]]></title><description><![CDATA[
 What Wrapper?

公式によると

ラッパースクリプトは、宣言されたバージョンのGradleを呼び出し、必要に応じて事前にダウンロードします。
この記事は前回の記事の続きです。Gradleを実行するために、AndroidアプリかKotlinのスクリプトを実行するだけのプロジェクトを作ってください。
https://zenn.dev/forgehack/articles/fc2572cb5b1d63

 対象者

build.gradle &amp; build.gradle.ktsについて知りたい
Wrapperについて知りたい

https://docs.gradle.o...]]></description><link>https://zenn.dev/forgehack/articles/df358ba9e4c520</link><guid isPermaLink="true">https://zenn.dev/forgehack/articles/df358ba9e4c520</guid><pubDate>Mon, 19 May 2025 15:21:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xp6SYwcu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gradle%25E3%2581%25AE%25E4%25B8%2596%25E7%2595%258C%25E3%2582%2592%25E3%2581%25AE%25E3%2581%259E%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258BWrapper%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORGEHACK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkY3Z3hwejdDYVBET0xfT0N1d2hTcTl5VTFHXy1iRnlRQ0FwYzc5Q2FVUFVfekRTMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORGEHACK</dc:creator></item><item><title><![CDATA[Gradleの世界を２５分のぞいてみた]]></title><description><![CDATA[
 What build.gradle &amp; build.gradle.kts?
Flutterを仕事で２年ぐらい触りKotlinを仕事で少しだけ触り個人開発で、Jetpack Composeを使ってメモアプリを作ったことがありました。

今回は、build.gradle &amp; build.gradle.ktsにフォーカスするので、Flutter/Dartは出てこないです。内部のAndroidの知識を知るのが目的で書いた記事です。

android/ディレクトリを開くといつも眺めるのが嫌だなと思うファイルが沢山ある😱
xmlとかbuild.gradle今だとbuild.gra...]]></description><link>https://zenn.dev/forgehack/articles/fc2572cb5b1d63</link><guid isPermaLink="true">https://zenn.dev/forgehack/articles/fc2572cb5b1d63</guid><pubDate>Mon, 19 May 2025 14:44:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zS8i1nX3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradle%25E3%2581%25AE%25E4%25B8%2596%25E7%2595%258C%25E3%2582%2592%25EF%25BC%2592%25EF%25BC%2595%25E5%2588%2586%25E3%2581%25AE%25E3%2581%259E%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:FORGEHACK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkY3Z3hwejdDYVBET0xfT0N1d2hTcTl5VTFHXy1iRnlRQ0FwYzc5Q2FVUFVfekRTMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORGEHACK</dc:creator></item><item><title><![CDATA[[Android] Jetpack Compose Navigation Type Safe 詳細]]></title><description><![CDATA[Jetpack Compose Navigationが2.8.0から遷移する時に渡すパラメータが型安全になった。

 ルート定義
ルート定義はシリアル化可能なクラスである必要があるのでKotlin Serializationプラグインが必須
遷移時に渡したい引数はデータクラスのプロパティ(下層にも@Serializableをつけ忘れないこと)
デフォルト引数の場合はクエリ、そうでない場合はパスになる
@Serializable
data class FullName(
    val firstName: String,
    val middleName: String? = nul...]]></description><link>https://zenn.dev/giglancer/articles/b52c0dffe39f3b</link><guid isPermaLink="true">https://zenn.dev/giglancer/articles/b52c0dffe39f3b</guid><pubDate>Mon, 19 May 2025 03:11:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6Egf28u1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BAndroid%255D%2520Jetpack%2520Compose%2520Navigation%2520Type%2520Safe%2520%25E8%25A9%25B3%25E7%25B4%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiNWJjMTM0ZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo</dc:creator></item><item><title><![CDATA[Nested Class vs Inner Class]]></title><description><![CDATA[自分の技術メモをAIで記事化しているため、一部間違いがある可能性があります。ご了承ください。

 ✨ Nested ClassとInner Classとは？
Kotlinには「Nested Class」と「Inner Class」という2種類のクラススコープを制御する機能が用意されています。それぞれの目的や使い方、制約について見ていきましょう。

 🔒 Nested Class
Nested Classは、親クラスに一切アクセスできない静的なクラスです。主にクラスの名前空間を整理するために使われます。

 📝 制約

親クラスには一切アクセスできない


 🎯 目的

論理的に意味のある...]]></description><link>https://zenn.dev/uma002/articles/51b8cf5d689a36</link><guid isPermaLink="true">https://zenn.dev/uma002/articles/51b8cf5d689a36</guid><pubDate>Sun, 18 May 2025 09:21:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6K74idyP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Nested%2520Class%2520vs%2520Inner%2520Class%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryohma0510%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMzc2Y2VmN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryohma0510</dc:creator></item><item><title><![CDATA[Jetbrains AIに振り回される]]></title><description><![CDATA[何年か前に、Kotlin＋Spring BatchでServerlessを構築しているプロジェクト参画に先立ち、
Spring解体新書にてJavaで紹介されていたサンプルをKotlinで書き直してた
そんなコードを最新環境に対応させるべく、検証していたところ、同時に写経していたテストコードに使われているAssertFileが廃要素であることに気づく
AssertFile.assertFileEquals(
  FileSystemResource(_expectedFilePath),
  FileSystemResource(property.outputPath()))
じゃぁ、In...]]></description><link>https://zenn.dev/tatsukiyoshi/articles/040c31b4d1b439</link><guid isPermaLink="true">https://zenn.dev/tatsukiyoshi/articles/040c31b4d1b439</guid><pubDate>Sat, 17 May 2025 14:43:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8sv3M4ne--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jetbrains%2520AI%25E3%2581%25AB%25E6%258C%25AF%25E3%2582%258A%25E5%259B%259E%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25BE%25B0%25E8%2581%2596%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlRwMzFwR2w4eEFqS3YtSlVsQVgyRnUyZDBCSU9OaEJFNG9TTGJSQWtVXzE0UktwVnM0QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>辰聖</dc:creator></item><item><title><![CDATA[Flux + Jetpack Compose Todoアプリを作って学習]]></title><description><![CDATA[
 はじめに
今日の京都は曇っているし、湿気がすごくて頭が痛い。
ということで、以下が学習を始めたきっかけです！

アーキテクチャの種類がMVVM以外は知らないから幅を広げたい
最近の業務はSwiftが多いのでKotlin触りたかった


 Fluxアーキテクチャとは
FluxはFacebookが提唱する、アーキテクチャのパターンです。
データの流れが一方通行になっているのが特徴で、View、Action、Dispatcher、Storeで役割が分けられています。

lgvalle/android-flux-todo-appより
図を少しだけいじっています。

 lgvalle/andr...]]></description><link>https://zenn.dev/seyamasan/articles/a3060582d928e9</link><guid isPermaLink="true">https://zenn.dev/seyamasan/articles/a3060582d928e9</guid><pubDate>Sat, 17 May 2025 08:49:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N2ExYHh6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Flux%2520%252B%2520Jetpack%2520Compose%2520Todo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E7%25BF%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:seyamasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjNTJkMjczMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>seyamasan</dc:creator></item><item><title><![CDATA[KotlinのMethodSourceのParametrizedTestを見やすく書く]]></title><description><![CDATA[Kotlinでテストを書く際に、MethodSourceを使ったParametrizedTestをより可読性高く書く方法を紹介します。本記事では、課題とその解決方法を具体的なサンプルコードとともに解説します。

 🚨 課題
MethodSourceを利用する際、JavaではStaticメソッドとして記述する必要があります。しかし、KotlinではStaticメソッドの代わりにCompanion Objectを使って定義することになります。

 Companion Objectの課題


inner classでは定義できない
Companion Objectはテストクラスのトップレベルで...]]></description><link>https://zenn.dev/uma002/articles/45437cfe5ef21e</link><guid isPermaLink="true">https://zenn.dev/uma002/articles/45437cfe5ef21e</guid><pubDate>Sat, 17 May 2025 08:14:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4ozxKctE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E3%2581%25AEMethodSource%25E3%2581%25AEParametrizedTest%25E3%2582%2592%25E8%25A6%258B%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryohma0510%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhMzc2Y2VmN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryohma0510</dc:creator></item></channel></rss>