<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 15 Oct 2025 06:23:37 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Next.js】App Router × Route Handlersで実現する無限スクロール]]></title><description><![CDATA[
 はじめに
株式会社ASSIGNでWebフロント開発を担当している中水です。
先日、ASSIGN Webアプリのマイエージェント機能でNext.jsのRoute Handlersを使った無限スクロール機能を実装しました。
本記事では、無限スクロールの実装方法と、クライアントサイドでのデータフェッチの手法を解説します。

 要件
初期表示で20件のデータを取得し、画面下部までスクロールした際に、さらに20件ずつ追加でデータを取得・表示します。


 環境

Next.js v14（App Router）
TypeScript


 実装を進める上での課題と対応方針

 前提
ASSIGN...]]></description><link>https://zenn.dev/assign/articles/010f7b3d60812d</link><guid isPermaLink="true">https://zenn.dev/assign/articles/010f7b3d60812d</guid><pubDate>Wed, 15 Oct 2025 02:12:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x_nmWemP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591App%2520Router%2520%25C3%2597%2520Route%2520Handlers%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E7%2584%25A1%25E9%2599%2590%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nakamizu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4YmMzMGUwOGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ASSIGN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBlNzM5NGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>nakamizu</dc:creator></item><item><title><![CDATA[Hono on Lambda 〜真のLambdalith構成を目指して〜]]></title><description><![CDATA[こんにちは、サーバーレス大好き芸人のt-maedaです。
LambdaでREST APIの開発を進めながら、「同じLambdaでEventBridgeのスケジュール処理もまとめて面倒を見たい」と欲張ると、いつの間にか関数を分割してテストもデプロイもローカル開発の手法も複雑になっていた……そんな経験はありませんか？
AWSはLambdaベースのイベント駆動型アプリケーションのアンチパターンとしてLambdaモノリスパターン（以下Lambdalith）を挙げ、パッケージサイズや最小特権の難しさなど複数の欠点を指摘しています。

パッケージサイズ
最小特権の強制が困難
アップグレードが困難
維...]]></description><link>https://zenn.dev/monox_dev/articles/hono_on_lambda-20251008</link><guid isPermaLink="true">https://zenn.dev/monox_dev/articles/hono_on_lambda-20251008</guid><pubDate>Wed, 15 Oct 2025 02:04:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gLl_nxH2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520on%2520Lambda%2520%25E3%2580%259C%25E7%259C%259F%25E3%2581%25AELambdalith%25E6%25A7%258B%25E6%2588%2590%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2597%25E3%2581%25A6%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:t-maeda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwN2Y1YzQ5ZjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:kozokaAI%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUNqNW5xdUJpRV9xY0dMbkc1aU10YWw1WERhdTYweXA4djZuZ0xpUkFDNGJkaXc5cz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>t-maeda</dc:creator></item><item><title><![CDATA[型ガードを積み木みたいに組み立てる：is-kit で再利用可能なロジックにする]]></title><description><![CDATA[みなさん、こんにちは！
１０月入ってもまだ半袖半パンで外でてるフロントエンドエンジニアの @nyaomaru です！
TypeScript を実装しているときに、型ガード関数(type guard)を書くことは多いと思います。
でも、

いたるところで見かける同じような isXXX

コピペ → 微修正の無限地獄
複雑な型パズル化で保守がツラい

…みたいな沼にハマること、ありません？
そこで今日は、型ガードを「再利用可能なロジック」に昇格させるための設計パターンを紹介します。道具としては僕のライブラリ is-kit（ゼロ依存・軽量） を使いますが、考え方は素の TypeScript で...]]></description><link>https://zenn.dev/nyaomaru/articles/design-type-guard</link><guid isPermaLink="true">https://zenn.dev/nyaomaru/articles/design-type-guard</guid><pubDate>Wed, 15 Oct 2025 00:08:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4XCQkXvN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%25A9%258D%25E3%2581%25BF%25E6%259C%25A8%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AB%25E7%25B5%2584%25E3%2581%25BF%25E7%25AB%258B%25E3%2581%25A6%25E3%2582%258B%25EF%25BC%259Ais-kit%2520%25E3%2581%25A7%25E5%2586%258D%25E5%2588%25A9%25E7%2594%25A8%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyaomaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNzViM2IxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>nyaomaru</dc:creator></item><item><title><![CDATA[Remix3 を Vite から HMR 対応で動かす]]></title><description><![CDATA[
 前回の記事
https://zenn.dev/sora_kumo/articles/remix3-samples

 今回のリポジトリ
https://github.com/SoraKumo001/remix3-sample02

 Vite から Remix3 を使う
前回は rolldown でビルドして、html ファイルからスクリプトを呼び出して実行しました。今回は Vite から HMR 対応で動作させてみます。

 Vite の設定

 vite.config.ts
ファイルの変更を検知したら、スクリプトのトップのファイルを再読み込みさせるプラグインを作成します。また、前...]]></description><link>https://zenn.dev/sora_kumo/articles/remix3-samples2</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/remix3-samples2</guid><pubDate>Tue, 14 Oct 2025 23:41:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--03ylPJuE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Remix3%2520%25E3%2582%2592%2520Vite%2520%25E3%2581%258B%25E3%2582%2589%2520HMR%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[BunにNext.jsを立てても、Nodeに戻せるので安心してほしい！]]></title><description><![CDATA[
 本記事のサマリ
「Bunを試してみたいけど、プロダクションで問題が起きたらどうしよう」そんな不安を抱えている方に向けて、BunでNext.jsプロジェクトを立ち上げて、いつでもNode.js（yarn）に戻せることを実際のコードで検証します。
Bunの圧倒的な速度と使い勝手の良さを知りつつも、導入への一歩を踏み出せずにいる方が多いのではないでしょうか。本記事では、その心配を解消するために、BunからNode.jsへの移行が本当に可能なのかを実践的に確かめます。結論から言うと、想像以上にスムーズに戻すことができます。だからこそ、もう遠慮する必要はありません。
!
Bunについて既にご存...]]></description><link>https://zenn.dev/stellarcreate/articles/bun-nextjs-node-compatibility</link><guid isPermaLink="true">https://zenn.dev/stellarcreate/articles/bun-nextjs-node-compatibility</guid><pubDate>Tue, 14 Oct 2025 23:35:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oAVHtoxA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bun%25E3%2581%25ABNext.js%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%25A6%25E3%2582%2582%25E3%2580%2581Node%25E3%2581%25AB%25E6%2588%25BB%25E3%2581%259B%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E5%25AE%2589%25E5%25BF%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BB%25E3%2581%2597%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25BD%2590%25E3%2580%2585%25E6%259C%25A8%25E5%25B0%2586%25E4%25B8%2580%2520%2540%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEStellar...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MzU3YWI3MTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEStellarCreate%2520%257C%2520T...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhZTcyMDM5ZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>佐々木将一 @株式会社StellarCreate</dc:creator></item><item><title><![CDATA[AI SDK 実践入門 - 入門編]]></title><description><![CDATA[ゼロから AI SDK を学べます。

【読者】
・AI SDK の初学者
・React使いで AI 機能を実装したい方
・LLM を活用したアプリケーション開発に興味がある方

【特徴は】
・AI SDK について体系的に学習できること
・TypeScript を活用した AI アプリケーション開発
・最新の AI SDK の利用
・Next.js 15 の利用
・複数の AI プロバイダーを統一的に扱う方法

【本書籍がカバーする技術】
・AI SDK Core
・AI SDK UI
・OpenAI API
・Gemini API
・OpenWeather API

【その他】
「いいね」してくれたらモチベーションあがります🚀 ]]></description><link>https://zenn.dev/hayato94087/books/8ac4877fc2fc5d</link><guid isPermaLink="true">https://zenn.dev/hayato94087/books/8ac4877fc2fc5d</guid><pubDate>Tue, 14 Oct 2025 13:38:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hFVvPBZd--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci84ZWI4MDRlNjBiLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg?_a=BACAGSGT" length="0" type="false"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[できる限りType-Safe Pipeline — 流れる構造のデザイン]]></title><description><![CDATA[
 経緯
前回パイプランのやつをあげてみたものの、各stepsの構造で、anyが気になりすぎたので
もっと厳格にやれないかと色々考察していた。
見た目はだいぶカッコいいんだけど・・いいんだけどぉぉぉ・・・
できる限りType-safeにしようとしたら、どんな感じになるかなぁって。

 中身の話
結局たどり着いたのは、外見FP、中身OOPな構造で、Stepをクラス化した。
んで、オブジェクトのチェインで繋いで、次のstepへの橋渡し。
重要かなと思うのは、現在のPipeを見たときに、前側の出力と後ろ側の入力までしか
Pipeは理解することができないという点で、型としては前後がないとダメなん...]]></description><link>https://zenn.dev/risk/articles/979f97bf6c79ec</link><guid isPermaLink="true">https://zenn.dev/risk/articles/979f97bf6c79ec</guid><pubDate>Tue, 14 Oct 2025 09:06:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3XG9E3-R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E9%2599%2590%25E3%2582%258AType-Safe%2520Pipeline%2520%25E2%2580%2594%2520%25E6%25B5%2581%25E3%2582%258C%25E3%2582%258B%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2599%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3VyMXB4aHVmSWFHUHppWVdmSW5BYkhrRnAyRHd1azJoelhnLVp1VVRpalEtSjJVX0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>りすく</dc:creator></item><item><title><![CDATA[Vue 3.5 の「Reactive Props Destructure」について]]></title><description><![CDATA[
 はじめに
今更になってしまいますが、Vue3.5で追加された新機能の一部「Reactive Props Destructure（リアクティブなプロップス分割代入）」について紹介します。
これにより、これまで煩雑だった defineProps の扱いがシンプルになりました。

 これまでの課題
以前の Vue（〜3.4）では、次のような制限がありました。
&lt;script setup lang="ts"&gt;
const props = defineProps&lt;{ count?: number; msg?: string }&gt;()

// ❌ 分割代入するとリアクティ...]]></description><link>https://zenn.dev/tspk/articles/ddad9a3b98d2c3</link><guid isPermaLink="true">https://zenn.dev/tspk/articles/ddad9a3b98d2c3</guid><pubDate>Tue, 14 Oct 2025 06:16:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K4eOgH3X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25203.5%2520%25E3%2581%25AE%25E3%2580%258CReactive%2520Props%2520Destructure%25E3%2580%258D%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B7%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRaUk5ISjNvUTRveHRBeGZBcVh5Y2RlVV9HbUxldnlQVUFiNUhMcU4ybUVZVVpsM2E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぷっけ</dc:creator></item><item><title><![CDATA[SpeechSynthesisUtterance APIの使い方]]></title><description><![CDATA[Webブラウザ上で文字を声に変えて読み上げたいときに使えるのがSpeechSynthesisUtteranceです。日本語や韓国語など、さまざまな言語の発音も設定でき、文章を順番に読み上げることも可能です。
現在進行中のアプリケーションにこれらの機能を実装しようと思います。


 基本文法


オブジェクト生成
const synth = window.speechSynthesis;


テキスト設定
const utter = new SpeechSynthesisUtterance('こんにちは');


言語設定
utter.lang = "ja-JP";


速度や音の高さ調整...]]></description><link>https://zenn.dev/hyoni/articles/e3b56662f579f2</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/e3b56662f579f2</guid><pubDate>Tue, 14 Oct 2025 04:48:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H05DTwbR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SpeechSynthesisUtterance%2520API%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[子ども向け学習アプリ開発ログ：学習イベントの記録と発音ボタンによる学習完了の実装]]></title><description><![CDATA[学習イベントを登録する際、当初は「学習完了」のボタンを作るか迷いました。しかし、このアプリは子どもが操作することを想定しているため、発音を聞くと自動で学習完了として記録する方針に変更しました。これにより、子どもが操作を迷わず、自然に学習イベントが記録されるようになっています。

 前回


学習関連API

今日の単語を10件, 学習済み単語からランダムに10件抽出(テスト用）
取得データをダッシュボードに反映





 今回


学習イベントの保存
　- action, lang, wordId を記録
　- 例：{ action: "learn", lang: "ja", word...]]></description><link>https://zenn.dev/hyoni/articles/b68b3ebfba4b04</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/b68b3ebfba4b04</guid><pubDate>Tue, 14 Oct 2025 02:19:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FlNUwpnb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%2590%25E3%2581%25A9%25E3%2582%2582%25E5%2590%2591%25E3%2581%2591%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25AD%25E3%2582%25B0%25EF%25BC%259A%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%25E3%2581%25A8%25E7%2599%25BA%25E9%259F%25B3%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AD%25A6%25E7%25BF%2592%25E5%25AE%258C%25E4%25BA%2586%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[Next.js 15とDDDで作る堅牢なシステム設計【番外編: セッション管理と認証・認可】]]></title><description><![CDATA[
 はじめに
本記事は、「Next.js 15とDDDで作る堅牢なシステム設計」シリーズの番外編です。
DDDで実装する際、「ユーザーセッション（認証・認可）はどこで管理すればいいのか？」 という質問をよくいただきます。セッション管理は横断的関心事（Cross-Cutting Concern）であり、複数の層にまたがるため、設計判断が難しいポイントです。
本記事では、DDDの原則に従いつつ、Next.js 15とFirebase Authを使った実践的なセッション管理の設計と実装を解説します。

 この記事で学べること

DDDにおけるセッション管理の考え方
各層での認証・認可の責務分離...]]></description><link>https://zenn.dev/7788/articles/dde768aaa76439</link><guid isPermaLink="true">https://zenn.dev/7788/articles/dde768aaa76439</guid><pubDate>Tue, 14 Oct 2025 02:06:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--svrMHC7q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252015%25E3%2581%25A8DDD%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E5%25A0%2585%25E7%2589%25A2%25E3%2581%25AA%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E8%25A8%25AD%25E8%25A8%2588%25E3%2580%2590%25E7%2595%25AA%25E5%25A4%2596%25E7%25B7%25A8%253A%2520%25E3%2582%25BB%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25A8%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%25BB%25E8%25AA%258D%25E5%258F%25AF%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:7788%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ppRXlBZ0E1dW1LSnJrMkNGUGJHX0hZS0xmcDFadi1IaHZmLVpVNVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>7788</dc:creator></item><item><title><![CDATA[Remix 3 を実際に動かしてみる]]></title><description><![CDATA[
 Remix3 とは
Remix 3 は、React から脱却し、Web 標準に基づいた新しいフルスタック Web フレームワークとして再設計されました。Remix 3 は鋭意開発中ですが、この記事では React 代替に相当する箇所を部分的に動かして、実際に動作を検証してみます。

 サンプルコードのリポジトリ
https://github.com/SoraKumo001/remix3-sample01

 環境の準備
SPA アプリケーションとして動作させるための環境を用意します。今回はビルドに rolldown を使用します。

 rolldown の設定
普通にビルドすれば依存...]]></description><link>https://zenn.dev/sora_kumo/articles/remix3-samples</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/remix3-samples</guid><pubDate>Tue, 14 Oct 2025 00:17:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LBKSnPlM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Remix%25203%2520%25E3%2582%2592%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[gRPCをTypeScriptで0から完全に理解したニキ]]></title><description><![CDATA[
 本記事のサマリ
この記事では、gRPCの本質的な理解から、実際にTypeScriptとNode.jsを使ってローカル環境で動かすまでの実践的な内容をお届けします！
gRPCは単なる新しいAPI技術ではなく、マイクロサービス間の通信を根本的に変える可能性を秘めた仕組みです。RESTful APIとは異なるアプローチで、型安全性とパフォーマンスの両立を実現できます。
今回は概念的な説明に留まらず、実際に手を動かしてgRPCサーバーとクライアントを構築し、Protocol Buffersの定義から動作確認まで一通り体験していただけます。モダンなWeb開発に携わるエンジニアの皆さんに、新たな...]]></description><link>https://zenn.dev/stellarcreate/articles/grpc-complete-understanding</link><guid isPermaLink="true">https://zenn.dev/stellarcreate/articles/grpc-complete-understanding</guid><pubDate>Tue, 14 Oct 2025 00:02:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Kwj1R7p8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:gRPC%25E3%2582%2592TypeScript%25E3%2581%25A70%25E3%2581%258B%25E3%2582%2589%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2583%258B%25E3%2582%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E4%25BD%2590%25E3%2580%2585%25E6%259C%25A8%25E5%25B0%2586%25E4%25B8%2580%2520%2540%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEStellar...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MzU3YWI3MTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEStellarCreate%2520%257C%2520T...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhZTcyMDM5ZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>佐々木将一 @株式会社StellarCreate</dc:creator></item><item><title><![CDATA[TypeScriptでつくる階層型Pipeline構造 ― 安全な関数連結と注入]]></title><description><![CDATA[
 経緯
クリーンアーキテクチャのやつを作ったときのPipelineが、だいぶ使いやすそうだったから
色々使い回せるように作り直したかった。

 中身の話
全体的に、前回のやつのPipelineブラッシュアップ版
自由に関数が繋げて、前の関数の戻り値型が、そのまま次の関数のinputに変わるので
繋げてて幸せになれる。
途中でErrorを返すと、そのままChainが止まるようになっているので、エラー処理が楽かも。
fromの時点でINの型を与えないと、推論できなくなっちゃうので、与えてる。
この方は、runの引数につながるので、実行時に指定する型を間違えなくていい感じ。
実際は、無名関数...]]></description><link>https://zenn.dev/risk/articles/ad048901007c51</link><guid isPermaLink="true">https://zenn.dev/risk/articles/ad048901007c51</guid><pubDate>Mon, 13 Oct 2025 18:29:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7nBUeHq1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E9%259A%258E%25E5%25B1%25A4%25E5%259E%258BPipeline%25E6%25A7%258B%25E9%2580%25A0%2520%25E2%2580%2595%2520%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E9%2596%25A2%25E6%2595%25B0%25E9%2580%25A3%25E7%25B5%2590%25E3%2581%25A8%25E6%25B3%25A8%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2599%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3VyMXB4aHVmSWFHUHppWVdmSW5BYkhrRnAyRHd1azJoelhnLVp1VVRpalEtSjJVX0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>りすく</dc:creator></item><item><title><![CDATA[Next.js App Routerで破綻しない設計──本番で使えるアーキテクチャ実践ガイド]]></title><description><![CDATA[Next.jsのApp Routerは、“設計力が試されるフレームワーク”です。
Server Components、Server Actions、そして“use client”による明確な境界。
それらは間違いなく強力な仕組みであり、
使いこなせば、アプリケーションの構造を根本から変えるほどのポテンシャルを持っています。
ただ、どう設計すれば破綻しないのかについては、
誰も明確な指針を示してくれません。
実際、僕自身もいくつものチーム開発でApp Routerを使いながら、
「境界があいまいになる」「Server Actionsが散らかる」
といった“App Router地獄”を何度も...]]></description><link>https://zenn.dev/yukionishi/articles/cd79e39ea6c172</link><guid isPermaLink="true">https://zenn.dev/yukionishi/articles/cd79e39ea6c172</guid><pubDate>Mon, 13 Oct 2025 15:32:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Le3OSTze--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520Router%25E3%2581%25A7%25E7%25A0%25B4%25E7%25B6%25BB%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25E8%25A8%25AD%25E8%25A8%2588%25E2%2594%2580%25E2%2594%2580%25E6%259C%25AC%25E7%2595%25AA%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E5%25AE%259F%25E8%25B7%25B5%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZDJkNTRkODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>yuki</dc:creator></item><item><title><![CDATA[yomitokuで作る無料の日本語OCR Webアプリ【Flask + TypeScript】]]></title><description><![CDATA[
 はじめに
昨今、AI が急速に普及している中で、改めて「OCR（光学文字認識）」という技術に注目してみました。
OCR の API サービスは多数存在していますが、どれも従量課金制で、利用量が増えるとコストが膨らんでいきます。Google Cloud Vision API や Amazon Textract などは高精度ですが、個人開発や小規模なプロジェクトでは原価が気になるところです。
「日本語 OCR を自分で構築できれば、コストを気にせず色々なことに使えるのではないか？」
OSS の OCR ライブラリとしては、Tesseract や EasyOCR などが有名ですが、日本語の...]]></description><link>https://zenn.dev/lecto/articles/b345c7f3920ae9</link><guid isPermaLink="true">https://zenn.dev/lecto/articles/b345c7f3920ae9</guid><pubDate>Mon, 13 Oct 2025 14:45:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qe9x_3US--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:yomitoku%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%2584%25A1%25E6%2596%2599%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259EOCR%2520Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2580%2590Flask%2520%252B%2520TypeScript%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tamoco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYzIzMDI3ODQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Lecto%252C%2520Inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSncxc3hPRzZtOHdRX0tfU0JsaGszN2s5dFhWUl9RNnJ3UFdDQlQ4UTNieDJEei10cmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tamoco</dc:creator></item><item><title><![CDATA[Claude Codeに自分の記憶を持ってもらうMCPサーバーを作った話]]></title><description><![CDATA[
 作ったもの：claude-ops-mcp
https://github.com/pppp606/claude-ops-mcp/
Claude Codeの操作履歴をMCPサーバーとして提供するツールです。ClaudeCodeが自分で書いた自分のログを、自身で読み返すためのMCPです。

 なぜ作ったか
Claude Codeがv2になり /rewind コマンドで会話を巻き戻せるのは便利なのですが、根本的にClaude Codeは自身が行った作業の内容を理解（記憶）していないという問題があります。
「え、ちょっと何したの？」という素朴な質問に、自身のログを遡って確認するという機能はなく...]]></description><link>https://zenn.dev/pppp303/articles/claude-ops-mcp-memory</link><guid isPermaLink="true">https://zenn.dev/pppp303/articles/claude-ops-mcp-memory</guid><pubDate>Mon, 13 Oct 2025 14:28:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RVcMDVHZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25E3%2581%25AB%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E8%25A8%2598%25E6%2586%25B6%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pppp303%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4NTNiOWJiODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>pppp303</dc:creator></item><item><title><![CDATA[いまさらながらSOLID原則に入門]]></title><description><![CDATA[
 はじめに
「変更に強く、理解しやすい設計」を実現するための指針として、SOLID原則は頻出します。
私自身もよく目にするものの、なぜ必要なのか、どのような場合にどうやって使うのかしっかり理解しているわけではなかったのでAIの力を借りて以下のような観点でまとめてみます。
SOLID原則の理解の一助になれば幸いです。

概要
なぜその原則が必要なのか
どのような場合に使用されるか
原則に反しているコード例
原則が適用されたコード例

なお、コード例についてはTypeScriptで記載しています。

 S — Single Responsibility Principle (単一責任の原則...]]></description><link>https://zenn.dev/koatmoas/articles/03c6b375025ac2</link><guid isPermaLink="true">https://zenn.dev/koatmoas/articles/03c6b375025ac2</guid><pubDate>Mon, 13 Oct 2025 14:09:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WHNyg-p2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589SOLID%25E5%258E%259F%25E5%2589%2587%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tak0Kats%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzYmEwNzNhODguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Tak0Kats</dc:creator></item><item><title><![CDATA[Next.js × deck.glで作る1kmメッシュ人流可視化アプリの裏側]]></title><description><![CDATA[
 こんにちは！
こんにちは、株式会社ビットライトのモリタカです。
https://www.bitlight.co.jp/
今回はこちらのG空間情報データ様の全国の人流オープンデータ（1kmメッシュ、市区町村単位発地別）のデータを拝借しまして、関東圏の人流データを可視化しました。
超ざっくり説明すると、可視化の方法としては総人流が多いと高くて、夜より昼間の方が多いと赤くなる。という風に作りました。


こちらから実際に操作できるのでぜひお試しください
https://st-moritk.github.io/people-flow-data-visualization/
ソースコードはこち...]]></description><link>https://zenn.dev/bico9999/articles/zenn-people-flow</link><guid isPermaLink="true">https://zenn.dev/bico9999/articles/zenn-people-flow</guid><pubDate>Mon, 13 Oct 2025 11:10:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GxDB906f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25C3%2597%2520deck.gl%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B1km%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E4%25BA%25BA%25E6%25B5%2581%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E8%25A3%258F%25E5%2581%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A2%25E3%2583%25AA%25E3%2582%25BF%25E3%2582%25AB%2520%257C%2520%25E3%2588%25B1%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJmMDA3ZTFhMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>モリタカ | ㈱ビットライト</dc:creator></item><item><title><![CDATA[【JavaScript 解説】「テンプレートリテラル」とは？]]></title><description><![CDATA[
 はじめに

 この記事の対象者
JavaScriptを学び始めて、「テンプレートリテラル」という言葉に出会い、「これって、どう便利なの？ どうやって使うの？」となっているあなたへ向けて。

 目次

テンプレートリテラルとは？

結論
文字列を「囲む」記号が違う


テンプレートリテラルを使う理由

変数や式を直接埋め込める
改行をそのまま表現できる




 1. テンプレートリテラルとは？

 結論：変数を埋め込むことができるなどの特徴を持つ、「文字列の特別な書き方」
下記のように紹介されています。

「テンプレートリテラルは逆引用符 (`) で区切られたリテラルで、複数行の文字...]]></description><link>https://zenn.dev/yamap_web/articles/4aa79f2a71e4b3</link><guid isPermaLink="true">https://zenn.dev/yamap_web/articles/4aa79f2a71e4b3</guid><pubDate>Mon, 13 Oct 2025 09:26:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MlBMKqp6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%2520%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%25E3%2580%258C%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25AB%25E3%2580%258D%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2584%25E3%2581%25BE%25E3%2581%25B4%25E3%2583%25BC%2520%252F%2520Yamapi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNTMxZTUyMjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>やまぴー / Yamapi</dc:creator></item></channel></rss>