<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 07 Jan 2025 12:04:18 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[画像処理100本ノックに挑戦｜減色処理（006/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の6本目です。

 前回
https://zenn.dev/nyagato_00/articles/c5406005c08b12

 実装

 お題

ここでは画像の値を256^3から4^3、すなわちR,G,B in {32, 96, 160, 224}の各4値に減色せよ。 これは量子化操作である。 各値に関して、以下の様に定義する。

val = {  32  (  0 &lt;= val &lt;  64)
         96  ( 64 &lt;= val &lt; 128)
  ...]]></description><link>https://zenn.dev/nyagato_00/articles/de360085b46e19</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/de360085b46e19</guid><pubDate>Tue, 07 Jan 2025 11:02:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZKD3oPpy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E6%25B8%259B%25E8%2589%25B2%25E5%2587%25A6%25E7%2590%2586%25EF%25BC%2588006%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[【TypeScript】テスト駆動開発（TDD）入門 第1回：TDDって何？なぜ必要なの？]]></title><description><![CDATA[
 はじめに
プログラミングをしていると、こんな経験はありませんか？

「動いているはずなのに、別の機能を追加したら急に動かなくなった…」
「コードを変更する度に、他の機能が壊れていないか不安で仕方ない」
「バグを直したと思ったら、別の場所で新しい問題が発生した」
「チームメンバーのコードを変更するのが怖い」
「コードの品質を保ちたいけど、どうすればいいかわからない」

このような問題を解決する強力な手法の一つが、テスト駆動開発（Test-Driven Development: TDD）です。

 TDDって何？
テスト駆動開発とは、「先にテストを書いてから、実装を行う」という開発手法で...]]></description><link>https://zenn.dev/nezumizuki/articles/fa821accc95050</link><guid isPermaLink="true">https://zenn.dev/nezumizuki/articles/fa821accc95050</guid><pubDate>Tue, 07 Jan 2025 09:37:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oC1_qj73--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2588TDD%25EF%25BC%2589%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC1%25E5%259B%259E%25EF%25BC%259ATDD%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25EF%25BC%259F%25E3%2581%25AA%25E3%2581%259C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXRYZE91dm9hdlRUclRZSVY2eW5ibDdfVHprdXhtb1JUcUlQRGpTaTRfTmZxUnlLdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MI</dc:creator></item><item><title><![CDATA[初めてWebアプリを作ってみました]]></title><description><![CDATA[アプリと呼んで良いのかツールというべきかわかりませんが、個人的に欲しかったものを個人で作ってみました。
これ
ぼくは家で作業するときにTime Timer というものを使うことがあるのですが、机には極力なにも置きたくないのと、職場や外出先でも使えるようにWeb版で作ってみました。
こんな感じです↓

技術はTypeScript の練習がてら作った面もありますが、デプロイまでできて楽しかったのでここにのこします。
]]></description><link>https://zenn.dev/daraenglish/articles/1dec4e1631eaa9</link><guid isPermaLink="true">https://zenn.dev/daraenglish/articles/1dec4e1631eaa9</guid><pubDate>Tue, 07 Jan 2025 06:31:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uSqJaOn0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daraEnglish%25E4%25B8%25AD%25E3%2581%25AE%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmp5dmY3NnBoTUdiazNoOWpwc2ppdVhiYTVsblgyMHpkZnAwVkxUc0hXdlkzT2VPY009czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daraEnglish中の人</dc:creator></item><item><title><![CDATA[読書感想文：TypeScript と React/Next.js でつくる実践 Web アプリケーション]]></title><description><![CDATA[最近、書籍を読む機会も多くなってきたので好みのものについては読書感想文を書いていこうと思います。今回は年末年始に注力したかったフロントエンド開発の書籍として 「TypeScript と React/Next.js でつくる実践 Wen アプリケーション」 を読んでみたので、その感想文を書いていきます。
2022 年に発売されたものなのですが、後述する React/Next.js を学ぶ上での書籍として比較サイトに多く出てくるので人気の書籍となっているようです。

執筆時点での自身のフロントエンド開発の経歴としては、本業で 1 年半・副業で半年ほど TypeScript, React/Ne...]]></description><link>https://zenn.dev/t_hayashi/articles/faa1ec1944731f</link><guid isPermaLink="true">https://zenn.dev/t_hayashi/articles/faa1ec1944731f</guid><pubDate>Tue, 07 Jan 2025 03:07:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z9sHntX1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25AD%25E6%259B%25B8%25E6%2584%259F%25E6%2583%25B3%25E6%2596%2587%25EF%25BC%259ATypeScript%2520%25E3%2581%25A8%2520React%252FNext.js%2520%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%25E5%25AE%259F%25E8%25B7%25B5%2520Web%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomonori%2520Hayashi%2520%252F...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WlphS3JZOGdPbHVBSWpsbU02eUg0VXI4eW5OSnBYSnV0RzBPM255QT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomonori Hayashi / @pHaya72</dc:creator></item><item><title><![CDATA[【1日1zenn - day16】クエリパラメータの付与から取り出しまで]]></title><description><![CDATA[直近、1日1zennサイズに収まるような何かがあまりなかったので、
一旦小ネタをまとめようかと思います。
とか思ったけど書いてみたら一定のサイズになったからヨシ！

 クエリパラメータの作成から取り出しまで
自分はFEをReactとTypeScript、BEをKotlinとSpring Bootで開発してるので、それメインになります。

 前提メモ
https://apidog.com/jp/blog/introduction-to-api-parameters/
GETリクエストではクエリパラメータで検索することがメインで、POSTやPUTだとボディパラメータが利用されがち。DELET...]]></description><link>https://zenn.dev/shunsuke108m/articles/f2f97e98a90b2c</link><guid isPermaLink="true">https://zenn.dev/shunsuke108m/articles/f2f97e98a90b2c</guid><pubDate>Mon, 06 Jan 2025 14:50:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uevth1qo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25901%25E6%2597%25A51zenn%2520-%2520day16%25E3%2580%2591%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E4%25BB%2598%25E4%25B8%258E%25E3%2581%258B%25E3%2582%2589%25E5%258F%2596%25E3%2582%258A%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%25AE%25E7%2594%25B0%25E5%25B3%25BB%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG9Jdy1QSHNvSW1WVGpKTmxFbkhnZkRyZ0pBVlRSQzhIaWMweDVJUmZLS3hlUjZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宮田峻輔</dc:creator></item><item><title><![CDATA[Hono.js: 最速を目指すNode.jsフレームワーク]]></title><description><![CDATA[

 Why Learn Hono

既に市場にはNode.js用の多くのバックエンドライブラリやフレームワークが存在しています。以前、私はいくつかの小規模なプロジェクトでNest.jsを使ったことがあります。それは機能が充実しており、プロジェクトを迅速に実装できます。しかし、私の小規模プロジェクトにとって、その多くの機能は本当に必要以上であり、高度なカプセル化がされており、コードを書く際の自由度が少ないです。
偶然にも、私はオンラインでHonoに出会いました。そのドキュメントを読んでみると：


超高速 🚀 - ルータのRegExpRouterは本当に速いです。線形ループを使用していま...]]></description><link>https://zenn.dev/leapcell/articles/1ebf8086a1c51e</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/1ebf8086a1c51e</guid><pubDate>Mon, 06 Jan 2025 14:27:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C_KqjTZ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono.js%253A%2520%25E6%259C%2580%25E9%2580%259F%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599Node.js%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜HSV変換（005/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の5本目です。

 前回
https://zenn.dev/nyagato_00/articles/df65d68dd857c5

 実装

 お題

HSV変換を実装して、色相Hを反転せよ。

https://github.com/minido/Gasyori100knock-1/tree/master/Question_01_10#q5-hsv変換

 Coding
import sharp from 'sharp';

interface HSV {
  h: number;  // ...]]></description><link>https://zenn.dev/nyagato_00/articles/c5406005c08b12</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/c5406005c08b12</guid><pubDate>Mon, 06 Jan 2025 12:36:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iu-Jejld--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259CHSV%25E5%25A4%2589%25E6%258F%259B%25EF%25BC%2588005%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[ドメイン駆動設計やシステム設計の勉強に TypeScript でサンプルプロジェクトを作ってみた]]></title><description><![CDATA[ドメイン駆動設計やアーキテクチャー、マイクロサービス、イベントソーシング、CQRS などのシステム設計を実践的に学習するために、TypeScript を用いたサンプルプロジェクトを作成しました。

 サンプルプロジェクト


 題材
書籍「ドメイン駆動設計入門 ボトムアップでわかる! ドメイン駆動設計の基本」のサンプルプロジェクトである、サークル管理システムを題材としています。

 要件
題材としている書籍のサンプルプロジェクトとほぼ同等になります。

プロフィール機能

ユーザーを新規登録できること
登録したユーザー情報を閲覧できること
登録したユーザー情報を更新できること
登録したユ...]]></description><link>https://zenn.dev/m10maeda/articles/study-domain-driven-design-and-system-design</link><guid isPermaLink="true">https://zenn.dev/m10maeda/articles/study-domain-driven-design-and-system-design</guid><pubDate>Mon, 06 Jan 2025 05:04:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4B62_R-W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E9%25A7%2586%25E5%258B%2595%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%2584%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AE%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%25AB%2520TypeScript%2520%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2589%258D%25E7%2594%25B0%25E3%2581%25BF%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlMWY3YjBkZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>前田みお</dc:creator></item><item><title><![CDATA[【TypeScript】もう一歩先のExtendsとInferの使い方]]></title><description><![CDATA[どうもこんにちは、たくびーです。
TypeScriptの型システムのextendsやinferといった構文を理解するために、ジェネリック型を含めてどのような概念があるのかこのブログで解説していこうと思います。

 TypeScriptの型システムを使った少し凝ったテクニック
早速ですが、いくつかのコード例を見ていきましょう。
少し凝ったテクニックですが、最初はあまり構えずに『こんな書き方もあるんだな』と気軽に眺めてみてください。

 ネストした配列を再帰的にフラットにする
「T が配列なら、それを 1 段階フラットにする」「さらに要素が配列なら再帰的にフラットにする」という処理を、型レベ...]]></description><link>https://zenn.dev/socialplus/articles/38abaf9e40d271</link><guid isPermaLink="true">https://zenn.dev/socialplus/articles/38abaf9e40d271</guid><pubDate>Mon, 06 Jan 2025 05:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s7JK0kvf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%2582%25E3%2581%2586%25E4%25B8%2580%25E6%25AD%25A9%25E5%2585%2588%25E3%2581%25AEExtends%25E3%2581%25A8Infer%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takubii%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4Mjg2YmNjMDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SocialPLUS%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNGYwMWMzNmEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takubii</dc:creator></item><item><title><![CDATA[モジュラモノリスの依存関係をESLintの設定で強制する]]></title><description><![CDATA[
 概要
モジュラモノリスの依存関係をESLintの設定で強制する方法を示します。

 今回の構成
.
├── README.md
├── bun.lockb
├── eslint.config.js
├── node_modules
├── package-lock.json
├── package.json
├── src
│   ├── index.ts
│   ├── module1
│   │   ├── dir
│   │   │   └── var.ts
│   │   ├── index.ts
│   │   └── var.ts
│   ├── module2
│   ...]]></description><link>https://zenn.dev/hitotsu_blog/articles/ff10a561b02694</link><guid isPermaLink="true">https://zenn.dev/hitotsu_blog/articles/ff10a561b02694</guid><pubDate>Sun, 05 Jan 2025 16:24:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m6pNFdFi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AA%25E3%2582%25B9%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592ESLint%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25A7%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2584%25E3%2581%2595%25E3%2581%258A%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0NjczMDg4NjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:HITOTSU%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkYmFjYTIxMzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いさお</dc:creator></item><item><title><![CDATA[【Remix】meta機能備忘録]]></title><description><![CDATA[
 Remixのmeta機能とは
Remixには、各ルートコンポーネントでmetaデータを定義できる機能が備わっています。
この機能を使うことで、SEO対策に重要なmetaタグやtitleタグを動的に設定することができます。

Docs
https://remix.run/docs/en/main/route/meta



 基本的な使い方
import type { MetaFunction } from "@remix-run/node";

export const meta: MetaFunction = () =&gt; {
  return [
    { title: "...]]></description><link>https://zenn.dev/rlab/articles/586663f08931bc</link><guid isPermaLink="true">https://zenn.dev/rlab/articles/586663f08931bc</guid><pubDate>Sun, 05 Jan 2025 10:14:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vLM0FU8l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Remix%25E3%2580%2591meta%25E6%25A9%259F%25E8%2583%25BD%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258A%25E3%2583%2584%25E3%2583%258E%25E3%2583%25AD%25E3%2583%2589%25E3%2583%25AA%25E3%2582%25B4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjNzdmZWEzNmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ナツノロドリゴ</dc:creator></item><item><title><![CDATA[【v4からv5に切り替わる大変な時に勉強してるあなたへ】Svelteの基本的な書き方]]></title><description><![CDATA[
 はじめに
皆さん、こんにちは。
今回はSvelteの基本的な使い方をご紹介します。最近Svelteはバージョンが上がり新しくルーンという表現が追加されました。この書き方の違いについても掲載していきます。
https://svelte.dev/docs/svelte/v5-migration-guide

 雛形の作成とエディタの設定

 概要


npm create vite@latestで雛形を作成
VSCodeに「Svelte for VS Code」を追加

npm run devでアプリの起動
WebブラウザでSvelteを気軽に試す（Playground）

Svelte...]]></description><link>https://zenn.dev/peter_norio/articles/65409d3a6469f0</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/65409d3a6469f0</guid><pubDate>Sun, 05 Jan 2025 08:54:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TRhiJSIY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590v4%25E3%2581%258B%25E3%2582%2589v5%25E3%2581%25AB%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2582%258F%25E3%2582%258B%25E5%25A4%25A7%25E5%25A4%2589%25E3%2581%25AA%25E6%2599%2582%25E3%2581%25AB%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25B8%25E3%2580%2591Svelte%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[【Prisma】schemaを複数ファイルで管理する]]></title><description><![CDATA[
 背景

schema定義する際、schema.prisma単体で定義する方法もあるが、肥大化を避ける為にファイルを分けたい。


schema.prismaの例
schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id            Int      @id @default(autoincrement())
...]]></description><link>https://zenn.dev/kobata/articles/341b9fb133a3d9</link><guid isPermaLink="true">https://zenn.dev/kobata/articles/341b9fb133a3d9</guid><pubDate>Sun, 05 Jan 2025 06:54:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--27-s3tTJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Prisma%25E3%2580%2591schema%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kobata%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmNGY5ZGJhMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kobata</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜大津の二値化（004/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の4本目です。

 前回
https://zenn.dev/nyagato_00/articles/f5c87321f68131

 実装

 お題

大津の二値化を実装せよ。 大津の二値化とは判別分析法と呼ばれ、二値化における分離の閾値を自動決定する手法である。 これはクラス内分散とクラス間分散の比から計算される。

https://github.com/minido/Gasyori100knock-1/tree/master/Question_01_10#q4-大津の二値化

 Codi...]]></description><link>https://zenn.dev/nyagato_00/articles/df65d68dd857c5</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/df65d68dd857c5</guid><pubDate>Sun, 05 Jan 2025 06:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aNT8L-94--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E5%25A4%25A7%25E6%25B4%25A5%25E3%2581%25AE%25E4%25BA%258C%25E5%2580%25A4%25E5%258C%2596%25EF%25BC%2588004%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[Angularの File Extension Loader & Import attribute loader を全部試す]]></title><description><![CDATA[㊗️㊗️㊗️ 明けましておめでとうございます! ㊗️㊗️㊗️
@onicode3です。
Angularの File Extension Loader, Import attribute loaderについて記載します。

 File Extension Loader とは
Angular 17.1 から File Extension Loader が追加されました。
これは、特定のファイル拡張子を持つファイルをどのように処理するかを制御する機能です。
この設定により、ファイルをインポートしたときの挙動を制御できます。

 使い方
File Extension Loader のローダータイ...]]></description><link>https://zenn.dev/onicode3/articles/angular-loader</link><guid isPermaLink="true">https://zenn.dev/onicode3/articles/angular-loader</guid><pubDate>Sun, 05 Jan 2025 04:30:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OfZrFRtc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular%25E3%2581%25AE%2520File%2520Extension%2520Loader%2520%2526%2520Import%2520attribute%2520loader%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onicode3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMmNlZTVjN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onicode3</dc:creator></item><item><title><![CDATA[Nuxt3 + PokeAPIでポケモン図鑑を作ろう！]]></title><description><![CDATA[この本は、Nuxt 3とPokeAPIを使ってハンズオン形式でポケモン図鑑を作成する本です。外部APIとの連携、型安全なデータ処理、Tailwind CSSによるスタイリング、ドメイン駆動設計（DDD）の基礎も解説します。]]></description><link>https://zenn.dev/tsukiyama3/books/pokedex-handson</link><guid isPermaLink="true">https://zenn.dev/tsukiyama3/books/pokedex-handson</guid><pubDate>Sun, 05 Jan 2025 00:49:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3Zh4aQZn--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci85ZDVmYTUwOTc1LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>つきやま</dc:creator></item><item><title><![CDATA[Express.js徹底解説]]></title><description><![CDATA[
ExpressはNode.jsで極めて一般的に使用されるウェブサーバーアプリケーションフレームワークです。基本的に、フレームワークとは特定のルールに則ったコード構造であり、2つの重要な特性を持っています：

それはAPIをカプセル化し、開発者がよりビジネスコードの記述に集中できるようにします。
それは既に定義されたプロセスと標準仕様を持っています。

Expressフレームワークの主要機能は以下の通りです：

様々なHTTPリクエストに応答するためのミドルウェアを設定できます。
異なる種類のHTTPリクエストアクションを実行するためのルートテーブルを定義します。
テンプレートにパラメー...]]></description><link>https://zenn.dev/leapcell/articles/3fdd20aa5aaae3</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/3fdd20aa5aaae3</guid><pubDate>Sat, 04 Jan 2025 12:57:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b_xHT8bl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Express.js%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[Pulumi-aws-nativeを使ってECS Fargateのデプロイ環境を作ってみた]]></title><description><![CDATA[ふとしたことから業務でAWSの環境構築をIaCのpulumiを使ってやることになってハマりにハマったので記事化してみました。
とりあえずPrivate subnet上にFargateのインスタンスを立てて、ALBのPublic IP経由でインターネットからアクセスしてみたかっただけなのでインフラ構成としては
ECS Fargateのデプロイ環境をCFnでサクッと構築してみた（Rollingアップデート編）
を基本にして以下を手抜き、改修しています。

良く見る @pulumi/aws ではなく @pulumi/aws-native で記述
ECR,CI/CD環境は無し
auto scal...]]></description><link>https://zenn.dev/mryo0826/articles/ec1afa8362795b</link><guid isPermaLink="true">https://zenn.dev/mryo0826/articles/ec1afa8362795b</guid><pubDate>Sat, 04 Jan 2025 11:22:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RqKfauHW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pulumi-aws-native%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6ECS%2520Fargate%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mryo0826%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiNjZlOTIwNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mryo0826</dc:creator></item><item><title><![CDATA[[Next.js]use cacheについて学んだ]]></title><description><![CDATA[
 はじめに
use cacheについて学んだので、学んだことを書いていきます。

 use cacheとは
use cache ディレクティブは、コンポーネント、関数、またはファイルをキャッシュ対象として指定します。
ファイルや関数のトップレベルに宣言することで、ファイル内のすべての関数や、関数の戻り値をキャッシュ可能にしたりすることができます。
ただ、まだ実験的なNext.jsの機能なので、use clientやuse serverのようなネイティブのReact機能ではありません。

 サンプルコード
今回は、以下のようにユーザーの一覧からランダムでユーザーを取得し、画面に表示する簡...]]></description><link>https://zenn.dev/ryohei0509/articles/339d05f4e7ffa8</link><guid isPermaLink="true">https://zenn.dev/ryohei0509/articles/339d05f4e7ffa8</guid><pubDate>Sat, 04 Jan 2025 08:41:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tjaihkyj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BNext.js%255Duse%2520cache%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hukuryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0M2JhYWM4YjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hukuryo</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜二値化（003/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の3本目です。

 前回
https://zenn.dev/nyagato_00/articles/c908be46e07ac0

 実装

 お題

画像を二値化せよ。 二値化とは、画像を黒と白の二値で表現する方法である。 ここでは、グレースケールにおいて閾値を128に設定し、下式で二値化する。

y = { 0 (if y &lt; 128)
     255 (else) 
https://github.com/minido/Gasyori100knock-1/tree/master/...]]></description><link>https://zenn.dev/nyagato_00/articles/f5c87321f68131</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/f5c87321f68131</guid><pubDate>Sat, 04 Jan 2025 06:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6qY0GQAR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E4%25BA%258C%25E5%2580%25A4%25E5%258C%2596%25EF%25BC%2588003%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item></channel></rss>