<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 23 Nov 2024 00:49:49 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ホームサーバー完全構築ガイド #4 情報収集システムの構築]]></title><description><![CDATA[シリーズ記事：
ホームサーバー完全構築ガイド #0 計画とハードウェア選定
ホームサーバー完全構築ガイド #1 OS導入とインフラ設定
ホームサーバー完全構築ガイド #2 サービス群の選定
ホームサーバー完全構築ガイド #3 WordPressのデプロイ

 はじめに
ホームサーバー完全構築ガイドシリーズへようこそ。このシリーズでは、ホームサーバーを活用したさまざまなシステム構築方法を紹介しています。今回のテーマは、効率的に情報を収集し管理するシステムの構築です。RSSHub と FreshRSS を組み合わせ、Docker を活用して手軽に運用可能なシステムを構築します。
さらに、Ng...]]></description><link>https://zenn.dev/solitudera/articles/e798fba7c06eb4</link><guid isPermaLink="true">https://zenn.dev/solitudera/articles/e798fba7c06eb4</guid><pubDate>Fri, 22 Nov 2024 19:28:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FR0K9IhP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259B%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E5%25AE%258C%25E5%2585%25A8%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2520%25234%2520%25E6%2583%2585%25E5%25A0%25B1%25E5%258F%258E%25E9%259B%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SolitudeRA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmQtdWxfWFNVYlQtQ2wwUXNqdFd0N1NGSG5sZkUyUnd3Nk9LU2VCeHpKZVFLYUNiND1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SolitudeRA</dc:creator></item><item><title><![CDATA[【Monolithic】Laravel + ReactでWebアプリケーションを作る]]></title><description><![CDATA[Laravel11の解説が欲しかったので、自分がやったことのメモ。

 環境

PHP 8.3.12 (cli) (built: Sep 24 2024 18:08:04) (NTS)
Laravel Framework 11.33.2
react 18.2.0
typescript 5.6.3
tailwindcss 3.2.1
Breeze



 Laravel sailで環境構築
これまではyamlファイルをなんとかこねくり回して作っていたものの、エラーも多くて何回も泣きを見てきました。でもLaravel sailはyamlファイルなしでDocker環境を作ってくれるのでとてもい...]]></description><link>https://zenn.dev/aya_sato/articles/6d51340729a57e</link><guid isPermaLink="true">https://zenn.dev/aya_sato/articles/6d51340729a57e</guid><pubDate>Fri, 22 Nov 2024 05:55:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jFoel6cr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Monolithic%25E3%2580%2591Laravel%2520%252B%2520React%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aya%2520satoh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLa3dRbnNlMlVSdUs0ellWZ3FOZHJ3bnBBTzdyNmRYd3lTMU1JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aya satoh</dc:creator></item><item><title><![CDATA[docker buildのsecretオプションでハマった話（てかこのオプション知ってた？？）]]></title><description><![CDATA[
 はじめに
こんにちは。都内でソフトウェアエンジニアをしているtomoriです。
最近 docker build の secret オプションでハマったことがあったので、備忘録として記事にします。
（どちらかというと secret オプションというよりは docker build そのものでハマっていたような気もしますが……）
ちなみに secret オプションのことは、「要件的にこういうの欲しいなぁー」と思って探していたらたまたま見つけました。

 先に結論
諸々の経緯を端折って先に結論を書きます。
Build secrets を使用してイメージをビルドする際には、以下の３点に注意し...]]></description><link>https://zenn.dev/tksx1227/articles/4af1ce9b9e475a</link><guid isPermaLink="true">https://zenn.dev/tksx1227/articles/4af1ce9b9e475a</guid><pubDate>Wed, 20 Nov 2024 21:19:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CVQx8Di5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520build%25E3%2581%25AEsecret%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%25EF%25BC%2588%25E3%2581%25A6%25E3%2581%258B%25E3%2581%2593%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%259F%25EF%25BC%259F%25EF%25BC%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tomori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5NjQzYWMwY2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tomori</dc:creator></item><item><title><![CDATA[2024年版 Go + Docker + VSCode + air + delveの環境でサクサクローカル開発]]></title><description><![CDATA[こんにちは、kensho(@iwashi623)です。
皆さんはデバッガー、使ってますか？
文明の利器たるデバッガー、私はローカル開発をするときにどうしても使いたい派の人間です。
最近担当することになったアプリケーションのローカル環境でも、デバッガーを使いたかったのですが、あいにく未導入の状態でした。
そこで、Goのデバッガーであるdelveを導入して、ブレークポイントを貼って開発できる状態にしました。
構成は、今どきよくありそうな、

Docker
Golang(echo)
air

といった環境です。
delveの導入時、先人達のZennやQiita、ブログの記事をみて色々試してみた...]]></description><link>https://zenn.dev/iwashi623/articles/b09149369fe06f</link><guid isPermaLink="true">https://zenn.dev/iwashi623/articles/b09149369fe06f</guid><pubDate>Wed, 20 Nov 2024 13:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jpY2syUa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:2024%25E5%25B9%25B4%25E7%2589%2588%2520Go%2520%252B%2520Docker%2520%252B%2520VSCode%2520%252B%2520air%2520%252B%2520delve%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25AF%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kensho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0NDFmNTI1MDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kensho</dc:creator></item><item><title><![CDATA[WSLとDocker、Pythonを使ったローカル開発環境でやってみよう【第1回】]]></title><description><![CDATA[
 WSLとDocker、Pythonを使ったローカル開発環境の構築【第1回】
こんにちは！今回は、WSL（Windows Subsystem for Linux）上でDockerを利用し、Pythonを使ってDynamoDBを操作するためのローカル開発環境を構築するシリーズの第1回目です。この記事では、以下の内容を説明します。

 WSLの導入とセットアップ
Dockerのインストール
Pythonのインストールと仮想環境のセットアップ
それでは、早速始めましょう！

 1. WSLの導入とセットアップ
まず、Windows環境でLinuxを使えるようにするために、WSLを導入します。...]]></description><link>https://zenn.dev/udonmaru/articles/91b401df8f9428</link><guid isPermaLink="true">https://zenn.dev/udonmaru/articles/91b401df8f9428</guid><pubDate>Wed, 20 Nov 2024 12:34:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lACFj_u7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%25E3%2581%25A8Docker%25E3%2580%2581Python%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25E3%2580%2590%25E7%25AC%25AC1%25E5%259B%259E%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:udonmaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwODVjMWI5ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>udonmaru</dc:creator></item><item><title><![CDATA[k6でAPI負荷テストしてみる]]></title><description><![CDATA[
 3行でまとめ！

🪨 k6を使用した負荷テストの方法をご紹介します！
🤠 5つの負荷テストのパターンをお勉強します！
🐳 Docker環境用意しました docker compose up -dとするだけで試すことができます！

🚀 ソースコードはGitHubで公開しています
https://github.com/zackerms/k6-playground

 k6とは?

Grafanaが提供するオープンソースの負荷テストツール
JavaScriptで負荷テストを記述できる
仮想的なユーザ数や、負荷の大きさ、許容エラー数の閾値設定などを簡単に行える


 環境構築
今回は以下の構成...]]></description><link>https://zenn.dev/dev_zacker/articles/44bdf2d68537f7</link><guid isPermaLink="true">https://zenn.dev/dev_zacker/articles/44bdf2d68537f7</guid><pubDate>Wed, 20 Nov 2024 11:33:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ltJvQFe---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:k6%25E3%2581%25A7API%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zacker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzIzN2U4ZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zacker</dc:creator></item><item><title><![CDATA[Docker Multi Stage BuildとNext.jsのstandaloneでDockerイメージ容量を75%削減した話]]></title><description><![CDATA[
 はじめに
株式会社 Rehab for JAPAN のまっちゃんです。
今回は、Next.jsアプリケーションのDockerイメージ容量を削減した話を共有します。初回リリース以降、ほぼ手を加えていなかったDockerfileをふと見直してみたところ、イメージ容量が予想以上に大きいことに気付きました。特に、容量が大きいことによる問題として以下が挙げられます。
ECR（Amazon Elastic Container Registry）のコスト増加
CI/CDのビルド時間の増加
これらを解決するために、Dockerfileを見直し、最適化を行いました。
結果、Dockerイメージ容量を約...]]></description><link>https://zenn.dev/rehabforjapan/articles/save-data-space-dockerfile</link><guid isPermaLink="true">https://zenn.dev/rehabforjapan/articles/save-data-space-dockerfile</guid><pubDate>Tue, 19 Nov 2024 08:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cp8n68Jq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Multi%2520Stage%2520Build%25E3%2581%25A8Next.js%25E3%2581%25AEstandalone%25E3%2581%25A7Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E5%25AE%25B9%25E9%2587%258F%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%2593%25E3%2581%259C%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYzExOTgzNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Rehab%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFdCZ1o4WGdZbFpwa2wxdm9faThrSVpyb2RMWWxiS2lrVEowQTJRaURVUG15QWxnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねこぜのまっちゃん</dc:creator></item><item><title><![CDATA[Snowflake+dbtの開発環境をDockerコンテナで構築する]]></title><description><![CDATA[
 挨拶
株式会社ジンズのバックエンドエンジニア兼開発環境保全活動家の中島です。
今回は弊社のデータ分析基盤開発で利用している Snowflake+dbtの開発環境 のお話をします。

 背景
2010年代より, 情報に基づいた意思決定を行うためのデータサイエンス, またその土台を支えるデータエンジニアリングの考え方は広く市民権を得てきました。
弊社JINSでも当然ながらビジネスを通して得られる情報を収集しており, これらを用いた経営指標の算出やデータの分析・示唆出し等を行っています。
このプロセスを実現するシステムとしてJINSでは Snowflakeとdbtを組み合わせたデータ分析基...]]></description><link>https://zenn.dev/jins/articles/eb3fa643dc4d43</link><guid isPermaLink="true">https://zenn.dev/jins/articles/eb3fa643dc4d43</guid><pubDate>Tue, 19 Nov 2024 07:14:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Dvbm4G2i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snowflake%252Bdbt%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nakashimn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlMjlhN2FiYWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:JINS%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS19iUzBmb0lGODctVHhvMzFjWDVVaDl4aEFVTVp0VW43ZmtudkVURk9qOXc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakashimn</dc:creator></item><item><title><![CDATA[【Python】docker＆Djangoでデータベースのセットアップを行う]]></title><description><![CDATA[
 開発環境：

windows 11
Vscode 1.87.2
Docker 26.1.1
Docker-compose 2.27.0
python
Django


 達成目標

DjangoアプリケーションとPostgreSQLを接続し、テーブルを作成することができる。


 前提

DjangoのマニュアルのWriting your first Django app, part 2に準ずる内容となっている。

https://docs.djangoproject.com/en/5.1/intro/tutorial02/

アプリケーションのトップページが表示されている状態から解...]]></description><link>https://zenn.dev/code_journey_ys/articles/50df0fe110baac</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/50df0fe110baac</guid><pubDate>Mon, 18 Nov 2024 14:41:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6A_N9bu5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591docker%25EF%25BC%2586Django%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Railsプロジェクトの新規作成からproductionモードでの起動までのまとめ(Docker Compose使用)]]></title><description><![CDATA[
 Railsプロジェクトの新規作成からproductionモードでの起動までのまとめ(Docker Compose使用)

 本記事で扱うバージョン



app
version




Ruby
3.3.6


Rails
7.2.2


MySQL
8.4.3




 特記事項
!

本記事では、実行するコマンドと処理結果、修正するファイルの一部を記載する
Docker、Docker Composeのインストールは実施済のものとする
作業環境のプロンプトは &gt; で表記する



 作業の流れ

仮のコンテナを作成する
コンテナ上でrails newを実行
再度コンテナを作成...]]></description><link>https://zenn.dev/1986_1115/articles/example-rails-project-on-docker</link><guid isPermaLink="true">https://zenn.dev/1986_1115/articles/example-rails-project-on-docker</guid><pubDate>Mon, 18 Nov 2024 10:02:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ruaSvwvD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rails%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E6%2596%25B0%25E8%25A6%258F%25E4%25BD%259C%25E6%2588%2590%25E3%2581%258B%25E3%2582%2589production%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E3%2581%25AE%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2528Docker%2520Compose%25E4%25BD%25BF%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mnr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvMS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mnr</dc:creator></item><item><title><![CDATA[Envoy入門（その３）Auth0 認証]]></title><description><![CDATA[
 はじめに
マイクロサービスやWeb API界隈では、サービス間のネットワークの制御をライブラリではなく、プロキシのコンテナをサイドカーとして使うのだとか。そのデファクトスタンダード的な立ち位置なのが Envoy さん。
（その１）と（その２）は、Envoy のドキュメントが参照している Sandbox のコードを見ながら動かすというスタイルでしたが、今回は、より本番に近い設定を目指して、Auth0 と Envoy を組み合わせていきます。

 やってみた

 環境構築

 Envoy
（その１）と（その２）は、Envoy さんのドキュメントの Sandbox のリポジトリを clon...]]></description><link>https://zenn.dev/robon/articles/08af35f4a3672b</link><guid isPermaLink="true">https://zenn.dev/robon/articles/08af35f4a3672b</guid><pubDate>Mon, 18 Nov 2024 00:05:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tEJ5uaOC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Envoy%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2588%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%25EF%25BC%2589Auth0%2520%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%258D%2592%25E6%259C%25A8%2520%25E5%25B2%25B3%25E5%25A4%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3NDIzMjE0NTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEROBON%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YUpBSVQ1V0NaaVBRUmF6TkswS1dFVkEybkRJMGdaN1lvMjdJdDIyQT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>荒木 岳夫</dc:creator></item><item><title><![CDATA[elasticsearchを実行しようとするとDockerが必要らしいのでインストールする]]></title><description><![CDATA[
 elasticsearchを実行しようとするとDockerが必要らしい

 やること
UbuntuにDocker-Desktopをインストールする

 実行環境
# cat /etc/os-release
PRETTY_NAME="Ubuntu 22.04.5 LTS"
NAME="Ubuntu"
VERSION_ID="22.04"
VERSION="22.04.5 LTS (Jammy Jellyfish)"
VERSION_CODENAME=jammy
ID=ubuntu
ID_LIKE=debian
HOME_URL="https://www.ubuntu.com/"
SUP...]]></description><link>https://zenn.dev/hamutarosan_dev/articles/22ec4c4716c491</link><guid isPermaLink="true">https://zenn.dev/hamutarosan_dev/articles/22ec4c4716c491</guid><pubDate>Sun, 17 Nov 2024 08:30:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C1iQwNTM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:elasticsearch%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8Docker%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Pamada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjMGMwNDY0OGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Pamada</dc:creator></item><item><title><![CDATA[【Python】CommandError: You must set settings.ALLOWED_HOSTS if DEBUG解決方法]]></title><description><![CDATA[
 開発環境：

windows 11
Vscode 1.87.2
Docker 26.1.1
Docker-compose 2.27.0
python
Django


 はじめに
Djangoでのアプリケーション開発中に出現したCommandError: You must set settings.ALLOWED_HOSTS if DEBUGの解決方法について以下にまとめている。

 １．settings.pyファイルの編集
# SECURITY WARNING: don't run with debug turned on in production!
import os

DEB...]]></description><link>https://zenn.dev/code_journey_ys/articles/c875eb92443963</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/c875eb92443963</guid><pubDate>Sun, 17 Nov 2024 06:17:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kL31sDKe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591CommandError%253A%2520You%2520must%2520set%2520settings.ALLOWED_HOSTS...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[DockerでPostgreに接続できなかった時に確認したこと]]></title><description><![CDATA[
 この記事について
Go + PostgreSQLの環境構築をDockerで行っていたところDBのコンテナへの接続で詰まってしまったため調査しました。

 エラー内容
goのコンテナ内でgo run main.goを実行しても以下のエラーが発生していました。
2024/11/16 08:00:09 dial tcp 127.0.0.1:5432: connect: connection refused
exit status 1

 前提
設定は以下の通りです。最低限の設定です。
docker-compose.yml
db:
    image: postgres:14.3
    c...]]></description><link>https://zenn.dev/h_h/articles/60a72edf492b00</link><guid isPermaLink="true">https://zenn.dev/h_h/articles/60a72edf492b00</guid><pubDate>Sat, 16 Nov 2024 14:00:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w6cy65Vr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Postgre%25E3%2581%25AB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AB%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2597%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:h_h%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0g1Wm42X2haa0phbnc1UTljMUwwV3JvOU5oUk9kOW1VYXBDc1ZXOVdockE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>h_h</dc:creator></item><item><title><![CDATA[Dockerイメージの uv not found エラー]]></title><description><![CDATA[
 uv not found
先日リリースされた uv 0.5.0 には破壊的な変更が含まれており，その一つが uv インストーラーの実行ファイル保存ディレクトリの変更です．従来の ~/.cargo/bin から ~/.local/bin に変更されました (uv リリースノート)．
この変更により，Dockerfile でインストーラーを使ってバージョンを指定せずに uv をインストールしている場合，ビルド時に Command 'uv' not found エラーが発生し，ビルドが失敗するようになりました．
問題となる Dockerfile の例:
RUN sh /uv-install...]]></description><link>https://zenn.dev/ikumasudo/articles/72e42c842a67a8</link><guid isPermaLink="true">https://zenn.dev/ikumasudo/articles/72e42c842a67a8</guid><pubDate>Sat, 16 Nov 2024 02:54:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jFrB6Rgc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%2520uv%2520not%2520found%2520%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ikuma%2520Sudo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXMxRnpKeFc3NkI5TjdobGM2UHM1TllrNEpMUl8zTDVpd2JRRm9meTV2bHZRZjNqT2g9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ikuma Sudo</dc:creator></item><item><title><![CDATA[AWS×OSSツールで実現するDocker向けDevSecOpsパイプライン]]></title><description><![CDATA[
 導入

 背景・目的

コンテナセキュリティを検討する際、NISTが発行した信頼性の高いガイドラインである、NIST SP800-190を活用することは非常に有効です。
その中で触れられているコンテナイメージへのセキュリティリスク対策について、Trivy, Dockle, Cosign 等のOSSツールの採用も有力な選択肢になります。
まずは、NIST SP800-190やこれらのツールの概要を解説し、その後、AWSとOSSツールを組み合わせたDocker向けDevSecOpsパイプラインの実装方法や、CDKサンプルコードについて詳しく解説します。


 対象読者

AWS Cert...]]></description><link>https://zenn.dev/acntechjp/articles/657f28411804aa</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/657f28411804aa</guid><pubDate>Fri, 15 Nov 2024 11:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zzUVBKEH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%25C3%2597OSS%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BDocker%25E5%2590%2591%25E3%2581%2591DevSecOps%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazuyaasawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUtuS3RRalEzUU9BUm1jRjY1Z2RhdVd0d2JsczVGbUtYMHRhTkpCd1R2LU1Jb2ZnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuyaasawa</dc:creator></item><item><title><![CDATA[[Playwright]をdockerで動かす際のlocale設定について]]></title><description><![CDATA[Docker を使ってコンテナで動かしていた Playwright でスクリーンショットを撮影した際に、input の placeholder が yyyy/mm/dd になっていました。

playwright の locale を日本語にするために、playwright.config.tsで以下の設定をしましたが、解決しませんでした。
 use: {
  ...
    locale: "ja-JP",
  },

 環境
Dockerfile は以下のようにしていました。
FROM mcr.microsoft.com/playwright:v1.43.0-jammy
WORKDIR...]]></description><link>https://zenn.dev/tyyy/articles/playwright-locale</link><guid isPermaLink="true">https://zenn.dev/tyyy/articles/playwright-locale</guid><pubDate>Fri, 15 Nov 2024 06:25:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pn4PkNyW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPlaywright%255D%25E3%2582%2592docker%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E9%259A%259B%25E3%2581%25AElocale%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mycom%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ZjE1MGI3NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mycom</dc:creator></item><item><title><![CDATA[M1以降(M2,M3)MacからビルドしたDockerイメージをECSやAppRunnerで動かすときのメモ]]></title><description><![CDATA[毎回M1MacでビルドしたDockerイメージからコンテナで動かそうとした時に躓くのでメモ。
M1 Mac環境ではdocker buildするとデフォルトでARMのイメージが作成される。
ECSはARM64とX86_64が選択できるのでまだ良いが、AppRunnerはARM64をサポートしていないので、デフォルトのままではエラーとなる。
ちなみにCahtGPTに聞いてみた。

 x86_64
•	概要: x86_64は、64ビットの拡張命令セットを持つx86アーキテクチャです。x86アーキテクチャの拡張版として、より大きなメモリ空間とより多くのレジスタをサポートしています。
•	開発元:...]]></description><link>https://zenn.dev/akira__0924/articles/qiita-20240728-9f394d2c96c7a88b4630</link><guid isPermaLink="true">https://zenn.dev/akira__0924/articles/qiita-20240728-9f394d2c96c7a88b4630</guid><pubDate>Fri, 15 Nov 2024 05:26:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2WEOHvFo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:M1%25E4%25BB%25A5%25E9%2599%258D%2528M2%252CM3%2529Mac%25E3%2581%258B%25E3%2582%2589%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%259FDocker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592ECS%25E3%2582%2584AppRunner%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B0%25B4%25E5%25B3%25B6%2520%25E3%2582%25A2%25E3%2582%25AD%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTkxY1czdnVSRzJwelpoWWRBV0lmajVqdEYxdS1qYkxabUlFcFIyQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>水島 アキラ</dc:creator></item><item><title><![CDATA[ローカル環境のDockerがDocker Build Cloudで高速になるか？]]></title><description><![CDATA[Dockerはお好きですか？
Docker社が2024年に発表したDocker Build Cloudですが、今まで使ってなかったので使ってみたいなと思います。
時間課金なので、CIに組み込むとお金が溶けそうなので、プランに含まれる中でなんとか完結させるためにローカルの環境構築だけに利用していこうかなと思っています。

 ⁠アカウント準備
Docker Hubのアカウントを持っているだけでは使えないようです。
Dockerの管理者から、Build Cloudを使えるようにしてもらいましょう
https://app.docker.com/build/
招待してもらえばそれで準備完了です。
...]]></description><link>https://zenn.dev/gessy0129/articles/0320b7261f99e3</link><guid isPermaLink="true">https://zenn.dev/gessy0129/articles/0320b7261f99e3</guid><pubDate>Thu, 14 Nov 2024 09:14:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zuSJSsVn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEDocker%25E3%2581%258CDocker%2520Build%2520Cloud%25E3%2581%25A7%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:gessy0129%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMzkyYTAyZTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gessy0129</dc:creator></item><item><title><![CDATA[AtCoderのPython環境をDockerで構築]]></title><description><![CDATA[
 はじめに
LAPRASというサービスに登録した。Qiita, Zennなどの外部サービスとの連携機能があり、これまで登録してきたサービスを紐づけている。
連携サービスのなかにAtCoderがあった。昔やっていたがアカウントを消してしまったので、再度作り直すことに。アカウント消さなければ良かった…
改めて環境を構築したので備忘録として記載する。

 AtCoderのページ
本家と過去問

https://atcoder.jp
https://kenkoooo.com/atcoder/#/table/


 環境構築

 使用ライブラリ

https://github.com/onlin...]]></description><link>https://zenn.dev/hocitron/articles/c764e7265991b7</link><guid isPermaLink="true">https://zenn.dev/hocitron/articles/c764e7265991b7</guid><pubDate>Thu, 14 Nov 2024 06:50:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7gZo7mbS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E3%2581%25AEPython%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hocitron%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxMjlkMjBlZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hocitron</dc:creator></item></channel></rss>