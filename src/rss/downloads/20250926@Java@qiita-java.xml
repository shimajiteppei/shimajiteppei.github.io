<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-09-26T16:03:36+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2085178</id>
    <published>2025-09-26T16:03:36+09:00</published>
    <updated>2025-09-26T16:03:36+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/seinichi/items/337dfa98661ec86fb8a8"/>
    <url>https://qiita.com/seinichi/items/337dfa98661ec86fb8a8</url>
    <title>Spring ReflectionUtils.findMethod徹底解説：IDEの警告と実際の挙動</title>
    <content type="text">はじめに
Java でリフレクションを使うとき、Class#getMethod や Class#getDeclaredMethod を直接呼ぶのが一般的です。
しかし、この書き方は例外処理やアクセス制御の対応が必要で、コードが煩雑になりがち。
Spring Framewo...</content>
    <author>
      <name>seinichi</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2085104</id>
    <published>2025-09-26T12:57:32+09:00</published>
    <updated>2025-09-26T12:57:32+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hitomin_poke/items/bf3385e1e8439255409d"/>
    <url>https://qiita.com/hitomin_poke/items/bf3385e1e8439255409d</url>
    <title>【ポケモン×Java】知識編 配列#2 〜配列を完全攻略！ -for文と拡張forと配列-～</title>
    <content type="text">はじめに
前回の記事（配列#1 基礎編）では、配列を「データを並べる棚」として紹介したよ。
でも、棚に並べただけじゃ使いこなせない。大事なのは、順番に取り出して使うこと！
そこで今回は「ループ」と「配列」を組み合わせる練習をしていこう。
これができれば、点数の合計や最大値...</content>
    <author>
      <name>hitomin_poke</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2085091</id>
    <published>2025-09-26T12:07:53+09:00</published>
    <updated>2025-09-26T12:15:51+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yun_bow/items/3cac8534a3a43e5d74b8"/>
    <url>https://qiita.com/yun_bow/items/3cac8534a3a43e5d74b8</url>
    <title>【2025年決定版】「Javaではもう厳しい」は本当か？Kotlin vs Java、Android開発言語の「今」と「未来」を徹底比較！</title>
    <content type="text">✨はじめに
こんにちは！Androidエンジニアの皆さん、お疲れ様です。
Android開発を長年やってきて思うのですが、KotlinとJavaの選択って本当に悩ましいですよね。私自身、Javaから始めてKotlinに移行した経験があるのですが、2019年にGoogleが...</content>
    <author>
      <name>yun_bow</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2085088</id>
    <published>2025-09-26T11:58:56+09:00</published>
    <updated>2025-09-26T11:59:59+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/moonlightbox/items/0f26dcd3f33d08def2a8"/>
    <url>https://qiita.com/moonlightbox/items/0f26dcd3f33d08def2a8</url>
    <title>軟體架構 - Helper 物件常用替代命名</title>
    <content type="text">替代名稱
適用情境
範例
常見放置位置

Validator
驗證領域規則（domain invariants）、輸入資料檢查

OrderValidator 驗證訂單是否可建立

Domain Layer（domain/service 或 domain/val...</content>
    <author>
      <name>moonlightbox</name>
    </author>
  </entry>
</feed>
