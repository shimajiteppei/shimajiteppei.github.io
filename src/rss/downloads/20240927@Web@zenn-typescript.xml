<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 27 Sep 2024 02:44:47 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[続・URLシェアを支える技術 CompressionStream]]></title><description><![CDATA[以前TypeScript PlaygroundやReact Compiler PlaygroundがURLシェア時のソースコードの圧縮に使用している、lz-stringというライブラリを紹介しました。
https://zenn.dev/chot/articles/what-is-lz-string
すると、jser.infoで有名なazuさんから次のような反応をいただきました。
https://x.com/azu_re/status/1832249554517029209
確かに！
しかし、CompressionStreamは文字列から圧縮済み文字列を返す単純なAPIではないため、lz-...]]></description><link>https://zenn.dev/chot/articles/lz-string-vs-compression-stream</link><guid isPermaLink="true">https://zenn.dev/chot/articles/lz-string-vs-compression-stream</guid><pubDate>Fri, 27 Sep 2024 02:40:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZOr9kPee--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B6%259A%25E3%2583%25BBURL%25E3%2582%25B7%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2520CompressionStream%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2599%25E3%2581%25A6%25E3%2581%2583%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzMTEyZmJmM2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すてぃん</dc:creator></item><item><title><![CDATA[Vue.jsの v-model 正しく活用できていますか？]]></title><description><![CDATA[
 はじめに
こんにちは、からころです。
今回は、Vue.js でよく利用される v-model の記事について保守性などの観点から書いていこうと思います。想定している読者としては、Vue.js を触ったこと、見たことがある方全般です。v-model は利用方法を誤ると痛手を負いがちですが、非常に強力な味方だよということをお伝えできればと思います。また、Vue.js のバージョンは、記事執筆時点で最新の 3.5.8 を想定しています。

 v-model とは
さて、v-model とはなんでしょうか？公式ドキュメントには、

コンポーネント上で v-model を使用すると双方向バイン...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/7ad7338080482f</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/7ad7338080482f</guid><pubDate>Fri, 27 Sep 2024 00:29:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sKW1oUMD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue.js%25E3%2581%25AE%2520v-model%2520%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%258F%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2582%2589%25E3%2581%2593%25E3%2582%258D%2520%252F%2520karacoro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNmQwMjRkZGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>からころ / karacoro</dc:creator></item><item><title><![CDATA[TypeScriptで日付文字列をどう扱うか]]></title><description><![CDATA[この記事では、フロントエンドで日付文字列を安全に扱い、運用しやすいアプリケーションを構築する方法について解説します。
この記事のサンプルコードにはReactを使用しますが、他の技術でも応用できると思います。
またZodとOpenAPI Generatorを使った実装方法については、以下の記事で詳しく解説していますのでぜひご覧ください。
https://tech.up-sider.com/entry/2024/09/26/091528

 要約

様々な日付文字列がstring型で定義されていると、区別がつかず扱いづらい
一部のコンポーネントで日付をDate型で扱うことで表示不正を防ぐこと...]]></description><link>https://zenn.dev/052hide/articles/typescript-date-string</link><guid isPermaLink="true">https://zenn.dev/052hide/articles/typescript-date-string</guid><pubDate>Fri, 27 Sep 2024 00:06:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DTmlzrD1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E6%2597%25A5%25E4%25BB%2598%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E3%2581%25A9%25E3%2581%2586%25E6%2589%25B1%25E3%2581%2586%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidetoshi%2520Ota%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IxZWY4MWQxNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hidetoshi Ota</dc:creator></item><item><title><![CDATA[[TypeScript]取得したプロパティ名とは別の名前（変数)として値を取得する値を取得する方法]]></title><description><![CDATA[
 はじめに
分割代入は、オブジェクトや配列の要素を簡単に取り出すために使われる便利な機能です。TypeScriptでは、分割代入を使ってオブジェクトのプロパティを取り出す際に、そのプロパティ名とは別の名前の変数として、そのプロパティ名の値を取得することができます。この記事では、その具体的な使い方を解説していきます。

 1. 基本的なオブジェクトの分割代入
まず、基本的な分割代入について説明します。以下の例では、fruitとageというプロパティを持つオブジェクトobjを分割代入で取り出しています。
const obj = { fruit: "apple", age: 18, flag...]]></description><link>https://zenn.dev/kingdom0927/articles/9ef33481394c10</link><guid isPermaLink="true">https://zenn.dev/kingdom0927/articles/9ef33481394c10</guid><pubDate>Thu, 26 Sep 2024 09:44:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XzTpF_w1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E5%2590%258D%25E3%2581%25A8%25E3%2581%25AF%25E5%2588%25A5%25E3%2581%25AE%25E5%2590%258D%25E5%2589%258D%25EF%25BC%2588%25E5%25A4%2589%25E6%2595%25B0%2529%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%2580%25A4%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E5%2580%25A4%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:parapone1005%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZWZlYWI5M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>parapone1005</dc:creator></item><item><title><![CDATA[PandaCSSのConfig Recipeでスタイル管理する]]></title><description><![CDATA[
 モチベーション
Figma にあるデザインを忠実に再現し、かつ効果的にスタイルを管理したいですよね。
例えば Badge のコンポーネントがあるとします。

https://www.pandamastery.com
status と kind という2つのパラメータがあり、合計8種類のスタイルがあります。
export type Status = 'neutral' | 'info' | 'success' | 'error'
export type Kind = 'solid' | 'outline'
React + CSS Modules で素直に作るのであれば次のように実装しま...]]></description><link>https://zenn.dev/blueteam/articles/928ee7779bb189</link><guid isPermaLink="true">https://zenn.dev/blueteam/articles/928ee7779bb189</guid><pubDate>Thu, 26 Sep 2024 04:40:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WWw130_M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PandaCSS%25E3%2581%25AEConfig%2520Recipe%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:-%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1ZGMxMzExODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEblue%2520TechBlog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwYjdiZGViMGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>-</dc:creator></item><item><title><![CDATA[new Array()]]></title><description><![CDATA[new Array()の記載に慣れないので復習するためメモ。
==記載例==
let newArray: string[] = new Array(s.length);
=略
は配列を初期化する際の一つの定型的な書き方となる。
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Array/Array

 説明:


new Array() は新しい配列を作成するためのJavaScriptの構文です。

s.length は文字列 s の長さを表し、その長さの空の配列を作成します。
例...]]></description><link>https://zenn.dev/milbon/articles/f5ebf76e3b86dd</link><guid isPermaLink="true">https://zenn.dev/milbon/articles/f5ebf76e3b86dd</guid><pubDate>Thu, 26 Sep 2024 02:17:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IeQCEK45--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:new%2520Array%2528%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:milbon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMjg1Mjc4ZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>milbon</dc:creator></item><item><title><![CDATA[ReactとGraphql(hygraph)でcodegenでAPIの型生成]]></title><description><![CDATA[
 はじめに
久々にReactとGraphQLを触ったのでGraphQLとかの記憶がかなりなくなっていたのでまとめておきます。
以下環境です。



ライブラリ
バージョン




react
18.3.1


typescript
4.9.5


@apollo/client
3.11.8



またGraphQLCMSにはhygraphを使用しております。
理由としては一番オーソドックスかなと思ったためでです。
ビルドツールにはviteではなく、webpackで対応しました。
理由としては転職先がそうなので。

 reactのプロジェクト作成
公式にもある通り以下のように--temp...]]></description><link>https://zenn.dev/tmo_taka/articles/cd73d004856c94</link><guid isPermaLink="true">https://zenn.dev/tmo_taka/articles/cd73d004856c94</guid><pubDate>Thu, 26 Sep 2024 01:32:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9qmhU8uf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8Graphql%2528hygraph%2529%25E3%2581%25A7codegen%25E3%2581%25A7API%25E3%2581%25AE%25E5%259E%258B%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tmo-taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ODU2NDc0M2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tmo-taka</dc:creator></item><item><title><![CDATA[Fedify 1.0.0のリリース]]></title><description><![CDATA[ActivityPubフレームワークのFedifyがついに最初の正式バージョン1.0.0をリリースしました！

 Fedifyとは？
FedifyはActivityPubプロトコルをベースにした連合型（federated）サーバーアプリケーションを簡単に作成できるようにするTypeScriptライブラリです。ActivityPubはソーシャルネットワーキングサービスが相互に通信できるようにするオープンな標準プロトコルで、これを通じて様々なサービス間でユーザーが互いにコミュニケーションを取れる分散型ソーシャルネットワークであるフェディバース（fediverse）を構成します。
Fedify...]]></description><link>https://zenn.dev/hongminhee/articles/c913bbf8030412</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/c913bbf8030412</guid><pubDate>Thu, 26 Sep 2024 00:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zAK7fFJV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Fedify%25201.0.0%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[ClerkのReact Componentが便利すぎるので覗いてみる]]></title><description><![CDATA[今回は認証・認可サービスであるClerkのSDKについて解説をします。Clerkといえば基本的な認証・認可機能はもちろんのこと提供されているReact Componentを配置するだけで認証フローが完結する特徴があります。

https://clerk.com/
しかし、React Componentを配置するだけで認証が完結するというのはあまりにも簡単でブラックボックス化しているため、内部の実装を確認してその詳細を見ていきたいと思います。

 はじめに
本記事ではClerkの提供するSDKに着目して解説をするため、具体的なClerkの使用方法や個別の認証方法については触れません。
また...]]></description><link>https://zenn.dev/aishift/articles/58d5958c97ab51</link><guid isPermaLink="true">https://zenn.dev/aishift/articles/58d5958c97ab51</guid><pubDate>Thu, 26 Sep 2024 00:13:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RWkEyI6c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Clerk%25E3%2581%25AEReact%2520Component%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%2599%25E3%2581%258E%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25A7%25E8%25A6%2597%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ytaisei%25EF%25BC%2588%25E3%2581%259F%25E3%2581%2584%25E3%2581%259B%25E3%2583%25BC%25EF%25BC%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNDQwNmNlMGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AI%2520Shift%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTZlNDI3NWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ytaisei（たいせー）</dc:creator></item><item><title><![CDATA[コードレビューの時に気にしている、べからずTierリスト]]></title><description><![CDATA[こんにちは！アルダグラムのKANNAの開発お手伝いをさせて頂いているoubakiouです。
KANNAでは主にバックエンドにRails+graphql-rubyやKotlin+DGS、WebフロントエンドにTypeScriptとReactを採用していて、私が参加するチームでの仕事もそれらを触る事が多いのですが今回はそこでコードレビューをする際に気にしている「べからず」をティア別に見ていきましょう。


 特に理由なくlintを無視してはいけない

アルダグラムでは利用エディタの規定や制限はありませんが、Webフロントエンド開発で一番利用者が多いのはVSCodeでextensions.js...]]></description><link>https://zenn.dev/aldagram_tech/articles/0f9d6a53d8258b</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/0f9d6a53d8258b</guid><pubDate>Wed, 25 Sep 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mWPamb4f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%25AE%25E6%2599%2582%25E3%2581%25AB%25E6%25B0%2597%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2580%2581%25E3%2581%25B9%25E3%2581%258B%25E3%2582%2589%25E3%2581%259ATier%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:oubakiou%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3ZWMzYzAwNzkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>oubakiou</dc:creator></item><item><title><![CDATA[Wasm(Go) + TypeScript + React アプリ入門]]></title><description><![CDATA[GoでCLIツールを作成した際、ブラウザでも利用できるようにしたくなったため、ロジック部分をWasmとして再利用する方法を検討しました。GoをWasmにビルドして、ブラウザで使ったこと自体はあったのですが、TypeScriptやReactと組み合わせて使ったのは初めてだったので、その結果を記事に残しておきます。
https://github.com/xuri/excelize-wasm
を参考にしました。

 成果物
https://github.com/hamao0820/wasm-react
https://wasm-react.vercel.app/

 Wasm(Go)
まずWa...]]></description><link>https://zenn.dev/kurusugawa/articles/ea5375203c7008</link><guid isPermaLink="true">https://zenn.dev/kurusugawa/articles/ea5375203c7008</guid><pubDate>Wed, 25 Sep 2024 11:23:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c6bmsRS7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wasm%2528Go%2529%2520%252B%2520TypeScript%2520%252B%2520React%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hamao%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzNGEwOWE5YzYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%259D%25A5%25E6%25A0%2596%25E5%25B7%259D%25E9%259B%25BB%25E7%25AE%2597%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MGMyYzE1MmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hamao</dc:creator></item><item><title><![CDATA[kubernetes-models-tsを使ってKubernetes CRDの型定義を生成し、GitHub Packagesで共有する方法]]></title><description><![CDATA[
 はじめに
Kubernetesの世界では、カスタムリソース定義（CRD）を使用して、独自のリソースタイプを定義することができます。これらのCRDを TypeScript で扱う際に便利なツールとして、kubernetes-models-tsがあります。本記事では、kubernetes-models-tsを使用してKubernetesリソースの型定義を生成し、それをGitHub Packagesに公開する方法について説明します。

 前提条件

Node.jsとpnpmがインストールされていること
GitHubアカウントを持っていること
GitHub Personal Access T...]]></description><link>https://zenn.dev/zimagen/articles/1c2a67cc83434a</link><guid isPermaLink="true">https://zenn.dev/zimagen/articles/1c2a67cc83434a</guid><pubDate>Wed, 25 Sep 2024 08:05:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--be0F65sd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kubernetes-models-ts%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Kubernetes%2520CRD%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2580%2581GitHub%2520Pac...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zimagen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwZWNlMmU5NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zimagen</dc:creator></item><item><title><![CDATA[#66　アシスタントに画像の認識の機能を実装してみる]]></title><description><![CDATA[
 概要
以前の記事でDiscord上でOpenAIのAPIを使ってアシスタントを作成しました
今回の記事では、アシスタントに画像の認識の機能を実装してみます

 Discordで送信された画像のURLを受け取る

 実装
Discordではメッセージに複数のファイルを添付することができます
複数の添付ファイルを取得し、画像ファイルの判定を行うコードを書いてみます
ここでのポイントは以下の3点です

message.attachments が添付ファイルになります
attachment.contentType にファイルタイプ(MINEタイプ)が格納されています
attachment.u...]]></description><link>https://zenn.dev/nxted_sapporo/articles/3cbad1b4ab5c4a</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/3cbad1b4ab5c4a</guid><pubDate>Wed, 25 Sep 2024 04:22:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p4pFbt2g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252366%25E3%2580%2580%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%25AE%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[Valibot の v0.31.0 への Migration 対応をした。]]></title><description><![CDATA[まだまだ Zod を採用しているプロダクトが多い。

が、
Finswer では、Schema Validation ライブラリに Zod ではなく、Valibot を採用している。
https://github.com/fabian-hiller/valibot
!
本記事で話すこと

Migration Command で対応してくれるところ
手動で対応しなければならないところ


!
話さないこと

Valibot の説明
Valibot の採用理由



 Migration to 0.31.0
https://valibot.dev/guides/migrate-to-v0.3...]]></description><link>https://zenn.dev/yanskun/articles/valibot-migrate-to-031</link><guid isPermaLink="true">https://zenn.dev/yanskun/articles/valibot-migrate-to-031</guid><pubDate>Wed, 25 Sep 2024 01:18:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RiKClJ_z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Valibot%2520%25E3%2581%25AE%2520v0.31.0%2520%25E3%2581%25B8%25E3%2581%25AE%2520Migration%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yanskun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Y2I3NTU5ODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yanskun</dc:creator></item><item><title><![CDATA[AIキメラとの会話トレーニングアプリ 『キメ友』をQiitaハッカソンで作った話]]></title><description><![CDATA[こんにちは、Webエンジニアのまさぴょんです！
今回は、Qiitaハッカソン2024の予選で、AIキメラとの会話トレーニングアプリ 『キメ友』を作ったので、ご紹介します🐱

!
実は私、第１回Qiitaハッカソンにも1人で参加していましたが、予選敗退でした・・・😭
前回のQiitaハッカソン(2024/2/10〜2/11)から、はや7ヶ月近く経過して新たにチームメンバーも加えてのリベンジ・マッチです！

前回作成した作品の紹介記事は、こちらです👀🌟
https://zenn.dev/aiq_dev/articles/89bc61e8bd7d34

 Qiitaハッカソン2024 予選会の...]]></description><link>https://zenn.dev/manase/articles/a97158b745b030</link><guid isPermaLink="true">https://zenn.dev/manase/articles/a97158b745b030</guid><pubDate>Tue, 24 Sep 2024 14:52:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TFzL5ba3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%25AD%25E3%2583%25A1%25E3%2583%25A9%25E3%2581%25A8%25E3%2581%25AE%25E4%25BC%259A%25E8%25A9%25B1%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2580%258E%25E3%2582%25AD%25E3%2583%25A1%25E5%258F%258B%25E3%2580%258F%25E3%2582%2592Qiita%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AB%25E3%2582%25BD%25E3%2583%25B3%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwMmM5YTlmMGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まさぴょん</dc:creator></item><item><title><![CDATA[個人的にReact Hook Formで気をつけていること]]></title><description><![CDATA[
 はじめに
React Hook Formの特徴や個人的に気をつけていることをまとめました💫

 React Hook Formの特徴

レンダリング回数を減らすことができる
バンドルサイズの軽減が可能


 レンダリングについて
通常のReactでは、stateで値を管理し、stateを更新（setState）するたびに再レンダリングが発生します。
一方、React Hook Formでは、値の管理にstateではなくrefを使用するため、再レンダリングを抑制できます。
この仕組みにより、フォーム操作時に不要な再レンダリングを減らすことが可能です。
詳細は公式ドキュメントにも記載され...]]></description><link>https://zenn.dev/kiman/articles/e9ded457ead731</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/e9ded457ead731</guid><pubDate>Tue, 24 Sep 2024 14:01:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m9E7gY8G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25ABReact%2520Hook%2520Form%25E3%2581%25A7%25E6%25B0%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[【React】state構造の原則をおさらいしてstateの使い方を反省する]]></title><description><![CDATA[
 概要
「このstateいる？」や「このstate更新しずら！」と感じる場面は多々あると思います。
いくつstateを使うのか、データ構造をどのようにするのかについて言語化が難しく、もっと考えてstateを使わなければといけないと感じたため、今一度、原点に立ち返りつつ、state構造の原則をおさらいして反省したいと思います。

 state構造の原則
state構造の原則については公式から5つの原則が設けられており、これらの原則の背景にはミスを入りこませずにstateを容易に更新できるようにすることが目的となっている。
最適とはいえないstate構造でも動くコードを作ることは可能ではあ...]]></description><link>https://zenn.dev/reds/articles/8e321a942e4934</link><guid isPermaLink="true">https://zenn.dev/reds/articles/8e321a942e4934</guid><pubDate>Tue, 24 Sep 2024 12:44:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AAPfYXLZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591state%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25E3%2582%2592%25E3%2581%258A%25E3%2581%2595%25E3%2582%2589%25E3%2581%2584%25E3%2581%2597%25E3%2581%25A6state%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2592%25E5%258F%258D%25E7%259C%2581%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%258A%25E3%2581%2598%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OWM4YzQwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーとおじさん</dc:creator></item><item><title><![CDATA[useSyncExternalStoreを使った音声状態管理]]></title><description><![CDATA[Reactアプリケーションで音声の再生状態を管理する際、どのような方法を使っていますか？useState や useEffect を用いて状態を管理することが多いかもしれません。しかし、これらの方法では状態が不安定になったり、管理が複雑になったりすることがあります。
この記事では、音声状態管理のいくつかのアプローチを紹介し、最終的にuseSyncExternalStore を使った最も信頼性の高い方法を提案します。

 useSyncExternalStore とは？
 useSyncExternalStore は、React 18で導入されたフックで、外部ストアの状態をReactコンポ...]]></description><link>https://zenn.dev/ryomaejii/articles/81ba8b58f7b95d</link><guid isPermaLink="true">https://zenn.dev/ryomaejii/articles/81ba8b58f7b95d</guid><pubDate>Tue, 24 Sep 2024 08:14:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OhINhhPT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useSyncExternalStore%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%259F%25B3%25E5%25A3%25B0%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryomaejii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzZTkxNGFjMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryomaejii</dc:creator></item><item><title><![CDATA[LogTape 0.6.0のリリース：何が変わったのか？]]></title><description><![CDATA[JavaScript及びTypeScript用のゼロ依存構造化ロギングライブラリであるLogTapeがv0.6.0をリリースしました。何が変わったのでしょうか？

 親ロガーのシンクをオーバーライド可能に
LogTapeの特徴の一つは、階層的カテゴリを通じたシンクの継承です。例えば、以下のように2つのロガーを設定した場合：
import { configure, getConsoleSink, getFileSink } from "@logtape/logtape";

await configure({
  sinks: {
    console: getConsoleSink()...]]></description><link>https://zenn.dev/hongminhee/articles/f9310365580c10</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/f9310365580c10</guid><pubDate>Tue, 24 Sep 2024 07:49:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qqxDjbhm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LogTape%25200.6.0%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E4%25BD%2595%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[(React)コンテナー・プレゼンテーションパターンの設計を完全に理解した]]></title><description><![CDATA[
 概要
業務委託で4社以上経験がありますが、だいたいどこの現場でも、フロントエンドの設計は、「雰囲気で運用している」ことが多かったです。
なので、今回はコンテナープレゼンテーションパターンについて、本気出して考えてみました！
Reactの設計についてはこの動画がよかったです！
コンテナープレゼンテーションパターンは、この記事が一番しっくりきました。
https://zenn.dev/morinokami/books/learning-patterns-1/viewer/presentational-container-pattern#コンテナ・プレゼンテーションパターン

React ...]]></description><link>https://zenn.dev/rsugi/articles/1c200186e3a0e3</link><guid isPermaLink="true">https://zenn.dev/rsugi/articles/1c200186e3a0e3</guid><pubDate>Tue, 24 Sep 2024 05:55:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y8KrWt97--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528React%2529%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25BC%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:r-sugi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0YTAwZTQ1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>r-sugi</dc:creator></item></channel></rss>