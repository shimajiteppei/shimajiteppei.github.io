<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/shellscript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/shellscript/feed"/>
  <title>ShellScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでShellScriptタグが付けられた新着記事</description>
  <updated>2025-08-02T13:19:02+09:00</updated>
  <link>https://qiita.com/tags/shellscript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2061700</id>
    <published>2025-08-02T13:19:02+09:00</published>
    <updated>2025-08-02T13:22:37+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/XYZXYZXYZ/items/e641b5848f25fd99ce77"/>
    <url>https://qiita.com/XYZXYZXYZ/items/e641b5848f25fd99ce77</url>
    <title>csvファイルを作成しよう</title>
    <content type="text">csvファイル作成

リクエストログを処理する場合をイメージ
FILE_NAME=$1
GOOD_NUM=""
BAD_NUM=""

for year in $(cat year.txt)
do
  for find_word in $(cat find_word.tx...</content>
    <author>
      <name>XYZXYZXYZ</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2061491</id>
    <published>2025-08-01T22:23:21+09:00</published>
    <updated>2025-08-01T22:23:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Ryo-0131/items/1b6e506cf3cba3d7374c"/>
    <url>https://qiita.com/Ryo-0131/items/1b6e506cf3cba3d7374c</url>
    <title>【AWS】CLIのページャー（ページ分割）を無効にする方法</title>
    <content type="text">概要
AWS CLIを使ったスクリプトを動かしていたら、以下のようにページ分割（pager）が効いてしまっていました。
// 省略
 　　　}
    ]
　}
}
(END) //何かキーを押さないと進まない

これがあると次のプロンプト（例えばecho）の結果を見るた...</content>
    <author>
      <name>Ryo-0131</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2060567</id>
    <published>2025-07-30T18:39:55+09:00</published>
    <updated>2025-07-30T18:39:55+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hajikoma/items/f6c5cea781bece30787f"/>
    <url>https://qiita.com/hajikoma/items/f6c5cea781bece30787f</url>
    <title>AWS本番環境をTerraform化してみた：第二回 リソースのインポート-ネットワーク、IAM編 [レベル：★★☆]</title>
    <content type="text">AWS本番環境をTerraform化してみた：第二回 リソースのインポート-ネットワーク、IAM編

連載について

第一回： インポート戦略編
第二回： リソースのインポート-ネットワーク、IAM編＜このページ＞
第三回： Terraform環境別設定管理術※執筆中...</content>
    <author>
      <name>hajikoma</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2060481</id>
    <published>2025-07-30T15:11:03+09:00</published>
    <updated>2025-07-30T15:11:03+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/arufian/items/49f1a53d95ef89aabd17"/>
    <url>https://qiita.com/arufian/items/49f1a53d95ef89aabd17</url>
    <title>複数のPDFからキーワードを検索するシェルスクリプトを作成してみた</title>
    <content type="text">背景
日々の業務や技術調査の中で、複数のPDF資料を扱う場面はよくあります。
「この資料の中に特定のキーワードが含まれているか一括で調べたい」と思ったとき、PDFビューアで1つずつ開いて検索するのは正直手間です。
そこで、コマンドラインで複数のPDFから簡単にキーワードを...</content>
    <author>
      <name>arufian</name>
    </author>
  </entry>
</feed>
