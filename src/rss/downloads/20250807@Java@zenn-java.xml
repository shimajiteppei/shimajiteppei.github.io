<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 07 Aug 2025 12:05:08 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[マルチスレッドの基本<中編＞[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
Java SE11 Gold試験を勉強中の方
JavaのExecutorフレームワークの概要と主要APIついて知りたい方


 目次
1.スレッドプール
2.ExecutorServic...]]></description><link>https://zenn.dev/wakinoza/articles/ba437456e44bec</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/ba437456e44bec</guid><pubDate>Wed, 06 Aug 2025 07:48:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DjCZJGsH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%253C%25E4%25B8%25AD%25E7%25B7%25A8%25EF%25BC%259E%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[[Java]Scannerクラス とは （備忘録）]]></title><description><![CDATA[
 １．はじめに
ユーザーがキーボードで入力した内容や、ファイルの内容を読み取る際に使用します。
・Scannerクラスは、java.utilパッケージに配下に属しています。
　使用する場合は、パッケージをimportする必要があります。

Scannerクラスの使用方法
import java.util.Scanner;

// Scannerインスタンス（オブジェクト）作成
Scanner scanner = new Scanner(System.in);

!
重要：
Scanner クラスを利用する際は、インスタンス（オブジェクト）を作成します。
キーボードからの入力内容を受け付...]]></description><link>https://zenn.dev/yama_kawa/articles/1a09979431eb0c</link><guid isPermaLink="true">https://zenn.dev/yama_kawa/articles/1a09979431eb0c</guid><pubDate>Tue, 05 Aug 2025 11:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FH45Wawb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJava%255DScanner%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2581%25A8%25E3%2581%25AF%2520%25EF%25BC%2588%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A9%25E3%2582%25B6%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2591%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MzVlNmE1NWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ラザニアパンサー</dc:creator></item><item><title><![CDATA[JetBrains 2025.2ぞくぞくリリース！AI Assistantと価格改定まとめ]]></title><description><![CDATA[
 はじめに
こんにちは。JetBrains公式代理店NATTOSYSTEMのねばねばです。
みなさん、Jetbrains各種製品の2025.2バージョンが猛暑をふきとばす勢いでぞくぞくリリースされています。
今回はJetBrainsが2025年8月に発表したAI Assistant 2025.2新機能と、各種IDE製品の2025.2リリース情報、価格改定のニュースについて紹介いたします。


 JetBrains AI Assistant 2025.2の注目ポイント

 ✅ プロジェクトルールでAIにプロジェクト固有の指示を出せる
プロジェクトごとの命名規則やコーディングスタイルを設定...]]></description><link>https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</link><guid isPermaLink="true">https://zenn.dev/nattosystem_jp/articles/ce9856d5f585d6</guid><pubDate>Tue, 05 Aug 2025 07:32:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4q0-u19--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JetBrains%25202025.2%25E3%2581%259E%25E3%2581%258F%25E3%2581%259E%25E3%2581%258F%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%2581AI%2520Assistant%25E3%2581%25A8%25E4%25BE%25A1%25E6%25A0%25BC%25E6%2594%25B9%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AD%25E3%2581%25B0%25E3%2581%25AD%25E3%2581%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiYWQxMDhjNTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BENATTOSYSTEM%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねばねば</dc:creator></item><item><title><![CDATA[JakartaOne 2025 Japanに参加してきました]]></title><description><![CDATA[
2025年7月30日、日本マイクロソフト株式会社で開催されたJakartaOne 2025 Japanに参加してきました。
https://jakartaone.org/jp/2025/japan/
私事になりますが、これまで私は、新卒入社以来とあるSaaSのテクニカルサポートを生業としてきましたが、8月から同社内のシステム開発部門に異動することになりました。異動先ではJakarta EE（エンタープライズ向けJavaアプリケーション開発のための標準仕様群） を利用していると聞いたため、これを機に少しでも技術的な理解を深めようと思い、先輩に勧められて今回のイベントに急遽参加することにし...]]></description><link>https://zenn.dev/adaisukev/articles/d3586015c3e71b</link><guid isPermaLink="true">https://zenn.dev/adaisukev/articles/d3586015c3e71b</guid><pubDate>Sun, 03 Aug 2025 23:32:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7UgPJWSW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JakartaOne%25202025%2520Japan%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiNzNiNTYxMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daisuke</dc:creator></item><item><title><![CDATA[【DAY55】既存システムから学ぶ、構造的エンジニアリングのすすめ]]></title><description><![CDATA[
 既存のWebシステムを使って、技術の全体像をつかめるか？
バックエンド中心で作った過去のJavaベースのポートフォリオ。
「とりあえず一つ作ってみた」レベルでも、そのシステムをベースに改修し続けていくことで、総合的なエンジニアリングスキルに辿り着けるのか？
答えは、Yes（ただし条件付き）。


 構造的に学ぶとは？
単なる技術の「習得」ではなく、技術どうしの“つながり”を理解することが構造的な学び。Webシステムはそれらの技術が密接に組み合わさって動いている。

✅ フロントエンド：UIとUXをどう設計するか。ReactやVueなど
✅ バックエンド：ビジネスロジック。Spring...]]></description><link>https://zenn.dev/keisuke4649/articles/day55-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day55-pg-connection</guid><pubDate>Sun, 03 Aug 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--skTnC779--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY55%25E3%2580%2591%25E6%2597%25A2%25E5%25AD%2598%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581%25E6%25A7%258B%25E9%2580%25A0%25E7%259A%2584%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[Java仮想マシン（JVM）を読解しながら理解する #3]]></title><description><![CDATA[https://zenn.dev/h_kohe/articles/bd8986a73b02df
こちらの記事の続きです。
よんでいる公式ドキュメント
https://docs.oracle.com/javase/specs/jvms/se17/html/jvms-2.html

 2.3. Primitive Types and Values(プリミティブ型と値)
この項目に関しては個人的に新しい情報というよりなんとなく把握している内容だったので、振り返りやすいように表にまとめておきました。

 📌 数値型（Numeric Types）

 整数型（2.3.1. Integral Typ...]]></description><link>https://zenn.dev/h_kohe/articles/45c3d677915b73</link><guid isPermaLink="true">https://zenn.dev/h_kohe/articles/45c3d677915b73</guid><pubDate>Sun, 03 Aug 2025 10:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cAfIejk5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E4%25BB%25AE%25E6%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25EF%25BC%2588JVM%25EF%25BC%2589%25E3%2582%2592%25E8%25AA%25AD%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520%25233%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KOHE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMDQxMTQ1ZjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KOHE</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その５ - 制御変数の扱い方 編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03-3
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-4</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-4</guid><pubDate>Fri, 01 Aug 2025 09:53:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d-ryyVeK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2595%2520-%2520%25E5%2588%25B6%25E5%25BE%25A1%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2520%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[マルチスレッドの基本<前編＞[Java入門]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
Java SE11 Gold試験を勉強中の方
Javaのマルチスレッド、Threadクラス、Runnableインターフェースについて知りたい方


 目次
1.javaのマルチスレッド
...]]></description><link>https://zenn.dev/wakinoza/articles/a12e8b1e1d5286</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/a12e8b1e1d5286</guid><pubDate>Fri, 01 Aug 2025 07:34:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p0E_-7Rc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%253C%25E5%2589%258D%25E7%25B7%25A8%25EF%25BC%259E%255BJava%25E5%2585%25A5%25E9%2596%2580%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkYzVjNWY5ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その４ - 算術演算および定数プール編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03-2
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-3</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-3</guid><pubDate>Thu, 31 Jul 2025 12:35:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nxcGZp2o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2594%2520-%2520%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E3%2581%258A%25E3%2582%2588%25E3%2581%25B3%25E5%25AE%259A%25E6%2595%25B0%25E3%2583%2597%25E3%2583%25BC%25E3%2583%25AB%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その３ - 定数と変数で制御する編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03-1
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-2</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-2</guid><pubDate>Thu, 31 Jul 2025 09:42:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cfTTy-vE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2593%2520-%2520%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%25A8%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25A7%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[オブジェクト指向　動画のまとめ]]></title><description><![CDATA[

 🦊 オブジェクト指向とは？
🌱黒本著者のやさしくない!?Javaの動画からのまとめ
参考動画（YouTube 再生リスト）🎥
👉 オブジェクト指向入門（YouTube）


 🐶 オブジェクト指向とは？
ひとことで言うと？
👉 ソフトウェアをどう設計するかを考える「設計手法」のひとつ！

 🎯 設計って何？

設計＝「分割」と「結合」を考える行為


1つの大きなものを作るのは大変！
小さな部品に分ければ、バグ修正や仕様変更がしやすくなる
設計は工数・コスト削減のためのアイデア出し！

📹 関連動画はこちら


 🐱 オブジェクト指向の基礎

 💰 設計で意識すべき2つのコスト

...]]></description><link>https://zenn.dev/mu1555/articles/63564b248c2c2b</link><guid isPermaLink="true">https://zenn.dev/mu1555/articles/63564b248c2c2b</guid><pubDate>Thu, 31 Jul 2025 07:53:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zuSy0zJC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2580%2580%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mu1555%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JkYVVJdlNhWGpXcm1aSkdQNDFnVzFVazVaQ2lNc2lVMDVjdEJXPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mu1555</dc:creator></item><item><title><![CDATA[マルチプロジェクトビルドのための Gradle lockfile]]></title><description><![CDATA[Gradle は、依存ライブラリのバージョンを範囲で指定して管理できます。この仕組みは動的バージョン（dynamic version）と呼ばれています。
// build.gradle.kts

dependencies {
    // Use spring-boot-starter with its version prefixed with "3."
    implementation("org.springframework.boot:spring-boot-starter:3.+")
}
このときビルドを再現可能にするには、範囲指定されたバージョンを特定のバージョンに固定（ロ...]]></description><link>https://zenn.dev/ajalab/articles/gradle-lockfile-for-multi-project-builds</link><guid isPermaLink="true">https://zenn.dev/ajalab/articles/gradle-lockfile-for-multi-project-builds</guid><pubDate>Thu, 31 Jul 2025 07:29:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Fmq-6bSE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Gradle%2520lockfile%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3JXNDNncWxWV0NFZTU2M3J5bUVoamlScXREVGJCREFuV2FRbkR5VFRvd0FnNWJOV1U9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[[3DCG]Javascript three で鉄道模型を作ったから紹介する為の記事]]></title><description><![CDATA[
 初めての [3DCG]JavaScript_Three、個人レベルと制作途中なのに、鉄道模型を作ってたら紹介したくなったのでリンクを貼ります。


 🐈‍⬛ Github・レポジトリへのアクセス
https://github.com/mtur2007/java_three_3D


🗺️ マップへのダイレクトアクセス
https://mtur2007.github.io/java_three_3D/

プログラミングによる自動化という利点を活かし、駅舎よりプラットホーム上の
ホームドア、エスカレータ、エレベータを動作させることに特化して、
部屋に引きこもって見ているだけでも飽きない空...]]></description><link>https://zenn.dev/mtur/articles/b2fb52ae23148b</link><guid isPermaLink="true">https://zenn.dev/mtur/articles/b2fb52ae23148b</guid><pubDate>Thu, 31 Jul 2025 06:36:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4alkK7j9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B3DCG%255DJavascript%2520three%2520%25E3%2581%25A7%25E9%2589%2584%25E9%2581%2593%25E6%25A8%25A1%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%258B%25E3%2582%2589%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2599%25E3%2582%258B%25E7%2582%25BA%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mtur2007%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkMjc2YTVjZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mtur2007</dc:creator></item><item><title><![CDATA[【DAY51】Javaは全技術理解の起点となるか：汎用性と限界の考察]]></title><description><![CDATA[
 Javaは“全部”を理解する入り口になり得るか？
バックエンドのポートフォリオ開発を進める中で、「このままJavaを軸に学び続ければ、他の技術も理解できるようになるのでは？」という疑問が浮かんだ。結論から言えば、Javaは非常に強力な“理解の足場”にはなるが、それ単体ですべてをカバーできるわけではない。
Javaは静的型付け・オブジェクト指向の王道として、プログラミングの抽象化・構造化を学ぶには理想的な言語だ。特に、インターフェース、継承、ポリモーフィズム、例外処理、スレッド制御、GCの動作など、実践的な基礎が詰まっている。さらにSpring BootやJPAなどのエンタープライズ向...]]></description><link>https://zenn.dev/keisuke4649/articles/day51-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day51-pg-connection</guid><pubDate>Wed, 30 Jul 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2RG2Pow0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY51%25E3%2580%2591Java%25E3%2581%25AF%25E5%2585%25A8%25E6%258A%2580%25E8%25A1%2593%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25AE%25E8%25B5%25B7%25E7%2582%25B9%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%25EF%25BC%259A%25E6%25B1%258E%25E7%2594%25A8%25E6%2580%25A7%25E3%2581%25A8%25E9%2599%2590%25E7%2595%258C%25E3%2581%25AE%25E8%2580%2583%25E5%25AF%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その２ - 前提知識構築編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-03
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-00

...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03-1</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03-1</guid><pubDate>Wed, 30 Jul 2025 07:19:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7h4P_RBg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2520-%2520%25E5%2589%258D%25E6%258F%2590%25E7%259F%25A5%25E8%25AD%2598%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[flutter ビルドエラー「ERROR: JAVA_HOME is set to an invalid directory...」と対処]]></title><description><![CDATA[
 エラー
ERROR: JAVA_HOME is set to an invalid directory: C:\Program Files\Android\Android Studio...

 対処法
コマンドプロンプトで以下を実行
flutter config --jdk-dir="%JAVA_HOME%"
]]></description><link>https://zenn.dev/kikinomemo/articles/f0bc9bd87d53ff</link><guid isPermaLink="true">https://zenn.dev/kikinomemo/articles/f0bc9bd87d53ff</guid><pubDate>Wed, 30 Jul 2025 01:33:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zz85Y-Kb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:flutter%2520%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%258CERROR%253A%2520JAVA_HOME%2520is%2520set%2520to%2520an%2520invalid%2520dire...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A1%25E3%2583%25A2%25E5%25B8%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>メモ帳</dc:creator></item><item><title><![CDATA[JVM を読む | JVM をハックする その１ - 環境構築編]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-02-12-13
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapte...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-03</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-03</guid><pubDate>Tue, 29 Jul 2025 22:29:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ODRZqpXT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2582%2592%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%2520%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2520-%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[【DAY50】Javaで再構築：設計から実装までを体系的に再学習する]]></title><description><![CDATA[
 Javaを軸としたバックエンド技術の再構築
これまで複数のバックエンドポートフォリオを実装してきたが、アーキテクチャ設計・テスト戦略・設計原則（SOLID / DRY / KISSなど）への理解が浅く、結果として保守性・拡張性に欠ける実装になっていた。
本日よりJavaを中心に据えたバックエンド技術の再構築に着手する。


 選定言語としてのJavaの優位性
Javaは以下の観点で再学習のベースとして最適と判断した：


静的型付けにより、コンパイル時の型安全性が高い
オブジェクト指向設計（OOP）の原則を体系的に学べる

Spring BootによるDIコンテナ、AOP、トランザク...]]></description><link>https://zenn.dev/keisuke4649/articles/day50-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day50-pg-connection</guid><pubDate>Tue, 29 Jul 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o-lt3I5f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY50%25E3%2580%2591Java%25E3%2581%25A7%25E5%2586%258D%25E6%25A7%258B%25E7%25AF%2589%25EF%25BC%259A%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%258B%25E3%2582%2589%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25BE%25E3%2581%25A7%25E3%2582%2592%25E4%25BD%2593%25E7%25B3%25BB%25E7%259A%2584%25E3%2581%25AB%25E5%2586%258D%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[JVM を読む | JVM の構造その８ - 閑話：JVM が満たすべき要件と原則について]]></title><description><![CDATA[前回の続きです。前回はこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chapter-02-11-5-10
このシリーズは，JVM の仕様書を読み解くためのガイドとして構成しています。
JVM の仕様書は非常に長大で難解な内容が多いため，各セクションごとに要点をまとめていきます。
また，JVM の内部構造や動作原理を知ることで，Java のパフォーマンスやセキュリティ，メモリ管理の仕組みを深く理解する試みです。
シリーズはこちらから。
https://zenn.dev/peyang/articles/reading-jvm-chap...]]></description><link>https://zenn.dev/peyang/articles/reading-jvm-chapter-02-12-13</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/reading-jvm-chapter-02-12-13</guid><pubDate>Tue, 29 Jul 2025 16:01:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lGYfaGis--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JVM%2520%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2520%257C%2520JVM%2520%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2598%2520-%2520%25E9%2596%2591%25E8%25A9%25B1%25EF%25BC%259AJVM%2520%25E3%2581%258C%25E6%25BA%2580%25E3%2581%259F%25E3%2581%2599%25E3%2581%25B9%25E3%2581%258D%25E8%25A6%2581%25E4%25BB%25B6%25E3%2581%25A8%25E5%258E%259F%25E5%2589%2587%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[今までのラムダ式、これからのラムダ式（Java）]]></title><description><![CDATA[
 今までのラムダ式、これからのラムダ式（Java）

 はじめに
Javaでラムダ式が導入されて以来、私たちは簡潔に処理を書けるようになった。しかし、try-catch や チェック例外 の存在が、ラムダ式の「軽さ」を奪ってきたのも事実だ。
この記事では、従来のラムダ式の限界を整理し、そこから一歩踏み込んで構造的に解決したユーティリティ Lamb を紹介する。これは単なるツールではなく、「ラムダ式のこれからの書き方」を再定義する設計思想でもある。


 今までのラムダ式

 ❌ final var での宣言ができない
final var fn = (String str) -&gt; ...]]></description><link>https://zenn.dev/menimani/articles/891c9f96331a6d</link><guid isPermaLink="true">https://zenn.dev/menimani/articles/891c9f96331a6d</guid><pubDate>Tue, 29 Jul 2025 15:07:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jmvwnvGf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25E3%2580%2581%25E3%2581%2593%25E3%2582%258C%25E3%2581%258B%25E3%2582%2589%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25EF%25BC%2588Java%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:menimani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5MWM5YzcyOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>menimani</dc:creator></item></channel></rss>