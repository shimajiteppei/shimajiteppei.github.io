<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 29 Sep 2025 10:10:47 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[フロントエンドカンファレンス東京2025 参加レポート]]></title><description><![CDATA[
 はじめに
2025年9月21日にAbemaタワーで開催されたフロントエンドカンファレンス東京に参加してきました！
本記事では、筆者が見たセッションから学んだことと感想について紹介します。

 参加経緯
今回のフロントエンドカンファレンスに参加するにあたってサイバーエージェントのカンファレンス参加学生支援プログラムによって参加しました。
普段は地方に住んでいると、技術系カンファレンスに参加したくても交通費や宿泊費を考えると金銭的な負担も大きいため、 現地で得られる熱量や情報に触れる機会が少ないのが正直なところです。
今回のフロントエンドカンファレンスもフロントエンドの技術に関する話をぜ...]]></description><link>https://zenn.dev/popodada/articles/3e1f64138d9109</link><guid isPermaLink="true">https://zenn.dev/popodada/articles/3e1f64138d9109</guid><pubDate>Mon, 29 Sep 2025 08:38:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b_N2mWf8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25AB%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B9%25E6%259D%25B1%25E4%25BA%25AC2025%2520%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BD%25E3%2581%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkI4eU5jeGMwRkJvQnhfcDAwN2hETGp5SUNIbUJNQm1Wd1BfTU1kOFNhN1Q2TTgtVFo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぽぽ</dc:creator></item><item><title><![CDATA[[TypeScript]Cloudflare WorkersとDurable Objectsでオンラインゲーム作った(WebSocket)]]></title><description><![CDATA[
 はじめに
Cloudflare WorkersとDurable Objectsを使えばWebSocketを使いまくってマルチプレイヤーゲームが簡単に作れる！ と様々な記事で書かれているものの、誰も作っていないので作ってみました。
https://nowhere-man.tkithrta.workers.dev/
まだバージョン0.1.0ですが、ソースコードも公開しています。
https://gitlab.com/acefed/nowhere-man
テトリスバトルを楽しめますが、99人同時接続できるかは不明です。現時点ではスマホに対応していません（Bluetoothキーボードを使えば...]]></description><link>https://zenn.dev/tkithrta/articles/1b9f6acca6a82b</link><guid isPermaLink="true">https://zenn.dev/tkithrta/articles/1b9f6acca6a82b</guid><pubDate>Mon, 29 Sep 2025 08:00:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h4lWqPYL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255DCloudflare%2520Workers%25E3%2581%25A8Durable%2520Objects%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E4%25BD%259C%25E3%2581%25A3...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25BB%2592%25E3%2583%25B0%25E6%25A8%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NDRlMTA4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>黒ヰ樹</dc:creator></item><item><title><![CDATA[React Router v7のデータモードを使ってみた+Conformのfuture機能]]></title><description><![CDATA[
 これはなに？
React Router v7 のデータモード（loader/action）を実際に触ってみた検証記事です。将来自作のブラウザ拡張で使うことを想定して Memory Router での実装を試し、ついでに Conform の future 機能も試してみました。データモードを使ったことがなかったので、まずは基本的な動作を確認したかったんです。
実際に動作するデモは以下URLに公開しています。
https://data-router-test.vercel.app/
ソースコードは以下リポジトリで公開しています。
https://github.com/coji/data-...]]></description><link>https://zenn.dev/coji/articles/react-router-data-mode-browser-extension</link><guid isPermaLink="true">https://zenn.dev/coji/articles/react-router-data-mode-browser-extension</guid><pubDate>Mon, 29 Sep 2025 01:15:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--imc6ggjx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2520v7%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%252BConform%25E3%2581%25AEfuture%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[Solidity基礎学習28日目(Hardhatにおけるテスト)]]></title><description><![CDATA[
 HardhatにおけるSolidityテストとTypeScriptテストの比較
日付: 2025年9月28日
学習内容: Hardhatを用いたテストケースの書き方、SolidityテストとTypeScriptテストの比較

 1. Hardhatのテスト機能の概要

 1.1 Hardhat 3のテスト環境
Hardhat 3では、2つの異なるテスト方式をサポートしています：


Solidityテスト: Foundry/Forge形式のテスト（.t.solファイル）

TypeScriptテスト: Node.js/Viem/Ethersを使用したテスト（.tsファイル）

両方の...]]></description><link>https://zenn.dev/dein/articles/fd0b26c59bef9d</link><guid isPermaLink="true">https://zenn.dev/dein/articles/fd0b26c59bef9d</guid><pubDate>Sun, 28 Sep 2025 19:32:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--euPKl_yQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Solidity%25E5%259F%25BA%25E7%25A4%258E%25E5%25AD%25A6%25E7%25BF%259228%25E6%2597%25A5%25E7%259B%25AE%2528Hardhat%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:DeIn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NTBmNGJhNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>DeIn</dc:creator></item><item><title><![CDATA[Docker×React×PostgreSQL フルスタック環境構築ガイド]]></title><description><![CDATA[React・Express・Prisma・PostgreSQLを Docker Compose で一括起動できる環境を構築するチュートリアルです。]]></description><link>https://zenn.dev/arunbababa/books/docker-react-prisma-book</link><guid isPermaLink="true">https://zenn.dev/arunbababa/books/docker-react-prisma-book</guid><pubDate>Sun, 28 Sep 2025 16:57:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--491ERF2S--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jNzFkNzgxZjRiLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>🐶ハッカードッグ🐶</dc:creator></item><item><title><![CDATA[DuckDBにMVTが来た！フロントで完結するベクトルタイル配信]]></title><description><![CDATA[先日、DuckDBで ST_AsMVT、ST_AsMVTGeom関数が利用できるようになりました。
https://github.com/duckdb/duckdb-spatial/issues/241
ということは、DuckDB WASMを用いることで、ファイルをアップロード、格納、MVTの配信がフロントエンドで完結するということなのでは？と思ったのが始まりでした。
恥ずかしながらDuckDBというツール自体をあまり使ったことがなかったので、勉強がてら実装してみました。
(使用するツール・フレームワークはSveltekit、DuckDB WASMです。)

 本編
DuckDB WAS...]]></description><link>https://zenn.dev/groovyjovy/articles/fb3438bf14a5d4</link><guid isPermaLink="true">https://zenn.dev/groovyjovy/articles/fb3438bf14a5d4</guid><pubDate>Sun, 28 Sep 2025 11:41:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FuLuIYdM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DuckDB%25E3%2581%25ABMVT%25E3%2581%258C%25E6%259D%25A5%25E3%2581%259F%25EF%25BC%2581%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A7%25E5%25AE%258C%25E7%25B5%2590%25E3%2581%2599%25E3%2582%258B%25E3%2583%2599%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E9%2585%258D%25E4%25BF%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:groovyjovy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3OTY5MDQyOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>groovyjovy</dc:creator></item><item><title><![CDATA[結果のフィードバックがメールのテストを非同期で検証する仕組みを作ってみた]]></title><description><![CDATA[こんにちは。ダイの大冒険エンジョイ勢のbun913と申します。
みなさんは、「この処理の結果がメールで届くんだよなぁ。このメールを起点に非同期であるべき結果を確認できるテストを書きたいなぁ」と思ったことはありませんか？私はあります。
私はSDET（Software Development Engineer in Test）という職種で働いており、テスト自動化コードの実行だけでなく「こういうテストをできる仕組みが欲しい〜！」を叶えるのも私の仕事だと思っています。
今回はシステムからフィードバックとして届くメールをSlackに転送して、Slack AppをAWS Lambdaでイベント駆動で...]]></description><link>https://zenn.dev/moneyforward/articles/11b02308de20b1</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/11b02308de20b1</guid><pubDate>Sun, 28 Sep 2025 09:00:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rIqLB8tC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bun913%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNGVhMDEyMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bun913</dc:creator></item><item><title><![CDATA[仕組みでカバーするStop Hooksで忘れないTypeScriptの型チェック]]></title><description><![CDATA[!
この記事は誤字・脱字のチェック以外、温もりのある人間の手で書かれています

Claude Codeは、処理の開始や終了時に特定のコードを実行できる「Hooks」という仕組みがあります。
https://docs.claude.com/en/docs/claude-code/hooks-guide
https://docs.claude.com/en/docs/claude-code/hooks
今回は、TypeScriptで出力が終わった後に型チェックを実行するHooksを実装し、Claude Codeに特段指示をしなくてもいいように効率化した事象を紹介します。

 物忘れを仕組みで...]]></description><link>https://zenn.dev/sui_water/articles/c2405731e3c0b6</link><guid isPermaLink="true">https://zenn.dev/sui_water/articles/c2405731e3c0b6</guid><pubDate>Sun, 28 Sep 2025 08:26:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Dg7uBeJ6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2581%25A7%25E3%2582%25AB%25E3%2583%2590%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258BStop%2520Hooks%25E3%2581%25A7%25E5%25BF%2598%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4MGQ1MWNkOTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>スイ</dc:creator></item><item><title><![CDATA[【Laravel】ZiggyからWayfinderに移行した理由と手順]]></title><description><![CDATA[
 対象読者

Laravel + Inertia.js で Ziggy を使用している方
セキュリティとパフォーマンスを重視した開発をしたい方
開発体験や AI コーディングの精度を向上させたい方


 はじめに
2025年8月のアップデートで、Laravel Starter Kit （React/Vue版）で使われている Ziggy が Wayfinder へ移行されたことをご存知でしょうか？
自社で開発しているプロジェクトにも Ziggy を使用しているものがあり、Wayfinder への移行を検証していました。移行が困難だと判断した場合は Ziggy のままで運用していくことも考...]]></description><link>https://zenn.dev/aun_phonogram/articles/64d783de080392</link><guid isPermaLink="true">https://zenn.dev/aun_phonogram/articles/64d783de080392</guid><pubDate>Sun, 28 Sep 2025 06:37:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YmAzdV0a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Laravel%25E3%2580%2591Ziggy%25E3%2581%258B%25E3%2582%2589Wayfinder%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%259F%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A8%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%2590%2589%25E5%25B2%25A1%25E8%25A3%2595%25E8%25B2%25B4%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwM2RkNmMyMzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AUN%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmNzI5YzVhODEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>吉岡裕貴</dc:creator></item><item><title><![CDATA[Axiosのメリットを説明してみる]]></title><description><![CDATA[
 初めに

 前提
私は現在、React + TypeScriptの勉強のため、タスク管理アプリの開発を行っています。開発環境は以下のような構成になっています。
フロントエンド

React + TypeScriptで構成
ログイン画面やタスク管理画面を実装
ローカル環境でコンテナ化

バックエンド

PHP（Laravel 12）で構成
データベース操作を担当
RESTful APIとして機能

フロントエンドとバックエンドは独立したコンテナとして動作し、HTTP APIを通じてデータのやり取りを行っています。

 複雑化：初心者の悩み
React初心者の私にとって、フロントエンドか...]]></description><link>https://zenn.dev/rin__rin/articles/b5541c847d7607</link><guid isPermaLink="true">https://zenn.dev/rin__rin/articles/b5541c847d7607</guid><pubDate>Sun, 28 Sep 2025 06:09:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tg8IG1jm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Axios%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rinrin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2VtMl9FRmUwaWtvOWtIdUJWam9JbFh5ODRZbDlNZWpPU2JXVDFKVjBkTGRCNWNXZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rinrin</dc:creator></item><item><title><![CDATA[文字列と配列をシュッと分割するユーティリティ divider のご紹介]]></title><description><![CDATA[みなさん、こんにちは！フロントエンドエンジニアの @nyaomaru です！
唐突ですが、文字列の分割、日々やってますよね？
split で十分？うん、8 割は十分。でも、

区切り文字が複数混ざる
固定長でサクッと切りたい

string[] をそのまま処理したい

こういうちょい複雑な場合だと、split + map + 正規表現 + substring の四重苦になりがち。
そこで @nyaomaru/divider。
https://github.com/nyaomaru/divider
区切りを 「文字列」でも「インデックス」でも 指定できて、配列にも直で効く分割ユーティリティ...]]></description><link>https://zenn.dev/nyaomaru/articles/how-to-divide-string</link><guid isPermaLink="true">https://zenn.dev/nyaomaru/articles/how-to-divide-string</guid><pubDate>Sat, 27 Sep 2025 09:25:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I6he8NlU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25A8%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%2583%25E3%2581%25A8%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%2520divider%2520%25E3%2581%25AE%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyaomaru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNzViM2IxYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyaomaru</dc:creator></item><item><title><![CDATA[React Router v7 で Google Drive ギャラリーアプリを作ってみた]]></title><description><![CDATA[
 これはなに？
Google Drive API を使ったことがなかったので、試しに React Router v7 でフォルダの中の画像を表示するギャラリーアプリを作って、実装のポイントをまとめてみました。
デモは https://www.techtalk.jp/demo/google-drive で触れます。
コードは https://github.com/techtalkjp/techtalk.jp/tree/main/app/routes/demo%2B/google-drive%2B に置いてあります。

 作ったもの

Google Drive の画像をギャラリー表示するア...]]></description><link>https://zenn.dev/coji/articles/react-router-v7-google-drive-gallery</link><guid isPermaLink="true">https://zenn.dev/coji/articles/react-router-v7-google-drive-gallery</guid><pubDate>Sat, 27 Sep 2025 03:46:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lr3A6WWI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2520v7%2520%25E3%2581%25A7%2520Google%2520Drive%2520%25E3%2582%25AE%25E3%2583%25A3%25E3%2583%25A9%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[チーム開発記録1：コミュニティのポータルサイトを作る]]></title><description><![CDATA[
 概要
オンラインサロン「シンギュラリティ・ラボ（通称シンラボ）」では、エンジニアが中心となって、コミュニティのポータルサイトをチーム開発しています。このサイトは、メンバーが効率的にシンラボ内の情報にアクセスしたり、メンバー間で交流するための情報基盤となります。
今回、このチーム開発を記録として残すため、記事を書くことにしました（実は開発からすでに半年以上経過しているのですが、開発体制が整うまで時間がかかり、今に至ります）。
本開発では、チームの定例ミーティングと、メンバー間で相談しつつ、個々人で担当を決めて機能を制作する形で進行しています。このプロジェクトの最大の魅力は、最先端の技術...]]></description><link>https://zenn.dev/singularitylabs/articles/0ea64a7c1f221a</link><guid isPermaLink="true">https://zenn.dev/singularitylabs/articles/0ea64a7c1f221a</guid><pubDate>Sat, 27 Sep 2025 03:33:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qNNetXZB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%25E8%25A8%2598%25E9%258C%25B21%25EF%25BC%259A%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AE%25E3%2583%259D%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%25A9%25E3%2583%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwM2Y5MTIwYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>シンラボ</dc:creator></item><item><title><![CDATA[ESLint v9以降(flat config形式）でeslint-plugin-reactを設定する]]></title><description><![CDATA[
 経緯
!
この記事で扱うESLintのversionはv9.36.0になります。

最近、Reactサービスから離れていたので個人学習を兼ねてReactを構築中に
v9以降でのlint設定（React関連）を行おうとし躓いたので同じ様な事象に遭われた方に
解決の共有またはヒントになれば幸いです。

 躓いた理由

ESLint設定ファイル形式の変更


v9.0.0以降はFlatConfig形式がデフォルトになった
従来の.eslintrc.{js|json|yml}形式は動作しない

v8までは従来形式がデフォルトでFlatConfigは実験的導入の扱い




対応手順が散見して...]]></description><link>https://zenn.dev/w4_3nd0/articles/dd7d1cfdc89a88</link><guid isPermaLink="true">https://zenn.dev/w4_3nd0/articles/dd7d1cfdc89a88</guid><pubDate>Fri, 26 Sep 2025 19:35:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mhlN58x2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%2520v9%25E4%25BB%25A5%25E9%2599%258D%2528flat%2520config%25E5%25BD%25A2%25E5%25BC%258F%25EF%25BC%2589%25E3%2581%25A7eslint-plugin-react%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:endr0id%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTFA3aTNROWJhOU1sbGVOQXlBU0xjbjB3Tzc0VEhMLUYzNnJxSTNyUXVkbkFzMkRRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>endr0id</dc:creator></item><item><title><![CDATA[Durable Objects KV 違い]]></title><description><![CDATA[
 はじめに
Cloudflare Workersの永続化層にアクセスするためのDurable Object Storage APIにはSQL APIのほかに、Synchronous KV APIとAsynchronous KV APIという、非常に似た2つのKV APIが存在するため、まとめてみることにしました。

 3行で分かるCloudflare Workers

Cloudflare Workers: V8 isolatesのメモリ内でJavaScriptコードを実行できる。ステートレスなので実行した後はデータが消える。
Durable Objects: ユニークIDを持つJav...]]></description><link>https://zenn.dev/tkithrta/articles/a953c654aa1498</link><guid isPermaLink="true">https://zenn.dev/tkithrta/articles/a953c654aa1498</guid><pubDate>Fri, 26 Sep 2025 13:28:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fJZOxDeG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Durable%2520Objects%2520KV%2520%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25BB%2592%25E3%2583%25B0%25E6%25A8%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NDRlMTA4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>黒ヰ樹</dc:creator></item><item><title><![CDATA[TSKaigi Hokuriku のスポンサーになりました]]></title><description><![CDATA[jig.jp は、2025年11月23日に開催される TSKaigi Hokuriku にゴールドスポンサーとして協賛いたします。
https://hokuriku.tskaigi.org/
jig.jp は福井県に開発センターを構えていますが、隣県の石川県でこのようなイベントが開催されることをとても嬉しく思います。カバー画像、北陸3県をモチーフとしたデザインがとてもかわいいですね 🦖

jig.jp では、サービスのフロントエンド（Angular / Next.js / Remix (RRv7) / Astro）、バックエンド（Hono / Vendure）、インフラ（AWS CDK）...]]></description><link>https://zenn.dev/jigjp_engineer/articles/1cb57ee0d0c18f</link><guid isPermaLink="true">https://zenn.dev/jigjp_engineer/articles/1cb57ee0d0c18f</guid><pubDate>Fri, 26 Sep 2025 12:34:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--32zAy18W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TSKaigi%2520Hokuriku%2520%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:jig.jp%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5NGQxOTY3NzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:jig.jp%2520Engineers%2527%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlOGE0ODg0OTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jig.jp</dc:creator></item><item><title><![CDATA[Lark API実践：TypeScriptでBotからメッセージ送信してみる]]></title><description><![CDATA[
 はじめに
こんにちは、株式会社ゼンビットのゆうとです。
今回は社内で使っているオールインワンツール「Lark」のAPIを使い、Botからメッセージ送信する方法を紹介します。
Larkのドキュメントが現時点で少ないため、実装の参考になればと思います。

 対象読者

LarkでAPIを利用したい方
TypeScriptでLark API送信を構築予定の方


 記事で説明する内容

Lark APIの利用方法
Larkコンソール画面でのテスト方法
TypeScriptでのBotメッセージ送信実装


 説明しない内容

TypeScript部分の構築詳細
Lark、axiosの基本的な...]]></description><link>https://zenn.dev/zenbit/articles/lark_api_starting</link><guid isPermaLink="true">https://zenn.dev/zenbit/articles/lark_api_starting</guid><pubDate>Fri, 26 Sep 2025 04:35:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HDIqOFSm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Lark%2520API%25E5%25AE%259F%25E8%25B7%25B5%25EF%25BC%259ATypeScript%25E3%2581%25A7Bot%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2586%25E3%2581%2586%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwM2JkMDhiNWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BC%25E3%2583%25B3%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3M2I2ZjZjYjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆうと</dc:creator></item><item><title><![CDATA[Vue3のpropsについて調べてみた]]></title><description><![CDATA[
 基本的な使い方
&lt;script setup&gt;内でpropsを受け取るには、definePropsを使用します。これはインポートせずに直接利用できます。

 配列構文
最もシンプルな方法は、propsの名前を文字列の配列で指定するものです。

ChildComponent.vue
&lt;script setup&gt;
// 'message' という名前のpropsを受け取る
const props = defineProps(['message']);

console.log(props.message); // 親から渡された値
&lt;/script&gt;

...]]></description><link>https://zenn.dev/shunsuke_stack/articles/bc2fcfdfa5b6c8</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/bc2fcfdfa5b6c8</guid><pubDate>Fri, 26 Sep 2025 01:08:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--neKrmnIU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AEprops%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[開発体験向上のためにやっていることをまとめた]]></title><description><![CDATA[個人開発で作成しているプロダクトが落ち着いてきたので、これまで TypeScript 環境で開発体験を上げるためにやってきたことをいくつか紹介します。

 lint + コードフォーマット
少し前までは ESLint で Lint を、Prettier でコードフォーマットを行なっていましたが、ここ最近は Biome を使用しています。

Linter とフォーマッタはほぼ必須です。どちらもコードを静的に解析/修正できるツールですが、導入の目的が違います。

 Linter
Linter の主な目的は、型エラーにはならないものの、コードの品質に関わる、いわゆる危険な香りがするコードを検出...]]></description><link>https://zenn.dev/miyamyia/articles/improving-the-development-experience</link><guid isPermaLink="true">https://zenn.dev/miyamyia/articles/improving-the-development-experience</guid><pubDate>Thu, 25 Sep 2025 08:41:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YE3IOFLo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%25E5%2590%2591%25E4%25B8%258A%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyamyia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMxZjczOWE0YzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyamyia</dc:creator></item><item><title><![CDATA[実践Hono入門 – 型安全なAPI設計とエッジ展開のすべて]]></title><description><![CDATA[🚀 近年、ウェブアプリケーション開発の分野ではフレームワークの選択肢が爆発的に増えています。

Node.jsが登場した当初はExpressやKoaといったシンプルなフレームワークが主流でしたが、その後は高速化、型安全性、クラウドやサーバーレスへの対応など、様々な要件に応えるフレームワークが登場しました。

📚 本書で扱うHonoは、その中でも非常にユニークな存在です。
公式ドキュメントによれば、Honoは「高速 (Fast)、軽量 (Lightweight)、マルチランタイム (Multi‑runtime)」を特徴とする新世代のフレームワークであり、Node.js、Cloudflare Workers、Deno、Bunなど複数の実行環境で同じコードが動作します。

🛡️ さらに、TypeScriptを前提にしたAPI設計により、ルートやリクエストボディの型がコンパイル時に検査されるため、開発者はより安全に高速なアプリケーションを構築できます。

✍️ 筆者がHonoに興味を持ったのは、日本語で体系的にまとめられた文献がほとんど存在しないという現状に気付いたことがきっかけでした。

本書は、これからHonoを学びたい開発者や、既存のExpress/Fastifyから乗り換えを検討している人たちに向けて、Honoの基本から応用までを網羅的に解説することを目的としています。

📖 単なるリファレンスにとどまらず、プログラム設計の考え方やテスト、デプロイまで含め、実践的なプロジェクト構成を学べるよう構成しています。

🌐 Honoの魅力は、エッジコンピューティングの時代にマッチした設計思想にあります。
従来、サーバーレスやエッジ環境では起動時間やリソースの制約が大きな課題でした。Honoはその点に対して、軽量なバンドルサイズと高速な起動時間を実現し、寒いスタートでも高いパフォーマンスを発揮します。

🧑‍💻 また、TypeScriptとの親和性が高く、Zodを組み合わせることで完全な型安全を保証できることは、長期運用において大きなメリットです。

💡 本書を通じて、最新のウェブ標準とサーバレス技術に基づく開発方法を習得し、Honoのポテンシャルを存分に活かせるようになっていただければ幸いです。

📑 本書は以下の章立てで構成されています。
]]></description><link>https://zenn.dev/syuya2036/books/9b3a827d8227b5</link><guid isPermaLink="true">https://zenn.dev/syuya2036/books/9b3a827d8227b5</guid><pubDate>Thu, 25 Sep 2025 06:48:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xdTlK0T3--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jYTkwZDQ2MmE1LmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>sh</dc:creator></item></channel></rss>