<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 11 Jun 2025 01:59:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[２日目]]></title><description><![CDATA[トピック
]]></description><link>https://zenn.dev/keisuke4649/articles/ff0f16233a330c</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/ff0f16233a330c</guid><pubDate>Wed, 11 Jun 2025 00:27:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VnKkVNDD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%25EF%25BC%2592%25E6%2597%25A5%25E7%259B%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[関西人のボクがTypeScriptのPromiseについて解説するで]]></title><description><![CDATA[
 TypeScript Promise について
まいど！TypeScriptの勉強は捗ってまっか？とりあえず何か作って勉強や！と意気込んだものの、いきなりプロミスがよーわからんってなったそこの君！今日もとりあえず分かった風になれる簡単解説をお届けするで！

 Promiseってなんやねん？
Promiseっちゅうんは、非同期処理を扱うためのオブジェクトやで。要するに「今すぐには結果が分からんけど、後で結果を教えたるわ」っちゅう約束みたいなもんや。プロミスって約束のことやしな。
JavaScriptでもTypeScriptでも使えるけど、TypeScriptやとちゃんと型がついて安心や...]]></description><link>https://zenn.dev/fushimeer/articles/82d005a3a7808b</link><guid isPermaLink="true">https://zenn.dev/fushimeer/articles/82d005a3a7808b</guid><pubDate>Tue, 10 Jun 2025 13:44:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kkVqyH3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%25A2%25E8%25A5%25BF%25E4%25BA%25BA%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25AF%25E3%2581%258CTypeScript%25E3%2581%25AEPromise%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:meer%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YWVjZDM1YmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>meer</dc:creator></item><item><title><![CDATA[JS演習　二次元配列　★2]]></title><description><![CDATA[今回は二次元配列を作る問題です。二次元配列は配列の中に配列がある配列です。見ればわかります。

 二次元配列の作成　★★☆☆☆
さっそく作ってください。いうことは何もないです。
/**
 * 行と列を決めて二次元配列を作成
 * @param {number} rows - 配列の行
 * @param {number} cols - 配列の列
 * @param {any} defVal - 値 (初期値: 0)
 * @returns {Array} 二次元配列
 */
// コードを書いてね。

makeTable(3, 2);// -&gt; [[0, 0], [0, 0], [...]]></description><link>https://zenn.dev/javascript/articles/7caaba5c0773c7</link><guid isPermaLink="true">https://zenn.dev/javascript/articles/7caaba5c0773c7</guid><pubDate>Tue, 10 Jun 2025 11:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---2U7BmGG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%25E6%25BC%2594%25E7%25BF%2592%25E3%2580%2580%25E4%25BA%258C%25E6%25AC%25A1%25E5%2585%2583%25E9%2585%258D%25E5%2588%2597%25E3%2580%2580%25E2%2598%25852%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E7%25B4%259A%25E3%2581%25AA%25E9%2583%25BD%25E4%25BC%259A%25E3%2583%2590%25E3%2583%2588%25E5%25A5%25BD%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMjIwOGM5NWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高級な都会バト好き</dc:creator></item><item><title><![CDATA[「何にでも .filter() を使う人」にならないために覚えておきたい JavaScript の便利な組み込みメソッド]]></title><description><![CDATA[
 はじめに
そろそろ新卒一括採用されたエンジニアの研修が終わって配属が始まる時期なので、主に JavaScript 初心者を対象にした記事をひとつ。
初心者に限らず、年次的に中級者くらいでも「何にでも .filter() を使う人」を割とよく見かけるので、もっといい方法があるということをぜひ覚えていってください。

 便利な組み込みメソッド
JavaScript の配列 (["apple", "banana", "cherry"] のように、複数の値をリスト形式で持つデータ) には、標準で .sort()、.map() のようなメソッドが備わっています。
!


.sort() は配列...]]></description><link>https://zenn.dev/somnicattus/articles/df5b7373d7b2dd</link><guid isPermaLink="true">https://zenn.dev/somnicattus/articles/df5b7373d7b2dd</guid><pubDate>Tue, 10 Jun 2025 10:46:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gk7MveZ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E4%25BD%2595%25E3%2581%25AB%25E3%2581%25A7%25E3%2582%2582%2520.filter%2528%2529%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E4%25BA%25BA%25E3%2580%258D%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E8%25A6%259A%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%2520JavaScript%2520%25E3%2581%25AE%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:somnicattus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMTUyZWZmZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>somnicattus</dc:creator></item><item><title><![CDATA[名前が似ているNext.js、Nuxt.js、NestJSの違いを整理してみた]]></title><description><![CDATA[プロダクト開発を始めたばかりの段階で、JavaScript関連のフレームワークの多さに戸惑うことは少なくありません。特に、「Next.js」「Nuxt.js」「NestJS」のように名前が似ているものは、その役割を混同しやすいと感じています。
この記事では、これら3つのフレームワークについて、自身の理解を整理し、それぞれの違いと用途をまとめます。

 1. 各フレームワークの概要
まず、大まかな分類から整理します。



フレームワーク名
読み方
種類
主な用途
特徴




Next.js
ネクストジェイエス
フロントエンドフレームワーク
Reactアプリケーションの構築、サーバーサイ...]]></description><link>https://zenn.dev/ryo51/articles/bdb526c7e02519</link><guid isPermaLink="true">https://zenn.dev/ryo51/articles/bdb526c7e02519</guid><pubDate>Tue, 10 Jun 2025 05:15:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--htxHpBjX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258D%25E5%2589%258D%25E3%2581%258C%25E4%25BC%25BC%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BNext.js%25E3%2580%2581Nuxt.js%25E3%2580%2581NestJS%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2RxTnRobUN2bE1CQk9lNG8xYzMtQmMtZHZjb2pEenJtdE1DRGpObURYemRjeENRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTech</dc:creator></item><item><title><![CDATA[多すぎるJavaScriptフレームワーク！関係性を整理してみた]]></title><description><![CDATA[プロダクト開発エンジニアとして学習を進める中で、JavaScriptに関する様々なキーワードに触れる機会が増えてきました。特に「フレームワーク」と呼ばれるものについては、JavaScript、Node.js、Next.js、React、TypeScriptといった個々の技術は使ったことがあっても、それらがどういう位置づけで、お互いにどう関係しているのか、全体像が見えずに混乱することがありました。そこで今回は、自分が理解した内容を整理し、それぞれの関係性についてまとめてみました。

 1. 全ての基盤：JavaScriptとその拡張
まず、全ての中心にあるのがJavaScriptというプロ...]]></description><link>https://zenn.dev/ryo51/articles/d9b832c4dc26ec</link><guid isPermaLink="true">https://zenn.dev/ryo51/articles/d9b832c4dc26ec</guid><pubDate>Tue, 10 Jun 2025 05:14:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IvAPqy4C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%259A%25E3%2581%2599%25E3%2581%258E%25E3%2582%258BJavaScript%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25EF%25BC%2581%25E9%2596%25A2%25E4%25BF%2582%25E6%2580%25A7%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2RxTnRobUN2bE1CQk9lNG8xYzMtQmMtZHZjb2pEenJtdE1DRGpObURYemRjeENRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTech</dc:creator></item><item><title><![CDATA[JavaScript３大フレームワーク：Angular、React、Vue.js を理解する]]></title><description><![CDATA[
 JavaScriptフレームワークの種類
JavaScriptには様々なフレームワークやライブラリが存在します。これらは、より効率的かつ大規模なアプリケーション開発を可能にするためのツールです。UI開発に特化したもの、データ管理に強みを持つものなど、それぞれ異なる特徴を持っています。
一般的な分類としては、以下の点が挙げられます。


フロントエンドフレームワーク: 主にユーザーインターフェース（UI）の構築に使用されます。Webブラウザ上で動作し、ユーザーが直接触れる部分の開発を効率化します。


具体例: Angular, React, Vue.js, Svelte, Next....]]></description><link>https://zenn.dev/ryo51/articles/57713213f1fc49</link><guid isPermaLink="true">https://zenn.dev/ryo51/articles/57713213f1fc49</guid><pubDate>Tue, 10 Jun 2025 03:21:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---YsEhJNE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25EF%25BC%2593%25E5%25A4%25A7%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25EF%25BC%259AAngular%25E3%2580%2581React%25E3%2580%2581Vue.js%2520%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TikTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2RxTnRobUN2bE1CQk9lNG8xYzMtQmMtZHZjb2pEenJtdE1DRGpObURYemRjeENRPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TikTech</dc:creator></item><item><title><![CDATA[【超有料級】非同期処理がスッと理解できる魔法のレッスン。今日からあなたも非同期の魔法使い！]]></title><description><![CDATA[
 はじめに
今回の記事では、多くの人が一度はつまずいたり、挫折した経験のある「非同期処理」について解説します。
「非同期処理」と聞いて、「うわ、無理…」「なんか苦手…」と感じる人も少なくないのではないでしょうか？
実は、僕自身もこの分野がめちゃくちゃ苦手でした。
プログラミングの処理は基本的に、上から下へ順番に実行されていきます。しかし、非同期処理では処理の途中で他の処理を実行し、非同期のタスクが完了したタイミングでその結果を使って画面を描画したり、データベースにアクセスしたりします。
たとえば画像表示サイトでは、ユーザー情報の取得を待たずに、先に画面操作ができるようになることがありま...]]></description><link>https://zenn.dev/keit0025/articles/26650dd06a85a1</link><guid isPermaLink="true">https://zenn.dev/keit0025/articles/26650dd06a85a1</guid><pubDate>Mon, 09 Jun 2025 22:19:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ikLlIXc3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E6%259C%2589%25E6%2596%2599%25E7%25B4%259A%25E3%2580%2591%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E3%2582%25B9%25E3%2583%2583%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E9%25AD%2594%25E6%25B3%2595%25E3%2581%25AE%25E3%2583%25AC%25E3%2583%2583%25E3%2582%25B9%25E3%2583%25B3%25E3%2580%2582%25E4%25BB%258A%25E6%2597%25A5%25E3%2581%258B%25E3%2582%2589%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2582%2582%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2581%25AE%25E9%25AD%2594%25E6%25B3%2595%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUV0WmxKQU1pNUN0dlhsdzh1OWhGZTZCaEdiWEpHY1o3dEJpU3Q5TWlHanBVeUpNST1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keita</dc:creator></item><item><title><![CDATA[Reactの学習記録的な感じで書いてみます！]]></title><description><![CDATA[
 はじめに：Reactの勉強、はじめてみたけど…
「今どきのWebサイトを作れるようになりたい！」と思ってReactの勉強を始めたみなさん。
こんにちは！（私だけ？w）
…ところで、始めてみてどうですか？
なんだかよくわからないし、色々ルールがあって「うわーっ！」ってなってませんか？
わかります。私も最初はそうでした。
でも大丈夫！実は、まず基本の3つだけ分かれば、Reactがぐっと身近になって、一気に見通しが良くなるはずです！（たぶん）
今日はその3つのポイントを、一緒に見ていきましょう！

 その１：Webページは「レゴブロック」の集まり！
Reactのいちばん大事な考え方は、We...]]></description><link>https://zenn.dev/pataro/articles/94ceec4e21ed50</link><guid isPermaLink="true">https://zenn.dev/pataro/articles/94ceec4e21ed50</guid><pubDate>Mon, 09 Jun 2025 13:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lo5zuw3M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%25E7%259A%2584%25E3%2581%25AA%25E6%2584%259F%25E3%2581%2598%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pataro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0MDkwNGY2MmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pataro</dc:creator></item><item><title><![CDATA[A2A JS SDK 完全ガイド: クイックスタートガイド]]></title><description><![CDATA[

 目次

A2A JS SDKとは？
A2A JSのインストールとセットアップ
A2A JSの核心概念
最初のA2A JSエージェントの作成
A2A JSサーバー開発
A2A JSクライアントの使用
A2A JSの高度な機能
A2A JSのベストプラクティス
A2A JSのトラブルシューティング


 A2A JS SDKとは？
A2A JS SDKは、JavaScript/TypeScript開発者がAgent2Agent (A2A) プロトコルに準拠した知的エージェントアプリケーションを構築するために特別に設計された強力なライブラリです。このA2A JSフレームワークにより、開発...]]></description><link>https://zenn.dev/czmilo/articles/b3a5c9af902671</link><guid isPermaLink="true">https://zenn.dev/czmilo/articles/b3a5c9af902671</guid><pubDate>Mon, 09 Jun 2025 07:46:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SKdnCDTr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:A2A%2520JS%2520SDK%2520%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%253A%2520%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:milo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1ViZDhTc2tuMVIwekdDeEdoX05MbUdISW1pV21UaDdZdnBhSmR2WDM3V2JzWlJEUks9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>milo</dc:creator></item><item><title><![CDATA[【JavaScript】配列の includes() の使い方と注意点]]></title><description><![CDATA[
 はじめに
JavaScriptで「配列に特定の値が含まれているか」を調べたいとき、
よく使われるのが includes() メソッドです。
const fruits = ['apple', 'banana', 'orange'];
fruits.includes('banana'); // true
シンプルで読みやすい includes() ですが、
実は NaN を含むときの挙動 や オブジェクトとの比較 には注意が必要です。
本記事では、includes() の基本的な使い方と注意点を整理します。

 1. 基本の使い方

 ✅ 配列に含まれているかをチェック
const nu...]]></description><link>https://zenn.dev/fd2025/articles/642192f4827ed6</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/642192f4827ed6</guid><pubDate>Mon, 09 Jun 2025 05:49:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sv4dkoWw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%2520includes%2528%2529%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[フロントエンドJavaScriptでランダムアルゴリズムを実装する方法]]></title><description><![CDATA[
この記事では、フロントエンドJavaScriptでのさまざまなランダムアルゴリズムの実装方法について探求し、異なる技術、それらの利点、および特定のユースケースに焦点を当てています。
著者はまず、フロントエンド開発におけるランダム性の重要性を説明し、ゲーム開発やデータサンプリングなどへの応用を強調しています。そして、JavaScriptでランダム値を生成するための2つの主要な方法について詳しく解説しています：
Math.random()メソッドは、最も単純なアプローチとして紹介されています。このメソッドは0（含む）から1（含まない）の間の浮動小数点数を生成します。著者はこの方法の限界、特...]]></description><link>https://zenn.dev/horushe/articles/ce75101e9dc3c6</link><guid isPermaLink="true">https://zenn.dev/horushe/articles/ce75101e9dc3c6</guid><pubDate>Mon, 09 Jun 2025 03:51:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v6sVMY4K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589JavaScript%25E3%2581%25A7%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25AB%25E3%2582%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDVZM0lJSjNJSkQ3WlBpY2RfMzlsRU5CbnlnN3F2VUFLNHFRX0pybDJRRHowTGZEMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホルス</dc:creator></item><item><title><![CDATA[TypeScript 5.6 の型システムに完全敗北した深夜3時の記録]]></title><description><![CDATA[TypeScript 5.6 にアップグレードしたら、今まで動いていたコードが真っ赤になった。型エラーの海。コンパイルが通らない。深夜3時、モニターの前で頭を抱えた。結局、新しい型システムの挙動を理解するのに8時間かかった。その戦いの記録を残しておく。

 事件の発端：何気ないアップグレード
金曜の夕方5時。軽い気持ちで TypeScript をアップグレードした。
{
  "devDependencies": {
    "typescript": "^5.6.0"
  }
}
npm install して、いつものように npm run build。そしたら画面が真っ赤になった。
F...]]></description><link>https://zenn.dev/unikoukokun/articles/5f39fc9bb0fbc3</link><guid isPermaLink="true">https://zenn.dev/unikoukokun/articles/5f39fc9bb0fbc3</guid><pubDate>Sun, 08 Jun 2025 21:30:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZUc4QAyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25205.6%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E5%25AE%258C%25E5%2585%25A8%25E6%2595%2597%25E5%258C%2597%25E3%2581%2597%25E3%2581%259F%25E6%25B7%25B1%25E5%25A4%259C3%25E6%2599%2582%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25B3%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmYjA3NjA5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユニコ🦄</dc:creator></item><item><title><![CDATA[コールバック関数を建設業の多重下請け構造で理解する試み]]></title><description><![CDATA[
 コンセプト
建設業の多重下請け構造を参考に、コールバック関数を理解します。
!
登場人物：
①施主（sampleビルを建設したい人）
②元請：motouke株式会社（ゼネコン：施主から工事を依頼された会社）
③2次請：nijiuke株式会社（元請から作業を依頼された会社）
※施主は、nijiuke株式会社を大変気に入っており、ビル建設工事にあたっては、『必ずnijiuke株式会社に仕事を回すように』と元請会社に指示を出している。


 そもそもコールバック関数というのは：
他の関数の引数として渡せる関数です
ではなぜ、関数の引数に関数を渡せるのか？　以下の流れで理解できると思う、、、...]]></description><link>https://zenn.dev/shitiku_g/articles/d0d03050f5b83c</link><guid isPermaLink="true">https://zenn.dev/shitiku_g/articles/d0d03050f5b83c</guid><pubDate>Sun, 08 Jun 2025 10:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t_3Q94xr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E5%25BB%25BA%25E8%25A8%25AD%25E6%25A5%25AD%25E3%2581%25AE%25E5%25A4%259A%25E9%2587%258D%25E4%25B8%258B%25E8%25AB%258B%25E3%2581%2591%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25A1%25E3%2581%258F%25E7%2588%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjB3VGZ1RTl2dFBVbTR1aTVrbmFWRTVrT1pkcGpvdEh4SmthdEVPZkQ0clVXNjU1QTM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しちく爺</dc:creator></item><item><title><![CDATA[【初心者向け】なぜ副作用がある関数を書いてはいけないか？ ~~ 引数の変更を例に ~~]]></title><description><![CDATA[
 この記事を書くことになった背景
~~ 先日の出来事 ~~
新卒2ヶ月目の後輩くん「コード書けたのでレビューお願いします！」
私「OK！後で見るよ！」
後輩くん「お願いします！」
~~ しばらくして ~~
私「前の仕事片付いたから後輩くんのレビューするか〜」
const removeAttributes = (obj, removeTargetKeys) =&gt; {
    const keys = Object.keys(obj);
    for (const k of keys) {
        const value = obj[k];
        if (remo...]]></description><link>https://zenn.dev/dhik/articles/af3e2f778c0161</link><guid isPermaLink="true">https://zenn.dev/dhik/articles/af3e2f778c0161</guid><pubDate>Sun, 08 Jun 2025 06:24:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C9OVSIaX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591%25E3%2581%25AA%25E3%2581%259C%25E5%2589%25AF%25E4%25BD%259C%25E7%2594%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25EF%25BC%259F%2520%7E%7E%2520%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E3%2582%2592%25E4%25BE%258B%25E3%2581%25AB%2520%7E%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Itsuki%2520Onishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS00SWxVTVhyZWx1X1M5MW1BaXNHV0tlRlVReWJvMVRVa08xWFEzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Itsuki Onishi</dc:creator></item><item><title><![CDATA[Youtubeの再生速度を変更できるスライダー(Chrome拡張機能)を作ってみた]]></title><description><![CDATA[
 Google AI StudioとCursorを使ってYoutubeの再生速度を変更できるスライダー(Chrome拡張機能)を作ってみた話

 きっかけ

普段から見る動画によって再生速度を変更するので、すぐに再生速度を変更できる拡張機能が欲しかった
既に公開されている拡張機能はどのサイトでも使えて多機能だったが、上部の拡張機能ボタンを押さないといけなくて面倒だった


 言語
JavaScript/CSS

 AIツール

Google AI Studio
Cursor


 作成時間
20分+

 機能

再生速度を直感的に変更できる
0.25x ~ 3.0xまで変更可能

アッ...]]></description><link>https://zenn.dev/tamamochi/articles/133cf324a2e10d</link><guid isPermaLink="true">https://zenn.dev/tamamochi/articles/133cf324a2e10d</guid><pubDate>Sun, 08 Jun 2025 05:16:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cgg-3WZa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2581%25AE%25E5%2586%258D%25E7%2594%259F%25E9%2580%259F%25E5%25BA%25A6%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%2528Chrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%2529%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tama-mochi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYzE3Zjk5YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tama-mochi</dc:creator></item><item><title><![CDATA[JQuery]]></title><description><![CDATA[JQuery]]></description><link>https://zenn.dev/codek2/books/bdd7d6cc04e5c2</link><guid isPermaLink="true">https://zenn.dev/codek2/books/bdd7d6cc04e5c2</guid><pubDate>Sun, 08 Jun 2025 04:03:02 GMT</pubDate><dc:creator>コード日和（びより）</dc:creator></item><item><title><![CDATA[【基本の型】jQueryの安全で使い回せる雛形テンプレート]]></title><description><![CDATA[
 はじめに
ちょっとしたDOM操作やイベント処理をjQueryで書こうと思ったときに「どんな書き方だっけ？」と手が止まること、ありませんか？
自分も毎回ググったり、過去のコードをコピペして持ってきたり・・・
この記事はそんな自分への備忘録＆戒めとして、jQueryの安全で使い回せる雛形コードを紹介します。

 「まだjQuery使ってるの？」なんて言わないで
確かに最近ではReactやVueなどのモダンフレームワークが主流ですが、
うちの現場ではまだガッツリ現役というケースも意外と多いんです。
そんな現場でこそ、雛形のひとつくらいは手元にあるとラクになります。

 なぜ雛形が必要？
j...]]></description><link>https://zenn.dev/akky709/articles/d80648b4152d80</link><guid isPermaLink="true">https://zenn.dev/akky709/articles/d80648b4152d80</guid><pubDate>Sun, 08 Jun 2025 03:00:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8nPrS_4K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E5%259E%258B%25E3%2580%2591jQuery%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E5%259B%259E%25E3%2581%259B%25E3%2582%258B%25E9%259B%259B%25E5%25BD%25A2%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akky%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akky</dc:creator></item><item><title><![CDATA[JavaScriptでABC409(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc409

 A - Conflict
https://atcoder.jp/contests/abc409/tasks/abc409_a
連番配列とArray#some()でいいかぁ
https://atcoder.jp/contests/abc409/submissions/66505055
1分43秒 AC!

 B - Citation
https://atcoder.jp/contests/abc409/tasks/abc409_b
どの数字が何個あるかをメモって、最大値から1引きながら合計個数を数えればいいかな〜
h...]]></description><link>https://zenn.dev/aya_koto/articles/f769495a2846c4</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/f769495a2846c4</guid><pubDate>Sat, 07 Jun 2025 13:53:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T_jIYn18--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC409%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[TypeScript入門：関数の型定義～配列操作について]]></title><description><![CDATA[
 はじめに
最近はAIコーディングばかりで、自身の基礎的な理解が曖昧になっていると感じることがありました。そこで本記事では、自身の知識を整理し、理解を深める目的で、TypeScriptの要点をできるだけかみ砕いてアウトプットとしてまとめます。

 1.引数と戻り値の基本
JavaScriptでも関数はたくさん使っていましたが、TypeScriptではもっと厳密に、そして安全に関数を扱えます。

 ポイント
ポイントは、引数（関数に渡すデータ）と戻り値（関数から返ってくるデータ）それぞれに、「君のデータの種類はこれだよ」と型を決めてあげることでした。これを最初にやっておくと、後で全然違う...]]></description><link>https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</link><guid isPermaLink="true">https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</guid><pubDate>Sat, 07 Jun 2025 02:01:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cTOB812w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25EF%25BD%259E%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%25A7%25E6%259C%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MTAwYTVmYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碧月</dc:creator></item></channel></rss>