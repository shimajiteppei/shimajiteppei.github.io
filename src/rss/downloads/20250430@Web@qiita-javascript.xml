<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/javascript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/javascript/feed"/>
  <title>JavaScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaScriptタグが付けられた新着記事</description>
  <updated>2025-04-30T18:49:20+09:00</updated>
  <link>https://qiita.com/tags/javascript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2020109</id>
    <published>2025-04-30T18:49:20+09:00</published>
    <updated>2025-04-30T18:49:20+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/arunbababa/items/0e8869ef98b84a130c82"/>
    <url>https://qiita.com/arunbababa/items/0e8869ef98b84a130c82</url>
    <title>ネストされたオブジェクトの分割代入(react-hook-formでの利用例も紹介)</title>
    <content type="html">基本：オブジェクトの分割代入
オブジェクトはキー名で指定して取り出す必要があります。順番は関係ありません。
const obj = { foo: 100, bar: 200 };
const { f…</content>
    <author>
      <name>arunbababa</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2020077</id>
    <published>2025-04-30T17:50:32+09:00</published>
    <updated>2025-04-30T17:53:00+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/KajizukaTaichi/items/d9982ac86132e066ebd0"/>
    <url>https://qiita.com/KajizukaTaichi/items/d9982ac86132e066ebd0</url>
    <title>関数型信者がJavaScriptでも生き残るテクニック</title>
    <content type="html">関数型信者の私がJSで関数型っぽく書いてる手法を纏めてみました。
変数定義にletではなくconstを使う
関数型言語ではイミュータブルが常識なので
let hoge = 1 + 2;

const …</content>
    <author>
      <name>KajizukaTaichi</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2020074</id>
    <published>2025-04-30T17:48:04+09:00</published>
    <updated>2025-04-30T17:48:04+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Haru_K0720/items/9cf567c7e729fa220734"/>
    <url>https://qiita.com/Haru_K0720/items/9cf567c7e729fa220734</url>
    <title>半加算器</title>
    <content type="html">Paizaの問題解いてたら、足し算をゴリ押しするより論理演算使ったほうがカッコいいじゃんって気づきました。
📝 問題概要
0 か 1 の整数 A , B が与えられる。
A + B の2進表記で
下…</content>
    <author>
      <name>Haru_K0720</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2020018</id>
    <published>2025-04-30T16:09:25+09:00</published>
    <updated>2025-04-30T16:09:25+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tomato_otamoT/items/b0b5379958dbb614ccd5"/>
    <url>https://qiita.com/Tomato_otamoT/items/b0b5379958dbb614ccd5</url>
    <title>TypeScriptで判別可能ユニオンを活用する</title>
    <content type="html">1. 判別可能ユニオンとは？
判別可能ユニオン とは、複数の異なる構造を持つ型をまとめて扱うためのパターンで、それぞれの型に共通の「判別子」プロパティを持たせることで、どの型かを一意に識別できるよう…</content>
    <author>
      <name>Tomato_otamoT</name>
    </author>
  </entry>
</feed>
