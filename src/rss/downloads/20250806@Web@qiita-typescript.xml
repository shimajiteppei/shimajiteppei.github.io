<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-08-06T19:32:35+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2063725</id>
    <published>2025-08-06T19:32:35+09:00</published>
    <updated>2025-08-06T19:32:35+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/engineer__desu/items/06c9f0482ba85782d452"/>
    <url>https://qiita.com/engineer__desu/items/06c9f0482ba85782d452</url>
    <title>変数の再代入が好まれない理由</title>
    <content type="text">はじめに
プログラミングにおいて「変数の再代入を避けるべき」という考え方は、特に関数型プログラミングやモダンなJavaScript/TypeScriptのコーディングスタイルでよく見られます。本記事では、その理由と利点を解説します。

再代入とは？
let x = 10;...</content>
    <author>
      <name>engineer__desu</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2063502</id>
    <published>2025-08-06T11:06:56+09:00</published>
    <updated>2025-08-06T12:00:31+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Jochun/items/c137357a107870812c3a"/>
    <url>https://qiita.com/Jochun/items/c137357a107870812c3a</url>
    <title>[React][Hooks] `useEffect` + `setTimeout` + `clearTimeout` の使い方</title>
    <content type="text">概要

Reactアプリケーションで、副作用の管理や非同期処理のタイミング制御に欠かせない useEffect フックを紹介

setTimeout を組み合わせることで、一定時間後に実行される処理を実装できる

初回マウント時の処理、クリーンアップ処理、状態変化に応じた...</content>
    <author>
      <name>Jochun</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2063415</id>
    <published>2025-08-06T06:02:27+09:00</published>
    <updated>2025-08-06T06:02:27+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tomomitsu_Keruma/items/4912f4b404d26d6f6cfe"/>
    <url>https://qiita.com/Tomomitsu_Keruma/items/4912f4b404d26d6f6cfe</url>
    <title>【商品管理システムの開発】編集・削除機能の実装</title>
    <content type="text">コード

ProductList.tsx
"use client";

//Next.js App Router でクライアント側で動作することを明示します（useState などを使うために必要）。
//getDocs: 一覧取得用
//deleteDoc: ドキュメン...</content>
    <author>
      <name>Tomomitsu_Keruma</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2063361</id>
    <published>2025-08-06T00:29:17+09:00</published>
    <updated>2025-08-06T00:29:37+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/signo/items/1f43946a4d030a9b062c"/>
    <url>https://qiita.com/signo/items/1f43946a4d030a9b062c</url>
    <title>【React Native】Expoテンプレートのgitignoreの中身はどこで確認できる？</title>
    <content type="text">Expoで新規プロジェクトを作成後、うっかり .gitignore の内容をいじってしまった…
元に戻したい…

先日、上のような場面があったのだが、公式でしっかり公開されている場所があったので、備忘として書いておく。

.gitignoreのテンプレートファイル
Exp...</content>
    <author>
      <name>signo</name>
    </author>
  </entry>
</feed>
