<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2024-11-08T20:59:06+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1933634</id>
    <published>2024-11-08T20:59:06+09:00</published>
    <updated>2024-11-08T20:59:06+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nakano_kunren/items/7e9cf372ab9bcdfd9be3"/>
    <url>https://qiita.com/nakano_kunren/items/7e9cf372ab9bcdfd9be3</url>
    <title>Java のクラスやメンバーにおけるアクセス修飾子</title>
    <content type="html">1. アクセス修飾子の概要
クラス・インターフェイスに使える修飾子

無指定：同じパッケージ内からのみアクセス可能。
public：異なるパッケージからもアクセス可能。

メンバー（フィールド・メソッド…</content>
    <author>
      <name>nakano_kunren</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1933604</id>
    <published>2024-11-08T19:18:30+09:00</published>
    <updated>2024-11-08T19:18:30+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/torikawa/items/a69f761d8088a34de37a"/>
    <url>https://qiita.com/torikawa/items/a69f761d8088a34de37a</url>
    <title>クラスとインターフェースの違いをちゃんと理解する</title>
    <content type="html">はじめに
デザインパターンの勉強をしていてこんなことを思いました。
「抽象クラス」と「インターフェース」の違いってなんだ？
どう使い分けしたらいいんだろう？
インターフェースっていらなくね？
以上を…</content>
    <author>
      <name>torikawa</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1933416</id>
    <published>2024-11-08T10:36:21+09:00</published>
    <updated>2024-11-08T10:36:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/ShamNeko88/items/4c13e63da2b301624591"/>
    <url>https://qiita.com/ShamNeko88/items/4c13e63da2b301624591</url>
    <title>中間コード方式について簡単に</title>
    <content type="html">概要

コンパイラ方式とインタープリタ方式の中間的な方法
言語特有の環境用機械語にコンパイルし、実行時に逐次実行か機械語に翻訳後実行される
Java、Pythonで採用

この方式の特徴と利点

コンパイ…</content>
    <author>
      <name>ShamNeko88</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1933385</id>
    <published>2024-11-08T06:56:29+09:00</published>
    <updated>2024-11-08T07:40:50+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yorkgril6511/items/34b725a83b884c7dc753"/>
    <url>https://qiita.com/yorkgril6511/items/34b725a83b884c7dc753</url>
    <title>私がJavaプロジェクトが嫌いな7つの理由</title>
    <content type="html">Java vs Kotlin: 7つの違いとコード例、比較表
JavaとKotlinの違いを比較しながら、Javaにおける課題とKotlinが提供する解決策について解説します。

1. 冗長なコード
…</content>
    <author>
      <name>yorkgril6511</name>
    </author>
  </entry>
</feed>
