<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 03 Nov 2024 10:51:07 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Eclipseでクラス図やシーケンス図を自動生成]]></title><description><![CDATA[1.EclipseにPlantUMLとGraphvizをインストール
https://youtu.be/kohZ4XTA6gY?feature=shared
2.以下の記事でPlantUMLに記述するテキストを作成
https://bocek.co.jp/media/formula/development/568/
]]></description><link>https://zenn.dev/codek2/articles/4f46a885313925</link><guid isPermaLink="true">https://zenn.dev/codek2/articles/4f46a885313925</guid><pubDate>Sun, 03 Nov 2024 08:47:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TDKKvLAy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Eclipse%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%259B%25B3%25E3%2582%2584%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%25B3%25E3%2582%25B9%25E5%259B%25B3%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Udemy%25E3%2583%25BB%25E4%25BC%2581%25E6%25A5%25AD%25E3%2583%25BB%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWJNcXYyNnJHY2xGVDEtOURITHVZTjhrWUpWOVN1aTJWYmxkNU9aejljTmtNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Udemy・企業・オンラインプログラミングスクール講師♪codek2</dc:creator></item><item><title><![CDATA[これでソースコード リーディングが捗る! OpenGrok の構築方法]]></title><description><![CDATA[
 Opengrok とは
OpenGrok は主にソースコードの検索ツールとして使用されています。OpenGrok はソースコード検索および相互参照エンジンで Java で書かれているオープンソースのプロジェクトです。
どんな感じか見てみたい方はこちらのページにあるアクセス可能な OpenGrok サイトがありますので、検索を試してみてください!

 構築する前に...
今回は Docker を使用します!
下記はすでにインストールされているものとして進めていきます。

Docker
Docker Compose


 構築方法(Docker)
基本的には公式の Github に記載が...]]></description><link>https://zenn.dev/apo_space81/articles/deab4ed1ad5d35</link><guid isPermaLink="true">https://zenn.dev/apo_space81/articles/deab4ed1ad5d35</guid><pubDate>Sun, 03 Nov 2024 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4-9iDr81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2582%258C%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2520%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%258C%25E6%258D%2597%25E3%2582%258B%2521%2520OpenGrok%2520%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pkaiy81%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2puOVNTNmxJd0xqNGpXclgzWlEyTHhIMUJBWE16Z1duRFJNcGRLeXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pkaiy81</dc:creator></item><item><title><![CDATA[ISITDTU CTF 2024 - web writeup]]></title><description><![CDATA[
先週末はISITDTU CTFに参加しまして、Web問題が2/7問しか解けず残念な結果となってしまいました。あまり時間取れなかったり、友人とCryptoにチャレンジしてたり、あと開催時間を勘違いしていたりと言い訳はできるものの、実力不足が一番の原因であることは変わらなそうです...
解いた問題2問 + 時間内にチャレンジした問題のupsolve2問のwriteupです。

 ✅ Another one (100pts 103/315solves クリア率33%)
ユーザーを作成できる/registerがある。ユーザー名・パスワードに加えてroleが付与されるが、これがadminだと後述...]]></description><link>https://zenn.dev/tchen/articles/e475ddef8c6608</link><guid isPermaLink="true">https://zenn.dev/tchen/articles/e475ddef8c6608</guid><pubDate>Fri, 01 Nov 2024 15:53:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kNJcFNF4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:ISITDTU%2520CTF%25202024%2520-%2520web%2520writeup%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-chen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndGbmw3UUNSVkZRdDdIRXpZYm84alBZQW0xYzhXTXhUc0c2UkgzMXRjV3NsMll3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-chen</dc:creator></item><item><title><![CDATA[Embulkを使ってMS Accessのデータを取得する方法]]></title><description><![CDATA[
 概要
Embulkのembulk-input-jdbcを使ってMS Accessのデータを取得する方法を記載します。

 環境

embulk 0.11.5
openjdk 11.0.24 2024-07-16
embulk-input-jdbc 0.13.2


 取得方法
MS Access用のJDBCドライバとしてUCanAccessというドライバが公開されている(最近フォークでGithubにもライブラリが公開されていた。Java11以降サポートとのこと)。このJDBCドライバとEmbulkを組み合わせてアクセスできないか実験しました。
UCanAccessはUCanacces...]]></description><link>https://zenn.dev/hashiba/articles/embulk-connects-msaccess</link><guid isPermaLink="true">https://zenn.dev/hashiba/articles/embulk-connects-msaccess</guid><pubDate>Fri, 01 Nov 2024 13:12:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tdwHvi4J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Embulk%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6MS%2520Access%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinichi%2520Hashiba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUGxmME5PSUREUHNlRXVodU1ZYm5JeTlhcUluaVRuV3plbThYZlE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shinichi Hashiba</dc:creator></item><item><title><![CDATA[EchoAPI for IntelliJ IDEA: Java開発者のためのAPI管理を強化するプラグイン]]></title><description><![CDATA[現代のソフトウェア開発において、API管理はますます重要性を増しています。Java開発者にとって、強力なAPI管理プラグインは開発効率を大幅に向上させ、Postmanのような重いデスクトップツールをダウンロードすることなく、ワークフローを簡素化できます。ここでは、Java開発者向けに特別に設計されたツール—EchoAPI for IntelliJ IDEAをご紹介します。

 EchoAPI for IntelliJ IDEAの紹介
EchoAPIは、API設計、デバッグ、そして自動テストをサポートする多機能なAPI管理ツールです。特にIntelliJ IDEA用に設計されたプラグインと...]]></description><link>https://zenn.dev/rokuinu/articles/76321cd127ffd0</link><guid isPermaLink="true">https://zenn.dev/rokuinu/articles/76321cd127ffd0</guid><pubDate>Fri, 01 Nov 2024 11:19:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--12rwDbBY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:EchoAPI%2520for%2520IntelliJ%2520IDEA%253A%2520Java%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAPI%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E5%25BC%25B7%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Rokuinu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkZDY0M2MzZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Rokuinu</dc:creator></item><item><title><![CDATA[JJUG CCC 2024 Fall 参加、登壇レポート]]></title><description><![CDATA[
 はじめに
2024年10月27日に日本Javaユーザーグループによって開催されました、JJUG CCC 2024 Fallに参加し1つのセッションに登壇してきました。
イベントのホームページでは概要として以下のように紹介されています。
https://ccc2024fall.java-users.jp/

開催概要


JJUG CCCは日本最大のJavaコミュニティイベントです。Java関連の技術や事例に関する良質なセッションが行われ、また異なる分野で活躍するJava技術者が一堂に会する場ともなっています。オフラインでの開催になります。

今回はオフラインでの開催となり、場所はベル...]]></description><link>https://zenn.dev/muit_techblog/articles/bd5553306947f5</link><guid isPermaLink="true">https://zenn.dev/muit_techblog/articles/bd5553306947f5</guid><pubDate>Fri, 01 Nov 2024 07:57:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ekQAsqQD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JJUG%2520CCC%25202024%2520Fall%2520%25E5%258F%2582%25E5%258A%25A0%25E3%2580%2581%25E7%2599%25BB%25E5%25A3%2587%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%25AB%2599%25E6%25A9%258B%2520%25E5%258D%259A%25E5%25AE%259F%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxZGYyYTRkNjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E4%25B8%2589%25E8%258F%25B1UFJ%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2583%2586...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3OWQyODE1MTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>髙橋 博実</dc:creator></item><item><title><![CDATA[Spring Bootの基本]]></title><description><![CDATA[
 SpringBoot基本構成


 1. コントローラー (Controller)
役割
HTTPリクエストを処理し、ビジネスロジックを呼び出し、レスポンスを返します。
例
UserController

 2. モデル (Model)
役割
データベースのエンティティやビジネスデータを表します。通常、クラスとして定義され、データの構造を定義します。
例
User（ユーザーの属性を持つクラス）

 3. リポジトリ (Repository)
役割
データの永続化を管理します。データベースとのインタラクションを担当します。
例
UserRepository（ユーザー情報のCRUD操作を...]]></description><link>https://zenn.dev/sanagi/articles/8645926a7679f8</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/8645926a7679f8</guid><pubDate>Wed, 30 Oct 2024 14:32:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bMoqRImr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Spring%2520Boot%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item><item><title><![CDATA[java標準・Spring Boot アノテーションを図解で学ぶ]]></title><description><![CDATA[【java標準】
■ @Override
@Overrideは、親クラスやインターフェースのメソッドをサブクラスでオーバーライドしていることを明示します。
::::図解
!
   親クラス（またはインターフェース）
             │
             ▼

┌────────────────────────────┐
│  public void greet() {       │
│      // 親クラスの処理        │
│      System.out.println("Hello from Parent!"); │
│  }            ...]]></description><link>https://zenn.dev/engineer38/articles/139c28be84258d</link><guid isPermaLink="true">https://zenn.dev/engineer38/articles/139c28be84258d</guid><pubDate>Wed, 30 Oct 2024 08:28:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eTFitsOi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:java%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25BBSpring%2520Boot%2520%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%259B%25B3%25E8%25A7%25A3%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:engineer38%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0MzE0YzlmZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>engineer38</dc:creator></item><item><title><![CDATA[オートボクシングについて]]></title><description><![CDATA[
 オートボクシングとは
プリミティブ型（int、double、booleanなど）を対応するラッパークラス（Integer、Double、Booleanなど）に自動的に変換する機能のこと。
逆に、ラッパークラスをプリミティブ型に自動変換することをアンボクシング（unboxing）と呼ぶ。
オートボクシングはコードの可読性を向上させるために使ったりするが、
パフォーマンス面で注意が必要。

 パフォーマンスへの影響
色々調べた感じだと以下の点でパフォーマンスへの影響がありそう。

 追加のオブジェクト生成
オートボクシングではプリミティブ型をラッパークラスに変換する際、
追加のオブジェク...]]></description><link>https://zenn.dev/zenn_rr/articles/b90f8e319121dc</link><guid isPermaLink="true">https://zenn.dev/zenn_rr/articles/b90f8e319121dc</guid><pubDate>Tue, 29 Oct 2024 13:51:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xv3Ez6zB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259C%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NWNhMDI0NzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sto</dc:creator></item><item><title><![CDATA[Java Goldへの道]]></title><description><![CDATA[Java11のGold取得に向けた勉強時間と勉強方法、使用した参考書などの備忘録となります。
【前提】
自身経歴も載せておきます。
・IT関連の職歴
　17年
・担当業務
　管理から上流、下流まで幅広く。最初の3年ぐらいは詳細設計から開発が多い。
　その後は管理や上流が多くなった。
携わった案件はJavaが多いです。ちなみにSilverは2015年に取得したので、Javaの資格勉強は9年ぶり。
【本題】
SilverはJava7だったため、Javaの新しい技法を勉強する目的で資格取得にチャレンジしました。
・勉強期間
　4カ月（最初の2カ月は30分/1日。次の1カ月は60分/1日、ラスト...]]></description><link>https://zenn.dev/tafuo/articles/fbb800eb4e51ca</link><guid isPermaLink="true">https://zenn.dev/tafuo/articles/fbb800eb4e51ca</guid><pubDate>Mon, 28 Oct 2024 15:09:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XosJ92hz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Java%2520Gold%25E3%2581%25B8%25E3%2581%25AE%25E9%2581%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%2595%25E3%2581%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZDhINUFUWUJYN2ZwdmpNVGFKdWxfTGtQVjE0V0VFeTRoSGR4YlY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おさふ</dc:creator></item><item><title><![CDATA[Java 超入門　〜２〜]]></title><description><![CDATA[
 演算子
class Calculation{
  public static void main(String[] args){
    int x = 10;
    int y = 2;

    System.out.println(x + y);
    System.out.println(x - y);
    System.out.println(x * y);
    System.out.println(x / y);
    System.out.println(x % y);
  }
}

コンパイルして実行。

 関係演算子
２つの値の関係が
正しい　又は　正...]]></description><link>https://zenn.dev/azukidayo/articles/57c0ac99074ac9</link><guid isPermaLink="true">https://zenn.dev/azukidayo/articles/57c0ac99074ac9</guid><pubDate>Mon, 28 Oct 2024 08:43:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ougnAap0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2580%25E3%2580%259C%25EF%25BC%2592%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:azuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2YTFiMDlmMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>azuki</dc:creator></item><item><title><![CDATA[[Java] ジェネリック(1) ジェネリック文法を使用する理由]]></title><description><![CDATA[

 ジェネリック文法
ジェネリックプログラミングは、データ型に依存せず、1つの値が複数の異なるデータ型を持つことができる技術に重点を置くことで再利用性を高めることができるプログラミング方式です。

 ジェネリック登場以前のコーディング方式と問題点

なんでも保存できて使える「ドラえもんなんでもボックス」を作るクラスを作成する
クラス名　: BeforeBox

//BeforeBox Class : どんなデータでも入れたり出したりできる箱
public class BeforeBox {
   private Object obj;


   //どんなデータでも保存できるメソッド
...]]></description><link>https://zenn.dev/hyoni/articles/fad193e999521e</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/fad193e999521e</guid><pubDate>Mon, 28 Oct 2024 01:07:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QSzFJsow--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJava%255D%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25281%2529%2520%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E6%2596%2587%25E6%25B3%2595%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[No connection to gradle server. Try restarting the server. が出た時の対処法]]></title><description><![CDATA[
 Gradleサーバーとの接続に問題？

今回のエラーは、Gradleサーバーとの接続に問題が発生したことを示しており、これは通常、ネットワーク接続、Gradleのキャッシュ、またはIDEの設定に関連する問題みたいです。
私の場合、IDEの設定に問題があったみたいでして、java関連のソフトをインストールをしたらビルドできました。

 インストールしたソフト
・Extension Pack for Java
・Gradle for Java


 終わりに
ビルドするのにGradleサーバーとやらに毎回接続しているっぽい？よくわかっておりませんが解決できました。
参考にした記事は下記に...]]></description><link>https://zenn.dev/hikarugp24/articles/ffff7d52beb43d</link><guid isPermaLink="true">https://zenn.dev/hikarugp24/articles/ffff7d52beb43d</guid><pubDate>Sat, 26 Oct 2024 12:50:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RMzOvV8r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:No%2520connection%2520to%2520gradle%2520server.%2520Try%2520restarting%2520the%2520server...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hikarugp24%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwMDBkZTQxOTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hikarugp24</dc:creator></item><item><title><![CDATA[Javaの強みを徹底解説③：ガベージコレクション]]></title><description><![CDATA[こんにちは NSS の江口と申します。前回の記事（JITコンパイラ）に引き続きJavaの話となります。
今回は ガベージコレクション について話していこうと思います。前回と同様に今回記載している内容はJava21に準拠しています。

 ガベージコレクションとは

Heap領域内に確保されたメモリを自動的に解放する仕組みです。誰からも参照されなくなったメモリを対象にします。
現在の多くのプログラミング言語では当たり前にサポートされていることが多いです。（贅沢ですね。）

 ガベージコレクションの種類
では具体的にどうやってメモリを片付けるのかという話ですが、これという一つに決まっているわけ...]]></description><link>https://zenn.dev/nss_fs_eng/articles/c39ea03c8d052a</link><guid isPermaLink="true">https://zenn.dev/nss_fs_eng/articles/c39ea03c8d052a</guid><pubDate>Thu, 24 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MTWaokai--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E5%25BC%25B7%25E3%2581%25BF%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E2%2591%25A2%25EF%25BC%259A%25E3%2582%25AC%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B3%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NSS%2520%25E9%2587%2591%25E8%259E%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjk2ODBmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NSS 金融エンジニアリンググループ</dc:creator></item><item><title><![CDATA[Tomcatのデフォルトページを非表示にしたい]]></title><description><![CDATA[
 はじめに
Tomcatのインストール・初期設定を行い、アクセスしたところデフォルトページ（ウェルカムページ）が表示されていました。
ユーザ側にTomcat使っていることがモロバレでセキュリティ上もあまりよろしくないし、何より格好悪いので非表示にしたいと思います。

 環境

OS : Ubuntu
Tomcat : 9.0.58


 結論
表示元のindex.htmlを空にするだけ！

 やり方

バックアップファイルを作成する
htmlファイルは/var/lib/tomcat9/webapps/ROOT/index.htmlにありました。

cp /var/lib/tomcat9...]]></description><link>https://zenn.dev/boku_uchujin/articles/dc68a8ebce1f15</link><guid isPermaLink="true">https://zenn.dev/boku_uchujin/articles/dc68a8ebce1f15</guid><pubDate>Thu, 24 Oct 2024 14:01:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EJ5meyIv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tomcat%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E9%259D%259E%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:boku_uchujin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYWQ4MmM5YjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>boku_uchujin</dc:creator></item><item><title><![CDATA[【Java / SpringBoot】Dockerfileから作られたイメージをもとにコンテナを起動し疎通確認を行うまでの流れ]]></title><description><![CDATA[
 はじめに
この記事では、簡単なSpringBootアプリをdockerで動かす方法や、その際に使用するdockerコマンドなど、疎通確認までに必要な内容を記載しています。

 この記事の対象者
・Dockerについてあまり知らない方、もしくは知識を深めたい方
・SpringBootアプリでdockerコンテナを作成してみたい方
・最近Dockerに触れておらず、復習も兼ねて確認したい方

 開発環境
・Java 21
・SpringBoot 3.3.4
・macOS 14.6.1
・Eclipse_2024-06

 そもそもDockerとは
ソフトウェアの開発やデプロイを効率化する...]]></description><link>https://zenn.dev/keita09/articles/0b09fbcb9ad3c3</link><guid isPermaLink="true">https://zenn.dev/keita09/articles/0b09fbcb9ad3c3</guid><pubDate>Wed, 23 Oct 2024 16:04:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yTjGNn-3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%2520%252F%2520SpringBoot%25E3%2580%2591Dockerfile%25E3%2581%258B%25E3%2582%2589%25E4%25BD%259C%25E3%2582%2589%25E3%2582%258C%25E3%2581%259F%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E7%2596%258E%25E9%2580%259A%25E7%25A2%25BA%25E8%25AA%258D%25E3%2582%2592%25E8%25A1%258C...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjZGUxZTY1NTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keita</dc:creator></item><item><title><![CDATA[Javaを勉強してみたPart2]]></title><description><![CDATA[
 前回からの続き・・・
・今回はオブジェクト指向的な考え方を勉強してみた
・PythonやC#で既になんとなくは知ってるのでちょっと飛ばし気味
!
more
「文字列をInt型に変換」
int i = Integer.parseInt(文字列);
「文字列をDouble型に変換」
double i = Integer.parseDouble(文字列);


 メソッド
・一言で「処理する関数的なもの」

 オーバーロード
・存在しているメソッドと名前が同じメソッドを宣言すること。
・引数の個数で判別する
具体的に…
【メソッド名・引数の型・引数の個数】この３つ（シグネチャ）の要素が考慮...]]></description><link>https://zenn.dev/picaneru/articles/f1de28dfbe8125</link><guid isPermaLink="true">https://zenn.dev/picaneru/articles/f1de28dfbe8125</guid><pubDate>Wed, 23 Oct 2024 14:05:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O7iHU9l---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259FPart2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Picaneru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpZU0J1MnpyQ2dKdE5RazdabjByWnVRREowSmczZU1JNkJDbmhOREtxWWVVVF93PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Picaneru</dc:creator></item><item><title><![CDATA[自分用　Javaの予約語]]></title><description><![CDATA[abstract: 抽象クラスや抽象メソッドを定義するために使用される。
assert: プログラムの実行時に条件をチェックし、条件が偽の場合にエラーを発生させるために使用される。
boolean: 真理値（true または false）を表すデータ型。
break: ループや switch 文を終了するために使用される。
byte: 8ビットの整数を表すデータ型。
case: switch 文の各選択肢を定義するために使用される。
catch: 例外を捕捉するためのブロックを定義するために使用される。
char: 16ビットのUnicode文字を表すデータ型。
class: 新しいクラ...]]></description><link>https://zenn.dev/sanagi/articles/cd88e4f2f80b50</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/cd88e4f2f80b50</guid><pubDate>Wed, 23 Oct 2024 13:36:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KZxazI0s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2580%2580Java%25E3%2581%25AE%25E4%25BA%2588%25E7%25B4%2584%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item><item><title><![CDATA[Javaの強みを徹底解説②：JITコンパイラ]]></title><description><![CDATA[こんにちは NSS の江口と申します。前回の記事（Javaの強みを徹底解説①：Javaのいいところ） に引き続きJavaの話となります。
今回はJITコンパイラについて話していこうと思います。
なお、今回記載している内容は Java21 に準拠しております。

 JITコンパイラとは
JIT とは Just In Time の略で言葉の通り 必要に応じたコンパイラ という意味になります。
Javaもいわゆるコンパイル言語なのですが、Write once, run anywhereを実現するために以下のようにコンパイルコードから動的にネイティブコードによる実行に変換しています。

コンパイ...]]></description><link>https://zenn.dev/nss_fs_eng/articles/70a969eb51969b</link><guid isPermaLink="true">https://zenn.dev/nss_fs_eng/articles/70a969eb51969b</guid><pubDate>Tue, 22 Oct 2024 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6Av2rB24--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E5%25BC%25B7%25E3%2581%25BF%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%25E2%2591%25A1%25EF%25BC%259AJIT%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NSS%2520%25E9%2587%2591%25E8%259E%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjk2ODBmZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NSS 金融エンジニアリンググループ</dc:creator></item><item><title><![CDATA[Spring boot 検索]]></title><description><![CDATA[
 Spring bootで検索処理を実装する際に調べたものをメモ

 1. 動的にSQLを生成する場合
使用ケース
検索条件が可変で、複雑な条件を動的に追加する必要がある場合。
使用技術
Criteria API: プログラム的にクエリを構築。
利点
柔軟性が高く、条件を自由に変更できる。
コンパイル時に型安全が確保される。

// CriteriaBuilderを使用してクエリを作成するためのビルダーオブジェクトを取得
CriteriaBuilder cb = entityManager.getCriteriaBuilder();

// Jobエンティティを対象にしたクエリオブジェ...]]></description><link>https://zenn.dev/sanagi/articles/14c44118acca55</link><guid isPermaLink="true">https://zenn.dev/sanagi/articles/14c44118acca55</guid><pubDate>Tue, 22 Oct 2024 14:30:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BtqODPKE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Spring%2520boot%2520%25E6%25A4%259C%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSloxbTF6Yk1RWXZKamJMSDZ6WmFtMHFzRm9KNHhGSGI0X2RKcU1uT2dWc3pLZ2dKdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sanagi</dc:creator></item></channel></rss>