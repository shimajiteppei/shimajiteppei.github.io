<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 19 Sep 2025 09:50:56 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Atlas + Prismaで実現するTypeScript環境における安全で堅牢な宣言的マイグレーション]]></title><description><![CDATA[
 はじめに
以前、Go製のマイグレーションツールであるAtlasについての紹介記事を書きました。
https://zenn.dev/jy8752/articles/f9fda2379b57f5
Atlasは従来のupとdownのマイグレーションスクリプトを開発者が書くバージョン管理型のマイグレーションではなく、DBの理想状態を宣言的に記述することでスキーマを反映することができる宣言的マイグレーションを実現しています。宣言的なプログラミングは昨今の技術トレンドのように個人的には感じており、k8sやTerraformといった技術も理想の状態を宣言的に記述しその状態に近づけるといったアプロー...]]></description><link>https://zenn.dev/jy8752/articles/bf4bbed1468f6c</link><guid isPermaLink="true">https://zenn.dev/jy8752/articles/bf4bbed1468f6c</guid><pubDate>Fri, 19 Sep 2025 07:29:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--orDJKmCr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atlas%2520%252B%2520Prisma%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BTypeScript%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25A7%25E5%25A0%2585%25E7%2589%25A2%25E3%2581%25AA%25E5%25AE%25A3%25E8%25A8%2580%25E7%259A%2584%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B1%25E3%2582%2593%25E3%2581%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMTY5Zjg2NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぱんだ</dc:creator></item><item><title><![CDATA[【React修行日記】useState の型付けと初期値]]></title><description><![CDATA[
 学習の目的

useState の型推論と型指定の違いを理解する
null や undefined を扱う場合の型付け方法を学ぶ
イベントオブジェクトを使うときに型を安全に指定する方法を知る
簡単なカウンターアプリを型安全に実装できる


 useState とは
useStateはReactで使用するフックの一つで、コンポーネントの中で値を保存して更新できる仕組み。
更新すると自動で画面が再描画される。
import { useState } from 'react';

const [hoge, setHoge] = useState(initialState)
基本的な使い方は...]]></description><link>https://zenn.dev/tsunadog/articles/97592ae32ffd0d</link><guid isPermaLink="true">https://zenn.dev/tsunadog/articles/97592ae32ffd0d</guid><pubDate>Fri, 19 Sep 2025 06:50:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NWU4Oi5i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E4%25BF%25AE%25E8%25A1%258C%25E6%2597%25A5%25E8%25A8%2598%25E3%2580%2591useState%2520%25E3%2581%25AE%25E5%259E%258B%25E4%25BB%2598%25E3%2581%2591%25E3%2581%25A8%25E5%2588%259D%25E6%259C%259F%25E5%2580%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsunadog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZDZiMjViNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsunadog</dc:creator></item><item><title><![CDATA[TypeScriptで学ぶオプショナルチェーン(?.)の使い方]]></title><description><![CDATA[
 はじめに
JavaScript / TypeScriptを書いていると、
「オブジェクトの深いプロパティを参照したら undefined が返ってエラーになった」
という経験はありませんか？
そんなときに役立つのが オプショナルチェーン(Optional Chaining) です。

 オプショナルチェーンとは？
オプショナルチェーン(?.)は、オブジェクトのプロパティを安全に参照するための構文です。
通常の書き方だと、存在しないプロパティを参照するとエラーになります。
type User = {
  name: string;
  address?: {
    city: str...]]></description><link>https://zenn.dev/ket8/articles/0a9a683a9216fc</link><guid isPermaLink="true">https://zenn.dev/ket8/articles/0a9a683a9216fc</guid><pubDate>Fri, 19 Sep 2025 03:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gEx1o2Ks--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%25B3%2528%253F.%2529%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KET8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkZWE4MmFjMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KET8</dc:creator></item><item><title><![CDATA[Nuxt 4 で複数のサブサイトを1つのプロジェクトに統合する方法]]></title><description><![CDATA[企業のウェブサイト運営において、次のようなシナリオは珍しくありません。
会社のメイン事業を公式サイトで展開しつつ、複数のサブ事業をサブサイトとして運営するケースです。
SEO や デザインガイドライン の観点から、これらのサブサイトはヘッダーやフッターの構成を共通化するなど、スタイルの統一が求められます。例えば以下のような実例があります：

lp.work.can-ly.com
ai-interview.can-ly.com

このような場合、仮に4つのサブサイトをそれぞれ独立したリポジトリ／プロジェクトで構築すると、同じスタイルコードを4回コピーする必要があり、修正のたびにすべてのプロ...]]></description><link>https://zenn.dev/kogamitora/articles/f0d0945da30437</link><guid isPermaLink="true">https://zenn.dev/kogamitora/articles/f0d0945da30437</guid><pubDate>Fri, 19 Sep 2025 02:40:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CU0QOFK_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt%25204%2520%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%25921%25E3%2581%25A4%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%25E7%25B5%25B1%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kogamitora%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlQ3ZnVnNXVZaGQ5emhKWW9NT3hHbEJCNkJoVnAxLWJXSWVza1Y4dFdlcmhFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kogamitora</dc:creator></item><item><title><![CDATA[子ども向け学習アプリ開発ログ：勉強時間タイマーを実装する]]></title><description><![CDATA[子供向けなので、長時間利用を防ぐために 1セッションの学習時間制限 を導入しました。
「勉強開始」ボタンを押すとタイマーが動き、一定時間で終了する仕組みです。


 前回

ダッシュボードの学習状況を API経由で実データ読み込み

学習進捗を可視化するための KPI 定義



 今回

勉強時間タイマーを実装する



 ① TimeLimitSetting テーブル
ユーザーごとに「1セッションの学習時間」を保存するためのテーブルを作成しました。
デフォルトは20分に設定しています。
model TimeLimitSetting {
  id                Stri...]]></description><link>https://zenn.dev/hyoni/articles/3928744d299245</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/3928744d299245</guid><pubDate>Fri, 19 Sep 2025 01:35:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ugtQDReb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%2590%25E3%2581%25A9%25E3%2582%2582%25E5%2590%2591%25E3%2581%2591%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25AD%25E3%2582%25B0%25EF%25BC%259A%25E5%258B%2589%25E5%25BC%25B7%25E6%2599%2582%25E9%2596%2593%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[Tailwind CSSでz-index定数化したら効かない！？]]></title><description><![CDATA[
 はじめに
z-[60]みたいにz-indexをベタ書きしてたら、「これ、数が増えたときにどこの高さに何があるか絶対わからんくなるな…」って思ったんで、定数ファイルで一元管理しよう！
それで、className={`z-[${Z_INDEX.MODAL}]`}みたいにテンプレートリテラルでクラス名を組み立ててみたら、なぜかスタイルが全く適用されなくて...。z-[60]って直書きしてたときは動いてたのになんで！？ってハマってました。
この記事では、この現象がなぜ起こるのかとどうやって解決したかについて書いてます。


 結論：なぜスタイルが効かないのか
原因は、**「Tailwindの...]]></description><link>https://zenn.dev/nemuri/articles/b1e0ffed5feba7</link><guid isPermaLink="true">https://zenn.dev/nemuri/articles/b1e0ffed5feba7</guid><pubDate>Thu, 18 Sep 2025 14:59:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pRepg_SH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tailwind%2520CSS%25E3%2581%25A7z-index%25E5%25AE%259A%25E6%2595%25B0%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nemuri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwYzRiMzQ4YTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nemuri</dc:creator></item><item><title><![CDATA[機密情報や個人情報を流出させずに生成AIのアウトプットのコピペ判定ができる簡易チェックツールのMVPをVibeCodingして用意してみる]]></title><description><![CDATA[
 機密情報や個人情報を流出させずに生成AIのアウトプットのコピペ判定ができる簡易チェックツールのMVPをVibeCodingして用意してみる
ClaudeCode、Codex、GeminiCLIなどで社内向けコピペチェックツールを開発するためのプロンプト準備してみました。
このプロンプトで、機密情報を外部に送信しない安全な社内コピペチェックツールを開発できるかも知れないです。
後ほど各ツール毎で生成されたコードの使用感などを確認してGitHubでの公開を目指したいと思います
デモ環境も用意できれば要検討

 主な機能

 1. ElasticSearch統合


日本語形態素解析（ku...]]></description><link>https://zenn.dev/madaozaku/articles/ca7ee57a386080</link><guid isPermaLink="true">https://zenn.dev/madaozaku/articles/ca7ee57a386080</guid><pubDate>Thu, 18 Sep 2025 11:30:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NWL0Gm2E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E5%25AF%2586%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2584%25E5%2580%258B%25E4%25BA%25BA%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E6%25B5%2581%25E5%2587%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25AE%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%2597%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E7%25B0%25A1%25E6%2598%2593%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AEMVP%25E3%2582%2592VibeCo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:madaozaku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNzRjODhjOTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>madaozaku</dc:creator></item><item><title><![CDATA[Vercel AI SDK で、エージェントのメモリレイヤを組み込む]]></title><description><![CDATA[LayerX AI Agent ブログリレー 8 日目の記事です。
バクラク事業 CTO @yyoshiki41 です。
この記事では、AI エージェントでのメモリを Vercel AI SDK が提供するジェネリックなミドルウェア機構である Language Model Middleware を使って実装する方法を紹介します。

 Introduction
メモリレイヤは、AI エージェントの能力を拡張させる技術要素です。

Short-Term Memory, Long-Term Memory に分類され、以下のような整理が一般的です。いずれも環境情報やプロンプトとして扱われ、コンテ...]]></description><link>https://zenn.dev/layerx/articles/20e6478caf2e10</link><guid isPermaLink="true">https://zenn.dev/layerx/articles/20e6478caf2e10</guid><pubDate>Thu, 18 Sep 2025 08:27:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1lcI-ARi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520AI%2520SDK%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%25E3%2583%25AA%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yoshiki%2520Nakagawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2OTFlNjE4YzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LayerX%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4YTZlYTk2NzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiki Nakagawa</dc:creator></item><item><title><![CDATA[React プロジェクト構成について考えてみた]]></title><description><![CDATA[最近フロントエンドの技術を勉強していて、プロジェクトのフォルダ構成について自分なりに整理してみました。
まだ実務経験は浅く、一人で試行錯誤しながら進めているので「本当にこれでいいのかな？」という不安もあります。もし間違った考え方や実務ではあまりやらないやり方があれば、ぜひコメントで教えていただけると嬉しいです 🙏

 React プロジェクト構成
project-root/
├── public/                    # 静的アセット (アイコン、画像、フォント)
├── src/
│   ├── pages/                 # ルーティングに対応する...]]></description><link>https://zenn.dev/tetsufromtw/articles/2cb553fec5e1f3</link><guid isPermaLink="true">https://zenn.dev/tetsufromtw/articles/2cb553fec5e1f3</guid><pubDate>Thu, 18 Sep 2025 04:14:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y_CjA6mt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2586%25E3%2583%2584%25E3%2583%2587%25E3%2582%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW9jcWlMOFlUQ0JHbjlfbnpqaFo2ZmhoekdLb3pMMHlkbUlEdERQRUZvS2tKNEx3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>テツデス</dc:creator></item><item><title><![CDATA[neverthrowで実践する型安全エラーハンドリング]]></title><description><![CDATA[!
タイトルにもあるように本記事はエラーハンドリングに重きを置いています。
neverthrow に関する tips や関数型で記述する良さについてはまた別の機会に紹介するつもりです。


 はじめに
satto workspaceのプロダクトエンジニアをしている 滝口（@s_takiguchi）です。
早速ですが、TypeScriptでエラーハンドリングを行う際、try-catchを使うことが一般的である一方、これには以下のような課題があります。

エラーの型が不明確で、どんなエラーが発生するか関数シグネチャから読み取れない
エラーハンドリングの漏れが実行時まで発見できない
エラーの伝...]]></description><link>https://zenn.dev/satto_workspace/articles/a5fab3c95f9c93</link><guid isPermaLink="true">https://zenn.dev/satto_workspace/articles/a5fab3c95f9c93</guid><pubDate>Thu, 18 Sep 2025 03:06:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S2dV0Sli--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:neverthrow%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2599%25E3%2582%258B%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E6%25BB%259D%25E5%258F%25A3%2520%25E7%259F%25A5%25E5%25BF%2597%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmZTE1NGYxYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2583%2590%25E3%2583%25B3%25E3%2582%25AF%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE_satto%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEzZDZmNWZlODQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>滝口 知志</dc:creator></item><item><title><![CDATA[Redux入門：状態管理の基本と使い方]]></title><description><![CDATA[
 はじめに
Reactでアプリを開発していると、コンポーネント間で状態を共有するのが複雑になるという問題に直面します。
この課題を解決するために登場したのが Redux です。
本記事では、Reduxの基本的な考え方と使い方を解説します。

 Reduxとは
Reduxは JavaScriptアプリケーションの状態管理ライブラリ です。
状態(state)を一元的に管理し、どのコンポーネントからでもアクセス・更新できるようにします。
https://redux.js.org/

 Reduxを使うメリット


状態が一元管理される → どのデータがどこにあるか分かりやすい

動作が明確...]]></description><link>https://zenn.dev/ket8/articles/03d7678cbd5b54</link><guid isPermaLink="true">https://zenn.dev/ket8/articles/03d7678cbd5b54</guid><pubDate>Thu, 18 Sep 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qOiVqMMF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redux%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KET8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkZWE4MmFjMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KET8</dc:creator></item><item><title><![CDATA[プロフィール作成画面の作成]]></title><description><![CDATA[
 はじめに
この記事では、Vue.js + Nuxt.js + Firebase + Vuetifyを使用してプロフィール作成画面を実装する方法を詳しく解説します。ユーザーがニックネーム、年齢、性別を入力し、Firebase Firestoreに保存する機能を構築していきます。

 実装する機能

プロフィール情報の入力フォーム（ニックネーム、年齢、性別）
リアルタイムバリデーション
Firebase Firestoreへのデータ保存
エラーハンドリング
ローディング状態の管理


 技術スタック


フロントエンド: Vue.js 3 + Nuxt.js 3

UI フレームワーク:...]]></description><link>https://zenn.dev/shunsuke_stack/articles/bbfd2ad60eea32</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/bbfd2ad60eea32</guid><pubDate>Thu, 18 Sep 2025 02:47:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pDgQ1rqi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E4%25BD%259C%25E6%2588%2590%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[React Router(rolldown-vite)とNext.js(turbo-pack)のビルド速度と比較する]]></title><description><![CDATA[
 rolldown-vite とは
rolldown-vite は、Vite に Rust 製のバンドラー Rolldown を統合した実験的パッケージです。React Routerのように Vite ベースのバンドラを使用している環境では、簡単に差し替えを行えます。対して、Next.jsでは Turbopack という Rust ベースのバンドラが使用可能です。それぞれ Rust 製ということもあり、その速度に興味が湧くところですが、ビルド速度を比較した情報を見かけないので、実際にやってみることにしました。

 ビルドに使うリポジトリ
ちょうどマークダウンエディタの作り方を解説する記...]]></description><link>https://zenn.dev/sora_kumo/articles/react-router-next-build-speed</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/react-router-next-build-speed</guid><pubDate>Thu, 18 Sep 2025 02:44:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5-EVBTfC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2528rolldown-vite%2529%25E3%2581%25A8Next.js%2528turbo-pack%2529%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E9%2580%259F%25E5%25BA%25A6%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[技術記事のキャッチアップをPodcastから行うための技術]]></title><description><![CDATA[
 はじめに
みなさんはテクノロジーのキャッチアップはどのように行っていますか？このたび、ラジオ形式で聴くことで日々の技術ニュースをキャッチアップできる機能をこのたび公開しました！

前日のZennやhackernewsなどの人気ニュースを、「Webフロントエンド」「データベース」のように特定の職種やテーマごとに、Podcast形式で視聴することができます！
https://x.com/adsholoko/status/1963377756622000178
現時点では下記のテーマごとにPodcastを生成しております。

Webフロントエンド
Webバックエンド
モバイル開発
セキュリ...]]></description><link>https://zenn.dev/adsholoko/articles/researchly-podcast</link><guid isPermaLink="true">https://zenn.dev/adsholoko/articles/researchly-podcast</guid><pubDate>Thu, 18 Sep 2025 02:18:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KWrEU2Dm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592Podcast%25E3%2581%258B%25E3%2582%2589%25E8%25A1%258C%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shogo%2520Arakawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzYzBkNGI1YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shogo Arakawa</dc:creator></item><item><title><![CDATA[最高の TypeScript 開発環境を最速で作っていくよ 2025 秋]]></title><description><![CDATA[この記事では、TypeScript の開発環境を最速で整えます。単に動く環境ではなく、最低限必要なツールも一通りそろえていきます。(2025 年秋時点の情報です)

 この記事で作る開発環境について

 この記事のゴール


bun run コマンドで TypeScript ファイルを実行できる

bun repl コマンドで REPL を起動して TypeScript を実行できる

bun tsc --noEmit コマンドで（厳しい）型チェックができる
TypeScript Language Server でコード補完と型チェックができる

bun biome コマンドでフォーマッ...]]></description><link>https://zenn.dev/somnicattus/articles/3c1f3756aec24a</link><guid isPermaLink="true">https://zenn.dev/somnicattus/articles/3c1f3756aec24a</guid><pubDate>Thu, 18 Sep 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0nAROl_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E9%25AB%2598%25E3%2581%25AE%2520TypeScript%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%259C%2580%25E9%2580%259F%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%25E3%2582%2588%25202025%2520%25E7%25A7%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:somnicattus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMTUyZWZmZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>somnicattus</dc:creator></item><item><title><![CDATA[TeamsBotでユーザコンテキストを取得する]]></title><description><![CDATA[
 背景
Bot Frameworkを利用したチャットボットやアプリケーションで、ユーザごとのコンテキスト情報（氏名、メールアドレス、所属など）を取得したいケースは多くあります。
本記事では、Bot FrameworkのTurnContextから取得できるaadObjectIdをキーとして、Microsoft Graph APIを用いてユーザごとのコンテキスト情報を取得する方法をまとめます。

 環境



項目
バージョン




OS
Windows11 Pro


ランタイム
Node.js v22.14.0


主要ライブラリ
"@azure/identity"=="4.8.0"...]]></description><link>https://zenn.dev/serio/articles/0e56d8ff3c1df7</link><guid isPermaLink="true">https://zenn.dev/serio/articles/0e56d8ff3c1df7</guid><pubDate>Wed, 17 Sep 2025 23:39:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---rM_NQXN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TeamsBot%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258F%25E3%2581%2598%25E3%2582%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OGEyY2UyNGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25BB%25E3%2583%25AA%25E3%2582%25AA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaS5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くじら</dc:creator></item><item><title><![CDATA[duckdb-wasmで扱うCSVにzodでそれなりのtype-safeで安寧を得るまで]]></title><description><![CDATA[DuckDB-WASMをブラウザで使ってCSVデータを扱う際、色々と困りごとに当たったので、それをまとめていく。
今回クエリビルダーやORMでDuckDBで使えそうな適切なものがなかったので、そのあたりナシの生SQLで扱いつつ、Zodでそれなりに型もついてる状態をゴールとする。
ちなみに今回は駅データ.jpにて配布されているCSVをサンプルに取り扱ったので、サンプルコードもそれに沿った形となっている

 1. CSV読み込みはall_varchar=trueで全部文字列にしてしまう
DuckDBでread_csvでCSVを読み込む際、通常はそれぞれのフィールドを読み取って自動で型を決定し...]]></description><link>https://zenn.dev/terrierscript/articles/2025-09-17-duckdb-wasm-csv</link><guid isPermaLink="true">https://zenn.dev/terrierscript/articles/2025-09-17-duckdb-wasm-csv</guid><pubDate>Wed, 17 Sep 2025 06:58:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jbekxqOT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:duckdb-wasm%25E3%2581%25A7%25E6%2589%25B1%25E3%2581%2586CSV%25E3%2581%25ABzod%25E3%2581%25A7%25E3%2581%259D%25E3%2582%258C%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25AEtype-safe%25E3%2581%25A7%25E5%25AE%2589%25E5%25AF%25A7%25E3%2582%2592%25E5%25BE%2597%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:terrierscript%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNzJjMjE0Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>terrierscript</dc:creator></item><item><title><![CDATA[モダンフレームワークSvelteKitでのコロケーションができるようになったので紹介する]]></title><description><![CDATA[こんにちは、株式会社エクスプラザの@_mkazutakaです。
今回は、SvelteKitを使ったコロケーションの実現方法について紹介します。

 背景
2025年の8月にSvelteKit v2.27.でRemoteFunctionがリリースされました。
https://svelte.dev/blog/whats-new-in-svelte-august-2025
https://github.com/sveltejs/kit/releases/tag/%40sveltejs%2Fkit%402.27.0
これは簡単にいうと、あらゆるコンポーネントからサーバサイド上の関数を呼ぶことがで...]]></description><link>https://zenn.dev/explaza/articles/ccdce0c1cefe13</link><guid isPermaLink="true">https://zenn.dev/explaza/articles/ccdce0c1cefe13</guid><pubDate>Wed, 17 Sep 2025 03:02:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v7p5jF1q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AFSvelteKit%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25AD%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:_mkazutaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzOWQzZGM0MGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B6%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhN2E3MjYzNDkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>_mkazutaka</dc:creator></item><item><title><![CDATA[React 用 Markdown エディタと unified の Plugin 作成]]></title><description><![CDATA[
 React での Markdown エディタの実装
テキストエディット部分には Monaco エディタ、Markdown パーサには unified を使用します。その際に必要になる Plugin の作り方も合わせて紹介します。
※ 今回の記事で使用しているソースコード

Next.js 板

https://github.com/SoraKumo001/next-unified

React Router 板

https://github.com/SoraKumo001/react-router-markdown

動作イメージ



 unified を扱う上で知っておいたほう...]]></description><link>https://zenn.dev/sora_kumo/articles/markdown-react</link><guid isPermaLink="true">https://zenn.dev/sora_kumo/articles/markdown-react</guid><pubDate>Wed, 17 Sep 2025 03:00:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LEEIdzIg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E7%2594%25A8%2520Markdown%2520%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%25A8%2520unified%2520%25E3%2581%25AE%2520Plugin%2520%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlZTgzMDYyMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>空雲</dc:creator></item><item><title><![CDATA[Axiosの概要]]></title><description><![CDATA[
 Axiosとは
AxiosはTypeScriptやJavaScriptで使えるHTTPクライアントライブラリです。
PromiseベースのAPIを提供しており非同期処理が扱いやすく、JSONデータの自動変換も行ってくれるため、レスポンスデータの処理がしやすくなっています。
https://axios-http.com/ja/

 インストール方法
まずはAxiosをプロジェクトにインストールします。
npm install axios
# または
yarn add axios

 基本的な使い方
Axiosを使うと、シンプルにHTTPリクエストを送ることができます。

 GETリクエ...]]></description><link>https://zenn.dev/ket8/articles/7b8fabaecf2c23</link><guid isPermaLink="true">https://zenn.dev/ket8/articles/7b8fabaecf2c23</guid><pubDate>Wed, 17 Sep 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xLuwpyLw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Axios%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KET8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkZWE4MmFjMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KET8</dc:creator></item></channel></rss>