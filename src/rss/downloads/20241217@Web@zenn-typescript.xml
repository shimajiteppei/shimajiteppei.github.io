<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 17 Dec 2024 10:00:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[infer の使い方を理解する]]></title><description><![CDATA[
 なぜ
フロントで swagger の json からレスポンスとクエリの型を取得するさいに infer を使用して型安全に実装したが、 infer の使用方法で理解不足だった箇所をまとめることにより理解を深める。

 各場所での記述のバラツキ

openpapi.d.ts
type paths = {
  "/api/user": {};
  "/api/posts": {};
};


api.ts
const API_PAHT ={
  USER: 'api/user',
  CORP: 'api/corp'
}


 実装

 失敗例
swagger の方に不要な / が付いて...]]></description><link>https://zenn.dev/t_hashi/articles/17d97a99a3ac9f</link><guid isPermaLink="true">https://zenn.dev/t_hashi/articles/17d97a99a3ac9f</guid><pubDate>Tue, 17 Dec 2024 08:40:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uK1m1pW7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:infer%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_hashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3JyLVk0Wll5NGd0Z0ljbFhFVUtYX2N4ZlNTaHZFd0NUcldlVkZHSWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t_hashi</dc:creator></item><item><title><![CDATA[自作Raycast Extensionで日常業務を効率化するヒント]]></title><description><![CDATA[
 はじめに
この記事は、Raycast Advent Calendar 2024の17日目の記事です。
昨日は @ys64 さんによるホットキーでアプリをアクティブにする方法でした。
Raycastは、macOS上でさまざまな操作を素早く実行できるランチャーアプリです。しかし、標準機能やStoreで入手できるExtensionだけでは「もう少しこうしたい！」と思う場面もあるかもしれません。そんなときは、自分でExtensionを作成してしまうのが、最も手っ取り早い解決策です。
この記事では、自作のRaycast Extensionを活用して、日常業務の手間を軽減する一例をご紹介します。...]]></description><link>https://zenn.dev/smasato/articles/dca85f18dd96ef</link><guid isPermaLink="true">https://zenn.dev/smasato/articles/dca85f18dd96ef</guid><pubDate>Tue, 17 Dec 2024 07:47:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qle0AxUf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E4%25BD%259CRaycast%2520Extension%25E3%2581%25A7%25E6%2597%25A5%25E5%25B8%25B8%25E6%25A5%25AD%25E5%258B%2599%25E3%2582%2592%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2583%2592%25E3%2583%25B3%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masato%2520Sugiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1ZmFiNzc3YTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masato Sugiyama</dc:creator></item><item><title><![CDATA[DeepReadonly / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の6日目です。昨日は『実践 neverUsed(), $()』を紹介しました。

 DeepReadonlyを求める理由
2年前のカレンダーでReadonly型について紹介したことがあります。筆者はReadonly型を好んでおり、特殊なアルゴリズム処理や複雑なリクエスト生成の処理を除けば、ほぼ全てのオブジェクトは不変であってほしいと感じており、積極的にReadonlyを指定しています。基本的に、データ構造に再代入やミューテーション...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9decb4k3zt7ferhyhn</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9decb4k3zt7ferhyhn</guid><pubDate>Tue, 17 Dec 2024 05:26:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GgHmG8f8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DeepReadonly%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[実践 neverUsed(), $() / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の5日目です。昨日は『文字列や配列の最大長が決まっていないときの対策』を紹介しました。

 valibot利用上のさらなる工夫
昨日に続き、valibotを使う上で役立つちょっとした工夫を紹介します。今回取り上げるのはneverUsed()と$()という2つのユーティリティです。

 neverUsed(): 使用しないプロパティを明示する
大規模なアプリケーションを開発していると、社内外の多種多様なシステムと接続する場面に遭遇し...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9dak8hhe9bn0mye00z</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9dak8hhe9bn0mye00z</guid><pubDate>Tue, 17 Dec 2024 05:26:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2qYwYBlx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E8%25B7%25B5%2520neverUsed%2528%2529%252C%2520%2524%2528%2529%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[文字列や配列の最大長が決まっていないときの対策 / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の4日目です。昨日は『応用編 Valid branded types』を紹介しました。

 スキーマ記述と不明確な上限値の問題
前回までの記事ではvalibotを使った型定義とランタイムバリデーションの一元化や、Branded typesの応用について紹介してきました。こうしたアプローチでは、TypeScriptの型システム上で明確な制約を提示するために、string()やnumber()、pipe()やbrand()、そしてmi...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9d3ctzwdmbyg4sbsga</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9d3ctzwdmbyg4sbsga</guid><pubDate>Tue, 17 Dec 2024 05:26:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TU2vCYEe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2584%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E6%259C%2580%25E5%25A4%25A7%25E9%2595%25B7%25E3%2581%258C%25E6%25B1%25BA%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E7%25AD%2596%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[新しい技術を触るときのキャッチアップ方法]]></title><description><![CDATA[!
この記事は【プロもくチャット Advent Calendar 2024】の14日目です

https://qiita.com/advent-calendar/2024/puromoku

 はじめに
今年の4月ごろ、PHP/Laravelをメインで扱うチームから、Next.js/NestJSのSPA開発(両面TypeScript)が求められるチームに配属が変わりました
その際に「どうやって新しい技術のキャッチアップを行ったか」を記事にまとめておきたいと思います
この記事がこれから新しい技術を身につけたいと考える人や、これからプログラミングを覚えていきたい人などの参考になると嬉しいです...]]></description><link>https://zenn.dev/mocchann/articles/b4296f7cf5baab</link><guid isPermaLink="true">https://zenn.dev/mocchann/articles/b4296f7cf5baab</guid><pubDate>Tue, 17 Dec 2024 04:47:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DtrJCQCX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2592%25E8%25A7%25A6%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h6cnpnUU5wUTRwaUpQWEMydnVNUldIejhiVE1zMDYtRWdZQkhkU0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もっちゃん</dc:creator></item><item><title><![CDATA[Prismaでリレーション(include)先の型をまとめて取得する]]></title><description><![CDATA[こんにちは。粘着系エンジニアのbamboo-houseです。
リレーション先の型について、とある方法を使うと自分で定義することなく型を取得することができるので参考にしてみてください！

 schema.prisma（モデル定義）
model User {
  id    Int    @id @default(autoincrement())
  posts Post[]
}

model Post {
  id       Int  @id @default(autoincrement())
  author   User @relation(fields: [authorId], r...]]></description><link>https://zenn.dev/bamboohouse/articles/48e38c0ad48dff</link><guid isPermaLink="true">https://zenn.dev/bamboohouse/articles/48e38c0ad48dff</guid><pubDate>Tue, 17 Dec 2024 04:00:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2c4IksU5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2528include%2529%25E5%2585%2588%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bamboo-house%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNGI0NjJkMDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bamboo-house</dc:creator></item><item><title><![CDATA[[typescript]Unionタイプを使う時の注意点と解決方法]]></title><description><![CDATA[
 1. ユニオン型使用のよくあるミス
以下のような状況において、通常ユニオン型を適用してしまうことがあります。

 パラメータの型に柔軟性を持たせたい場合
type Person = {
  name: string;
  age: number;
};

type Staff = {
  name: string;
  department: string;
};

function introduce(someone: Person | Staff) {
  someone.name;
  someone.age; // エラーが発生
  someone.department; /...]]></description><link>https://zenn.dev/heatherjin/articles/02c266385bc1af</link><guid isPermaLink="true">https://zenn.dev/heatherjin/articles/02c266385bc1af</guid><pubDate>Tue, 17 Dec 2024 01:22:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aBBkHaR3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Btypescript%255DUnion%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AE%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AA%25E3%2583%259C%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUQ0NnhSVTRQalhfb1c3RVMyRzQ5eS1kbXFibHp4azBWTDRGQjlCOHFuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハリボー</dc:creator></item><item><title><![CDATA[Angular19で無限スクロールを作ってみる]]></title><description><![CDATA[今年のAngularは盛りだくさんでしたね！
これはAngularアドベントカレンダー 17日目の記事です！
https://qiita.com/advent-calendar/2024/angular

 はじめに
今回はAngular signalsを使った無限スクロールを実装します。
実装コードは末尾にレポジトリを置いておきます。

サーバーサイドは以下のポケモンAPIを使わせていただきます。
https://pokeapi.co/

 無限スクロールの追加読み込み実装
ポケモンAPIからデータ取得を行います。
画面遷移後も取得したデータを保持したいのでservice側のsigna...]]></description><link>https://zenn.dev/nao50/articles/angular-infinite-scroll-with-signals</link><guid isPermaLink="true">https://zenn.dev/nao50/articles/angular-infinite-scroll-with-signals</guid><pubDate>Tue, 17 Dec 2024 00:19:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qcsHaBrb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular19%25E3%2581%25A7%25E7%2584%25A1%25E9%2599%2590%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiY2YzZDIyYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nao</dc:creator></item><item><title><![CDATA[最近立ち上げたプロジェクトで採用したフロントエンド技術スタック]]></title><description><![CDATA[
 はじめに
こちらは e-dash Advent Calendar 2024 の17日目の記事です。
はじめまして、e-dashのフロントエンドエンジニア、kyonsiと申します。
クリスマスシーズン、皆さんいかがお過ごしでしょうか？ 私は、夜に輝くイルミネーションを眺めながら、「このキラキラのアニメーション、durationは何ミリ秒なんだろう？ CSSで再現できないかな？」なんて、ついフロントエンドエンジニア的な思考が巡っています。
本記事では、最近立ち上げたフロントエンドプロジェクトで採用した技術と、その選定理由を軽くご紹介いたします。「ちょっと攻めすぎじゃない？」「いや、もっと...]]></description><link>https://zenn.dev/edash_tech_blog/articles/b51ec89809b055</link><guid isPermaLink="true">https://zenn.dev/edash_tech_blog/articles/b51ec89809b055</guid><pubDate>Tue, 17 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e0zSX1Dz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E8%25BF%2591%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25A7%25E6%258E%25A1%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kyonsi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkZWM5ZjExNTcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:e-dash%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0YmE5NGJmZTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyonsi</dc:creator></item><item><title><![CDATA[データエンジニアに嫌われないPrismaの使い方]]></title><description><![CDATA[みなさんこんにちは。CADDi で CADDi Quote というプロダクトの開発をしている majimaccho です。
こちらは CADDi アドベントカレンダー 17 日目の投稿です。
前回は imaimai さんの サウナに学ぶプロダクトマネジメントでした。
こちらもぜひ合わせてお読みください！
CADDi ではサーバーサイド TypeScript で DB アクセスをするのに Prisma を利用しています。また、Drawer と Quote という 2 つの製品があり、それぞれ連携して使われるための ID 基盤なども整備されていたり、プロダクト横断のデータ基盤によって、それぞ...]]></description><link>https://zenn.dev/mj2mkt/articles/2024-12-14-prisma-with-data-engineers</link><guid isPermaLink="true">https://zenn.dev/mj2mkt/articles/2024-12-14-prisma-with-data-engineers</guid><pubDate>Mon, 16 Dec 2024 23:03:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7Oz44XBM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AB%25E5%25AB%258C%25E3%2582%258F%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584Prisma%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2598%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2587%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0YjdjMTQwODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まじまっちょ</dc:creator></item><item><title><![CDATA[Spotifyの再生トースト風UIを作ってみる-day1-]]></title><description><![CDATA[1日1zennとして、先週は日々つまづいたことを記事にしてみましたが、
試しに1日1UIをやってみようと思います。
まずは習慣化のために小さい一部分から始めて、徐々に大きなものを早く正確に作れるようにしていきたいです。

 今回作るもの
まずは小さく、普段使っているSpotifyの再生トーストを作ってみます

この部分。

 要件
バックエンドは作らず、mock的に作ったデータから受け取る形にします。

 要素と挙動

トーストの色

今回は適当に決めちゃう


アルバムのジャケ写(アイコン)

モックデータから受け取る
タップ後の挙動は一旦作らない


アーティスト名

モックデータか...]]></description><link>https://zenn.dev/shunsuke108m/articles/a1845c81215324</link><guid isPermaLink="true">https://zenn.dev/shunsuke108m/articles/a1845c81215324</guid><pubDate>Mon, 16 Dec 2024 16:26:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zbEJV0zP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spotify%25E3%2581%25AE%25E5%2586%258D%25E7%2594%259F%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2588%25E9%25A2%25A8UI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B-day1-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%25AE%25E7%2594%25B0%25E5%25B3%25BB%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG9Jdy1QSHNvSW1WVGpKTmxFbkhnZkRyZ0pBVlRSQzhIaWMweDVJUmZLS3hlUjZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宮田峻輔</dc:creator></item><item><title><![CDATA[Re: React Tokyoというコミュニティを作ろうと思ったワケ]]></title><description><![CDATA[https://zenn.dev/dai_shi/articles/9f2760086fb31a
はじめまして、React Tokyoのもう一人の発起人のTeruhisaです。
上記の@dai_shiさんが書かれた記事に添える形で、私の視点で何かしら書こうと思います。
https://x.com/ReactTokyo/status/1864325542746706283

 そもそも私は誰
Daishi Katoさんは、世界的にも名の通ったReact界のレジェンドであることは疑いようもなく、そんな人が母国日本でReact Tokyoという大きな看板でコミュニティを立ち上げたことも、自然な...]]></description><link>https://zenn.dev/tell_y/articles/f013a03370ee27</link><guid isPermaLink="true">https://zenn.dev/tell_y/articles/f013a03370ee27</guid><pubDate>Mon, 16 Dec 2024 15:43:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nN8lpuKi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Re%253A%2520React%2520Tokyo%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AF%25E3%2582%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Teruhisa%2520-%2520T6ADEV%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNDg5NTAyZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Teruhisa - T6ADEV</dc:creator></item><item><title><![CDATA[メモ：Next.js Route Handlers のモックテストについて]]></title><description><![CDATA[Changelog

 メモ
雑なメモ書き。

 APIエンドポイントのモックテスト

 Node.jsサーバ向け
https://www.npmjs.com/package/node-mocks-http
DockerやSwagger、Prism等々でモックサーバを立ち上げる必要がある。

 Next.js向け
https://www.npmjs.com/package/next-test-api-route-handler
モックサーバを立ち上げる必要がない。
https://github.com/Xunnamius/next-test-api-route-handler/blob/...]]></description><link>https://zenn.dev/iput_app/articles/053451176445f4</link><guid isPermaLink="true">https://zenn.dev/iput_app/articles/053451176445f4</guid><pubDate>Mon, 16 Dec 2024 15:28:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f1dFakfA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%259ANext.js%2520Route%2520Handlers%2520%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wiyco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZWIyZDBkZWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AB%2540IPUT%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTJiNGUyZmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wiyco</dc:creator></item><item><title><![CDATA[インデックスアクセス時にundefinedを考慮する]]></title><description><![CDATA[JavaScriptの特徴的な挙動の一つとして、配列やオブジェクトに存在しないインデックスやプロパティにアクセスするとundefinedが返される点があります。
この挙動は実行時エラーを引き起こす原因となるため注意が必要です。（自戒を込めて）
その問題を防ぐため、TypeScriptでは明示的にundefinedを考慮した安全なコードを書くことが推奨されます。
また、オブジェクトのプロパティアクセスでも同様の問題が発生する可能性があります。存在しないプロパティにアクセスした場合、その結果もundefinedとなります。


 存在しないインデックスやプロパティにアクセスすると
以下の例で...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/e8c55186d2655d</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/e8c55186d2655d</guid><pubDate>Mon, 16 Dec 2024 15:02:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0SXT8hZm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E6%2599%2582%25E3%2581%25ABundefined%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDMyNTZiNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tatsuki</dc:creator></item><item><title><![CDATA[React19 アップデートまとめ]]></title><description><![CDATA[
 はじめに
こんにちはたくみです．
今朝，ふと X を見ていたら，React 公式から嬉しいポストがされていました．
なんと！！React19 が安定リリースされました！！！
この機会に React19 のアップデートの内容をまとめておこうと思います！

 Action
React には，「アクション」という概念があります．
アクションとは一言でいうと，「非同期トランジションを使用する関数」と呼ばれています．
昔の React では，ユーザーのアクションに対して何か行いたいとき，「送信状態」，「エラー」，「リクエストの順序」などを，すべて手動で行う必要がありました．アクションは，これら...]]></description><link>https://zenn.dev/uniformnext/articles/react19-update-summary</link><guid isPermaLink="true">https://zenn.dev/uniformnext/articles/react19-update-summary</guid><pubDate>Mon, 16 Dec 2024 14:49:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ACz30QQq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%2520%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takumi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjMTE2MTQ2NWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%258D%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%2588%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzYjM5OWJmOGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takumi</dc:creator></item><item><title><![CDATA[【JavaScript,TypeScript】オブジェクトのまとめ]]></title><description><![CDATA[
 オブジェクト
TypeScriptやJavaScriptでは、{}を使うとプロパティを備えたオブジェクトの定義と生成を簡単に行うことができます。
https://typescriptbook.jp/reference/values-types-variables/object/object-literal
// 空っぽのオブジェクトを生成
const object = {};
 
// プロパティを指定しながらオブジェクトを生成
const person = { name: "Bob", age: 25 };

console.log(object);//{}
console.log...]]></description><link>https://zenn.dev/junyamachida/articles/7c2ad6743dfb7c</link><guid isPermaLink="true">https://zenn.dev/junyamachida/articles/7c2ad6743dfb7c</guid><pubDate>Mon, 16 Dec 2024 14:07:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fnhmndqS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%252CTypeScript%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junya%2520Machida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dxV083OUtMdS1yQU5ucDdEbFY5NU1IWmJJYU1vU0ZDcVFFN0t3a3c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Junya Machida</dc:creator></item><item><title><![CDATA[応用編 Valid branded types / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の3日目です。昨日は『valibotで実践するBranded types』を紹介しました。

 さらに一歩踏み込むValid branded types
昨日の記事では、valibotが備えるbrand()関数によって、Branded typesを用いた型定義とランタイムバリデーションを一元化できる魅力を紹介しました。本日はそこから一歩踏み込み、Branded typesを「常にスキーマを満たしていると保証された型」として「Val...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9cxvpy7f2z2brq7k0p</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9cxvpy7f2z2brq7k0p</guid><pubDate>Mon, 16 Dec 2024 13:39:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LLoDnL-d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25BF%259C%25E7%2594%25A8%25E7%25B7%25A8%2520Valid%2520branded%2520types%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[複数LLMに対応したスマートホームエージェントアプリをMCP（Model Context Protocol）に対応させた]]></title><description><![CDATA[
 はじめに
前回、以下記事でFunction Callingを使ったスマートホームエージェントアプリを紹介しました。
https://zenn.dev/bonzoyt/articles/31bdc474596a22
画面イメージも再掲しておきます。
こんな感じでホームデバイス操作ができるNext.js + TypeScript製のChatbotアプリです。

記事を書いている間にAnthropicから、MCP（Model Context Protocol）がリリースされましたので、取り急ぎこのアプリのMCP対応版を作成してみました。
前回とは別リポジトリでGitHubに公開しています。...]]></description><link>https://zenn.dev/bonzoyt/articles/2a19809ed7e920</link><guid isPermaLink="true">https://zenn.dev/bonzoyt/articles/2a19809ed7e920</guid><pubDate>Mon, 16 Dec 2024 13:35:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kVgTsDEh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E6%2595%25B0LLM%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259B%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592MCP%25EF%25BC%2588Model%2520Context%2520Protocol%25EF%25BC%2589%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yk_tkmt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyZGEwMjQyODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yk_tkmt</dc:creator></item><item><title><![CDATA[Deno + Gemini（Vertex AI）+ GitHub Actionsでドキュメントを自動翻訳するやつを作った]]></title><description><![CDATA[英語を読むのが辛かったので、公式ドキュメントをAIにまとめて翻訳させてみました。せっかくなので簡単に紹介しようと思います。

 作ったものー
今回はPlasmoというブラウザ拡張を作るフレームワークのドキュメントを翻訳してみました。なおコードは勢いで書いたので最悪です。そのうちリファクタリングしたい。
↓公開したサイト
https://plasmo-ja-docs.vercel.app/
↓ドキュメントのリポジトリ
https://github.com/SuperSandyman/plasmo-ja-docs/
↓スクリプトのリポジトリ
https://github.com/SuperS...]]></description><link>https://zenn.dev/sandyman/articles/db34a8e1bcd934</link><guid isPermaLink="true">https://zenn.dev/sandyman/articles/db34a8e1bcd934</guid><pubDate>Mon, 16 Dec 2024 13:19:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LqGhAl2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%2520%252B%2520Gemini%25EF%25BC%2588Vertex%2520AI%25EF%25BC%2589%252B%2520GitHub%2520Actions%25E3%2581%25A7%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2599%25E3%2582%258B%25E3%2582%2584%25E3%2581%25A4%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sandy%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwNjEzZjZhMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sandyマン</dc:creator></item></channel></rss>