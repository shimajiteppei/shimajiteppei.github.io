<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 10 Oct 2025 10:57:03 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[1時間でCodexとLINE Bot(WIP)]]></title><description><![CDATA[1時間でCodexでLINE Botチャレンジ]]></description><link>https://zenn.dev/n0bisuke/books/codex-linebot</link><guid isPermaLink="true">https://zenn.dev/n0bisuke/books/codex-linebot</guid><pubDate>Fri, 10 Oct 2025 09:07:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oTVRwoyT--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zNjdkMDE5YjZiLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg?_a=BACAGSGT" length="0" type="false"/><dc:creator>n0bisuke</dc:creator></item><item><title><![CDATA[ゆらゆらさせてから自然に止めるアニメーション【CSS, JS】]]></title><description><![CDATA[要素をゆらゆらさせるアニメーションを試してみたTipsを紹介します。

 ゆらゆらさせるアニメーション【CSS】
ずっとゆらゆらさせるアニメーションは、CSSのKeyFramesだけでそれらしくなります。
アニメーションさせる時にease-in-outのイージングを指定します。

css
.star {
  width: 200px;
  transform-origin: center top;
  animation: yurayura 2s ease-in-out infinite;
}

@keyframes yurayura {
  0% , 100% {
    transf...]]></description><link>https://zenn.dev/deguchihi/articles/ded9cce2daa49a</link><guid isPermaLink="true">https://zenn.dev/deguchihi/articles/ded9cce2daa49a</guid><pubDate>Fri, 10 Oct 2025 06:47:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mnTxpkqJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2586%25E3%2582%2589%25E3%2582%2586%25E3%2582%2589%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%258B%25E3%2582%2589%25E8%2587%25AA%25E7%2584%25B6%25E3%2581%25AB%25E6%25AD%25A2%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2580%2590CSS%252C%2520JS%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:deguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZGI0ZmU3NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>deguchi</dc:creator></item><item><title><![CDATA[useRefでフラグを保持する]]></title><description><![CDATA[React フロントでは useRef をフラグ代わりに使う場面が多いので、その振る舞いをサンプルで整理しておきます。

 useRef とは？

React が提供する "箱"。useRef(initialValue) で箱を作ると、ref.current に好きな値を入れられる。
コンポーネントが何度レンダー（描画）されても、同じ箱が再利用される。だから値がリセットされない。
値を変えても画面が再レンダーされない。副作用のフラグや最新 DOM の参照に向いている。


 レンダーとは？
React コンポーネントの関数が呼ばれ、JSX から DOM を組み立て直すこと。setStat...]]></description><link>https://zenn.dev/heart0018/articles/dd7c2e03244054</link><guid isPermaLink="true">https://zenn.dev/heart0018/articles/dd7c2e03244054</guid><pubDate>Thu, 09 Oct 2025 11:11:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GdGsSC8---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useRef%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%2592%25E4%25BF%259D%25E6%258C%2581%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HeartPG%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwZGNlODI4ZmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>HeartPG</dc:creator></item><item><title><![CDATA[【石巻ハッカソン2025 IT Boot Camp部門】AIでプログラミング体験！]]></title><description><![CDATA[石巻ハッカソン2025 IT Boot Camp部門で使用する教材です。この教材を通してAIを活用してプログラミングを体験してみましょう！]]></description><link>https://zenn.dev/is0629sy/books/it-boot-camp-2025</link><guid isPermaLink="true">https://zenn.dev/is0629sy/books/it-boot-camp-2025</guid><pubDate>Thu, 09 Oct 2025 09:05:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B2UUO9FI--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lNzc1YTc1NzFmLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg?_a=BACAGSGT" length="0" type="false"/><dc:creator>is0629sy/GB</dc:creator></item><item><title><![CDATA[Web開発者のためのExpo入門ガイド]]></title><description><![CDATA[
 Expoを一言で表すと
Expoは、JavaScriptでiOSとAndroidのネイティブアプリを作れるようにするプラットフォームです。Web開発の知識をそのまま活かして、モバイルアプリ開発に挑戦できます。

 Web開発者の視点から見たExpo

 Expoが解決する課題
モバイルアプリを作ろうとすると、通常は以下のような障壁があります。

iOSアプリにはSwift/Objective-C、AndroidにはKotlin/Javaという異なる言語が必要

2つのコードベースを別々に管理しなければならない
XcodeやAndroid Studioといった重いIDEの習得が必要
ア...]]></description><link>https://zenn.dev/kibe/articles/d7074d013b020e</link><guid isPermaLink="true">https://zenn.dev/kibe/articles/d7074d013b020e</guid><pubDate>Thu, 09 Oct 2025 03:38:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fYwwxBQi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEExpo%25E5%2585%25A5%25E9%2596%2580%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k1b3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmYzQxOGU0ZmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>k1b3</dc:creator></item><item><title><![CDATA[DOMの構造とイベント伝搬の仕組みを理解する]]></title><description><![CDATA[Web開発において、DOM（Document Object Model）は避けて通れない基礎概念です。
特に「イベント伝搬（Event Propagation）」の理解は、クリックや入力などのユーザー操作を正しく扱うために欠かせません。
この記事では、復習も兼ねてDOMの構造からイベントの流れまでを体系的に整理します。

 1. DOMとは
DOM（Document Object Model）は、ブラウザがHTML文書を解析して作り上げるツリー構造のオブジェクト表現です。
HTMLの各要素は「ノード」としてツリー上に配置され、JavaScriptからアクセス・操作できます。
HTMLとj...]]></description><link>https://zenn.dev/daiju81/articles/962ab87114c611</link><guid isPermaLink="true">https://zenn.dev/daiju81/articles/962ab87114c611</guid><pubDate>Wed, 08 Oct 2025 13:39:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AlSY0cgm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DOM%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E4%25BC%259D%25E6%2590%25AC%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daiju%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyZjdiNGU0NjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Daiju</dc:creator></item><item><title><![CDATA[watch]]></title><description><![CDATA[Vueのwatchの仕様について、イマイチ理解していない。サンプルコードを書いて、仕様について理解する。

 サンプルコード
&lt;script setup&gt;
import {ref, watch} from 'vue'

const count = ref(0)
watch(count, (newValue, oldValue) =&gt; {
  if (count) {
    console.log(JSON.parse(JSON.stringify(oldValue)));
    console.log(JSON.parse(JSON.stringify(newVal...]]></description><link>https://zenn.dev/senaha/articles/24e2c86c75bd95</link><guid isPermaLink="true">https://zenn.dev/senaha/articles/24e2c86c75bd95</guid><pubDate>Wed, 08 Oct 2025 11:05:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R-roZySg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:watch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:senaha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lUeUJ6QjU5OENKS2VIdVU3alZ5YmN3czkwT1FWMkJ1YmZoNmdIM3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>senaha</dc:creator></item><item><title><![CDATA[typeとinterfaceの違いと使い分け]]></title><description><![CDATA[
 type(型エイリアス)とinterfaceの違いがイマイチわからん
最近TypeScriptを勉強し始めたのですが、typeとinterfaceの違いと使い分け、恩恵がイマイチわからなかったので、調べてまとめてみることにしました。

 typeについて

 継承が不可能
typeはextendsを用いて継承ができません。
その代わりにintersection(交差型)を使って擬似的に型を継承することは可能です。
type Animal = {
  name: string;
};

type Dog = Animal &amp; {
  breed: string;
};

con...]]></description><link>https://zenn.dev/rihitonnnu/articles/11a057e9417c37</link><guid isPermaLink="true">https://zenn.dev/rihitonnnu/articles/11a057e9417c37</guid><pubDate>Tue, 07 Oct 2025 14:15:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cA7ysoJ9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type%25E3%2581%25A8interface%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rihitonnnu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekV3Y0FzbVR0eW1oMzdwbEZqVm5HbV91aGRPbmxzRDRqM2UyN2o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>rihitonnnu</dc:creator></item><item><title><![CDATA[JavaScriptでGemini APIを使用するまで]]></title><description><![CDATA[2025年10月現在、いまだにGemini APIは一部無料で使える生成AIのAPIです。
そのため、何かしらAIを使用したアプリを作ろうとしたときによく利用しています。
ただ、「どう設定したら使えるんだっけ?」とわからなくなることが多々あるので、備忘録として手順を残します。
!
JavaScriptを使用したGemini APIの使用ができるまでの手順を紹介しています。


 APIキーの準備
まずは、管理画面からAPIキーを用意します。
API管理画面
https://aistudio.google.com/app/api-keys

右上のAPIキーを作成をクリックして、新しいキー...]]></description><link>https://zenn.dev/sawa0369/articles/b00a8700f4492f</link><guid isPermaLink="true">https://zenn.dev/sawa0369/articles/b00a8700f4492f</guid><pubDate>Tue, 07 Oct 2025 13:18:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mvBULjhp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7Gemini%2520API%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B2%25A2%25E3%2581%25AE%25E6%259D%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlZWFlMjc5NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>沢の村</dc:creator></item><item><title><![CDATA[メモアプリを改善してみた（dialog + Promise編）]]></title><description><![CDATA[
 はじめに
以前作ったメモアプリを改善してみました。元のコードではユーザーからの入力をprompt()で受け取って画面に表示していました。
次のステップアップとして、dialog要素とPromiseを使って作り直してみることにしました。
この記事では、その改善過程をまとめます。

 元のコード（prompt版）
元のコードはこちら。

コード全文は以下です。
&lt;h1&gt;メモアプリ&lt;/h1&gt;
&lt;button id="addMemoBtn"&gt;メモを追加&lt;/button&gt;
&lt;ul id="memo_list"&gt;&lt;/ul&gt;
...]]></description><link>https://zenn.dev/taiyok/articles/7afa3f175dff8c</link><guid isPermaLink="true">https://zenn.dev/taiyok/articles/7afa3f175dff8c</guid><pubDate>Tue, 07 Oct 2025 09:20:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WTwa_9ac--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2583%25A2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588dialog%2520%252B%2520Promise%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sol%2540SE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzYyZDU2ZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Sol@SE</dc:creator></item><item><title><![CDATA[【React】return の後に関数定義をする Hoisting Pattern を提唱したい]]></title><description><![CDATA[私が React でよく使うデザインパターン（？）を紹介します。
JavaScript の Hoisting (宣言の巻き上げ) を使うので Hoisting Pattern と勝手に呼んでいます。
といっても何か特別な書き方をするわけでなく、ただ return の後に function を書くだけです。

 例

 MyButton.tsx
'use client';

import { ReactNode, useEffect, useState } from 'react';

type Props = {
  children?: ReactNode;
};

export fu...]]></description><link>https://zenn.dev/hcproduce_blog/articles/905689ad3918c4</link><guid isPermaLink="true">https://zenn.dev/hcproduce_blog/articles/905689ad3918c4</guid><pubDate>Tue, 07 Oct 2025 08:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z9v5KJx---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591return%2520%25E3%2581%25AE%25E5%25BE%258C%25E3%2581%25AB%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2520Hoisting%2520Pattern%2520%25E3%2582%2592%25E6%258F%2590%25E5%2594%25B1%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazeusagi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0NzRmNjJhOGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:HC%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2587%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS01hTm01UnBhQzd1VlNwdHJfaFEzVEwwRG9JaWJpek1mekdqWG4tTnlsQnQwdWdPZnY9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>kazeusagi</dc:creator></item><item><title><![CDATA[プログラム言語]]></title><description><![CDATA[
 プログラム言語

javascript
node.js
Express
EJS

]]></description><link>https://zenn.dev/itoshidev/articles/5b416c683a4cec</link><guid isPermaLink="true">https://zenn.dev/itoshidev/articles/5b416c683a4cec</guid><pubDate>Tue, 07 Oct 2025 03:46:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KLYte91s--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E8%25A8%2580%25E8%25AA%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTgzYzJjYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>toshi</dc:creator></item><item><title><![CDATA[Zenn問答第1回 「cookie」]]></title><description><![CDATA[
 Zenn問答とは
「Zenn問答」とは、開発していて「なんとなく使ってるけど、ちゃんと理解してるかな？」という技術について、改めて時間をとって深掘りしてみようという企画です🧘🧘🧘

 はじめに
最近はブラウザでもcookieを保存しますか？というダイアログが出てくることがよくあり、一般の方にも認知度は高まっているcookieについてなんとなくでしか理解できていなかったので、深掘りしてみたいと思います。

 cookieとは？
cookieは、Webサーバーがユーザーのブラウザに保存する小さなテキストデータです。ユーザーがWebサイトを訪問した際に、サーバーからブラウザにHTTPレスポ...]]></description><link>https://zenn.dev/okaponta/articles/9e8d0c46458423</link><guid isPermaLink="true">https://zenn.dev/okaponta/articles/9e8d0c46458423</guid><pubDate>Mon, 06 Oct 2025 22:27:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fp0TGDrr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E5%2595%258F%25E7%25AD%2594%25E7%25AC%25AC1%25E5%259B%259E%2520%25E3%2580%258Ccookie%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okaponta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZjgyZjZkMzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>okaponta</dc:creator></item><item><title><![CDATA[JSのJIT コンパイルについてちょっと調べた]]></title><description><![CDATA[
 JIT コンパイルとは
JIT（Just-In-Time） は、実行しながら最適化していくコンパイル方式である。まず素早く実行を開始し、実行時プロファイル（型・オブジェクト形状など）を集めながら段階的に高速化し、仮定が崩れたら deopt（最適化解除）して安全側に戻る。

 実験

 実験その 1
ブラウザと Node.js で以下を実行した。
function add(a, b) {
  return a + b;
}

// ウォームアップ（最適化のために回す）
for (let i = 0; i &lt; 1_000_000; i++) {
  add(1, 2);
}

co...]]></description><link>https://zenn.dev/wakame_atsushi/articles/19cae0559a6f3d</link><guid isPermaLink="true">https://zenn.dev/wakame_atsushi/articles/19cae0559a6f3d</guid><pubDate>Mon, 06 Oct 2025 12:22:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_iibCfFb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%25E3%2581%25AEJIT%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258F%25E3%2581%258B%25E3%2582%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NDI2MjM3MjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>わかめ</dc:creator></item><item><title><![CDATA[MapLibre GL JSで透過PNG画像から輪郭を抽出して地図上で衝突判定を実装する]]></title><description><![CDATA[
 はじめに
株式会社 Geolonia が提供する「地図ぼうけんラボ」の開発において、地図上でのスプライトアイコン同士の衝突判定を実装する必要がありました。単純な円形や矩形の判定では不十分で、任意の形状での正確な判定が求められたため、透過 PNG 画像から輪郭を抽出し、ポリゴン化して衝突判定を行うサンプルを実装しました。
本記事では、Canvas API を使用したピクセルレベルの画像解析から地理座標系での衝突判定まで、実装の詳細を解説します。
デモページ

 実装の概要

 システム構成
このシステムは以下の要素で構成されています。


MapLibre GL JS: 地図表示とイン...]]></description><link>https://zenn.dev/mopinfish/articles/example-of-collision-detection</link><guid isPermaLink="true">https://zenn.dev/mopinfish/articles/example-of-collision-detection</guid><pubDate>Mon, 06 Oct 2025 07:37:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iGIT_BRK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MapLibre%2520GL%2520JS%25E3%2581%25A7%25E9%2580%258F%25E9%2581%258EPNG%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258B%25E3%2582%2589%25E8%25BC%25AA%25E9%2583%25AD%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E5%259C%25B0%25E5%259B%25B3%25E4%25B8%258A%25E3%2581%25A7%25E8%25A1%259D%25E7%25AA%2581%25E5%2588%25A4%25E5%25AE%259A%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Otsuka%2520Noboru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGVHZ1RjVIV0xXYUJWd0xIcm5PbzFnQW4tQmgxSG51R2dKTkFCWXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Otsuka Noboru</dc:creator></item><item><title><![CDATA[【TypeScript】カスタムエラーのすすめ]]></title><description><![CDATA[TypeScriptで開発をしていると、APIエラーやバリデーションエラーなど、さまざまなエラーを扱う場面があります。
そんなときに、標準のErrorクラスだけで対応していませんか。
この記事では、カスタムエラーを導入するメリットと、ボイラープレートを減らしてカスタムエラーを楽に定義出来るライブラリを紹介します。

 カスタムエラーを作る理由
標準のErrorクラスを使用することで楽にエラーを作成できますが、次のような問題があります。

エラーの種類を区別しづらい
追加の情報（HTTPステータスやエラーコードなど）を持たせづらい
メッセージが一貫しない

たとえば次のような例を考えてみま...]]></description><link>https://zenn.dev/praha/articles/a8b72ba36294fe</link><guid isPermaLink="true">https://zenn.dev/praha/articles/a8b72ba36294fe</guid><pubDate>Mon, 06 Oct 2025 04:40:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KNgurxLA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Karibash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiZDIyMmFjMTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PrAha%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Karibash</dc:creator></item><item><title><![CDATA[【今さらシリーズ】タスクランナーってなに？]]></title><description><![CDATA[
 はじめに
今年の半ばからフロントエンドエンジニアになりました。
開発関連の用語やツールをうまく説明できないな...と思うことがしばしばあるため、言語化の練習を始めることにしました。
内容に誤りがあればご指摘いただけますと大変ありがたいです🙇

 リサーチ前の認識

タスクランナー＝ファイルの修正などの開発状況を監視して差分があったらビルドするツール
つまり、開発状況を監視してくれるツール

なんともお粗末ですね〜。
はい、きちんと調べて学びます。
以下、リサーチ後！

 タスクランナーってなに？

Web構築に必要な処理を自動で行ってくれるプログラムのこと

※余談、テンプレートエン...]]></description><link>https://zenn.dev/eng78/articles/84740c7d71a4e3</link><guid isPermaLink="true">https://zenn.dev/eng78/articles/84740c7d71a4e3</guid><pubDate>Sun, 05 Oct 2025 21:14:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lyqseifo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BB%258A%25E3%2581%2595%25E3%2582%2589%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2580%2591%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%25AB%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2583%25E5%2585%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MTUxMDUxYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>七八</dc:creator></item><item><title><![CDATA[【今さらシリーズ】browserifyをざっと理解する]]></title><description><![CDATA[
 はじめに
今年の半ばからフロントエンドエンジニアになりました。
開発関連の用語やツールをうまく説明できないな...と思うことがしばしばあるため、
言語化の練習を始めることにしました。

 本記事の目的

開発関連のツールや用語への自身の理解を深める


 browserifyってなに？
→端的にいうと「jsファイル間の依存関係を解決したり、モジュールを一つにまとめるツール」のこと
▼詳細

依存関係を解決する＝ファイルの読み込み順や関係性を管理すること
ほとんどのプログラミング言語ではモジュールの仕組みが提供されているがjs（ES5）では提供されていなかった
モジュール管理の仕様は大...]]></description><link>https://zenn.dev/eng78/articles/ac2cc7c3ffbdb0</link><guid isPermaLink="true">https://zenn.dev/eng78/articles/ac2cc7c3ffbdb0</guid><pubDate>Sun, 05 Oct 2025 18:37:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---rAAI43_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E4%25BB%258A%25E3%2581%2595%25E3%2582%2589%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2580%2591browserify%25E3%2582%2592%25E3%2581%2596%25E3%2581%25A3%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%2583%25E5%2585%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MTUxMDUxYjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>七八</dc:creator></item><item><title><![CDATA[Zenn登録にあたり、自己紹介をします。]]></title><description><![CDATA[
 この記事について
はじめまして、ITエンジニアのminamoです。
Zennに登録したばかりなので、まずはこの記事で投稿を試しがてら、自己紹介をします。
よろしくお願いします。

 はじめに
長年遊んでいるWindowsのフリーゲーム、ヴァーレントゥーガの更新が途絶えて数年たったころ、Web版のヴァーレントゥーガのようなものを作りたいと考えるようになりました。
おりしもITエンジニアとして少し経験を積み重ねたころ。プログラミング領域でも多少の技量がついてきたと思い、数年前に技術研究、開発を始めていました。
私生活の多忙化やモチベーションなどの都合で一旦開発は途絶えたのですが、半年ほど...]]></description><link>https://zenn.dev/minamo_labo/articles/ec0aa59644a677</link><guid isPermaLink="true">https://zenn.dev/minamo_labo/articles/ec0aa59644a677</guid><pubDate>Sun, 05 Oct 2025 16:30:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U5UnFK1L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25AB%25E3%2581%2582%25E3%2581%259F%25E3%2582%258A%25E3%2580%2581%25E8%2587%25AA%25E5%25B7%25B1%25E7%25B4%25B9%25E4%25BB%258B%25E3%2582%2592%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:minamo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSklZdWpxUFNmWnF4WHlMMzVmQ2F4R1FHS1RYbHVfdE1GQk52WkQ4ZC10dl9nQWhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>minamo</dc:creator></item><item><title><![CDATA[「happy-dom」vs「jsdom」 機能比較とパフォーマンス測定]]></title><description><![CDATA[
 はじめに
現在、React Router を使ってウェブアプリを作っているのですが、テストライブラリには happy-dom を使っています。
当初は jsdom を使っていたのですが、画面遷移時のテストで上手くいかない問題に遭遇しました。
具体的には、リダイレクト先の URL をテストで確認したかったのですが、jsdom で実現するには結構難航しそうでした。
happy-dom に切り替えることで無事解消されましたが、そもそも happy-dom と jsdom にはどんな違いがあるのか気になり、今回調べてみました。
また、以下の記事で「happy-dom の方がパフォーマンスが良...]]></description><link>https://zenn.dev/lecto/articles/052528b20144da</link><guid isPermaLink="true">https://zenn.dev/lecto/articles/052528b20144da</guid><pubDate>Sun, 05 Oct 2025 14:16:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rn_o_Hfm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258Chappy-dom%25E3%2580%258Dvs%25E3%2580%258Cjsdom%25E3%2580%258D%2520%25E6%25A9%259F%25E8%2583%25BD%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%25B8%25AC%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:tamoco%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYzIzMDI3ODQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Lecto%252C%2520Inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSncxc3hPRzZtOHdRX0tfU0JsaGszN2s5dFhWUl9RNnJ3UFdDQlQ4UTNieDJEei10cmc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tamoco</dc:creator></item></channel></rss>