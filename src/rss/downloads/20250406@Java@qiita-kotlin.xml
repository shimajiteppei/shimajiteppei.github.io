<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/kotlin/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/kotlin/feed"/>
  <title>Kotlinタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでKotlinタグが付けられた新着記事</description>
  <updated>2025-04-06T17:01:12+09:00</updated>
  <link>https://qiita.com/tags/kotlin</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2009301</id>
    <published>2025-04-06T17:01:12+09:00</published>
    <updated>2025-04-06T17:01:12+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Otohu_mimizu/items/1564766457637cd94c9f"/>
    <url>https://qiita.com/Otohu_mimizu/items/1564766457637cd94c9f</url>
    <title> Kotlinで扱うクラスを学ぶ</title>
    <content type="html">Kotlin開発で使用されるクラスの種類

class
data class
object
companion object
enum class
abstract class
interface
s…</content>
    <author>
      <name>Otohu_mimizu</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2009204</id>
    <published>2025-04-06T13:45:16+09:00</published>
    <updated>2025-04-06T13:45:16+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hayato-c18/items/be9a71d704aca96f89a3"/>
    <url>https://qiita.com/hayato-c18/items/be9a71d704aca96f89a3</url>
    <title>【コルーチン】launchとsuspendの役割を改めて確認する</title>
    <content type="html">コルーチンとは
コルーチンとは、軽量なスレッドのようなもので、非同期処理や並行処理を効率的に行うための仕組みです。Kotlinでは、コルーチンを使うことで、複雑な非同期処理をシンプルに書くことができ…</content>
    <author>
      <name>hayato-c18</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2009174</id>
    <published>2025-04-06T12:22:04+09:00</published>
    <updated>2025-04-06T12:22:04+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yu-ko-ba/items/8d09b91607f469bec0ce"/>
    <url>https://qiita.com/yu-ko-ba/items/8d09b91607f469bec0ce</url>
    <title>Compose Multipatformで作ったWebアプリをPWA化する</title>
    <content type="html">TL;DR
[versions]
# ...

+ yuyuyuyuyu-composePwa = "0.1.0"

[libraries]
# ...

[plugins]
# ...

+ yuyuyu…</content>
    <author>
      <name>yu-ko-ba</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2009092</id>
    <published>2025-04-06T06:02:42+09:00</published>
    <updated>2025-04-06T06:02:42+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuta-10112022/items/83c2b5fc56af8a160224"/>
    <url>https://qiita.com/yuta-10112022/items/83c2b5fc56af8a160224</url>
    <title>画面の結果を受け取る</title>
    <content type="html">画面を閉じた時に前の画面の結果によって処理を分ける方法をメモします。ActivityResultContracts.StartActivityForResultを使用します。
Activity → …</content>
    <author>
      <name>yuta-10112022</name>
    </author>
  </entry>
</feed>
