<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/rust/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/rust/feed"/>
  <title>Rustタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでRustタグが付けられた新着記事</description>
  <updated>2025-05-03T18:42:58+09:00</updated>
  <link>https://qiita.com/tags/rust</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2021399</id>
    <published>2025-05-03T18:42:58+09:00</published>
    <updated>2025-05-03T19:26:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/imai_yoshiya/items/ba2d8517319ffd214ea7"/>
    <url>https://qiita.com/imai_yoshiya/items/ba2d8517319ffd214ea7</url>
    <title>Rust で nom を使って Pseudo-Boolean のインスタンスファイルのパーサーを作ってみた</title>
    <content type="html">はじめに
　初めて nom を使ってみて最初の数時間ほどは何もわからず戸惑ってしまったので，同じく初めて使う方の参考になればと記事にしてみました．
　以下では，適当にごまかしつつ部分的に細かい解説も…</content>
    <author>
      <name>imai_yoshiya</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2021334</id>
    <published>2025-05-03T16:08:52+09:00</published>
    <updated>2025-05-03T16:16:08+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yonaka15/items/cc3120dd6720f7edb17c"/>
    <url>https://qiita.com/yonaka15/items/cc3120dd6720f7edb17c</url>
    <title>【Rust】Burnのソースから学ぶ「自動微分」</title>
    <content type="html">なぜ「自動微分」が必要なのか？
AIの学習とは「調整」の繰り返し
AIが学習するとは、簡単に言えば「設定値（パラメータ）を少しずつ調整して、正解に近づけていく作業」です。例えば、猫の画像を判別するA…</content>
    <author>
      <name>yonaka15</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2021111</id>
    <published>2025-05-02T23:50:35+09:00</published>
    <updated>2025-05-02T23:51:13+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yonaka15/items/75180225933918b97bad"/>
    <url>https://qiita.com/yonaka15/items/75180225933918b97bad</url>
    <title>Rustにおける整数オーバーフローの挙動</title>
    <content type="html">はじめに
Rustは安全性を重視した言語ですが、整数演算のオーバーフローに関しては注意がひつようで。デバッグモードでは整数オーバーフローが発生するとパニックしますが、リリースモードではラッピング（桁…</content>
    <author>
      <name>yonaka15</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2020994</id>
    <published>2025-05-02T17:58:40+09:00</published>
    <updated>2025-05-02T17:58:40+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/misohagi/items/e4a60e396ccbd724b7cc"/>
    <url>https://qiita.com/misohagi/items/e4a60e396ccbd724b7cc</url>
    <title>C,C++,Rust,Goに見るテキストの埋め込み</title>
    <content type="html">きっかけ
Rustでi18nを使っていて、ライブラリを使わずにyamlやjsonにテキストをまとめておくと、実行時にそのファイルがないと動かない状況でした。
しかし、i18nクレイトを使うと実行時に…</content>
    <author>
      <name>misohagi</name>
    </author>
  </entry>
</feed>
