<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 02 May 2025 06:24:59 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[React Hook Form / defaultValues における「値なし」の扱い方]]></title><description><![CDATA[フロントエンドを担当している三谷です。
弊社の「値がない」を示す基本方針としては、UI層以上では undefined を扱い、バックエンドに送信する際に null に変換するという形を取っています。
この設計により「値がない」を表す型が複雑になることなく、APIやデータベースとの整合性も保ちやすくなります。
しかし、undefined を返す可能性があるデータ取得の関数の返り値をそのままdefaultValues に渡すと、フォーム管理に利用しているReact Hook Formの挙動と噛み合わず、意図しない不具合やWarningでつまづきました。
今どきAIに聞けば対処療法的には解決で...]]></description><link>https://zenn.dev/taian/articles/609c1d377f92b1</link><guid isPermaLink="true">https://zenn.dev/taian/articles/609c1d377f92b1</guid><pubDate>Fri, 02 May 2025 05:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CteztE5N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hook%2520Form%2520%252F%2520defaultValues%2520%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2580%258C%25E5%2580%25A4%25E3%2581%25AA%25E3%2581%2597%25E3%2580%258D%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mitani.i%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MWVkNzdkZjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TAIAN%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzM2Y2MTdmMmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitani.i</dc:creator></item><item><title><![CDATA[履歴書の画像をOpenAI APIで解析して情報を抽出してみた]]></title><description><![CDATA[
 始めに
今までOpenAI APIを触ったことのなかったので
他の記事で、OpenAI API（GPT-4o）を使って画像等を認識、解析してデータ化した記事があったので
そちらを参考に今回自身の記録として残すことにしました。
私の場合TypeScript、Expressを組み合わせて、履歴書画像をアップロードし、その内容をJSON形式で構造化・表示させてみました。
認識ミスありましたらご教示いただけますと幸いです。

 行ったこと

ブラウザから履歴書画像（PNG/JPEG等）をアップロード
Base64形式に変換してOpenAI APIに送信
ChatGPTが内容を解析し、JSON...]]></description><link>https://zenn.dev/sonicmoov/articles/796f8046213864</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/796f8046213864</guid><pubDate>Fri, 02 May 2025 04:15:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ym27JYBT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B1%25A5%25E6%25AD%25B4%25E6%259B%25B8%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592OpenAI%2520API%25E3%2581%25A7%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2597%25E3%2581%25A6%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:n.kawashima%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3BkQkZZUGlFVEIwUzV6NWdBV2F2M0FEWUxWVG9tblJqSW0ybl93QjVaRGdrUm1nPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n.kawashima</dc:creator></item><item><title><![CDATA[PlaywrightのAPIテストでトークンを使いまわす]]></title><description><![CDATA[
 はじめに
Playwrightは、WebアプリケーションのE2Eテスト行うツールとしての印象が強いですが、APIテストも実行することができます。ここでは、APIテストを書く際にトークンを使いまわす方法について説明します。

 実現したいこと
Web API のよくある仕様として、ログイン用のAPIにユーザー認証情報を送信して、トークンを取得し、そのトークンを使って他のAPIを利用するというものがあります。
ログイン以外のAPIのテストをするときに、毎回ログイン用APIを実行してトークンを取得し、その後本来実行したいAPIを実行するのは、テストの実行時間が長くなります。
ここでは、ログ...]]></description><link>https://zenn.dev/jyoppomu/articles/90c690c5823024</link><guid isPermaLink="true">https://zenn.dev/jyoppomu/articles/90c690c5823024</guid><pubDate>Fri, 02 May 2025 03:31:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5TZgy7hd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25AEAPI%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%25BE%25E3%2582%258F%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2520Yoshida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dWTk8taTFaYXc2blBpeUpQQi16cHN5SXRycEFBeDhObk9OajUxYUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuki Yoshida</dc:creator></item><item><title><![CDATA[Playwrightでログイン状態を保持する]]></title><description><![CDATA[
 はじめに
Webアプリケーションのテストで「あらかじめログインした状態からテストを始めたい」というのはよくあるニーズです。Playwrightでは、Authenticationにあるように、ログイン後の browser state を保存して、使い回すのが基本的な実装方法です。ここではサンプルコードを紹介します。

 ログイン状態の保持

 セッションの保存

tests/auth.setup.ts
import { test as setup, expect } from '@playwright/test';

const sessionFile = '.auth/user.js...]]></description><link>https://zenn.dev/jyoppomu/articles/56426db5d78dfc</link><guid isPermaLink="true">https://zenn.dev/jyoppomu/articles/56426db5d78dfc</guid><pubDate>Fri, 02 May 2025 03:31:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7_8zg2K3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E7%258A%25B6%25E6%2585%258B%25E3%2582%2592%25E4%25BF%259D%25E6%258C%2581%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuki%2520Yoshida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dWTk8taTFaYXc2blBpeUpQQi16cHN5SXRycEFBeDhObk9OajUxYUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuki Yoshida</dc:creator></item><item><title><![CDATA[Cursor と OpenAPI Specification を利用して TypeScript SDK を自動生成する方法]]></title><description><![CDATA[本記事ではCursorとAIの力を活用して、OpenAPI仕様からTypeScript SDKを自動生成する方法を紹介します。APIクライアントの実装は時間と労力を要する作業ですが、AIを活用することで効率化できます。

 なぜSDKを自動生成するのか？
APIを利用する際、SDKがあれば様々なメリットがあります。TypeScriptの型システムによるコード補完や型チェックが利用できる点、複雑なAPIリクエストをシンプルなメソッド呼び出しに抽象化できる点などが挙げられます。またコードにドキュメントが組み込まれるため使い方も明確になり、APIに変更があった場合もSDKを更新するだけで対応可...]]></description><link>https://zenn.dev/digitalcube/articles/a7e42a310bddee</link><guid isPermaLink="true">https://zenn.dev/digitalcube/articles/a7e42a310bddee</guid><pubDate>Fri, 02 May 2025 00:32:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ERuFvTC---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cursor%2520%25E3%2581%25A8%2520OpenAPI%2520Specification%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%2520TypeScript%2520SDK%2520%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Okamoto%2520Hidetaka%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0Y2U1ZTFlODkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiZjI5ZDBmZjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Okamoto Hidetaka</dc:creator></item><item><title><![CDATA[CoR パターンで実装する Next.js の middleware]]></title><description><![CDATA[GoF が提唱したデザインパターンのうち、 Chain of Responsibility パターン(以下、CoR パターン) というものがあります。責任の連鎖とも訳されますね。
CoR パターンはその名の通り、チェーンに見立てて処理を複数の関数へ順々に回していく仕組みです。
自分の関心事ではないと判断したら、次の関数に処理をバトンタッチしていきます。
良い面としては処理の追加・変更・削除などが比較的容易で、関心事に集中しやすくなります。
難しい面としては、処理がストップした場合にエラーの原因を追うのが少し大変だったり、常に処理する順番を意識する必要があります。
CoR パターン自体の説...]]></description><link>https://zenn.dev/chot/articles/7f4a73f79d5a0a</link><guid isPermaLink="true">https://zenn.dev/chot/articles/7f4a73f79d5a0a</guid><pubDate>Fri, 02 May 2025 00:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P7jVFXFW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CoR%2520%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2520Next.js%2520%25E3%2581%25AE%2520middleware%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shumpei%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyY2ZhOWM5YTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shumpei</dc:creator></item><item><title><![CDATA[Astro に Path alias を設定する]]></title><description><![CDATA[前回 Astro x TypeScript + React のプロジェクトに Prettier, ESLint を導入したので、
パスエイリアスも使えるようにして開発体験を良くしていき
環境

astro@5.7.5
typescript@5.8.3
react@19.1.0


 👾 Astro x Path alias の設定
https://docs.astro.build/en/guides/typescript/#import-aliases
Astro は tsconfig にパスエイリアスを設定すれば、パスエイリアスとして扱われる

 tsconfig.json に pat...]]></description><link>https://zenn.dev/kikiki_kiki/articles/920c0c7fba083e</link><guid isPermaLink="true">https://zenn.dev/kikiki_kiki/articles/920c0c7fba083e</guid><pubDate>Thu, 01 May 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oymJkomi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%2520%25E3%2581%25AB%2520Path%2520alias%2520%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KiKiKi%2520KiKi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmMWU4OWU5ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KiKiKi KiKi</dc:creator></item><item><title><![CDATA[bun install は npm より最大90倍速い!?!?──手元でガチ測定してみた]]></title><description><![CDATA[
 はじめに
・bunってnpmよりinstall速いらしいけど実際どれくらい速いの？
・私の手元でも速いの？
・みんな大好きなあのパッケージでも速いの？
Bunは、JavaScriptランタイムとしてNode.jsの代替を目指しており、パッケージマネージャーとしてだけでなく、以下のような面でも高速化を実現しています：

🚀 JavaScriptの実行速度（Node.jsの約4倍）
📦 ビルド速度（webpackやesbuildと比較して最大30倍）
🔄 Hot Reloading（従来のdev serverより高速）

今回は、その中でも特に開発者の日常的な作業に直結する(?)「パッケ...]]></description><link>https://zenn.dev/chanmio3108341/articles/npm-vs-bun-install</link><guid isPermaLink="true">https://zenn.dev/chanmio3108341/articles/npm-vs-bun-install</guid><pubDate>Thu, 01 May 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l0n0tS-3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:bun%2520install%2520%25E3%2581%25AF%2520npm%2520%25E3%2582%2588%25E3%2582%258A%25E6%259C%2580%25E5%25A4%25A790%25E5%2580%258D%25E9%2580%259F%25E3%2581%2584%2521%253F%2521%253F%25E2%2594%2580%25E2%2594%2580%25E6%2589%258B%25E5%2585%2583%25E3%2581%25A7%25E3%2582%25AC%25E3%2583%2581%25E6%25B8%25AC%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Chanmio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjODcxNTRmNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Chanmio</dc:creator></item><item><title><![CDATA[Cloudflare Workers に SPA アプリケーションをデプロイする]]></title><description><![CDATA[SPA アプリケーションをデプロイするのにずっと、Cloudflare Pages を使っていましたが、Cloudflare 公式のドキュメントにも 「新しいプロジェクトにはCloudflare PagesよりもCloudflare Workersの使用を推奨しています。」という記述が追加されたので、Cloudflare Workers に移行することにしました。
移行ドキュメントがかなりわかりやすいのであまり困ることはないかもしれませんが、新たにプロジェクトを作成してデプロイする術を残しておきます。
よく利用されるフレームワークはフレームワークのガイドに書かれていたりしますのでそちらを...]]></description><link>https://zenn.dev/mierune/articles/cloudflare-workers-static-spa-deploy</link><guid isPermaLink="true">https://zenn.dev/mierune/articles/cloudflare-workers-static-spa-deploy</guid><pubDate>Thu, 01 May 2025 16:50:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xKk79vzC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%2520%25E3%2581%25AB%2520SPA%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:NEKOYASAN%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDdjMTQzMmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MIERUNE%25E3%2581%25AEZenn%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2YTllZTA0ZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NEKOYASAN</dc:creator></item><item><title><![CDATA[React Monaco Editorのイベントハンドラに登録する際の初期化のタイミング]]></title><description><![CDATA[
 背景
React でファイルベースのエディタアプリを開発する際、ファイル構造ツリーからファイルを選択し、Monaco Editor でその内容を編集できるような構成は一般的です。
この記事では以下のようなコンポーネント構成を前提に、自動保存の実装時にハマったことの備忘録。（戒めです）

 コンポーネント構成


OuterLayout（親コンポーネント）

アプリ全体のレイアウトを管理し、エディタに渡す状態（selectedFile）を保持します。



FileTreeComponent

ファイル構造を表示し、ファイル選択時にそのパスと内容を取得して selectedFile を...]]></description><link>https://zenn.dev/antapp/articles/44970429687f2d</link><guid isPermaLink="true">https://zenn.dev/antapp/articles/44970429687f2d</guid><pubDate>Thu, 01 May 2025 14:39:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7I2rIohX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Monaco%2520Editor%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kutsu-4ta%2528yamashit...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZGQ1ZTdjY2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kutsu-4ta(yamashita_antapp)</dc:creator></item><item><title><![CDATA[Cloudflare Workers によるエッジ API 構築体験 調査結果]]></title><description><![CDATA[
 調査日
2025年5月1日（木）

 調査目的
Cloudflare Workers を用いて、世界中で高速に応答可能なサーバレス API を構築・公開し、開発からデプロイまでの流れを体験する。

 実施環境

OS: Windows 11
Node.js: 20.x
wrangler: 4.13.2
Cloudflare アカウント: 無料プラン
プロキシ環境: 有り（環境変数による自動検出）
ブラウザ: Google Chrome


 手順

 1. wrangler のインストールと認証
npm install -g wrangler
wrangler login
ブラウザで...]]></description><link>https://zenn.dev/homatsu_tech/articles/a6cf25a97941f7</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/a6cf25a97941f7</guid><pubDate>Thu, 01 May 2025 13:32:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XxpQlMio--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%2520API%2520%25E6%25A7%258B%25E7%25AF%2589%25E4%25BD%2593%25E9%25A8%2593%2520%25E8%25AA%25BF%25E6%259F%25BB%25E7%25B5%2590%25E6%259E%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[【TypeScript】おすすめの教材について]]></title><description><![CDATA[
 【TypeScript】おすすめの教材について
TypeScript を始めてから半年ほど経ちました。最初は「型ってなに？」「JavaScript と何が違うの？」と戸惑うことも多かったのですが、今では日常的に使うようになり、少しずつ自信もついてきました。
今回は、私が TypeScript を学ぶ中で「これは本当に役に立った！」と感じた教材を、実際に使った感想とあわせてご紹介します。これから TypeScript を学びたい方や、もっと理解を深めたい方の参考になれば嬉しいです。

 実際に使って良かったおすすめ教材

 １．Web サイト

 🔹 サバイバル TypeScript
...]]></description><link>https://zenn.dev/hayatech/articles/ts-how-to-study</link><guid isPermaLink="true">https://zenn.dev/hayatech/articles/ts-how-to-study</guid><pubDate>Thu, 01 May 2025 11:50:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hRSAoKu4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2581%258A%25E3%2581%2599%25E3%2581%2599%25E3%2582%2581%25E3%2581%25AE%25E6%2595%2599%25E6%259D%2590%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OTUyMWE4YzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HayaTech</dc:creator></item><item><title><![CDATA[【React Native】WebView でアンカーリンクへ自動スクロールされない問題を解決する]]></title><description><![CDATA[
 WebView でアンカーリンク遷移できない
React Native モバイルアプリの WebView で以下のような #fragment 付き URL を開いたとき、ブラウザのようにアンカーリンクまでスクロールされない 時の対処法を紹介したいと思います。
https://example.com/#fragment

ブラウザならリンクを踏むだけでスクロールしてくれるのに…🤔


 injectedJavaScript を使ってアンカーリンクへスクロールさせる

 ステップ 1 — フラグメント（#fragment）を取り出す
まずは渡された URL からハッシュ部分だけを抜き出し...]]></description><link>https://zenn.dev/mari_dev/articles/reactnative-anchorlink</link><guid isPermaLink="true">https://zenn.dev/mari_dev/articles/reactnative-anchorlink</guid><pubDate>Thu, 01 May 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w3A9AHm3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%2520Native%25E3%2580%2591WebView%2520%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%25B3%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25B8%25E8%2587%25AA%25E5%258B%2595%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mari_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS056a1d3V1g1N3hQUWRsQ2tvMXVZQ0dIbm9PMmhsRUlUSk5uWWhoRGo5TlVUZXN5UT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mari_dev</dc:creator></item><item><title><![CDATA[メモ：React Miami 2025]]></title><description><![CDATA[偶然見つけたカンファレンスが非常に良かったので雑にメモ。
力尽きたのでまとめ途中で公開します.. ななみん風「後は頼みます」
React Miami 2025
https://www.reactmiami.com
Live Streaming (ref.):

Day 1: https://www.youtube.com/live/sJrGEfInIZQ

Day 2: https://www.youtube.com/live/DPSRGLk6DDQ



 はじめに
React MiamiのCo-organizerであるGabe Greenberg氏からはじめの挨拶。

 このカンファ...]]></description><link>https://zenn.dev/wiyco/articles/ed22070e7f80dd</link><guid isPermaLink="true">https://zenn.dev/wiyco/articles/ed22070e7f80dd</guid><pubDate>Thu, 01 May 2025 08:53:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BRzWjQQJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2583%25A1%25E3%2583%25A2%25EF%25BC%259AReact%2520Miami%25202025%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wiyco%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMTJiNGUyZmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wiyco</dc:creator></item><item><title><![CDATA[社内向け CLI ツール開発で Notion × GitHub 連携の小さな不満を解消する]]></title><description><![CDATA[
 はじめに
わたしの所属するチームでは Notion を使ってかんばん運用しており、GitHub インテグレーションを用いて Pull Request のステータスと Notion 上のタスクのステータスを同期させる運用を行っています。 この方法は Pull Request を中心とした開発ワークフローに Notion の強力なドキュメンテーション機能をシームレスに繋げることができ便利ですが、タスク着手時にタスクと Pull Request を紐づけるための定型作業を毎回行う必要があり、面倒に感じていました。
具体的には、タスクに着手する際に以下の一連の操作が必要でした。

ブランチを...]]></description><link>https://zenn.dev/ashita_team/articles/cli-for-notion-github</link><guid isPermaLink="true">https://zenn.dev/ashita_team/articles/cli-for-notion-github</guid><pubDate>Thu, 01 May 2025 07:12:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0eEBhkax--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A4%25BE%25E5%2586%2585%25E5%2590%2591%25E3%2581%2591%2520CLI%2520%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%2520Notion%2520%25C3%2597%2520GitHub%2520%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25AE%25E5%25B0%258F%25E3%2581%2595%25E3%2581%25AA%25E4%25B8%258D%25E6%25BA%2580%25E3%2582%2592%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25BF%25E3%2583%2594%25E3%2582%25AA%25E3%2582%25AB%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2ZjczNWNiYTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%2582%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYWUzOWQ1ZDkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タピオカ</dc:creator></item><item><title><![CDATA[【OSSもLLMに読ませよう！】Code Reading Agent を作るのはいいぞ]]></title><description><![CDATA[
 LLMの与えた衝撃
LLM はプログラミングを変えました。
今やプログラミングは、文法を通じて機械を操縦する道具ではなく、自然言語を入力として機械を操縦する道具と化しました。
Cline, Cursor, Copilot など... 既存のツールにとどまらず、今後もその進化は続いていくことでしょう。
その潜在的な進化の余地に、OSSなどの大規模コードを読むことも含まれると思います。
ここでは、OSSなどの大規模コードを読むことにどのように LLMを使えるかを議論します。

 Code Reading Agent とは？
Code Reading Agent とは、「コードリーディング...]]></description><link>https://zenn.dev/coffeecupjp/articles/89bb2b40ced6eb</link><guid isPermaLink="true">https://zenn.dev/coffeecupjp/articles/89bb2b40ced6eb</guid><pubDate>Thu, 01 May 2025 05:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F35B9Fw8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590OSS%25E3%2582%2582LLM%25E3%2581%25AB%25E8%25AA%25AD%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25E3%2580%2591Code%2520Reading%2520Agent%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2584%25E3%2581%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuya%2520Kurihara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NThhOTNlMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuya Kurihara</dc:creator></item><item><title><![CDATA[事業を起点に考えるプロダクト立ち上げ時の技術選定と開発体制]]></title><description><![CDATA[GVA TECH株式会社でエンジニアをしているYorintonと申します。
初めての記事投稿です。
今回は、私が立ち上げから担当している『OLGA』というプロダクトの『法務データ基盤モジュール』について、プロダクト立ち上げ時の技術選定と開発体制の構築の考え方をご紹介します。

 この記事の目的

OLGAの法務データ基盤の開発チームが技術だけでなく事業からブレイクダウンして技術選定や開発体制の構築を行なっている、ということを知ってもらいたい
技術の特性だけでなく、事業や組織も技術選定に大きな影響を及ぼすということを知ってもらい、これから技術選定する人の参考にしてもらいたい
技術そのものだ...]]></description><link>https://zenn.dev/gvatech_blog/articles/5eed25080c01e4</link><guid isPermaLink="true">https://zenn.dev/gvatech_blog/articles/5eed25080c01e4</guid><pubDate>Thu, 01 May 2025 05:26:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0W0FbaFR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BA%258B%25E6%25A5%25AD%25E3%2582%2592%25E8%25B5%25B7%25E7%2582%25B9%25E3%2581%25AB%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E6%2599%2582%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25A8%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E5%2588%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yorinton%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNjI5MDhlYWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GVATECH%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZWM0NWM2ZjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yorinton</dc:creator></item><item><title><![CDATA[[TypeScript] 私なりのMicrosoftのコーディングガイドの要約]]></title><description><![CDATA[
 はじめに
この記事では、一部抜粋したMicrosoft のコーディングガイド をまとめております。
また、注意事項を確認してください

!
注意事項
これらは TypeScript への貢献者のためのコーディングガイドラインです。
これは TypeScript コミュニティのための指示的なガイドラインではありません。
これらのガイドラインは、TypeScript プロジェクトのコードベースへの貢献者のためのものです。
私たちはチームの一貫性のために多くのガイドラインを選びました。
あなた自身のチームのためにこれらを採用することは自由です。再度言いますが、
これは TypeScript...]]></description><link>https://zenn.dev/aew2sbee/articles/typescript-doding-guidelines-microsoft</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/typescript-doding-guidelines-microsoft</guid><pubDate>Thu, 01 May 2025 04:14:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N8jeGDgy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520%25E7%25A7%2581%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25AEMicrosoft%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%2580%2589%25E3%2581%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhN2I0MzQ2ZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小倉あん</dc:creator></item><item><title><![CDATA[Next.jsをAmplify Hostingするとサーバーのenvが読み込めない問題の対処法]]></title><description><![CDATA[
 はじめに
Next.jsのアプリケーションでAmplify Hostingすると、publicじゃないサーバー用のenvが読み込めない問題があり、対処法を調べた

 結論
next.config.tsに設定する必要あり
これだけ

next.config.ts
const nextConfig = {
  // いろいろ設定
  env: {
    SERVER_VALIABLES: process.env.SERVER_VALIABLES,
  },
}


 最後に
特に個人開発するには、金銭的な理由でvercelよりAmplifyの方が安く済むので、Next.jsでフルスタッ...]]></description><link>https://zenn.dev/sonicmoov/articles/57f0e8b0e4753a</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/57f0e8b0e4753a</guid><pubDate>Thu, 01 May 2025 04:13:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BekNou1r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2582%2592Amplify%2520Hosting%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AEenv%25E3%2581%258C%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2581%25E3%2581%25AA%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu_aoringo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[【TypeScript】ReturnType<typeof 関数名>とは？]]></title><description><![CDATA[
 関数の型と関数の戻り値の型
type 型名 = ReturnType&lt;typeof 関数名&gt;;
上記のような構文があったとき、ReturnTypeとtypeof 関数名の違いについて調べたのでメモ（どちらも関数の型＝関数の戻り値の型？と思ったので）。
以下の文字列を受け取って文字列を返す関数greetについて考える。
function greet(name: string): string {
  return `Hello, ${name}`;
}

 typeof 関数名
これは「関数自体の型」を表し、戻り値だけでなく、引数の型情報も含む。
上記のgreet関数の場合...]]></description><link>https://zenn.dev/iskw_tech/articles/0eaade874712a5</link><guid isPermaLink="true">https://zenn.dev/iskw_tech/articles/0eaade874712a5</guid><pubDate>Thu, 01 May 2025 01:44:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ynwqHo6W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591ReturnType%253Ctypeof%2520%25E9%2596%25A2%25E6%2595%25B0%25E5%2590%258D%253E%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A4%25E3%2582%25B7%25E3%2582%25AB%25E3%2583%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUhxY25EM0hyQTRvYWpEcnUxN3l0UnAzYXVwUDY2XzhLZUNzcjhjYkh3ejBvNG1IQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>イシカワ</dc:creator></item></channel></rss>