<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2024-12-06T19:37:44+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1949027</id>
    <published>2024-12-06T19:37:44+09:00</published>
    <updated>2024-12-06T20:15:26+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuto99999/items/34e46438f71dc155d70c"/>
    <url>https://qiita.com/yuto99999/items/34e46438f71dc155d70c</url>
    <title>【TypeScript】条件値によって戻り値を切り替える型の実装（type-challenges 初級編 268・if）</title>
    <content type="html">お題
条件値C、Cがtruthyである場合の戻り値の型T、Cがfalsyである場合の戻り値の型Fを受け取るIfを実装する。条件値Cはtrueかfalseのどちらかであることが期待されるが、TとFは任…</content>
    <author>
      <name>yuto99999</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1949001</id>
    <published>2024-12-06T18:56:08+09:00</published>
    <updated>2024-12-06T19:51:48+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuto99999/items/b66b597bf61e47e126fe"/>
    <url>https://qiita.com/yuto99999/items/b66b597bf61e47e126fe</url>
    <title>【TypeScript】Awaited&lt;T&gt;の自作（type-challenges 初級編 189・Awaited）</title>
    <content type="html">お題
Promiseの解決値の型Tを取得するユーティリティ型、Awaited&amp;lt;T&amp;gt;を自作する。
やりたいこと
type ExampleType1 = Promise&amp;lt;string&amp;gt;;
type Ex…</content>
    <author>
      <name>yuto99999</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1948997</id>
    <published>2024-12-06T18:49:45+09:00</published>
    <updated>2024-12-06T18:50:44+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/_z_m_n_/items/bf1a94277deeedf53575"/>
    <url>https://qiita.com/_z_m_n_/items/bf1a94277deeedf53575</url>
    <title>WebComponentsを使ってMUI のPopoverを同じページの複数箇所に出したいときの方法</title>
    <content type="html">（2年ほど前のメモが残っていたので記事化…）
困ったこと
WebComponents内でMUIのPopoverを同じコンポーネント内の複数箇所に出したいとき、公式ドキュメントの実装例をそのまま真似し…</content>
    <author>
      <name>_z_m_n_</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/1948966</id>
    <published>2024-12-06T18:15:16+09:00</published>
    <updated>2024-12-06T18:18:48+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/_z_m_n_/items/1dc8cee5c3c78807c54b"/>
    <url>https://qiita.com/_z_m_n_/items/1dc8cee5c3c78807c54b</url>
    <title>Material UI(MUI) + WebComponents でCSSが無効化されるのを回避する方法</title>
    <content type="html">（2年ほど前のメモが残っていたので記事化…）
前提

普通にReactで書いたコンポーネントを、react-to-webcomponentでウェブコンポーネントに変換した。
親画面とスタイルのスコープ…</content>
    <author>
      <name>_z_m_n_</name>
    </author>
  </entry>
</feed>
