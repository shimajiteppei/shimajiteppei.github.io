<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 07 Jun 2025 07:58:55 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【メモ】TypeScriptプロジェクト初期セットアップ（Vite版）]]></title><description><![CDATA[
 目標

Vitaを利用してHTML+TypeScriptのプロジェクトを作成
HTML+TypeScriptのコンテンツをViteサーバーで提供。
gtsを利用してGoogle TypeScript Style Guideに従うようにESLintを設定。
VSCodeで編集時にlinter、保存時にformatterが効くようにする。


 前提

2025/6の時点での情報に従う。
nodejsの環境はセットアップ済み。
VSCodeはセットアップ済み。


 セットアップ

 webpackインストール
npm init vite@latest . -- --template v...]]></description><link>https://zenn.dev/kurta/articles/fa1a116574dbe0</link><guid isPermaLink="true">https://zenn.dev/kurta/articles/fa1a116574dbe0</guid><pubDate>Sat, 07 Jun 2025 07:51:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Bo5D9Ov--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591TypeScript%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%2588%259D%25E6%259C%259F%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25EF%25BC%2588Vite%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kurta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyMDRmOWM0OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kurta</dc:creator></item><item><title><![CDATA[GAS関数だってフロントエンドから型安全に呼び出ししたい！]]></title><description><![CDATA[
 概要
GAS芸人の皆さん、こんにちは！
HtmlServiceを使ったWebアプリ開発、手軽に公開できて沼りますよね🫠
最近は@google/claspとvite-plugin-singlefileを活用して、ReactやVueをGASにホストすることにハマっています。

補足：HtmlServiceとは？
Google Apps Script（GAS）でHTMLやJavaScriptを使ったWebアプリを作成・公開できる仕組みです。
GAS初心者の方は、公式ドキュメントも参考にしてみてください。

そんな中でフロントエンドからサーバサイド（GAS）の関数を呼び出すために必ず利用する...]]></description><link>https://zenn.dev/luth/articles/gasnuki-publish</link><guid isPermaLink="true">https://zenn.dev/luth/articles/gasnuki-publish</guid><pubDate>Sat, 07 Jun 2025 06:21:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QgNpwymA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luth%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNjRjYzI5NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luth</dc:creator></item><item><title><![CDATA[TypeScriptでマイクラやってみた]]></title><description><![CDATA[統合版マイクラには Script API という機能があり、JavaScriptで既存のマイクラのしくみを変えるアドオンを作成ことができます。TypeScriptでの開発にも対応しています。
https://learn.microsoft.com/en-us/minecraft/creator/documents/scriptinggettingstarted?view=minecraft-bedrock-stable
TypeScriptを使ってのScriptAPIの環境開発構築と
One Block Challenge風のブロックを壊すとランダムに新しいブロックが生成されるしくみ
を...]]></description><link>https://zenn.dev/sumiso_c0db8c/articles/036946fd7812f0</link><guid isPermaLink="true">https://zenn.dev/sumiso_c0db8c/articles/036946fd7812f0</guid><pubDate>Sat, 07 Jun 2025 06:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0T9JSTfG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumiso_c0db8c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTF6aUQtcjdoeWs1RDJBSUJqcTVJQWZCSENWRFIzSG1kTXFmS0Q5eXVxdm9VRGMxYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumiso_c0db8c</dc:creator></item><item><title><![CDATA[async 関数で await 使わず Promise を返すメモ]]></title><description><![CDATA[async で処理したいが, 遅延処理で処理終わってからなんかしたいなどで await で同期を取りたくない, 使えないときもある.

 基本構成(Promise object返す)
async fun() {
    return new Promise(...);
}
if else とかで分岐していて return しわすれすると処理されないので注意
使う側は then と catch を呼ぶ. こんな感じ.

なんかしょり...

fun().then((ret) =&gt; {
  ...
  }).catch((err) =&gt; {
  ...
  });

なんか処理続...]]></description><link>https://zenn.dev/syoyo/articles/c2f440ba8a5bd0</link><guid isPermaLink="true">https://zenn.dev/syoyo/articles/c2f440ba8a5bd0</guid><pubDate>Sat, 07 Jun 2025 02:14:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cnuqnwrN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:async%2520%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A7%2520await%2520%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%2520Promise%2520%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syoyo</dc:creator></item><item><title><![CDATA[TypeScript入門：関数の型定義～配列操作について]]></title><description><![CDATA[
 はじめに
最近はAIコーディングばかりで、自身の基礎的な理解が曖昧になっていると感じることがありました。そこで本記事では、自身の知識を整理し、理解を深める目的で、TypeScriptの要点をできるだけかみ砕いてアウトプットとしてまとめます。

 1.引数と戻り値の基本
JavaScriptでも関数はたくさん使っていましたが、TypeScriptではもっと厳密に、そして安全に関数を扱えます。

 ポイント
ポイントは、引数（関数に渡すデータ）と戻り値（関数から返ってくるデータ）それぞれに、「君のデータの種類はこれだよ」と型を決めてあげることでした。これを最初にやっておくと、後で全然違う...]]></description><link>https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</link><guid isPermaLink="true">https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</guid><pubDate>Sat, 07 Jun 2025 02:01:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cTOB812w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25EF%25BD%259E%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%25A7%25E6%259C%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MTAwYTVmYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碧月</dc:creator></item><item><title><![CDATA[cloudflare D1を使うReact Router v7のアプリを作り方（たぶん最速）]]></title><description><![CDATA[
 概要
react router v7と、cloudflare D1を使用したアプリケーションをORM（Drizzle）付きで作成する方法を備忘録がてらまとめます。
少し前に比べて、マイグレーション周り等利便性が向上していてとても便利になっていました。
プロジェクトの作成から、アプリのデプロイ、DBの接続までを行います。

 react router v7のプロジェクトの作成
以下のコマンドを実行します。

```bash
$npx create-react-router@latest --template remix-run/react-router-templates/cloudf...]]></description><link>https://zenn.dev/ramo798/articles/2a0c5e997da019</link><guid isPermaLink="true">https://zenn.dev/ramo798/articles/2a0c5e997da019</guid><pubDate>Fri, 06 Jun 2025 15:54:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agllZIii--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cloudflare%2520D1%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586React%2520Router%2520v7%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25EF%25BC%2588%25E3%2581%259F%25E3%2581%25B6%25E3%2582%2593%25E6%259C%2580%25E9%2580%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ramo798%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0ZWQxODJhZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ramo798</dc:creator></item><item><title><![CDATA[TypeScriptで人生が変わった話 - TypeScript大好きエンジニアの溺愛ポエム]]></title><description><![CDATA[
 はじめに - TypeScriptへの愛を込めて
『Zenn TypeScript記事投稿コンテスト』
こんなコンテストがあるなんて...！
文章は下手だし、みんなみたいに豊富な経験があるわけでもないけれど、このTypeScriptへの愛と学びは発信しておかないと、TypeScriptLoverとしての名が廃る。
そんな想いで、気づいたときにはキーボードを叩いていました。
ちなみに、AIが目まぐるしい勢いで成長している昨今、いつか自分の手でコードを書けなくなる日が来るかもしれません...😱 でも声を大にして宣言します。AIがどれだけ発展しても、TypeScriptは己が手一本で書き続...]]></description><link>https://zenn.dev/katakuriko_a/articles/512ca79b440741</link><guid isPermaLink="true">https://zenn.dev/katakuriko_a/articles/512ca79b440741</guid><pubDate>Fri, 06 Jun 2025 12:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NyBO23-o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E4%25BA%25BA%25E7%2594%259F%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2520-%2520TypeScript%25E5%25A4%25A7%25E5%25A5%25BD%25E3%2581%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%259D%25E3%2582%25A8%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Uni%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMWIxZjEyZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Uni</dc:creator></item><item><title><![CDATA[【Vercel】デプロイリージョンを日本に変更したら動作が早くなるかも]]></title><description><![CDATA[【Vercel】デプロイリージョンを日本に変更したら動作が速くなった話

 はじめに
普段の開発でVercelを使っているのですが、なんとなく表示が遅いな〜と感じていました。
調べてみるとデフォルトで
Washington, D.C., USA (East) - us-east-1 - iad1
アメリカのリージョンが設定されていました。

Tokyo, Japan (Northeast) - ap-northeast-1 - hnd1
にチェックをいれsaveを押下してください。

これによりリージョンが東京に変更されます。
せっかくコーディングなどで試行錯誤していても意外と見落としが...]]></description><link>https://zenn.dev/ren21/articles/276b3cd6574e96</link><guid isPermaLink="true">https://zenn.dev/ren21/articles/276b3cd6574e96</guid><pubDate>Fri, 06 Jun 2025 11:54:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NTrHHEvO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vercel%25E3%2580%2591%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E5%258B%2595%25E4%25BD%259C%25E3%2581%258C%25E6%2597%25A9%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%25E3%2582%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YTk2YTVjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れん</dc:creator></item><item><title><![CDATA[Next.jsプロジェクトにCIを実装したので備忘録]]></title><description><![CDATA[
 Next.jsプロジェクトにCIを実装したので備忘録
Next.jsプロジェクトでCI/CDの勉強としてCIを導入してみました。
特にprettierでtailwind-cssのクラスの整形も行ってくれて感動しました。
私は既に作成したアプリケーションに導入したのですが、次は最初から導入しようと思います。
今回は簡単なフォーマットやTailwindcssの整形、TypeScriptの型チェックを行うCIの実装を備忘録として残します。

 🎯 この記事でできること

ESLintでコードの品質チェック
TypeScriptの型チェック
Prettierでコードフォーマットチェック
Ta...]]></description><link>https://zenn.dev/ren21/articles/bba14870f89888</link><guid isPermaLink="true">https://zenn.dev/ren21/articles/bba14870f89888</guid><pubDate>Fri, 06 Jun 2025 11:10:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UpkS-8Dt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABCI%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YTk2YTVjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れん</dc:creator></item><item><title><![CDATA[【Discord.js】既読管理とリマインド機能を持つDiscord BOTを作ってみた]]></title><description><![CDATA[
 はじめに
こんにちは、saitogoです。
今回は、Discordサーバーでメッセージの既読管理とリマインド機能を持つBOTを開発したので、その紹介と使い方について記事にまとめました。
「重要なお知らせを投稿したけど、誰が読んだかわからない...」
「全員に確実に読んでもらいたい情報があるのに、見落とされてしまう...」
「メッセージをまだ見てない人にリマインドしたいけど、一人一人手動でDM送るのが面倒くさい...」
そんな課題を解決するために、メッセージの既読状況を視覚的に管理し、未読者にリマインドを送信できるBOTを開発しました。


 作成したBOTの概要
https://gi...]]></description><link>https://zenn.dev/saitogo/articles/8259eee6afc437</link><guid isPermaLink="true">https://zenn.dev/saitogo/articles/8259eee6afc437</guid><pubDate>Fri, 06 Jun 2025 09:16:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9VbAvJCH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Discord.js%25E3%2580%2591%25E6%2597%25A2%25E8%25AA%25AD%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25A8%25E3%2583%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4Discord%2520BOT%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saitogo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkOTUyMmM3ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saitogo</dc:creator></item><item><title><![CDATA[BiomeのGritQLプラグイン vs. ast-grep: JS開発者のためのAST変換ガイド]]></title><description><![CDATA[
 なぜASTツールがリンターにとって重要なのか
Zennの皆様こんにちは。ast-grepの著者、Herringtonです。
大規模プロジェクトで一貫性のある高品質なコードを維持することは、大きな課題です。最新のRustベースのLintingツールは、基本的なコーディング標準を強制する点で素晴らしいパフォーマンスを発揮しますが、開発者が高度にカスタムなプロジェクト固有のパターンや、コードベース全体にわたる自動化された大規模なリファクタリングを必要とする場合、しばしば不十分です。ここで、AST（Abstract Syntax Tree：抽象構文木）ベースのツール、特にネイティブリンターに...]]></description><link>https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</link><guid isPermaLink="true">https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</guid><pubDate>Fri, 06 Jun 2025 05:29:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agZTJNfU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2581%25AEGritQL%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2520vs.%2520ast-grep%253A%2520JS%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAST%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Herrington%2520Darkholme%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZWZPY0dMdmpkYjdJT0JURTFKNXB4d3ZVcEc2SEdRZ2w3bE1LZnR0SW1hMFRxTj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Herrington Darkholme</dc:creator></item><item><title><![CDATA[(papaparse)React + TypeScriptでCSVをパースする方法]]></title><description><![CDATA[CSVファイルを読み込むためにpapaparseライブラリを使いました。

 私の開発環境

React
TypeScript


 papaparseのインストール
npm install papaparse
npm install --save-dev @types/papaparse

 Papa.parse() 主な機能



オプション名
説明




header: true
最初の行をヘッダーとして扱う


skipEmptyLines: true
空の行をスキップ


complete
パースされたデータを親コンポーネントに渡す


error
エラー発生時の処理



...]]></description><link>https://zenn.dev/hyoni/articles/e46cc1f71eda90</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/e46cc1f71eda90</guid><pubDate>Fri, 06 Jun 2025 01:35:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JAk3Y9Rj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528papaparse%2529React%2520%252B%2520TypeScript%25E3%2581%25A7CSV%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[Next.jsプロジェクト新規作成のベストプラクティス：爆速開発を始めるための完全ガイド]]></title><description><![CDATA[
 はじめに
Next.jsは、Reactアプリケーションを構築するためのフレームワークです。サーバーサイドレンダリング（SSR）や静的サイト生成（SSG）などの機能が組み込まれており、高いパフォーマンスと優れた開発体験を提供します。
この記事では、Next.jsプロジェクトを新規作成する際の基本的な手順から、開発効率を最大化するための推奨設定までを網羅的に解説します。

 1. Next.jsプロジェクトの基本的な作成方法

 プロジェクトを作成するコマンド
まずは、Next.jsプロジェクトのひな形を作成します。以下のコマンドをターミナルで実行してください。
my-next-appの...]]></description><link>https://zenn.dev/pg_owl/articles/5776795262efe1</link><guid isPermaLink="true">https://zenn.dev/pg_owl/articles/5776795262efe1</guid><pubDate>Fri, 06 Jun 2025 01:27:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cFIt8LFc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.jsw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2584%25E3%2582%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliOGNmNDliOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ツジ</dc:creator></item><item><title><![CDATA[TypeScriptでオブジェクトのプレースホルダを置換する]]></title><description><![CDATA[function replaceKeywords(obj: any, replacements: Record&lt;string, string&gt;): any {
  if (typeof obj === 'string') {
    let result = obj;
    for (const [key, value] of Object.entries(replacements)) {
      result = result.replace(new RegExp(`\\{${key}\\}`, 'g'), value);
    }
    return resul...]]></description><link>https://zenn.dev/noelsun/articles/b346696537630e</link><guid isPermaLink="true">https://zenn.dev/noelsun/articles/b346696537630e</guid><pubDate>Fri, 06 Jun 2025 00:33:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5fTyUoD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259B%25E3%2583%25AB%25E3%2583%2580%25E3%2582%2592%25E7%25BD%25AE%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noelsun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEpJT01tVEphcHlKMUMxU3ZrZGpoX1p1R29tYklscy1Cc2xlb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noelsun</dc:creator></item><item><title><![CDATA[TypeScriptだけでフルスタック開発！AWS Amplify Gen2が変える開発の常識]]></title><description><![CDATA[フロントエンドエンジニアの多くは「バックエンドの構築」に対して一定の苦手意識を持っているのではないでしょうか。私自身も、インフラやAWSリソースの設定に手こずった経験は多くあります。
今回は、そんなフロントエンドエンジニアの助けになりうる「AWS Amplify Gen2」について紹介します。実際に触ってみて「これは非常に可能性がある」と感じたので、その魅力をお伝えしたいと思います。

 Amplifyってそもそも何？
まず前提として、AWS Amplifyとは何かを整理しておきましょう。
簡単に言えば「フロントエンドエンジニアがクラウドバックエンドを簡単に構築・連携できるようにするため...]]></description><link>https://zenn.dev/codeciao/articles/amplify-gen2-typescript-fullstack</link><guid isPermaLink="true">https://zenn.dev/codeciao/articles/amplify-gen2-typescript-fullstack</guid><pubDate>Thu, 05 Jun 2025 23:46:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zI33FyLu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2581AWS%2520Amplify%2520Gen2%25E3%2581%258C%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%25B8%25B8%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:e-ichinose%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNWI1NzhlNWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:codeciao%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmN3SlBhNjROWDQxZEptQWl3Z0JMdF9ZWEZaaHRnaDZTUlNwN0FpTXpkWkE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>e-ichinose</dc:creator></item><item><title><![CDATA[Next.js + Rails API を Docker コンテナで構築する手順]]></title><description><![CDATA[
 はじめに
昨今、フロントエンドに React（Next.js）を、バックエンドに Rails API を組み合わせた構成を見かける様になりました。
本記事では、「ホストマシンに Ruby や Node.js を一切インストールせず、すべて Docker コンテナ上で構築・起動する環境」をゼロから用意する手順を解説します。
本記事の手順に沿って必要なファイルを揃えれば、最後に docker compose up --build だけで開発環境が立ち上がり、Rails API と Next.js の開発サーバーを同時に動かせます。
また、本記事はあくまで開発の環境構築であり、本番環境の構...]]></description><link>https://zenn.dev/mothimothi/articles/821d6eb819b44a</link><guid isPermaLink="true">https://zenn.dev/mothimothi/articles/821d6eb819b44a</guid><pubDate>Thu, 05 Jun 2025 21:03:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UlaPPt_Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%252B%2520Rails%2520API%2520%25E3%2582%2592%2520Docker%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A1%25E3%2582%2582%25E3%2581%25A1%25E5%2592%258C%25E5%25B0%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1M2JhMTYwNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もちもち和尚</dc:creator></item><item><title><![CDATA[Azure AI Foundry のエージェント機能を使ってウェブ検索を行う（TypeScript）]]></title><description><![CDATA[
 概要
Azure AI Foundry のエージェント機能を使うためには、@azure/ai-projects というパッケージを利用する。
Github で言うと、以下のディレクトリに該当する。
https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/ai/ai-projects
公式ドキュメントを見ようとしたものの、ドキュメントの量が膨大でよく分からなかったため、コードを書きながら利用方法を探ってみた。

 リファレンス
読んでおくとよさそうな情報。
まずは以下のURLで表示される README の内容をさらっと見るのが良さ...]]></description><link>https://zenn.dev/tenkei/articles/008d111862bdb3</link><guid isPermaLink="true">https://zenn.dev/tenkei/articles/008d111862bdb3</guid><pubDate>Thu, 05 Jun 2025 15:10:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zx77uAis--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520AI%2520Foundry%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25EF%25BC%2588TypeScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOGQ2ZDA5MjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkei</dc:creator></item><item><title><![CDATA[DSLやめてSQLでいいんじゃない？]]></title><description><![CDATA[ORMはCUD処理は得意ですが、R（SELECT）処理は苦手です。
DSLのゴールはSQLへの翻訳であるのに、答え（SQL）を知っていても、わざわざ逆翻訳（DSL）しなければならない。
その上、各ORMライブラリごとにDSLの文法は異なり、SQL以上に方言だらけの世界です。
そこで改めて考えたい。なぜSQLを使わないのですか？

 SQLを忌避する理由
私が想像する理由は大きく5つあります。

SQLインジェクションが怖い
汎用性が低い
静的解析やコンパイルチェックが効かない
エンティティモデルへのマッピングが面倒
長文の保守性が悪い

これは今も本当に問題なのでしょうか？
SQLの解析...]]></description><link>https://zenn.dev/mkmonaka/articles/3c6799efb2be34</link><guid isPermaLink="true">https://zenn.dev/mkmonaka/articles/3c6799efb2be34</guid><pubDate>Thu, 05 Jun 2025 13:41:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7qttMze4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DSL%25E3%2582%2584%25E3%2582%2581%25E3%2581%25A6SQL%25E3%2581%25A7%25E3%2581%2584%25E3%2581%2584%25E3%2582%2593%25E3%2581%2598%25E3%2582%2583%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M%2520Sugiura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ODIyODg3MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>M Sugiura</dc:creator></item><item><title><![CDATA[Cline が一発で解いた TypeScript 型パズルを解読する]]></title><description><![CDATA[こんばんは、時間決めてすみません。社会人大学院生バンドマンの小林と申します。最近 TypeScript を書いていたら遭遇した面白い型エラーについて紹介しようと思います。
そこまで複雑な型パズルではないんだけど、そこそこ面白いから面白そうだな〜と思った人は是非具体的な例の部分のコードを TypeScript Playground にコピペして遊んでみてね。

 発端
ライブラリの関数を呼び出してそこそこ長い引数を渡そうとしていたときに、
functionA([
   {
      type: 'foo',
      idA: 1,
   },
   {
      type: 'ba...]]></description><link>https://zenn.dev/takabayap/articles/0525fc0d1cd75a</link><guid isPermaLink="true">https://zenn.dev/takabayap/articles/0525fc0d1cd75a</guid><pubDate>Thu, 05 Jun 2025 12:10:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IABdB2Xy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cline%2520%25E3%2581%258C%25E4%25B8%2580%25E7%2599%25BA%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%259F%2520TypeScript%2520%25E5%259E%258B%25E3%2583%2591%25E3%2582%25BA%25E3%2583%25AB%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TakabayaP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g2ZU9LZ1dYcVZxRTNGUEpBN3llYzdGeVVWUnpBQ2pDRDlwU1F4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TakabayaP</dc:creator></item><item><title><![CDATA[AI駆動開発やってみるか]]></title><description><![CDATA[
 回想
最近、2024年の12月に始めたReactでのメモ帳アプリ作成が最低実装水準を達成し、一旦の開発終了を迎えた。
元はといえば、SEとは名ばかりの車載IVIシステム検証テスター兼野良業務自動化男を脱却するために、モバイルアプリ開発を勉強していたことが発端だった。
Flutterでは社内案件の引き手が無く、泣く泣くHTML/Javascriptを経由してReactに辿り着いた。
今となってはReactの魅力もわかってきたし、アプリ開発を通して愛着も湧いてきた。
結果的にこの右往左往が身になっている実感がある。
しかし、困ったこともある。
参画中の客先常駐案件だ。
担当業務は自動車E...]]></description><link>https://zenn.dev/ferretbites/articles/dfe6ab7d9fa31b</link><guid isPermaLink="true">https://zenn.dev/ferretbites/articles/dfe6ab7d9fa31b</guid><pubDate>Thu, 05 Jun 2025 11:44:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mw1kY8aB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ferret_Vite%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3BXNm4tZ1JHUDNJY01YLWNWbzRfZGE0cGV1Z2R1VzUzYW5tVXNyRGs0RjRnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ferret_Vite</dc:creator></item></channel></rss>