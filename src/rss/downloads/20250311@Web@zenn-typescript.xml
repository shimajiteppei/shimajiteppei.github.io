<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 11 Mar 2025 07:06:15 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【TypeScript】基本的なコンパイル方法とtsconfigの設定]]></title><description><![CDATA[
 コンパイル方法

 対象のファイルをコンパイル
引数で指定したファイルをコンパイルします
tsc index.ts

 ウォッチモードでのコンパイル
引数で指定したファイルの変更を監視し、変更があった場合は自動でコンパイルします
tsc index.ts --watch
tsc index.ts -w

 プロジェクト全体のコンパイル

 1.tsconfig.jsonを生成
以下のコマンドを実行することでtsconfig.jsonが生成されます
tsconfig.jsonにコンパイルの設定を記述します
tsc --init

 2.コマンド実行
ディレクトリ内の.tsファイルが全て...]]></description><link>https://zenn.dev/yoshida_taro/articles/4234455ef9b34b</link><guid isPermaLink="true">https://zenn.dev/yoshida_taro/articles/4234455ef9b34b</guid><pubDate>Tue, 11 Mar 2025 06:36:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3WGj1yyt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8tsconfig%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2590%2589%25E7%2594%25B0%2520%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NjM2YjY3NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>吉田 たろう</dc:creator></item><item><title><![CDATA[download.ts]]></title><description><![CDATA[import axios from 'axios'

export interface IDownloadOptions {
  timeout?: number
  // UI update or logs record
  onCancel?: () =&gt; void
}

export interface IDownloadResult {
  cancel: () =&gt; void
  download: Promise&lt;Blob&gt;
}

export const createDownload = (url: string, options: IDownloa...]]></description><link>https://zenn.dev/tokoshiekou/articles/d1450878e58cbe</link><guid isPermaLink="true">https://zenn.dev/tokoshiekou/articles/d1450878e58cbe</guid><pubDate>Tue, 11 Mar 2025 04:22:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yLOUF27Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:download.ts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmdsemdMMzQtZURZN1RKbDJEYTc3bmpyVFo2WkR3TmQ2ZkpWRHRHcF9rOWI5SnRvaz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>トコシエコウ</dc:creator></item><item><title><![CDATA[TS の using でプリントデバッグを確率的にサンプリングして出力する]]></title><description><![CDATA[スコープ単位でログをサンプリングする。
{
  using log = createSampleLog&lt;string&gt;(5);
  log("a");
  log("b");
  // スコープを抜けるときに最大5件サンプリングされて表示される
}
using の使い所

 やりたかったこと
Cline が勝手にデバッグログを仕込みまくって膨大なログを食ってトークンを使いまくるので、そもそも出力するログに上限を設定したい。
ロガーは初期化したスコープに依存して、抜ける時に吐き出す。

 前提知識: using と Symbol.dispose
スコープから抜けるときの処理を書...]]></description><link>https://zenn.dev/mizchi/articles/ts-using-sampling-logger</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ts-using-sampling-logger</guid><pubDate>Tue, 11 Mar 2025 03:05:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z-zq9Kcg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%2520%25E3%2581%25AE%2520using%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E7%25A2%25BA%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[satisfiesでmetaの型を定義したstorybookのファイルでtsのエラーが起きる]]></title><description><![CDATA[
 はじめに
Next.jsでStorybookを使用し、satisfiesを利用してmetaの型定義を行った際に、以下のエラーが発生しました。
Expression produces a union type that is too complex to represent.
このエラーが発生した状況と、その解決方法について解説します。

 エラーが出た時の状況

Next.jsのpage.tsxが106個を超えたあたりからエラーが発生。

106個という数に特に意味はないと思われる。
ページを追加するとエラーが発生する。ページを削除するとエラーが起きない。



satisfiesを...]]></description><link>https://zenn.dev/chot/articles/3d10f249257c70</link><guid isPermaLink="true">https://zenn.dev/chot/articles/3d10f249257c70</guid><pubDate>Tue, 11 Mar 2025 01:19:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QLQjuH-Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:satisfies%25E3%2581%25A7meta%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%259Fstorybook%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7ts%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E8%25B5%25B7%25E3%2581%258D%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:o_ken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhNDAyNzUyMzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>o_ken</dc:creator></item><item><title><![CDATA[React19にアップグレードに挑戦してみた話]]></title><description><![CDATA[こんにちは、WED 株式会社でエンジニアをしている篠崎（@sinora_）です。
WED が開発・運営している、レシート買取アプリ「ONE」はアプリのみで展開していますが、
その「ONE」の運用で使用する管理画面は Next.js を採用しております。
最近管理画面の開発にアサインされることになり、フロントエンド側を書く機会がとても増えまして、自分の学習がてら 2024 年 12 月にリリースされた React19 のアップグレードにチャレンジしてみようと思い、
その軌跡を備忘録としてここに記述していこうと思います。

 なぜアップグレードしようと思ったのか？
forwardRef を使...]]></description><link>https://zenn.dev/wed_engineering/articles/20250303-react19-upgrade</link><guid isPermaLink="true">https://zenn.dev/wed_engineering/articles/20250303-react19-upgrade</guid><pubDate>Tue, 11 Mar 2025 01:14:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CCi4hs-A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sinora%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYjlmMzI3YWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:WED%2520Engineering%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3MWM1NjVkM2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sinora</dc:creator></item><item><title><![CDATA[Denoで社内ツールを作る]]></title><description><![CDATA[
 はじめに
社内業務を効率化するためのツールとして、キャッチアップも兼ねてDenoでCLIを作ってみました。
Cliffyの使い方についてのメモや、Denoを触る上で迷ったところをまとめていきます。

 Denoのインストール
まずはDenoをインストールします。
詳しいインストール方法は公式サイトを参照ください。
MacOSの場合は以下のコマンドでインストールできます。
brew install deno
もしくは
curl -fsSL https://deno.land/install.sh | sh

 プロジェクトの作成
Denoではdeno initコマンドでプロジェクトを作...]]></description><link>https://zenn.dev/aidemy/articles/deno-for-internal-tool-20250307</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/deno-for-internal-tool-20250307</guid><pubDate>Mon, 10 Mar 2025 23:57:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--at0D32Ry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%25E3%2581%25A7%25E7%25A4%25BE%25E5%2586%2585%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2584%25E3%2583%2581%25E3%2583%258E%25E3%2582%25B3%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDk2MGJlYzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ツチノコ</dc:creator></item><item><title><![CDATA[react-hook-quillの紹介]]></title><description><![CDATA[
 はじめに
react-hook-quillというQuillの軽量ラッパーを開発したので紹介します。
QuillはSlabが開発をしているリッチテキストエディタです。QuillはReactなどのライブラリの上に構築されておらず、TypeScriptで開発されており、Reactで使うためにはReact用の実装を追加する必要があります。
すでにいくつかのReactとQuillの連携用のライブラリはありますが、Quillの提供するAPIが連携用のライブラリ側でふさがれていることがある等、ユースケースによっては課題が生じそうなものがあったため、新たに開発を行いました。
下記はreact-hoo...]]></description><link>https://zenn.dev/kozmof/articles/e2fcd86320ca12</link><guid isPermaLink="true">https://zenn.dev/kozmof/articles/e2fcd86320ca12</guid><pubDate>Mon, 10 Mar 2025 22:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6l4zV0uX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:react-hook-quill%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kozmof%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ODc5ZmYyMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kozmof</dc:creator></item><item><title><![CDATA[HTML Emailも React + Tailwind CSS で書ける時代キテた]]></title><description><![CDATA[
gm! エルソウルラボ、Validators DAO の kishi.sol です。
フロントエンド開発の世界は、ReactやTailwind CSSをはじめとするオープンソース技術の進化によって劇的に改善され、スピーディかつ高品質なUIを構築する環境が整いました。
コンポーネントベースの開発スタイルが定着したことで、保守性が高まり、コードを資産として残せるようになったことは間違いありません。かつてレスポンシブレイアウトに苦戦したのも今や昔話で、Tailwindのエコシステムを活用すれば誰もが簡単に美しくモダンなWeb UIを作成できるようになっています。
しかし一方で、私たちを悩ませ...]]></description><link>https://zenn.dev/ki4themecha2q/articles/ba899a101ff695</link><guid isPermaLink="true">https://zenn.dev/ki4themecha2q/articles/ba899a101ff695</guid><pubDate>Mon, 10 Mar 2025 18:19:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k9e-QjEE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%2520Email%25E3%2582%2582%2520React%2520%252B%2520Tailwind%2520CSS%2520%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%25E6%2599%2582%25E4%25BB%25A3%25E3%2582%25AD%25E3%2583%2586%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kishi.sol%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyOTgzY2I3N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kishi.sol</dc:creator></item><item><title><![CDATA[【Next.js】Firebase Authenticationのカスタムクレームで管理者ログインを実装]]></title><description><![CDATA[
 はじめに
Firebase Authenticationを使用してFirebaseの管理者権限がないユーザーはログインできないようにする認証機能を実装しました。
実装方法だけでなく、設計や考え方について説明しているため、Firebase Authenticationを使用しない場合でも読むことができる内容になっています。
バックエンドはExpress、フロントエンドはNext.jsを使用しており、この記事ではNext.jsの部分のみに触れています。
Next.jsのバージョン"next": "15.2.1",


 設計

 実現したいこと
アプリ上で新規ユーザーを登録する機能は不要...]]></description><link>https://zenn.dev/kiwichan101kg/articles/612658661d41ae</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/612658661d41ae</guid><pubDate>Mon, 10 Mar 2025 13:12:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lofEpANo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591Firebase%2520Authentication%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E8%2580%2585%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[React Router v7 + HonoをClineと共に開発した感想]]></title><description><![CDATA[
 流れ
もともと自分が作っていたWebアプリを刷新したいなぁとずっと思っていましたがなかなか重い腰が上がらず・・・
昨今の生成AIのおかげで面倒なこともサクッとできる感じがしてきたので、ちょっとやってみようか、となりました。
せっかくなのでモダンなFWとか使いたいなぁと思っていたところで、RemixとReact Routerが統合されたとのニュースを聞いたのをきっかけにReact Router v7でWebアプリを作ってみることにしました。

 前提
筆者はVueやNuxtをメインで触っているので、Reactはほぼ初心者です。
SPAやMPAの概念や知識はあるものの、Reactにおける...]]></description><link>https://zenn.dev/k4nd4/articles/1599422fca8d7f</link><guid isPermaLink="true">https://zenn.dev/k4nd4/articles/1599422fca8d7f</guid><pubDate>Mon, 10 Mar 2025 13:03:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m3J45Ks3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2520v7%2520%252B%2520Hono%25E3%2582%2592Cline%25E3%2581%25A8%25E5%2585%25B1%25E3%2581%25AB%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k4nd4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyOWIyMmIyYzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k4nd4</dc:creator></item><item><title><![CDATA[インデックスシグネチャの罠]]></title><description><![CDATA[突然ですが問題です。
次のコードで最後の console.log() に渡される値は何でしょうか？
const obj = {
  a: 1,
  b: 2,
} as const

const fnc = (prop: 'a' | 'b') =&gt; ({
  ...obj,
  [prop]: 3,
})

const result = fnc('a')

console.log(result.a)
簡単ですね。 fnc に 'a' が渡されることで { ...obj, a: 3 } なオブジェクトが返されるわけですから、答えは 3 です。
では result.a の型はどう推論さ...]]></description><link>https://zenn.dev/terass_dev/articles/d8ee7f258b9764</link><guid isPermaLink="true">https://zenn.dev/terass_dev/articles/d8ee7f258b9764</guid><pubDate>Mon, 10 Mar 2025 10:37:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MMrXe5Yy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25B7%25E3%2582%25B0%25E3%2583%258D%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25AE%25E7%25BD%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:myrear%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwMzk3MGFmYTAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>myrear</dc:creator></item><item><title><![CDATA[【Next.js(v15)】エラー解決法：Type '***' does not satisfy the constraint]]></title><description><![CDATA[
 【Next.js 15】エラー解決法：Type error: Type '***' does not satisfy the constraint
Next.js(v15)及び TypeScript でアプリを開発しているのですが、ビルドする際に「Type error: Type '***' does not satisfy the constraint」というエラーによく遭遇しました。同じようなエラーが出てしまった方向けに、解決方法を解説します。

 Next.js 15 とは？
Next.js は、React をベースとした Web アプリケーションフレームワークです。サーバーサ...]]></description><link>https://zenn.dev/hayatech/articles/nextjs-type-error-pageprops</link><guid isPermaLink="true">https://zenn.dev/hayatech/articles/nextjs-type-error-pageprops</guid><pubDate>Mon, 10 Mar 2025 09:33:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3iWi-i55--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%2528v15%2529%25E3%2580%2591%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%25EF%25BC%259AType%2520%2527%252A%252A%252A%2527%2520does%2520not%2520satisfy%2520the%2520cons...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OTUyMWE4YzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HayaTech</dc:creator></item><item><title><![CDATA[goaとopenapi-typescriptで楽々スキーマ駆動開発]]></title><description><![CDATA[
 はじめに
こんにちは、株式会社kivaのウチダです。DevOpsを効率化するのが好きです。
kivaでは、バックエンドにGo、フロントエンドにReactを採用しています。特に、FE・BE間の連携にはOpenAPIを共通言語として開発しており、開発速度の向上を狙っています。
このブログでは、実際にどのようにスキーマ駆動で開発しているのかを紹介します。
!
ブログ内にでてくるコードはあくまでサンプルです。


 開発の流れ

 全体イメージ
全体フローのイメージは下画像のようになります。BEで出力したOpenAPIをFEまで連れていきます。


 API (Goa) の開発
バックエンド...]]></description><link>https://zenn.dev/kiva/articles/7ed0751271bae2</link><guid isPermaLink="true">https://zenn.dev/kiva/articles/7ed0751271bae2</guid><pubDate>Mon, 10 Mar 2025 09:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xkqgPCHx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:goa%25E3%2581%25A8openapi-typescript%25E3%2581%25A7%25E6%25A5%25BD%25E3%2580%2585%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:uchidash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OTI5MTk5ZGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kiva%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNjdLYXh0U0p0UnlhUkVmN1pwNnI5V242emlTUURXLVNzbTI2NDk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uchidash</dc:creator></item><item><title><![CDATA[TypeScriptを使って学ぶSOLID原則1 ”単一責任の原則（Single Responsibility Principle）”]]></title><description><![CDATA[
 モチベーション
ソフトウェアを設計する際に重要な5つのガイドラインであるSOLID原則について学んでいます。
その一つである単一責任の原則（Single Responsibility Principle） について学んだので、アウトプットの一環で記事を執筆しました。

 単一責任の原則（Single Responsibility Principle）とは
単一責任の原則とは下記のことを表します。

A class should have only one reason to change.
出典：https://www.geeksforgeeks.org/solid-principl...]]></description><link>https://zenn.dev/ayut0/articles/dfd0df8c0be114</link><guid isPermaLink="true">https://zenn.dev/ayut0/articles/dfd0df8c0be114</guid><pubDate>Mon, 10 Mar 2025 06:13:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rswRBm92--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6SOLID%25E5%258E%259F%25E5%2589%25871%2520%25E2%2580%259D%25E5%258D%2598%25E4%25B8%2580%25E8%25B2%25AC%25E4%25BB%25BB%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25EF%25BC%2588Single%2520Responsibility%2520P...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:A3yut0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h3d1FoeGFydTFVMjN1MFJ0MnBmUVBjWUZ2dkNTa0RBYmlxWEo4U1NBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>A3yut0</dc:creator></item><item><title><![CDATA[「読みやすいコード」を依存グラフで考える]]></title><description><![CDATA[
 はじめに
こんにちは、ダイニーの ogino です。
この記事では、コードの読みやすさを比較判断するために役立つメンタルモデルを紹介します。
本記事を読むと、「このコードは良い / 悪い」という感覚が身につき、その理由を自信を持って説明できるようになるはずです。

 コードの読みやすさとは何か
コードを読む時には大抵、何か特定の目的があります。例えば、 API /foo にリクエストした時の動作を知りたい、ある画面で発生しているバグの原因を知りたい、などです。
この時、コードベースの隅から隅まで読み尽くすのではなく、特定のポイントから出発して関連する箇所を芋蔓式に辿りながら読むはずで...]]></description><link>https://zenn.dev/dinii/articles/readable-code-explained-in-dep-graph</link><guid isPermaLink="true">https://zenn.dev/dinii/articles/readable-code-explained-in-dep-graph</guid><pubDate>Mon, 10 Mar 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7G87pYUJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E8%25AA%25AD%25E3%2581%25BF%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2580%258D%25E3%2582%2592%25E4%25BE%259D%25E5%25AD%2598%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25A7%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ogino%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNTVhMGJiNDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Dinii%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNWJkMjFjOWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ogino</dc:creator></item><item><title><![CDATA[[備忘録]TypeScriptでAPIから画像を取得~react-native/Imageで出力まで]]></title><description><![CDATA[
 やろうとしたこと
Spring BootのAPIからバイト配列のデータを取得し、FE側でbase64へ変換し出力する。

 環境

BE: Java, Spring Boot
FE: TypeScript, React Native(0.71.19)

axios
js-base64




 ポイント

 axiosのヘッダー設定を'arraybuffer'にする
通常の場合jsonに設定されているが、画像を受け取る通信に関しては事前にresponseTypeを設定する必要があるらしい。
自分の場合、axios.create()でインスタンスを作成し、それをプロジェクト内で使いまわ...]]></description><link>https://zenn.dev/yoshimok/articles/407680339a5914</link><guid isPermaLink="true">https://zenn.dev/yoshimok/articles/407680339a5914</guid><pubDate>Mon, 10 Mar 2025 02:18:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3uOaQRam--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%255DTypeScript%25E3%2581%25A7API%25E3%2581%258B%25E3%2582%2589%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%7Ereact-native%252FImage%25E3%2581%25A7%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2588%25E3%2581%25A0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ODBlMGM2OWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まえだ</dc:creator></item><item><title><![CDATA[【フロントエンド】突然やってくる移行に備えましょうの話]]></title><description><![CDATA[こんにちは！
アルセウスexのイマーシブをついに引けてハッピーなwharaguchiです。
今回は、自分が去年一年行っていたコンポーネント移行の準備についてのお話です。

 TL;DR
いやー去年地道にコンポーネントの移行準備してたら、早速移行する機会があったんですよ〜
コツコツやっておいてよかった〜

 はじめに
スペースマーケットでは、複数のリポジトリでサービスを運用しており、フロントエンドは主に旧環境（以下V1）と新環境（以下V2）の2環境があります。
ここ最近はV2で実装を進めることがほとんどで、V2の特徴としては99.4%のコードがTypeScriptで書かれており、ユニットテ...]]></description><link>https://zenn.dev/spacemarket/articles/68e03d3e470a69</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/68e03d3e470a69</guid><pubDate>Mon, 10 Mar 2025 01:11:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BmrMb5_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2591%25E7%25AA%2581%25E7%2584%25B6%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%25AB%25E5%2582%2599%25E3%2581%2588%25E3%2581%25BE%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%25E3%2581%25AE%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wharaguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMmY1NGY2MjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wharaguchi</dc:creator></item><item><title><![CDATA[なぜReactを使うかを理解してみる(#1 JavaScript編)]]></title><description><![CDATA[
 はじめに
はじめまして、私は今年の1月からReactを触り始めた初学者です。
日々キャッチアップに苦闘する中で、

Reactを習得する上で、学ぶべきことが多すぎる…
なんとなく便利なことはわかったが、それぞれの技術がなぜ使われているのか、全然わかっていない…

といった想いがふつふつと湧いてきてしまいました。
そんな私のような「悩めるReactぴよぴよエンジニア」に向け、一緒に頑張っていきましょうといった想いから、本記事を書きました。
本記事では、初学者を対象としているため、なるべく専門用語は使わず、認知負荷がかからないように心がけております。
!
この記事の対象者

React入...]]></description><link>https://zenn.dev/baleenstudio/articles/9c946a2116898a</link><guid isPermaLink="true">https://zenn.dev/baleenstudio/articles/9c946a2116898a</guid><pubDate>Sun, 09 Mar 2025 22:35:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p4CjjAPq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CReact%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%258B%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2528%25231%2520JavaScript%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%258F%25E3%2583%2588%25E3%2581%25AF%25E9%25A3%259B%25E3%2581%25B0%25E3%2581%25AA%25E3%2581%2584%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2OWZhMGRkNDAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEBALEEN%2520STUDIO%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiODkxOGZkYzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハトは飛ばない</dc:creator></item><item><title><![CDATA[大学生が数式を入力できる数学Q&Aサイトを作った話 (技術編)]]></title><description><![CDATA[
 はじめに
この記事は大学生が数式を入力できる数学Q&amp;Aサイトを作った話 (機能編)の続編です。
サイトの紹介や機能については機能編に詳しく書いているのでぜひ見ていただけると嬉しいです！
機能編からかなり時間が空いてしまいましたが、技術スタックやアーキテクチャ、デプロイについて詳しく説明していきます。
独学で学習したため間違っている部分や問題のある実装があるかもしれませんが、指摘していただけるとありがたいです。
https://www.ui-math.site

 技術スタック
まず、技術スタックは以下のようになっています。

Next.js (App Router)
Type...]]></description><link>https://zenn.dev/muscatto/articles/eeb38c44041787</link><guid isPermaLink="true">https://zenn.dev/muscatto/articles/eeb38c44041787</guid><pubDate>Sun, 09 Mar 2025 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UCRtMPmP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%258C%25E6%2595%25B0%25E5%25BC%258F%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E6%2595%25B0%25E5%25AD%25A6Q%2526A%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2520%2528%25E6%258A%2580%25E8%25A1%2593%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGVqZl9HSkhEUHpVWjhxMWVZaXoxd0ZsNUFOSHdKX2p4TTg1amJCcy1nRWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マスカット</dc:creator></item><item><title><![CDATA[ゆっくりReact Native]]></title><description><![CDATA[ChatGPTで生成したReact Nativeのハンズオンです。誤りを含む可能性があります。]]></description><link>https://zenn.dev/hiromichinomata/books/e72ebd54680cad</link><guid isPermaLink="true">https://zenn.dev/hiromichinomata/books/e72ebd54680cad</guid><pubDate>Sun, 09 Mar 2025 15:58:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DcJU-6ic--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iZDUzMmNhNWQ5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Hiromichi NOMATA</dc:creator></item></channel></rss>