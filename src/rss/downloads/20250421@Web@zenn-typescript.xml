<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 21 Apr 2025 09:09:32 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScript で GitHub Actions ワークフローを記述する「ghats」の紹介]]></title><description><![CDATA[GitHub Actions ワークフローを TypeScript で記述できるツールを作りました。
なぜなら GitHub Actions ワークフローは TypeScript で記述できた方がいいので。

.github/workflows/example.ts
import { Workflow, Job } from "ghats";

const workflow = new Workflow("Hello", {
  on: "push",
});

workflow.addJob(
  new Job("hello", {
    runsOn: "ubuntu-lates...]]></description><link>https://zenn.dev/kou_pg_0131/articles/ghats-introduction</link><guid isPermaLink="true">https://zenn.dev/kou_pg_0131/articles/ghats-introduction</guid><pubDate>Mon, 21 Apr 2025 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JQgth4Vt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520GitHub%2520Actions%2520%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E8%25A8%2598%25E8%25BF%25B0%25E3%2581%2599%25E3%2582%258B%25E3%2580%258Cghats%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hiNFlHemhPbVVNRThrZjV5Z01DakFoOWsxeEtCTzRLdWdVMExDQWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[Next.js + Supabase カレンダーメモアプリ]]></title><description><![CDATA[Next.jsの初学者向けチュートリアルコンテンツです。カレンダー形式のメモアプリをNext.js及びTypeScriptで開発していきます。
また、入力したメモ情報の格納には、BaaS（Backend as a Service）であるSupabaseを利用します。Supabaseとの連携は、Next.jsの Server Actions を利用します。
クライアントコンポーネントからサーバーコンポーネントの実装までフルスタック型の開発を体得します。]]></description><link>https://zenn.dev/amayann/books/83b4298bd4ec40</link><guid isPermaLink="true">https://zenn.dev/amayann/books/83b4298bd4ec40</guid><pubDate>Mon, 21 Apr 2025 08:37:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V2BYvCQz--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lNDBiY2U0MWYxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>bauhaus</dc:creator></item><item><title><![CDATA[figma-clone作り中の棚卸し]]></title><description><![CDATA[
 本記事の内容
基本的には技術の棚卸しを目的としています。
現在、下記の動画を参考にfigma-cloneを作成し、勉強しています、
今回は、途中報告としています。
そのため、環境構築などは、下記動画を参考にしてください。英語ですが、指示に従えば特に問題はないです。
https://www.youtube.com/watch?v=oKIThIihv60

 フォルダ構成のおさらい
本プロジェクト「figma-clone」のディレクトリ構成は、概ね以下の通りです。
figma-clone
 ├─ app
 │   ├─ layout.tsx
 │   ├─ page.tsx
 │   └...]]></description><link>https://zenn.dev/sushizanmai/articles/c1c3c1252436b9</link><guid isPermaLink="true">https://zenn.dev/sushizanmai/articles/c1c3c1252436b9</guid><pubDate>Mon, 21 Apr 2025 05:33:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IcWmS5_z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:figma-clone%25E4%25BD%259C%25E3%2582%258A%25E4%25B8%25AD%25E3%2581%25AE%25E6%25A3%259A%25E5%258D%25B8%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2581%2597%25E3%2581%2596%25E3%2582%2593%25E3%2581%25BE%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5ZGU4OGE3NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すしざんまい</dc:creator></item><item><title><![CDATA[フロントエンドDDD]]></title><description><![CDATA[フロントエンド DDD とはフロントエンドの開発に DDD（ドメイン駆動設計）の思想を取り入れた設計思想です。DDD はバックエンドなどの開発では広く活用されていますが、フロントエンドの開発ではあまり普及していません。
一方で弊社（株式会社TAIAN）は婚礼業界向け SaaS のフロントエンドの開発に DDD を取り入れて2年間、100以上の機能を開発してきました。本シリーズでは我々の経験をもとにフロントエンド DDD について説明したのち、チームの変化、大変なところ、今後の可能性などを紹介していきます。

 なぜフロントエンド DDD が必要だったのか
フロントエンド DDD について...]]></description><link>https://zenn.dev/taian/articles/229d268b7684ac</link><guid isPermaLink="true">https://zenn.dev/taian/articles/229d268b7684ac</guid><pubDate>Mon, 21 Apr 2025 04:57:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X-vMzyOM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589DDD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:HosokowaR%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2MWVkNzdkZjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TAIAN%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjMzgzZjRjZTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HosokowaR</dc:creator></item><item><title><![CDATA[分割代入と splice【個人学習まとめ】]]></title><description><![CDATA[
 分割代入と splice
TypeScirpt の学習を進めている際に、分割代入とspliceを使って「配列からランダムに 1 つだけデータを取り出す」というサンプルコードがありました。
分割代入とspliceの組み合わせに躓いたので、調べたことをまとめました。

 やりたかったこと
やりたかったこととしてはシンプルです。

あらかじめquestionsという配列にデータが入っている

questionsからランダムに 1 つ取り出して配列で返す
一度取り出した問題はquestionsから取り除く

サンプルコードは次のようなコードでした。
const questions = ["Q...]]></description><link>https://zenn.dev/o0rororo0o/articles/61f433f5e7e434</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/61f433f5e7e434</guid><pubDate>Sun, 20 Apr 2025 20:18:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jS8S6gDD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%25E3%2581%25A8%2520splice%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[Next.js 15.3.1 OGP画像が表示できない]]></title><description><![CDATA[
 結論
src/app/ (src使っていない場合はapp/)直下に


opengraph-image.jpg（.jpg, .jpeg, .png, .gif）

twitter-image.jpg（.jpg, .jpeg, .png, .gif）

というファイル名でOGP用の画像ファイルを置く

 状況
今まで（ver14~）はlayout.tsxにMetadataを設置していたが15.3.1にバージョンアップしたら表示されなくなっていた

// 省略
 openGraph: {
        type: "website",
        locale: "ja_JP",
...]]></description><link>https://zenn.dev/taiki_asakawa/articles/d004653f804b85</link><guid isPermaLink="true">https://zenn.dev/taiki_asakawa/articles/d004653f804b85</guid><pubDate>Sun, 20 Apr 2025 16:53:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xg3cuV9d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252015.3.1%2520OGP%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taiki.Asakawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1NjU5NDRkNjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taiki.Asakawa</dc:creator></item><item><title><![CDATA[Record<string, any>としても実はstring以外のキーも入る]]></title><description><![CDATA[
 始めに
以下のようなオブジェクトをフィールドごとに描画方法をカスタマイズして一括で描画できるようにするメソッドを作った際に、Reactのkeyのところで symbol は代入できないというエラーが出ました。

Record&lt;string, any&gt;なのにkeyof Record&lt;string, any&gt;にsymbolがあると言われる
type RenderItemByKey&lt;Data extends Record&lt;string, any&gt;, K extends keyof Data&gt; = {
  fieldKey: K
  label:...]]></description><link>https://zenn.dev/numa_san/articles/55bc7a36df6efc</link><guid isPermaLink="true">https://zenn.dev/numa_san/articles/55bc7a36df6efc</guid><pubDate>Sun, 20 Apr 2025 15:33:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HSg1oKqz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Record%253Cstring%252C%2520any%253E%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E5%25AE%259F%25E3%2581%25AFstring%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2582%25E5%2585%25A5%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2581%25BE%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5MWZjYWE2NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬまさん</dc:creator></item><item><title><![CDATA[ファイルをコピペ・ドラッグアンドドロップするとストレージにアップロードされたファイルのURLが自動で挿入されるtextareaの実装してみた]]></title><description><![CDATA[
 ファイルをコピペ・ドラッグアンドドロップするとストレージにアップロードされたファイルのURLが自動で挿入されるtextareaの実装してみた
ZennやQiitaではファイルをドラッグアンドドロップすると自動でファイルがアップロードされてURLがフォームに自動で挿入されます。
このフォームについて気になったので動きだけ同じものを作ってみました。

 実際の画面

!
実際はストレージに格納されているファイルのURLが表示されます


 コード


 使用技術

Next.js
Vercel Blob
zod
react-hook-form


 実装
関連するところだけ抜き出して書き...]]></description><link>https://zenn.dev/mitate_gengaku/articles/copy-or-drop-file-textarea</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/copy-or-drop-file-textarea</guid><pubDate>Sun, 20 Apr 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HDSJ4IuA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25B3%25E3%2583%2594%25E3%2583%259A%25E3%2583%25BB%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2589%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AEURL%25E3%2581%258C%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2595%25E3%2582%258C%25E3%2582%258Bte...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[Typescriptの基本構文(参照用)]]></title><description><![CDATA[
 🌟 TypeScriptとは？

JavaScriptに静的型付けを加えた言語。
JavaScriptに**コンパイル（トランスパイル）**される。

型安全性が高く、大規模開発・チーム開発に向いている。

.tsという拡張子を持つ。



 🆚 JavaScriptとの違い



項目
JavaScript
TypeScript




型
動的型付け
静的型付け


実行環境
直接ブラウザやNode.jsで動く
JSにコンパイルしてから実行


エラーチェック
実行時に発見される
コンパイル時に発見される


コーディング支援
弱い
エディタで補完・警告が豊富


インターフェー...]]></description><link>https://zenn.dev/shizu/articles/aac419cb1245d2</link><guid isPermaLink="true">https://zenn.dev/shizu/articles/aac419cb1245d2</guid><pubDate>Sun, 20 Apr 2025 10:50:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sui63bT6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E6%25A7%258B%25E6%2596%2587%2528%25E5%258F%2582%25E7%2585%25A7%25E7%2594%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%2587%25E7%25A9%258F%25E7%25A9%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhZGQ5NjM1ZWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碇穏空</dc:creator></item><item><title><![CDATA[ESLint コアルールの TypeScript 対応について]]></title><description><![CDATA[
 ESLint コアルールの TypeScript 対応について
ESLint v9.23.0 で ESLint のコアルールの TypeScript 対応が開始しました。
https://eslint.org/blog/2025/03/eslint-v9.23.0-released/
その後の ESLint のアップデートでもコアルールの TS 対応が進んでいます。ESLint コアの責務を増やすような機能追加は少し意外だと感じたので、その背景について調べてみました。

 背景: 従来のコアルールの拡張方法の課題
ESLint のコアルールは JavaScript を想定して書かれた...]]></description><link>https://zenn.dev/teppeis/articles/2025-04-eslint-core-rules-typescript</link><guid isPermaLink="true">https://zenn.dev/teppeis/articles/2025-04-eslint-core-rules-typescript</guid><pubDate>Sun, 20 Apr 2025 07:47:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TLJMWkxY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%2520%25E3%2582%25B3%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%2520TypeScript%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:teppeis%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k3UmZCSkliQlhuczNoamdlYjF4cEhoamZnTF9CSGhQeGpMSHI4cmc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>teppeis</dc:creator></item><item><title><![CDATA[JSONファイルをインポートする方法【個人学習まとめ】]]></title><description><![CDATA[
 JSON ファイルをインポートする方法
TypeScirpt では、importを用いて JSON ファイルを直接インポートすることができます。
取り込んだデータは配列やオブジェクトとして利用できます。

 オプション設定
tsconfig.json にオプションresolveJsonModuleを追加します。

 tsconfig.json
{
  //他のオプションは省略
  "compilerOptions": {
    // JSONファイルのインポートを有効に設定
    "resolveJsonModule": true
  }
}


 読み取る JSON ファイル
...]]></description><link>https://zenn.dev/o0rororo0o/articles/9ffd1825a59748</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/9ffd1825a59748</guid><pubDate>Sun, 20 Apr 2025 05:07:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z8Ov3S1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSON%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[型安全に URL を構築できるライブラリ routopia を作った]]></title><description><![CDATA[
 はじめに
Web アプリなどソフトウェアの開発していると、必ずと言っていいほど URL の構築を行い、リンクを設定したり画面遷移させたりという制御を行うと思います。
ただ他の多くの記事でも触れられている通り、 URL の構築には以下のような課題があります。

パスやパラメータ名の typo
パラメータの漏れ・型の不一致
変更追従漏れ
そもそも期待値がわからず実装を読み解く必要がある
エンコード漏れ

みなさんもこういった問題に遭遇したことはありませんか？
これらの問題は単純にバグの温床になるだけではなく、開発者の生産性や体験を下げる要因にもなっています。
今回はそれを解決するために ...]]></description><link>https://zenn.dev/dena/articles/328b6655439845</link><guid isPermaLink="true">https://zenn.dev/dena/articles/328b6655439845</guid><pubDate>Sun, 20 Apr 2025 03:27:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aSplH9LM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%2520URL%2520%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520routopia%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258D%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2581%259D%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ViMjg2MTZiZGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DeNA%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDgxZmEzY2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きっちゃそ</dc:creator></item><item><title><![CDATA[Next.js入門４ Hooks]]></title><description><![CDATA[
 記事一覧

Next.js × Docker 最速環境構築
Next.js入門１ ページ追加
Next.js入門２ コンポーネント
Next.js入門３ 無記名関数 &amp; イベントハンドラー
Next.js入門４ Hooks


 Hooks

 Hooksとは
Next.js（React）で使用できる、便利な機能を追加するための特別な関数
（今回はよく使われるもの3つを紹介）

 useState

page.tsx

"use client";

// useStateをインポート
import { useState } from "react";

function Pa...]]></description><link>https://zenn.dev/kate0418/articles/a7bc79d206d15b</link><guid isPermaLink="true">https://zenn.dev/kate0418/articles/a7bc79d206d15b</guid><pubDate>Sun, 20 Apr 2025 03:24:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WvHk7RH5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Next.js%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2594%2520Hooks%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%2583%25E3%2581%25A8%25C2%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkMGNjNmI4Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けぃと°</dc:creator></item><item><title><![CDATA[Reactで画像がリンク切れかどうかを確認する方法について]]></title><description><![CDATA[こんにちは、ソフトウェアエンジニアのまさぴょんです！
今回は、Reactで画像がリンク切れかどうかを確認する方法について解説していきます🐱

 onErrorイベントを使う方法📝
onErrorイベントを使って、次のSampleCodeのように画像のリンク切れ対応をすることができます👍
// ... existing code ...
{/* クリックで拡大できる画像 */}
{aiRes.imageUrl &amp;&amp; (
  &lt;img
    src={aiRes.imageUrl}
    alt={`${aiAgent?.name || "AI"} 生成画像`}
 ...]]></description><link>https://zenn.dev/manase/articles/acf095d931ddd6</link><guid isPermaLink="true">https://zenn.dev/manase/articles/acf095d931ddd6</guid><pubDate>Sun, 20 Apr 2025 01:37:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6UGB7Chp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E5%2588%2587%25E3%2582%258C%25E3%2581%258B%25E3%2581%25A9%25E3%2581%2586%25E3%2581%258B%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2581%2595%25E3%2581%25B4%25E3%2582%2587%25E3%2582%2593%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UwMmM5YTlmMGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まさぴょん🐱</dc:creator></item><item><title><![CDATA[Next.js入門３ 無記名関数 & イベントハンドラー]]></title><description><![CDATA[
 記事一覧

Next.js × Docker 最速環境構築
Next.js入門１ ページ追加
Next.js入門２ コンポーネント
Next.js入門３ 無記名関数 &amp; イベントハンドラー
Next.js入門４ Hooks


 無記名関数

 無記名関数とは
名前が付けられていない関数

 宣言型関数（通常）
function Func() {
  return "hello world";
}

 無記名関数（通常）
// 無記名関数は代入して使用したり、直接使用する
() =&gt; {
  return "hello world";
}

// 使用例
const F...]]></description><link>https://zenn.dev/kate0418/articles/e8f060f2befad3</link><guid isPermaLink="true">https://zenn.dev/kate0418/articles/e8f060f2befad3</guid><pubDate>Sat, 19 Apr 2025 18:26:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y3WnQUQf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2593%2520%25E7%2584%25A1%25E8%25A8%2598%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%2520%2526%2520%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2581%2583%25E3%2581%25A8%25C2%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkMGNjNmI4Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けぃと°</dc:creator></item><item><title><![CDATA[NEXTJS+tailwind+Flowbiteでモーダルを使う]]></title><description><![CDATA[最新バージョンの情報がなかったので記載いたします。tailwind+UIライブラリのFlowbiteでは色々なモーダルを利用することができます。
https://flowbite.com/docs/components/modal/

 対象バージョン
NEXTJS 15.2.3
tailwind 4.1.4
Flowbite 3.1.2

 公式の手順を順番に実施する
公式の手順の一番下にサンプルと実装例があるので参考に作っていく。HTMLのサンプルを1つのコンポーネントにして、親コンポーネントにイベントハンドラなど実装する。

 モーダル部分

modal.tsx
export fu...]]></description><link>https://zenn.dev/kaikusakari/articles/b45d73631b5301</link><guid isPermaLink="true">https://zenn.dev/kaikusakari/articles/b45d73631b5301</guid><pubDate>Sat, 19 Apr 2025 17:24:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kSZxjBQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NEXTJS%252Btailwind%252BFlowbite%25E3%2581%25A7%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E8%258B%2585%2520%25E5%25BF%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNDVmZjk5MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草苅 快</dc:creator></item><item><title><![CDATA[TypeScript製SQLビルダー Kysely で Hono×PostgreSQL 構成の CRUD APIを構築]]></title><description><![CDATA[
 概要
とあるリポジトリでSQL クエリ ビルダーのKyselyを知ったので、今回は色々試してみたいと思います。
https://kysely.dev/
Kyselyとは?

Knexに触発されて開発されたTypeScript向けの型安全なSQLクエリビルダーです。

Knexとの違いは?

KnexはJavaScriptで書かれており、TypeScriptのサポートは限定的です。そのため、複雑なクエリでは型推論が難しく、型安全性が保証されない場合があります。一方、KyselyはTypeScriptを第一級でサポートし、データベーススキーマの型情報を活用して、コンパイル時にエラーを検出...]]></description><link>https://zenn.dev/slowhand/articles/6598214b1a738a</link><guid isPermaLink="true">https://zenn.dev/slowhand/articles/6598214b1a738a</guid><pubDate>Sat, 19 Apr 2025 15:37:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OL-Qsa05--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E8%25A3%25BDSQL%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2580%25E3%2583%25BC%2520Kysely%2520%25E3%2581%25A7%2520Hono%25C3%2597PostgreSQL%2520%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AE%2520CRUD%2520API%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:slowhand%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwY2YzMGUzMDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>slowhand</dc:creator></item><item><title><![CDATA[OpenAI Codex CLI のソースコードを読む]]></title><description><![CDATA[Codex のソースコードを調査する機会があったので、どなたかの参考になればと思いコードリーディング時のメモを記事にしました！
!
この記事は 2025 年 4 月 19 日時点の Codex CLI のソースコードをもとに書かれています。
ドキュメントには以下のような記載があり、コードベースが大幅に変わる可能性があります。

This project is under active development and the code will likely change pretty significantly. We'll update this message once that's...]]></description><link>https://zenn.dev/takiko/articles/e2b8065158c8d0</link><guid isPermaLink="true">https://zenn.dev/takiko/articles/e2b8065158c8d0</guid><pubDate>Sat, 19 Apr 2025 13:56:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kC2Bj_YU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Codex%2520CLI%2520%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%25AA%25AD%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takigon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZTE0YmI0ZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takigon</dc:creator></item><item><title><![CDATA[MCP クライアントをTypescriptで利用する]]></title><description><![CDATA[
 はじめに
Model Context Protocol (MCP) は、LLM エージェントから外部ツールを容易に呼び出せる仕組みを提供します。
最近MCPを使っているのですが、コードを書くたびに過去のコードを掘り起こしているので、これを機にまとめておきます。
ということで本記事では、TypeScript SDK を用いて複数の MCP サーバーを統合し、ツールを実行する手順を具体的なコード例とともに解説します。
コード全文はGitHubに公開しています。
https://github.com/M6saw0/mcp-client-typescript

 動作環境

Node.js ...]]></description><link>https://zenn.dev/mseabass/articles/e75ce635a7138b</link><guid isPermaLink="true">https://zenn.dev/mseabass/articles/e75ce635a7138b</guid><pubDate>Sat, 19 Apr 2025 13:06:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jHTSkbNx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592Typescript%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M%2520Sea%2520Bass%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjN2NkZGNkYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>M Sea Bass</dc:creator></item><item><title><![CDATA[remix-auth-twitchを実装して公開]]></title><description><![CDATA[remix-authのv4によって破壊的変更が加えられているauthenticatorに対応するために、プラグインであるremix-auth-twitchを公開しました。
github: https://github.com/tkitsunai/remix-auth-twitch
npm: https://www.npmjs.com/package/@tkitsunai/remix-auth-twitch
remix-authのv3系統では、認証処理とルーティング処理等が密結合になっていて、認証済ユーザの取得のセッションへの保存、ログアウト、リダイレクトルーティングなどがauthenti...]]></description><link>https://zenn.dev/tkitsunai/articles/8cf1676692b485</link><guid isPermaLink="true">https://zenn.dev/tkitsunai/articles/8cf1676692b485</guid><pubDate>Sat, 19 Apr 2025 12:07:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--napQjWSQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:remix-auth-twitch%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kits%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lKdWt5ZWFocHRYbWlyNVBoTTBCT2xzRXhMU1JORjd5U1NMY3pMTUE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kits</dc:creator></item></channel></rss>