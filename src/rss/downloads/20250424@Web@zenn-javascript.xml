<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 24 Apr 2025 08:10:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[オブジェクト構造の再構築の考え方]]></title><description><![CDATA[
 基本概念

既存のデータを変換して、必要な形式のデータ構造に作り直す技法


 主な目的


データの整形: API応答やDBデータを表示や処理に適した形式に変換


 実装例
// 元データ
const user = {
  user_id: 123,
  user_first_name: "太郎",
  user_last_name: "山田",
  user_email: "taro@example.com"
};

// 再構築したデータ
const formattedUser = {
  id: user.user_id,
  name: `${user.user_last...]]></description><link>https://zenn.dev/yyoshioka/articles/1bc5c914d02f1b</link><guid isPermaLink="true">https://zenn.dev/yyoshioka/articles/1bc5c914d02f1b</guid><pubDate>Thu, 24 Apr 2025 07:38:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3pNb5gcc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AE%25E5%2586%258D%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25AE%25E8%2580%2583%25E3%2581%2588%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2587%25E3%2581%2586%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjkxZTg3NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みょうじょう</dc:creator></item><item><title><![CDATA[FastAPI × JWTで認証付きAPIを作ってVueとつないだ話]]></title><description><![CDATA[
 FastAPI × JWTで認証付きAPIを作ってVueとつないだ話

 🔹 1. 導入文（エピソード）
最近、近所のパン屋さんで顔なじみの店員さんができた。
最初は「毎朝同じ時間にクロワッサン買う人」として認識されてたっぽいんだけど、ある日ついに言われた。

「いつもこの時間ですね！常連さんですね☺️」

それを聞いてふと思った。
「“認証”って、こういうことかもな」と。

Web開発では、「誰がアクセスしてるか？」を識別する仕組みがとても大事で、それを担うのが**認証（Authentication）**という仕組み。
最近、SNSのフォロワーを可視化するダッシュボードをVue +...]]></description><link>https://zenn.dev/tfuji/articles/1a7e11aa3d7a65</link><guid isPermaLink="true">https://zenn.dev/tfuji/articles/1a7e11aa3d7a65</guid><pubDate>Wed, 23 Apr 2025 22:45:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pJk_YG2p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%2520%25C3%2597%2520JWT%25E3%2581%25A7%25E8%25AA%258D%25E8%25A8%25BC%25E4%25BB%2598%25E3%2581%258DAPI%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6Vue%25E3%2581%25A8%25E3%2581%25A4%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A0%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B7%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwMjVlOTIxMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>メープルシロップ</dc:creator></item><item><title><![CDATA[TypescriptとJavascriptの関係性をシンプルにわかりやすく解説してみます！]]></title><description><![CDATA[

 はじめに
最近よく聞く「TypeScript（タイプスクリプト）」という言葉。
「なんとなくJavaScriptと関係がありそうだけど、よくわからない…」という方も多いのではないでしょうか？
この記事では、TypeScriptとJavaScriptの違いや関係性を、初心者でもわかるようにやさしく解説していきます。

 JavaScriptってどんな言語？
JavaScript（JS）は、Webの世界で超メジャーなプログラミング言語です。
2014～2023年時点では世界で一番使用されていた言語です。

ブラウザ上で動く
コードが柔軟に書ける
サーバーサイド(Node.js)でも使え...]]></description><link>https://zenn.dev/pataro/articles/3f35b60ecb7c29</link><guid isPermaLink="true">https://zenn.dev/pataro/articles/3f35b60ecb7c29</guid><pubDate>Wed, 23 Apr 2025 14:41:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--P1mm6iKd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Typescript%25E3%2581%25A8Javascript%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%25E6%2580%25A7%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pataro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0MDkwNGY2MmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pataro</dc:creator></item><item><title><![CDATA[Angular 19.2で、HTTPリソースとレスポンスストリーミングが実験的に登場！]]></title><description><![CDATA[!
本記事は、 https://www.youtube.com/watch?v=sGSKSh5yNIE をソースとして読み込み、生成AIが執筆したあと、著者が内容を確認・推敲しています。

!
これらの機能は現在実験的な機能です。本番環境での使用は慎重に検討してください。

Angular 19.2がリリースされました！今回の目玉は、HTTPリソースとレスポンスストリーミングの実験的機能です。Signalベースの開発がますます便利になっていくのを感じますね。

 HTTPリソースで、非同期処理がもっとシンプルに
Angular v19で実験的に再リリースされたHTTPリソース、めちゃくち...]]></description><link>https://zenn.dev/rdlabo/articles/35e1d6ae8d8adf</link><guid isPermaLink="true">https://zenn.dev/rdlabo/articles/35e1d6ae8d8adf</guid><pubDate>Wed, 23 Apr 2025 13:53:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ey5vUwI2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular%252019.2%25E3%2581%25A7%25E3%2580%2581HTTP%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25A8%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%258C%25E5%25AE%259F%25E9%25A8%2593%25E7%259A%2584%25E3%2581%25AB%25E7%2599%25BB%25E5%25A0%25B4%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A6%258A%25E5%258E%259F%25E6%2598%258C%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPaXJOMUlrUWZNc0J2Vlljc1NzOGRGYW9USjV1TnZNTHF5TUp4cWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>榊原昌彦</dc:creator></item><item><title><![CDATA[【毎日アプリ作成チャレンジ3日目】集中力アップ！シンプルなタイマー「Focus Timer」]]></title><description><![CDATA[こんにちは、森です。
現在、「毎日アプリ作成チャレンジ」として毎日1つ小さなWebアプリを作っています。
今回は3日目、テーマは 「集中力」。
シンプルなタイマーアプリ「Focus Timer」を制作しました。


 🎯 作ったもの：Focus Timer

※GitHubへのリンクやスクリーンショット画像は適宜差し替えてください。


 🛠 技術要素

HTML / CSS / JavaScript

setInterval() による1秒ごとの更新
スタート・ストップ・リセットのイベント制御

Audio要素でアラーム音再生



 💡 学んだこと・工夫したこと

時間のフォーマット...]]></description><link>https://zenn.dev/homatsu_tech/articles/ea24812b5883b4</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/ea24812b5883b4</guid><pubDate>Wed, 23 Apr 2025 13:46:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y64KQUA_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25AF%258E%25E6%2597%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E6%2588%2590%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B83%25E6%2597%25A5%25E7%259B%25AE%25E3%2580%2591%25E9%259B%2586%25E4%25B8%25AD%25E5%258A%259B%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25EF%25BC%2581%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AA%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2580%258CFocus%2520Timer%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[WebSeechAPIを使って文字数カウントしてみる]]></title><description><![CDATA[どうも、あべたく（@east-takumi）です。

 概要
今回はWebSpeechAPIを使って、音声をテキストに変換し、変換したテキストの文字数をカウントするという内容のコードを書いてみたので、その内容をさっくりまとめてみます。

 WebSpeechAPIとは？
WebSpeechAPIはW3C（World Wide Web Consortium）によって策定された　主に下記の2つをブラウザ上で音声データを取り扱うAPIになります。

音声認識（Speech Recognition）: 音声→テキストに変換
音声合成（Speech Synthesis）: テキスト→音声に読み上げ...]]></description><link>https://zenn.dev/east_takumi/articles/2501-webspeechapi-word-counter</link><guid isPermaLink="true">https://zenn.dev/east_takumi/articles/2501-webspeechapi-word-counter</guid><pubDate>Wed, 23 Apr 2025 02:18:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YE4-zmmj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebSeechAPI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Abetaku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGSmlqb2Z0Tld6Sk54bDdSZFhmR1dHdzlTUVc2N0dIeFhpSERuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Abetaku</dc:creator></item><item><title><![CDATA[ブラウザバック問題と`pageshow`イベントによる対策メモ]]></title><description><![CDATA[
 症状
今回、ページ遷移前にjavascriptの処理が走ってからページ遷移する。ページ遷移したページで、ブラウザバックするとjavascriptの処理が完了された状態が表示される。
というエラーがあった。

 正確な仕組み（bfcache）

ブラウザは高速化のために、「戻る」ボタンで表示するページを完全な状態でキャッシュしている
このキャッシュには、DOM状態、JavaScript変数、イベントリスナー、タイマーなど、すべての実行状態が含まれる
キャッシュされた状態のJavaScriptは正常に機能するが、ページ遷移後に変わったデータなどは自動的に更新されない


 対策：page...]]></description><link>https://zenn.dev/yyoshioka/articles/043c733f04c621</link><guid isPermaLink="true">https://zenn.dev/yyoshioka/articles/043c733f04c621</guid><pubDate>Wed, 23 Apr 2025 02:18:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3VmfkLOT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%2560pageshow%2560%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25AF%25BE%25E7%25AD%2596%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2587%25E3%2581%2586%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxYjkxZTg3NzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みょうじょう</dc:creator></item><item><title><![CDATA[初心に立ち帰る！JavaScriptの「オブジェクト型」入門：変数の中身の仕組み]]></title><description><![CDATA[
 はじめに
こんにちは。JavaScriptを学び始めると、「変数」という言葉に頻繁に出会いますね。変数は、データを一時的に保管しておくための箱のようなもの、と学習したかもしれません。
さらに深みまで理解するために久しぶりにJavascriptを復習しました。
忘備録として残します。
let score = 100; // scoreという変数に100を代入
let message = "こんにちは"; // messageという変数に「こんにちは」という文字列を代入
このように、数値や文字列といったデータを直接、変数という箱に入れるイメージ、これが プリミティブ型 と呼ばれるデータの...]]></description><link>https://zenn.dev/noah11/articles/e0854f681629d8</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/e0854f681629d8</guid><pubDate>Tue, 22 Apr 2025 20:37:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wq0TKffX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E3%2581%25AB%25E7%25AB%258B%25E3%2581%25A1%25E5%25B8%25B0%25E3%2582%258B%25EF%25BC%2581JavaScript%25E3%2581%25AE%25E3%2580%258C%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%259E%258B%25E3%2580%258D%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E4%25B8%25AD%25E8%25BA%25AB%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA["" '' ` の違い完全整理：Java・JavaScript・Pythonの文字列リテラル文化を横断解説！]]></title><description><![CDATA[
 テンプレートリテラルとは？


定義： 文字列中に ${式} や {式} を埋め込める構文

JS： `Hello ${name}`


Python： f"Hello {name}"


特に "（ダブルクオート）"、'（シングルクオート）'、`（バッククオート）` の違いは、  Java / JavaScript / Python で大きく扱いが異なります。


 ✅ Javaの場合



記号
用途
型
例
補足




""
文字列
String
"hello"
複数文字OK


''
単一文字
char
'h'
1文字のみ


`
×
―
―
存在しない構文、書けばエラー
...]]></description><link>https://zenn.dev/lia/articles/9fb5bc6a60918d</link><guid isPermaLink="true">https://zenn.dev/lia/articles/9fb5bc6a60918d</guid><pubDate>Tue, 22 Apr 2025 18:17:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u-9Lfyym--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2522%2522%2520%2527%2527%2520%2560%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E5%25AE%258C%25E5%2585%25A8%25E6%2595%25B4%25E7%2590%2586%25EF%25BC%259AJava%25E3%2583%25BBJavaScript%25E3%2583%25BBPython%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25AB%25E6%2596%2587%25E5%258C%2596%25E3%2582%2592%25E6%25A8%25AA%25E6%2596%25AD%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5ZmExMWM5MzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りあ</dc:creator></item><item><title><![CDATA[JavaScriptで作る「気分チェンジャー」：毎日アプリ作成チャレンジ2日目の記録]]></title><description><![CDATA[
 JavaScriptで作る「気分チェンジャー」：毎日アプリ作成チャレンジ2日目の記録
こんにちは。毎日アプリ作成チャレンジ2日目のアウトプットとして、「気分を記録して、おすすめをランダム表示するミニアプリ」を作成しました。



 🎯 アプリ概要

ユーザーが今の気分（😄😐😞😠）を選ぶ
選んだ気分に応じて：

名言
行動アドバイス
おすすめのBGM/動画
などがランダムに表示されます


localStorage で前日の気分も記録＆比較できます



 🔧 技術スタック

HTML / CSS / JavaScript
JSONファイル読み込み（fetch）

localStora...]]></description><link>https://zenn.dev/homatsu_tech/articles/962a6539659cd3</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/962a6539659cd3</guid><pubDate>Tue, 22 Apr 2025 10:44:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kf1BtV8C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2580%258C%25E6%25B0%2597%25E5%2588%2586%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2580%258D%25EF%25BC%259A%25E6%25AF%258E%25E6%2597%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E4%25BD%259C%25E6%2588%2590%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B82%25E6%2597%25A5%25E7%259B%25AE%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[【Next.js】クライアント、サーバー別 Cookie操作の備忘録]]></title><description><![CDATA[
 はじめに
Next.jsでCookieを取得したり、設定したりする方法はサーバーサイドとクライアントサイドで異なります。
それらを整理しました。

 クライアントサイドでのCookie操作
クライアントサイドでは、ブラウザのAPI（document.cookie）を使用するか、ライブラリを使用してCookieを操作できます。

 ブラウザのAPI（document.cookie）を使用する
正規関数を用いたユーティリティ関数を使用して、ブラウザのAPIでCookie操作する例です。
後続のライブラリを使用する方法の方が簡潔に書けるのでおすすめです。

 Cookieを取得する
exp...]]></description><link>https://zenn.dev/kiwichan101kg/articles/4ea1b2d57fb437</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/4ea1b2d57fb437</guid><pubDate>Tue, 22 Apr 2025 08:06:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FmvlvJkm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2580%2581%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E5%2588%25A5%2520Cookie%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[Jestで時間をテストしながら開発する]]></title><description><![CDATA[フロントエンド専門のWeb制作会社「株式会社トゥーアール」の西畑です。
業務でテストコードを書くことは多いのですが特に便利だなと思っているのが時間のテストです。
例えば「一週間以内の記事のみ新着アイコンを表示する」などの要件があった場合に、開発用のAPIにテストデータを入れて一週間に確認するなどはちょっと非効率です。
実際の開発ではAPIの時間は利用せずに確認用の変数を利用することも多いでしょう。
// const { createdAt } = response.json()
// 開発用のデータ、リリース時に戻す
const createdAt = '2025-04-22T10:00...]]></description><link>https://zenn.dev/tor_inc/articles/41916ed5ec7e83</link><guid isPermaLink="true">https://zenn.dev/tor_inc/articles/41916ed5ec7e83</guid><pubDate>Tue, 22 Apr 2025 01:56:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bzZzEOfG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2581%25A7%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E8%25A5%25BF%25E7%2595%2591%25E4%25B8%2580%25E9%25A6%25AC%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg2YWFmMzM0ZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2588%25E3%2582%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%25BC%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hjcTRUQ3g5VWFxZ3VsSktVal9MQXpFVk5MYmxsaGRuYlVGZkxOUUE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>西畑一馬</dc:creator></item><item><title><![CDATA[ブラウザベースのメタバースを作る5]]></title><description><![CDATA[
 前回までのあらすじ
この記事シリーズではブラウザベースのメタバースを作っていきます。
前回はメタバース実装の準備として、2Dの箱をアバターに見立てて位置と画像の同期を実装しました。

 記載するコードの動かし方
第1回をまだ見てない人は、第1回の最後にある環境構築の項目を呼んで環境を構築してください。
https://zenn.dev/velserm/articles/localverse_0001
環境構築したディレクトリを「配置先ディレクトリ」とします。
その後、ターミナルを開いて以下のコマンドを入力してhttpサーバを起動します。
cd 配置先ディレクトリ
node httpd...]]></description><link>https://zenn.dev/velserm/articles/localverse_0005</link><guid isPermaLink="true">https://zenn.dev/velserm/articles/localverse_0005</guid><pubDate>Mon, 21 Apr 2025 22:01:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PJ7gmyS_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BF%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:velserm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzM2I5MjMzZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>velserm</dc:creator></item><item><title><![CDATA[JavaScriptとPHPの「配列」の違い：実は役割がちょっと違う！]]></title><description><![CDATA[普段、JavascriptやTypescriptを使って開発している私が、PHPの配列の仕様の違いに少しつまづいたことをきっかけに記事を書きました
JavaScriptとPHP、どちらもWeb開発でよく使われる言語ですが、似ているようで少し違う部分もあります。特に「配列」の扱いは、初学者の方が混乱しやすいポイントかもしれません。
この記事では、JavaScriptの配列（Array）とPHPの配列（array）の根本的な違いについて、サンプルコードを交えながら解説します。

 結論：役割が違う
ざっくり言うと、両者の「配列」が持つ役割が異なります。


JavaScript: Array...]]></description><link>https://zenn.dev/noah11/articles/33a34d70626586</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/33a34d70626586</guid><pubDate>Mon, 21 Apr 2025 17:44:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UDyY82s5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A8PHP%25E3%2581%25AE%25E3%2580%258C%25E9%2585%258D%25E5%2588%2597%25E3%2580%258D%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25EF%25BC%259A%25E5%25AE%259F%25E3%2581%25AF%25E5%25BD%25B9%25E5%2589%25B2%25E3%2581%258C%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E9%2581%2595%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA[XRPLのCredentials実装ガイド：資格証明の発行から管理・運用まで]]></title><description><![CDATA[
 はじめに
XRP Ledger（XRPL）はBitcoinに次ぐ長い歴史を持つ、パブリック・ブロックチェーンです。
特徴としては、一般的に取引処理が速くコストが低いことが強みと知られていますが、多くのユーティリティを持つことが特徴です。
XRPLでは、XLS-70のCredentials（資格情報）機能が2024年にDevnet環境で有効化されました。
この機能は現在Devnetでのみ利用可能であり、メインネットではまだ有効化されていません。Devnet環境を使うことで、実際の資産を使わずに機能のテストができます。
本記事では、Devnet環境を使ってxrpl.jsによるCreden...]]></description><link>https://zenn.dev/nabe3/articles/9ea35370908b00</link><guid isPermaLink="true">https://zenn.dev/nabe3/articles/9ea35370908b00</guid><pubDate>Mon, 21 Apr 2025 15:27:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6ansSbyf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:XRPL%25E3%2581%25AECredentials%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25EF%25BC%259A%25E8%25B3%2587%25E6%25A0%25BC%25E8%25A8%25BC%25E6%2598%258E%25E3%2581%25AE%25E7%2599%25BA%25E8%25A1%258C%25E3%2581%258B%25E3%2582%2589%25E7%25AE%25A1%25E7%2590%2586%25E3%2583%25BB%25E9%2581%258B%25E7%2594%25A8%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nabe3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjM2ZDU5MDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nabe3</dc:creator></item><item><title><![CDATA[ブラウザベースのメタバースを作る4]]></title><description><![CDATA[
 前回までのあらすじ
この記事シリーズではブラウザベースのメタバースを作っていきます。
前回はメタバース実装の準備として、WebRTCによるP2Pチャットを試作しました。

 記載するコードの動かし方
第1回をまだ見てない人は、第1回の最後にある環境構築の項目を呼んで環境を構築してください。
https://zenn.dev/velserm/articles/localverse_0001
環境構築したディレクトリを「配置先ディレクトリ」とします。
その後、ターミナルを開いて以下のコマンドを入力してhttpサーバを起動します。
cd 配置先ディレクトリ
node httpd.js
次に...]]></description><link>https://zenn.dev/velserm/articles/localverse_0004</link><guid isPermaLink="true">https://zenn.dev/velserm/articles/localverse_0004</guid><pubDate>Mon, 21 Apr 2025 14:50:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U8kn9heH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BF%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:velserm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzM2I5MjMzZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>velserm</dc:creator></item><item><title><![CDATA[初心者から始めるTypeScript入門 - 3日で基本構文をマスターする方法]]></title><description><![CDATA[
 はじめに
こんにちは！この記事では、TypeScript初心者が短期間で基本をマスターするための効率的な学習方法をご紹介します。私も数ヶ月前まではTypeScriptに触れたことがなく、学習過程で感じた「ここが分かりにくかった」というポイントを重点的に解説します。
なぜTypeScriptを学ぶべきなのか？それは現在のWeb開発において最も需要の高いスキルの一つだからです。TypeScriptは、JavaScriptの上位互換言語として、大規模な開発における型安全性を提供します。
本記事では、以下の内容を3日間で習得するためのロードマップを提案します：


1日目: TypeScri...]]></description><link>https://zenn.dev/zak4132/articles/typescript-3-1745243870111</link><guid isPermaLink="true">https://zenn.dev/zak4132/articles/typescript-3-1745243870111</guid><pubDate>Mon, 21 Apr 2025 13:59:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dl0zwIyb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BTypeScript%25E5%2585%25A5%25E9%2596%2580%2520-%25203%25E6%2597%25A5%25E3%2581%25A7%25E5%259F%25BA%25E6%259C%25AC%25E6%25A7%258B%25E6%2596%2587%25E3%2582%2592%25E3%2583%259E%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zak4132%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjMjVjYzRiYTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zak4132</dc:creator></item><item><title><![CDATA[【毎日アプリチャレンジ1日目】Vanilla JSで気分記録アプリを作った話]]></title><description><![CDATA[
 はじめに
こんにちは、森宝松（@morihoumatsu）です。
「毎日1つアプリを作るチャレンジ」をスタートしました！
1日目は、気分をワンタップで記録できるシンプルなWebアプリ「MoodTrack One」を作成しました。
この記事では、アプリの概要・設計・学んだことをまとめていきます📝


 アプリの概要とコンセプト

 🎯 アプリ名
MoodTrack One（ムードトラック・ワン）

 🧠 コンセプト

その日の気分を「絵文字ボタン」で記録
ログが日付付きで一覧表示される
localStorageで保存するだけの超軽量設計


 💡 想定ユーザー

毎日なんとなく気分を振...]]></description><link>https://zenn.dev/homatsu_tech/articles/a029c2e196a1b5</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/a029c2e196a1b5</guid><pubDate>Mon, 21 Apr 2025 12:53:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YqXZ6uwR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E6%25AF%258E%25E6%2597%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B81%25E6%2597%25A5%25E7%259B%25AE%25E3%2580%2591Vanilla%2520JS%25E3%2581%25A7%25E6%25B0%2597%25E5%2588%2586%25E8%25A8%2598%25E9%258C%25B2%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NmRlNTNlODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[【GAS】メールを自動送信するスプレッドシートテンプレート]]></title><description><![CDATA[
 はじめに（リマインドメールは自動送信がよい）
私はリマインドメールの送信が非常に苦手です。
「会議開催の5営業日前になったらリマインドを送る」みたいなやつです。
以下のような理由で苦手です…

送信日を覚えておくに脳のリソースがとられる
メールを1通送る5分のために集中力が途切れるのが嫌い
忘れたときに「5営業日前を過ぎてしまって申し訳ありません」の一文を加えないと（社会人としては）いけないのがメンドウ

リマインドメールが重要なのも理解していますが、苦手なものは苦手。
そこでスプレッドシートに情報を記入しておいて、GAS（GoogleAppsScript）で自動送信することを覚えま...]]></description><link>https://zenn.dev/kojimaru/articles/959dddc7a630f8</link><guid isPermaLink="true">https://zenn.dev/kojimaru/articles/959dddc7a630f8</guid><pubDate>Mon, 21 Apr 2025 09:29:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U005LwUH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2593%25E3%2581%2598%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR6Y3lfaVFlMGstVHN6b0prWFpXMFlNOG9wdEYwMkVnaXRibTRTd2otOFo5UE95dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>こじまる</dc:creator></item><item><title><![CDATA[Reactの配列メソッドと向き合う]]></title><description><![CDATA[JavaScript（React）での配列操作は、データの取得から整形・表示まで、map、filter、reduceといったメソッドを使うことで、処理の意図が明確で保守しやすいコードを書きやすくなる。
たとえば、以下のようなJSON形式の三重県の市町村データがあるとする。
// 令和6年10月1日の三重県の市区町村
const mieCities = [
  { "name": "四日市市", "area": "北勢", "population": 300457 },
  { "name": "桑名市", "area": "北勢", "population": 135308 },
  {...]]></description><link>https://zenn.dev/ayatakaa_chan/articles/39be5986980674</link><guid isPermaLink="true">https://zenn.dev/ayatakaa_chan/articles/39be5986980674</guid><pubDate>Mon, 21 Apr 2025 08:35:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--szhfezFj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2581%25A8%25E5%2590%2591%25E3%2581%258D%25E5%2590%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%2591%25E4%25B8%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjMjFjMTZiMTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>村中</dc:creator></item></channel></rss>