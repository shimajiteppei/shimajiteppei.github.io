<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 29 Jul 2025 12:05:06 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ネットワークの観察 - 第5回 SSHポートフォワーディングを解析する]]></title><description><![CDATA[
 はじめに
Mac（ホスト）とDocker環境でSSHポートフォワーディングの3種類（ローカル-L、リモート-R、ダイナミック-D）を実験・観察する手順です。

 マシンスペック
MacBook Air M2 arm64
Docker上で実施

 準備

 必要なツール
# sshpass（パスワード認証用）
brew install hudochenkov/sshpass/sshpass

# Wireshark（任意・パケット解析用）
brew install --cask wireshark

 プロジェクト構成
ssh-portforward-lab/
├── docker-c...]]></description><link>https://zenn.dev/ka_kan/articles/b4590b36e10c64</link><guid isPermaLink="true">https://zenn.dev/ka_kan/articles/b4590b36e10c64</guid><pubDate>Tue, 29 Jul 2025 10:36:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jU4FXANP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E8%25A6%25B3%25E5%25AF%259F%2520-%2520%25E7%25AC%25AC5%25E5%259B%259E%2520SSH%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOGJhYTMxOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanda</dc:creator></item><item><title><![CDATA[「前近代日本-アジア関係資料デジタルアーカイブ」のビューアを試す]]></title><description><![CDATA[
 概要
「前近代日本-アジア関係資料デジタルアーカイブ」が2025年7月25日に公開されました。
https://asia-da.lit.kyushu-u.ac.jp/
また、以下でビューアが公開されています。
https://github.com/localmedialabs/tei_comparative_viewer
本記事では、本ビューアを試した記録を共有します。
結果、以下のように、セルフホストすることができました。
https://tei-comparative-viewer.aws.ldas.jp/

以下の「海東諸国紀」のXMLファイルを読み込んでいます。
https:...]]></description><link>https://zenn.dev/nakamura196/articles/b05408b6a8d57b</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/b05408b6a8d57b</guid><pubDate>Tue, 29 Jul 2025 10:07:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b4007Sn6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%2589%258D%25E8%25BF%2591%25E4%25BB%25A3%25E6%2597%25A5%25E6%259C%25AC-%25E3%2582%25A2%25E3%2582%25B8%25E3%2582%25A2%25E9%2596%25A2%25E4%25BF%2582%25E8%25B3%2587%25E6%2596%2599%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2596%25E3%2580%258D%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[Sassで指定したスタイルが反映されないときの原因と解決法]]></title><description><![CDATA[Laravel × Sass を使っているときに、Sassで書いたスタイルが反映されず「検証ツールで確認しても変化が見えない」という経験はありませんか？
今回は、背景色を #ccc に変更したのに反映されなかったケースを例に、原因と解決までの流れを解説します。


 🐛 発生した問題
Sassファイルに以下を記述しました。
.example__exampleitem__hoge__huga {
    background-color: #ccc;
}
ところが、ブラウザの検証ツールでは background-color: #fff; のままで、#ccc の指定が表示されませんでした。
...]]></description><link>https://zenn.dev/hi_kun0912/articles/f71cfa05f937b0</link><guid isPermaLink="true">https://zenn.dev/hi_kun0912/articles/f71cfa05f937b0</guid><pubDate>Tue, 29 Jul 2025 09:25:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tEDHamNA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sass%25E3%2581%25A7%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258C%25E5%258F%258D%25E6%2598%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2581%25AF%25E5%25AD%2590%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%2591%25E3%2583%2591%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhYjMzZWZkYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>息子溺愛パパ@エンジニア</dc:creator></item><item><title><![CDATA[【prometheus】 の理解を深める]]></title><description><![CDATA[
 はじめに
以前、Prometheus と Grafana の環境構築を行いました。構築自体はできたものの、仕組みの理解が浅かったため、理解を深める目的で今回アウトプットすることにしました。
https://zenn.dev/eiken/articles/a5a61770531c70

 1. prometheus とは
prometheus は、システムやアプリケーションから収集した メトリクス（時系列データ） をもとに、監視や可視化を行うオープンソースのソフトウェアです。
少し難しく書くとすれば、エクスポーターなどから HTTP 経由でメトリクスを収集し、内部の時系列データベースに...]]></description><link>https://zenn.dev/eiken/articles/75b1b640cb744c</link><guid isPermaLink="true">https://zenn.dev/eiken/articles/75b1b640cb744c</guid><pubDate>Tue, 29 Jul 2025 07:52:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xSCSL6bk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590prometheus%25E3%2580%2591%2520%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2582%2592%25E6%25B7%25B1%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enjine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enjine</dc:creator></item><item><title><![CDATA[Docker環境でSupabase OAuth認証が失敗する問題と解決策【Next.js + Google OAuth】]]></title><description><![CDATA[
 はじめに
Docker環境でSupabaseのOAuth認証を導入する場合、公式のドキュメント通りに進めても様々な問題に遭遇します。
これは、Dockerコンテナ内とブラウザでSupabaseへのアクセス方法が異なるためです。
本記事では、このDocker環境特有の課題を解決する具体的な手順を、実装コードと共に詳しく解説します。同じ問題で困っている方の参考になれば幸いです。
事前準備

Next.jsとSupabaseの基本的な設定知識（公式クイックスタート）
Google OAuth設定の経験（公式ガイド）

完全なサンプルコード
この記事で解説するすべてのコードはGitHubリポ...]]></description><link>https://zenn.dev/t98o84/articles/fcf97addf38bda</link><guid isPermaLink="true">https://zenn.dev/t98o84/articles/fcf97addf38bda</guid><pubDate>Tue, 29 Jul 2025 04:31:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--07hnTZPc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7Supabase%2520OAuth%25E8%25AA%258D%25E8%25A8%25BC%25E3%2581%258C%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2599%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%25E3%2580%2590Next.js%2520%252B%2520Google%2520OAuth%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuya%2520Ohashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkFwbkVNek81dDRpWXkzaFhURUlkWTdkMlhLSm1PY3hKXzdfam1INUg4VllabD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takuya Ohashi</dc:creator></item><item><title><![CDATA[Raspberry Pi + Yocto + docker compose]]></title><description><![CDATA[作りたいものの全体像（このスクラップ）から参照しています
https://zenn.dev/takumique/scraps/dc811f9f30d004

 作りたいもの
こちらの記事で作成したコンテナおよびその他コンテナをdocker-composeを使用して起動します。
https://zenn.dev/takumique/articles/01d115c0c706d9

 docker-composeのインストール
meta-virtualizationにdocker-composeがありますので、これを使います。

 local.conf
CORE_IMAGE_EXTRA_IN...]]></description><link>https://zenn.dev/takumique/articles/e2dcb85f32c1aa</link><guid isPermaLink="true">https://zenn.dev/takumique/articles/e2dcb85f32c1aa</guid><pubDate>Mon, 28 Jul 2025 22:18:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e6yJvjPx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520%252B%2520Yocto%2520%252B%2520docker%2520compose%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takumique%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3I4X01CVk1NS3pLWDBiYWdESTdCRXV5dEdxMHpHLUdWSWE1emhJc1MxYkFTU3J3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takumique</dc:creator></item><item><title><![CDATA[ネットワークの観察 - 第4回 telnetを解析する]]></title><description><![CDATA[
 はじめに
telnetの接続はどのようになっているのでしょうか？今回はwiresharkを使用して確認してみます。

 マシンスペック
MacBook Air M2 arm64
Docker上で実施

 準備

 wiresharkのインストール
brew install --cask wireshark

 ファイル構成
telnet_lab/
├── docker-compose.yml
├── server/
│   └── Dockerfile
└── client/
    └── Dockerfile

 サーバ側のDockerfile（server/Dockerfile...]]></description><link>https://zenn.dev/ka_kan/articles/a18ae97f8bd791</link><guid isPermaLink="true">https://zenn.dev/ka_kan/articles/a18ae97f8bd791</guid><pubDate>Mon, 28 Jul 2025 21:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IOw_zpq1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E8%25A6%25B3%25E5%25AF%259F%2520-%2520%25E7%25AC%25AC4%25E5%259B%259E%2520telnet%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOGJhYTMxOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanda</dc:creator></item><item><title><![CDATA[3年前に使っていたDocker ComposeとLinuxサービスファイルの備忘録]]></title><description><![CDATA[
 ✅ はじめに
本記事では、3年前の開発環境で実際に使用していた Docker Compose 設定と、
Linux上でコンテナを自動起動する systemd のサービス定義を備忘録として残します。
使用目的は、SQL Server（MSSQL）コンテナを構成し、定期的に稼働させる開発用途です。

OS：Ubuntu 20.04 LTS
Docker：20.x 系（Docker Compose CLI）
コンテナ：SQL Server 2022 on Linux（Microsoft公式）



 ✅ ディレクトリ構成（例）
project-root/
├── docker-compos...]]></description><link>https://zenn.dev/mono_tec/articles/zenn_docker_systemd_tips</link><guid isPermaLink="true">https://zenn.dev/mono_tec/articles/zenn_docker_systemd_tips</guid><pubDate>Mon, 28 Jul 2025 13:44:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T4tBxh7v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3%25E5%25B9%25B4%25E5%2589%258D%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259FDocker%2520Compose%25E3%2581%25A8Linux%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mono-tec%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTZaVkRsSjViekNjM2RteXoyM3FGV0JEMldnZUttRnByaXR2aktHWHBFMFVudlNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mono-tec</dc:creator></item><item><title><![CDATA[Go Todo App Docker最適化記録 - 60MB→23MB軽量化への道のり 🚀]]></title><description><![CDATA[
 Go Todo App Docker最適化記録 - 60MB→23MB軽量化への道のり 🚀

 はじめに
エンジニア4ヶ月目のSomeです！
前回、Go Todo App PostgreSQL化で、GoアプリをPostgreSQL対応にして本格的なWebアプリケーションを構築しました。アプリとしての機能は完成したものの、Dockerについてもっと深く学びたくなり、今回はDocker最適化にチャレンジしてみました。
普段の業務ではC#を使っていて、まだDockerは導入されていません。しかし、今後Goを使った開発や、Docker環境の導入も検討されているため、個人学習として取り組むこと...]]></description><link>https://zenn.dev/some55/articles/ebe2fc96889c1a</link><guid isPermaLink="true">https://zenn.dev/some55/articles/ebe2fc96889c1a</guid><pubDate>Mon, 28 Jul 2025 11:12:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4bh69QiY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%2520Todo%2520App%2520Docker%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E8%25A8%2598%25E9%258C%25B2%2520-%252060MB%25E2%2586%259223MB%25E8%25BB%25BD%25E9%2587%258F%25E5%258C%2596%25E3%2581%25B8%25E3%2581%25AE%25E9%2581%2593%25E3%2581%25AE%25E3%2582%258A%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:some%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzNWYzNjQ4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>some</dc:creator></item><item><title><![CDATA[官報とは。python/UV/Docker/GitHubActionsで通知システムを勢いだけで構築してみたが。]]></title><description><![CDATA[

 はじめに（なぜに作った？）
参院選が終わってまた色々と変わりそうだけど、若い年代の投票率が増えたのは良い傾向だなぁと思っているこの頃です。
移民問題、帰化人などなど騒がれていますが、そこで興味持ったのが官報。
全く日常で使わないものですけど、一旦購読してみようかなと思った日、、RSSもなければ通知だけXアカウントも見つからず。
となれば、
とりあえず作っちゃえということで…

 目指す全体の構成


官報スクレイパー GitHub Action を作る
汎用的なスクレイピングアクションの作成(公式ページをスクレイピングして情報を抽出する（PDFリンクと、書く官報の目次タイトルとリン...]]></description><link>https://zenn.dev/testkun08080/articles/githubaction-python-06736ff9d25672</link><guid isPermaLink="true">https://zenn.dev/testkun08080/articles/githubaction-python-06736ff9d25672</guid><pubDate>Mon, 28 Jul 2025 10:42:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9XILMRNj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%2598%25E5%25A0%25B1%25E3%2581%25A8%25E3%2581%25AF%25E3%2580%2582python%252FUV%252FDocker%252FGitHubActions%25E3%2581%25A7%25E9%2580%259A%25E7%259F%25A5%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E5%258B%25A2%25E3%2581%2584%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%258C%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:testkun08080%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxMjE5ZTQ2YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>testkun08080</dc:creator></item><item><title><![CDATA[🐳【学習ログ】なぜDocker環境があるのに「npm run build」をホストで実行するのか]]></title><description><![CDATA[
 問題意識
最近のプロジェクトにおいて、Dockerベースの開発環境が整備されているにもかかわらず、フロントエンドのビルド処理をホストマシン上で直接実行しているケースにたびたび直面した。具体的には、CursorやClaudeといったAIコーディングアシスタントの提案をそのまま受け入れた結果として、npm run build をホスト側で実行するという流れが自然に定着している場面がある。
フロントエンドエンジニアではない自分にとって、この選択がなぜ合理的なのか、また、そもそも「npm run build」がどのような意味を持つのかを明確に理解する必要があると感じ、今回調査を行った。

 ...]]></description><link>https://zenn.dev/atsushimemet/articles/3f37dae25f3d56</link><guid isPermaLink="true">https://zenn.dev/atsushimemet/articles/3f37dae25f3d56</guid><pubDate>Mon, 28 Jul 2025 08:17:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q8_UEnku--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%25E3%2580%2590%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2582%25B0%25E3%2580%2591%25E3%2581%25AA%25E3%2581%259CDocker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AB%25E3%2580%258Cnpm%2520run%2520build%25E3%2580%258D%25E3%2582%2592%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:studymemot%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTd0bDJIcVI3WmY1QnJlX1hOM2hyWksyNU1CczlhNEVvd2c1RmVKZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>studymemot</dc:creator></item><item><title><![CDATA[Minecraft Geyserを使ってJava版とBedrock(統合)版両対応のサーバーを建てる : レッドストーンを追え(8)]]></title><description><![CDATA[
 面白いプラグインもあるもんだ
!
関連記事:

DockerでMinecraft bedrock Edition(統合版)を建ててSwitchで接続する : レッドストーンを追え(7)

レッドストーンを追えシリーズ過去記事

docker経由でMinecraft資源(Spigot)サーバーを立てる
docker経由でMinecraft資源(Spigot)サーバーを立てる(2)
Docker MinecraftのPaperサーバーのJavaバージョンを11にする
Docker Minecraft Paperサーバーを1.17しつつのJavaバージョンを16にする: レッドストーンを追...]]></description><link>https://zenn.dev/dozo/articles/1e45dcfac3033c</link><guid isPermaLink="true">https://zenn.dev/dozo/articles/1e45dcfac3033c</guid><pubDate>Mon, 28 Jul 2025 01:21:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tN0hOa8p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Minecraft%2520Geyser%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Java%25E7%2589%2588%25E3%2581%25A8Bedrock%2528%25E7%25B5%25B1%25E5%2590%2588%2529%25E7%2589%2588%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E5%25BB%25BA%25E3%2581%25A6%25E3%2582%258B%2520%253A%2520%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B9...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dozo</dc:creator></item><item><title><![CDATA[ネットワークの観察 - 第3回 sftpを解析する]]></title><description><![CDATA[
 はじめに
sftpの接続はどのようになっているのでしょうか？今回はwiresharkを使用して確認してみます。

 マシンスペック
MacBook Air M2 arm64
Docker上で実施

 準備

 wiresharkのインストール
brew install --cask wireshark

 Dockerfile
FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update &amp;&amp; apt-get install -y \
        openssh-server op...]]></description><link>https://zenn.dev/ka_kan/articles/c9cd0261d7622d</link><guid isPermaLink="true">https://zenn.dev/ka_kan/articles/c9cd0261d7622d</guid><pubDate>Sun, 27 Jul 2025 21:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1aD5AEY0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E8%25A6%25B3%25E5%25AF%259F%2520-%2520%25E7%25AC%25AC3%25E5%259B%259E%2520sftp%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOGJhYTMxOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanda</dc:creator></item><item><title><![CDATA[【DB】ストアドプロシージャ（STORED PROCEDURE）について]]></title><description><![CDATA[
 ストアドプロシージャとは
!

 【ストアドプロシージャ】とは
・複数のSQL文を1つのプログラムのような形でまとめ、プログラムの関数のように利用することができる仕組みのこと。

ストアドプロシージャの基本形
-- プロシージャの作成/変更
ALTER PROCEDURE [スキーマ名].[プロシージャ名]
    @パラメータ名 データ型,
    @パラメータ名2 データ型 = デフォルト値  -- デフォルト値設定可能
AS
BEGIN
    -- 処理内容
END




 ストアドプロシージャを作ってみよう

 １.準備
準備するもの
https://www.docker...]]></description><link>https://zenn.dev/code_journey_ys/articles/45611a06e0e19b</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/45611a06e0e19b</guid><pubDate>Sun, 27 Jul 2025 12:37:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TeEvfA2R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DB%25E3%2580%2591%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2589%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25EF%25BC%2588STORED%2520PROCEDURE%25EF%25BC%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Docker LLM Gateway 完全ガイド：MCP時代のコンテナ型LLMプロキシアーキテクチャ]]></title><description><![CDATA[
 TL;DR 📋


本記事の内容: Docker LLM Gatewayの実装手法と、MCPプロトコルによるマルチエージェント統合

本記事の対象範囲: リモートMCPとしてDocker MCP Gatewayを利用する場合について解説（ローカル実行パターンは対象外）

理解できること:

Docker LLM Gatewayのアーキテクチャ設計と実装手法
MCP（Model Context Protocol）を活用したマルチツール統合

なぜFargateで動作しないのかの技術的制約と根本原因
EC2での実装パターンと単一インスタンス依存の課題
セキュリティ境界設計と運用監視のベス...]]></description><link>https://zenn.dev/purple_matsu1/articles/f49eedfc58e5d8</link><guid isPermaLink="true">https://zenn.dev/purple_matsu1/articles/f49eedfc58e5d8</guid><pubDate>Sun, 27 Jul 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zrPoNFGY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520LLM%2520Gateway%2520%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25EF%25BC%259AMCP%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%259E%258BLLM%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:purple%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5M2E5OTQyOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>purple</dc:creator></item><item><title><![CDATA[Dockerコンテナに未インストールのコマンドを実行する : docker debug コマンド]]></title><description><![CDATA[
 TL;DR


slimなどの軽量イメージは、必要最低限のコマンドしかインストールされていない
そのため、動作確認やデバッグのためのコマンド（例：ping）が使用できない
そんな時は、docker debugコマンドを使うと、コンテナに未インストールのコマンドを実行できる


 注意事項
docker debugコマンドはDocker Desktopの有料プラン(Pro/Team/Business) でしか利用できません。

 背景
Dockerイメージを作成する際のベストプラクティスとして、「必要最小限の要素のみを含める」というものがあります。
「イメージサイズを小さくすることによ...]]></description><link>https://zenn.dev/junm0ri/articles/docker-debug-command</link><guid isPermaLink="true">https://zenn.dev/junm0ri/articles/docker-debug-command</guid><pubDate>Sun, 27 Jul 2025 03:06:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u-e3o5Z_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E6%259C%25AA%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2520%253A%2520docker%2520debug%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Junm0ri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjZTI2ODcxYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Junm0ri</dc:creator></item><item><title><![CDATA[ネットワークの観察 - 第2回 SCPを解析する]]></title><description><![CDATA[
 はじめに
scpの接続はどのようになっているのでしょうか？今回はwiresharkを使用して確認してみます。

 マシンスペック
MacBook Air M2 arm64
Docker上で実施

 準備

 wiresharkのインストール
brew install --cask wireshark

 Dockerfile
FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update &amp;&amp; apt-get install -y \
        openssh-server ope...]]></description><link>https://zenn.dev/ka_kan/articles/8abcd73598e406</link><guid isPermaLink="true">https://zenn.dev/ka_kan/articles/8abcd73598e406</guid><pubDate>Sun, 27 Jul 2025 02:06:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3Fdqbyif--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25AE%25E8%25A6%25B3%25E5%25AF%259F%2520-%2520%25E7%25AC%25AC2%25E5%259B%259E%2520SCP%25E3%2582%2592%25E8%25A7%25A3%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlOGJhYTMxOGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanda</dc:creator></item><item><title><![CDATA[prometheus のデータを grafana で可視化する]]></title><description><![CDATA[
 はじめに
前回の記事で prometheus と grafana を dockerコンテナで起動しました。今回は実際に prometheus で収集したデータを grafana で可視化してみようと思います。

 実行環境と作業の流れ
監視サーバー : Dockerコンテナ（MacBookAir上で構築）
監視対象 : Fedoraサーバー（VMWare仮想マシン）
※ 以下手順で作業していきます。
prometheusu のコンテナで環境を構築する
grafana のコンテナ環境を構築する
prometheus から取得したデータを grafana で可視化する ← ※今回はここで...]]></description><link>https://zenn.dev/eiken/articles/c360a81ba626c1</link><guid isPermaLink="true">https://zenn.dev/eiken/articles/c360a81ba626c1</guid><pubDate>Sun, 27 Jul 2025 00:29:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xC-N81Ws--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:prometheus%2520%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%2520grafana%2520%25E3%2581%25A7%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enjine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enjine</dc:creator></item><item><title><![CDATA[GitHubのissueをCopilotに割り当ててDockerイメージのビルド時間を短縮してもらった話]]></title><description><![CDATA[
 概要
Dockerfileの更新時、GitHub ActionsでDockerイメージをビルドし、SyftでSBOMを作成、Grypeで脆弱性をスキャンしています。
しかし、Dockerイメージのビルドに時間がかかるという課題がありました。
GitHub Copilot Proを契約して、GitHubのissueをCopilotに割り当てて対応してもらえるようになったので、Dockerイメージのビルド時間短縮の対応をしてもらいました。

 issueの内容
問題点と対策を記載したissueを作成し、Copilotにアサインしました。


 Copilotによる修正内容
従来はdock...]]></description><link>https://zenn.dev/jnxjez/articles/d40cc548d993a9</link><guid isPermaLink="true">https://zenn.dev/jnxjez/articles/d40cc548d993a9</guid><pubDate>Sat, 26 Jul 2025 23:19:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZPuxwutz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%25E3%2581%25AEissue%25E3%2582%2592Copilot%25E3%2581%25AB%25E5%2589%25B2%25E3%2582%258A%25E5%25BD%2593%25E3%2581%25A6%25E3%2581%25A6Docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E7%259F%25AD%25E7%25B8%25AE%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmNzI0MTQ1M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジェイ</dc:creator></item><item><title><![CDATA[grafana をdockerコンテナで実行する]]></title><description><![CDATA[
 はじめに
前回の記事で prometheusu の導入が完了しました。今回は grafana を dockerコンテナで実行します。

 実行環境と作業の流れ
監視サーバー : Dockerコンテナ（MacBookAir上で構築）
監視対象 : Fedoraサーバー（VMWare仮想マシン）
※ 以下手順で作業していきます。
prometheusu のコンテナで環境を構築する
grafana のコンテナ環境を構築する  ← ※今回はここです
prometheus から取得したデータを grafana で可視化する

 grafana の起動
前回作成した docker-compose...]]></description><link>https://zenn.dev/eiken/articles/4f0e8c046b936c</link><guid isPermaLink="true">https://zenn.dev/eiken/articles/4f0e8c046b936c</guid><pubDate>Sat, 26 Jul 2025 23:02:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xnTGxILh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:grafana%2520%25E3%2582%2592docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:enjine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>enjine</dc:creator></item></channel></rss>