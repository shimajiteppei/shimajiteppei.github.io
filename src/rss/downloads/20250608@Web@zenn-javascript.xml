<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 08 Jun 2025 05:28:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Youtubeで再生速度を変更できるChrome拡張機能を作ってみた話]]></title><description><![CDATA[
 Youtubeで再生速度を変更できるスライダーを作ってみた

 きっかけ

普段から見る動画によって再生速度を変更するので、すぐに再生速度を変更できる拡張機能が欲しかった
既に公開されている拡張機能はどのサイトでも使えて多機能だったが、上部の拡張機能ボタンを押さないといけなくて面倒だった


 言語
JavaScript/CSS

 AIツール

Google AI Studio
Cursor


 作成時間
20~30分

 できること

再生速度を直感的に変更できる
0.25~3.0倍まで変更可能




 嬉しい誤算
Youtube標準の0.25~2.0倍で考えていたが、3倍ま...]]></description><link>https://zenn.dev/tamamochi/articles/133cf324a2e10d</link><guid isPermaLink="true">https://zenn.dev/tamamochi/articles/133cf324a2e10d</guid><pubDate>Sun, 08 Jun 2025 05:16:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0L1BdwfY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Youtube%25E3%2581%25A7%25E5%2586%258D%25E7%2594%259F%25E9%2580%259F%25E5%25BA%25A6%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BChrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tama-mochi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYzE3Zjk5YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tama-mochi</dc:creator></item><item><title><![CDATA[JQuery]]></title><description><![CDATA[JQuery]]></description><link>https://zenn.dev/codek2/books/bdd7d6cc04e5c2</link><guid isPermaLink="true">https://zenn.dev/codek2/books/bdd7d6cc04e5c2</guid><pubDate>Sun, 08 Jun 2025 04:03:02 GMT</pubDate><dc:creator>コード日和（びより）</dc:creator></item><item><title><![CDATA[【基本の型】jQueryの安全で使い回せる雛形テンプレート]]></title><description><![CDATA[ちょっとしたDOM操作やイベント処理をjQueryで書こうと思ったときに「どんな書き方だっけ？」と手が止まること、ありませんか？
自分も毎回ググったり、過去のコードをコピペして持ってきたり・・・
この記事はそんな自分への備忘録＆戒めとして、jQueryの安全で使い回せる雛形コードを紹介します。

 🧓「まだjQuery使ってるの？」なんて言わないで
確かに最近ではReactやVueなどのモダンフレームワークが主流ですが、
うちの現場ではまだガッツリ現役というケースも意外と多いんです。
そんな現場でこそ、雛形のひとつくらいは手元にあるとラクになります。

 なぜ雛形が必要？
jQueryを...]]></description><link>https://zenn.dev/akky709/articles/d80648b4152d80</link><guid isPermaLink="true">https://zenn.dev/akky709/articles/d80648b4152d80</guid><pubDate>Sun, 08 Jun 2025 03:00:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8nPrS_4K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E5%259E%258B%25E3%2580%2591jQuery%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E5%259B%259E%25E3%2581%259B%25E3%2582%258B%25E9%259B%259B%25E5%25BD%25A2%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akky%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akky</dc:creator></item><item><title><![CDATA[JavaScriptでABC409(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc409

 A - Conflict
https://atcoder.jp/contests/abc409/tasks/abc409_a
連番配列とArray#some()でいいかぁ
https://atcoder.jp/contests/abc409/submissions/66505055
1分43秒 AC!

 B - Citation
https://atcoder.jp/contests/abc409/tasks/abc409_b
どの数字が何個あるかをメモって、最大値から1引きながら合計個数を数えればいいかな〜
h...]]></description><link>https://zenn.dev/aya_koto/articles/f769495a2846c4</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/f769495a2846c4</guid><pubDate>Sat, 07 Jun 2025 13:53:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T_jIYn18--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC409%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[TypeScript入門：関数の型定義～配列操作について]]></title><description><![CDATA[
 はじめに
最近はAIコーディングばかりで、自身の基礎的な理解が曖昧になっていると感じることがありました。そこで本記事では、自身の知識を整理し、理解を深める目的で、TypeScriptの要点をできるだけかみ砕いてアウトプットとしてまとめます。

 1.引数と戻り値の基本
JavaScriptでも関数はたくさん使っていましたが、TypeScriptではもっと厳密に、そして安全に関数を扱えます。

 ポイント
ポイントは、引数（関数に渡すデータ）と戻り値（関数から返ってくるデータ）それぞれに、「君のデータの種類はこれだよ」と型を決めてあげることでした。これを最初にやっておくと、後で全然違う...]]></description><link>https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</link><guid isPermaLink="true">https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</guid><pubDate>Sat, 07 Jun 2025 02:01:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cTOB812w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25EF%25BD%259E%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%25A7%25E6%259C%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MTAwYTVmYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碧月</dc:creator></item><item><title><![CDATA[TypeScriptで人生が変わった話 - TypeScript大好きエンジニアの溺愛ポエム]]></title><description><![CDATA[
 はじめに - TypeScriptへの愛を込めて
『Zenn TypeScript記事投稿コンテスト』
こんなコンテストがあるなんて...！
文章は下手だし、みんなみたいに豊富な経験があるわけでもないけれど、このTypeScriptへの愛と学びは発信しておかないと、TypeScriptLoverとしての名が廃る。
そんな想いで、気づいたときにはキーボードを叩いていました。
ちなみに、AIが目まぐるしい勢いで成長している昨今、いつか自分の手でコードを書けなくなる日が来るかもしれません...😱 でも声を大にして宣言します。AIがどれだけ発展しても、TypeScriptは己が手一本で書き続...]]></description><link>https://zenn.dev/katakuriko_a/articles/512ca79b440741</link><guid isPermaLink="true">https://zenn.dev/katakuriko_a/articles/512ca79b440741</guid><pubDate>Fri, 06 Jun 2025 12:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NyBO23-o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E4%25BA%25BA%25E7%2594%259F%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2520-%2520TypeScript%25E5%25A4%25A7%25E5%25A5%25BD%25E3%2581%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%259D%25E3%2582%25A8%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Uni%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMWIxZjEyZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Uni</dc:creator></item><item><title><![CDATA[🚀 npmはもう古い？pnpmが開発体験を爆速にする理由]]></title><description><![CDATA[
 はじめに
npm install を実行して、コーヒーを淹れにいく...。そんな経験はありませんか？ プロジェクトが大きくなるにつれて肥大化する node_modules フォルダや、いつ終わるか分からないパッケージのインストール時間に、多くの開発者が悩まされています。
この記事では、そんな悩みを解決するかもしれない次世代のパッケージマネージャー pnpm について、npm との違いを比較しながら、その核心的な仕組みと具体的なメリットを徹底的に解説します。
この記事を読み終える頃には、きっとあなたのプロジェクトにも pnpm を導入したくなるはずです！

 そもそもパッケージマネージ...]]></description><link>https://zenn.dev/aoyamadev/articles/b99bb3d9158fa8</link><guid isPermaLink="true">https://zenn.dev/aoyamadev/articles/b99bb3d9158fa8</guid><pubDate>Fri, 06 Jun 2025 07:29:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6hGF7vTx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520npm%25E3%2581%25AF%25E3%2582%2582%25E3%2581%2586%25E5%258F%25A4%25E3%2581%2584%25EF%25BC%259Fpnpm%25E3%2581%258C%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Bojji%2520Dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3MWQ2NzI4ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Bojji Dev</dc:creator></item><item><title><![CDATA[BiomeのGritQLプラグイン vs. ast-grep: JS開発者のためのAST変換ガイド]]></title><description><![CDATA[
 なぜASTツールがリンターにとって重要なのか
Zennの皆様こんにちは。ast-grepの著者、Herringtonです。
大規模プロジェクトで一貫性のある高品質なコードを維持することは、大きな課題です。最新のRustベースのLintingツールは、基本的なコーディング標準を強制する点で素晴らしいパフォーマンスを発揮しますが、開発者が高度にカスタムなプロジェクト固有のパターンや、コードベース全体にわたる自動化された大規模なリファクタリングを必要とする場合、しばしば不十分です。ここで、AST（Abstract Syntax Tree：抽象構文木）ベースのツール、特にネイティブリンターに...]]></description><link>https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</link><guid isPermaLink="true">https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</guid><pubDate>Fri, 06 Jun 2025 05:29:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agZTJNfU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2581%25AEGritQL%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2520vs.%2520ast-grep%253A%2520JS%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAST%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Herrington%2520Darkholme%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZWZPY0dMdmpkYjdJT0JURTFKNXB4d3ZVcEc2SEdRZ2w3bE1LZnR0SW1hMFRxTj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Herrington Darkholme</dc:creator></item><item><title><![CDATA[「午後12:00」はどこから来るのか]]></title><description><![CDATA[!
2025年6月現在 Chrome 137.0.7151.69 で再現することを確認しています。
今後、挙動に変更があるかもしれないのでご注意ください。

この記事は、社内のLT会で発表した内容をもとに、技術記事として再構成したものです。Node.jsやブラウザなど、JavaScriptのランタイムによって「正午」の表記が異なる現象について、調査と考察をまとめました。

 正午を返す処理の挙動
まず、以下のコードが何を出力するかを考えてみます。
new Date("2024-01-01T12:00:00").toLocaleTimeString("ja", {
  timeStyle:...]]></description><link>https://zenn.dev/timetree/articles/1bb2896ce8d4fe</link><guid isPermaLink="true">https://zenn.dev/timetree/articles/1bb2896ce8d4fe</guid><pubDate>Fri, 06 Jun 2025 02:10:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DedaNdj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%258D%2588%25E5%25BE%258C12%253A00%25E3%2580%258D%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2593%25E3%2581%258B%25E3%2582%2589%25E6%259D%25A5%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fujikky%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MDU4MGVlNDguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TimeTree%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2dFRjSGtRdmJhSkFoekM4SzhyVkwxaTBPYTE3c3FlR2xlV3FhOHc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fujikky</dc:creator></item><item><title><![CDATA[【JavaScript】try-catch-finally の使い方と注意点]]></title><description><![CDATA[
 はじめに
JavaScriptでプログラムを書いていると、思わぬエラーに遭遇することがあります。
そんな場面で役立つのが、try-catch-finally 構文です。
「エラーが発生してもプログラム全体が止まらないようにする」 という意味でも、非常に大切な考え方です。
本記事では、


try-catch の基本的な書き方

finally が何のためにあるか
よくあるミスや注意点

について解説します。

 1. try-catch の基本構文
try {
  // エラーが起きるかもしれない処理
} catch (error) {
  // エラー発生時の対応
}

 ✅ 例
...]]></description><link>https://zenn.dev/fd2025/articles/6e9ff71a363a17</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/6e9ff71a363a17</guid><pubDate>Thu, 05 Jun 2025 21:53:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3IFSQWBd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591try-catch-finally%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[Webのフロントエンドを構成する基本技術]]></title><description><![CDATA[こんにちは。じゅに（@Jyu210_engineer）です。
自己紹介でも書いてある通り、今までWebに触れてきていなかったので、基本から。
ということでまずは、Webフロントエンドを構成する基本技術をおさらいしたいと思います。
いや、エンジニアからしたら一般常識やろ！というところはあるかと思いますが、私自身に腹落ちさせるためにアウトプットさせてください。

 フロントエンドを構成する基本の3大技術
フロントエンド構成する基本の3大技術といえば、間違いなく以下の3つですね。

HTML
CSS
JavaScript

この技術なくしてフロントエンドは成り立ちません。
フロントエンド開発を...]]></description><link>https://zenn.dev/jyu210_engineer/articles/d02e06970e5910</link><guid isPermaLink="true">https://zenn.dev/jyu210_engineer/articles/d02e06970e5910</guid><pubDate>Thu, 05 Jun 2025 15:15:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f8pcrAo---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E6%25A7%258B%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E5%259F%25BA%25E6%259C%25AC%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2585%25E3%2581%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWZiMWNhMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じゅに</dc:creator></item><item><title><![CDATA[npmとpackage.jsonの基本理解と役割]]></title><description><![CDATA[
 📦 npm = Node Package Manager

JavaScript開発において、ライブラリの依存関係を管理し、
必要なパッケージをインストール・実行するためのツール。



 📄 package.jsonとは？
Node.jsプロジェクトの中核となる設定ファイルで、次のような役割を持つ：


 1️⃣ インストールされたライブラリの記録


npm install でインストールしたすべてのライブラリがここに記録される。
他のPCでも同じ環境を簡単に再構築できる。



 2️⃣ プロジェクト情報と設定の管理

プロジェクト名、バージョン、説明、作成者などの情報が含まれ...]]></description><link>https://zenn.dev/kmj13/articles/npm_and_packagejson_ja</link><guid isPermaLink="true">https://zenn.dev/kmj13/articles/npm_and_packagejson_ja</guid><pubDate>Thu, 05 Jun 2025 13:12:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R07LC08w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:npm%25E3%2581%25A8package.json%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E5%25BD%25B9%25E5%2589%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmj99%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno0azlnb19fcW1fbjVxdkFCYkJNU2U5X2VfYWZkTGEtbHVNZDFXR2pWV05CZTBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmj99</dc:creator></item><item><title><![CDATA[[CSS] ホバーした要素以外の兄弟要素の透過率(opacity)を下げる方法]]></title><description><![CDATA[
 背景
「ある要素にマウスオーバーした際、その兄弟要素の透明度を下げて強調表示する」といったデザインがjQuery全盛期にはよく見られた。
// イメージ
$("a")
  .on("mouseenter", function () {
    $(this).siblings("a").css("opacity", 0.8);
  })
  .on("mouseleave", function () {
    $(this).siblings("a").css("opacity", "");
  });
デザインの流行り廃りやjQueryでの実装もなくなってきて、こういったデザイン...]]></description><link>https://zenn.dev/hiro/articles/56192bd2dec7e4</link><guid isPermaLink="true">https://zenn.dev/hiro/articles/56192bd2dec7e4</guid><pubDate>Thu, 05 Jun 2025 00:51:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yKxtmVoq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BCSS%255D%2520%25E3%2583%259B%25E3%2583%2590%25E3%2583%25BC%25E3%2581%2597%25E3%2581%259F%25E8%25A6%2581%25E7%25B4%25A0%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E5%2585%2584%25E5%25BC%259F%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AE%25E9%2580%258F%25E9%2581%258E%25E7%258E%2587%2528opacity%2529%25E3%2582%2592%25E4%25B8%258B%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MzA3N2E1OTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiro</dc:creator></item><item><title><![CDATA[Azure App Service + Next.jsでファイルの分割アップロードを実装する]]></title><description><![CDATA[Azure App Service上でNext.jsアプリ作ってたんですが、大容量ファイルのアップロードでApp Serviceがメモリ不足でクラッシュするという事件が発生しました😇

 開発環境とアーキテクチャ
まず、今回作ってたシステムの構成はこんな感じ：


 ここで重要な制約が...


VNet統合: App ServiceとBlob StorageはVNet統合されてる

外部アクセス制限: ブラウザから直接Blob Storageにアクセスできない

必須経路: ファイルアップロードは全部App Service経由じゃないとダメ

要するに、よくある「ブラウザ→Blob S...]]></description><link>https://zenn.dev/nbs_tokyo/articles/b4baf9c56b9d1f</link><guid isPermaLink="true">https://zenn.dev/nbs_tokyo/articles/b4baf9c56b9d1f</guid><pubDate>Wed, 04 Jun 2025 13:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fYyPXnYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520App%2520Service%2520%252B%2520Next.js%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2588%2586%25E5%2589%25B2%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hirofumi%2520Moribayashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNWU5MTAzNjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25BA%25E6%259D%25B1%25E4%25BA%25AC%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZGNhOThiZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hirofumi Moribayashi</dc:creator></item><item><title><![CDATA[Astroでサイト構築1]]></title><description><![CDATA[
 はじめに
こんにちは！
都内で主にフロントエンド業務とマネージメント半々でお仕事しているジュウドー・富岡です。
いままで業務では主にwebpackをベースに、TypescriptやSassをメインに使って業務でサイト構築をしていました。
ビルドの遅さや設定の複雑さに見て見ぬふりをし、開発・運用メンバーへの説明の手間と業務量を言い訳にして、気持ちとは裏腹になあなあな関係でwebpackとここまで付き合ってきました。
そんなときにCore Web Vitalを意識したハイパフォーマンスなサイト構築を要求している案件があったのでそれを機（盾）に、非エンジニアで構成された運用チームへの負担を...]]></description><link>https://zenn.dev/melodic_mznc/articles/77cd8a61a12c1b</link><guid isPermaLink="true">https://zenn.dev/melodic_mznc/articles/77cd8a61a12c1b</guid><pubDate>Wed, 04 Jun 2025 06:53:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sxQiRCKs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E6%25A7%258B%25E7%25AF%25891%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%25A5%25E3%2582%25A6%25E3%2583%2589%25E3%2583%25BC%25E3%2583%25BB%25E5%25AF%258C%25E5%25B2%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWR1X0VadmEzTzRzTDRXSy1oMFNReGdGWGN6TmZ5OTF0UmhySVJmaHpfR0xaU3psTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジュウドー・富岡</dc:creator></item><item><title><![CDATA[【#7】サーバーにアップロードしてシリーズ完結！静的ホスティングでWebアプリを公開しよう]]></title><description><![CDATA[
 📝 今回の記事でやること

作成したタイマーアプリを無料で使えるサーバーにアップロードする
Github Pagesを例に、アップロードの具体的な手順を解説
シリーズまとめ



 🌐 サーバー候補の比較



サービス名
URL
特徴




GitHub Pages
https://pages.github.com/
GitHubと親和性が高く、無料で始めやすい


Netlify
https://www.netlify.com/
自動デプロイやカスタムドメインも簡単に設定できる


Vercel
https://vercel.com/
Next.jsなどの静的/動的アプリも対応...]]></description><link>https://zenn.dev/magma_program/articles/23f3ed1641178b</link><guid isPermaLink="true">https://zenn.dev/magma_program/articles/23f3ed1641178b</guid><pubDate>Wed, 04 Jun 2025 01:56:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d7lcGdXE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25237%25E3%2580%2591%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B7%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E5%25AE%258C%25E7%25B5%2590%25EF%25BC%2581%25E9%259D%2599%25E7%259A%2584%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mAgmA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlE1LTgyWVdfSW5kQURGZFBlNi1nOWxVWGVNT0xzTm1nOHVWemwxMUQyLTFiM3Q2TT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mAgmA</dc:creator></item><item><title><![CDATA[asyncとawaitについて]]></title><description><![CDATA[jsを触っている時に、なんだっけ？と思ったasyncとawaitについて調べたことをまとめました。

 async/awaitとは
Promiseをもっと同期処理っぽくかける構文です。

 Promiseとは
「非同期処理の結果を表すオブジェクト」です。
Promiseは3つの状態を持ちます。

pending:(初期状態)
fulfilled:成功
rejected:失敗
プロミスは何か値を返すととともに状態も返すイメージですね。
この状態は途中で変化します。通常非同期処理は時間のかかる処理を非同期として通信するわけですが、即時リターンをしてくれないので、プロミスは最初にpending...]]></description><link>https://zenn.dev/miso_devlog/articles/de7eb84edd3bb1</link><guid isPermaLink="true">https://zenn.dev/miso_devlog/articles/de7eb84edd3bb1</guid><pubDate>Tue, 03 Jun 2025 23:15:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xH3m0Cl3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:async%25E3%2581%25A8await%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%259D%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzFzVnc2Q3E5c3hNZWg4NDNBY2FyYnBOTDNJWUhhT3ZRQXFGTi1Qb21wRUpBeTB3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みそログ</dc:creator></item><item><title><![CDATA[「作ればわかる」と思って簡易Zustandを作っていたらSolid.jsが脳裏にチラついた]]></title><description><![CDATA[Web Componentsっていいですよね（唐突）。
Web標準ゆえ大体のブラウザで動作が保証されており、いろいろな事情でNode.jsやTypeScriptを使うことができない環境でも、ある程度新しいブラウザさえあれば基本的には使えますし。
Markdown中にコンポーネントを書いたり、静的配信したりするのも簡単ですし。
「このscriptタグだけ書いておいて！」って頼めばHTMLしか触れない/触りたくない人でも比較的抵抗感なく使ってもらえますし。
あれ、でもなんだか状態管理したくなってきたぞ……
というわけで、Reactとともによく使われている印象があるシンプルな状態管理ライブラリ...]]></description><link>https://zenn.dev/fj68/articles/834f540a8c69d2</link><guid isPermaLink="true">https://zenn.dev/fj68/articles/834f540a8c69d2</guid><pubDate>Tue, 03 Jun 2025 23:11:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7DbL8xEG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E4%25BD%259C%25E3%2582%258C%25E3%2581%25B0%25E3%2582%258F%25E3%2581%258B%25E3%2582%258B%25E3%2580%258D%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%25A6%25E7%25B0%25A1%25E6%2598%2593Zustand%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2582%2589Solid.js%25E3%2581%258C%25E8%2584%25B3%25E8%25A3%258F%25E3%2581%25AB%25E3%2583%2581%25E3%2583%25A9%25E3%2581%25A4%25E3%2581%2584%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fj68%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBNnFPNDRXNkpyejdUd0ZVM1ktMHM2YTJIdEFkNktJa1NvcU9oUHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fj68</dc:creator></item><item><title><![CDATA[wasm-bindgen: Javascriptから呼び出せるRust関数を作ろう]]></title><description><![CDATA[
 wasm-bindgen: Javascriptから呼び出せるRust関数を作ろう

 はじめに
Rustは高速な実行速度を持つプログラミング言語であり、WebAssembly（Wasm）を使うことで、ブラウザ上でもそのパフォーマンスを活かすことができる。具体的には、時系列データの統計処理などを高速に行うことが可能である。
wasm-bindgenは、Rustで書いた関数をJavaScriptから呼び出せるようにするためのツールである。今回は文字列を返す関数をRustで書き、それをReactアプリケーションから呼び出す方法を紹介する。
なお、RustとReactについての基本的な知識...]]></description><link>https://zenn.dev/emoba_tech/articles/f225f007dde195</link><guid isPermaLink="true">https://zenn.dev/emoba_tech/articles/f225f007dde195</guid><pubDate>Tue, 03 Jun 2025 08:56:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A_aJ6QU6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:wasm-bindgen%253A%2520Javascript%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%259B%25E3%2582%258BRust%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:k22036%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmNTk5ZjM4YjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Emoba%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzh4UXU2YWV5OElrWS1ma1ZPLUxYMkc5TFBKMU9CMEhfY25MMVNlNTNQSkpDZnpKd1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k22036</dc:creator></item><item><title><![CDATA[HTMLで数値入力を全角・半角意識せずにリアルタイムで入力できるようにしようとしたけど失敗だった件]]></title><description><![CDATA[
 2025-06-03追記
このサンプルだとコピペや数値の途中行に出来ないので、もうちょっとカスタマイズが必要そう。
カスタマイズを色々するくらいなら、素直に onBlur にするのが良さそうではある。

 発端
htmlの入力フォームで &lt;input type="number"&gt; タグを使っていたが、全角入力モードだと入力ができないというお問い合わせが来た。
全角でも入力できるように、&lt;input type="text"&gt; タグにして、onChangeイベント時に半角に変換するJavaScriptコードを入れたが、WindowsのChromeだと入力がおかしく...]]></description><link>https://zenn.dev/daijinload/articles/1aecab5f00f0e1</link><guid isPermaLink="true">https://zenn.dev/daijinload/articles/1aecab5f00f0e1</guid><pubDate>Tue, 03 Jun 2025 06:22:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LrgovQ_2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%25E3%2581%25A7%25E6%2595%25B0%25E5%2580%25A4%25E5%2585%25A5%25E5%258A%259B%25E3%2582%2592%25E5%2585%25A8%25E8%25A7%2592%25E3%2583%25BB%25E5%258D%258A%25E8%25A7%2592%25E6%2584%258F%25E8%25AD%2598%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E5%2585%25A5%25E5%258A%259B%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2581%2591%25E3%2581%25A9%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daijinload%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLVGMxQWhOTXo1cnhrSkFmYmdmRmF1SGwxRGFwX0o3NnpXQ1oxMHpTTGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daijinload</dc:creator></item></channel></rss>