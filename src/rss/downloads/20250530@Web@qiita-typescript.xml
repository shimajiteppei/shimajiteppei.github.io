<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-05-30T19:19:34+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2032969</id>
    <published>2025-05-30T19:19:34+09:00</published>
    <updated>2025-05-30T19:19:34+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tomato_otamoT/items/7f7735079a91c67f9961"/>
    <url>https://qiita.com/Tomato_otamoT/items/7f7735079a91c67f9961</url>
    <title>TanStack Queryでハマった落とし穴</title>
    <content type="html">1. queryKeyの設計が雑でキャッシュがバグる
問題：queryKey にオブジェクトや関数をそのまま使うとキャッシュが効かなくなる
例：
useQuery({
  queryKey: ['use…</content>
    <author>
      <name>Tomato_otamoT</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2032946</id>
    <published>2025-05-30T18:14:30+09:00</published>
    <updated>2025-05-30T18:14:30+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kikotkk/items/54df8715ca57dca7cfee"/>
    <url>https://qiita.com/kikotkk/items/54df8715ca57dca7cfee</url>
    <title>TypeScript の asとはなにかを掘り下げて考えてみた</title>
    <content type="html">as は何をするのか
TypeScript に対して、「この値はこの型ですよ」と明示的に伝えるために使います。これを 型アサーション（type assertion） と呼びます。
const val…</content>
    <author>
      <name>kikotkk</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2032945</id>
    <published>2025-05-30T18:09:51+09:00</published>
    <updated>2025-05-30T18:16:01+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/nkaito0119/items/d964c5424e753a92a93f"/>
    <url>https://qiita.com/nkaito0119/items/d964c5424e753a92a93f</url>
    <title>【Vue.js】コンポーザブルでトーストの表示処理を再利用</title>
    <content type="html">はじめに
REST APIのエラー時、ステータスコード及びエラーメッセージをユーザーにトーストで通知したい。
トーストをコンポーネント化し、呼び出し処理を各ページに実装していたが、冗長であることに気…</content>
    <author>
      <name>nkaito0119</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2032777</id>
    <published>2025-05-30T11:57:14+09:00</published>
    <updated>2025-05-30T11:57:14+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/iineineno03k/items/87c244c5423650d025be"/>
    <url>https://qiita.com/iineineno03k/items/87c244c5423650d025be</url>
    <title>TypeScriptの型宣言ファイル設計パターン：グローバル宣言とモジュール宣言の共存</title>
    <content type="html">はじめに
TypeScriptで大規模なWebアプリケーションを開発していると、さまざまな種類の型宣言が必要になります。特に次のような場面でよく悩みます：

Pugなどのテンプレートファイルのインポート…</content>
    <author>
      <name>iineineno03k</name>
    </author>
  </entry>
</feed>
