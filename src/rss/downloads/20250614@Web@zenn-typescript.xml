<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 14 Jun 2025 07:54:50 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[一日一処: TypeScriptでピラミッド建造プログラムをできるだけ長く書く]]></title><description><![CDATA[
 昔話
以前にピラミッドを建造するプログラムについての記事を投稿している。個人的には、ぎゅっと短くなったりシンプルなプログラムを好む。
https://zenn.dev/jinkutoriu/articles/ec81d4eced5dea

 モチベーション
前回はJavaScriptで可能な限り短縮を意識した記述を行った。今回はTypeScriptを使用して、できるだけ詳細で長いプログラムを書いてみる。
「プログラムを短くしよう」という考え方ももちろん大切だ。しかし、TypeScriptの機能をふんだんに用いて、具体的で正確で堅牢なものが作れるかもしれない。そして、なんといっても巨大...]]></description><link>https://zenn.dev/jinkutoriu/articles/7372822a4857c7</link><guid isPermaLink="true">https://zenn.dev/jinkutoriu/articles/7372822a4857c7</guid><pubDate>Sat, 14 Jun 2025 06:59:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AORh0zwY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2580%25E6%2597%25A5%25E4%25B8%2580%25E5%2587%25A6%253A%2520TypeScript%25E3%2581%25A7%25E3%2583%2594%25E3%2583%25A9%25E3%2583%259F%25E3%2583%2583%25E3%2583%2589%25E5%25BB%25BA%25E9%2580%25A0%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2582%2592%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%25A0%25E3%2581%2591%25E9%2595%25B7%25E3%2581%258F%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25B3%25A5%25E7%2594%259F%2520%25E7%2594%259A%25E5%258F%25A5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IyZTA4MTQ0MTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鳥生 甚句</dc:creator></item><item><title><![CDATA[ChatGPTのように文字がリアルタイムで流れるストリーミング通信の仕組みを、実際のTypeScriptソースコードを使って説明する]]></title><description><![CDATA[TypeScriptでサーバーとクライアント間の文字列ストリーミング通信を実現する簡単なサンプルを、fetch APIのReadableStreamを使って説明します。


 仕組みの概要
サーバー側: 特定のエンドポイントにリクエストが来ると、HTTPレスポンスをすぐには完了させません。代わりに、res.write()を使って文字列の断片（チャンク）を少しずつ送信します。全てのデータを送り終えたら、res.end()でストリームを閉じます。
2.  クライアント側: fetch APIでサーバーにリクエストを送り、レスポンスのbody（ReadableStream）を取得します。このス...]]></description><link>https://zenn.dev/japan/articles/bb236b66cb9e91</link><guid isPermaLink="true">https://zenn.dev/japan/articles/bb236b66cb9e91</guid><pubDate>Sat, 14 Jun 2025 06:26:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y8fp29PE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E6%2596%2587%25E5%25AD%2597%25E3%2581%258C%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25A7%25E6%25B5%2581%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E3%2580%2581%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AETypeScript%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOFTBASE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0ODM2OTE0YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOFTBASE</dc:creator></item><item><title><![CDATA[TickTick MCP Serverを作りました]]></title><description><![CDATA[
 サマリー

TickTick Open APIを利用して、MCP Serverを作成しました。これにより、LLM からタスクの情報取得、編集、削除が可能になります。
MCP Serverの作成にはClaude Codeを利用しました。
MCP Serverからは"習慣トラッカー"に関する操作ができません。TickTick Open APIのスコープに、習慣に関する仕様がないため。今後、TickTick Open API が対応することを期待します。


 はじめに

 MCPとは
MCP（Model Context Protocol）は、Anthropic社が2024年11月に発表し...]]></description><link>https://zenn.dev/tsutsuhiro/articles/c00dffde71cb6c</link><guid isPermaLink="true">https://zenn.dev/tsutsuhiro/articles/c00dffde71cb6c</guid><pubDate>Sat, 14 Jun 2025 05:44:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---NtrnOdQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TickTick%2520MCP%2520Server%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:htsutsumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiY2MxMDRiZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>htsutsumi</dc:creator></item><item><title><![CDATA[TypeScript での Object.assign と スプレッド構文の正しい使い分け]]></title><description><![CDATA[
 TypeScriptにおけるObject.assignとスプレッド構文の使い分け：型の落とし穴に注意！

 はじめに
TypeScriptでオブジェクトをマージするとき、Object.assign とスプレッド構文（...）のどちらを使うか、迷ったことはありませんか？
どちらも見た目は似ていますが、型の扱いに大きな違いがあることをご存知でしょうか？
この記事では、「スプレッド構文では型推論が変化することで、意図しない上書きが静かに行われる」問題を紹介しつつ、安全に使い分ける方法を解説します。


 1. よくあるスプレッド構文の使い方
例えば、設定オブジェクトにデフォルト値をマージす...]]></description><link>https://zenn.dev/qluqlu/articles/0cbb87179d1503</link><guid isPermaLink="true">https://zenn.dev/qluqlu/articles/0cbb87179d1503</guid><pubDate>Sat, 14 Jun 2025 04:13:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dr7ryvBP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%25E3%2581%25AE%2520Object.assign%2520%25E3%2581%25A8%2520%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E6%25A7%258B%25E6%2596%2587%25E3%2581%25AE%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%2584%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AB%25E3%2582%25AF%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjg1NWNiMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クルクル</dc:creator></item><item><title><![CDATA[Railway で Node.js Monorepo Docker デプロイ時に "Cannot find module" エラーが発生する]]></title><description><![CDATA[
 発生したエラー
Railway にデプロイした Node.js アプリケーションで、以下のエラーが発生しました。
node:internal/modules/cjs/loader:1252
  throw err;
  ^
 
Error: Cannot find module '/app/backend/dist/index.js'
    at Function._resolveFilename (node:internal/modules/cjs/loader:1249:15)
    at Function._load (node:internal/modules/cjs/l...]]></description><link>https://zenn.dev/ho_ri/articles/91b70e9d6b61ba</link><guid isPermaLink="true">https://zenn.dev/ho_ri/articles/91b70e9d6b61ba</guid><pubDate>Sat, 14 Jun 2025 03:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h4w52GyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Railway%2520%25E3%2581%25A7%2520Node.js%2520Monorepo%2520Docker%2520%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E6%2599%2582%25E3%2581%25AB%2520%2522Cannot%2520find%2520mod...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hol1kgmg%2520%2528%25E3%2581%25BB%25E3%2582%258A%25E3%2581%258B%25E3%2582%258F%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NmM0YjRmYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hol1kgmg (ほりかわ)</dc:creator></item><item><title><![CDATA[Next.js + Express.js + MySQL + Docker で簡単な Web アプリを作ろう！]]></title><description><![CDATA[
 この記事の対象読者
このチュートリアルは、以下のような人に向けたものです。

Webアプリを作ってみたい初学者
Node.jsを使ってみたい人
Next.jsを使ってみたい人
Dockerあんまりわかんない人


 この記事のゴール
Next.js（フロントエンド）＋ Express.js（バックエンド）＋ MySQL（データベース）＋ Docker（開発環境） を使って、超シンプルな Web アプリを作ります！

 前提条件

ホストOS: MacOS
Dockerインストール済み
エディタ:Cursor
プログラミングの基礎はわかる
データベースも少しわかる

Dockerについ...]]></description><link>https://zenn.dev/yyuta750/articles/8b6f5c1f565891</link><guid isPermaLink="true">https://zenn.dev/yyuta750/articles/8b6f5c1f565891</guid><pubDate>Fri, 13 Jun 2025 23:51:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9McQiAtN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%252B%2520Express.js%2520%252B%2520MySQL%2520%252B%2520Docker%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%2520Web%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDNhVVJLLWhHWnI5RnQtSE50T3NuXzJuU2lnMDgxdU1nNDlqLThtRWNWUWd4MlVBdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyuta</dc:creator></item><item><title><![CDATA[自社製品のリプレイスの技術選定を勝手に妄想する]]></title><description><![CDATA[
 今回の背景
私の今いる企業は自社開発の製品を持っているのですが、「あまりイケてない」企業です。
テストやドキュメントなど存在を知っているのかと疑うレベルですし、使っている技術も少し古いです。
リプレイスを提案してみても受け入れられるかわからないので、今回勝手にリプレイスするならこんな技術を使うという仮定のもと技術選定をしてみました。


 1. 現状の課題認識

使用技術：EJS + jQuery
強み：SSRによる高速な初期表示
課題：

jQueryによるDOM操作の煩雑化・スパゲッティコード化
UIや状態の再利用・分離が困難
テストしづらく、保守性が低い





 2. モダ...]]></description><link>https://zenn.dev/yyuta750/articles/474e76d3a7ee88</link><guid isPermaLink="true">https://zenn.dev/yyuta750/articles/474e76d3a7ee88</guid><pubDate>Fri, 13 Jun 2025 23:50:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ms13X14u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E7%25A4%25BE%25E8%25A3%25BD%25E5%2593%2581%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E9%2581%25B8%25E5%25AE%259A%25E3%2582%2592%25E5%258B%259D%25E6%2589%258B%25E3%2581%25AB%25E5%25A6%2584%25E6%2583%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yyuta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDNhVVJLLWhHWnI5RnQtSE50T3NuXzJuU2lnMDgxdU1nNDlqLThtRWNWUWd4MlVBdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yyuta</dc:creator></item><item><title><![CDATA[パターンマッチをつかいこなして効率的に型レベル減算しよう！！]]></title><description><![CDATA[
 はじめに
皆さんこんにちは。
最近はもっぱら型を捏ねてばかりで実益のあるコードをかけておらずまずいなぁと思っています。
27 卒学生エンジニアの yossuli と申します。
以前参加した LT にて型レベル四則演算を行うというものがありました。
今回はその中で登場した減算について、「型黒魔術完全に理解した」になる過程でより簡潔に書けるのではないかと思い、その周辺の技術について記事にしました。

 本題
型を捏ねていると以下のようなコードを書く場面がよくあるかなと思います
type Hoge&lt;T&gt; = T extends [any, ...infer U] ?　...
先...]]></description><link>https://zenn.dev/yossuli/articles/9939a0b03d3ca9</link><guid isPermaLink="true">https://zenn.dev/yossuli/articles/9939a0b03d3ca9</guid><pubDate>Fri, 13 Jun 2025 19:09:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DFMuStX0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A6%25E5%258A%25B9%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E5%259E%258B%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E6%25B8%259B%25E7%25AE%2597%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yossuli%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNkYmRjMjQzYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yossuli</dc:creator></item><item><title><![CDATA[Vercel AI SDK用のClaude Code providerを作ってみた]]></title><description><![CDATA[こんにちは、cojiです。
Vercel AI SDKのcommunity providerとして、Claude Code用のproviderを作ってみました。
https://github.com/coji/claude-code-ai-provider
せっかくClaude MAXに入っているので、高性能なモデルをフルに活用して自分用のLLMアプリを作りたくて。
最近普段使いにしてる Claude Code、「これをVercel AI SDKで使えたら便利そう」と思ったのがきっかけです。

 先に結論
Claude Code AI providerを作ることで、いつものVercel ...]]></description><link>https://zenn.dev/coji/articles/claude-code-ai-provider-unlimited-local-llm</link><guid isPermaLink="true">https://zenn.dev/coji/articles/claude-code-ai-provider-unlimited-local-llm</guid><pubDate>Fri, 13 Jun 2025 15:33:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oZPtysGj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%2520AI%2520SDK%25E7%2594%25A8%25E3%2581%25AEClaude%2520Code%2520provider%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[Astro新時代! 再ビルド不要のLive Content Collections]]></title><description><![CDATA[
 はじめに
!
Live Content Collectionsとは？
従来のビルド時にデータを取得する方式とは異なり、ユーザーがページにアクセスしたとき(ランタイム)に、APIやデータベースから直接データを取得するための新しい仕組み。


 Live Content Collectionsとは？
これまでAstroのコンテンツCollectionsは、Markdownやjsonをもとにビルド時に静的なHTMLを生成するのが基本で、これはAstroの代名詞でもあるパフォーマンスに優れる一方、頻繁に更新されるデータを扱うには、都度々々サイトを再ビルドする必要があった。
しかし、Live ...]]></description><link>https://zenn.dev/katsuyuki/articles/69081373cf9f0b</link><guid isPermaLink="true">https://zenn.dev/katsuyuki/articles/69081373cf9f0b</guid><pubDate>Fri, 13 Jun 2025 14:46:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Duz8KLAK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E6%2596%25B0%25E6%2599%2582%25E4%25BB%25A3%2521%2520%25E5%2586%258D%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E4%25B8%258D%25E8%25A6%2581%25E3%2581%25AELive%2520Content%2520Collections%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:LaPh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiYzcxMjA0NGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>LaPh</dc:creator></item><item><title><![CDATA[【TypeScript】[1, 'a', 2] はどうして (string | number)[] になるの？]]></title><description><![CDATA[最近社内で Effective TypeScript 第2版 を輪読しているのですが、型推論の話や型の拡大(widening)についての説明を読んでいて、「普段当たり前に使っている型推論ってどう動いているんだっけ？」とふと思い立ちました。
TypeScriptコンパイラのネイティブ実装のニュースも記憶に新しいですが、気になったことは調べてみよう🕵️‍♀️ という気持ちで、TypeScriptの心臓部である checker.ts の世界へ旅立つことにしました。
今回のゴールは、以下のコードがどのように (string | number)[] と解釈されるかを調べることです。
const v...]]></description><link>https://zenn.dev/spacemarket/articles/f23b4a5a238e51</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/f23b4a5a238e51</guid><pubDate>Fri, 13 Jun 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zrnjU4S6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%255B1%252C%2520%2527a%2527%252C%25202%255D%2520%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%2520%2528string%2520%257C%2520number%2529%255B%255D%2520%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:8zca%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1MGEwODcxNDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>8zca</dc:creator></item><item><title><![CDATA[「鉄ナビ検収AI」のアーキテクチャを紹介します！]]></title><description><![CDATA[!
EVERSTEELとして初めての技術記事となります。
開発現場の雰囲気とともに、今後も様々な技術的知見を積極的に共有していきますので、どうぞよろしくお願いします！


 はじめに
こんにちは、株式会社EVERSTEELでエンジニアをしている片桐です。
弊社では鉄スクラップの画像解析を行う「鉄ナビ検収AI」というプロダクトを開発しており、鉄リサイクルの効率化・品質向上に取り組んでいます。東大発のスタートアップとして、より良いソリューションを追求しながらプロダクト開発を進めています。
この記事では、「鉄ナビ検収AI」のバックエンドアーキテクチャについて、いくつかピックアップして紹介します...]]></description><link>https://zenn.dev/eversteel_tech/articles/20250526-es_tnavi_kensyu-arch_intro</link><guid isPermaLink="true">https://zenn.dev/eversteel_tech/articles/20250526-es_tnavi_kensyu-arch_intro</guid><pubDate>Fri, 13 Jun 2025 08:32:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JeGkI4gF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E9%2589%2584%25E3%2583%258A%25E3%2583%2593%25E6%25A4%259C%25E5%258F%258EAI%25E3%2580%258D%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:knagi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZjM2ZWM4NDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EVERSTEEL%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FuckVUWG5PNW1QZ1QtMHZDX2IxQWJETDB0djBaRE05S3hCOXpwQXc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knagi</dc:creator></item><item><title><![CDATA[Next.js App Routerでのi18n対応全部調べてみた]]></title><description><![CDATA[こんにちは、エンジニアの籏野です。
この度、Next.jsのApp Routerを利用したアプリケーションへのi18nの導入方法を調査することになりました。
Pages Routerを利用した場合の導入方法はイメージがつくのですがApp Routerを利用した場合は初めてとなりますので、その方法を調査・比較しました。
なお今回の調査は主に、Localizationの方法に焦点を当てています。
言語毎の出し分けのためのルーティング方法についてはそこまで解説しないのでご了承ください。
Next.jsの公式ドキュメントのinternationalizationページでは、いくつかLocaliz...]]></description><link>https://zenn.dev/forcia_tech/articles/2025_hatano_app_router_i18n</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/2025_hatano_app_router_i18n</guid><pubDate>Fri, 13 Jun 2025 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mqitPGmv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520Router%25E3%2581%25A7%25E3%2581%25AEi18n%25E5%25AF%25BE%25E5%25BF%259C%25E5%2585%25A8%25E9%2583%25A8%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[日付や時間の計算に役立つユーティリティ関数をまとめてみた]]></title><description><![CDATA[日報やCSV出力、Excel貼り付けなど、日付や時間を扱う際に役立つユーティリティ関数をTypeScriptで整理してみました。
数字に弱いので、必要な時に参考しようと思います😀
主な言語
TypeScript


 🕒 1. parseTimeToDecimal(timeStr: string): number

"2:30" → 2.5 に変換する関数です。
作業時間の合計や平均を出す時にとても便利です。

例：分 ÷ 60 = 小数点（例：30 ÷ 60 = 0.5 → 2 + 0.5 = 2.5）

export function parseTimeToDecimal(timeS...]]></description><link>https://zenn.dev/hyoni/articles/d2931c3174dde4</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/d2931c3174dde4</guid><pubDate>Fri, 13 Jun 2025 01:53:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pd536S2x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2584%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%25AB%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A4%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[[Frontend Replace] アーキテクチャ設計篇]]></title><description><![CDATA[こんにちは。FE チームの Maple です。
前回の記事「[FrontEnd Replace] エコシステム設計篇」では、私たちが選択した技術スタックについてお伝えしました。Next.js、bun、CSS Modules、Storybook など、数々の選択肢から厳選したツール群により、開発効率の飛躍的な向上を実現できました。
しかし、優れた技術スタックを選んだだけでは、真の開発生産性は手に入りません。それらをどう組み合わせ、どう構造化するか——つまり「アーキテクチャ設計」こそが、長期的な開発効率と保守性を決定する最重要要素なのです。
今回は、私たちが何度もの議論と試行錯誤を経て辿り着...]]></description><link>https://zenn.dev/team_soda/articles/26fca8234d9bc5</link><guid isPermaLink="true">https://zenn.dev/team_soda/articles/26fca8234d9bc5</guid><pubDate>Fri, 13 Jun 2025 00:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nSiFI4SV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BFrontend%2520Replace%255D%2520%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E8%25A8%25AD%25E8%25A8%2588%25E7%25AF%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Maple%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmYTM5ODQ3MWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SODA%2520Engineering%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyM2Y1N2EwYTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maple</dc:creator></item><item><title><![CDATA[Node.js学習記録[1] クライアントコード配信の実装]]></title><description><![CDATA[
 前提
個人用アプリ開発のため、node.js/ReactでWebアプリを開発しようとしている。コンポーネントのレンダリングやハイドレーションがどうやって実現されているのかわかっていないので、実装しながら学びたい。

 問題
onClick={//}と書いたコードをserver.tsで実行してもイベントハンドラが動かない。

 原因特定
server.tsでのレンダリングとは別に、client側で実行するスクリプトでイベントハンドラを登録する必要がある。

 対応
server.tsに、clientスクリプトへのリクエストを処理するコードを追加する必要がある。
http
  .crea...]]></description><link>https://zenn.dev/cynningr/articles/8a66c3e078f88e</link><guid isPermaLink="true">https://zenn.dev/cynningr/articles/8a66c3e078f88e</guid><pubDate>Thu, 12 Jun 2025 14:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---W0Bjwux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E5%25AD%25A6%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%255B1%255D%2520%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E9%2585%258D%25E4%25BF%25A1%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yn_poly%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkNzMxNDRmMGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yn_poly</dc:creator></item><item><title><![CDATA[nuqs の Debounce 機能による URL パラメータ最適化]]></title><description><![CDATA[
 はじめに 🚀
検索フォームやフィルター機能を実装する際、ユーザーの入力を URL パラメータに反映させることは、状態の永続化や共有可能な URL の生成において重要です。しかし、キー入力のたびに URL を更新すると、パフォーマンス問題を引き起こす可能性があります。また、history: 'push' オプションを使用している場合は履歴の肥大化も発生します。
nuqs v2.5.0 で導入された Debounce 機能は、この問題に対する解決策を提供します。本機能は PR #900 で実装され、limitUrlUpdates オプションとして提供されています。これにより、開発者は U...]]></description><link>https://zenn.dev/tsuboi/articles/ae1d907c72d6e3</link><guid isPermaLink="true">https://zenn.dev/tsuboi/articles/ae1d907c72d6e3</guid><pubDate>Thu, 12 Jun 2025 12:07:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lsAC2W5S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nuqs%2520%25E3%2581%25AE%2520Debounce%2520%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520URL%2520%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsuboi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMmU3Zjg2MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsuboi</dc:creator></item><item><title><![CDATA[Next.js x TypeScript初心者向け利用ガイド(フロントエンド編)-Page 3/3]]></title><description><![CDATA[Next.js x TypeScript 利用ガイド (フロントエンド 編) - Page 2 / 3 の続きの記事になります。
https://zenn.dev/mofuweb/articles/nextjs-typescript-guide-1-2
このページでフロントエンド編は最後になりますが、 Page 2 の 「8. パーツごとのサンプル画面の作成」 で作成したものを組み合わせたサンプルアプリの紹介になります。
後項で StackBlitz 上に構築した Web ブラウザ上で確認できるサンプルアプリのリンクも掲載しています。
不明点等があれば前のページからお読みください。
6/...]]></description><link>https://zenn.dev/mofuweb/articles/nextjs-typescript-guide-1-3</link><guid isPermaLink="true">https://zenn.dev/mofuweb/articles/nextjs-typescript-guide-1-3</guid><pubDate>Thu, 12 Jun 2025 11:07:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1wR5Sssk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520x%2520TypeScript%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E5%2588%25A9%25E7%2594%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2528%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25B7%25A8%2529-Page%25203%252F3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mofuweb%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhNjVhYjFhNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mofuweb</dc:creator></item><item><title><![CDATA[TSKaigi 2025 参加レポート]]></title><description><![CDATA[
 はじめに
2025/5/23(金)～2025/5/24(土)の二日間で、東京の神田で開催されたTSKaigi 2025の参加レポートになります。
イベントの様子や印象に残っているセッションについて紹介します。
各セッションのスライドが公開されていたりするので、ぜひチェックしてみてください。
https://2025.tskaigi.org/

 会場の様子


会場では多くのエンジニアが集まっており、非常に盛り上がっていました。
様々なスポンサーのブースが設けられており、スポンサー企業でのTSをどのように使っているかについて紹介していたり、ノベルティをいただけたりしました。

 参加...]]></description><link>https://zenn.dev/popodada/articles/5bd1c2d393dcc9</link><guid isPermaLink="true">https://zenn.dev/popodada/articles/5bd1c2d393dcc9</guid><pubDate>Thu, 12 Jun 2025 07:28:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VxZRmj8g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TSKaigi%25202025%2520%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BD%25E3%2581%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkI4eU5jeGMwRkJvQnhfcDAwN2hETGp5SUNIbUJNQm1Wd1BfTU1kOFNhN1Q2TTgtVFo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぽぽ</dc:creator></item><item><title><![CDATA[TaskMaster AI を使った開発アプローチ検証メモ]]></title><description><![CDATA[
 はじめに
Cursor Composer と TaskMaster AI を利用して、大学向け単位計算システムの一部を試作・検証した記録です。
本格開発ではなく、AI を活用したタスク分解・進捗管理の可能性検証 が目的です。

 検証の背景

Cursor Composer は実装フェーズで既に便利
課題：「実装前の計画フェーズ」をどう AI 活用するか

TaskMaster AI が PRD からタスク分解できる点に着目し検証


 技術スタック（検証時点）



項目
技術




フロント
Next.js 14 App Router, TypeScript


UI
Tail...]]></description><link>https://zenn.dev/torutakakura/articles/5ff095b453910e</link><guid isPermaLink="true">https://zenn.dev/torutakakura/articles/5ff095b453910e</guid><pubDate>Thu, 12 Jun 2025 06:16:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XT3qdj-d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TaskMaster%2520AI%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E6%25A4%259C%25E8%25A8%25BC%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E5%2580%2589%25E3%2580%2580%25E5%25BE%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHhfNEM2RDBfQ2ZKcGxEMHhPSENlNWJGZnFTMVQ1ZVNwVDJJSGlDS2d1Q3hhNTVBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高倉　徹</dc:creator></item></channel></rss>