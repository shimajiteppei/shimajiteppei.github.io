<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Linux」のフィード]]></title><description><![CDATA[Zennのトピック「Linux」のRSSフィードです]]></description><link>https://zenn.dev/topics/linux</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/860a9eb1e4.png</url><title>Zennの「Linux」のフィード</title><link>https://zenn.dev/topics/linux</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 14 Jan 2025 06:41:23 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/linux/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AIエディター Cursor を Ubuntu 24.04にインストール]]></title><description><![CDATA[参考サイトです
https://dev.to/mhbaando/how-to-install-cursor-the-ai-editor-on-linux-41dm

 1. Cursorをダウンロード
https://www.cursor.com/

 2. libfuse2をインストール
sudo apt-get install libfuse2
他のディストリビューションだとこの行程は必要ないとか(確認していません)。
Ubuntuでは「Fuse」が非推奨なため「libfuse2」をインストールします。

 3. 権限を変更
バージョンは自分がダウンロードしたものに替えてください。
...]]></description><link>https://zenn.dev/mizki/articles/36535a1b75ab81</link><guid isPermaLink="true">https://zenn.dev/mizki/articles/36535a1b75ab81</guid><pubDate>Mon, 13 Jan 2025 14:35:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wZxQskPi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2583%25BC%2520Cursor%2520%25E3%2582%2592%2520Ubuntu%252024.04%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:WaterWood%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MF90R0d6NnBqR3I2bEdrMS1pZTUtOGRnTmZLU2Zra0dOXzcxYWxzZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>WaterWood</dc:creator></item><item><title><![CDATA[変なオタクPCたち]]></title><description><![CDATA[
 概要
私はガジェットオタクではないのですが、逆張りオタクなので他人と違うものを使うのは結構好きです。
本記事では、MacBookなんて使ってられんというかわいそうな人たちが興味を持つかもしれない製品たちを紹介します。
ちなみに、全部買って検証したわけではないので安全性は保証しません。

 紹介

 Framework
まずは有名どこから。パーツが送られてきてそれを自分で組み立てるプラモみたいなPCです。
各種ポートとかもバラで売ってるので、自分で好きに付けたり外したりできます。
https://frame.work/

 StarLabs systems
これも割と有名どこ。Linu...]]></description><link>https://zenn.dev/sum3sh1/articles/df47c74423f227</link><guid isPermaLink="true">https://zenn.dev/sum3sh1/articles/df47c74423f227</guid><pubDate>Mon, 13 Jan 2025 13:47:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eTB5bjt9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%2589%25E3%2581%25AA%25E3%2582%25AA%25E3%2582%25BF%25E3%2582%25AFPC%25E3%2581%259F%25E3%2581%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumeshi_kun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwM2EzNzkyNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumeshi_kun</dc:creator></item><item><title><![CDATA[CentOS Stream 10 で KDE Plasma 6 を利用する]]></title><description><![CDATA[
 1. インストールメディアの入手
CentOS Stream 10 x64 向けはこの辺からダウンロード
823M くらいのでよい。
https://mirror.stream.centos.org/10-stream/BaseOS/x86_64/iso/


 2. Minimal Install
CentOS Stream 10 をインストール
インストール時の画面遷移は省く
Minimal Install を選択


 3. EPEL の導入
インストール完了後、CLIでログインする。
元情報 Getting Started with EPEL
https://docs.fed...]]></description><link>https://zenn.dev/yodoy/articles/f3d83b142aba35</link><guid isPermaLink="true">https://zenn.dev/yodoy/articles/f3d83b142aba35</guid><pubDate>Sun, 12 Jan 2025 15:46:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YHcSL64R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CentOS%2520Stream%252010%2520%25E3%2581%25A7%2520KDE%2520Plasma%25206%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ZmU5YzVmZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よど</dc:creator></item><item><title><![CDATA[Snapの作り方]]></title><description><![CDATA[
 初めに

本記事では、Snapパッケージの作り方について紹介します。
"Hello World!"と出力するhello.shをSnapでパッケージングして実行します。


 実行環境

本記事ではWSLを使用します。
　- Ubuntu20.04


 事前準備

Snapcraftをインストールします。

$ sudo apt install snapcraft

 snapcraft.yamlの作成

Snapcraftのインストールが完了したら、作業用のディレクトリを作成して、snapcraft.yamlを生成します。

$ mkdir workspace
$ cd works...]]></description><link>https://zenn.dev/matsuo_1938/articles/a23f9ca728d625</link><guid isPermaLink="true">https://zenn.dev/matsuo_1938/articles/a23f9ca728d625</guid><pubDate>Sun, 12 Jan 2025 02:01:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0YA4H9zO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Snap%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4YWZlN2NhNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Matsuo</dc:creator></item><item><title><![CDATA[AppImageを自前で作る方法]]></title><description><![CDATA[
 はじめに
本記事ではAppImageを自前で作る方法について初歩的な箇所を記載します。
AppImageとは、Linuxで単一のファイルに自己完結的にアプリをバンドルできる仕様です。
デスクトップアプリがメインのイメージですが、CLIツールでもなんでもバンドルできます。事例としては、ImageMagickがAppImage版を配布しており、Linuxで使う場合は便利です。
ElectronやTauriのようなデスクトップフレームワークではAppImageへのバンドル環境が備わっていますが、本記事の内容を理解すると自前でも「自作ツールや、他の人の作ったツールなどをバンドルしてLinux...]]></description><link>https://zenn.dev/shimarisu_121/articles/76c1a0d73770ec</link><guid isPermaLink="true">https://zenn.dev/shimarisu_121/articles/76c1a0d73770ec</guid><pubDate>Sat, 11 Jan 2025 20:21:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0jBZwWXV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AppImage%25E3%2582%2592%25E8%2587%25AA%25E5%2589%258D%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shimarisu_121%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUyYTA5YjFmMWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shimarisu_121</dc:creator></item><item><title><![CDATA[Docker環境で動かしているMisskeyデータベースのバックアップ自動化(rclone→GoogleDrive)]]></title><description><![CDATA[前書いた記事の方法でやると、Input/outputエラーが出るようになりGitHubで公開しているスクリプトも変えたので書き直しです。
この記事でやること
・Misskeyデータベースのバックアップ→GoogleDriveに投げるのを自動化
・バックアップ通知をDiscordに飛ばす
Discordウェブフックの作成方法はこの記事では説明しませんが簡単なので大丈夫！

 rclone導入
sudo apt update
sudo apt install rclone

 rclone設定
ザッと適当に説明していますが対話式なのであまり難しくない
rclone config
# nを選択...]]></description><link>https://zenn.dev/harumaki2000/articles/2fd3b2d804ddbd</link><guid isPermaLink="true">https://zenn.dev/harumaki2000/articles/2fd3b2d804ddbd</guid><pubDate>Sat, 11 Jan 2025 10:03:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_VzbUXjj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BMisskey%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2528rclone%25E2%2586%2592GoogleDrive%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:harumaki2000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW5iWFNoMlRaUXQ1d29DN19KZzV1U0xKT0xTS1lDYXo1aVA0Z0l1MU1pREVKakNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>harumaki2000</dc:creator></item><item><title><![CDATA[Snapとsnapcraftについて]]></title><description><![CDATA[
 初めに

本記事では、Linuxのパッケージ管理ツールであるSnapと、Snapを作成するためのsnapcraftについて紹介します。


 Snapとは

SnapはLinux用のソフトウェアパッケージの管理とアプリケーションのデプロイを行うツールです。
UbuntuやRedHat等の多くのLinuxディストリビューションで利用することが出来ます。


 Snapの特徴

 1.サンドボックス化

Snapのパッケージは完全にサンドボックス化されており、
他のアプリケーションやシステムとは完全に隔離されて動作するため、既存のシステムに影響を与えることはありません。


 2.自己完...]]></description><link>https://zenn.dev/matsuo_1938/articles/d69ccc51e9dd85</link><guid isPermaLink="true">https://zenn.dev/matsuo_1938/articles/d69ccc51e9dd85</guid><pubDate>Sat, 11 Jan 2025 04:08:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XamSeBMZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Snap%25E3%2581%25A8snapcraft%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Matsuo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4YWZlN2NhNzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Matsuo</dc:creator></item><item><title><![CDATA[Linuxのパスワード有効期限を設定・無効化する方法【初心者向け解説】]]></title><description><![CDATA[
 Linuxのパスワード有効期限を設定・無効化する方法【初心者向け解説】


 1. はじめに

Linuxでは、セキュリティ対策の一環として、ユーザーアカウントのパスワードに有効期限を設定することが一般的です。パスワード有効期限を設定することで、ユーザーが定期的にパスワードを変更するよう促せます。
一方、管理アカウントなど、特定のユーザーに対して有効期限の制限をかけたくないケースも存在します。

 2. パスワード有効期限の基礎

パスワード有効期限やアカウント管理の情報は、/etc/shadow というファイルで管理されています。通常、管理者権限（sudoなど）を持っているユーザー...]]></description><link>https://zenn.dev/uepon/articles/adfa8e52bc95ad</link><guid isPermaLink="true">https://zenn.dev/uepon/articles/adfa8e52bc95ad</guid><pubDate>Fri, 10 Jan 2025 08:33:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0mLcjGNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%25E3%2581%25AE%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E6%259C%2589%25E5%258A%25B9%25E6%259C%259F%25E9%2599%2590%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%25BB%25E7%2584%25A1%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIVW4zSmVfbW43ZlowbXlNVXRtOXpyLWZ1S0J3YjVTVUhnMXJWSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ue</dc:creator></item><item><title><![CDATA[【Terraform】Ubuntuにインストールしよう]]></title><description><![CDATA[IaC(Infrastructure as Code)のツールとして人気のあるTerraform
今回は、そんなTerraform を Ubuntu にインストールしてみたいと思います

 インストール方法
公式 HPより以下３つのコマンドを実行します
$ wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
$ echo "deb [signed-by=/usr/share/keyrings/...]]></description><link>https://zenn.dev/kuuki/articles/terraform-ubuntu-install</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/terraform-ubuntu-install</guid><pubDate>Fri, 10 Jan 2025 05:35:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--esHj59Br--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Terraform%25E3%2580%2591Ubuntu%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[【Ubuntu】LTS版のNode.jsをインストールしてみる]]></title><description><![CDATA[Ubuntu で node コマンドが使えなくなりました。。。
そもそも前から使えていたか微妙ですが、node コマンドが使えるようにしていきます！

 エラー
node コマンドを実行すると、このようなエラーが出ました。
~$ node -v
-bash: /usr/bin/node: cannot execute binary file: Exec format error

 原因調査
エラー文で調べてみると、
node の実行ファイルが OS(Ubuntu)に対応していないこと
が原因のようです。

 バージョンを確認してみる
// sudo apt install nodejs...]]></description><link>https://zenn.dev/kuuki/articles/ubuntu-install-lts-nodejs</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/ubuntu-install-lts-nodejs</guid><pubDate>Fri, 10 Jan 2025 05:12:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zhmRvRBv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ubuntu%25E3%2580%2591LTS%25E7%2589%2588%25E3%2581%25AENode.js%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[【Ubuntu】Dockerをインストールする]]></title><description><![CDATA[UbuntuでDockerが使いたいのでインストールしてみます。
調べてみると、Docker の公式ドキュメント内に手順があったので、それ通りにやってみます
https://docs.docker.com/engine/install/ubuntu/
こちらのapt リポジトリを使用してインストールする方法をやっていきます

 バージョン




バージョン




Ubuntu
22.04




 apt リポジトリのセットアップ

 インストールに必要なパッケージを準備
// パッケージの更新
$ sudo apt-get update
...
Fetched 6186 kB in...]]></description><link>https://zenn.dev/kuuki/articles/ubuntu-install-docker</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/ubuntu-install-docker</guid><pubDate>Fri, 10 Jan 2025 05:12:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3IWYqoXk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ubuntu%25E3%2580%2591Docker%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[【Ubuntsu】gitを使えるようにしよう]]></title><description><![CDATA[Linux のディストリビューションの１つであるUbuntsu
今回は、Ubuntsu で git を使えるようにする方法をご紹介します

 Ubuntsu に git をインストールするコマンド
まずは、パッケージの更新をするために２つのコマンドを実行してください
apt update
apt upgrade
※root ユーザではない場合（左側がroot@×××××$ ではない場合)、
sudo apt update
sudo apt upgrade
のようにコマンドの先頭に sudoとつけてください（下で実行するコマンドにもお願いします）
次に、git のインストールをします
ap...]]></description><link>https://zenn.dev/kuuki/articles/ubuntsu-git-install</link><guid isPermaLink="true">https://zenn.dev/kuuki/articles/ubuntsu-git-install</guid><pubDate>Fri, 10 Jan 2025 05:12:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QyIZ3FlF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ubuntsu%25E3%2580%2591git%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hisui%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNzI1MTUwNTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hisui</dc:creator></item><item><title><![CDATA[CUDA をインストールせずに NVIDIA ドライバーをインストールする方法]]></title><description><![CDATA[この記事では、CUDA をインストールせずに NVIDIA ドライバーをインストールする方法を解説します。

 モチベーション
AIモデルの開発環境では、プロジェクトやプログラムによって必要とされる CUDA のバージョンが異なることがよくあります。例えば、あるプロジェクトでは CUDA 11.8が必要である一方、別のプロジェクトでは CUDA 12.2が求められることがあります。このような状況で、ローカル環境に複数の CUDA バージョンを直接インストールして管理するのは、バージョン間の競合の要因となります。
さらに、チームで開発環境を共有する場合、ローカル環境に依存する構成では再現性...]]></description><link>https://zenn.dev/hagifly/articles/16ae709805a48c</link><guid isPermaLink="true">https://zenn.dev/hagifly/articles/16ae709805a48c</guid><pubDate>Wed, 08 Jan 2025 15:36:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2JKi_VnE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CUDA%2520%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%2520NVIDIA%2520%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Asher%2520Ishikawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjFlNzZlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Asher Ishikawa</dc:creator></item><item><title><![CDATA[個人的よさげLinuxコマンドAlternatives]]></title><description><![CDATA[
 概要
Linuxって素敵ですよね。大概の場合、デフォで入ってるコマンドだけでもいい感じになんやかんやすることができます。
今回は、いい感じになんやかんやできないときにあると終電までに帰れるコマンドをいくつか紹介します。

 代替コマンドたち

 ls - eza
きれいきれいに表示してくれるいい感じlsコマンドです。
https://github.com/eza-community/eza
もとはexaという代替コマンドが有名だったのですが、現在はメンテされていないため、フォーク版のezaが使われています。

 cat - bat
これもきれいきれいに表示してくれるいい感じcatコマ...]]></description><link>https://zenn.dev/sum3sh1/articles/5d9f66ddfd648e</link><guid isPermaLink="true">https://zenn.dev/sum3sh1/articles/5d9f66ddfd648e</guid><pubDate>Wed, 08 Jan 2025 13:07:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tx3Zd0Dc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2582%2588%25E3%2581%2595%25E3%2581%2592Linux%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589Alternatives%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumeshi_kun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYwM2EzNzkyNzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumeshi_kun</dc:creator></item><item><title><![CDATA[WSL2からgit pull したときに「OpenSSL version mismatch.」が表示された時の対処法（？）]]></title><description><![CDATA[!
対処法と書いていますが、この記事の事例はかなり特殊なケースで、対処法も場当たり的なものでしかありません。


 起きたこと
業務中にいつも通りgit pullすると、なんと見慣れないエラーが。
「OpenSSL version mismatch. Built against 30000020, you have 30400000」
最近OpenSSLをインストールしたことが関係してそうでした。
また、gitリポジトリサーバーは自社で構築したGitLabサーバーで、非常に残念なことにメンテナンスがあまりされていないため、ローカルPCとこのサーバーのOpenSSLバージョン差異によりgi...]]></description><link>https://zenn.dev/aki_chan_desu/articles/9cad308dc93759</link><guid isPermaLink="true">https://zenn.dev/aki_chan_desu/articles/9cad308dc93759</guid><pubDate>Wed, 08 Jan 2025 11:40:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AREX9Z_r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%258B%25E3%2582%2589git%2520pull%2520%25E3%2581%2597%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2580%258COpenSSL%2520version%2520mismatch.%25E3%2580%258D%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NTNhNzU0NWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アキ</dc:creator></item><item><title><![CDATA[UnixTime: Linux date コマンド, Google SpreadSheet, LibreOffice, Swift]]></title><description><![CDATA[
 UnixTime: Linux date コマンド, Google SpreadSheet, LibreOffice, Swift
2025-01-08


 (1).背景・何がしたかったか

UnixTimeを使おうとしたら、使っている物で値が違って戸惑った

整理しよう！





 (2).環境

Linux

date (GNU coreutils) 9.4
Google SpreadSheet
LibreOffice 7.4





 (3).dateコマンド

 3-1. TimeZoneどうなっている？
GNU date コマンドは TZ を考慮。
意識せず使用してい...]]></description><link>https://zenn.dev/sorehaomosiroi/articles/sorehaomosiroi-20250108_date</link><guid isPermaLink="true">https://zenn.dev/sorehaomosiroi/articles/sorehaomosiroi-20250108_date</guid><pubDate>Wed, 08 Jan 2025 11:01:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s0R2tULU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UnixTime%253A%2520Linux%2520date%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%252C%2520Google%2520SpreadSheet%252C%2520LibreOffic...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDNkNWJiZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いいね</dc:creator></item><item><title><![CDATA[Ubuntu Desktop のログイン画面でフリーズしたら]]></title><description><![CDATA[Ubuntu Desktop をインストールしたとき、デフォルトのグラフィックス設定がハードウェアと互換性がない場合、ログイン時にフリーズすることがあります。本記事では、この問題に対する解決方法を解説します。

 Ubuntu Desktop とは
Ubuntuには、サーバー向けの「Ubuntu Server」と、個人やオフィス向けの「Ubuntu Desktop」という2種類があります。
Ubuntu Serverは、主にサーバー運用を目的としており、コマンド(CUI)で操作されることを前提としています。GUIは搭載されていません。
Ubuntu Desktopは、個人利用やオフィス作...]]></description><link>https://zenn.dev/hagifly/articles/7a001020bc2eae</link><guid isPermaLink="true">https://zenn.dev/hagifly/articles/7a001020bc2eae</guid><pubDate>Wed, 08 Jan 2025 00:09:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QQ5RvR-F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%2520Desktop%2520%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Asher%2520Ishikawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1YjFlNzZlZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Asher Ishikawa</dc:creator></item><item><title><![CDATA[Ubuntu 24.04にcursorをインストールしてデスクトップに登録する]]></title><description><![CDATA[
 検証環境

Distribution: Kubuntu 24.04
Desktop Environment: KDE Plasma 5.27.11
Graphics Platform: X11
Kernel: 6.8.0-51-generic (64-bit)
PC: ThinkPad E14 Gen 6 AMD
Cursor version: cursor-0.44.11x86_64.AppImage


 インストール
Bash Script for Cursor App Desktop Integration on Linux Environments #844 を参考に、一部...]]></description><link>https://zenn.dev/ka2kama/articles/f0a6b5c2f32c87</link><guid isPermaLink="true">https://zenn.dev/ka2kama/articles/f0a6b5c2f32c87</guid><pubDate>Tue, 07 Jan 2025 19:45:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cN3jDQzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%252024.04%25E3%2581%25ABcursor%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AB%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ka2kama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o3Zk9TdGE5bm5xTUZhbTNwSWVBd00waWozYlVkWWQ3U2R6VFVFPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ka2kama</dc:creator></item><item><title><![CDATA[Docker環境Misskeyバックアップ(ディレクトリごと)→リストア]]></title><description><![CDATA[Misskeyディレクトリごとバックアップ→GoogleDriveにアップロード
rcloneを使います。
Misskeyディレクトリごとのバックアップ
#Misskey作業ユーザーに入る
sudo su - misskey

#Misskey作業ディレクトリに移動
cd misskey

#Misskey止める
sudo docker compose down

#ディレクトリをtar.gzで固めてホームディレクトリに.tgzファイル作成
sudo tar -zvcf ../mi_backup.tgz .

#Misskey起動
sudo docker compose up -d &a...]]></description><link>https://zenn.dev/harumaki2000/articles/0dc0a470eeb1c6</link><guid isPermaLink="true">https://zenn.dev/harumaki2000/articles/0dc0a470eeb1c6</guid><pubDate>Tue, 07 Jan 2025 00:41:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--78jxgFOg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E7%2592%25B0%25E5%25A2%2583Misskey%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2528%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%2594%25E3%2581%25A8%2529%25E2%2586%2592%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:harumaki2000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW5iWFNoMlRaUXQ1d29DN19KZzV1U0xKT0xTS1lDYXo1aVA0Z0l1MU1pREVKakNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>harumaki2000</dc:creator></item><item><title><![CDATA[Ubuntu/LinuxにGoogleDriveをマウントする]]></title><description><![CDATA[環境
・自宅サーバー
・Ubuntu Server 24.04 LTS
こちらの記事を参考にしています
さくらVPSのUbuntu環境でGoogleDriveの共有ドライブをマウントする
ですがこの記事のまま進めていくと上手くいかない部分があるので参考になればと思います。
初めてやる人は上記記事のAPIとサービス → 認証情報の作成まで進めてください。
# google-drive-ocamlfuseをインストール
sudo add-apt-repository ppa:alessandro-strada/ppa
sudo apt update
sudo apt install goog...]]></description><link>https://zenn.dev/harumaki2000/articles/5ec7fb4cb33d1c</link><guid isPermaLink="true">https://zenn.dev/harumaki2000/articles/5ec7fb4cb33d1c</guid><pubDate>Mon, 06 Jan 2025 17:07:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gU0cBRR1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ubuntu%252FLinux%25E3%2581%25ABGoogleDrive%25E3%2582%2592%25E3%2583%259E%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:harumaki2000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW5iWFNoMlRaUXQ1d29DN19KZzV1U0xKT0xTS1lDYXo1aVA0Z0l1MU1pREVKakNnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>harumaki2000</dc:creator></item></channel></rss>