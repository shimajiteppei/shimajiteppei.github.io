<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 19 Aug 2025 09:50:50 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[学習ログ：DOMとHTML/XMLの関係、そしてブラウザとJavaScriptの役割]]></title><description><![CDATA[
 DOMとは何か
DOM（Document Object Model）は、HTMLやXMLといった文書をプログラムで操作できるようにしたデータ構造である。文書をツリー構造に変換し、要素やテキストをノードとして扱えるようにする。
例：
&lt;p&gt;Hello&lt;/p&gt;
はDOM上では「pノードの子にテキストノード”Hello”がある」という形で表現される。
⸻

 HTML/XMLとDOMの関係

HTML/XML：文書のデータそのもの（テキストファイルやソースコード）
DOM：それをブラウザがパースして生成する内部表現（操作可能なツリー構造）

つまりHTML/XMLが...]]></description><link>https://zenn.dev/atsushimemet/articles/4cfd7b2b379027</link><guid isPermaLink="true">https://zenn.dev/atsushimemet/articles/4cfd7b2b379027</guid><pubDate>Tue, 19 Aug 2025 08:32:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zKZRW2e6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2582%25B0%25EF%25BC%259ADOM%25E3%2581%25A8HTML%252FXML%25E3%2581%25AE%25E9%2596%25A2%25E4%25BF%2582%25E3%2580%2581%25E3%2581%259D%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A8JavaScript%25E3%2581%25AE%25E5%25BD%25B9%25E5%2589%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:studymemot%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTd0bDJIcVI3WmY1QnJlX1hOM2hyWksyNU1CczlhNEVvd2c1RmVKZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>studymemot</dc:creator></item><item><title><![CDATA[JavaScript黎明期]]></title><description><![CDATA[https://note.com/studymemot/n/n418b0e5ad1be
]]></description><link>https://zenn.dev/atsushimemet/articles/7dc68500e5d910</link><guid isPermaLink="true">https://zenn.dev/atsushimemet/articles/7dc68500e5d910</guid><pubDate>Tue, 19 Aug 2025 08:23:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wxFtQsPp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E9%25BB%258E%25E6%2598%258E%25E6%259C%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:studymemot%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTd0bDJIcVI3WmY1QnJlX1hOM2hyWksyNU1CczlhNEVvd2c1RmVKZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>studymemot</dc:creator></item><item><title><![CDATA[WixStudioでVeloを使う Step 39 「マルチステートボックス」]]></title><description><![CDATA[
 はじめに

マルチステートボックスもおもしろい。WixStudioには魅力的なパーツが十分に揃っている。これらのパーツを必要なところに自由に配置できるから、コードが書けなくても魅力的なサイトを仕上げることができる。しかし、以前にも触れたことがあるがパーツの中にはコードと組み合わせなければ使えないパーツが存在する。今回触れていくのはそんなコード必須要素の一つである「マルチステートボックス」。使えれば非常に便利だけどノーコードツールとしてWixStudioを利用しているウチはその魅力を知ることが出来ない。それは勿体ない。だから、今回はマルチステートボックスに触れてみる。

マルチステート...]]></description><link>https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0039</link><guid isPermaLink="true">https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0039</guid><pubDate>Tue, 19 Aug 2025 08:22:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9YxreiUk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WixStudio%25E3%2581%25A7Velo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520Step%252039%2520%25E3%2580%258C%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2588%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Niibori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZDA4Mjg3YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niibori</dc:creator></item><item><title><![CDATA[ReconnectingWebSocket を使った WebSocket 自動再接続実装]]></title><description><![CDATA[
 Reconnecting WebSocket の導入・設定・実装・テストまとめ
WebSocketは標準APIに自動再接続機能がありません。
ReconnectingWebSocketを使うことで、接続が切れた場合も自動で再接続する仕組みを簡単に追加できます

 1. インストール
npm install reconnecting-websocket
# または
yarn add reconnecting-websocket

 2. 基本設定
例：
import ReconnectingWebSocket from 'reconnecting-websocket';

// 接続が...]]></description><link>https://zenn.dev/1stscratch/articles/115d8e513226cb</link><guid isPermaLink="true">https://zenn.dev/1stscratch/articles/115d8e513226cb</guid><pubDate>Tue, 19 Aug 2025 07:40:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XWUbTawN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReconnectingWebSocket%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%2520WebSocket%2520%25E8%2587%25AA%25E5%258B%2595%25E5%2586%258D%25E6%258E%25A5%25E7%25B6%259A%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:1s_c.wu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y4MDQ1NTg2ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2581Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZTdjYWNlMjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>1s_c.wu</dc:creator></item><item><title><![CDATA[ES Module(.js, .mjs)の読み込み方法まとめ]]></title><description><![CDATA[都度説明書くのがめんどくさいので記事を書きます
以降、以下のmodule.mjsが存在することを前提とします

module.mjs
const test = "Hello!";
export { test };


 静的import宣言
MDN Web Docs

たぶん、こっちのほうがわかりやすいし書きやすい
使用するにはそのソースファイル自体がモジュールとして読み込まれる必要がある


main.js
import { test } from "path/to/module.mjs";
console.log(test); // Expected Log Output: &lt;...]]></description><link>https://zenn.dev/aya_koto/articles/15e816d52dedd3</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/15e816d52dedd3</guid><pubDate>Mon, 18 Aug 2025 19:13:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hy0s64JS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ES%2520Module%2528.js%252C%2520.mjs%2529%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[逆線形補間（unlerp）解説]]></title><description><![CDATA[!
星が弾け飛ぶアニメーションを実装するときに非常に苦戦したので記しておきます。


対象：私の様に数学が苦手でもOK。Vue / React / Nuxt / Next / TypeScript / JavaScript でUI座標を扱う人
ゴール：unlerpで「いま区間の何％か」を出せるようになる（＝px → % の橋渡しができる）


 TL;DR（最短結論）


unlerpは「区間 [a, b] の中で値 x がどれくらい進んだか」を 0〜1 で返す関数
公式：t = (x - a) / (b - a)

UIでは ビューポートのpx → 親コンテナ内の% に直すのに超便利
...]]></description><link>https://zenn.dev/hi_kun0912/articles/74155b1ecd6c76</link><guid isPermaLink="true">https://zenn.dev/hi_kun0912/articles/74155b1ecd6c76</guid><pubDate>Mon, 18 Aug 2025 08:47:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9VMHh07k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2580%2586%25E7%25B7%259A%25E5%25BD%25A2%25E8%25A3%259C%25E9%2596%2593%25EF%25BC%2588unlerp%25EF%25BC%2589%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2581%25AF%25E5%25AD%2590%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%2591%25E3%2583%2591%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhYjMzZWZkYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>息子溺愛パパ@エンジニア</dc:creator></item><item><title><![CDATA[【GAS】Google Apps Script からメールを送信する]]></title><description><![CDATA[
 これなに
ちょびちょびお仕事させていただいていたパートナーさんから「取引先に定型文を入れたメールを送りたい」という要望があがり、「ライトに作るなら GAS からメールを送ろうかな」と思い立ち、その際に GAS からメールってどうやって送るんだっけというものを調べたので、よく使いそうなものをまとめました。
※ 2023年7月頃に note に書いた記事を移行しただけなのですが、基本的には変わっていないはず。ただ、もしかしたら細かいところが変わっている可能性あるのでその点はご容赦ください。

 一番簡単な送り方
宛先のメールアドレス、件名、本文を設定して送ります。送信元のメールアドレスは...]]></description><link>https://zenn.dev/su3_hokkaido/articles/2025-04-17_gas_email</link><guid isPermaLink="true">https://zenn.dev/su3_hokkaido/articles/2025-04-17_gas_email</guid><pubDate>Mon, 18 Aug 2025 08:20:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I4NPkK61--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GAS%25E3%2580%2591Google%2520Apps%2520Script%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Su3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmY2Q1YTk5MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Su3</dc:creator></item><item><title><![CDATA[(TS/JS) Zodで始めるデータ検証とスキーマ宣言]]></title><description><![CDATA[Zodは、TypeScript/JavaScript環境でデータの検証を行い、スキーマ宣言を通じて型安全性を強化するライブラリです。

 Zodの役割


ランタイムデータ検証

APIリクエストボディ、URLパラメータ、環境変数など、外部から受け取るデータは信頼できない
Zodを利用することで、予期しない値（型不一致・必須値の欠落など）を事前に排除できる



型の自動生成

ZodスキーマからTypeScriptの型を推論可能
型宣言と検証ロジックを別々に記述する必要がなくなる



エラーメッセージの提供

どのフィールドが、なぜ失敗したのかを明確に把握できる



メンテナンスし...]]></description><link>https://zenn.dev/hyoni/articles/a2a87aff9a0b2f</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/a2a87aff9a0b2f</guid><pubDate>Mon, 18 Aug 2025 06:22:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ERm84p7N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528TS%252FJS%2529%2520Zod%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%25A8%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E5%25AE%25A3%25E8%25A8%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[hidden属性＋data属性だけでUIを制御する汎用JavaScript]]></title><description><![CDATA[
 🎯 背景
Web制作をしていると「Aを押したらBが出る／消える」といったシンプルなUI制御はとてもよく出てきます。
毎回個別にJSを書くのは面倒なので、data属性だけで汎用的に扱えるJS を備忘録としてまとめました。


 🚀 仕様


初期状態の管理はHTML＋CSS（非表示は hidden 属性）

挙動制御はすべて data- 属性で指定
JSはクリックイベントを拾うだけの最小構成
要素が存在しなくてもエラーにならない安全設計
アクセシビリティ対応（aria-hidden と inert）



 🛠 データ属性の設計


data-ui="act" … トリガー要素に付与
...]]></description><link>https://zenn.dev/jabo_sack/articles/bceaa978a30a9e</link><guid isPermaLink="true">https://zenn.dev/jabo_sack/articles/bceaa978a30a9e</guid><pubDate>Mon, 18 Aug 2025 06:16:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nvNdp9my--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:hidden%25E5%25B1%259E%25E6%2580%25A7%25EF%25BC%258Bdata%25E5%25B1%259E%25E6%2580%25A7%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7UI%25E3%2582%2592%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%25E6%25B1%258E%25E7%2594%25A8JavaScript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0xPbnFrMDRKVThqY19FYnZINFBkNks3akdYOGRMZTYwWUxDV3pXT3Fad3pqSlFmYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saku</dc:creator></item><item><title><![CDATA[【ClaudeCode】「菊池風磨構文メーカー」を開発しました]]></title><description><![CDATA[
 はじめに
Netflix「timelesz project -AUDITION-」で菊池風磨さんが発した「歌詞忘れてるようじゃ無理か。歌詞はね、入れとかないと」という一言から生まれた「菊池風磨構文」。この話題のフレーズを自動生成するWebサービスを、AI技術を駆使して開発しました。
本記事では、菊池風磨構文の特徴的な2段構造「○○してるようじゃ無理か。××はね、△△しとかないと」を完全再現するための技術的アプローチと、実装過程で得られた知見を共有します。

 本記事について
今回の開発および記事執筆は、Claude Code（Anthropic社のAI）との協業で進めました。
AI時...]]></description><link>https://zenn.dev/5naokichi/articles/34795ccf099a17</link><guid isPermaLink="true">https://zenn.dev/5naokichi/articles/34795ccf099a17</guid><pubDate>Mon, 18 Aug 2025 05:45:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g5xSz5qs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590ClaudeCode%25E3%2580%2591%25E3%2580%258C%25E8%258F%258A%25E6%25B1%25A0%25E9%25A2%25A8%25E7%25A3%25A8%25E6%25A7%258B%25E6%2596%2587%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%25E3%2580%258D%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYTY0ODViMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なおきち</dc:creator></item><item><title><![CDATA[Google Chrome拡張機能開発のチュートリアルを実施してみた（任意のタイミングでのスクリプト実行編）]]></title><description><![CDATA[
 チュートリアルの概要
前回はGoogle Chromeの拡張機能やウェブストアに関する開発者向けドキュメントを開くと、読了目安時間が表示される拡張機能を作成しました。
https://zenn.dev/judenfly/articles/judenfly-20250810
今回もGoogle公式のチュートリアルに従い、特定のWebページのスタイルを任意のタイミングで変更する拡張機能を作成します。
https://developer.chrome.com/docs/extensions/get-started/tutorial/scripts-activetab?hl=ja
チュートリ...]]></description><link>https://zenn.dev/judenfly/articles/judenfly-20250818</link><guid isPermaLink="true">https://zenn.dev/judenfly/articles/judenfly-20250818</guid><pubDate>Mon, 18 Aug 2025 04:40:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DnBrAHpW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Chrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E6%2596%25BD%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E5%25AE%259F%25E8%25A1%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%2585%25E9%259B%25BB%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyY2YyNjg4NDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>充電フライ</dc:creator></item><item><title><![CDATA[【Playwright】独自実装なしでクライアント証明書に対応する]]></title><description><![CDATA[
 概要
こんにちは、booostのバックエンドエンジニアのma_meです。
社内ポータルなど、mTLS（クライアント証明書）で保護されたサイトをE2Eテストするケースがあると思います。
Playwright v1.43以降は公式の clientCertificates API が追加され、クライアント証明書の取り回しが簡単になりましたので、その使い方を紹介します。
公式ドキュメント：https://playwright.dev/docs/api/class-testoptions#test-options-client-certificates

 clientCertificates...]]></description><link>https://zenn.dev/booost/articles/13d87fa341d95c</link><guid isPermaLink="true">https://zenn.dev/booost/articles/13d87fa341d95c</guid><pubDate>Mon, 18 Aug 2025 03:58:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bg49-cue--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Playwright%25E3%2580%2591%25E7%258B%25AC%25E8%2587%25AA%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AA%25E3%2581%2597%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E8%25A8%25BC%25E6%2598%258E%25E6%259B%25B8%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ma_me%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2MzgwYzJkYmQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Booost%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzZjVkODUyNTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ma_me</dc:creator></item><item><title><![CDATA[人間も関数も純粋な方がいいらしい #5]]></title><description><![CDATA[
 📢 このシリーズについて
このシリーズは、React公式ドキュメント（ https://ja.react.dev/ ）を(できるだけ)全て読み、学んだことやコード例、自分なりの補足をまとめていくチャレンジの記録です。

 目的


Reactの基礎〜応用を公式の正しい情報で体系的に理解する
自分の言葉でアウトプットして知識を定着させる

このシリーズでは、ただ内容をなぞるのではなく、「自分がReactを使っていても気づかなかった事実や落とし穴」を重点的にまとめます。
読んだときに「へぇ、そうなんだ！」となったポイントは必ず記録します！

 目次 - 本記事で取り扱う内容

純粋性とは...]]></description><link>https://zenn.dev/miry/articles/44c416e9d76473</link><guid isPermaLink="true">https://zenn.dev/miry/articles/44c416e9d76473</guid><pubDate>Sun, 17 Aug 2025 15:33:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K2MCdczu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BA%25BA%25E9%2596%2593%25E3%2582%2582%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2582%25E7%25B4%2594%25E7%25B2%258B%25E3%2581%25AA%25E6%2596%25B9%25E3%2581%258C%25E3%2581%2584%25E3%2581%2584%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%2520%25235%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2582%25AB%25E3%2583%259F_miry41%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2OGQ2MTRjZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タカミ_miry41</dc:creator></item><item><title><![CDATA[【JavaScript】DOMTokenListについて初心者メモ]]></title><description><![CDATA[
 DOMTokenListとは
DOMTokenList は、class 属性の値をあたかも配列であるかのように管理するための専用オブジェクトです。配列ではありません。
classList プロパティを使ってこのオブジェクトにアクセスすると、文字列の連結や置換といった煩雑な操作をせずに、add()、remove()、toggle() といったメソッドでクラスを直感的に操作できます。

 特徴

 例
&lt;element class = "class1 class2 class3"&gt;&lt;/element&gt;

※ tutorialspoint.com/javascrip...]]></description><link>https://zenn.dev/mabo23/articles/35883fac09dc5b</link><guid isPermaLink="true">https://zenn.dev/mabo23/articles/35883fac09dc5b</guid><pubDate>Sun, 17 Aug 2025 11:47:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NC_pS75j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591DOMTokenList%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mabo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzM2ZhMmVkZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mabo</dc:creator></item><item><title><![CDATA[AI家庭教師と学ぶプログラミング・Web開発入門]]></title><description><![CDATA[AIの進化によって、スクールの講師より優秀なAI家庭教師に定額で教えてもらい放題になりました。
いきなり高額なスクールに通う必要はないです。
AIに気になったこと、困ったことをすぐに相談することで、Webサービスを公開するまでの過程を詰まらずテンポよく実践的に学べます！]]></description><link>https://zenn.dev/angelfall/books/ae5916949c1341</link><guid isPermaLink="true">https://zenn.dev/angelfall/books/ae5916949c1341</guid><pubDate>Sun, 17 Aug 2025 10:07:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SneZR9ib--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8yYWMyNWU4NGEyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ホニャ太郎</dc:creator></item><item><title><![CDATA[思考の解剖学：Node.js Hello Worldから読み解く6段階思考テンプレート]]></title><description><![CDATA[
 思考の解剖学：Node.js Hello Worldから読み解く6段階思考テンプレート
プログラミング学習において、「Hello World」は単なる入門課題ではない。それは、新しい技術パラダイムを理解するための思考の入り口である。本記事では、Node.jsのHello Worldプログラムを「頭のいい人が理解した場合の思考テンプレート」に沿って分析し、深層的理解への道筋を示す。

 1. 存在意義の把握：なぜNode.jsなのか

 技術史的文脈での位置づけ
Node.jsの存在意義を理解するには、まずWeb技術の進化を俯瞰する必要がある。
従来のパラダイム：

フロントエンド：J...]]></description><link>https://zenn.dev/yoshiaki_ai/articles/nodejs-thinking-template-analysis</link><guid isPermaLink="true">https://zenn.dev/yoshiaki_ai/articles/nodejs-thinking-template-analysis</guid><pubDate>Sun, 17 Aug 2025 07:45:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fj6hyHR4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2580%259D%25E8%2580%2583%25E3%2581%25AE%25E8%25A7%25A3%25E5%2589%2596%25E5%25AD%25A6%25EF%25BC%259ANode.js%2520Hello%2520World%25E3%2581%258B%25E3%2582%2589%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F6%25E6%25AE%25B5%25E9%259A%258E%25E6%2580%259D%25E8%2580%2583%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiaki%254010B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTExKcURhSjhzMlNCT3Q3RGluN29tRTZLZ3ZhNGFZZ1pETmt2TTB1Z3FaWVRkc18zTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiaki@10B</dc:creator></item><item><title><![CDATA[Jestを使ったクラスをテスト手法まとめ]]></title><description><![CDATA[
 Jest を使ったクラスをテスト手法まとめ
業務で Jest を使う機会が多くなってきたので、おさらいとしてクラスを対象としたテスト手法をまとめてみました。
クラスを使ったコード例、マッチャー、モック機能について、紹介します。


 1. Jest の基本的なテストコード
// src/UserService.ts
import { AuthApi } from './AuthApi';

export class UserService {
  constructor(private authApi: AuthApi) {}

  async login(username: str...]]></description><link>https://zenn.dev/hayatech/articles/ts-jest-for-class</link><guid isPermaLink="true">https://zenn.dev/hayatech/articles/ts-jest-for-class</guid><pubDate>Sun, 17 Aug 2025 06:16:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lmgs1dTk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E6%2589%258B%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OTUyMWE4YzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HayaTech</dc:creator></item><item><title><![CDATA[Node.js入門：手軽に始めるHello Worldプログラムの作成方法]]></title><description><![CDATA[
 Node.js入門：手軽に始めるHello Worldプログラムの作成方法

 1. 導入部分
JavaScriptは、当初はブラウザ上で動作する言語として生まれましたが、現在ではサーバーサイドでも広く使われています。その背景には、Node.jsの存在が大きく関わっています。Node.jsは、JavaScriptをサーバーサイドで動かすためのプラットフォームで、非同期I/Oやイベント駆動型の特性を持っています。これにより、大量のリクエストを高速に処理することが可能となりました。
この記事では、Node.jsの基本的な使い方を学ぶため、初めてのプログラムとしてよく用いられる"Hello...]]></description><link>https://zenn.dev/yoshiaki_ai/articles/nodejs-hello-world-tutorial</link><guid isPermaLink="true">https://zenn.dev/yoshiaki_ai/articles/nodejs-hello-world-tutorial</guid><pubDate>Sun, 17 Aug 2025 06:04:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qLBcskDm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258BHello%2520World%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiaki%254010B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTExKcURhSjhzMlNCT3Q3RGluN29tRTZLZ3ZhNGFZZ1pETmt2TTB1Z3FaWVRkc18zTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiaki@10B</dc:creator></item><item><title><![CDATA[ゼロから作る！Discordボイスチャンネル入室通知Bot]]></title><description><![CDATA[このチュートリアルでは、PythonとDiscord APIを使って、ボイスチャンネルへの入室を通知するBotをゼロから開発する手順を解説します。開発環境の構築から、Botの実装、エラー処理、Dockerによる本番運用、自宅サーバーでのホスティングまで、初心者にも分かりやすく丁寧に説明します。]]></description><link>https://zenn.dev/nakurei/books/create-discord-voice-notify-bot-tutorial</link><guid isPermaLink="true">https://zenn.dev/nakurei/books/create-discord-voice-notify-bot-tutorial</guid><pubDate>Sun, 17 Aug 2025 03:05:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PX3Mhtk5--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci85YjU0NWM2OGM5LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>NakuRei</dc:creator></item><item><title><![CDATA[Vue.jsでProxy APIを使ってリアクティブデータと副作用を統合する試み]]></title><description><![CDATA[
 状態とその状態の副作用を一つのオブジェクトにまとめたい

 前提
Vue.js/TypeScriptのフロントエンドアプリケーションを実装している
scriptタグ内の行数が多い.vueファイルで、編集状態のデータと、そのデータの副作用として指定する関数や変数の位置が離れていることがあった。
修正時に、ファイル下部のwatcherなどの副作用を見落とすことがある。
（大きめのファイルであればリファクタせんかいという当たり前の意見は一旦無視、！）
（こういったこともあってwatcherはあまり使用しない。気を抜くとあちこちに分散してしまうので、状態が変更した時に何かしたい場合は、v-m...]]></description><link>https://zenn.dev/sakiadachi/articles/23636e588d5bf1</link><guid isPermaLink="true">https://zenn.dev/sakiadachi/articles/23636e588d5bf1</guid><pubDate>Sun, 17 Aug 2025 01:53:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oiPZFSbt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue.js%25E3%2581%25A7Proxy%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A8%25E5%2589%25AF%25E4%25BD%259C%25E7%2594%25A8%25E3%2582%2592%25E7%25B5%25B1%25E5%2590%2588%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2596%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFiYWMwZTcxYzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ざき</dc:creator></item></channel></rss>