<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/javascript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/javascript/feed"/>
  <title>JavaScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaScriptタグが付けられた新着記事</description>
  <updated>2025-10-13T20:39:41+09:00</updated>
  <link>https://qiita.com/tags/javascript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092058</id>
    <published>2025-10-13T20:39:41+09:00</published>
    <updated>2025-10-13T20:39:41+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Jochun/items/df8d57e02fc1358129f3"/>
    <url>https://qiita.com/Jochun/items/df8d57e02fc1358129f3</url>
    <title>[JavaScript] 分割代入 (オブジェクト, 配列 → 新たな変数)_v2</title>
    <content type="text">概要

分割代入（Destructuring Assignment） は、配列やオブジェクトから必要な値を「短く」「明示的に」「再利用しやすく」取り出す構文です。

つまり、

配列やオブジェクトから値を取り出して、個別の変数に代入する

コードの可読性を上げる

関数の...</content>
    <author>
      <name>Jochun</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092050</id>
    <published>2025-10-13T20:24:09+09:00</published>
    <updated>2025-10-13T20:24:09+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/rytaTechNote/items/945c3c90c1974febae0e"/>
    <url>https://qiita.com/rytaTechNote/items/945c3c90c1974febae0e</url>
    <title>IntersectionObserverとwindow.matchMediaを使用して特定幅でのみ要素を監視する</title>
    <content type="text">背景
よく使用する処理なので備忘録として記録

具体的な内容
// ここで監視対象要素を取得しておく
const hogehoge = document.getElementById('hogehoge');

// 交差判定の設定をまとめる
const options ...</content>
    <author>
      <name>rytaTechNote</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092038</id>
    <published>2025-10-13T19:47:32+09:00</published>
    <updated>2025-10-13T19:47:32+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Jochun/items/01678c676b6303525d2d"/>
    <url>https://qiita.com/Jochun/items/01678c676b6303525d2d</url>
    <title>[JavaScript] オブジェクトリテラル、コンストラクタ関数、クラス構文の違い</title>
    <content type="text">概要
JavaScriptではオブジェクトを定義する方法が複数あり、それぞれ使いどころが異なります。主に以下の3種類がよく使われます：

オブジェクトリテラル（Object Literal）

コンストラクタ関数（Constructor Function）

クラス構文...</content>
    <author>
      <name>Jochun</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092025</id>
    <published>2025-10-13T19:21:43+09:00</published>
    <updated>2025-10-13T19:23:24+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/sawachan114/items/03ee9086924da2466b86"/>
    <url>https://qiita.com/sawachan114/items/03ee9086924da2466b86</url>
    <title>パスワードジェネレーター作ってみた</title>
    <content type="text">HTML、CSS、JavaScriptを使ってシンプルなパスワードジェネレーターを作成してみました！
AI(Gemini)を使ってデザイン・必要な機能を洗い出して実装していきました。

概要
安全なパスワードを簡単に生成できる、シンプルなパスワードジェネレーターです。...</content>
    <author>
      <name>sawachan114</name>
    </author>
  </entry>
</feed>
