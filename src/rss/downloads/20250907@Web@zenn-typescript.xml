<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 07 Sep 2025 00:31:47 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Claude Codeにlintエラーを修正してもらう]]></title><description><![CDATA[
 はじめに
eslint-seatbeltで管理されたlintエラーをClaude Codeに修正させてみた話です。

 モチベーション
個人でメンテナンスしているライブラリや過去プロジェクトで蓄積されたlintエラーを修正したくないという怠惰なお気持ちがありました。
そこでeslint-seatbeltをうまく利用するとAIアシスタントでも期待したlint修正が可能になり、効率的にエラーを解消できるのではないかと考えました。

 前提
この記事は、eslint-seatbeltの基本的な概念と使用方法を理解していることを前提としています。
https://zenn.dev/tetot...]]></description><link>https://zenn.dev/tetoteto/articles/eslint-seatbelt-claude-code-progressive-fixing</link><guid isPermaLink="true">https://zenn.dev/tetoteto/articles/eslint-seatbelt-claude-code-progressive-fixing</guid><pubDate>Sat, 06 Sep 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qBZHrwZx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25E3%2581%25ABlint%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E4%25BF%25AE%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TetoTeto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXlIN1NhY21HVFFmR3hWQ1d2R01nX29ETVR0WU82UXJ6WGg1Z3dZOUs4VWRJPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TetoTeto</dc:creator></item><item><title><![CDATA[Cloudflare Agentsコトハジメ]]></title><description><![CDATA[
 はじめに
https://agents.cloudflare.com/
最近自作コーディングエージェントShaft[1]の動作確認でWorkers AIを使っており、せっかくなのでCloudflareだけで完結するAIエージェントも作ろうと思い立ったのでCloudflare Agentsについて色々調べていたのですが、日本語・英語問わず内部の詳しい資料が全くなかった[2]ので、広範囲にわたり調べた内容をまとめることにしました。
今回はちゃんとTool Callingをやっていきます。
APIだけ知りたい人向けのCloudflare Agents Deep Diveはこちら。
http...]]></description><link>https://zenn.dev/tkithrta/articles/d5ab8579a527e9</link><guid isPermaLink="true">https://zenn.dev/tkithrta/articles/d5ab8579a527e9</guid><pubDate>Sat, 06 Sep 2025 22:06:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4-0vGTjo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Agents%25E3%2582%25B3%25E3%2583%2588%25E3%2583%258F%25E3%2582%25B8%25E3%2583%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25BB%2592%25E3%2583%25B0%25E6%25A8%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NDRlMTA4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>黒ヰ樹</dc:creator></item><item><title><![CDATA[JavaScript三十六景Tips集]]></title><description><![CDATA[[背景]
このようなまとめが欲しかった。
LeetCodeを解きながら長い間書き留めてきたJavaScript Tips集です。
チーム開発ではもちろん可読性が重視されますので、その点もご留意ください。


 elseブロックを段落で表現する
if(!l1) return l2
else if(!l2) return l1
else if (l1.val &lt;= l2.val) // ...some
else return l2

 いっぺんに代入する
// let left = 0;
// let current = 0;
// let answer = 0;

let left ...]]></description><link>https://zenn.dev/kenjimorita/articles/3e18a07dda529b</link><guid isPermaLink="true">https://zenn.dev/kenjimorita/articles/3e18a07dda529b</guid><pubDate>Sat, 06 Sep 2025 13:47:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TRIiF7if--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E4%25B8%2589%25E5%258D%2581%25E5%2585%25AD%25E6%2599%25AFTips%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kenmori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwNGVlN2ZjNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kenmori</dc:creator></item><item><title><![CDATA[LINEでFlex Messageを送信する]]></title><description><![CDATA[LINEでテキストよりも柔軟なレイアウトを適用できるFlex Messageを送る方法を書いておきます。
Node.js(TypeScript)のSDKを使うと簡単に送ることができます。
ここでは、LINEアプリから何らかのテキストを送信すると、横方向にスワイプしてコンテンツを表示できるFlex Messageのカルーセルを返信させます。

 Flex Messageとは
LINEではテキストや写真だけよりも、柔軟なレイアウトを適用して送信できるFlex Messageというものがあります。企業アカウントからキャンペーンや広告がFlex Messageで送られて来たことがある方も多いので...]]></description><link>https://zenn.dev/ak2ie/articles/42308c50c2e609</link><guid isPermaLink="true">https://zenn.dev/ak2ie/articles/42308c50c2e609</guid><pubDate>Sat, 06 Sep 2025 12:35:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7NMOdHvw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LINE%25E3%2581%25A7Flex%2520Message%25E3%2582%2592%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ak2ie%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NmEzODZmYjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ak2ie</dc:creator></item><item><title><![CDATA[TypeScript + WebSocketでリアルタイム客室管理システム]]></title><description><![CDATA[
 はじめに
ホテルの客室管理では、清掃状況やチェックイン/アウトの状態をリアルタイムで把握することが運営効率に直結します。Angular + WebSocket + NgRxで、複数スタッフが同時に使用できる客室管理システムを実装します。

 客室状態の定義とモデル設計
// models/room.model.ts
export enum RoomStatus {
  VACANT_CLEAN = 'vacant_clean',      // 空室・清掃済
  VACANT_DIRTY = 'vacant_dirty',      // 空室・要清掃
  OCCUPIED_CLEA...]]></description><link>https://zenn.dev/cts_salmon/articles/2b8e9c460809a7</link><guid isPermaLink="true">https://zenn.dev/cts_salmon/articles/2b8e9c460809a7</guid><pubDate>Sat, 06 Sep 2025 06:57:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L-kFH2w9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%252B%2520WebSocket%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E5%25AE%25A2%25E5%25AE%25A4%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2583%25BC%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkZrcDNBMGg3N3FJanVDOEl0WGY5TDY4eGo4S3VlWVBGbW9WcndWSTh6Y0ExaVp0MD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さーもん</dc:creator></item><item><title><![CDATA[Atomic Designを個人開発に導入 → 失敗と改善をまとめてみた]]></title><description><![CDATA[
 はじめに
個人開発でAtomic Designを導入してみた経験をもとに、感じたことや考えたコンポーネント設計のポイント、そして苦戦した部分をまとめます。

 導入のきっかけと意識したこと
Atomic Designを意識することで、まずコンポーネントの責務を明確にするきっかけになりました。
また、コンポーネントの粒度を考えるようになり、特にUIライブラリやReact Hook Formと組み合わせた時に設計が整理されやすくなったのを実感しました。

段階的に作成できるため、コンポーネントの階層が整理されやすい
テストを書く際に、どの粒度でテストすべきかを考えやすくなる


 メリッ...]]></description><link>https://zenn.dev/nekonoko2323/articles/c8a1cd0e50b875</link><guid isPermaLink="true">https://zenn.dev/nekonoko2323/articles/c8a1cd0e50b875</guid><pubDate>Fri, 05 Sep 2025 21:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gc-utKi6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atomic%2520Design%25E3%2582%2592%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E5%25B0%258E%25E5%2585%25A5%2520%25E2%2586%2592%2520%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%25A8%25E6%2594%25B9%25E5%2596%2584%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AD%25E3%2581%2593%25E3%2581%25AE%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEdQNTAyVHBEQV9BbXBmOXUyTDk1aUQ0aHJzNFBnTkxCSTQtMEtabE82LW1CemRjTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ねこのこ</dc:creator></item><item><title><![CDATA[TanStack DB ~状態管理の新しい考え方~]]></title><description><![CDATA[
 はじめに
TanStack が新たに公開した TanStack DB について調べたので、その概要を紹介します。
https://tanstack.com/db/latest
!
こちらの記事はReact Tokyo ミートアップ #8にて発表させていただいた内容をより深堀りした記事となっています。
登壇資料はこちらです。
https://speakerdeck.com/bmthd/tanstack-db-zhuang-tai-guan-li-noxin-siikao-efang


 TanStack DBとは
TanStack DBは、フロントエンドに 永続化層（DB） を設け、...]]></description><link>https://zenn.dev/bmth/articles/tanstack-db-csq</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/tanstack-db-csq</guid><pubDate>Fri, 05 Sep 2025 18:06:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QeSJMu3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TanStack%2520DB%2520%7E%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E8%2580%2583%25E3%2581%2588%25E6%2596%25B9%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZTk3NzVhNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[Tailwindのz-indexマジックナンバー解決方針]]></title><description><![CDATA[
 結論
z-indexの変数はtailwind.config.jsではなく.cssで定義しよう
異論は認めます

 よくありそうなパターン
CSSを使わず、tailwind.config.jsで定義
theme: {  
  extend: {  
    zIndex: {  
      modal: 50,
    },  
  },  
},
const SampleComponent () =&gt; {
    return {
    &lt;box className='z-modal'&gt;
    )
}
export default SampleComponen...]]></description><link>https://zenn.dev/ho_ri/articles/ddfb47cc81600c</link><guid isPermaLink="true">https://zenn.dev/ho_ri/articles/ddfb47cc81600c</guid><pubDate>Fri, 05 Sep 2025 13:58:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4KNoq0IW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tailwind%25E3%2581%25AEz-index%25E3%2583%259E%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2583%258A%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E9%2587%259D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hol1kgmg%2520%2528%25E3%2581%25BB%25E3%2582%258A%25E3%2581%258B%25E3%2582%258F%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3NmM0YjRmYTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hol1kgmg (ほりかわ)</dc:creator></item><item><title><![CDATA[手を動かして覚える Prisma 実践入門]]></title><description><![CDATA[実際に手を動かしながらPrismaの基本から実践的な使い方までを学べる入門ガイドです。]]></description><link>https://zenn.dev/cocomina/books/hands-on-prisma-guide</link><guid isPermaLink="true">https://zenn.dev/cocomina/books/hands-on-prisma-guide</guid><pubDate>Fri, 05 Sep 2025 13:55:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gWF0_obr--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8wMGM3MDU5MThiLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Twosun</dc:creator></item><item><title><![CDATA[フロントエンド開発で使う数理最適化]]></title><description><![CDATA[フロントエンド開発において、「数理最適化」という言葉を聞くことは少ないかもしれません。しかし、私たちが日々開発しているUIには、実は数理最適化で解決できる問題が潜んでいます。
フロントエンドにおける数理最適化の世界を覗いてみましょう！！
!
数理最適化とは何か、ざっくりと説明すると、数学的な手法・アルゴリズムを用いて、数式で表現された問題の最適(あるいはそれに近い)な解(答え)を見つけることをいいます。


 1. 地図UIの最適化問題
今回は、地図上に建物情報を表示するという実践的な課題を通じて、フロントエンドで数理最適化をどのように活用できるかを紹介します。

 地図上の建物情報表示...]]></description><link>https://zenn.dev/sumasate_tec/articles/80d7ea1669e71c</link><guid isPermaLink="true">https://zenn.dev/sumasate_tec/articles/80d7ea1669e71c</guid><pubDate>Fri, 05 Sep 2025 08:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7GYZzRwC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E6%2595%25B0%25E7%2590%2586%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hahnah%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxMWNlN2JhZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259E%25E3%2582%25B5%25E3%2583%2586%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlZTU2Mjg0YWYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hahnah</dc:creator></item><item><title><![CDATA[Drizzle ORM × Claude Code：次世代のTypeScript開発体験]]></title><description><![CDATA[
 🎯 この記事の概要
解決する問題

TypeScriptでの型安全なデータベース操作
ORMツールの選択に迷っている
AI支援開発との相性を知りたい

対象読者

TypeScript経験1年以上
データベース操作の基本知識
効率的な開発ツールを探している方

前提知識

TypeScriptの基本文法
SQLの基本概念（SELECT、JOIN等）
Node.jsプロジェクトの構築経験


 📊 結論・要点
Drizzle ORMをおすすめする理由

✅ 完全な型安全性: コンパイル時にSQLエラーを検出
✅ SQLライクな直感的記法: 学習コストが低い
✅ AI開発との相性: 明示...]]></description><link>https://zenn.dev/pipipi_dev/articles/20250904-drizzle-claude-dev</link><guid isPermaLink="true">https://zenn.dev/pipipi_dev/articles/20250904-drizzle-claude-dev</guid><pubDate>Thu, 04 Sep 2025 12:13:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yN5v4W0w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drizzle%2520ORM%2520%25C3%2597%2520Claude%2520Code%25EF%25BC%259A%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AETypeScript%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pipipi_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1MWU1MzM5YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pipipi_dev</dc:creator></item><item><title><![CDATA[JavaScriptのコールバック関数を理解する - Express.jsの実装から学ぶ非同期処理の基本]]></title><description><![CDATA[
 JavaScript のコールバック関数を理解する - Express.js の実装から学ぶ非同期処理の基本
Express.js でシンプルな API を作りながら、コールバック関数の仕組みとJavaScript の非同期処理について深く理解していきます。

 はじめに
クラウドエース株式会社 第一開発部 喜村です。
普段は SRE 領域を担当していますが、とある事情で TypeScript を触る機会があり Express.js を使った Web アプリ開発に挑戦しました。
そこで最初に出会ったのがこのようなコードでした：
app.ts:
app.get('/', (req, r...]]></description><link>https://zenn.dev/cloud_ace/articles/804c0d088d2535</link><guid isPermaLink="true">https://zenn.dev/cloud_ace/articles/804c0d088d2535</guid><pubDate>Thu, 04 Sep 2025 11:51:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hAR_Rlas--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520-%2520Express.js%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B9%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OGMwYmM4MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クラウドエース株式会社</dc:creator></item><item><title><![CDATA[OpenNextでCloudflare Workersの複数環境を使う]]></title><description><![CDATA[OpenNextはVercel以外の環境(特にCloudflare Workers)でNext.jsを動作させるための便利なプロジェクトですが、それぞれの制約をうまく糊付けするために意外とはまりどころが多かったりします。
今回は素直なOpenNext x Cloudflare Workersプロジェクトを複数環境対応させるために必要なことと、その際のはまりどころをまとめます。

 はじめに
Cloudflare Workersで複数環境を運用するには以下のドキュメントにあるようにwrangler.jsoncに複数環境の設定をする方法と、Cloudflare WorkersのPreview...]]></description><link>https://zenn.dev/itome/articles/c985596c5a5910</link><guid isPermaLink="true">https://zenn.dev/itome/articles/c985596c5a5910</guid><pubDate>Thu, 04 Sep 2025 06:54:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2WtWvmwc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenNext%25E3%2581%25A7Cloudflare%2520Workers%25E3%2581%25AE%25E8%25A4%2587%25E6%2595%25B0%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takeshi%2520Tsukamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMDM0ODM0YzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takeshi Tsukamoto</dc:creator></item><item><title><![CDATA[Cloudflare (npm create cloudflare) で作った React + Vite プロジェクトに @ エイリアスを導]]></title><description><![CDATA[この記事は、個人メモを下にGPT-5に作成してもらいました。
簡単に見たい方は、こちら に個人メモをそのまま貼り付けたページを作りましたので、参考程度にご覧ください。

Cloudflare の公式テンプレート (npm create cloudflare@latest -- &lt;app&gt; --framework=react) で作成した Vite + React プロジェクトには、@ エイリアス（@/components/... のような書き方）が最初は設定されていません。
そのため自分で設定する必要がありますが、tsconfig.base.json を分割している構成だと少...]]></description><link>https://zenn.dev/locu/articles/30813febffdd49</link><guid isPermaLink="true">https://zenn.dev/locu/articles/30813febffdd49</guid><pubDate>Thu, 04 Sep 2025 05:31:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cSZ1aDxF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520%2528npm%2520create%2520cloudflare%2529%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2520React%2520%252B%2520Vite%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AD%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlZTFiY2ZkNDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ロク</dc:creator></item><item><title><![CDATA[【TypeScript】非同期処理についてまとめる。fetch,axios編]]></title><description><![CDATA[
 はじめに
TypeScript で非同期処理を扱うについて、自分の知識が浅い部分があったので改めてまとめて行こうと思います。(初心者のため優しい目で見てください)
第一弾目は以下に書いてます！！
https://zenn.dev/daichi09167/articles/701ed3fdc0332a

 fetchについて
fetch とは、HTTPリクエストを送信する関数で、ネットワークを介してリソース（データ）を取得するための仕組みで、Promiseを返します。
// GETリクエスト
fetch('https://jsonplaceholder.typicode.com/tod...]]></description><link>https://zenn.dev/daichi09167/articles/9b8fb8b75dd45e</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/9b8fb8b75dd45e</guid><pubDate>Thu, 04 Sep 2025 04:45:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GUqz6Ofe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%25E3%2580%2582fetch%252Caxios%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi2724%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjODE0Yzk4ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi2724</dc:creator></item><item><title><![CDATA[Vue 3で複数Swiperをpropsで個別制御（JSONデータ版）]]></title><description><![CDATA[公式の Vue 用コンポーネントもあるけれど、細かく制御したいときや、軽く導入したいケース、雛形だけ作って、親側で諸々調整したい、ので自作コンポーネント化しておく。

 環境

Vue 3
TypeScript
Swiper v11（swiper@latest）


 props で ID（クラス名）やタイトルを受け取って流用できる Swiper コンポーネント

SwiperComponent.vue
&lt;template&gt;
  &lt;div&gt;
    &lt;h2&gt;{{ title }}&lt;/h2&gt;
    &lt;div :class="['swi...]]></description><link>https://zenn.dev/ocadanuki/articles/edba87851c5439</link><guid isPermaLink="true">https://zenn.dev/ocadanuki/articles/edba87851c5439</guid><pubDate>Thu, 04 Sep 2025 04:01:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jlg4QP7U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25203%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0Swiper%25E3%2582%2592props%25E3%2581%25A7%25E5%2580%258B%25E5%2588%25A5%25E5%2588%25B6%25E5%25BE%25A1%25EF%25BC%2588JSON%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okadaasako%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NWNhNzQ2NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okadaasako</dc:creator></item><item><title><![CDATA[🎨Figma MCPの構造化問題を改善！「Layermate」でデザイン再現率を向上させた話]]></title><description><![CDATA[みなさんこんにちは！
カンリーでVPoEをしてます長谷川です。
今回は、Figma MCPの構造化問題に取組んだお話ができればと思います！

 ✨ はじめに
Figma MCPを使ったことはありますか？MCPとは「Model Context Protocol」の略で、AIがFigmaのデザインファイルを読み取り、コード生成などを行うためのプロトコルです。しかし、実際に使ってみると、構造化されたデザインファイルからの再現性は高い一方で、非構造化されていないデザインファイルからの再現率の低さに直面することも多いです。
今回は、この問題を解決するために、AIデザインツール「Layermate」...]]></description><link>https://zenn.dev/canly/articles/a40805a70ad59f</link><guid isPermaLink="true">https://zenn.dev/canly/articles/a40805a70ad59f</guid><pubDate>Thu, 04 Sep 2025 03:01:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Wdf1Kk6j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520Figma%2520MCP%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E5%258C%2596%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E6%2594%25B9%25E5%2596%2584%25EF%25BC%2581%25E3%2580%258CLayermate%25E3%2580%258D%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E5%2586%258D%25E7%258F%25BE%25E7%258E%2587%25E3%2582%2592%25E5%2590%2591%25E4%25B8%258A%25E3%2581%2595%25E3%2581%259B%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%2595%25B7%25E8%25B0%25B7%25E5%25B7%259D%2520%25E7%25A8%259C%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYjI3NWVjYTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25AB%25E3%2583%25B3%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTNYZnB3OG53cnpsV3pYZlI3OFYyLTRxeFNiU2c2cnNMb2RfSjBWZz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>長谷川 稜</dc:creator></item><item><title><![CDATA[柔軟にデータ取得が可能なGraphQLのIDを考える]]></title><description><![CDATA[今回は、Relay仕様のGraphQLサーバーにおいて、Node Resolverで柔軟な検索を可能にするIDフォーマットについての考察を紹介します。

 IDフィールドを使用したデータの取得
Relay仕様のGraphQLサーバーでは、以下のように単一のIDフィールドを持つNode InterfaceをimplementしたObjectを、Query.nodeで取得できる必要があります。
interface Node {
  id: ID!
}

type Query {
  node(id: ID!): Node
}

type User implements Node {
  id...]]></description><link>https://zenn.dev/plan_b/articles/28b6f2e56a891e</link><guid isPermaLink="true">https://zenn.dev/plan_b/articles/28b6f2e56a891e</guid><pubDate>Thu, 04 Sep 2025 01:03:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J19zfWGQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25E3%2581%258C%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAGraphQL%25E3%2581%25AEID%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sho%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5NWExMDlmYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PLAN-B%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MzFhYzYwZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sho</dc:creator></item><item><title><![CDATA[TypeScript 余剰プロパティって残るんだ！？]]></title><description><![CDATA[
 はじめに
こんにちは、 PortalKey の しゃり です。
弊社で開発中のアプリ PortalKey ではリモートワーク時に発生する「お互いの状況が分からない」を解消しようとしています。
その一環として、ユーザーが自分が通話できる状態なのか、アクティビティ(絵文字とコメント)を設定することで周囲にアピールする機能を作っています。

ユーザー操作によりアクティビティを更新するだけの単純な処理だったのですがTypeScriptの理解が浅く、バグを仕込みそうになったので備忘録の記事を書きます。

 問題
単純なオブジェクトの比較で常にfalseを返すバグを仕込みそうになりました。
co...]]></description><link>https://zenn.dev/portalkeyinc/articles/967ec448c9a026</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/967ec448c9a026</guid><pubDate>Thu, 04 Sep 2025 01:01:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gCse0H-o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E4%25BD%2599%25E5%2589%25B0%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25A3%25E3%2581%25A6%25E6%25AE%258B%25E3%2582%258B%25E3%2582%2593%25E3%2581%25A0%25EF%25BC%2581%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2597%25E3%2582%2583%25E3%2582%258A%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTJkYWZhMzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しゃり</dc:creator></item><item><title><![CDATA[Firebase × TypeScript の最適解？FirestoreTyped のご紹介]]></title><description><![CDATA[
 はじめに
Firebase Firestore は柔軟で便利な NoSQL データベースですが、型安全性という点では課題があります。
TypeScript で型を定義していても、Firestore にはそれを保証する仕組みがなく、型と実際のデータがずれるという問題がよく発生します。
// Firestore の素の利用例
await db.collection("users").doc("123").set({
  name: 123,   // ❌ string 型のはずが number
  email: null  // ❌ 必須フィールドが欠けている
})
// → TypeS...]]></description><link>https://zenn.dev/info_lounge/articles/64d949c3b8b4a1</link><guid isPermaLink="true">https://zenn.dev/info_lounge/articles/64d949c3b8b4a1</guid><pubDate>Wed, 03 Sep 2025 06:32:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RS5tPAkk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520%25C3%2597%2520TypeScript%2520%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E8%25A7%25A3%25EF%25BC%259FFirestoreTyped%2520%25E3%2581%25AE%25E3%2581%2594%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:MasaGon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxNWIyYjYwN2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BB%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2582%25B8%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlMWNhOTE1MzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MasaGon</dc:creator></item></channel></rss>