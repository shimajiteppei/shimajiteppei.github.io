<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-09-24T10:43:59+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2084277</id>
    <published>2025-09-24T10:43:59+09:00</published>
    <updated>2025-09-24T10:43:59+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/NakajimaSH/items/8892a623228e1600028c"/>
    <url>https://qiita.com/NakajimaSH/items/8892a623228e1600028c</url>
    <title>Vue3のv-modelを調べてみた</title>
    <content type="text">はじめに
Vue3のv-modelは、フォーム要素とコンポーネント間で双方向データバインディングを実現するための強力なディレクティブです。この記事では、v-modelの基本概念から、カスタムコンポーネントでの実装方法、そして実用的なパターンまで詳しく解説します。

この記...</content>
    <author>
      <name>NakajimaSH</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2084216</id>
    <published>2025-09-24T08:12:37+09:00</published>
    <updated>2025-09-24T08:35:59+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Iris50/items/78e411c74064d99d6bf2"/>
    <url>https://qiita.com/Iris50/items/78e411c74064d99d6bf2</url>
    <title>VSCodeでTypeScriptの依存関係を可視化する拡張機能を作った話</title>
    <content type="text">🎯 はじめに
「この関数、どこから呼ばれてるんだっけ？」
「このクラス、実は誰にも使われてない説…？」
大規模プロジェクトで開発していると、コードの依存関係が ジャングル化 してきます。
ドキュメントを漁ったり grep するのも限界。頭のキャッシュもすぐ溢れて落ちます。...</content>
    <author>
      <name>Iris50</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2084117</id>
    <published>2025-09-23T23:10:14+09:00</published>
    <updated>2025-09-23T23:10:14+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/y-keiyu/items/3b52e7af8e4502f23d71"/>
    <url>https://qiita.com/y-keiyu/items/3b52e7af8e4502f23d71</url>
    <title>[エラー対応] Vitest の vi.mock で ‘Cannot access before initialization’ が出たときの解決法</title>
    <content type="text">はじめに
Vitestでテストを作成中にエラーが発生したので、その解消方法を備忘録としてまとめます。
同じエラーに遭遇した方の参考になれば幸いです。

発生したエラーメッセージ
Error: [vitest] There was an error when mocking...</content>
    <author>
      <name>y-keiyu</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2084114</id>
    <published>2025-09-23T23:04:02+09:00</published>
    <updated>2025-09-23T23:17:02+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/y-keiyu/items/656a4a56ec9185d8fe72"/>
    <url>https://qiita.com/y-keiyu/items/656a4a56ec9185d8fe72</url>
    <title>Vitest で Jest と同じモックを書いたときのエラー原因と解決方法</title>
    <content type="text">はじめに
今までJest を使っていましたが、はじめてVitest を導入してテストを書いたところ、
Jest と同じ書き方でモックを定義したらエラーに遭遇しました。
本記事では、Jest と Vitest でのモックの違いと、実際に解決した方法をまとめます。

Jest...</content>
    <author>
      <name>y-keiyu</name>
    </author>
  </entry>
</feed>
