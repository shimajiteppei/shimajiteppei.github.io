<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 06 Nov 2024 12:04:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[xrpl.jsでAPIバージョンを指定する]]></title><description><![CDATA[
 xrpl.js
xrpl.jsはXRP Ledgerとのやりとりを行うためのJavaScript/TypeScriptライブラリです。
コミュニティによって最も活発に開発が行われているクライアントライブラリの一つであり、XRPL開発を始めるにあたっては一番おすすめのライブラリです。

 APIバージョン
XRP Ledgerのコアコードであるrippledのバージョン2.0.0においてAPIバージョン2が導入されました。
https://github.com/XRPLF/rippled/blob/develop/API-CHANGELOG.md#api-version-2
rippl...]]></description><link>https://zenn.dev/tequ/articles/xrpljs-specify-api-version</link><guid isPermaLink="true">https://zenn.dev/tequ/articles/xrpljs-specify-api-version</guid><pubDate>Wed, 06 Nov 2024 10:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B-KXKuO4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:xrpl.js%25E3%2581%25A7API%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tequ%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lvSjhtbzdCYjZmVkU1b2tsZno4TUtXVUxvN2NfYm5oQTlsc01oPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tequ</dc:creator></item><item><title><![CDATA[CLIとMakefileで作る、データマイグレーションスクリプト入門]]></title><description><![CDATA[実務でとあるCMSからGoogleCloudへの移行を担当した時に、移行スクリプトをCLIにしたら捗ったので、共有します

 対象読者
異なるシステム間でのデータマイグレーションに興味がある人

 データマイグレーションの型
データのマイグレーションは、複数のオペレーションを組み合わせて実行します
オペレーションの基本の型は３つです
本当に３つで完結するのでしょうか？
とあるCMSからFirestoreにデータをマイグレーションしてみます

CMSからデータをエクスポート
Firestoreのフォーマットに書き換える
Firestoreにインポートする

型通りにいけそうですね
必要に応...]]></description><link>https://zenn.dev/akira_dev/articles/48db3608b98c8f</link><guid isPermaLink="true">https://zenn.dev/akira_dev/articles/48db3608b98c8f</guid><pubDate>Wed, 06 Nov 2024 03:33:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yy60F57E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLI%25E3%2581%25A8Makefile%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2581%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akira%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2MzI2OWI2ODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akira</dc:creator></item><item><title><![CDATA[reduceを使って日付一覧から日毎の情報を作成する]]></title><description><![CDATA[こんにちは！
スペースマーケットでフロントエンドエンジニアをしているwharaguchiです。
これまで個人的に使用機会が少なかったreduceを使う機会があったため、自分の備忘録を兼ねて記事にしました。

 やりたかったこと
携わっていた施策で以下のキャプチャのような、日付毎にアコーディオンが開閉するUIを作成する必要がありました。

APIから返ってくるデータは、以下のような各日付の情報が一覧で格納された配列でした。
// 元となるデータ
const baseData = [
  {
    startedAt: "2024-10-30T10:00:00+09:00",
    ro...]]></description><link>https://zenn.dev/spacemarket/articles/cec64a21e2545a</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/cec64a21e2545a</guid><pubDate>Wed, 06 Nov 2024 00:36:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LvbmIrLZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:reduce%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2597%25A5%25E4%25BB%2598%25E4%25B8%2580%25E8%25A6%25A7%25E3%2581%258B%25E3%2582%2589%25E6%2597%25A5%25E6%25AF%258E%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wharaguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMmY1NGY2MjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wharaguchi</dc:creator></item><item><title><![CDATA[実務で使えるTypescriptの型8選]]></title><description><![CDATA[
 ひとこと
実務に組み込みやすいようにできる限り実例を用いました。react前提です。TS初学者の方の助けになれば

 解説

 テンプレートリテラル型
型安全な文字列操作を実現

 例
リテラル型で文字列を定義すれば渡した値がnumberであることを型で保証できる
const requestExternalApi = async ({
  data,
}: {
  data: {
    offset: `${number}`
    limit: `${number}`
  }
}) =&gt; {
  const res = await fetch("https://exampl...]]></description><link>https://zenn.dev/ficilcom/articles/940ecce71e45a6</link><guid isPermaLink="true">https://zenn.dev/ficilcom/articles/940ecce71e45a6</guid><pubDate>Wed, 06 Nov 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KAJsO9TJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E5%258B%2599%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258BTypescript%25E3%2581%25AE%25E5%259E%258B8%25E9%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kenya%2520hayashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3MmFmNGJkODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A3%25E3%2582%25B7%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25A0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5NzE2MGE3YzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kenya hayashi</dc:creator></item><item><title><![CDATA[Rechartsで睡眠グラフを作成する]]></title><description><![CDATA[
 はじめに
この記事では、チャートライブラリの Recharts を使って睡眠グラフを作成していきます。
公式の Examples は豊富にあるのですが、欲しかったものが無かったので紹介します。
https://recharts.org/en-US/

 作成するグラフ
今回は以下のようなグラフを作成していきます。

左から「ヘルスケア」、「MOTHER」、「Oura Ring」
睡眠の状態を4つに分けて表現します。

覚醒
レム睡眠
コア睡眠
深い睡眠


 最終的に完成するもの

最終的なコードimport { CartesianGrid, Line, LineChart, Too...]]></description><link>https://zenn.dev/kaz_z/articles/recharts-sleep</link><guid isPermaLink="true">https://zenn.dev/kaz_z/articles/recharts-sleep</guid><pubDate>Tue, 05 Nov 2024 23:03:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8xZq6M3a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Recharts%25E3%2581%25A7%25E7%259D%25A1%25E7%259C%25A0%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjZmQ0NjI5ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuho</dc:creator></item><item><title><![CDATA[実践: await using でリソース開放]]></title><description><![CDATA[
 実践
いつ使うんだこれと思ってたら使う日が来たシリーズ。
https://zenn.dev/ventus/articles/ts5_2-using-preview
今回、Deno で使ったんですが、 Node.js やブラウザでも Polyfill を入れれば動きます。
https://github.com/mizchi/play-ts-using

 try finally で puppeteer を終了したい
Deno で puppeteer を扱うために、こういうコードを書いてました。
// original
import puppeteer from "npm:puppete...]]></description><link>https://zenn.dev/mizchi/articles/practical-await-using</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/practical-await-using</guid><pubDate>Tue, 05 Nov 2024 15:48:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yc8JX2uN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E8%25B7%25B5%253A%2520await%2520using%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E9%2596%258B%25E6%2594%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[mediasoupでOBS動画配信するWebアプリを作った話]]></title><description><![CDATA[
 背景
低遅延な動画配信サーバを自分で作れないだろうか？ というモチベーションで開発を行いました。
友人とゲーム画面を共有しながら通話して遊んでいるのですが、Stream Broadcastの遅延や画質が少々ストレスだったのが発端です。

 できたもの
遅延も画質も満足できるものになりました！

配信遅延は0.6秒くらいでしょうか

トップページ

OBS設定案内付きの配信制御ページ
https://github.com/Daiius/videmus

 技術スタック
一人でフルスタック開発する関係で、両方カバーするフレームワーク/ライブラリを積極的に採用します。メジャーなもの、かつオ...]]></description><link>https://zenn.dev/daiius/articles/441f35223269a6</link><guid isPermaLink="true">https://zenn.dev/daiius/articles/441f35223269a6</guid><pubDate>Tue, 05 Nov 2024 09:18:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pe2iyo18--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:mediasoup%25E3%2581%25A7OBS%25E5%258B%2595%25E7%2594%25BB%25E9%2585%258D%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Daiius%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDJQMDBUcmhBR01Wa3RvMENTY2hJT0o2T1NBQkJqUkVQT0JPQnJjT2REeDRqbW81RFc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Daiius</dc:creator></item><item><title><![CDATA[【個人開発】webアプリ制作しました Next.js/firebase　]]></title><description><![CDATA[GitHub GistのページURLを指定してください
今回Next.jsでオリジナルアプリを制作しました。
ファッションアプリを制作しました。

 【アプリ名】ISSUN

 【URL】https://issun-app.vercel.app/top


 【github】https://github.com/nobyn0312/ISSUN_app



 コンセプト

アプリ名称の『ISSUN』は一寸法師からとりました。
低身長は洋服のサイズ選びが大変です。
最近はオーバーサイズトレンドで、少しくらい大きくても『オシャレ』で片付くようになりました。
しかし中にはオーバーサイズすぎる洋...]]></description><link>https://zenn.dev/nobyn0312/articles/ec2af209d30f0f</link><guid isPermaLink="true">https://zenn.dev/nobyn0312/articles/ec2af209d30f0f</guid><pubDate>Tue, 05 Nov 2024 08:02:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x2vHN9d2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2588%25B6%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520Next.js%252Ffirebase%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:inouenobuhide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjYzg2ZDIwODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>inouenobuhide</dc:creator></item><item><title><![CDATA[XState 入門]]></title><description><![CDATA[ゼロから XState を学べます。

【読者】
・XState の初学者
・React使いで XState に興味ある方

【特徴は】
・XState を日本語で学習できること
・TypeScript を活用した XState の利用
・最新の XState v5 の利用
・Next.js 15 の利用

【本書籍がカバーする技術】
・XState

【その他】
「いいね」してくれたらモチベーションあがります🚀 ]]></description><link>https://zenn.dev/hayato94087/books/0a206dc72782be</link><guid isPermaLink="true">https://zenn.dev/hayato94087/books/0a206dc72782be</guid><pubDate>Tue, 05 Nov 2024 01:42:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3MXgbqi5--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hMmQ5NjdjZDUzLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>hayato94087</dc:creator></item><item><title><![CDATA[Next.js 15とNextAuth.js v5で認証ミドルウェアを構築する方法]]></title><description><![CDATA[Next.js 15とAuth.js v5を使用して、認証ミドルウェアを効率的に構築する方法を解説します。この設定により、特定のルートへのアクセス制御が可能になり、未認証のユーザーがアクセスした場合は自動的にログインページにリダイレクトされます。React 19のサポートも加わり、最新のフロントエンド技術スタックを活用した堅牢なアプリケーションを構築できます。
https://authjs.dev/getting-started/migrating-to-v5

 1. 認証ミドルウェアの概要
認証ミドルウェアを設定することで、特定のルートにアクセスがあった際にユーザーのセッションをチェ...]]></description><link>https://zenn.dev/hashdev/articles/17f27b64aee35d</link><guid isPermaLink="true">https://zenn.dev/hashdev/articles/17f27b64aee35d</guid><pubDate>Mon, 04 Nov 2024 23:45:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wTFLI5F7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252015%25E3%2581%25A8NextAuth.js%2520v5%25E3%2581%25A7%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%259F%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashDev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMGM5NDQ5OWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hashDev</dc:creator></item><item><title><![CDATA[App Router（Next.js）に関する基礎知識　ルーティングについて]]></title><description><![CDATA[Next.jsはver13から「App Router」が選択できるようになりました。（以前はPages Router）
この変化によって様々な事が変わっており、
私の様な初心者は頭がごっちゃになる事が多々あります😫
私の様な方々の助けになればと思い、App Routerを理解するための基礎知識をまとめようと思いました。
まずはアプリケーションのルーティングについてです！

 Pageファイルについて
App Routerでは、「app」という特別なディレクトリに「page.tsx」というファイルを配置します。
app直下のpage.tsxと書かれたファイルだけがルーティングの対象になりま...]]></description><link>https://zenn.dev/ouseijin/articles/7a237cf4e56543</link><guid isPermaLink="true">https://zenn.dev/ouseijin/articles/7a237cf4e56543</guid><pubDate>Mon, 04 Nov 2024 03:14:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BHnWZ5VG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Router%25EF%25BC%2588Next.js%25EF%25BC%2589%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598%25E3%2580%2580%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ouseijin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YmZiZ0NNclFnWmpfQnpCWnBSSVFjLVFlQ0E2bDJWZE1rbXBpaDgwdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ouseijin</dc:creator></item><item><title><![CDATA[現場レベルのReact開発構築入門 - 導入しておくべき開発ツールの全知識]]></title><description><![CDATA[ このガイドでは、モダンなフロントエンド開発に必要な環境構築を、React開発の観点からステップバイステップで解説します。

Node.jsとnpmの基礎から始まり、Viteによるプロジェクト作成、TypeScriptの導入、ESLintとPrettierによるコード品質管理、Vitestによるテスト、Tailwind CSSの設定まで、実践的な開発環境の構築方法を学びます。

また、GitHubとGitHub Actions、Vercelを活用したモダンな開発ワークフローについても解説します。

プログラミング初心者でも理解できるよう、各ツールの役割や設定方法を丁寧に説明し、実際のプロジェクトで使える知識を提供します。

この本を通じて、Reactアプリケーション開発に必要な基礎的な開発環境を整える方法を身につけましょう。 ]]></description><link>https://zenn.dev/tmasuyama1114/books/react-setup-project</link><guid isPermaLink="true">https://zenn.dev/tmasuyama1114/books/react-setup-project</guid><pubDate>Mon, 04 Nov 2024 02:08:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZHA-z3wE--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iMjU5M2M4ZDdkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>とまだ@フルスタックWebエンジニア</dc:creator></item><item><title><![CDATA[Vitestでクラスをmockする]]></title><description><![CDATA[
 前提条件
まず、vite.config.tsでglobals: trueに設定していることを前提としています。これは、テストでグローバルにviオブジェクトを使用するための設定です。
Vitestでクラスをモックしたかったのですが、Jestと同様の方法が使えなくて困っていました。
今回はGoogleカレンダーのAPIライブラリをサンプルとして、JestとVitestでの違いを見ていきます。

 Jestでのクラスのモック
Jestでは、以下のようにクラスをモックすることができます。
import { calendar_v3 } from "@googleapis/calendar";
...]]></description><link>https://zenn.dev/1mono2/articles/2dbd8a0bd1eb0f</link><guid isPermaLink="true">https://zenn.dev/1mono2/articles/2dbd8a0bd1eb0f</guid><pubDate>Mon, 04 Nov 2024 01:23:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IiDEbuzs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vitest%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592mock%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:1mono2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dTeENxcFE2VXBZX2dJa1E4cTBmVzBEbFpMTnpIc0FoZWl1czJNaUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>1mono2</dc:creator></item><item><title><![CDATA[【無料公開】560万円かけて開発したサービスのソースコード]]></title><description><![CDATA[※月単価80万円を基準に、7ヶ月分の工数として560万円相当と換算しています。

 最初に
こんにちは！
普段はIT企業でWebエンジニアとして働いています。
現在はフリーランスとして活動し、Ruby（Ruby on Rails）、TypeScript（Next.js, React）、Pythonなどを使って、フロントエンドとバックエンドの両方に携わっています。
将来はソフトウェアエンジニアとしてアーキテクチャ・設計について自ら意思決定した上、プロジェクトを推進する事が出来るようになりたいです。
そのためさらにスキルを磨いていきたいと思っており、日々技術に対して情熱を持って仕事に取り組ん...]]></description><link>https://zenn.dev/unemployed/articles/bizrank-source-code-free</link><guid isPermaLink="true">https://zenn.dev/unemployed/articles/bizrank-source-code-free</guid><pubDate>Sun, 03 Nov 2024 23:54:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CnqBoYYy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2584%25A1%25E6%2596%2599%25E5%2585%25AC%25E9%2596%258B%25E3%2580%2591560%25E4%25B8%2587%25E5%2586%2586%25E3%2581%258B%25E3%2581%2591%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25A4%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMzZiMmE0MTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>大学生だった.</dc:creator></item><item><title><![CDATA[Expo(React Native)で環境変数を使いたいあなたへ。]]></title><description><![CDATA[
 この記事を読むとわかること・解決すること

Publicな環境変数とPrivateな環境変数を.envファイルで管理する方法
環境変数の名前の制約をなくしたい！
「EAS Buildのときになぜか、.envが読み込まれない！」

実験のために作成したリポジトリもあるので、よろしければ参考にしてみてください 👋
https://github.com/zackerms/expo-playground-credential

 [宣伝] komichi というアプリを作っています！
「どこ行こうかなぁ〜」と考えてたら休日が終わることってありませんか？
このアプリを使うと、現在地や好きな場所...]]></description><link>https://zenn.dev/dev_zacker/articles/768bd4fd0bfcad</link><guid isPermaLink="true">https://zenn.dev/dev_zacker/articles/768bd4fd0bfcad</guid><pubDate>Sun, 03 Nov 2024 12:35:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u1XgiadS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Expo%2528React%2520Native%2529%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25E3%2581%2582%25E3%2581%25AA%25E3%2581%259F%25E3%2581%25B8%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zacker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzIzN2U4ZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zacker</dc:creator></item><item><title><![CDATA[Reactで学ぶ技術習得ハンズオン - OSS探索法]]></title><description><![CDATA[
 初めに
この記事では、
「初見技術のキャッチアップの仕方・過程の一つの道標を残す」
ことに焦点を絞っています。その一例として、
Reactをゼロからキャッチアップする工程を記録しています。
　経緯として、周囲から勉強法について聞かれることがあったこと、また、過去に学習の仕方やキャッチアップのコツがわからないという経験をしており、この記事だけでは全てを伝えることは難しいのとまだ勉強中の身ではありますが、それでも少しでも雰囲気が伝わり、この記事を見た誰かの後押しになればいいなと思い作成しました。
なお、技術記事の作成は今回が初めてのため、修正点等あれば教えていただけると嬉しいです。

 ...]]></description><link>https://zenn.dev/ton68/articles/3c4ab94edd9ba4</link><guid isPermaLink="true">https://zenn.dev/ton68/articles/3c4ab94edd9ba4</guid><pubDate>Sun, 03 Nov 2024 11:56:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4JP9AxE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E6%258A%2580%25E8%25A1%2593%25E7%25BF%2592%25E5%25BE%2597%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%2520-%2520OSS%25E6%258E%25A2%25E7%25B4%25A2%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZTRjZGQ1ZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuto</dc:creator></item><item><title><![CDATA[CDKでBiomeを使う]]></title><description><![CDATA[Webバックエンドエンジニアをしている山梨といいます。
最近CDK(TypeScript)のプロジェクトにBiomeを導入したところ、かなり開発体験が良かったので紹介します。

 Biomeとは？
Biomeは、Web開発で利用する技術（JS,TS,JSON,CSSなど）を対象としたツールチェーンで、Linter, Formatterなどを提供しています。
また、Zero Config で動作するため、設定なしですぐに利用できるのが特徴です。
https://biomejs.dev/ja/

 なぜCDKにBiomeを使うのか？
CDK(TypeScript)でBiomeを使用する理由は...]]></description><link>https://zenn.dev/yamaren/articles/16578dcec33709</link><guid isPermaLink="true">https://zenn.dev/yamaren/articles/16578dcec33709</guid><pubDate>Sun, 03 Nov 2024 07:55:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l6K_wLXh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:CDK%25E3%2581%25A7Biome%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamanashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyMGUxOTkxY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamanashi</dc:creator></item><item><title><![CDATA[【TypeScript】バージョン5系でのenum変数へのnumber型の代入]]></title><description><![CDATA[
 概要
TpeScriptではTypeScript Deep Dive 日本語版のEnumの解説によると、変数自体は数値型で保持されます。元々はenumの変数に定義されてない数値を入れるとエラーにならないようですが、サバイバルTypeScript 列挙型(enum)の問題点と代替手段によると、TypeScript5からは定義されてない値を入れようとするとエラーにしてくれるそうです。今回はこの動作を少し試してみたのでメモ書きしておきます。

 前提

今回使用したTypeScriptのバージョンは5.6.3です。


 実装サンプル
まずは以下のようなenumの型と変数を用意します。
e...]]></description><link>https://zenn.dev/someone7140/articles/2f7434f967db1a</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/2f7434f967db1a</guid><pubDate>Sun, 03 Nov 2024 05:29:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G3s7KLIg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B35%25E7%25B3%25BB%25E3%2581%25A7%25E3%2581%25AEenum%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25B8%25E3%2581%25AEnumber%25E5%259E%258B%25E3%2581%25AE%25E4%25BB%25A3%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[技術的負債の発生を抑制する、UI指向アーキテクチャ]]></title><description><![CDATA[こんにちは。
株式会社 CHILLNN という京都のスタートアップにて CTO を担っております永田と申します。
本記事では、GraphQL を活用した、規模が拡大しても崩壊しづらいソフトウェアアーキテクチャについて考察していきます。
自分は普段はバックエンドを書いているのですが、先週は少し React を書いていて、その中で考えたアーキテクチャについて紹介させていただきます。

 はじめに
弊社では API として GraphQL を利用しています。
API レスポンスの型をフロントエンドと共有できるため、API 設計を行う際に UI の構成を強く意識することができます。
弊社でのバッ...]]></description><link>https://zenn.dev/chillnn_tech/articles/ui-oriented-architecture</link><guid isPermaLink="true">https://zenn.dev/chillnn_tech/articles/ui-oriented-architecture</guid><pubDate>Sat, 02 Nov 2024 19:11:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vrJlolPy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%258A%2580%25E8%25A1%2593%25E7%259A%2584%25E8%25B2%25A0%25E5%2582%25B5%25E3%2581%25AE%25E7%2599%25BA%25E7%2594%259F%25E3%2582%2592%25E6%258A%2591%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581UI%25E6%258C%2587%25E5%2590%2591%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ryoNagata001%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmODdhZGU3ZjcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BECHILLNN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5NmJkNzJjZTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryoNagata001</dc:creator></item><item><title><![CDATA[CloudFront + Lambda Function URLs + Hono + htmx でPOST/PUTリクエストに対応させる]]></title><description><![CDATA[現状、Lambda Function URL を安全に使う方法は Cloudfront の AOC と組み合わせるのが良さそうです。
https://dev.classmethod.jp/articles/aws-cdk-cloudfront-oac-lambda-function-url/
https://aws.amazon.com/jp/about-aws/whats-new/2024/04/amazon-cloudfront-oac-lambda-function-url-origins/
ただし、GET リクエストだけであれば問題ないのですが、ヘッダーにペイロードのハッシュ値の...]]></description><link>https://zenn.dev/hr20k_/articles/5c8ab3d3d163f8</link><guid isPermaLink="true">https://zenn.dev/hr20k_/articles/5c8ab3d3d163f8</guid><pubDate>Sat, 02 Nov 2024 11:56:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Lx0MLOwy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CloudFront%2520%252B%2520Lambda%2520Function%2520URLs%2520%252B%2520Hono%2520%252B%2520htmx%2520%25E3%2581%25A7POST%252FPUT...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hr20k_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNDIyY2IzNTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hr20k_</dc:creator></item></channel></rss>