<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/python/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/python/feed"/>
  <title>Pythonタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでPythonタグが付けられた新着記事</description>
  <updated>2025-04-08T20:17:08+09:00</updated>
  <link>https://qiita.com/tags/python</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2010400</id>
    <published>2025-04-08T20:17:08+09:00</published>
    <updated>2025-04-08T20:17:08+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tech-Harvest/items/98acbd35f9ee7775f8a0"/>
    <url>https://qiita.com/tech-Harvest/items/98acbd35f9ee7775f8a0</url>
    <title>【Python × tkinter】マッチした文字列だけを抽出！正規表現GUIツールを作ってみた</title>
    <content type="html">1. はじめに

開発〜記事執筆まで，ChatGPT-4oに相談しながら作りました．

背景
正規表現を使った「検出」や 検出したものを「整形」するのは多くのツールでできますが，「マッチした文字列だけを…</content>
    <author>
      <name>tech-Harvest</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2010394</id>
    <published>2025-04-08T20:01:21+09:00</published>
    <updated>2025-04-08T20:01:21+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/CRUD5th/items/5583041e3f1d251fd7c1"/>
    <url>https://qiita.com/CRUD5th/items/5583041e3f1d251fd7c1</url>
    <title>Pythonで実装するInterpreterパターン：ドメイン言語の構文解釈を実現する構造</title>
    <content type="html">概要
Interpreter（インタプリタ）パターンは、
ある言語や表現を定義し、その文法構造に基づいて文を解釈・実行するためのデザインパターンである。
主に小規模な**ドメイン固有言語（DSL）*…</content>
    <author>
      <name>CRUD5th</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2010393</id>
    <published>2025-04-08T20:00:56+09:00</published>
    <updated>2025-04-08T20:00:56+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/CRUD5th/items/6cc17457d5828c657333"/>
    <url>https://qiita.com/CRUD5th/items/6cc17457d5828c657333</url>
    <title>Pythonで実装するFlyweightパターン：インスタンスの共有によるメモリ最適化</title>
    <content type="html">概要
Flyweight（フライウェイト）パターンは、
大量に生成されるオブジェクトの中で状態が共通している部分を共有し、必要最小限のメモリ消費で動作させる構造パターンである。
特にゲーム・UI・文…</content>
    <author>
      <name>CRUD5th</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2010391</id>
    <published>2025-04-08T20:00:33+09:00</published>
    <updated>2025-04-08T20:00:33+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/CRUD5th/items/5f73fb9742b72ac24818"/>
    <url>https://qiita.com/CRUD5th/items/5f73fb9742b72ac24818</url>
    <title>Pythonで実装するDecoratorパターン：機能を包み込む拡張可能な設計</title>
    <content type="html">概要
Decorator（デコレーター）パターンは、
あるオブジェクトに対して、元のインターフェースを保ったまま、機能を段階的に追加する構造パターンである。
継承ではなく構成（composition…</content>
    <author>
      <name>CRUD5th</name>
    </author>
  </entry>
</feed>
