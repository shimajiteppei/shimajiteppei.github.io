<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/css/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/css/feed"/>
  <title>CSSタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでCSSタグが付けられた新着記事</description>
  <updated>2025-07-07T18:46:45+09:00</updated>
  <link>https://qiita.com/tags/css</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2050445</id>
    <published>2025-07-07T18:46:45+09:00</published>
    <updated>2025-07-07T18:46:45+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/pompompurin2526/items/b63272a0778f580ef313"/>
    <url>https://qiita.com/pompompurin2526/items/b63272a0778f580ef313</url>
    <title>CSSのmin()・max()について</title>
    <content type="text">min(A, B)

A と B のうち、小さい方の値を採用するので、最大値をとることができる。

min（calc(70vw / 3.9),70px）

の場合、どんなに画面が大きくなっても、この要素は70pxより大きくならないということです。
言い換えると、
「ある...</content>
    <author>
      <name>pompompurin2526</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2050414</id>
    <published>2025-07-07T17:13:39+09:00</published>
    <updated>2025-07-07T17:13:39+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/rtkjm22/items/f53473c73dd0c937c9b7"/>
    <url>https://qiita.com/rtkjm22/items/f53473c73dd0c937c9b7</url>
    <title>TypeScriptだけで「なんちゃってOS」を作ってみた【コードあり】</title>
    <content type="text">はじめに
ふと、「OSっぽいものって、TypeScriptだけで作れたりしないかな？」と思って、実際に作ってみました。

本物のOSとは違いますし、あくまでブラウザ上で動く なんちゃってOS です。
実行環境はあくまでブラウザですし、「OSって呼ぶには甘すぎる！」という...</content>
    <author>
      <name>rtkjm22</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2050207</id>
    <published>2025-07-07T10:09:19+09:00</published>
    <updated>2025-07-07T10:09:19+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kuragechan_1001/items/4bb74aeef783569984b0"/>
    <url>https://qiita.com/kuragechan_1001/items/4bb74aeef783569984b0</url>
    <title>【placeholderに色をるける方法】</title>
    <content type="text">CSSの疑似要素::placeholderを使うと、やのプレースホルダーの色を変更することができる。
＜SCC&amp;gt;

.content::placeholder {
  color:red;
}

＜HTML&amp;gt;</content>
    <author>
      <name>kuragechan_1001</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2050206</id>
    <published>2025-07-07T10:08:15+09:00</published>
    <updated>2025-07-07T10:08:15+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kuragechan_1001/items/606011de1c744c08881a"/>
    <url>https://qiita.com/kuragechan_1001/items/606011de1c744c08881a</url>
    <title>【CSSの基本】</title>
    <content type="text">CSSの基本的な書き方。
セレクタにはデザイン変更の適用先を書く。プロパティのところには背景であったり、文字の大きさ等セレクタで指定された部分の何を変えるのかを決める。
値ではどのように見た目を変えるのかを書く。
セレクタ {
プロパティ：値
}

セレクタはa{〜}やdi...</content>
    <author>
      <name>kuragechan_1001</name>
    </author>
  </entry>
</feed>
