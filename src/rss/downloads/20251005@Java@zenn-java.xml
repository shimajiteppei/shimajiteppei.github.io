<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 05 Oct 2025 12:04:18 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[スタック・キュー・デック・優先度付きキュー[Java]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
Javaのデータ構造について知りたい方


 記事のテーマ

「AtCorder」のために、アルゴリズムとデータ構造の勉強をはじめました
本記事では、代表的なデータ構造であるスタック、キ...]]></description><link>https://zenn.dev/wakinoza/articles/4c519e232833a4</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/4c519e232833a4</guid><pubDate>Sat, 04 Oct 2025 11:55:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vgKzPfPC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25BB%25E5%2584%25AA%25E5%2585%2588%25E5%25BA%25A6%25E4%25BB%2598%25E3%2581%258D%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%255BJava%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2ZTk5ZTMzNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[DAOとは？SwiftやFlutter/Dartをもとに改めて整理してみた]]></title><description><![CDATA[
 はじめに

普段は Swift や Flutter を使っていると「DAO」という言葉をあまり耳にしない
でも Java を勉強していたときにはよく出てきて「なんだっけ？」となりがち
そこで今回は DAO（Data Access Object） について整理してみました



 DAO（Data Access Object）とは

データベースとアプリケーションのやり取りを分離する設計パターン
役割：DBにアクセスする処理（SQLやクエリ）を専用のクラスにまとめる
メリット：

コードの責務分離
修正が楽になる（DB処理が1か所にまとまる）
テストしやすい（DAOをモック化できる）
...]]></description><link>https://zenn.dev/hayate_doc/articles/530cc385827819</link><guid isPermaLink="true">https://zenn.dev/hayate_doc/articles/530cc385827819</guid><pubDate>Sat, 04 Oct 2025 09:33:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uQr60kx6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DAO%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FSwift%25E3%2582%2584Flutter%252FDart%25E3%2582%2592%25E3%2582%2582%25E3%2581%25A8%25E3%2581%25AB%25E6%2594%25B9%25E3%2582%2581%25E3%2581%25A6%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A3%25E3%2581%258D%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhMmEyNWY5OTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>かっきー</dc:creator></item><item><title><![CDATA[PHPは型がない？？？]]></title><description><![CDATA[
 プログラマーが発言すること
いきなりですが、プログラマーとかがよく言う発言といえば...
「TypeScriptは型があって...」
「TypeScriptはJavaScriptの上位互換であって...」
「PHPはゴミだし...」
「Vueは最高～！」
「Python読みにくい」
「Javaは冗長すぎる」
・・・ひどいですね←
https://zenn.dev/takoserver/articles/7a624e38285b16
ほら、この方なんか「PHPは論外」と言っちゃってます。。。
PHPプログラマーとしては許せない言い分ですね！！！！！

 PHPにも型があります
ほら、な...]]></description><link>https://zenn.dev/blitzlog/articles/5659c9cdef962d</link><guid isPermaLink="true">https://zenn.dev/blitzlog/articles/5659c9cdef962d</guid><pubDate>Fri, 03 Oct 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DO5QLBjM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PHP%25E3%2581%25AF%25E5%259E%258B%25E3%2581%258C%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25EF%25BC%259F%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:BlitZlog%2520%255B%25E3%2582%2586%25E3%2583%25BC%255D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVBNU5IZnVEbU5TREJsQ283UUlHejdzNzEyTGNMalJ1dm9kUU4xb2xOcTE5anBpMGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>BlitZlog [ゆー]</dc:creator></item><item><title><![CDATA[aShot で簡単にVRTを行う]]></title><description><![CDATA[
 前置き
この記事は以下二つの知識があればより有効に活用しやすいです。ぜひ読んでいただければ。
Playwright（Java）の基礎知識：https://zenn.dev/izumi_ren/articles/aa3aa432f33b69
Playwright + JUnit の書き方：https://zenn.dev/izumi_ren/articles/07d6906e23f6cd
また、Java（Spring）のアプリを前提としています。

 aShotの導入
aShotは画像比較ができるOSSです。かなり簡単に導入できます。
pom.xml
&lt;dependency&gt...]]></description><link>https://zenn.dev/izumi_ren/articles/f5e166a9b3e7df</link><guid isPermaLink="true">https://zenn.dev/izumi_ren/articles/f5e166a9b3e7df</guid><pubDate>Fri, 03 Oct 2025 04:29:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cPWO5INa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:aShot%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVRT%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2592%258C%25E6%25B3%2589%25E6%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3gyWjh3X2lsOHRVNERtV0ZMclZGanp0LUF3bVB6SXgweExWY1N1SV80dDRwak5fVXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>和泉怜</dc:creator></item><item><title><![CDATA[なぜ、JavaScriptこそが現在最強のWORA言語なのか？]]></title><description><![CDATA[
 はじめに
「Write Once, Run Anywhere（WORA）」という言葉は1990年代にJavaが掲げた理念でした。一度書いたコードが、どんな環境でもそのまま動くという理想は、当時の開発者にとって大きな夢でした。ところが2020年代を迎えた現在、その理念を最も現実的に体現しているのはJavaではなくJavaScriptです。
JavaScriptは1995年に誕生したときには「ブラウザ上の簡易スクリプト」に過ぎませんでした。しかし時代を経るごとに進化し、Webを超えてサーバー、デスクトップ、モバイルへと拡大し、いまや社会全体を支えるプラットフォーム言語となりました。加えて...]]></description><link>https://zenn.dev/pdfractal/articles/464a0742526587</link><guid isPermaLink="true">https://zenn.dev/pdfractal/articles/464a0742526587</guid><pubDate>Fri, 03 Oct 2025 03:33:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O-kO6kRL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E3%2580%2581JavaScript%25E3%2581%2593%25E3%2581%259D%25E3%2581%258C%25E7%258F%25BE%25E5%259C%25A8%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AEWORA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pdfractal%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZmJkZmFkY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>pdfractal</dc:creator></item><item><title><![CDATA[JavaSilver取得に向けて②]]></title><description><![CDATA[こんにちは。
オアシステクノロジーズの中村です。
本日もJavaSilverの問題を解いてみたいと思いますが、その前に前回の試験結果を置いておきます。

ほぼノー勉でも半分は取れてたので勉強すれば次回はいけそう感が出てきますね！
前回は基礎問題でしたが、今回からはトピックごとに問題を解いていこうと思います。

 ☕【Java Silver模擬問題】配列・static・main・varに関する10問！
Java Silverの試験範囲から、特によく出る次の5テーマをピックアップして、各2問ずつ解説つきで紹介します！


 🔹 1. 一次元配列の宣言、インスタンス化、初期化および使用

 ✅...]]></description><link>https://zenn.dev/oasys/articles/43f1fcd0a0bb81</link><guid isPermaLink="true">https://zenn.dev/oasys/articles/43f1fcd0a0bb81</guid><pubDate>Fri, 03 Oct 2025 01:11:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--drOkYxop--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaSilver%25E5%258F%2596%25E5%25BE%2597%25E3%2581%25AB%25E5%2590%2591%25E3%2581%2591%25E3%2581%25A6%25E2%2591%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25AF%25E3%2583%258E%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%25BC%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMGUxYmY0YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>オアシステクノロジーズ</dc:creator></item><item><title><![CDATA[Javaについて学ぶ-その２]]></title><description><![CDATA[
 はじめに
こんにちは。
今回も、Javaについて学んでいきましょう。
文字前回の記事を見ていない方は、こちらもぜひご覧ください。
https://zenn.dev/articles/a774851b2a079c
それでは、初めていきましょう。

 挨拶をしてみよう
今回の課題はこれです。Javaを使ってパソコンが挨拶をしてくれるようにしましょう。
Zedの右側にバーがあると思います。

右クリックして、New FileをクリックしてGreeting.javaと入力します。
public class Greeting {

    public static void main(Str...]]></description><link>https://zenn.dev/sudossdc/articles/238c44a72f46aa</link><guid isPermaLink="true">https://zenn.dev/sudossdc/articles/238c44a72f46aa</guid><pubDate>Fri, 03 Oct 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8gSdnXSX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6-%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGRnSEZkcDRxSWpBclVXNldKRFE4Z0Q0dTBoTTlzVWo0ZDdidmRmQ1hoeDF4WGhycGQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Tomoya</dc:creator></item><item><title><![CDATA[JavaのStreamAPIについてまとめてみた]]></title><description><![CDATA[
 はじめに
n番煎じかわかりませんが、Java8以降を使う上で高頻度で使うなぁと思い、自分用という意味も込めてStreamAPIについてまとめました。ラムダ式やStreamAPIについての基本的な概要は先人の方が詳しく紹介していらっしゃると思いますのでそれぞれの基本操作などを書き留めていきます！

 filter() - 条件に合う要素だけを抽出
List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

// 偶数だけを抽出
List&lt;Integer&gt; evenNumbers =...]]></description><link>https://zenn.dev/mavericks/articles/7358f9172a3ef3</link><guid isPermaLink="true">https://zenn.dev/mavericks/articles/7358f9172a3ef3</guid><pubDate>Thu, 02 Oct 2025 06:45:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_JT4oWI4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AEStreamAPI%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25A4%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI1MTJhYTNiYzQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2599%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgxZjg1Zjg4MTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>クロダイ</dc:creator></item><item><title><![CDATA[Javaについて学ぶ-その１]]></title><description><![CDATA[
 はじめに
こんにちは。今回から、何回かに分けてJavaについて解説しならが皆さんと一緒に学んでいこうと思います。
そもそも、プログラミングを触ったことがないという方やArduinoなどの電子工作でしかプログラミングを触ったことのない方もわかるように解説していくので、一緒に頑張りましょう。
私は、このサイトで皆さんと一緒に日本のITを強くしていきたいと思っています。もし、共感していただける方はぜひ、バッジなどで応援していただけると助かります。
それでは始めていきましょう。

 Javaとは
そもそも、Javaと聞くと何を思い浮かべるでしょうか？
☕️のロゴを思い浮かべる方もいると思いま...]]></description><link>https://zenn.dev/sudossdc/articles/a774851b2a079c</link><guid isPermaLink="true">https://zenn.dev/sudossdc/articles/a774851b2a079c</guid><pubDate>Thu, 02 Oct 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PjQaBFVV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6-%25E3%2581%259D%25E3%2581%25AE%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGRnSEZkcDRxSWpBclVXNldKRFE4Z0Q0dTBoTTlzVWo0ZDdidmRmQ1hoeDF4WGhycGQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Tomoya</dc:creator></item><item><title><![CDATA[Windows でも快適 Java 開発 - SDKMAN! でスマートなバージョン管理]]></title><description><![CDATA[
 はじめに
「新しいプロジェクトのために Java 21 が必要だけど、今の環境は Java 8...」
「複数の Java バージョンを切り替えながら開発するのが面倒...」
Windows で Java 開発をしていると、こんな悩みにぶつかることはありませんか？
この記事では、そんな悩みを解決してくれる最高のツール SDKMAN! を、Windows 環境で使うための方法を丁寧に解説します。公式サイトは次の URL にあります。

https://sdkman.io/

SDKMAN! はもともと Linux や macOS 向けのツールですが、いくつかのステップを踏むだけで、Wi...]]></description><link>https://zenn.dev/hiro345/articles/20251001_win_sdkman</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20251001_win_sdkman</guid><pubDate>Wed, 01 Oct 2025 09:39:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0bIou01B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%2520%25E3%2581%25A7%25E3%2582%2582%25E5%25BF%25AB%25E9%2581%25A9%2520Java%2520%25E9%2596%258B%25E7%2599%25BA%2520-%2520SDKMAN%2521%2520%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AA%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[Playwright（Java）を最低限使えるようになる記事]]></title><description><![CDATA[
 環境セットアップ
まず、Playwrightを使用するためにMavenまたはGradleに依存関係を追加します。
（JUnitも使います）
Maven（pom.xml）の場合:
&lt;dependency&gt;
    &lt;groupId&gt;com.microsoft.playwright&lt;/groupId&gt;
    &lt;artifactId&gt;playwright&lt;/artifactId&gt;
    &lt;version&gt;1.52.0&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&g...]]></description><link>https://zenn.dev/izumi_ren/articles/aa3aa432f33b69</link><guid isPermaLink="true">https://zenn.dev/izumi_ren/articles/aa3aa432f33b69</guid><pubDate>Tue, 30 Sep 2025 08:50:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oIoit83z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25EF%25BC%2588Java%25EF%25BC%2589%25E3%2582%2592%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2592%258C%25E6%25B3%2589%25E6%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3gyWjh3X2lsOHRVNERtV0ZMclZGanp0LUF3bVB6SXgweExWY1N1SV80dDRwak5fVXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>和泉怜</dc:creator></item><item><title><![CDATA[Linux 使いになりたい人のための Java 開発時に知っておきたいこと - 2025年度版]]></title><description><![CDATA[
 はじめに
本記事は、以前に書いた次の記事が古くなったので、その更新版を 2025 年度版として作成したものです。2025年9月に Java 25 がリリースされて選択肢が増えたということもあります。なお、説明内容に大きな変更はありませんので、あらかじめ、ご了承ください。

さて、プログラミング言語 Java の開発環境を構築にあたっては、使用する Java の種類とバージョンを最初に決めることになります。ただし、決めるにあたって必要な前提知識が結構多いです。特に、Java の場合は、最近あった何度かのライセンス変更で複雑な事情になっているように見えます。
ということで、ここでは Ja...]]></description><link>https://zenn.dev/hiro345/articles/20250929_java_2025</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250929_java_2025</guid><pubDate>Mon, 29 Sep 2025 11:39:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hmd1VARJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Linux%2520%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Java%2520%25E9%2596%258B%25E7%2599%25BA%25E6%2599%2582%25E3%2581%25AB%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2520-%25202025%25E5%25B9%25B4%25E5%25BA%25A6%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[VS Code + Docker で Java 開発 - Spring Boot (Maven/Gradle)]]></title><description><![CDATA[
 はじめに
この記事は「VS Code + Docker + Gemini CLI で Java 開発（Maven 版）」の続きです。前回は、伝統的な Maven プロジェクトの構築と開発サイクルについて解説しました。

今回はその発展形として、モダンな Java アプリ開発のデファクトスタンダードである Spring Boot フレームワークを導入します。本記事では、ビルドツールが異なる 2 つのサンプルプロジェクトを通して、Spring Boot の強力な機能と、Maven と Gradle それぞれでのプロジェクト管理方法を探ります。


java-app004: Maven を...]]></description><link>https://zenn.dev/hiro345/articles/20250927_vscode_java_05</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250927_vscode_java_05</guid><pubDate>Sun, 28 Sep 2025 09:07:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t2pLw2OV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520%252B%2520Docker%2520%25E3%2581%25A7%2520Java%2520%25E9%2596%258B%25E7%2599%25BA%2520-%2520Spring%2520Boot%2520%2528Maven%252FGradle%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[DDDとクリーンアーキテクチャをはじめよう-Java編]]></title><description><![CDATA[
 背景
ども！池田(ikedadada)です！前回はGolang編でDDD＋クリーンアーキテクチャの設計と実装方針をまとめました。本記事では、同じTodo
APIをJava（Spring Boot + JDBC + MySQL）で組むときのキーポイントを紹介します。
https://github.com/ikedadada/start-ddd-and-clean-architecture
!
Java編も「依存は内向き」「ユースケース中心」というシリーズの骨格はそのままです。言語やFWが抱える制約をどこに閉じ込めるかを意識しながら、Node.js編やGo編、Python編で紹介した工夫...]]></description><link>https://zenn.dev/poporo/articles/20250928_1_start_ddd_and_clean_architecture_java</link><guid isPermaLink="true">https://zenn.dev/poporo/articles/20250928_1_start_ddd_and_clean_architecture_java</guid><pubDate>Sun, 28 Sep 2025 02:31:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6eU7U3TE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DDD%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586-Java%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikedadada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzYjczNjc4ZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ikedadada</dc:creator></item><item><title><![CDATA[Springの@Transactionalアノテーションの挙動について]]></title><description><![CDATA[
 TL;DR
Spring Bootで@Transactionalを使い、repositoryをautowiredせずに直接SQLでinsertする場合の動作を調査し、PostgreSQL環境で実際に検証してみました。DataSourceUtils.getConnection()を使えばトランザクション管理が正しく動作することを確認できます。

 はじめに
Spring Bootで開発していて、@Transactionalアノテーションの挙動について疑問に思うことがありました。
特に「repositoryをautowiredしないで直接SQLを実行する場合でも、@Transaction...]]></description><link>https://zenn.dev/ryugen04/articles/20250927-java-transactional-final</link><guid isPermaLink="true">https://zenn.dev/ryugen04/articles/20250927-java-transactional-final</guid><pubDate>Sat, 27 Sep 2025 14:02:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QZdveWT5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%25E3%2581%25AE%2540Transactional%25E3%2582%25A2%25E3%2583%258E%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryugen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzY2MxOTQzYjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ryugen</dc:creator></item><item><title><![CDATA[Java 仮想マシンを自作したい全ての方々へ]]></title><description><![CDATA[
 はじめに

 祝！ Java 25 リリース
先日（2025年9月16日），Java 25 がリリースされたことは，Java を愛する皆々様ならご存知のことかと思います。
特に，このバージョンは Java 21 に続く 2 年ぶりの長期サポート（LTS;Long-Term Support）版であり，企業利用においても安心して使えるバージョンとして今後の普及が見込まれています。
前バージョンとの比較や注目の点に関しては，Qiita の方に良い記事がありましたので，そちらをご参照ください。
https://qiita.com/nowokay/items/7e05b4c42ded043a2...]]></description><link>https://zenn.dev/peyang/articles/making-jvm-knowledges</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/making-jvm-knowledges</guid><pubDate>Sat, 27 Sep 2025 08:10:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fKTDvdkU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E4%25BB%25AE%25E6%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E6%2596%25B9%25E3%2580%2585%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[【ミニマルな】 Java 仮想マシンを自作したい全ての方々へ]]></title><description><![CDATA[
 はじめに
この記事は，Java 仮想マシンを自作したい全ての方々へ の子記事のようななものです。
上記の記事では，JVM の実装に必要な知識をまとめましたが，実際に JVM を実装するのは大変なことです。
そこで，JVM の実装を ４段階にレベル分けして，それぞれの概要を述べました。
この記事では，その中で最も簡単な「実装レベル2: 基本的な機能を備えたミニマルな JVM」を実装するために必要な知識とリソースをまとめます。
なお，この記事も，JVM を自作するための詳細な手順やチュートリアルを提供するものではありません。

 実装レベル2: 基本的な機能を備えたミニマルな JVM と...]]></description><link>https://zenn.dev/peyang/articles/making-jvm-knowledges-lv-2-minimal</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/making-jvm-knowledges-lv-2-minimal</guid><pubDate>Sat, 27 Sep 2025 08:10:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OS2kgYHp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%259F%25E3%2583%258B%25E3%2583%259E%25E3%2583%25AB%25E3%2581%25AA%25E3%2580%2591%2520Java%2520%25E4%25BB%25AE%25E6%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E6%2596%25B9%25E3%2580%2585%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[【超簡単な】 Java 仮想マシンを自作したい全ての方々へ]]></title><description><![CDATA[
 はじめに
この記事は，Java 仮想マシンを自作したい全ての方々へ の子記事のようななものです。
上記の記事では JVM の実装に必要な知識をまとめましたが，実際に JVM を実装するのは大変なことです。
そこで，JVM の実装を ４段階にレベル分けして，それぞれの概要を述べました。
この記事では，その中で最も簡単な「実装レベル1: 命令を解釈して実行する超簡単な JVM」を実装するために必要な知識とリソースをまとめます。
なお，この記事も，JVM を自作するための詳細な手順やチュートリアルを提供するものではありません。

 実装レベル1: 命令を解釈して実行する超簡単な JVM と...]]></description><link>https://zenn.dev/peyang/articles/making-jvm-knowledges-lv-1-interpreter</link><guid isPermaLink="true">https://zenn.dev/peyang/articles/making-jvm-knowledges-lv-1-interpreter</guid><pubDate>Sat, 27 Sep 2025 08:10:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QW5Ut6Ps--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2580%2591%2520Java%2520%25E4%25BB%25AE%25E6%2583%25B3%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E5%2585%25A8%25E3%2581%25A6%25E3%2581%25AE%25E6%2596%25B9%25E3%2580%2585%25E3%2581%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BA%25E3%2582%2584%25E3%2582%2593%25E3%2581%2590%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS1sYWswV1I1UzlCc3VjNEkwLVFMNjVQQWQzQzdIcWJvT2R0MTd5QXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぺやんぐ</dc:creator></item><item><title><![CDATA[Swingのレイアウトマネージャー<後編>[Java]]]></title><description><![CDATA[
 はじめに
こんにちは。
プログラミング初心者wakinozaと申します。
Java勉強中に調べたことを記事にまとめています。
十分気をつけて執筆していますが、なにぶん初心者が書いた記事なので、理解が浅い点などあるかと思います。
間違い等あれば、指摘いただけると助かります。
記事を参考にされる方は、初心者の記事であることを念頭において、お読みいただけると幸いです。

 対象読者

Javaを勉強中の方
Swingのレイアウトマネージャーについて知りたい方


 記事のテーマ


SwingでGUIアプリケーションを作った際に、コンポーネントの配置が思うようにならなくて苦労しました。Sw...]]></description><link>https://zenn.dev/wakinoza/articles/e847a1021df627</link><guid isPermaLink="true">https://zenn.dev/wakinoza/articles/e847a1021df627</guid><pubDate>Sat, 27 Sep 2025 06:44:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GL8Em_d1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Swing%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%253C%25E5%25BE%258C%25E7%25B7%25A8%253E%255BJava%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakinoza%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E2ZTk5ZTMzNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>wakinoza</dc:creator></item><item><title><![CDATA[java getOrDefaultメモ]]></title><description><![CDATA[
 はじめに
Java 8 以降、Map インターフェースに便利なメソッドがいくつか追加されました。その中でも、よく使われるのが getOrDefault です。

 getOrDefault とは？

getOrDefault は、指定したキーが存在する場合はその値を返し、存在しない場合はデフォルト値を返してくれるメソッドです。
シグネチャは以下の通りです：
V getOrDefault(Object key, V defaultValue)
key : 取得したいキー
defaultValue : キーが存在しなかった場合に返す値

 簡潔な例：数字リストの出現回数を数える
impo...]]></description><link>https://zenn.dev/maru8118/articles/2f77fa62a4b6f2</link><guid isPermaLink="true">https://zenn.dev/maru8118/articles/2f77fa62a4b6f2</guid><pubDate>Sat, 27 Sep 2025 04:02:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q97CXy1l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:java%2520getOrDefault%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:marus8118%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkYjllYmNlNWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>marus8118</dc:creator></item></channel></rss>