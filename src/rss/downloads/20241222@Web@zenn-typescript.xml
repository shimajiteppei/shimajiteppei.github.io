<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 22 Dec 2024 00:14:38 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[アプリケーションコードの構造によってテストコードをどう書くか]]></title><description><![CDATA[!
この記事はSmartHR Advent Calendar 2024 シリーズ2の22日目の記事です。


 はじめに
本記事ではアプリケーションコードの構造によってどのようにテストコードを書くかを紹介します。題材として外部のWebサービスが提供するSDKに依存したアプリケーションを作る例で記載します。
アプリケーションの実装にはReactを使用してTypeScriptで記述します。
テストに使用するライブラリはVitestと@testing-library/reactです。
コードの書き方に焦点を当てますので、テスト環境の設定をどのように行うかは公式のドキュメントなどを参考にしてくだ...]]></description><link>https://zenn.dev/ushiboy/articles/26f15653fda410</link><guid isPermaLink="true">https://zenn.dev/ushiboy/articles/26f15653fda410</guid><pubDate>Sun, 22 Dec 2024 00:10:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GWN06OeM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AB%25E3%2582%2588%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E3%2581%25A9%25E3%2581%2586%25E6%259B%25B8%25E3%2581%258F%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ushiboy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dncVNac1hESHBGaXo4Yi1mbmFzTlgzY01BdVl0VjlOZXZoQzhIQklVPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ushiboy</dc:creator></item><item><title><![CDATA[TypeScriptで 数値列挙型 メンバー（文字列） と 値（数値） を相互変換する]]></title><description><![CDATA[
 実現したいこと
TypeScript の 数値列挙型 で以下を実現したい

enum のメンバーから値を取得
enum の値からメンバーを取得

動機


相互変換が必要になった背景
バックエンドとクライアント（App/Web）間の通信を仲介する BFF 層において発生。


具体的な仕様
バックエンドのスキーマ定義ファイルから TypeScript コードを自動生成するライブラリでは、enum が数値列挙型として生成される仕様だった。


課題

上述の仕様により、バックエンドから受け取る enum 値は数値として扱われる。
一方、クライアントは enum メンバー（文字列）を期待...]]></description><link>https://zenn.dev/rin0107/articles/ef94536e49d383</link><guid isPermaLink="true">https://zenn.dev/rin0107/articles/ef94536e49d383</guid><pubDate>Sat, 21 Dec 2024 17:37:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wZC7iqQN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%2520%25E6%2595%25B0%25E5%2580%25A4%25E5%2588%2597%25E6%258C%2599%25E5%259E%258B%2520%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25EF%25BC%2588%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25EF%25BC%2589%2520%25E3%2581%25A8%2520%25E5%2580%25A4%25EF%25BC%2588%25E6%2595%25B0%25E5%2580%25A4%25EF%25BC%2589%2520%25E3%2582%2592%25E7%259B%25B8%25E4%25BA%2592%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhYmNkNzE5YmUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>りん</dc:creator></item><item><title><![CDATA[NestJSを1年間使ってみての感想]]></title><description><![CDATA[
 はじめに
今年NestJSを使用してバックエンド開発を行ったのでその感想と簡単にNestJSについて記事にしました。開発したものは主に下記になります。1年間NestJSと共に駆け抜けました。

各種API
バッチ処理
SQSを使った非同期処理

私は都内でフリーランスのエンジニアをしています。
プロフィールはこちら。

 NestJSについて簡単に
ChatGPTに聞いてみたら下記のように説明が返ってきました。

NestJSは、Node.jsをベースとしたサーバーサイドアプリケーションフレームワークです。TypeScriptで書かれており、モジュール性、スケーラビリティ、拡張性を備...]]></description><link>https://zenn.dev/shota_web305/articles/3e285aa167bd85</link><guid isPermaLink="true">https://zenn.dev/shota_web305/articles/3e285aa167bd85</guid><pubDate>Sat, 21 Dec 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nPpO7THv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%25E3%2582%25921%25E5%25B9%25B4%25E9%2596%2593%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25AE%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kikiWeb305%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmOWE5NzFkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kikiWeb305</dc:creator></item><item><title><![CDATA[Discordで管理者以外が招待リンクを貼ると例外なく削除してくれるボットを作った]]></title><description><![CDATA[
 Discordで管理者以外が招待リンクを貼ると例外なく削除してくれるボットを作った
ある時、自分は思いました。 荒らし対策ボットの招待リンクブロックって糞じゃね？ と...
短縮URLだと送信できてしまったり、全角だと送信できてしまったり、色々抜け穴を発見しました。
既存のボットを探すのもいいですが、自分は面倒くさがりなので、作ってみました。
ちなみにOSSです。この解説で満足できない方は是非コードを見てください。
追加機能の案がある方はPull Requestやissueにて教えてください。

https://github.com/ROBOTofficial/DiscordInvi...]]></description><link>https://zenn.dev/robot/articles/588352b0fbf51c</link><guid isPermaLink="true">https://zenn.dev/robot/articles/588352b0fbf51c</guid><pubDate>Sat, 21 Dec 2024 14:40:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q1lknY8G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Discordw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ROBOT%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpMSG9QQkFucFdvMkJDM1NoNy1vX3Mzc1lPMDlZVDNNbXpTMG5SM0Yxd0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ROBOT</dc:creator></item><item><title><![CDATA[既存の Vite + React プロジェクトに TanStack Router をあとから導入する]]></title><description><![CDATA[!
この記事は、Single Page Application (SPA) のシンプルな React アプリに TanStack Router を導入する話であり、React Router からの乗り換え記事ではない。


 はじめに
Vite + React で作った単一ページのサイトを拡張する必要が出てきたので、そのためルーティングを実装したい。
このルーティングをやってくれるライブラリとして TanStack Router というものがあり、以前から気になっていたので使ってみることにした。
https://tanstack.com/router/latest
だが、まっさらな状態か...]]></description><link>https://zenn.dev/huyu_kotori/articles/2024-12-12-1-tanstack-router</link><guid isPermaLink="true">https://zenn.dev/huyu_kotori/articles/2024-12-12-1-tanstack-router</guid><pubDate>Sat, 21 Dec 2024 14:00:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y6AKxzCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%2520Vite%2520%252B%2520React%2520%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AB%2520TanStack%2520Router%2520%25E3%2582%2592%25E3%2581%2582%25E3%2581%25A8%25E3%2581%258B%25E3%2582%2589%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takanari%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNmVjZmVhMmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E4%25B8%258D%25E9%2581%258A%25E5%25B0%258F%25E9%25B3%25A5%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmNDg2NWU2NGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takanari</dc:creator></item><item><title><![CDATA[エディタに優しいHonoのコードを考える]]></title><description><![CDATA[本稿はHono Advent Calendar 2024の21日目の記事です。

 はじめに
Hono RPCを使っていると、アプリケーションが大きくなるにつれクライアント側のコードを書くときにエディタの処理が重くなることが知られています。具体的には、補完候補が表示されるまで秒単位で待たされたりします。Xで「hono rpc 重い」などで検索してみるといくつかひっかかります。現時点での最も効果的なこれの解決策は、事前に型をコンパイルして使うことです[1]。
しかし、クライアント側に関してはこれで解決するものの、バックエンド側も普通に重たくなります。アプリケーションが肥大化してくると、エン...]]></description><link>https://zenn.dev/mshaka/articles/ec5c1e275cd207</link><guid isPermaLink="true">https://zenn.dev/mshaka/articles/ec5c1e275cd207</guid><pubDate>Sat, 21 Dec 2024 12:40:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZfqY-Awu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%25AB%25E5%2584%25AA%25E3%2581%2597%25E3%2581%2584Hono%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2581%25A8%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q2MGMxZmFkMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほとけ</dc:creator></item><item><title><![CDATA[Vanilla Extract を使った多次元スタイルバリアントの活用]]></title><description><![CDATA[
 Vanilla Extract を使った多次元スタイルバリアントの活用

 はじめに
モダンなフロントエンド開発では、一貫性と拡張性を維持するためにデザインシステムを効果的に管理することが重要です。Vanilla Extractは、TypeScriptで型安全なCSSを扱えるライブラリで、こうした課題を解決する強力なツールを提供します。この記事では、Vanilla ExtractのstyleやstyleVariantを使って、多次元スタイルバリアントを効率的に作成する方法を解説します。
まず、典型的なデザインシステムを表現するサンプルデータを作成し、属性の組み合わせに基づいてスタイル...]]></description><link>https://zenn.dev/shibasawa/articles/d537918a750625</link><guid isPermaLink="true">https://zenn.dev/shibasawa/articles/d537918a750625</guid><pubDate>Sat, 21 Dec 2024 10:53:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uw0eeFF---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vanilla%2520Extract%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%25A4%259A%25E6%25AC%25A1%25E5%2585%2583%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2590%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258A%259D%25E6%25B2%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZWYzNzdlMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>芝沢</dc:creator></item><item><title><![CDATA[Cloudflare Pages Functionで型安全なHTMLテンプレートとしてTSXを使う]]></title><description><![CDATA[
 デモ
デモページを作成しました。以下のURLからアクセスできます。各ページはリクエストの都度サーバーサイドでレンダリングしています。
https://contoso-japan.pages.dev
GitHubリポジトリ
https://github.com/moutend/rendering-tsx-files-on-cloudflare-pages-function

 目的
Cloudflare Pagesの低いコストと運用の手軽さを生かしつつWebサイトを構築するのが目的です。さらに追加で以下の要件も満たす手段を検討しました。

リクエストの都度サーバーサイドでHTMLをレン...]]></description><link>https://zenn.dev/moutend/articles/c1f5c63cbd83f3</link><guid isPermaLink="true">https://zenn.dev/moutend/articles/c1f5c63cbd83f3</guid><pubDate>Sat, 21 Dec 2024 09:41:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0eVbfMbE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Pages%2520Function%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AAHTML%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6TSX%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshiyuki%2520Koyanagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2luT1BUc1lmTWF3NkFTeUViN24wS2cza184NktOcDh0WUtIbGh0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshiyuki Koyanagi</dc:creator></item><item><title><![CDATA[OSSコントリビュート、意外と簡単説]]></title><description><![CDATA[大学4年生のkawaiです！
憧れだったOSSコントリビュートをすることができたので共有したいと思います。

 概要
今回コントリビュートしたのは日本初のUIライブラリ「Yamada UI」です
https://yamada-ui.com/ja
https://x.com/hirotomoyamada/status/1738868143949508785

 OSSコミット、チャレンジしてみるか、、
一年ほど前にリリースされ、「なんだか凄そう、、」と思って、Hiroto YamadaさんのXをフォローしていました。
フォローしていると時々以下のようなポストが流れてきます。恐らく新しくOS...]]></description><link>https://zenn.dev/yuyaba/articles/3b435ceae86003</link><guid isPermaLink="true">https://zenn.dev/yuyaba/articles/3b435ceae86003</guid><pubDate>Sat, 21 Dec 2024 07:32:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tr0xK0b6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OSS%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2580%2581%25E6%2584%258F%25E5%25A4%2596%25E3%2581%25A8%25E7%25B0%25A1%25E5%258D%2598%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kawai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczMmQzNjAzZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kawai</dc:creator></item><item><title><![CDATA[実例 ConvenienceFixture, orDefault() / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の17日目です。昨日は『実例 Result&lt;T, E&gt;』を紹介しました。

 テストとモックの煩雑さに立ち向かう
我々開発者が取り組むべき姿勢は「1にテスト、2にテスト、3、4がテストで、5にテスト」です。
昨日の記事でも触れたように、筆者は技術顧問として株式会社トレタのモバイルメニューサービスを設計・開発しております。飲食業界向けのシステムを開発していると、他社システムとの連携が複雑に絡むため、自由に触れない他社のデ...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9dyesasn2wc7613ad1</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9dyesasn2wc7613ad1</guid><pubDate>Sat, 21 Dec 2024 03:33:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T6nN8A2Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E4%25BE%258B%2520ConvenienceFixture%252C%2520orDefault%2528%2529%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[実例 Result<T, E> / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の16日目です。昨日は『App Router 時代のエラーハンドリング』を紹介しました。

 エラーの系統を考察する
昨日の記事で、TypeScriptプログラミングにおけるエラーハンドリングが、React Server ComponentsやNext.js App Routerといった、TypeScriptプログラミングを超えた要因に左右されると紹介しました。そして同様のことは、プラットフォームでも起こることを紹介します。
筆者...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9dx7hkmkhs48mtyzat</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9dx7hkmkhs48mtyzat</guid><pubDate>Sat, 21 Dec 2024 03:33:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l1PrbK4N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AE%259F%25E4%25BE%258B%2520Result%253CT%252C%2520E%253E%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[App Router 時代のエラーハンドリング / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の15日目です。昨日は『Vitest test-d.ts で複雑な型をテストする』を紹介しました。

 2年前からのエラーハンドリングの変化
2年前のカレンダーにてErrorの取り扱いについて紹介した記事では、TypeScriptプログラミング上のエラーハンドリング方法として、Errorクラスを継承したカスタムエラークラスを作り、if (e instanceof CustomError)で分岐する手法を紹介しました。これはType...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9dt1ja2ke07apqjh30</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9dt1ja2ke07apqjh30</guid><pubDate>Sat, 21 Dec 2024 03:33:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9WNWUPkd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Router%2520%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[CIのボトルネックを特定してJestの実行時間をチョット速くした話]]></title><description><![CDATA[この記事は「レバテック開発部 Advent Calendar 2024」の 21 日目の記事です！
昨日の記事は、ばば さんの「開発チームのバックエンド、フロントエンド担当を入れ替えてみた」でした！

 はじめに
こんにちは、7月末からレバテックにJoinしました、大内です。
不慣れなことも多いですが、周りからいろんな刺激をもらいながら日々楽しく開発してます！
参加しているプロダクトのGitHub Actions（以下GHA）で、結合テストの実行速度が遅くなっていて、バックエンドの改修をデプロイするスピードに影響がでそうな状態だったので、あまり時間をかけずにチョットだけ速度改善する応急対...]]></description><link>https://zenn.dev/levtech/articles/b44f0e1d4775c6</link><guid isPermaLink="true">https://zenn.dev/levtech/articles/b44f0e1d4775c6</guid><pubDate>Sat, 21 Dec 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zw0O0nqq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CI%25E3%2581%25AE%25E3%2583%259C%25E3%2583%2588%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6Jest%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E3%2583%2581%25E3%2583%25A7%25E3%2583%2583%25E3%2583%2588%25E9%2580%259F%25E3%2581%258F%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2586%25E3%2581%25A1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1YzcxZDY5NDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2583%2590%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E9%2596%258B%25E7%2599%25BA%25E9%2583%25A8%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNmVlYWY3NmYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うち</dc:creator></item><item><title><![CDATA[YouTube (Music) のプレイリスト管理を楽にするウェブアプリを Next.js で作った]]></title><description><![CDATA[
 はじめに
こんにちは。鈴木です。
個人開発で YouTube、YouTube Music のプレイリストを簡単にするウェブアプリケーション Playlist Manager For YouTube (https://pmfy.suzuki3.jp) を開発しました。
リポジトリはこちらです。
https://github.com/suzuki3jp/YouTubePlaylistManager
!
この記事の内容は v1.0.0 時点での情報です。現在のバージョンはサイトのフッターから確認することができます。


 何ができる？
YouTube, YouTube Music のプレイ...]]></description><link>https://zenn.dev/suzuki3jp/articles/playlist-manager-for-youtube</link><guid isPermaLink="true">https://zenn.dev/suzuki3jp/articles/playlist-manager-for-youtube</guid><pubDate>Sat, 21 Dec 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p0zzojU3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YouTube%2520%2528Music%2529%2520%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%2520Next.js%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%2588%25B4%25E6%259C%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczYWZjNjdmZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鈴木</dc:creator></item><item><title><![CDATA[Firebase Authentication でホワイトリストを扱う(TypeScript)]]></title><description><![CDATA[Firebase Custom Claims　の続き
ユーザー登録できるドメインまたはメールアドレスを指定してアカウント登録できる条件（ホワイトリスト）を管理したい

Admin権限を持っているユーザーは、ホワイトリストを更新できるようにする
メールアドレスについては一度登録したらホワイトリストから削除したい
※ 一時的にユーザーが作成されるのは防げないないので、トークンリフレッシュして削除されてないか確認する


 要約

ホワイトリストを作る

Domains 一覧(登録して良いドメインリスト)
Emails 一覧（登録して良いEmailリスト）


アカウント削除機能の追加

想定...]]></description><link>https://zenn.dev/sueyoshi/articles/29cb449b3fe2a7</link><guid isPermaLink="true">https://zenn.dev/sueyoshi/articles/29cb449b3fe2a7</guid><pubDate>Fri, 20 Dec 2024 21:48:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EXWebWaU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Firebase%2520Authentication%2520%25E3%2581%25A7%25E3%2583%259B%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%2528TypeScript%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sueyoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeHdsVlZMWW1XajNzX3A4T3owSlo0WE9Sdk4xWmQ3VEhNMHB0Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sueyoshi</dc:creator></item><item><title><![CDATA[初心者向けTypeScript超入門！]]></title><description><![CDATA[
 はじめに
TypeScriptを初めて触れる方を対象にTypeScriptがどういうものなのかのイメージを掴んでもらえることをを目的としています。高度な内容やコンパイルオプションなどについての詳細は割愛します。

 TypeScriptとは

TypeScriptとはaltJSの一種です。JavaScriptの型による不足を埋めるために型定義を加えた言語、いわばスーパーセットです。
TypeScriptではトランスコンパイラーによって最終的にJavaScriptに変換します。


 実行環境
本稿のコードを試したいときはウェブ上で試せるTypeScript Playgroundをお勧...]]></description><link>https://zenn.dev/rsi_s/articles/22ae3046eb49a6</link><guid isPermaLink="true">https://zenn.dev/rsi_s/articles/22ae3046eb49a6</guid><pubDate>Fri, 20 Dec 2024 18:57:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7c3hdSrb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591TypeScript%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2528%25EF%25BD%2580%25E3%2583%25BB%25CF%2589%25E3%2583%25BB%25C2%25B4%2529%25E3%2582%259E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkZDNkNmRmZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>(｀・ω・´)ゞ</dc:creator></item><item><title><![CDATA[Discord掲示板サービス(Distopia)を作ってみた]]></title><description><![CDATA[
 Discord掲示板サービス(Distopia)を作ってみた
この記事はこの度作成したDistopiaについて制作過程において難しかった部分を説明する記事です。
需要が少ないかもしれませんが、自分が忘れないためにも書いておきます。参考になればうれしいです。
すべてのコードについて解説を入れると日が暮れてしまうので詳しいコードについてはこの記事では書きません。それについては、次回作をご期待だください。
失敗例に対する対策だけ見たい方はこちらを先にご覧ください
↓↓↓今回制作したもの↓↓↓
https://distopia.top/

 1: DiscordのOauthの資料が少なすぎる...]]></description><link>https://zenn.dev/robot/articles/790e4e776fc061</link><guid isPermaLink="true">https://zenn.dev/robot/articles/790e4e776fc061</guid><pubDate>Fri, 20 Dec 2024 18:46:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tauJDfRb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Discord%25E6%258E%25B2%25E7%25A4%25BA%25E6%259D%25BF%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2528Distopia%2529%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ROBOT%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkpMSG9QQkFucFdvMkJDM1NoNy1vX3Mzc1lPMDlZVDNNbXpTMG5SM0Yxd0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ROBOT</dc:creator></item><item><title><![CDATA[Google Cloud StorageへのResumable Upload(再開可能アップロード)の実装手順]]></title><description><![CDATA[株式会社モニクルのエンジニアのmakominationです！
今年モニクルへ転職いたしました。何卒よろしくお願いいたします！
モニクル Advent Calendar 2024の21日目です！

 はじめに
今回は、Google Cloudが提供するストレージサービスCloud Storageについてご紹介します。
Cloud Storageでは、ウェブサービスなどで利用するファイルをバケットに保存することができます。
この記事では、ウェブアプリケーションを通じてユーザーが動画などの大きなファイルをアップロードできるResumable Uploadについてお話しします。

 Resuma...]]></description><link>https://zenn.dev/makomination/articles/87cad64d56c39d</link><guid isPermaLink="true">https://zenn.dev/makomination/articles/87cad64d56c39d</guid><pubDate>Fri, 20 Dec 2024 15:07:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hw7RJsBD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Cloud%2520Storage%25E3%2581%25B8%25E3%2581%25AEResumable%2520Upload%2528%25E5%2586%258D%25E9%2596%258B%25E5%258F%25AF%25E8%2583%25BD%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%2529%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:makomination%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG8xdktRR0dOVER2S0lQMUQyVl9KaG5mekt1QVprMVV0OUpEUFVVcG1Cc2N3Ulo0bz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>makomination</dc:creator></item><item><title><![CDATA[Container/Presentationalパターンについて]]></title><description><![CDATA[Code Polaris Advent Calendar 2024 20 日目の記事です！
アドベントカレンダーでは、毎年その年に経験したこととかについて書くようにしているのですが、今年は「Container/Presentational パターン」です！！

 Container/Presentational パターン

 Container/Presentational パターンとは
まず、Container/Presentational パターンの概要です。
Container/Presentational パターンは、「関心の分離（Separation of Concern）」を...]]></description><link>https://zenn.dev/azunasu/articles/865c01aa71be12</link><guid isPermaLink="true">https://zenn.dev/azunasu/articles/865c01aa71be12</guid><pubDate>Fri, 20 Dec 2024 15:00:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TwkRBG4v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Container%252FPresentational%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%259A%25E3%2581%25AB%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2cwSE1FZHFFRHg1REFpVjNEckNhWU5MV3ktSTQ3VC16ajVOcS1XMGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あずにゃん</dc:creator></item><item><title><![CDATA[ReadableStreamオブジェクトを理解する]]></title><description><![CDATA[こんにちは、株式会社イルシルでEMをしているmizukiです。
今回はタスクでストリーミング配信を実装する必要があり「ReadableStream」というものに初めて触れたので、概要や使い方についてまとめていきたいと思います。

 ReadableStreamとは
まずはReadableStreamについてのMDNの説明を引用したいと思います。

ReadableStream はストリーム API のインターフェイスで、バイトデータの読み取り可能なストリームを表します。 Fetch API は、 ReadableStream の具体的なインスタンスをResponse オブジェクトの bo...]]></description><link>https://zenn.dev/irusiru/articles/df80e75a1351c8</link><guid isPermaLink="true">https://zenn.dev/irusiru/articles/df80e75a1351c8</guid><pubDate>Fri, 20 Dec 2024 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OagM4JuP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReadableStream%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mizuki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBkYjc5MDE3NjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B7%25E3%2583%25AB%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxOGNiNzU1YTcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizuki</dc:creator></item></channel></rss>