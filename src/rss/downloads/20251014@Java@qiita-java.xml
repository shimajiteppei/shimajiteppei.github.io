<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-10-14T18:12:41+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092430</id>
    <published>2025-10-14T18:12:41+09:00</published>
    <updated>2025-10-14T18:12:41+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/lil_suzuchan/items/49ac581aaa272dcddb4a"/>
    <url>https://qiita.com/lil_suzuchan/items/49ac581aaa272dcddb4a</url>
    <title>Javaで学ぶオブジェクト指向プログラミング入門</title>
    <content type="text">オブジェクト指向
オブジェクト指向とは、現実世界をモデル化する（現実の世界をそのままプログラムに置き換える）考え方のことです。
オブジェクトとは「もの」という意味で、現実世界に存在する様々な事柄を指しています。オブジェクトには椅子や机のような実際に目に見えるものも、注文や...</content>
    <author>
      <name>lil_suzuchan</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092190</id>
    <published>2025-10-14T01:31:36+09:00</published>
    <updated>2025-10-14T01:32:13+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/KO_YAmajun/items/43f91840e308beabe1ae"/>
    <url>https://qiita.com/KO_YAmajun/items/43f91840e308beabe1ae</url>
    <title>Jackson3におけるtoml・jsonの読み書き</title>
    <content type="text">はじめに
Jacksonとは、JSON(や、その他のテキスト形式)を読み書きできる。

pom

ポイント

groupId変更に注意(tools.jackson)
jackson-bomが利用可能

pom.xml</content>
    <author>
      <name>KO_YAmajun</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092187</id>
    <published>2025-10-14T01:25:09+09:00</published>
    <updated>2025-10-14T01:25:09+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/hayao_k/items/af54297522f148eee5e3"/>
    <url>https://qiita.com/hayao_k/items/af54297522f148eee5e3</url>
    <title>AWS SDK で Bedrock API Key を Authorization ヘッダーに設定してリクエストする方法</title>
    <content type="text">本記事で紹介する方法はドキュメント等で公式に案内されているものではないため、使用を検討される際はご留意ください。

はじめに
Amazon Bedrock API キーは一部言語の AWS SDK でも使用できます。ドキュメントの記載例のように API キーをAWS...</content>
    <author>
      <name>hayao_k</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2092145</id>
    <published>2025-10-13T23:37:30+09:00</published>
    <updated>2025-10-13T23:37:30+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tanaka_taro_JP_KYUSYU/items/d1228c76b59bf77a57ce"/>
    <url>https://qiita.com/tanaka_taro_JP_KYUSYU/items/d1228c76b59bf77a57ce</url>
    <title>DIコンテナとインスタンス化の原則</title>
    <content type="text">インスタンスの生成と利用
あるクラス内で別のクラスの機能を利用する場合、利用したいクラスのインスタンスを生成する必要があります。Spring Frameworkを使用する場合、このインスタンスの取得方法には主に2通りあります。
①Spring DIコンテナを利用する場合（...</content>
    <author>
      <name>tanaka_taro_JP_KYUSYU</name>
    </author>
  </entry>
</feed>
