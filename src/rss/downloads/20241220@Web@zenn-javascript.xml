<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 20 Dec 2024 08:20:42 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[GSAPでクリスマスっぽいアニメーションを作る]]></title><description><![CDATA[おばんです！jig.jp Advent Calendar 2024 20日目の記事を担当します、サウスケイです！
みなさん、クリスマス近いですね！僕は小学生の時にトンチンカンすぎてサンタさんから知恵の輪をプレゼントされたことがあります
さて、今年ももう終わりが見えてきますが、
今年僕がお世話になったライブラリは、SwiperとGSAPです
どちらも手厚いドキュメントと豊富な情報でかなり開発で助かりました
また、フレームワークではAstroもよく使いました。SSG最高
今回は今年お世話になったGSAPを使ってクリスマスに訪れた人が少しでもハッピーになるようなLPを作ってみました！フレームワ...]]></description><link>https://zenn.dev/jigjp_engineer/articles/c816291460517f</link><guid isPermaLink="true">https://zenn.dev/jigjp_engineer/articles/c816291460517f</guid><pubDate>Fri, 20 Dec 2024 06:31:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zPN87kKp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GSAP%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%259E%25E3%2582%25B9%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:jig.jp%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I5NGQxOTY3NzcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:jig.jp%2520Engineers%2527%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlOGE0ODg0OTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jig.jp</dc:creator></item><item><title><![CDATA[駅すぱあと路線図JavaScriptライブラリrosen.jsを使って英語版路線図を描画する]]></title><description><![CDATA[本記事はヴァル研究所の支援として作成された記事です
駅すぱあとは乗り換え案内サービスとして有名ですが、駅すぱあとの路線図をWebページに埋め込むことができるのを知っているでしょうか。駅すぱあとの路線図をWebページに埋め込むことで、Webサイトへの訪問者が目的地までの経路を探しやすくなります。日本の大都市圏では電車での移動が多いので、路線図を中心とした地図は便利です。
そんな地図埋め込みを手軽に実現してくれるライブラリがrosen.jsです。これは駅すぱあと公式のライブラリであり、地図と駅・路線情報などを組み合わせてさまざまな可視化を行えます。
本記事では、rosen.jsを使って地図を...]]></description><link>https://zenn.dev/ekispert_api/articles/afb01f6cf4b4ea</link><guid isPermaLink="true">https://zenn.dev/ekispert_api/articles/afb01f6cf4b4ea</guid><pubDate>Fri, 20 Dec 2024 04:16:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zzAlImhH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3JavaScript%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AArosen.js%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%258B%25B1%25E8%25AA%259E%25E7%2589%2588%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3%25E3%2582%2592%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25A2%25E3%2583%2584%25E3%2582%25B7%2540MOONGIFT%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllZWU4MmU5MDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520API%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqN3UwNEd0OEkzbTVsd2xaRUhBbjNlcko0QjZxNWlBd1V6N2tqT1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アツシ@MOONGIFT</dc:creator></item><item><title><![CDATA[Hono の RPC Client の仕組み]]></title><description><![CDATA[
 はじめに
この記事は Hono Advent Calendar 2024 の 20 日目の記事です。
今年は「Hono」のソースコードをすべて理解するというチャレンジを個人的にしてました。
Hono をご存じない方もいるかも知れないので簡単にご紹介すると、Hono は超軽量で高速なウェブフレームワークで、Node.js 環境でも Deno 環境でも、そしてブラウザでも動作するモダンな設計が特徴です。リポジトリはこちらから。
ちなみに、最近 Wikipedia も出来ました。
https://ja.wikipedia.org/wiki/Hono
遂に先日、全てを読み終えたので、その中で...]]></description><link>https://zenn.dev/ame_x/articles/b93bffa6c0499e</link><guid isPermaLink="true">https://zenn.dev/ame_x/articles/b93bffa6c0499e</guid><pubDate>Fri, 20 Dec 2024 03:06:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V5xt12ft--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520%25E3%2581%25AE%2520RPC%2520Client%2520%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:EdamAmex%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwZDE2YmYxODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>EdamAmex</dc:creator></item><item><title><![CDATA[[TypeScript] NaN の判定方法]]></title><description><![CDATA[
 1. 目的
JavaScriptおよびTypeScriptの数値型の特殊な値であるNaNについて特徴をまとめ、その変換の際に必要な注意点を挙げます。
またNaNを0に変換する際の簡単な方法についても述べます。

 2. 使用言語

JavaScript


 3. NaN の特徴
NaN は JavaScript 上の値の一種で、JavaScript の数値型に属し、また TypeScript の型注釈では:numberに属します。
しかし一方で、

グローバルプロパティ NaN は非数 (Not-A-Number) を表す値です。

NaN - JavaScript | MDN
と...]]></description><link>https://zenn.dev/breakedge/articles/53b6c2d32d9d05</link><guid isPermaLink="true">https://zenn.dev/breakedge/articles/53b6c2d32d9d05</guid><pubDate>Fri, 20 Dec 2024 00:39:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LP55deDb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%2520NaN%2520%25E3%2581%25AE%25E5%2588%25A4%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hzmd%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2596%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%2520%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkZjUyYWExZWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hzmd</dc:creator></item><item><title><![CDATA[JavaScriptのDateはなぜ扱いづらいのか]]></title><description><![CDATA[

 はじめに
READYFOR でプロダクトエンジニアをやっている pxfnc(ぴくすふぁんく) です。
本記事は READYFOR Advent Calendar 2024 の 19 日目 の記事です。
JavaScriptの言語仕様にも含まれているDateオブジェクトの扱いは、他の言語の日付時刻処理と比べてたいへん扱いづらいことで有名です(多分)。そのため、外部ライブラリとしてMoment.js date-fnsや、新しいものだとluxon、標準としてIntl.DateTimeFormat や、日付時刻を扱うためのTemporalのプロポーザルもある状態で、みんなかなり苦しんでいる...]]></description><link>https://zenn.dev/pxfnc/articles/99d162e62d3786</link><guid isPermaLink="true">https://zenn.dev/pxfnc/articles/99d162e62d3786</guid><pubDate>Thu, 19 Dec 2024 16:37:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WY4aVt3S--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AEDate%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%259C%25E6%2589%25B1%25E3%2581%2584%25E3%2581%25A5%25E3%2582%2589%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pxfnc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZDJiZTNlYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pxfnc</dc:creator></item><item><title><![CDATA[ENCA 19日目: `eval?.()` の direct eval 化（リジェクト）]]></title><description><![CDATA[!
この記事は 1人 ECMAScript Normative Changes Advent Calendar 2024 の 19 日目です。


 direct eval とは
eval 函数を実行する際、参照される変数名が eval そのままで実行される場合を direct eval と呼び、そうでない indirect eval と区別しています。direct eval はそのスコープでの実行となりますが indirect eval は別のコンテキストで実行されます（新しく &lt;script&gt; タグが作られて実行されると考えるとわかりやすいかもしれません）。
global...]]></description><link>https://zenn.dev/pixiv/articles/1b0a93eeb31d95</link><guid isPermaLink="true">https://zenn.dev/pixiv/articles/1b0a93eeb31d95</guid><pubDate>Thu, 19 Dec 2024 14:56:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1UsTBTGU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ENCA%252019%25E6%2597%25A5%25E7%259B%25AE%253A%2520%2560eval%253F.%2528%2529%2560%2520%25E3%2581%25AE%2520direct%2520eval%2520%25E5%258C%2596%25EF%25BC%2588%25E3%2583%25AA%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:petamoriken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMDc3ZWRhZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:pixiv%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODlhMzQ2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>petamoriken</dc:creator></item><item><title><![CDATA[JavaScript｜flatMapの仕様]]></title><description><![CDATA[JavaScriptのメソッドの仕様を忘れてしまうことが多いので、ここに書いておく。

 flatMap
配列の各要素にマッピング関数を実行して、その結果の配列をに1次元の配列する。

 サンプルコード
const sample = [1, 2, 1];
const result = sample.flatMap((num) =&gt; (num &gt; 1 ? [9, 9, 9] : 5));

console.log(JSON.parse(JSON.stringify(result)));

 結果
[ 5, 9, 9, 9, 5 ]

 参考文献
https://develope...]]></description><link>https://zenn.dev/senaha/articles/ab4632337442e2</link><guid isPermaLink="true">https://zenn.dev/senaha/articles/ab4632337442e2</guid><pubDate>Thu, 19 Dec 2024 13:40:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PPzZupUw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25EF%25BD%259CflatMap%25E3%2581%25AE%25E4%25BB%2595%25E6%25A7%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:senaha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lUeUJ6QjU5OENKS2VIdVU3alZ5YmN3czkwT1FWMkJ1YmZoNmdIM3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>senaha</dc:creator></item><item><title><![CDATA[Chrome DevToolsのパフォーマンスタブ]]></title><description><![CDATA[ある日、一つのウェブページのパフォーマンス改善をしていたのですが、コードを見ているだけでは時間がかかっていて原因が全くわかりませんでした。そこで、以前から使っていたChromeのDevToolsのパフォーマンスタブを試してみることにしました。すると、すぐにボトルネックが特定でき、原因が明らかに。パフォーマンスタブの便利さを改めて実感した瞬間でした。

 パフォーマンスタブとは？
パフォーマンスタブは、ウェブアプリケーションのパフォーマンスを分析するために使用されるChrome DevToolsの機能です。このツールを使うと、
ページの読み込み時間を測定：どの部分で時間がかかっているのかを...]]></description><link>https://zenn.dev/xbit/articles/174f454af5e31d</link><guid isPermaLink="true">https://zenn.dev/xbit/articles/174f454af5e31d</guid><pubDate>Thu, 19 Dec 2024 12:00:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A7HnFh3b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chrome%2520DevTools%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:abhikesh%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1Yjk4OTY5OWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2593%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhZjRlYjllODEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>abhikesh</dc:creator></item><item><title><![CDATA[【初学者によるまとめ】この一冊で全部わかるWeb技術の基本　「Chapter 4」＞「07 JSON」]]></title><description><![CDATA[目的：「イラスト図解式 この一冊で全部わかるWeb技術の基本」の要点を自分なりにまとめアウトプットして理解力の向上に努める。



注意点




🤔 ←この絵文字の文章は個人的な見解になります。的外れなこともあるかと思います。


例）🤔&lt;(感想、考察、疑問点など)




（参考書籍）

イラスト図解式 この一冊で全部わかるWeb技術の基本

（参考サイト）
https://aws.amazon.com/jp/compare/the-difference-between-json-xml/


 JavaScriptから生まれた汎用データ形式


JSON (JavaScrip...]]></description><link>https://zenn.dev/recaldenta/articles/b40e9d66e18960</link><guid isPermaLink="true">https://zenn.dev/recaldenta/articles/b40e9d66e18960</guid><pubDate>Thu, 19 Dec 2024 11:48:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jLHN-Bbc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25AD%25A6%25E8%2580%2585%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%25E3%2581%2593%25E3%2581%25AE%25E4%25B8%2580%25E5%2586%258A%25E3%2581%25A7%25E5%2585%25A8%25E9%2583%25A8%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BWeb%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2580%2580%25E3%2580%258CChapter%25204%25E3%2580%258D%25EF%25BC%259E%25E3%2580%258C07%2520JSON%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakad119%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkJLSE95b1lrb3VsYzBIUm41T2ctWTBoOFpZMDlROWpYUUNpRFM2MUgyekFiMHEtaz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakad119</dc:creator></item><item><title><![CDATA[Intersection Observer APIの使い方]]></title><description><![CDATA[
 Intersection Observer APIとは

要素がビューポートまたは特定のコンテナ内に入ったり出たりするタイミングを非同期的に監視するためのAPI
スクロールイベントの監視、ビューポートの交差を利用するタスクの処理が可能


 Intersection Observer APIの使い方の例

 前提条件（やりたいこと）
下記のようにhiddenというクラスがついたh2要素がある
この要素がビューポートに交差したら、要素が表示されるようにしたい
（fade-in-upというクラスをつけたい）
&lt;h2 class="hidden"&gt;hogehoge&lt;/h2...]]></description><link>https://zenn.dev/mof_moriko/articles/fdd77a9520ab12</link><guid isPermaLink="true">https://zenn.dev/mof_moriko/articles/fdd77a9520ab12</guid><pubDate>Thu, 19 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lAmMcav5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Intersection%2520Observer%2520API%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:moriko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHdRbXBNbVpYV1VIY3lObEhYLVg3YkxTMkdkcUVOV0ZoNzM1YmVxZGN1UVNvWnZ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>moriko</dc:creator></item><item><title><![CDATA[fetch()]]></title><description><![CDATA[
 JavaScriptのfetch()とは？
fetchは、インターネット上からデータを取ってくるときに使う方法です。たとえば、ウェブサイトから情報をもらってきたり、サーバーにデータを送ったりするのに使います。

 どうやって使うの？

fetchを使うと、「何をしたいか？」をURLで指定します。
サーバーがそのリクエストに答えると、fetchが結果を返してくれます。


 例1:ウェブサイトから情報をもらってくる
// データを取得する例
fetch('https://api.example.com/data') // データがある場所
  .then(response =&gt; ...]]></description><link>https://zenn.dev/kimascript/articles/e3e6516f85a0f3</link><guid isPermaLink="true">https://zenn.dev/kimascript/articles/e3e6516f85a0f3</guid><pubDate>Thu, 19 Dec 2024 05:16:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vU5WVluz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:fetch%2528%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2N2UwMmQyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>...</dc:creator></item><item><title><![CDATA[ボードゲームAIをブラウザで動かす！C++とJavascriptを組み合わせたシステム開発]]></title><description><![CDATA[
 初めに
最近、AtCoder Heuristic Contestに何回か出場するようになり、「ゲームAI」「探索アルゴリズム」というものを学び始めました。
その中で、「学んだゲームAIの知識を、本物のボードゲームで使ってみたい！」、「せっかくなら作ったAIをブラウザに出して、手軽に遊べるようにしたい！」と考えるようになりました。
思い立ったが吉日ということで、実際に、ボードゲームAIを作り、かつそのAIとブラウザ上で対局できるシステムも作ってみました。 本記事では、その軌跡を共有したいと思います。
ゲームAIに興味のある方でも、複数言語を組み合わせたシステムに興味のある方でも、ただT...]]></description><link>https://zenn.dev/tori_rakko/articles/a77608eda046a0</link><guid isPermaLink="true">https://zenn.dev/tori_rakko/articles/a77608eda046a0</guid><pubDate>Thu, 19 Dec 2024 04:31:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VCfr9C77--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0AI%25E3%2582%2592%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25EF%25BC%2581C%252B%252B%25E3%2581%25A8Javascript%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%258A%25E3%2582%2589%25E3%2581%25A3%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZGRlNGNiYTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とりらっこ</dc:creator></item><item><title><![CDATA[Angular v19のハイブリッドレンダリングを試す]]></title><description><![CDATA[本記事はAngularアドベントカレンダー2024の18日目の記事です。昨日はnao_yさんでした。
https://qiita.com/advent-calendar/2024/angular

 はじめに
この記事では、Angular v19から開発者プレビューとして入ったサーバールーティングによるハイブリッドレンダリングを試して紹介します。

 ハイブリッドレンダリングとは
ハイブリッドレンダリングは、サーバーサイドレンダリング(SSR)、プリレンダリングまたは静的サイト生成(SSG)、クライアントサイドレンダリング(CSR)を組み合わせて、フロントエンドアプリケーションを最適化す...]]></description><link>https://zenn.dev/voicy/articles/6c1a76652c15f3</link><guid isPermaLink="true">https://zenn.dev/voicy/articles/6c1a76652c15f3</guid><pubDate>Wed, 18 Dec 2024 18:56:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8jfgVsil--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Angular%2520v19%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:komura-c%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhiODU5ZTAwNWYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Voicy%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiOWY5NGVjNDguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>komura-c</dc:creator></item><item><title><![CDATA[<input>要素の日本語入力・カーソル挙動と Android での onKeyDown の制御]]></title><description><![CDATA[「Applibot Advent Calendar 2024」 19日目の記事になります。

 はじめに
&lt;input&gt; は一見シンプルですが、日本語入力 (IME) やモバイル環境、特にAndroid では独特の挙動があり、開発者を悩ませることがあります
実際に私もかなり苦しみました😢
この記事では、これらの課題と解決策を、実際のコード例とともに解説します

 対象読者:

Web 開発経験者 (HTML, CSS, JavaScript, TypeScript などの基礎知識がある方)
日本語入力周りの処理で困っている方
&lt;input&gt; 要素のカーソル位置制御...]]></description><link>https://zenn.dev/dodoy/articles/a123b953549c4d</link><guid isPermaLink="true">https://zenn.dev/dodoy/articles/a123b953549c4d</guid><pubDate>Wed, 18 Dec 2024 16:59:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zr3ISrZQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%253Cinput%253E%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AE%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%2585%25A5%25E5%258A%259B%25E3%2583%25BB%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E6%258C%2599%25E5%258B%2595%25E3%2581%25A8%2520Android%2520%25E3%2581%25A7%25E3%2581%25AE%2520onKeyDown%2520%25E3%2581%25AE%25E5%2588%25B6%25E5%25BE%25A1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A9%25E3%2581%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hxZDA0NXZOOXBYekhWbE5kNFlkMkp6eFVZYjJ2UjVPZ2tUYjdLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どど</dc:creator></item><item><title><![CDATA[Deno  Webサイトをスクレイピングする]]></title><description><![CDATA[denoでWebサイトをスクレイピングする基本的な方法をまとめました。
今回はこのサイトを対象にスクレイピングし、以下画像のボタン内テキストを取得してみます!


 大まかな手順

Webページの取得: fetch APIを使用してスクレイピング対象のWebページのHTMLを取得
HTMLの解析: 取得したHTMLをDOMParserで解析し、DOMを構築
データの抽出: 解析したDOMから、特定のセレクタを使用して必要なデータを含む要素を選択
データの加工: 選択した要素から情報（テキストや属性値など）を抽出し、必要に応じて加工


 実装

 Webページの取得
まずスクレイピング用...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/4f0e4f84152d30</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/4f0e4f84152d30</guid><pubDate>Wed, 18 Dec 2024 16:54:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PfUX0Z7f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%2520%2520Web%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDMyNTZiNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tatsuki</dc:creator></item><item><title><![CDATA[ENCA 18日目: eval で CodeLike オブジェクトを実行可能に（進行中）]]></title><description><![CDATA[!
この記事は 1人 ECMAScript Normative Changes Advent Calendar 2024 の 18 日目です。


 eval はプリミティブな文字列しか実行しない
eval はプリミティブな文字列のみを実行します。それ以外が渡ってきた場合は単にそのまま返す仕様となっています。
// プリミティブな文字列は実行する
console.log(eval("1 + 2")); // 3

// それ以外はそのまま返す
console.log(eval(42)); // 42
console.log(eval({ foo: "foo" })); // { foo:...]]></description><link>https://zenn.dev/pixiv/articles/958be19743af5c</link><guid isPermaLink="true">https://zenn.dev/pixiv/articles/958be19743af5c</guid><pubDate>Wed, 18 Dec 2024 13:31:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2AhN2Rl1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ENCA%252018%25E6%2597%25A5%25E7%259B%25AE%253A%2520eval%2520%25E3%2581%25A7%2520CodeLike%2520%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AB%25EF%25BC%2588%25E9%2580%25B2%25E8%25A1%258C%25E4%25B8%25AD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:petamoriken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMDc3ZWRhZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:pixiv%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODlhMzQ2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>petamoriken</dc:creator></item><item><title><![CDATA[Polyglot NotebooksでC#とJavaScriptをVS Code上で手軽に動かす]]></title><description><![CDATA[
 はじめに
C#やJavaScriptなどでプログラムを書いていて、コードの断片をちょっと動かしてみたいと思ったことありませんか？
そんな時に便利なのが、VS Codeの拡張機能である「Polyglot Notebooks」です。
弊社のkotaprojさんが書いた記事「Semantic KernelのGetting Started」でもPolyglot Notebooksを利用しています。
https://zenn.dev/zead/articles/semantic_kernel_getting_started
この記事では、Polyglot Notebooksの環境構築と簡単な使...]]></description><link>https://zenn.dev/zead/articles/first-polyglots</link><guid isPermaLink="true">https://zenn.dev/zead/articles/first-polyglots</guid><pubDate>Wed, 18 Dec 2024 12:10:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rdSF6_YK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Polyglot%2520Notebooks%25E3%2581%25A7C%2523%25E3%2581%25A8JavaScript%25E3%2582%2592VS%2520Code%25E4%25B8%258A%25E3%2581%25A7%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:gushwell%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMTI4MzAyMjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B8%25E3%2583%25BC%25E3%2583%2589%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZy5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gushwell</dc:creator></item><item><title><![CDATA[ECharts 3D ScatterをFlutter Webで表示する]]></title><description><![CDATA[
 flutter_echartsはwebをサポートしていないので
import 'package:js/js.dart';
これで行きます。

 まずはサンプルをそのまま表示
使うサンプルはこちら。
https://echarts.apache.org/examples/en/editor.html?c=scatter3d&amp;gl=1&amp;theme=dark

pubspec.yaml
  js: ^0.7.1
  http: ^1.2.2

爺様のいうとおり、玉手箱･･･httpは、ファイルのほうで「要らない」って言われるけど、
まあ、とりあえず入れておく。

index...]]></description><link>https://zenn.dev/flutteruniv_dev/articles/a65b4ecc2188e2</link><guid isPermaLink="true">https://zenn.dev/flutteruniv_dev/articles/a65b4ecc2188e2</guid><pubDate>Wed, 18 Dec 2024 11:38:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lqcAXNfr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ECharts%25203D%2520Scatter%25E3%2582%2592Flutter%2520Web%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A9%25E3%2582%2593%25E3%2581%2590%25E3%2582%258A%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0ODUxNDkwOTcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Flutter%25E5%25A4%25A7%25E5%25AD%25A6%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqQ2RNdHFjMF9fWVFUdkJndHR1R3plSnVVNW41ZXMyTzM0RDUzPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>どんぐり</dc:creator></item><item><title><![CDATA[【巨大化するWebアプリ】JavaScriptはブラウザから離れてどこへいく]]></title><description><![CDATA[
 はじめに
最近のWebフロントエンドアプリは高度で複雑な機能を持つ巨大なものに進化しました。それに伴いパフォーマンスについての考慮なども必要になっています。例えばフレームワークではサーバーサイドレンダリングを利用することでブラウザで実行するJavaScriptの量を減らすような動きをします。
これらのJavaScriptの巨大化と配慮について私見を残します。

 膨れ上がったWebアプリをロードするという現状
最近のWebアプリケーションは、リアルタイム更新、インタラクティブなUI、オフライン対応、状態管理など多くの機能を備えています。これらの機能を実現するために、大量のJavaSc...]]></description><link>https://zenn.dev/peter_norio/articles/b3d81ede5cae28</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/b3d81ede5cae28</guid><pubDate>Wed, 18 Dec 2024 10:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZQ-NxBSu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25B7%25A8%25E5%25A4%25A7%25E5%258C%2596%25E3%2581%2599%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2580%2591JavaScript%25E3%2581%25AF%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%258B%25E3%2582%2589%25E9%259B%25A2%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25B8%25E3%2581%2584%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item><item><title><![CDATA[Svelte・SvelteKitの概要とReactやVue.jsを履修済みの筆者の感想]]></title><description><![CDATA[
 はじめに
みなさん、こんにちは。
今回はSvelteとSvelteKitの特徴についてまとめています。
筆者はReactとNext.js、Vue.jsとNuxtとそれぞれ触ってきて新しくSvelteに触れています。新しくSvelteに触れることの感想も掲載していますので、よろしければご覧ください。

 Svelteとは

 概要

とにかくシンプル

フレームワーク独自のキーワードなどを利用しない
既存のキーワードや表現で実現する


事前にコンパイルしリアクティブな箇所を検知する

仮想DOMを使わない


バンドルサイズが小さい
TypeScriptを公式サポート

Svelte...]]></description><link>https://zenn.dev/peter_norio/articles/23e74059355285</link><guid isPermaLink="true">https://zenn.dev/peter_norio/articles/23e74059355285</guid><pubDate>Wed, 18 Dec 2024 10:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rr3QnG_1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Svelte%25E3%2583%25BBSvelteKit%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%25E3%2581%25A8React%25E3%2582%2584Vue.js%25E3%2582%2592%25E5%25B1%25A5%25E4%25BF%25AE%25E6%25B8%2588%25E3%2581%25BF%25E3%2581%25AE%25E7%25AD%2586%25E8%2580%2585%25E3%2581%25AE%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2582%258A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTcwSTlWTjhXNHl3eWRJY1JlYzFWaUJtc3B6S3lfX3JzeTUyYmJhRFh0c29FVzJDZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピーターのりお</dc:creator></item></channel></rss>