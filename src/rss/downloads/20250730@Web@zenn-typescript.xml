<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 30 Jul 2025 08:13:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[React useImperativeHandleの実装方法と実践的な使い所]]></title><description><![CDATA[
 useImperativeHandleとは
useImperativeHandleは、親コンポーネントから子コンポーネントの特定のメソッドや値にアクセスできるようにするReactフックです。通常のReactの単方向データフローに対して、子から親への直接的なアクセスを可能にします。

 基本的な使い方

 TypeScriptでの実装例
import React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';

// 公開するメソッドの型定義
export interface InputRef {...]]></description><link>https://zenn.dev/tk_niway/articles/react-use-imperative-handle-2025-07-30</link><guid isPermaLink="true">https://zenn.dev/tk_niway/articles/react-use-imperative-handle-2025-07-30</guid><pubDate>Wed, 30 Jul 2025 07:47:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tVQE9iZw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520useImperativeHandle%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2589%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk-niway%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWM4NDM4NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk-niway</dc:creator></item><item><title><![CDATA[Quartz4でZenn互換の画像パス(/images)を使えるようにする改造]]></title><description><![CDATA[
 はじめに
Quartz4は素晴らしい静的サイトジェネレーターですが、デフォルトではcontentフォルダ内の画像のみを処理します。一方、Zennでは/imagesフォルダに画像を配置するのが標準的です。
両方のプラットフォームでコンテンツを管理する場合、画像パスの整合性を保つことが重要になります。今回は、Quartz4でZenn互換の画像パス（/images/画像名.png）を使えるように改造した話です。

 問題：Quartz4のデフォルトの画像管理
Quartz4のデフォルト設定では、以下のような制限があります：

画像はcontentフォルダ内に配置する必要がある

![](i...]]></description><link>https://zenn.dev/bottersatoshi/articles/ef89293a9dc690</link><guid isPermaLink="true">https://zenn.dev/bottersatoshi/articles/ef89293a9dc690</guid><pubDate>Wed, 30 Jul 2025 06:32:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sGJ-45wz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Quartz4%25E3%2581%25A7Zenn%25E4%25BA%2592%25E6%258F%259B%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2591%25E3%2582%25B9%2528%252Fimages%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2594%25B9%25E9%2580%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:botterSatoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjhYS2psQVZJd3pnWllRVldmbUhnMmR0am5uX252c0VJbXh2U01lcF9VMHpscXpBdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>botterSatoshi</dc:creator></item><item><title><![CDATA[Mermaid.jsでクリック可能なマインドマップを実装する（Next.js）]]></title><description><![CDATA[
 はじめに
こちらの記事では StreamlitでMermaidのマインドマップを表示しました。
https://zenn.dev/nomhiro/articles/streamlit-mermaid-maindmap
今回は、マインドマップのノードをクリックしたらノード情報を詳細表示するようにしたいと思います。
結論、このようになります。
ノードをクリックすると、右側Sidebarにそのノードの詳細情報が表示されます。


 （課題）Streamlitでのクリックイベント問題
Streamlitのcomponents.html()でMermaidを表示する方法では、SVG要素のクリッ...]]></description><link>https://zenn.dev/nomhiro/articles/mindmap-node-click-nextjs</link><guid isPermaLink="true">https://zenn.dev/nomhiro/articles/mindmap-node-click-nextjs</guid><pubDate>Wed, 30 Jul 2025 06:19:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DrKNYeA3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mermaid.js%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Next.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%25EF%25BC%2588nomhiro%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0YmFmOGY4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくま（nomhiro）</dc:creator></item><item><title><![CDATA[【Claude Code】Custom slash commandでテストを自動化した話]]></title><description><![CDATA[
 はじめに
今回は、Claude CodeのCustom slash commandでテストを自動化できたため、その方法を共有します。

 前提

 AIとテスト駆動開発の相性の良さ
近年、Vibe Coding（AIとの対話的プログラミング）とテスト駆動開発の組み合わせが注目されています。以下の記事でも詳しく解説されており、品質と開発効率を両立できる手法として紹介されています。
https://www.wantedly.com/companies/wantedly/post_articles/981006
https://zenn.dev/farstep/articles/claud...]]></description><link>https://zenn.dev/sc30gsw/articles/96a07baca27b5a</link><guid isPermaLink="true">https://zenn.dev/sc30gsw/articles/96a07baca27b5a</guid><pubDate>Wed, 30 Jul 2025 05:30:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R5m7skOL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Claude%2520Code%25E3%2580%2591Custom%2520slash%2520command%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kaito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5ZmViMGZmOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kaito</dc:creator></item><item><title><![CDATA[PrismaからPGliteに繋げてリポジトリ層のテストをお手軽にやってみた]]></title><description><![CDATA[こんにちは、エンジニアの籏野です。
今回はPGliteとPrismaを用いて、実際にデータベースに接続して行うリポジトリ層のテストについて紹介します。
作成したサンプルプロジェクトは以下のリポジトリに置いていますので、合わせてご確認ください。
https://github.com/taku-hatano/pglite-prisma-test

 リポジトリ層におけるテストの課題
クリーンアーキテクチャのようなデザインパターンを利用する場合、リポジトリ層を利用してビジネスロジックとデータアクセス層を分離することはよくあるかと思います。
これにより、ビジネスロジック層においてはリポジトリ層を...]]></description><link>https://zenn.dev/forcia_tech/articles/2025_hatano_prisma_pglite</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/2025_hatano_prisma_pglite</guid><pubDate>Wed, 30 Jul 2025 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pAgbwRqA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2581%258B%25E3%2582%2589PGlite%25E3%2581%25AB%25E7%25B9%258B%25E3%2581%2592%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E5%25B1%25A4%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[TypeScript & GraphQL でToDoアプリを開発する #4]]></title><description><![CDATA[
 ⬅️前回の記事はこちら
https://zenn.dev/agent_grow/articles/8011af2c6d0ec6

 ⭐️Apollo Clientの起動
frontend/にplugins/apollo-client.tsを作成

apollo-client.ts
import { defineNuxtPlugin } from '#app'
import { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client/core'

export default defineNuxtPlugin((nuxt...]]></description><link>https://zenn.dev/agent_grow/articles/c5a622f1a98522</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/c5a622f1a98522</guid><pubDate>Tue, 29 Jul 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MOKFeiOF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%2526%2520GraphQL%2520%25E3%2581%25A7ToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2520%25234%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%25A2%25E3%2583%25A9%25E3%2582%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMWU4MWVlNDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>モラウ</dc:creator></item><item><title><![CDATA[kintone向けEffectTS Schemaの型定義ライブラリを公開しました]]></title><description><![CDATA[
 はじめに

 kintoneの型の謎
kintoneでは、フィールドが空の場合に返ってくる値が場面によって違うという不思議な現象が起きます。
具体的には、文字列（1行）フィールドから空の値を取得する場合、基本的には以下のように空の文字列ですが、
"value": ""
「レコード追加画面」または「レコード編集画面」でJavaScript APIを使用した場合、
"value": undefined
が返ってきます。
しかし、登録時には、
"value": ""
または
"value": null
で空の値を登録することができます。
同様に、数値フィールドから空の値を取得する場合には、...]]></description><link>https://zenn.dev/parmenion/articles/806bda0bdda675</link><guid isPermaLink="true">https://zenn.dev/parmenion/articles/806bda0bdda675</guid><pubDate>Tue, 29 Jul 2025 14:00:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u8AV2ljY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kintone%25E5%2590%2591%25E3%2581%2591EffectTS%2520Schema%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2591%25E3%2583%25AB%25E3%2583%25A1%25E3%2583%258B%25E3%2582%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzdjMDBhZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>パルメニオン</dc:creator></item><item><title><![CDATA[React.jsのuseLayoutEffectフック：DOM操作のタイミングを制御する]]></title><description><![CDATA[
 React.js の useLayoutEffect フック：DOM 操作のタイミングを制御する
React.js のuseLayoutEffectは、DOM 操作のタイミングを細かく制御できる強力なフックです。useEffectとの違いと具体的な使い所について詳しく解説します。

 useLayoutEffect とは
useLayoutEffectは、DOM 変更後、ブラウザが画面に変更内容を表示する前に同期的に実行されるフックです。これにより、視覚的なちらつきを防ぎながら DOM 操作を行えます。

 基本的な構文
import { useLayoutEffect, useSt...]]></description><link>https://zenn.dev/tk_niway/articles/react-use-layout-effect-2025-07-29</link><guid isPermaLink="true">https://zenn.dev/tk_niway/articles/react-use-layout-effect-2025-07-29</guid><pubDate>Tue, 29 Jul 2025 12:58:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CsNQMTA7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React.js%25E3%2581%25AEuseLayoutEffect%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%259ADOM%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E5%2588%25B6%25E5%25BE%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk-niway%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWM4NDM4NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk-niway</dc:creator></item><item><title><![CDATA[FossFLOW：おしゃれなアイソメトリック図を描くツール]]></title><description><![CDATA[
 はじめに
以下のような図を見たことはありませんか？
ITサービスやITソリューションの説明ページにおいて、システム構成やワークフローなどを描画するのに使われています。

そうした図をアイソメトリック図（等角投影図）と言い、従来はデザイナーがIllustratorやCADツールを使って描いていましたが、それを無料で非デザイナーでも簡単に作成できるツールがFossFLOWです。
FossFLOWはブラウザ上で動作するPWA（Progressive Web Apps）であり、ReactとIsoflowライブラリを使って開発されています。
ライセンスはUnlicenseライセンスとなっており...]]></description><link>https://zenn.dev/vlntr_telco_rd/articles/92db86dbfa455b</link><guid isPermaLink="true">https://zenn.dev/vlntr_telco_rd/articles/92db86dbfa455b</guid><pubDate>Tue, 29 Jul 2025 06:54:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MHOyCQWW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FossFLOW%25EF%25BC%259A%25E3%2581%258A%25E3%2581%2597%25E3%2582%2583%25E3%2582%258C%25E3%2581%25AA%25E3%2582%25A2%25E3%2582%25A4%25E3%2582%25BD%25E3%2583%25A1%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E5%259B%25B3%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:crazykohei%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiMWRjY2I0MzAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25A8%25E3%2581%2582%25E3%2582%258B%25E9%2580%259A%25E4%25BF%25A1%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E6%259C%2589%25E5%25BF%2597%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHFRR1B6ekZtbVkwZHVzT1lTSGwzTURWdWFJRlA4OTBKVmJJZUVUelFUV2s5WnZjYk09czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>crazykohei</dc:creator></item><item><title><![CDATA[【TypeORM】onDeleteとcascadeの違い]]></title><description><![CDATA[こんにちは、アスエネの吉田です。
私はASUENE ESGの開発をしているのですが、そこでTypescriptを学び…TypeORMを使い…最初に混乱したonDeleteとcascadeの違いについてまとめてみようと思います。
私が調べた際には、これだ！と思うしっくりくる解説が見つけられなかったので、そんな人の役に立てたら嬉しいです。

 はじめに
TypeORMとは、Node.jsのORMです。リレーショナルデータベースを扱う上で、エンティティ間のリレーション設定は避けては通れません。特に、「親エンティティを削除したとき、関連する子エンティティをどう扱うか？」という問題は、開発で悩むポ...]]></description><link>https://zenn.dev/asuene/articles/6d53e001859bef</link><guid isPermaLink="true">https://zenn.dev/asuene/articles/6d53e001859bef</guid><pubDate>Tue, 29 Jul 2025 04:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DsfC4YfY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeORM%25E3%2580%2591onDelete%25E3%2581%25A8cascade%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yoshida%2520ayako%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1ODZkZmY2YmIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2582%25B9%25E3%2582%25A8%25E3%2583%258D%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4NTgzZjY0NGIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoshida ayako</dc:creator></item><item><title><![CDATA[ローカルの Markdown をツリー表示でブラウズできる CLI「mdts」を作りました]]></title><description><![CDATA[
 はじめに
最近 Markdown を触る機会、増えてますよね。 AI ツールの登場で、書いたり読んだりレビューしたりが日常的になってきました。
特に最近は Kiro なんかの登場もあり、Markdown がワークフローの中心になっている人も多いかと思います。
ただ、ローカルに溜まっていく .md ファイルを 読む 体験には、あまり選択肢がありませんでした。
エディタで1ファイルずつ開くのは面倒だし、ツリー構造を見ながら全体を把握したいときにも不便です。
そこで今回 mdts を作りました。
ローカルにある Markdown ファイル群を、 npx mdts のみでツリー構造のままブラ...]]></description><link>https://zenn.dev/unhappychoice/articles/mdts-introduction</link><guid isPermaLink="true">https://zenn.dev/unhappychoice/articles/mdts-introduction</guid><pubDate>Tue, 29 Jul 2025 03:37:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wLcUQUw7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AE%2520Markdown%2520%25E3%2582%2592%25E3%2583%2584%25E3%2583%25AA%25E3%2583%25BC%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25BA%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%2520CLI%25E3%2580%258Cmdts%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuji%2520Ueki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2htc0V1eUFJV0pMZjZCTGdTM1VweG5INnU5N0RCTHlrRkhXZmg5Q2t3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuji Ueki</dc:creator></item><item><title><![CDATA[既存プロジェクトをClaude Codeでリファクタリング - レガシーコードを最新技術スタックへ段階的移行]]></title><description><![CDATA[
 はじめに
レガシーコードのリファクタリングは、多くの開発者にとって避けて通れない課題です。古いJavaScriptコードをTypeScriptに移行したい、クラスコンポーネントを関数コンポーネントに書き換えたい、でも膨大な作業量に圧倒される…。
Claude Codeを使えば、AIの力でこのプロセスを劇的に効率化できます。実際の事例では、リファクタリング時間を約50%削減できたという報告もあります。
本記事では、実際のレガシープロジェクトをClaude Codeでリファクタリングする具体的な手順を解説します。

 実践例：レガシーECサイトのモダン化
今回は、以下のような特徴を持つレ...]]></description><link>https://zenn.dev/sexygo/articles/claude-code-refactoring-guide</link><guid isPermaLink="true">https://zenn.dev/sexygo/articles/claude-code-refactoring-guide</guid><pubDate>Mon, 28 Jul 2025 18:41:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jIC_MmP5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A2%25E5%25AD%2598%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592Claude%2520Code%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2520-%2520%25E3%2583%25AC%25E3%2582%25AC%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259C%2580%25E6%2596%25B0%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25B8%25E6%25AE%25B5%25E9%259A%258E%25E7%259A%2584%25E7%25A7%25BB%25E8%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SEXYGO%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ODVkMzVkOTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SEXYGO</dc:creator></item><item><title><![CDATA[getUserMediaのdefaultが切り替わらない問題について考える]]></title><description><![CDATA[
 概要
getUserMedia({ audio: { deviceId: 'default' } }) を使っているときに、OSの規定マイクを切り替えても反映されないことがある事に気づき調査をしていました。
devicechange イベントは発火されるものの、再取得しても以前のマイクが返ってくることがあり、意図したデバイスで録音されないという不具合でした。
この問題の解決に向けて行ったこと、考えたことについてまとめてみました。

 問題の発生条件


getUserMedia({ audio: { deviceId: 'default' } }) を使って音声ストリームを取得
OS...]]></description><link>https://zenn.dev/portalkeyinc/articles/4892e6d57ace70</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/4892e6d57ace70</guid><pubDate>Mon, 28 Jul 2025 15:33:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sIKsate_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:getUserMedia%25E3%2581%25AEdefault%25E3%2581%258C%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2582%258F%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:da-shibuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR2Y0dCWGJ5bmIwc3k4TnQyZll4aU8xQ2xBN1ZwNzAtR2RJeTR4WW1uc2JEMEhRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>da-shibuya</dc:creator></item><item><title><![CDATA[TypeScriptの型ガードについて]]></title><description><![CDATA[今回は「型ガード」について改めて調べたため、記事としてまとめています！
この記事を読めば、あなたはTypeScriptの型ガードの基本を理解し、JavaScriptでありがちな「あれ？」を未然に防ぎ、もっと安全で分かりやすいコードを書けるようになります。そして、きっと「型ガード、面白い！実際に試してみたい！」と感じてもらえるはずです！🚀


 1. JavaScriptの「あれ？」をなくそう！型チェックの重要性とは？🔍
まず、TypeScriptと型ガードの話に入る前に、なぜ「型」がそんなに大切なのか、少しだけお話しさせてくださいね。
私たちが書くプログラムの多くは、異なる種類のデータを...]]></description><link>https://zenn.dev/noah11/articles/3dcfebb3ecbfa2</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/3dcfebb3ecbfa2</guid><pubDate>Mon, 28 Jul 2025 08:13:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4OsRCC43--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA[Apollo Client入門 - ハンズオンで学ぶGraphQL クライアント]]></title><description><![CDATA[Apollo ClientとGraphQLの基本的な使い方を、実際にコードを書きながら学べるハンズオン形式のチュートリアルです。
学べる内容：
・useQueryフックを使った基本的なデータ取得
・変数を使った動的クエリ
・キャッシュシステムの活用
・エラーハンドリング
対象読者：Reactの基本を理解しているフロントエンド開発者
使用技術：React、Apollo Client、GraphQL
実際にコードを書きながら学ぶことで、Apollo Clientを使ったReactアプリケーションの構築ができるようになります。]]></description><link>https://zenn.dev/msdsm/books/ccc2caadc23abd</link><guid isPermaLink="true">https://zenn.dev/msdsm/books/ccc2caadc23abd</guid><pubDate>Mon, 28 Jul 2025 06:21:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--28scuSkh--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci83NzRiMTVkOTRkLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>msdsm</dc:creator></item><item><title><![CDATA[Reporting APIでWebを監視してみた]]></title><description><![CDATA[
 はじめに
最近は、Client Side AIの情報収集のために、Chrome Platform Status でリリースされたJavaScript APIをチェックするようにしています
そこで Reporting API という セキュリティ違反 や 非推奨API の呼び出しをモニタリングする機能があったため試してみました!

 仕組み
JavaScript APIですが、レポートの送信にはJavaScriptを利用するのではなく、HTTP Headerに送信先や送信対象を設定することで、エラー発生時に指定したEndpointに自動的にレポートがPOST送信されます



Key
...]]></description><link>https://zenn.dev/metalmental/articles/20250727_reporting-api</link><guid isPermaLink="true">https://zenn.dev/metalmental/articles/20250727_reporting-api</guid><pubDate>Sun, 27 Jul 2025 13:33:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TVtrlZiz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Reporting%2520API%25E3%2581%25A7Web%25E3%2582%2592%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:metalmental%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzJYbHgtVTZpT1J6VWI0WVZiYjlTUWNoa1FMRzZnalktdmFiZl9YYjJocHd3dk01NHY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>metalmental</dc:creator></item><item><title><![CDATA[TSでType Class Patternを実装してみる]]></title><description><![CDATA[
 TL;DR

fp-ts の Introduction series to FP-TS を読んで、関数型を学習してみるシリーズ。

Intro to fp-ts, part 2: Type Class Patternを読んで実装してみる。

!
筆者は関数型の初心者です。
解釈に間違いがある可能性があります。


 Type Class
Type Class は、Haskell などの純粋関数型言語から来た「型に対する振る舞い（インターフェース）を定義し、それを具体的な型に “インスタンス化” していく」デザインパターンです。
Type Class では「ある型 A がクラス B に...]]></description><link>https://zenn.dev/nakayan/articles/3ce1feb392844a</link><guid isPermaLink="true">https://zenn.dev/nakayan/articles/3ce1feb392844a</guid><pubDate>Sun, 27 Jul 2025 11:30:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xcgMh-Z8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%25E3%2581%25A7Type%2520Class%2520Pattern%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:n%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvbi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>n</dc:creator></item><item><title><![CDATA[ユースケースから学ぶ satisfies]]></title><description><![CDATA[
 この記事は何か
typescript 4.9 で satisfies operator がリリースされています。
しかし、typescript 全体からみると比較的新しい? ためか、あまりまだ satisfies が有効な場面で使われていない印象を受けるレポジトリが多いです。
またこれに間接的に関係するのか、AI が提出するコードも、satisfies を交えたコードをあまり提出してきません。
satisfies についての説明は web に多々あれど、いまいち使い所がわからない方のための記事です.

 前提知識

「immutable な変数とは何か」を把握していること

参考記事...]]></description><link>https://zenn.dev/tomatommy/articles/d1d1d44c570d2e</link><guid isPermaLink="true">https://zenn.dev/tomatommy/articles/d1d1d44c570d2e</guid><pubDate>Sun, 27 Jul 2025 11:19:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NIsSnSWQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6%2520satisfies%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%25BE%25E3%2581%25A8%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDFtVldkMzJSdDFmQXZnZXdqanRjLVktZjIzbm9ON0RMVmFySXpPcDVkNHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とまとみ</dc:creator></item><item><title><![CDATA[Hono + AWS Lambda を Terraform でデプロイする]]></title><description><![CDATA[
 Hono + AWS Lambda を Terraform でデプロイする
Honoで作成したアプリケーションを、AWS SAMやCDKを使わずにTerraformのみでAWS Lambdaにデプロイする構成を紹介します。
会社のサーバーレス基盤を再構築するにあたり、個人的にHonoで実現できないかと考えたのがきっかけです。

 対象

AWS Lambdaで外部連携用のAPIを構築したい方
モノレポで管理している既存のTypeScriptコンポーネント資産を活用できるサーバーレス基盤に興味がある方
PHPerからTypeScriptに転向し、TypeScript、Terraform...]]></description><link>https://zenn.dev/yasu_k/articles/0f19b6cbf87318</link><guid isPermaLink="true">https://zenn.dev/yasu_k/articles/0f19b6cbf87318</guid><pubDate>Sun, 27 Jul 2025 10:50:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--90wgvewC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520%252B%2520AWS%2520Lambda%2520%25E3%2582%2592%2520Terraform%2520%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yasu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBjZTE3NDcxYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yasu</dc:creator></item><item><title><![CDATA[新サービス「パケットベース」に公開APIドキュメント設定機能を追加！]]></title><description><![CDATA[パケットベース - Packetsbase

先日個人で開発した新サービス「パケットベース」に、新機能を追加しました！

 概要
「パケットベース」は、組織間・個人間でJSONデータをやりとりでき、データをAPI公開できるサービスです。

今回、公開APIのドキュメント表示機能を追加して、公開APIの使い方や案内を設定できるようにしました。

 準備
せっかくだから、ドキュメントは Markdown で書けるようにします。
「パケットベース」は Markdown を使っていなかったので、モジュールを追加します。
今回は Marked モジュールと highlight.js を使いました。...]]></description><link>https://zenn.dev/yamakazoo/articles/a8593fa4b75f2f</link><guid isPermaLink="true">https://zenn.dev/yamakazoo/articles/a8593fa4b75f2f</guid><pubDate>Sun, 27 Jul 2025 06:30:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9N_GlaKh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2580%258C%25E3%2583%2591%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2580%258D%25E3%2581%25AB%25E5%2585%25AC%25E9%2596%258BAPI%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E8%25A8%25AD%25E5%25AE%259A%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A4%25E3%2583%259E%25E3%2582%25AB%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0YTM5ODY2NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヤマカズ</dc:creator></item></channel></rss>