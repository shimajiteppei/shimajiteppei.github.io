<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 15 Mar 2025 06:55:54 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ゆる〜っと理解 Zustand]]></title><description><![CDATA[State管理としてHookベースで開発体験が良いと噂のZustandを調査した時のまとめ

 基本的な使い方
import { create, createSelectors } from 'zustand'

type State = {
  firstName: string
  lastName: string
}

type Action = {
  updateFirstName: (firstName: State['firstName']) =&gt; void
  updateLastName: (lastName: State['lastName']) =&gt; v...]]></description><link>https://zenn.dev/yoshipin/articles/45d3a0fb6e14d7</link><guid isPermaLink="true">https://zenn.dev/yoshipin/articles/45d3a0fb6e14d7</guid><pubDate>Sat, 15 Mar 2025 01:37:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--na-Qsl6H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2586%25E3%2582%258B%25E3%2580%259C%25E3%2581%25A3%25E3%2581%25A8%25E7%2590%2586%25E8%25A7%25A3%2520Zustand%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yoshipin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxN2Q2YjcyNjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoshipin</dc:creator></item><item><title><![CDATA[[bun]PrismaをBunで使えない]]></title><description><![CDATA[
 発生した問題
ランタイム、パッケージマネージャにYarnの３系を使用していたのだが、動作が遅かったりすることがあり、高速化のためにBunに切り替えたものの、bun run prisma generateを実行するとエラーになった。

 環境

Docker version 27.5.1, build 9f9e405
Mac OS  15.3.1（24D70） Intel


 結論、Bun単体でPrisma は使えない
以下のイシューで議論されているが、以下の通り。

Adding&nbsp;COPY --from=node:20 /usr/local/bin/node /usr/l...]]></description><link>https://zenn.dev/marakasu/articles/9a858eb0768382</link><guid isPermaLink="true">https://zenn.dev/marakasu/articles/9a858eb0768382</guid><pubDate>Fri, 14 Mar 2025 16:28:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LB29Smff--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bbun%255DPrisma%25E3%2582%2592Bun%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2589%25E3%2581%258B%25E3%2581%2599%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMjM3OWQ4YmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まらかすたろう</dc:creator></item><item><title><![CDATA[UTF8形式のファイルをSJISでエンコードして、vbsで使えるようにする]]></title><description><![CDATA[こんにちは、クソ雑魚エンジニアです。
今回は、関わっているプロジェクトにて、手作業でファイルの生成作業を行なっていた箇所について、面倒臭すぎたので自動で生成できるようにするためのスクリプトを書きました。
エンジニアというのは面倒くさがりなので、自動化をしたがる生き物なのです。
またその際、Windows特有の面倒な部分にぶちあたったので、未来への知見を残すために書きます。

 問題

ファイルを使用するシステムでは、vbsがSJISでなければならない。
VSCodeでvbsを開いた際に、UTF-8形式で読み込まれる。
ただし、日本語箇所は文字化けしている。
Shift-JISでエンコード...]]></description><link>https://zenn.dev/omeroid/articles/write-sjis-in-utf8</link><guid isPermaLink="true">https://zenn.dev/omeroid/articles/write-sjis-in-utf8</guid><pubDate>Fri, 14 Mar 2025 10:27:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ttKgpjcR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UTF8%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592SJIS%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581vbs%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:rikusen0335%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNWYzNTgwMTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:OMEROID%2520TECH%2520BLOG%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkLW9OTUtGUVNiT1B4RWhDZjRoQkJaU3E4bmg3a2NSTEoxanpvaTI0PXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rikusen0335</dc:creator></item><item><title><![CDATA[ツイッター風アプリをTypeScript × DDD × クリーンアーキテクチャで実装してみた]]></title><description><![CDATA[こんにちは！ゲンシュンです。
最近データのETL処理をpythonで書くことが多くて、久しぶりに型でゴリゴリ開発したいな〜という気持ちになりました笑。久しくDDDとかクリーンアーキテクチャとかやってないので、今あらためて見直すと新しい発見や気付きあるかも〜と思い、TypeScript × Node.jsでそれっぽい実装をしてみました！正直間違えていること、浅い思考、微妙な実装たくさんあるかと思いますが、現段階で思考を整理してみたのをまとめた感じなので、流し読み程度で！
今回の目的は「DDDのエッセンスとクリーンアーキテクチャの依存の方向性を、Typescriptの型で表現してみる」で、t...]]></description><link>https://zenn.dev/gen_shun/articles/e49b13dd651ad0</link><guid isPermaLink="true">https://zenn.dev/gen_shun/articles/e49b13dd651ad0</guid><pubDate>Fri, 14 Mar 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BnF7dqN2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2584%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25BF%25E3%2583%25BC%25E9%25A2%25A8%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592TypeScript%2520%25C3%2597%2520DDD%2520%25C3%2597%2520%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B2%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dmcWQ5NlBzVE1fUmpjSklTZV9vRlZ4TFZBMDNYLWRaZTJOTWNBdFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゲンシュン</dc:creator></item><item><title><![CDATA[@Queryの使い方]]></title><description><![CDATA[Todoという機能を作っている前提で書きます

 目的
引数を一つ以上受け取りたい

 本文
Queryをimportして、@getデコレータにくっつける関数の引数に、@Queryデコレータをくっつけるだけ。
以下のような形式で書く
@Query('エンドポイントで受け取るときの名前') 引数の名前:引数の型
引数の型はデフォルトでstring。
型注釈つけるだけでは、string以外にはならない。パイプってのを使えばstring以外でも受け取れる。
(https://zenn.dev/toshinobu/articles/168666b2b1b1dc#本題の問題)

todo.cont...]]></description><link>https://zenn.dev/ritsumei_arupak/articles/f33323bc5a4891</link><guid isPermaLink="true">https://zenn.dev/ritsumei_arupak/articles/f33323bc5a4891</guid><pubDate>Fri, 14 Mar 2025 08:15:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ABcTpvHd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%2540Query%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu88%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjMjE1NTg5OGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25AB%258B%25E5%2591%25BD%25E9%25A4%25A8_%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AB_%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25AB%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlBCZnc5RkN1dXhmbHN1ZmRNWURtUU42U3BPZ241WVNpREpTRnhZc0paSTYtMWZxS1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu88</dc:creator></item><item><title><![CDATA[classvalidatorが正常に働くために]]></title><description><![CDATA[とりまバリデーションパイプをグローバルにかけるのを忘れずに

main.ts
  const app = await NestFactory.create(AppModule);
  app.useGlobalPipes(new ValidationPipe({
    whitelist: true,
    forbidNonWhitelisted: true,
    transform: true,
  }));
  await app.listen(3001);

whitelist
trueなら、デコレータのついてないプロパティ削除。デコレータの必要ないプロパティが消されない...]]></description><link>https://zenn.dev/ritsumei_arupak/articles/08c52a1554f4e6</link><guid isPermaLink="true">https://zenn.dev/ritsumei_arupak/articles/08c52a1554f4e6</guid><pubDate>Fri, 14 Mar 2025 08:13:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kgKSBh9d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:classvalidator%25E3%2581%258C%25E6%25AD%25A3%25E5%25B8%25B8%25E3%2581%25AB%25E5%2583%258D%25E3%2581%258F%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yuu88%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjMjE1NTg5OGIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25AB%258B%25E5%2591%25BD%25E9%25A4%25A8_%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AB_%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25AB%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlBCZnc5RkN1dXhmbHN1ZmRNWURtUU42U3BPZ241WVNpREpTRnhZc0paSTYtMWZxS1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu88</dc:creator></item><item><title><![CDATA[新・パッション駆動開発]]></title><description><![CDATA[こんにちは。
4月から熱い会社に入社する、一児の母エンジニアです。
日々スピード感をもってプロダクトを作るなかで開発手法にも“熱さ”が必要だと感じ、熱い会社ならではの開発駆動として『パッション駆動開発』を提唱することにしましたので、備忘録としてまとめたいと思います。

 現状
「パッション駆動開発」は「情熱だけを持って雑にシステム作る」という皮肉的な意味合いで使われているようです。
それを、弊社のMVVに絡めた、本気の開発手法として定義し直したいと思いました。

 新・パッション駆動開発とは
主に2つのポイントがあります。

 ①世の中の課題を解決するサービス開発
世の中は課題だらけです...]]></description><link>https://zenn.dev/ri_new_e/articles/feda4a74aadf88</link><guid isPermaLink="true">https://zenn.dev/ri_new_e/articles/feda4a74aadf88</guid><pubDate>Fri, 14 Mar 2025 06:27:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jtY7qyHK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E3%2583%25BB%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%259E%25E3%2581%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZmJmZjIwMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ママみ</dc:creator></item><item><title><![CDATA[TypeScript Language ServerをMCPで使いたい（asdf使ってる人向け）]]></title><description><![CDATA[
 前提

メインはRoo Code + Cloude 3.7 Sonnetでコードを書いている
Claude Desktop + Filesystem MCP Serverでもコードを書いている

エディタから得られる情報がないのでRoo Codeと比べてつらい




 やったこと
MCP Language Serverを入れた。
go install github.com/isaacphi/mcp-language-server@latest
TypeScript Language Serverを入れた。
npm install -g typescript typescript-l...]]></description><link>https://zenn.dev/t3ta/articles/5f5953cbe07a2d</link><guid isPermaLink="true">https://zenn.dev/t3ta/articles/5f5953cbe07a2d</guid><pubDate>Fri, 14 Mar 2025 04:22:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tuCQaahr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520Language%2520Server%25E3%2582%2592MCP%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2588asdf%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E4%25BA%25BA%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takahito%2520Mita%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takahito Mita</dc:creator></item><item><title><![CDATA[Next.jsのSSG（静的サイト生成）でWebサイトを作成する]]></title><description><![CDATA[
 Next.jsのSSG（静的サイト生成）でWebサイトを作成する

 はじめに
Next.jsは、Reactをベースにしたフレームワークであり、静的サイト生成（SSG）やサーバーサイドレンダリング（SSR）、ISR（インクリメンタル・スタティック・リジェネレーション）を簡単に実装できます。本記事では、最新のApp Router（appディレクトリ）を利用してSSGを実装する方法を解説します。

 Next.jsのSSGとは？
SSG（Static Site Generation）は、ビルド時にHTMLを生成し、CDN（コンテンツデリバリーネットワーク）を活用して配信する仕組みです。
...]]></description><link>https://zenn.dev/ugaaa/articles/079cb06d4851d3</link><guid isPermaLink="true">https://zenn.dev/ugaaa/articles/079cb06d4851d3</guid><pubDate>Fri, 14 Mar 2025 04:11:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MYnLBy1---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25AESSG%25EF%25BC%2588%25E9%259D%2599%25E7%259A%2584%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E7%2594%259F%25E6%2588%2590%25EF%25BC%2589%25E3%2581%25A7Web%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:UGA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FZcHBFLWpxZlVSZ0tiTGhMc3lrNnRYVEV5MGFZcWZsR2NMWWRCRVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>UGA</dc:creator></item><item><title><![CDATA[エナーバンクのプロダクトを支える基本開発思想とコア技術]]></title><description><![CDATA[
 はじめに
エナーバンクの共同創業者で、取締役CTOの関根です！
弊社は「エネルギー調達をもっとシンプルに」をビジョンに、エネルギー・環境・デジタルテクノロジーの専門力で、脱炭素実現やエネルギー調達に取り組む企業や官公庁・自治体を支援しています。
これまで創業期からの「エネオク」に始まり、「ソラレコ」や「エネパーク」といった複数のプロダクトをリリースしてきました。
本記事では、エナーバンクのプロダクトを支える基本開発思想とコア技術を紹介します。


 基本開発思想：Full-Stack TypeScriptとサーバーレスアーキテクチャー
エナーバンクのプロダクト開発における基本思想とな...]]></description><link>https://zenn.dev/enerbank/articles/b5780743ed3123</link><guid isPermaLink="true">https://zenn.dev/enerbank/articles/b5780743ed3123</guid><pubDate>Fri, 14 Mar 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--65Bk-FeR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E5%259F%25BA%25E6%259C%25AC%25E9%2596%258B%25E7%2599%25BA%25E6%2580%259D%25E6%2583%25B3%25E3%2581%25A8%25E3%2582%25B3%25E3%2582%25A2%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%2596%25A2%25E6%25A0%25B9%25E5%25A4%25A7%25E8%25BC%2594%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y3Njk1M2IwMTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A8%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25B3%25E3%2582%25AF%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwOTI4ZmY3YjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>関根大輔</dc:creator></item><item><title><![CDATA[Drizzle ORMでテストデータの生成を簡単にする]]></title><description><![CDATA[
 はじめに
弊社では、テスト実行時にデータベースをモックせず、Testcontainers を用いて実際のデータベースを使用したテストを行っています。
このようなテストを行うためには、事前にテストデータを準備する必要があります。
しかし、テストデータの作成は煩雑になりがちで、可読性の低下やメンテナンスの手間が増える原因となります。
そこで、テストデータの生成をより簡単にするために、Drizzle ORMを活用したテストデータ生成パッケージ@praha/drizzle-factory を開発しました。
本記事では、@praha/drizzle-factoryの基本的な使い方について紹介し...]]></description><link>https://zenn.dev/praha/articles/7c202f5906e065</link><guid isPermaLink="true">https://zenn.dev/praha/articles/7c202f5906e065</guid><pubDate>Thu, 13 Mar 2025 23:51:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4wFuoujX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drizzle%2520ORM%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Karibash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiZDIyMmFjMTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PrAha%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Karibash</dc:creator></item><item><title><![CDATA[Cline任せでコード書いてたらAPIクレジットが爆散したのでClaude Desktop + MCPをいい感じにしてサブスクだけで無双する]]></title><description><![CDATA[https://x.com/ukokq/status/1897214924088336695
タイトルは半分釣りです。課金額が気づいたらえらいことになってたのは本当です。
というわけで、VSCodeで直接使うのではなく、VSCodeに加えて定額サブスクのClaude ProとそのDesktopアプリからコード生成や編集をしてもらうことで、APIをなるべく使わずかつ楽に開発を助けてもらえないか試してみることにします。
!
無料版Claudeでもできなくはないですが、コード生成やってるとコンテキストが一瞬で制限に達して使い物にならなくなります。


 MCPサーバーが使えるのは現状Deskt...]]></description><link>https://zenn.dev/ukkz/articles/c8726063edd2cd</link><guid isPermaLink="true">https://zenn.dev/ukkz/articles/c8726063edd2cd</guid><pubDate>Thu, 13 Mar 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Uqlg_LKV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cline%25E4%25BB%25BB%25E3%2581%259B%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%259F%25E3%2582%2589API%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25B8%25E3%2583%2583%25E3%2583%2588%25E3%2581%258C%25E7%2588%2586%25E6%2595%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7Claude%2520Desktop%2520%252B%2520MCP%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2581%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwNjRiNmZkMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うこ</dc:creator></item><item><title><![CDATA[コードを書くことと、システムを作ることの違い: プログラミング初級者から中級者へ]]></title><description><![CDATA[プログラミング初心者と中級者の違いを掘り下げ、単にコードを書くスキルから、実務で通用するシステム設計・開発能力への成長過程を解説する実践的ガイド。(執筆中)]]></description><link>https://zenn.dev/udonnamerou/books/31e0ba1efe0f16</link><guid isPermaLink="true">https://zenn.dev/udonnamerou/books/31e0ba1efe0f16</guid><pubDate>Thu, 13 Mar 2025 15:47:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K8Oms3Bf--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81MWMxODg0NWY5LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>うどんなめろう</dc:creator></item><item><title><![CDATA[# React × Tailwind × Zustand でエンジニアポートフォリオを作成してみた]]></title><description><![CDATA[
 はじめに
エンジニアとして、自分のスキルや実績をアピールできるポートフォリオサイトを作成しました。今回の開発では、React × Tailwind CSS × Zustand を活用し、レスポンシブ対応・アニメーション付きのサイトを構築しました。本記事では、実際の開発プロセスや技術選定のポイント、工夫した点について解説します。


 技術スタック
今回のポートフォリオサイトの主な技術スタックは以下の通りです。



技術
用途




React (Vite)
フロントエンドの構築


Tailwind CSS
スタイリング


Zustand
グローバル状態管理


Framer ...]]></description><link>https://zenn.dev/taisukenezu/articles/9e67c8836fd82a</link><guid isPermaLink="true">https://zenn.dev/taisukenezu/articles/9e67c8836fd82a</guid><pubDate>Thu, 13 Mar 2025 13:29:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c8mANIvu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523%2520React%2520%25C3%2597%2520Tailwind%2520%25C3%2597%2520Zustand%2520%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AA%25E3%2582%25AA%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVpMRkpscmJjOGI4aVpVQ3JOUE1BemsyLXM5M2E0Y2YyakpiRjFMLW9KWm5fYjF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taisuke</dc:creator></item><item><title><![CDATA[AsyncDisposableStack でリソース確保処理を書く]]></title><description><![CDATA[
 やりたいこと
動機: Puppteer はプロセス外部のリソースを触るので、正しく終了させないとプロセス終了後にChromeが起動しっぱなしになってしまう。
TS 5.2 から使える await using と AsyncDisposableStack でリソース開放を逐次予約する。

 tl;dr

本当は await using で個別にリソースを確保/開放したいが、まだ諸々のライブラリが対応してない
自分でラップするのが面倒
なので、 AsyncDisposableStack.prototype.defer に逐次放り込むのが楽


 準備
import "core-js/pr...]]></description><link>https://zenn.dev/mizchi/articles/ts-using-resource-management</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ts-using-resource-management</guid><pubDate>Thu, 13 Mar 2025 10:44:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lTZCIgAn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AsyncDisposableStack%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E7%25A2%25BA%25E4%25BF%259D%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[ゼロランタイムのCSS-in-JSを作った話]]></title><description><![CDATA[
 モチベーション
使いたいのがなかった上に*.module.cssに煩わしさを感じていた。

 筆者のこれまでのCSS経験
Tailwind CSS ⇨ styled-jsx ⇨ emotioin ⇨ Chakra UI ⇨ Metarial UI ⇨ CSS Modules

 興味のあったCSS in JS
vanilla-extract・Stylex・Linaria

 作成するにあたっての条件
・ゼロランタイム
・機能盛り盛りよりもミニミニな実装にしたい
・設定を煩わしくしたくないのでバンドラー専用プラグインを作りたくない
・補完が効く・リンターが使える
・React19 &a...]]></description><link>https://zenn.dev/refirst11/articles/81702cc1a3a475</link><guid isPermaLink="true">https://zenn.dev/refirst11/articles/81702cc1a3a475</guid><pubDate>Thu, 13 Mar 2025 10:37:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zx9zGSxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BC%25E3%2583%25AD%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AECSS-in-JS%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Refirst%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MjM3MzUwOGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Refirst</dc:creator></item><item><title><![CDATA[モジュラモノリスにおける Prisma を利用した DB アクセスの秩序を保つ]]></title><description><![CDATA[Ubie で副業として Backend For Frontend (BFF) サーバーの開発を担当している nissy-dev です。
今回は、モジュラモノリスアーキテクチャにおける Prisma を利用した DB アクセスの課題と、その課題に対処するために作成した lint ルールについて詳しく解説します。

 NestJS と Prisma で作るモジュラモノリス
ユビーでは、BFF の GraphQL サーバーを実装する際に、NestJS を利用したモジュラモノリスを採用しています。この BFF サーバーは、マイクロサービスを呼び出すだけではなく、Prisma を使用したデータベー...]]></description><link>https://zenn.dev/ubie_dev/articles/nestjs-prisma-db-access-management</link><guid isPermaLink="true">https://zenn.dev/ubie_dev/articles/nestjs-prisma-db-access-management</guid><pubDate>Thu, 13 Mar 2025 10:22:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ipMVdbyt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AA%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%2520Prisma%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%2520DB%2520%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%25AE%25E7%25A7%25A9%25E5%25BA%258F%25E3%2582%2592%25E4%25BF%259D%25E3%2581%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nissy-dev%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOWMzMWRhODMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Ubie%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJjMzg3ZjYwNjMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nissy-dev</dc:creator></item><item><title><![CDATA[人生初のCLI開発（algolia-uploader）]]></title><description><![CDATA[
 初めに
つい最近まとまった時間をとれたので、以前からちょっとづつ開発していたCLIを公開しました。

algolia-uploader
algolia-uploader - npm

ローカル環境で用意したAlgolia用のデータをコマンドひとつでリモートに反映させるという機能を持ったライブラリです。Algoliaについての説明はこの記事の対象外なので省略します。
なお、このライブラリはatomic-algoliaという、とても素晴らしいライブラリを（よりモダンな構成で）作り直したものです。
「同じライブラリがすでにあるならいらないのでは？」と思われるかもしれませんが、残念ながら長い...]]></description><link>https://zenn.dev/htnabe/articles/6ce99289812aa4</link><guid isPermaLink="true">https://zenn.dev/htnabe/articles/6ce99289812aa4</guid><pubDate>Wed, 12 Mar 2025 20:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C32hjvqI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BA%25BA%25E7%2594%259F%25E5%2588%259D%25E3%2581%25AECLI%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2588algolia-uploader%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:htnabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyOWNmYzY0ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>htnabe</dc:creator></item><item><title><![CDATA[Stripe Checkout の紹介と導入【Next.js】]]></title><description><![CDATA[
 はじめに
先日、Next.js の勉強会で、Srripe による決済の実装を取り上げました 🛒
ウェブアプリに、セキュアな決済システムを一から構築するのは、
非常に大変で時間がかかります。
今回は、Strpe 初心者の方向けに、
「Stripe を Next.js で使う方法」についてまとめました！
ざっと雰囲気を掴む参考になれば、嬉しいです 🙌

 Stripe とは？
Stripe は、オンライン決済処理で、最も有名なサービスの 1 つです。
https://stripe.com/jp
開発者向けのサービスであり、
クレジットカード決済をはじめ、様々な決済方法を簡単に実装できます...]]></description><link>https://zenn.dev/b13o/articles/about-stripe</link><guid isPermaLink="true">https://zenn.dev/b13o/articles/about-stripe</guid><pubDate>Wed, 12 Mar 2025 14:16:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hA4eo1Ni--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stripe%2520Checkout%2520%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2580%2590Next.js%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazzyfrog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYWE3NjM3NGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:b13o%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMzRmZDk1NTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[npmについての最低限知識]]></title><description><![CDATA[
 npmとは
Node Package Managerというパッケージマネージャー

 パッケージマネージャーとは？
ソフトウェア開発において必要な「部品」（ライブラリやフレームワークなど）を探して、インストールし、更新し、管理するためのツール。
パッケージマネージャーがなければ、必要なコードを自分で探してダウンロードし、正しい場所に配置し、バージョンを確認し、更新を手動で行う必要がある。
パッケージマネージャーはこれらの作業を自動化して、開発者がコードの作成に集中できるようにしてくれる。

 主な役割

 パッケージのインストール:
必要なコードをインターネットから自動的に探してダウ...]]></description><link>https://zenn.dev/gdf_takahashi/articles/d99de7ee4ed0dc</link><guid isPermaLink="true">https://zenn.dev/gdf_takahashi/articles/d99de7ee4ed0dc</guid><pubDate>Wed, 12 Mar 2025 05:18:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iD2J3kvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:npm%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E6%25A9%258B%2520%25E9%2581%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1FoMHB4MkdnWXBCSXJKS2VVT0lwb0VPTS03N2stSUpWaGk2TWJncTYzbE1TbUt0bz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高橋 遼</dc:creator></item></channel></rss>