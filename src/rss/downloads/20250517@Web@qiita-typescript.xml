<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-05-17T20:44:17+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2027277</id>
    <published>2025-05-17T20:44:17+09:00</published>
    <updated>2025-05-17T20:44:17+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/shima14142/items/317007c08dbbeb033ca0"/>
    <url>https://qiita.com/shima14142/items/317007c08dbbeb033ca0</url>
    <title>NonNullable&lt;T&gt;の実装が簡略化されていた（TS 4.8）</title>
    <content type="html">どしたん
TypeScript には、型 T から null と undefined を除外するユーティリティ型 NonNullable&amp;lt;T&amp;gt; が用意されています。過去の動画を参照していたところ、以…</content>
    <author>
      <name>shima14142</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2027182</id>
    <published>2025-05-17T15:55:17+09:00</published>
    <updated>2025-05-17T15:55:17+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/knx34/items/ef815b29fb0cbb192790"/>
    <url>https://qiita.com/knx34/items/ef815b29fb0cbb192790</url>
    <title>Next.js Typescript で作成するブログ作成手順[完全版]</title>
    <content type="html">Next.js Typescript で作成するブログ作成手順[完全版]
手順書

ドメイン・DNS設定
環境変数・APIキーの変
更

ドメイン・DNS設定

お名前.comで取得

microCMSのア…</content>
    <author>
      <name>knx34</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2027095</id>
    <published>2025-05-17T11:25:58+09:00</published>
    <updated>2025-05-17T11:25:58+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/sogengineer/items/0ed71e56949587eb276a"/>
    <url>https://qiita.com/sogengineer/items/0ed71e56949587eb276a</url>
    <title>分岐地獄からの脱出：オブジェクトマップパターンで書く、もっと読みやすいコード（TypeScript, JavaScript）</title>
    <content type="html">こんにちは！
コードレビューで何度も指摘しているのが、複雑化したif文やswitch文の問題です。
それを解決する一つの手段が「オブジェクトマップパターン」です。
このパターンを使えば、コードの保守…</content>
    <author>
      <name>sogengineer</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2027042</id>
    <published>2025-05-17T08:34:27+09:00</published>
    <updated>2025-05-17T08:34:27+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yyuta750/items/b6e34917ddf34dca1f30"/>
    <url>https://qiita.com/yyuta750/items/b6e34917ddf34dca1f30</url>
    <title>【JavaScript】function,アロー関数どっち使ってる？違いをまとめてみた</title>
    <content type="html">結論から（比較表）


1.thisの扱いについて
thisの扱いはfunctionとアロー関数で異なります。
functionの場合
functionで定義した関数のthisは呼び出しもとで動的に変わ…</content>
    <author>
      <name>yyuta750</name>
    </author>
  </entry>
</feed>
