<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/javascript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/javascript/feed"/>
  <title>JavaScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaScriptタグが付けられた新着記事</description>
  <updated>2025-09-06T17:47:49+09:00</updated>
  <link>https://qiita.com/tags/javascript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076743</id>
    <published>2025-09-06T17:47:49+09:00</published>
    <updated>2025-09-06T17:47:49+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tettekete/items/9335e9d9ea00311626aa"/>
    <url>https://qiita.com/tettekete/items/9335e9d9ea00311626aa</url>
    <title>JS プロジェクトのまま TS の型チェックの恩恵を受ける方法</title>
    <content type="text">概要

本来の用途

// @ts-check + JSDoc による型定義の方法

大まかな手順

1. tsconfig.json の設定と型のインストールを行う

tsconfig.json

2. ソースコードに // @ts-check + JSDoc...</content>
    <author>
      <name>tettekete</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076739</id>
    <published>2025-09-06T17:33:56+09:00</published>
    <updated>2025-09-06T17:33:56+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kym950205/items/e13ec05bf8d7ff7a52de"/>
    <url>https://qiita.com/kym950205/items/e13ec05bf8d7ff7a52de</url>
    <title>JavaScriptトランスパイラーBabelの基礎と応用</title>
    <content type="text">トランスパイラー Babel

はじめに
Babelは、最新のJavaScriptコードやJSXなどを古い環境でも実行可能なように変換してくれるJavaScriptコンパイラーです。

主要な役割

最新JavaScript文法のトランスパイル

ES6+文法は古いブラウ...</content>
    <author>
      <name>kym950205</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076715</id>
    <published>2025-09-06T16:20:49+09:00</published>
    <updated>2025-09-06T16:20:49+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kym950205/items/3c39f0839a0488bd0aa4"/>
    <url>https://qiita.com/kym950205/items/3c39f0839a0488bd0aa4</url>
    <title>JavaScriptモジュール化とバンドラーの基礎</title>
    <content type="text">JavaScriptのモジュール化とバンドラー

はじめに
JavaScriptの初期環境では、モジュール化の必要性はウェブアプリケーションの複雑性の増加とパフォーマンスの最適化の要件の増加によって生じました。JavaScriptはもともと、小さなインタラクションのための...</content>
    <author>
      <name>kym950205</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2076710</id>
    <published>2025-09-06T16:08:59+09:00</published>
    <updated>2025-09-06T16:08:59+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/kym950205/items/70bba7e29f171db01545"/>
    <url>https://qiita.com/kym950205/items/70bba7e29f171db01545</url>
    <title>JavaScriptの型変換の基礎: 暗黙的型変換と明示的型変換</title>
    <content type="text">JavaScriptの型変換
JavaScriptは動的タイピング言語であり、変数のデータ型は状況に応じて変更される可能性があります。この型変換は、**暗黙的型変換(Implicit Coercion)と明示的型変換(Explicit Conversion)**の2種類に...</content>
    <author>
      <name>kym950205</name>
    </author>
  </entry>
</feed>
