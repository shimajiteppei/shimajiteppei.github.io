<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Kotlin」のフィード]]></title><description><![CDATA[Zennのトピック「Kotlin」のRSSフィードです]]></description><link>https://zenn.dev/topics/kotlin</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/0913f0325d.png</url><title>Zennの「Kotlin」のフィード</title><link>https://zenn.dev/topics/kotlin</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 25 Dec 2024 06:44:19 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/kotlin/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Excelシート循環参照をトポロジカルソートで判定してみる(1/3)]]></title><description><![CDATA[こんにちは！アルダグラムでレポートチームのエンジニアをしている志茂です。
レポートチームでは、お客様が利用されているExcelファイルをKANNA上にアップロードし、Webから編集できるような機能を開発しております。
Excelファイルを読み込み編集できるようにするためには、色々な考慮事項があるのですが、
今回はその中でもExcelアップロード時にバリデーションが必要な、Excelシートの循環参照をトポロジカルソートを用いて判定する方法について、以下のように3回に分けてお話ししたいと思います。

Excelシートの循環参照をトポロジカルソートで判別するためには (1/3)
BFS（幅優先...]]></description><link>https://zenn.dev/aldagram_tech/articles/26771194887274</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/26771194887274</guid><pubDate>Wed, 25 Dec 2024 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eAT5Chzj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Excel%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E5%25BE%25AA%25E7%2592%25B0%25E5%258F%2582%25E7%2585%25A7%25E3%2582%2592%25E3%2583%2588%25E3%2583%259D%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25AB%25E3%2583%25AB%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A7%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25281%252F3%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:seamoooo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3YjU3ZWVlNzkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>seamoooo</dc:creator></item><item><title><![CDATA[障害を防ぐための関数型エラーハンドリング（後編）]]></title><description><![CDATA[
!
この記事は 株式会社ログラス Productチーム Advent Calendar 2024 のシリーズ 1、24日目 の記事です。

アドベントカレンダー24日目です。
前回：障害を防ぐための関数型エラーハンドリング（前編）
前回は、主に try-catch によるエラーハンドリングは、様々なデメリットがあることを示しました。
今回の記事では、関数型がなぜ重要なのかを掘り下げてから、実際のKotlinでのDDDスタイルのコード例を見ていきたいと思います。

 なぜ関数型が重要なのか
関数型の特徴を用いると、エラーハンドリングがより安全になります。特に、純粋性と全域性によって、予測...]]></description><link>https://zenn.dev/loglass/articles/52953c9349fa05</link><guid isPermaLink="true">https://zenn.dev/loglass/articles/52953c9349fa05</guid><pubDate>Tue, 24 Dec 2024 08:48:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--apAyWXQz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259A%259C%25E5%25AE%25B3%25E3%2582%2592%25E9%2598%25B2%25E3%2581%2590%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25E5%25BE%258C%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:knih%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlNWQ4ZTRjZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25B9%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNTA1ZGU0NzguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>knih</dc:creator></item><item><title><![CDATA[Spring Boot 3.4.0で追加された MockMvcTester が便利]]></title><description><![CDATA[Spring Boot 3.4.0 から、AssertJがクラスパスに含まれている場合に MockMvcTester が利用可能になりました。これにより、リクエストとアサーションを流れるように記述でき、テストコードが読みやすくなります。

 コントローラー例
以下のコントローラーのテストを書きます。
@RestController
@RequestMapping("/api")
class SampleController {

    @GetMapping("/hello")
    fun hello(): ResponseEntity&lt;String&gt; {
      ...]]></description><link>https://zenn.dev/sukechannnn/articles/ec2eef03efa9d0</link><guid isPermaLink="true">https://zenn.dev/sukechannnn/articles/ec2eef03efa9d0</guid><pubDate>Tue, 24 Dec 2024 06:42:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zY4WzIi---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Spring%2520Boot%25203.4.0%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%2520MockMvcTester%2520%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sukechannnn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzOTljNjM5YmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sukechannnn</dc:creator></item><item><title><![CDATA[Googleが公開しているAndroid開発トレーニング（初心者向け）をやってみた - Unit1]]></title><description><![CDATA[
 背景
次の案件がAndroidアプリの開発（Kotolin + Jetpack Compose）になるため事前にキャッチアップしておきたかった。
チュートリアル(Unit1)：
https://developer.android.com/courses/android-basics-compose/unit-1?hl=ja

 学習メモ

 概要
onCreate()：エントリポイント、初期設定など
setContent()：UIを設定、構築する関数
@Composable：コンポーズ可能関数に付与するアノテーション、setContent()で使用するUIの部品
@Preview：作...]]></description><link>https://zenn.dev/takoyaki31/articles/ee0a7cf7da7a66</link><guid isPermaLink="true">https://zenn.dev/takoyaki31/articles/ee0a7cf7da7a66</guid><pubDate>Mon, 23 Dec 2024 23:41:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--14fNoj4Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%25E3%2581%258C%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258BAndroid%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25EF%25BC%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520-%2520Unit1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takoyaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3ZDJmZGNlZWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takoyaki</dc:creator></item><item><title><![CDATA[ServerSide Kotlin Tech Feed (2024/12/24号)]]></title><description><![CDATA[https://kotlin-tech-feed.web.app/
今週から@azuさんの真似をしてServerSide KotlinとTypeScript界隈のリリース情報やニュースなんかを週1でレポートしていくことにした。
毎週火曜日はKotlin、金曜日にTypeScriptをやる。

 TL;DR

Koin 4.0.1 のリリース
ktorm 4.1.1 のリリース
mockk 1.13.14 のリリース

klibs.ioのBeta版利用の開始


 リリース情報

 InsertKoinIO/koin Release 4.0.1
https://github.com/Ins...]]></description><link>https://zenn.dev/yskn_sid25/articles/f6571c0df886fa</link><guid isPermaLink="true">https://zenn.dev/yskn_sid25/articles/f6571c0df886fa</guid><pubDate>Mon, 23 Dec 2024 22:53:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c7V_LN6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ServerSide%2520Kotlin%2520Tech%2520Feed%2520%25282024%252F12%252F24%25E5%258F%25B7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kanon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM1OTY4ZjJmNWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kanon</dc:creator></item><item><title><![CDATA[Compose Multiplatform でも使える高機能画像表示の神ライブラリ ZoomImage]]></title><description><![CDATA[こんにちは！アルダグラムでエンジニアをしている渡邊です。
弊社の KANNA のモバイルアプリでは、以前から画像に対して線やテキストを書き込み、書き込んだ内容を新しい画像として出力することができるという、画像編集機能があります。
画像編集時には画像を回転することができなかったのですが、先日、画像も回転させられるようにする機能拡張を行いました。
以下はそのサンプル動画です。

以前までは画像編集時には TouchImageView というライブラリを使って画像を表示していたのですが、このライブラリには画像を回転させる機能がありませんでした。
そのため回転機能がある画像表示ライブラリを探して...]]></description><link>https://zenn.dev/aldagram_tech/articles/6d7fac0ba18b6b</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/6d7fac0ba18b6b</guid><pubDate>Mon, 23 Dec 2024 22:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KxS_q5tp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Compose%2520Multiplatform%2520%25E3%2581%25A7%25E3%2582%2582%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E9%25AB%2598%25E6%25A9%259F%25E8%2583%25BD%25E7%2594%25BB%25E5%2583%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25AE%25E7%25A5%259E%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520ZoomImage%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:watabee%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lySjNaUlJPVUQ1R0ZrRi1Nc3ZmUFhWNUVrV1U2RHkwTnlLX0ZTPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>watabee</dc:creator></item><item><title><![CDATA[【1日1zenn - day10】kotlinの超ざっくりキャッチアップ]]></title><description><![CDATA[BEのチケットをもらい、既存仕様等のキャッチアップを進めていたのですが、めちゃくちゃ時間がかかりました。
かかった要因として、ざっくり大事そうなところを見ようとしていたので見落としていた処理があったことが大きく、
それが発生したのは『多分ここが大事』の勘所を掴めていなかったのと、1行ずつ読むには自分の知識が甘く認知負荷が高すぎたことがあったように思えます。
自分のチームはkotlinとSpring Bootでバックエンドを書いているのですが、研修で習ったJavaの机上知識でなんとなく直感的に理解できる部分もあるからザザッと読んじゃうみたいなことをしてしまっており、
小さいAPI修正くらい...]]></description><link>https://zenn.dev/shunsuke108m/articles/53d7efb502b82b</link><guid isPermaLink="true">https://zenn.dev/shunsuke108m/articles/53d7efb502b82b</guid><pubDate>Mon, 23 Dec 2024 17:23:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MVprLvu1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25901%25E6%2597%25A51zenn%2520-%2520day10%25E3%2580%2591kotlin%25E3%2581%25AE%25E8%25B6%2585%25E3%2581%2596%25E3%2581%25A3%25E3%2581%258F%25E3%2582%258A%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2581%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%25AE%25E7%2594%25B0%25E5%25B3%25BB%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG9Jdy1QSHNvSW1WVGpKTmxFbkhnZkRyZ0pBVlRSQzhIaWMweDVJUmZLS3hlUjZnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宮田峻輔</dc:creator></item><item><title><![CDATA[【Jetpack Compose】記事取得アプリを作ってみる]]></title><description><![CDATA[
 初めに
今回は Jetpack Compose を用いて記事の一覧を取得するためのアプリケーションを作成してみたいと思います。記事の取得には Retrofit を用いるので、その使い方を中心に見ていきたいと思います。
Jetpack Compose のドキュメントでインターネットからデータを取得するの章で Retrofit を用いてデータの取得を行う実装があったので、それを別の形で使ってみたいと思います。

 記事の対象者

Jetpack Compose 初学者
Retrofit に触れてみたい方


 目的
今回の目的は、先述の通り Jetpack Compose で記事取得アプ...]]></description><link>https://zenn.dev/koichi_51/articles/6f86e0e94f9a8c</link><guid isPermaLink="true">https://zenn.dev/koichi_51/articles/6f86e0e94f9a8c</guid><pubDate>Mon, 23 Dec 2024 16:39:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lDSJXd9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591%25E8%25A8%2598%25E4%25BA%258B%25E5%258F%2596%25E5%25BE%2597%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1Y2NmNjkxYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Koichi</dc:creator></item><item><title><![CDATA[【Jetpack Compose】レイアウトについてまとめる]]></title><description><![CDATA[
 初めに
今回は Jetpack Compose におけるレイアウトについてまとめてみたいと思います。
Flutter のレイアウトと似ている部分も多くありますが、Flutter の書き方と比較しつつ、 Jetpack Compose ではどのように実装するかみていきたいと思います。

 記事の対象者

Jetpack Compose 初学者


 目的
今回の目的は、 Jetpack Compose のレイアウトの実装方法をまとめることです。
Flutter だとどのようになるかを比較しつつ、基本的なレイアウトについては実現できるくらいまでまとめていきたいと思います。

 実装
今回...]]></description><link>https://zenn.dev/koichi_51/articles/e686b3b6e52182</link><guid isPermaLink="true">https://zenn.dev/koichi_51/articles/e686b3b6e52182</guid><pubDate>Mon, 23 Dec 2024 16:37:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gUSRkFgZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1Y2NmNjkxYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Koichi</dc:creator></item><item><title><![CDATA[【Jetpack Compose】Textをカスタマイズする]]></title><description><![CDATA[
 初めに
今回は Jetpack Compose で Text をカスタマイズする方法についてまとめてみたいと思います。
筆者は普段 Flutter をメインで扱っているため、「Flutter ではこのように実装するが Jetpack Compose ではどのように実装すれば良いか？」という場面がよくあります。
今回は特に Text について取り上げて、より詳しくみていきたいと思います。

 記事の対象者

Jetpack Composer 初学者


 目的
今回は上記の通り、 Jetpack Compose における Text の扱い方についてまとめていきたいと思います。実装にあた...]]></description><link>https://zenn.dev/koichi_51/articles/43a8f26bada069</link><guid isPermaLink="true">https://zenn.dev/koichi_51/articles/43a8f26bada069</guid><pubDate>Mon, 23 Dec 2024 16:36:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ICJmJBho--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591Text%25E3%2582%2592%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Koichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1Y2NmNjkxYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Koichi</dc:creator></item><item><title><![CDATA[Kotlin入門: バックエンド開発について理解する]]></title><description><![CDATA[
 Kotlin入門: バックエンド開発について理解する

 1. はじめに
前回はAndroid開発について学びました。

Kotlin入門: Android開発について理解する

今回はバックエンド開発について学びます。

 2. バックエンド開発とは
バックエンド開発とは、Webアプリケーションのサーバーサイドの開発を指します。
Kotlin は Android 向けの開発に注目されがちですが、JVM 言語であるためにサーバサイド（バックエンド）開発でも非常に活用されています。

 3. Kotlinでバックエンド開発をするメリット

 1. Java との高い互換性
Kotlin...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241223</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241223</guid><pubDate>Mon, 23 Dec 2024 13:08:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7sq7wd0r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%253A%2520%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[ローカルのHTMLをGradleタスクでstrings.xmlに変換してJetpack composeで表示する]]></title><description><![CDATA[
 なぜそんなことするの？
利用規約など、一部を装飾する場合が多いテキストを都度 Spannable で装飾するのは面倒だから。
あとは、個人開発をしている場合は利用規約をホスティングするのも、やや手間だなっていう短絡的思考です。

 メリット・デメリット

 メリット

都度 Spannable で装飾しなくていい。
WebView で表示するよりライト/ダークのアプリテーマを適応させやすい。
Android 特有の Xml エスケープをしなくていい。


 デメリット

そもそもそんなことしている案件ある？

利用規約が更新されるたびに同意してもらうような殊勝な案件なら。。。(IoT...]]></description><link>https://zenn.dev/u_chan/articles/a10a2b0440ae30</link><guid isPermaLink="true">https://zenn.dev/u_chan/articles/a10a2b0440ae30</guid><pubDate>Mon, 23 Dec 2024 10:02:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Se1Jb3c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%25AEHTML%25E3%2582%2592Gradle%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%25AF%25E3%2581%25A7strings.xml%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2597%25E3%2581%25A6Jetpack%2520compose%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzljYTk3ODY3ZDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆーちゃん</dc:creator></item><item><title><![CDATA[Windows版VS Code上のJupyterでKotlinを動かした]]></title><description><![CDATA[
 概要
Windows版Visual Studio CodeにJupyter Notebookの拡張機能をインストールして、Conda環境のPythonをインストールして、そこにkotlin-jupyter-kernelをインストールして、WindowsにJAVA_HOMEの環境変数を設定したところ、無事Kotlinを動かすことに成功した。

 環境
Windows 10
VS Code: 1.96.2
Java: 作業開始時点ではまだ入ってない
Python: 作業開始時点ではまだ入ってない
実行日: 2024/12/23

 経緯
Windows版Visual Studio Cod...]]></description><link>https://zenn.dev/i8v8c32ftf0ixdj/articles/7f1e1a157554b0</link><guid isPermaLink="true">https://zenn.dev/i8v8c32ftf0ixdj/articles/7f1e1a157554b0</guid><pubDate>Mon, 23 Dec 2024 08:38:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M2tvlF1Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E7%2589%2588VS%2520Code%25E4%25B8%258A%25E3%2581%25AEJupyter%25E3%2581%25A7Kotlin%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:_%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdhMGYyMTQ1NWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>_</dc:creator></item><item><title><![CDATA[【Spring Boot(kotlin)】バリデーションを自作する]]></title><description><![CDATA[
 はじめに
KotlinのAnnotationsを読んでいて、annotation classを使って何かアウトプットしたいと思いこの記事を書いています。
日本の電話番号のフォーマットをチェックするためのカスタムバリデーションを作成してみました。

 作成したもの
@MustBeDocumented
@Target(AnnotationTarget.FIELD)
@Retention(AnnotationRetention.RUNTIME)
@Constraint(validatedBy = [JapanesePhoneNumberValidator::class])
annotati...]]></description><link>https://zenn.dev/ooooomu/articles/6d25ae15cc4a56</link><guid isPermaLink="true">https://zenn.dev/ooooomu/articles/6d25ae15cc4a56</guid><pubDate>Mon, 23 Dec 2024 00:27:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--E4nDfjjo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%2528kotlin%2529%25E3%2580%2591%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Omu%2520%252F%2520%25E3%2581%258A%25E3%2582%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMGNjMzFlYjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Omu / おむ</dc:creator></item><item><title><![CDATA[【Jetpack Compose】脱 Tv Lazy Layout --- テスト編]]></title><description><![CDATA[
 本記事の内容
Android TV 向けのライブラリである tv-foundation 1.0.0-alpha11 にて、遂に Tv Lazy Layout が非推奨 になりました。
Tv Lazy Layout の引数である PivotOffsets に関して、デフォルト値を使用している場合は単に Tv のプレフィックスを外すだけで問題ないです。
しかし、デフォルトとは異なる値を設定している場合は、CompositionLocal を利用して BringIntoViewSpec インスタンスを配布する実装に変更する必要があります。
(詳しい内容は 移行前後の差分編, アニメーション...]]></description><link>https://zenn.dev/taked137/articles/9965f34cc1bbe8</link><guid isPermaLink="true">https://zenn.dev/taked137/articles/9965f34cc1bbe8</guid><pubDate>Sun, 22 Dec 2024 15:53:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lNO8C3ov--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Jetpack%2520Compose%25E3%2580%2591%25E8%2584%25B1%2520Tv%2520Lazy%2520Layout%2520---%2520%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taked137%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjhhOTUyYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taked137</dc:creator></item><item><title><![CDATA[K2とは？最新のKotlinコンパイラを理解しよう]]></title><description><![CDATA[
 K2とは？最新のKotlinコンパイラを理解しよう

 はじめに
投稿を始めて一週間になりました。
今回は、Kotlinの次世代コンパイラ「K2」について掘り下げていきます。
この記事を読むことで、K2の特徴、最新機能、そして導入すべきかどうか判断できる知識を得られます。
前回までの記事は以下になります。

Kotlin入門


 K2とは
K2はKotlinコンパイラの次世代バージョンを指します。
2024年現在、安定版のKotlinコンパイラは「K1」と呼ばれ、K2はその次に登場する進化版として開発されています。

 K2の特徴
K2の特徴を詳しく見ていきましょう：

 1. モ...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241222</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241222</guid><pubDate>Sun, 22 Dec 2024 13:37:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zf6odb81--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:K2%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%25E6%259C%2580%25E6%2596%25B0%25E3%2581%25AEKotlin%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[Kotlin×Gradle×JVMで実現するモジュラーモノリス]]></title><description><![CDATA[この記事は、[ispec] 医療に向き合う技術者集団の戦録 Advent Calendar 2024 の22日目の記事です！
https://adventar.org/calendars/10776

 はじめに
本記事では、KotlinとGradleを使ってモジュラーモノリスを実装する方法を解説します。モジュラーモノリスでは、アプリケーションを単一のデプロイメントユニットとして維持しながら、内部を論理的なモジュールに分割します。

 JVMシステムにおけるモジュール化の基礎

 JARファイルの役割
JVMで動作するプログラムは、一般的に「JAR（Java Archive）」という形式...]]></description><link>https://zenn.dev/ispec_inc/articles/050d00ee1c2015</link><guid isPermaLink="true">https://zenn.dev/ispec_inc/articles/050d00ee1c2015</guid><pubDate>Sun, 22 Dec 2024 03:59:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zKL0fYt3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25C3%2597Gradle%25C3%2597JVM%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AA%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:gucci%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmN2Y5YzE4ZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ispec%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU2YzdmMTYwYjAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>gucci</dc:creator></item><item><title><![CDATA[Kotlin入門: Androidアプリ開発の基本]]></title><description><![CDATA[
 Kotlin入門: Androidアプリ開発の基本

 はじめに
前回はKotlinのオブジェクト指向プログラミングの応用について学びました。
前回の記事は以下からご覧いただけます。
前回の記事
今回はKotlinを使用してのAndroidアプリ開発の基本について学んでいきます。

 Androidアプリ開発とは
Androidアプリ開発は、スマートフォンやタブレットなどのAndroidデバイス向けにアプリケーションを開発することです。
2017年にAndroid開発においてGoogleが公式にサポートするプログラミング言語であり、現在の主流の開発言語です。
Jetpack Comp...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241221</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241221</guid><pubDate>Sat, 21 Dec 2024 13:34:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3G2XpWH5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%253A%2520Android%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item><item><title><![CDATA[spotlessでktlintをつかう]]></title><description><![CDATA[Kotlin の Formatter/Linter って何がデファクトスタンダードなんですかね…?
Spotless[1] を使って ktlint[2] による Lint/Format を行います. ktlint 単体だと Maven での設定が面倒なので, Spotless を使って設定します.
https://github.com/toms74209200/spotless-ktlint-example

 環境
Kotlin 2.0.21
Maven 3.9.9
spotless-maven-plugin 2.43.0

 使い方
spotless-maven-plugin のドキ...]]></description><link>https://zenn.dev/toms74209200/articles/kotlin-spotless-maven</link><guid isPermaLink="true">https://zenn.dev/toms74209200/articles/kotlin-spotless-maven</guid><pubDate>Sat, 21 Dec 2024 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YpDPFg8x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:spotless%25E3%2581%25A7ktlint%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toms%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLV3Rva3h5eWFxT0M5ajlpQXhVQjF1NVlndDV3QUprRjVEc0lXcEVDNnVoUD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toms</dc:creator></item><item><title><![CDATA[Kotlin入門：オブジェクト指向プログラミングの応用]]></title><description><![CDATA[
 Kotlin入門：オブジェクト指向プログラミングの応用

 はじめに
前回はKotlinのオブジェクト指向プログラミングの基本について学びました。
前回の記事は以下からご覧いただけます。
前回の記事
今回はKotlinを使用しての課題を解決していきます。

 課題
以下の要件を満たす動物園の管理システムを作成してください

動物園には様々な動物がいます（犬、猫、鳥など）。
すべての動物は「名前」と「鳴き声」を持ちます。
特定の動物（犬や鳥）は「飛ぶ」や「走る」など特定の動作を持つことができます。
管理者はすべての動物の情報を表示する機能を持っています。


 実装
abstract ...]]></description><link>https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241220</link><guid isPermaLink="true">https://zenn.dev/shintyakos1145/articles/github-zenn-linkage-20241220</guid><pubDate>Thu, 19 Dec 2024 22:29:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gg6GcEnI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kotlin%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:stakeuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>stakeuchi</dc:creator></item></channel></rss>