<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 09 Jun 2025 06:13:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【JavaScript】配列の includes() の使い方と注意点]]></title><description><![CDATA[
 はじめに
JavaScriptで「配列に特定の値が含まれているか」を調べたいとき、
よく使われるのが includes() メソッドです。
const fruits = ['apple', 'banana', 'orange'];
fruits.includes('banana'); // true
シンプルで読みやすい includes() ですが、
実は NaN を含むときの挙動 や オブジェクトとの比較 には注意が必要です。
本記事では、includes() の基本的な使い方と注意点を整理します。

 1. 基本の使い方

 ✅ 配列に含まれているかをチェック
const nu...]]></description><link>https://zenn.dev/fd2025/articles/642192f4827ed6</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/642192f4827ed6</guid><pubDate>Mon, 09 Jun 2025 05:49:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Sv4dkoWw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%2520includes%2528%2529%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[フロントエンドJavaScriptでランダムアルゴリズムを実装する方法]]></title><description><![CDATA[
この記事では、フロントエンドJavaScriptでのさまざまなランダムアルゴリズムの実装方法について探求し、異なる技術、それらの利点、および特定のユースケースに焦点を当てています。
著者はまず、フロントエンド開発におけるランダム性の重要性を説明し、ゲーム開発やデータサンプリングなどへの応用を強調しています。そして、JavaScriptでランダム値を生成するための2つの主要な方法について詳しく解説しています：
Math.random()メソッドは、最も単純なアプローチとして紹介されています。このメソッドは0（含む）から1（含まない）の間の浮動小数点数を生成します。著者はこの方法の限界、特...]]></description><link>https://zenn.dev/horushe/articles/ce75101e9dc3c6</link><guid isPermaLink="true">https://zenn.dev/horushe/articles/ce75101e9dc3c6</guid><pubDate>Mon, 09 Jun 2025 03:51:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v6sVMY4K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589JavaScript%25E3%2581%25A7%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25AB%25E3%2582%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDVZM0lJSjNJSkQ3WlBpY2RfMzlsRU5CbnlnN3F2VUFLNHFRX0pybDJRRHowTGZEMD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホルス</dc:creator></item><item><title><![CDATA[TypeScript 5.6 の型システムに完全敗北した深夜3時の記録]]></title><description><![CDATA[TypeScript 5.6 にアップグレードしたら、今まで動いていたコードが真っ赤になった。型エラーの海。コンパイルが通らない。深夜3時、モニターの前で頭を抱えた。結局、新しい型システムの挙動を理解するのに8時間かかった。その戦いの記録を残しておく。

 事件の発端：何気ないアップグレード
金曜の夕方5時。軽い気持ちで TypeScript をアップグレードした。
{
  "devDependencies": {
    "typescript": "^5.6.0"
  }
}
npm install して、いつものように npm run build。そしたら画面が真っ赤になった。
F...]]></description><link>https://zenn.dev/unikoukokun/articles/5f39fc9bb0fbc3</link><guid isPermaLink="true">https://zenn.dev/unikoukokun/articles/5f39fc9bb0fbc3</guid><pubDate>Sun, 08 Jun 2025 21:30:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZUc4QAyN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25205.6%2520%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AB%25E5%25AE%258C%25E5%2585%25A8%25E6%2595%2597%25E5%258C%2597%25E3%2581%2597%25E3%2581%259F%25E6%25B7%25B1%25E5%25A4%259C3%25E6%2599%2582%25E3%2581%25AE%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A6%25E3%2583%258B%25E3%2582%25B3%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmYjA3NjA5OTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユニコ🦄</dc:creator></item><item><title><![CDATA[コールバック関数を建設業の多重下請け構造で理解する試み]]></title><description><![CDATA[
 コンセプト
建設業の多重下請け構造を参考に、コールバック関数を理解します。
!
登場人物：
①施主（sampleビルを建設したい人）
②元請：motouke株式会社（ゼネコン：施主から工事を依頼された会社）
③2次請：nijiuke株式会社（元請から作業を依頼された会社）
※施主は、nijiuke株式会社を大変気に入っており、ビル建設工事にあたっては、『必ずnijiuke株式会社に仕事を回すように』と元請会社に指示を出している。


 そもそもコールバック関数というのは：
他の関数の引数として渡せる関数です
ではなぜ、関数の引数に関数を渡せるのか？　以下の流れで理解できると思う、、、...]]></description><link>https://zenn.dev/shitiku_g/articles/d0d03050f5b83c</link><guid isPermaLink="true">https://zenn.dev/shitiku_g/articles/d0d03050f5b83c</guid><pubDate>Sun, 08 Jun 2025 10:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--t_3Q94xr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E5%25BB%25BA%25E8%25A8%25AD%25E6%25A5%25AD%25E3%2581%25AE%25E5%25A4%259A%25E9%2587%258D%25E4%25B8%258B%25E8%25AB%258B%25E3%2581%2591%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25A1%25E3%2581%258F%25E7%2588%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjB3VGZ1RTl2dFBVbTR1aTVrbmFWRTVrT1pkcGpvdEh4SmthdEVPZkQ0clVXNjU1QTM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しちく爺</dc:creator></item><item><title><![CDATA[【初心者向け】なぜ副作用がある関数を書いてはいけないか？ ~~ 引数の変更を例に ~~]]></title><description><![CDATA[
 この記事を書くことになった背景
~~ 先日の出来事 ~~
新卒2ヶ月目の後輩くん「コード書けたのでレビューお願いします！」
私「OK！後で見るよ！」
後輩くん「お願いします！」
~~ しばらくして ~~
私「前の仕事片付いたから後輩くんのレビューするか〜」
const removeAttributes = (obj, removeTargetKeys) =&gt; {
    const keys = Object.keys(obj);
    for (const k of keys) {
        const value = obj[k];
        if (remo...]]></description><link>https://zenn.dev/dhik/articles/af3e2f778c0161</link><guid isPermaLink="true">https://zenn.dev/dhik/articles/af3e2f778c0161</guid><pubDate>Sun, 08 Jun 2025 06:24:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C9OVSIaX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591%25E3%2581%25AA%25E3%2581%259C%25E5%2589%25AF%25E4%25BD%259C%25E7%2594%25A8%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25EF%25BC%259F%2520%7E%7E%2520%25E5%25BC%2595%25E6%2595%25B0%25E3%2581%25AE%25E5%25A4%2589%25E6%259B%25B4%25E3%2582%2592%25E4%25BE%258B%25E3%2581%25AB%2520%7E%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Itsuki%2520Onishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS00SWxVTVhyZWx1X1M5MW1BaXNHV0tlRlVReWJvMVRVa08xWFEzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Itsuki Onishi</dc:creator></item><item><title><![CDATA[20分でChrome拡張機能を作ってみた話]]></title><description><![CDATA[
 Youtubeの再生速度を変更できるスライダー(Chrome拡張機能)を作ってみた

 きっかけ

普段から見る動画によって再生速度を変更するので、すぐに再生速度を変更できる拡張機能が欲しかった
既に公開されている拡張機能はどのサイトでも使えて多機能だったが、上部の拡張機能ボタンを押さないといけなくて面倒だった


 言語
JavaScript/CSS

 AIツール

Google AI Studio
Cursor


 作成時間
20分+

 できること

再生速度を直感的に変更できる
0.25~3.0倍まで変更可能




 強み

フルスクリーンでも使える




 弱み

...]]></description><link>https://zenn.dev/tamamochi/articles/133cf324a2e10d</link><guid isPermaLink="true">https://zenn.dev/tamamochi/articles/133cf324a2e10d</guid><pubDate>Sun, 08 Jun 2025 05:16:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YtzAdRar--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:20%25E5%2588%2586%25E3%2581%25A7Chrome%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tama-mochi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllYzE3Zjk5YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tama-mochi</dc:creator></item><item><title><![CDATA[JQuery]]></title><description><![CDATA[JQuery]]></description><link>https://zenn.dev/codek2/books/bdd7d6cc04e5c2</link><guid isPermaLink="true">https://zenn.dev/codek2/books/bdd7d6cc04e5c2</guid><pubDate>Sun, 08 Jun 2025 04:03:02 GMT</pubDate><dc:creator>コード日和（びより）</dc:creator></item><item><title><![CDATA[【基本の型】jQueryの安全で使い回せる雛形テンプレート]]></title><description><![CDATA[
 はじめに
ちょっとしたDOM操作やイベント処理をjQueryで書こうと思ったときに「どんな書き方だっけ？」と手が止まること、ありませんか？
自分も毎回ググったり、過去のコードをコピペして持ってきたり・・・
この記事はそんな自分への備忘録＆戒めとして、jQueryの安全で使い回せる雛形コードを紹介します。

 「まだjQuery使ってるの？」なんて言わないで
確かに最近ではReactやVueなどのモダンフレームワークが主流ですが、
うちの現場ではまだガッツリ現役というケースも意外と多いんです。
そんな現場でこそ、雛形のひとつくらいは手元にあるとラクになります。

 なぜ雛形が必要？
j...]]></description><link>https://zenn.dev/akky709/articles/d80648b4152d80</link><guid isPermaLink="true">https://zenn.dev/akky709/articles/d80648b4152d80</guid><pubDate>Sun, 08 Jun 2025 03:00:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8nPrS_4K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25AE%25E5%259E%258B%25E3%2580%2591jQuery%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E5%259B%259E%25E3%2581%259B%25E3%2582%258B%25E9%259B%259B%25E5%25BD%25A2%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:akky%2Cx_90%2Cy_121/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>akky</dc:creator></item><item><title><![CDATA[JavaScriptでABC409(A-D)]]></title><description><![CDATA[https://atcoder.jp/contests/abc409

 A - Conflict
https://atcoder.jp/contests/abc409/tasks/abc409_a
連番配列とArray#some()でいいかぁ
https://atcoder.jp/contests/abc409/submissions/66505055
1分43秒 AC!

 B - Citation
https://atcoder.jp/contests/abc409/tasks/abc409_b
どの数字が何個あるかをメモって、最大値から1引きながら合計個数を数えればいいかな〜
h...]]></description><link>https://zenn.dev/aya_koto/articles/f769495a2846c4</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/f769495a2846c4</guid><pubDate>Sat, 07 Jun 2025 13:53:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T_jIYn18--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC409%2528A-D%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[TypeScript入門：関数の型定義～配列操作について]]></title><description><![CDATA[
 はじめに
最近はAIコーディングばかりで、自身の基礎的な理解が曖昧になっていると感じることがありました。そこで本記事では、自身の知識を整理し、理解を深める目的で、TypeScriptの要点をできるだけかみ砕いてアウトプットとしてまとめます。

 1.引数と戻り値の基本
JavaScriptでも関数はたくさん使っていましたが、TypeScriptではもっと厳密に、そして安全に関数を扱えます。

 ポイント
ポイントは、引数（関数に渡すデータ）と戻り値（関数から返ってくるデータ）それぞれに、「君のデータの種類はこれだよ」と型を決めてあげることでした。これを最初にやっておくと、後で全然違う...]]></description><link>https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</link><guid isPermaLink="true">https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</guid><pubDate>Sat, 07 Jun 2025 02:01:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cTOB812w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25EF%25BD%259E%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%25A7%25E6%259C%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MTAwYTVmYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碧月</dc:creator></item><item><title><![CDATA[TypeScriptで人生が変わった話]]></title><description><![CDATA[
 はじめに - TypeScriptへの愛を込めて
『Zenn TypeScript記事投稿コンテスト』
こんなコンテストがあるなんて...！
文章は下手だし、みんなみたいに豊富な経験があるわけでもないけれど、このTypeScriptへの愛と学びは発信しておかないと、TypeScriptLoverとしての名が廃る。
そんな想いで、気づいたときにはキーボードを叩いていました。
ちなみに、AIが目まぐるしい勢いで成長している昨今、いつか自分の手でコードを書けなくなる日が来るかもしれません...😱 でも声を大にして宣言します。AIがどれだけ発展しても、TypeScriptは己が手一本で書き続...]]></description><link>https://zenn.dev/katakuriko_a/articles/512ca79b440741</link><guid isPermaLink="true">https://zenn.dev/katakuriko_a/articles/512ca79b440741</guid><pubDate>Fri, 06 Jun 2025 12:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4EzVJ-qW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E4%25BA%25BA%25E7%2594%259F%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2586%25E3%2581%25AB%25E6%2598%259F%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwNjU1ZDNjMjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ゆに星人</dc:creator></item><item><title><![CDATA[🚀 npmはもう古い？pnpmが開発体験を爆速にする理由]]></title><description><![CDATA[
 はじめに
npm install を実行して、コーヒーを淹れにいく...。そんな経験はありませんか？ プロジェクトが大きくなるにつれて肥大化する node_modules フォルダや、いつ終わるか分からないパッケージのインストール時間に、多くの開発者が悩まされています。
この記事では、そんな悩みを解決するかもしれない次世代のパッケージマネージャー pnpm について、npm との違いを比較しながら、その核心的な仕組みと具体的なメリットを徹底的に解説します。
この記事を読み終える頃には、きっとあなたのプロジェクトにも pnpm を導入したくなるはずです！

 そもそもパッケージマネージ...]]></description><link>https://zenn.dev/aoyamadev/articles/b99bb3d9158fa8</link><guid isPermaLink="true">https://zenn.dev/aoyamadev/articles/b99bb3d9158fa8</guid><pubDate>Fri, 06 Jun 2025 07:29:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6hGF7vTx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520npm%25E3%2581%25AF%25E3%2582%2582%25E3%2581%2586%25E5%258F%25A4%25E3%2581%2584%25EF%25BC%259Fpnpm%25E3%2581%258C%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%25E3%2582%2592%25E7%2588%2586%25E9%2580%259F%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Bojji%2520Dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3MWQ2NzI4ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Bojji Dev</dc:creator></item><item><title><![CDATA[BiomeのGritQLプラグイン vs. ast-grep: JS開発者のためのAST変換ガイド]]></title><description><![CDATA[
 なぜASTツールがリンターにとって重要なのか
Zennの皆様こんにちは。ast-grepの著者、Herringtonです。
大規模プロジェクトで一貫性のある高品質なコードを維持することは、大きな課題です。最新のRustベースのLintingツールは、基本的なコーディング標準を強制する点で素晴らしいパフォーマンスを発揮しますが、開発者が高度にカスタムなプロジェクト固有のパターンや、コードベース全体にわたる自動化された大規模なリファクタリングを必要とする場合、しばしば不十分です。ここで、AST（Abstract Syntax Tree：抽象構文木）ベースのツール、特にネイティブリンターに...]]></description><link>https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</link><guid isPermaLink="true">https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</guid><pubDate>Fri, 06 Jun 2025 05:29:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agZTJNfU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2581%25AEGritQL%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2520vs.%2520ast-grep%253A%2520JS%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAST%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Herrington%2520Darkholme%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZWZPY0dMdmpkYjdJT0JURTFKNXB4d3ZVcEc2SEdRZ2w3bE1LZnR0SW1hMFRxTj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Herrington Darkholme</dc:creator></item><item><title><![CDATA[「午後12:00」はどこから来るのか]]></title><description><![CDATA[!
2025年6月現在 Chrome 137.0.7151.69 で再現することを確認しています。
今後、挙動に変更があるかもしれないのでご注意ください。

この記事は、社内のLT会で発表した内容をもとに、技術記事として再構成したものです。Node.jsやブラウザなど、JavaScriptのランタイムによって「正午」の表記が異なる現象について、調査と考察をまとめました。

 正午を返す処理の挙動
まず、以下のコードが何を出力するかを考えてみます。
new Date("2024-01-01T12:00:00").toLocaleTimeString("ja", {
  timeStyle:...]]></description><link>https://zenn.dev/timetree/articles/1bb2896ce8d4fe</link><guid isPermaLink="true">https://zenn.dev/timetree/articles/1bb2896ce8d4fe</guid><pubDate>Fri, 06 Jun 2025 02:10:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DedaNdj---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E5%258D%2588%25E5%25BE%258C12%253A00%25E3%2580%258D%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%2593%25E3%2581%258B%25E3%2582%2589%25E6%259D%25A5%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:fujikky%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1MDU4MGVlNDguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TimeTree%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2dFRjSGtRdmJhSkFoekM4SzhyVkwxaTBPYTE3c3FlR2xlV3FhOHc9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fujikky</dc:creator></item><item><title><![CDATA[【JavaScript】try-catch-finally の使い方と注意点]]></title><description><![CDATA[
 はじめに
JavaScriptでプログラムを書いていると、思わぬエラーに遭遇することがあります。
そんな場面で役立つのが、try-catch-finally 構文です。
「エラーが発生してもプログラム全体が止まらないようにする」 という意味でも、非常に大切な考え方です。
本記事では、


try-catch の基本的な書き方

finally が何のためにあるか
よくあるミスや注意点

について解説します。

 1. try-catch の基本構文
try {
  // エラーが起きるかもしれない処理
} catch (error) {
  // エラー発生時の対応
}

 ✅ 例
...]]></description><link>https://zenn.dev/fd2025/articles/6e9ff71a363a17</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/6e9ff71a363a17</guid><pubDate>Thu, 05 Jun 2025 21:53:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3IFSQWBd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591try-catch-finally%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E6%25B3%25A8%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[Webのフロントエンドを構成する基本技術]]></title><description><![CDATA[こんにちは。じゅに（@Jyu210_engineer）です。
自己紹介でも書いてある通り、今までWebに触れてきていなかったので、基本から。
ということでまずは、Webフロントエンドを構成する基本技術をおさらいしたいと思います。
いや、エンジニアからしたら一般常識やろ！というところはあるかと思いますが、私自身に腹落ちさせるためにアウトプットさせてください。

 フロントエンドを構成する基本の3大技術
フロントエンド構成する基本の3大技術といえば、間違いなく以下の3つですね。

HTML
CSS
JavaScript

この技術なくしてフロントエンドは成り立ちません。
フロントエンド開発を...]]></description><link>https://zenn.dev/jyu210_engineer/articles/d02e06970e5910</link><guid isPermaLink="true">https://zenn.dev/jyu210_engineer/articles/d02e06970e5910</guid><pubDate>Thu, 05 Jun 2025 15:15:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f8pcrAo---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E6%25A7%258B%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E5%259F%25BA%25E6%259C%25AC%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2585%25E3%2581%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4ZWZiMWNhMzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じゅに</dc:creator></item><item><title><![CDATA[npmとpackage.jsonの基本理解と役割]]></title><description><![CDATA[
 📦 npm = Node Package Manager

JavaScript開発において、ライブラリの依存関係を管理し、
必要なパッケージをインストール・実行するためのツール。



 📄 package.jsonとは？
Node.jsプロジェクトの中核となる設定ファイルで、次のような役割を持つ：


 1️⃣ インストールされたライブラリの記録


npm install でインストールしたすべてのライブラリがここに記録される。
他のPCでも同じ環境を簡単に再構築できる。



 2️⃣ プロジェクト情報と設定の管理

プロジェクト名、バージョン、説明、作成者などの情報が含まれ...]]></description><link>https://zenn.dev/kmj13/articles/npm_and_packagejson_ja</link><guid isPermaLink="true">https://zenn.dev/kmj13/articles/npm_and_packagejson_ja</guid><pubDate>Thu, 05 Jun 2025 13:12:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R07LC08w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:npm%25E3%2581%25A8package.json%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E5%25BD%25B9%25E5%2589%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kmj99%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSno0azlnb19fcW1fbjVxdkFCYkJNU2U5X2VfYWZkTGEtbHVNZDFXR2pWV05CZTBnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kmj99</dc:creator></item><item><title><![CDATA[[CSS] ホバーした要素以外の兄弟要素の透過率(opacity)を下げる方法]]></title><description><![CDATA[
 背景
「ある要素にマウスオーバーした際、その兄弟要素の透明度を下げて強調表示する」といったデザインがjQuery全盛期にはよく見られた。
// イメージ
$("a")
  .on("mouseenter", function () {
    $(this).siblings("a").css("opacity", 0.8);
  })
  .on("mouseleave", function () {
    $(this).siblings("a").css("opacity", "");
  });
デザインの流行り廃りやjQueryでの実装もなくなってきて、こういったデザイン...]]></description><link>https://zenn.dev/hiro/articles/56192bd2dec7e4</link><guid isPermaLink="true">https://zenn.dev/hiro/articles/56192bd2dec7e4</guid><pubDate>Thu, 05 Jun 2025 00:51:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yKxtmVoq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BCSS%255D%2520%25E3%2583%259B%25E3%2583%2590%25E3%2583%25BC%25E3%2581%2597%25E3%2581%259F%25E8%25A6%2581%25E7%25B4%25A0%25E4%25BB%25A5%25E5%25A4%2596%25E3%2581%25AE%25E5%2585%2584%25E5%25BC%259F%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AE%25E9%2580%258F%25E9%2581%258E%25E7%258E%2587%2528opacity%2529%25E3%2582%2592%25E4%25B8%258B%25E3%2581%2592%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2MzA3N2E1OTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiro</dc:creator></item><item><title><![CDATA[Azure App Service + Next.jsでファイルの分割アップロードを実装する]]></title><description><![CDATA[Azure App Service上でNext.jsアプリ作ってたんですが、大容量ファイルのアップロードでApp Serviceがメモリ不足でクラッシュするという事件が発生しました😇

 開発環境とアーキテクチャ
まず、今回作ってたシステムの構成はこんな感じ：


 ここで重要な制約が...


VNet統合: App ServiceとBlob StorageはVNet統合されてる

外部アクセス制限: ブラウザから直接Blob Storageにアクセスできない

必須経路: ファイルアップロードは全部App Service経由じゃないとダメ

要するに、よくある「ブラウザ→Blob S...]]></description><link>https://zenn.dev/nbs_tokyo/articles/b4baf9c56b9d1f</link><guid isPermaLink="true">https://zenn.dev/nbs_tokyo/articles/b4baf9c56b9d1f</guid><pubDate>Wed, 04 Jun 2025 13:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fYyPXnYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520App%2520Service%2520%252B%2520Next.js%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2588%2586%25E5%2589%25B2%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hirofumi%2520Moribayashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNWU5MTAzNjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25BA%25E6%259D%25B1%25E4%25BA%25AC%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZGNhOThiZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hirofumi Moribayashi</dc:creator></item><item><title><![CDATA[Astroでサイト構築1]]></title><description><![CDATA[
 はじめに
こんにちは！
都内で主にフロントエンド業務とマネージメント半々でお仕事しているジュウドー・富岡です。
いままで業務では主にwebpackをベースに、TypescriptやSassをメインに使って業務でサイト構築をしていました。
ビルドの遅さや設定の複雑さに見て見ぬふりをし、開発・運用メンバーへの説明の手間と業務量を言い訳にして、気持ちとは裏腹になあなあな関係でwebpackとここまで付き合ってきました。
そんなときにCore Web Vitalを意識したハイパフォーマンスなサイト構築を要求している案件があったのでそれを機（盾）に、非エンジニアで構成された運用チームへの負担を...]]></description><link>https://zenn.dev/melodic_mznc/articles/77cd8a61a12c1b</link><guid isPermaLink="true">https://zenn.dev/melodic_mznc/articles/77cd8a61a12c1b</guid><pubDate>Wed, 04 Jun 2025 06:53:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sxQiRCKs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E3%2581%25A7%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E6%25A7%258B%25E7%25AF%25891%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%25A5%25E3%2582%25A6%25E3%2583%2589%25E3%2583%25BC%25E3%2583%25BB%25E5%25AF%258C%25E5%25B2%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWR1X0VadmEzTzRzTDRXSy1oMFNReGdGWGN6TmZ5OTF0UmhySVJmaHpfR0xaU3psTT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジュウドー・富岡</dc:creator></item></channel></rss>