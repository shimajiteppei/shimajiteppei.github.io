<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 28 Dec 2024 04:00:20 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[通信ミドルウェア評価用のPythonによる（比較的）汎用なテストドライバ]]></title><description><![CDATA[主に組み込み向けのミドルウェア、特に通信をするような種類のソフトウェアを開発している場合、開発対象であるミドルウェアを評価するために、以下のような構成を取ることがよくあります。

テストは殆どの場合、以下のように進みます:

PC で動いている Test Driver から、IUT と、IUT の通信相手となるターゲット (Test Device) にコマンドを送信し、所望の機能をトリガします
各ターゲット (IUT &amp; Test Device) はコマンドによりトリガされた動作に対する応答メッセージを送信します。多くの場合、応答メッセージは、コマンドに対するレスポンスと、コマン...]]></description><link>https://zenn.dev/aikige/articles/python-test-driver</link><guid isPermaLink="true">https://zenn.dev/aikige/articles/python-test-driver</guid><pubDate>Sat, 28 Dec 2024 03:00:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---dfdCiXP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2580%259A%25E4%25BF%25A1%25E3%2583%259F%25E3%2583%2589%25E3%2583%25AB%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E8%25A9%2595%25E4%25BE%25A1%25E7%2594%25A8%25E3%2581%25AEPython%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25EF%25BC%2588%25E6%25AF%2594%25E8%25BC%2583%25E7%259A%2584%25EF%25BC%2589%25E6%25B1%258E%25E7%2594%25A8%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aikige%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxZTRlNGNjOGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aikige</dc:creator></item><item><title><![CDATA[pillowを使って画像ファイル(png, jpg)にメタデータを保存する]]></title><description><![CDATA[
 執筆日
2024/12/27

 概要
画像のキャプションをあらかじめファイルにメタデータとして保存しておきたいときに、pillowライブラリで簡単に形式のメタデータ保存できることを知ったのでメモ書きです。画像の説明を生成AIなどで作ったときに、そのキャプションで検索を実装するのであれば結果をデータベースで管理するのがいいですが、そこまでリッチな構成が必要ない、画像とキャプションが同じところにあればいいなというときに使えそうです。（GUIアプリで画像クリックorホバーでキャプションが表示されるとか）

 依存ライブラリインストール
pip install pillow # テスト時 ...]]></description><link>https://zenn.dev/headwaters/articles/441d3c181987fd</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/441d3c181987fd</guid><pubDate>Sat, 28 Dec 2024 02:17:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6Dn070u1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pillow%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2528png%252C%2520jpg%2529%25E3%2581%25AB%25E3%2583%25A1%25E3%2582%25BF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[精読「独習Python」(標準ライブラリ 基本)]]></title><description><![CDATA[

独習Python
「独習Python」は、初心者から中級者までを対象に、Pythonの基礎から応用までを体系的に学べる入門書で、豊富な例題と練習問題を通じて実践的なスキルを身につけられる一冊です。
関連記事
https://zenn.dev/joaan/articles/bec9c096241f6b
https://zenn.dev/joaan/articles/bde04761294b13
https://zenn.dev/joaan/articles/37b84b3b500574


 標準ライブラリ 基本
Pythonでは、標準的な言語機能に加えて、コードから自在に呼び出せる命...]]></description><link>https://zenn.dev/joaan/articles/9923635212d7ad</link><guid isPermaLink="true">https://zenn.dev/joaan/articles/9923635212d7ad</guid><pubDate>Fri, 27 Dec 2024 19:33:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7mPqdDGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B2%25BE%25E8%25AA%25AD%25E3%2580%258C%25E7%258B%25AC%25E7%25BF%2592Python%25E3%2580%258D%2528%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520%25E5%259F%25BA%25E6%259C%25AC%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2583%25A7%25E3%2582%25A2%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMGZlZWIzNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジョアン</dc:creator></item><item><title><![CDATA[高性能Python: Asyncio]]></title><description><![CDATA[
並行プログラミングは、複数のタスクを同時に実行するプログラミング方法です。Pythonにおいて、asyncioは非同期プログラミングを実現するための強力なツールです。asyncioはコルーチン（coroutine）の概念に基づいており、I/O集中型タスクを効率的に処理することができます。本文ではasyncioの基本原理と使い方を紹介します。


 なぜasyncioが必要なのか
I/O操作を処理する際、マルチスレッドを使うと、通常のシングルスレッドと比べて、効率が大幅に向上します。では、なぜAsyncioが必要なのでしょうか？
マルチスレッドには多くの利点があり、広く利用されていますが...]]></description><link>https://zenn.dev/leapcell/articles/4d8571fbce087d</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/4d8571fbce087d</guid><pubDate>Fri, 27 Dec 2024 17:16:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DWJHwByo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E9%25AB%2598%25E6%2580%25A7%25E8%2583%25BDPython%253A%2520Asyncio%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[LinkedList(PythonとRustで比較)]]></title><description><![CDATA[
 LinkedListというデータ構造
LinkedListというデータ構造が分子動力学計算の書籍で表れてたので、色々調べて見ました。
本記事ではpythonとrustでlinkedListというデータ構造を実装してみたいと思います。
pythonでは楽だったのですが、rustだと結構しんどかったでｺﾞﾜｽ

 そもそもLinkedListとは？
出てくる概念

Node

property

value:ノードが保持する値
next:次のノードへの参照


method

change_next:自身のノードが参照しているノードを別のノードへ切り替える




List

prope...]]></description><link>https://zenn.dev/kurutazoku/articles/f061d5cfa077af</link><guid isPermaLink="true">https://zenn.dev/kurutazoku/articles/f061d5cfa077af</guid><pubDate>Fri, 27 Dec 2024 15:50:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PI7tdlrs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LinkedList%2528Python%25E3%2581%25A8Rust%25E3%2581%25A7%25E6%25AF%2594%25E8%25BC%2583%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%2596%2584%25E6%25B1%259A%25E3%2581%2584%25EF%25BD%25B8%25EF%25BE%2599%25EF%25BE%2580%25E6%2597%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MjliOThhZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>薄汚いｸﾙﾀ族</dc:creator></item><item><title><![CDATA[FastAPIで学ぶPythonの非同期IOの極意]]></title><description><![CDATA[
Pythonはインタプリタ言語であるため、バックエンド開発に使用する場合、例えばPython + Djangoの組み合わせでは、Java + Springと比べると、その応答時間が少し長くなります。ただし、コードが適切であれば、その違いはあまり顕著ではありません。Djangoがマルチプロセスモードを使用しても、その並行処理能力は依然としてかなり弱いです。Pythonには並行処理能力を向上させるいくつかの解決策があります。たとえば、非同期フレームワークのFastAPIを使用すると、その非同期機能により、I/O集中型タスクの並行処理能力を大幅に強化できます。FastAPIは最速のPytho...]]></description><link>https://zenn.dev/leapcell/articles/2d0da9a80281e6</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/2d0da9a80281e6</guid><pubDate>Fri, 27 Dec 2024 15:12:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zXTVio0e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6Python%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259FIO%25E3%2581%25AE%25E6%25A5%25B5%25E6%2584%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[browser-useの基礎理解]]></title><description><![CDATA[
 はじめに
最近話題になっている browser-use について自己理解のために基本的なところをまとめてみます。
https://github.com/browser-use/browser-use

 browser-use とは？
browser-use は、Python で作られた「AI エージェントがウェブブラウザを操作できるようにする」ためのライブラリです。具体的には、下記のような機能を提供しています。


ビジョン機能や HTML 抽出
ブラウザで読み込んだページの DOM（要素構造）を解析、スクリーンショットやテキスト情報を取得できます。


マルチタブ管理
自動で複数...]]></description><link>https://zenn.dev/gunjo/articles/8450e69537dbb6</link><guid isPermaLink="true">https://zenn.dev/gunjo/articles/8450e69537dbb6</guid><pubDate>Fri, 27 Dec 2024 11:44:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_0bEVlU0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:browser-use%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%2590%2586%25E8%25A7%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2580%25E3%2581%2595%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjMTllMGFhYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>むさし</dc:creator></item><item><title><![CDATA[myCobot ”Pi”をPCで動かす]]></title><description><![CDATA[
 この記事の概要
ここでは、ラズパイが組み込まれているElephant RoboticsのmyCobotを、そのラズパイではなくPCで制御するために私が行った手順について(メモのつもりで)記載します。
私には沢山つまずいたところがありましたので、どなたかの参考になれば幸いです。
※著者はLinuxを今回初めて使い始めたところで、Zennの記事作成も初めてです。至らない点が無数にあるかと思います。ご注意ください。
なぜメーカーが、ロボットに組み込まれたラズパイに環境を構築してくれているのに、それを使わずにわざわざ自前のPCで制御したいのか？
それは、ROSやGazeboのことを考えるとや...]]></description><link>https://zenn.dev/dr_k/articles/c9b93878ce518e</link><guid isPermaLink="true">https://zenn.dev/dr_k/articles/c9b93878ce518e</guid><pubDate>Fri, 27 Dec 2024 11:30:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QQs7e7wa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:myCobot%2520%25E2%2580%259DPi%25E2%2580%259D%25E3%2582%2592PC%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Dr.%2520K.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhZmFkMTUxODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Dr. K.</dc:creator></item><item><title><![CDATA[FastAPIの高速性の秘密]]></title><description><![CDATA[
FastAPIの高速性の秘密は何なのか？他のフレームワークを遠く後にしている秘訣は？
ここで紹介するのは「Starlette」「Uvicorn」「Pydantic」というトリオのディナミックスです。FastAPIが高速性を実現している秘密はこの他ならないバックボーンにあります。それぞれを見てみましょう：

 Starlette: 活発なバックボーン
StarletteはFastAPIのアシンクロナスマジックを支える覆面の強力な主力です。単なるフレームワークではなく、深さや駒動性を備えた最高の基盤といえます。
Starletteは非同期プログラミングを無理なく構築でき、重大な作業や高負荷...]]></description><link>https://zenn.dev/leapcell/articles/e60cb55a2bc7f0</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/e60cb55a2bc7f0</guid><pubDate>Fri, 27 Dec 2024 09:25:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kWDYgooQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25AE%25E9%25AB%2598%25E9%2580%259F%25E6%2580%25A7%25E3%2581%25AE%25E7%25A7%2598%25E5%25AF%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[__pycache__ とは何か？(関連してPythonでのJIT Compilerについて)]]></title><description><![CDATA[
 前提
本記事のすべての内容はCpython実装を元にしています。

 python実行時に出てくる __pycache__とは何か？
Pythonが勝手に作成するCacheディレクトリのことで、中には*.pycファイルが入っている。
その目的は名前からしてCacheファイルを想像させるため、何かの結果物をCacheにし、高速化を意図しているのではないかということが想像できる。
その実態をこれから先で掘り下げていく。

 *.pyc はどのように作られるのか？
それには、Pythonがどう起動するかを知る必要がある

まず、python main.pyを実行すると、我々が書いたCode...]]></description><link>https://zenn.dev/avilen_techblog/articles/c59429329b86a0</link><guid isPermaLink="true">https://zenn.dev/avilen_techblog/articles/c59429329b86a0</guid><pubDate>Fri, 27 Dec 2024 09:10:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ls3QEraR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:__pycache__%2520%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25EF%25BC%259F%2528%25E9%2596%25A2%25E9%2580%25A3%25E3%2581%2597%25E3%2581%25A6Python%25E3%2581%25A7%25E3%2581%25AEJIT%2520Compiler%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:soyama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc5Njc0NzEyN2EuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEAVILEN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYjczYjliOWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soyama</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 8: Resonant Collinearity]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day8 の記事です。 Day7 はこちら。
https://zenn.dev/yasuharu519/articles/d186c5f3bbbe23
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 8: Resonant Collinearity
.0..A....
......0..
.......A.
のように、. とそれ以外の英数字で構成されたマップが与えられます。
. 以外の文字については、アンテナの位置を示しており、アンテナを示す...]]></description><link>https://zenn.dev/yasuharu519/articles/1739051153a249</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/1739051153a249</guid><pubDate>Fri, 27 Dec 2024 08:30:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x2j9S1WX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%25208%253A%2520Resonant%2520Collinearity%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[【Python】 既存モジュールを上書きしてpip install]]></title><description><![CDATA[大半のPython使いからは笑われるかもしれませんが備忘録程度に書き留めておきます。
pip install requests --upgrade
のように--upgradeをつけるだけで大丈夫です。
-Uも同義です。

また、特定のバージョンを指定してインストールしたい場合は、次のように指定することもできます
pip install &lt;モジュール名&gt;==&lt;バージョン&gt;
例えば、requests モジュールのバージョン 2.25.1 をインストールする場合は、次のようにします
pip install requests==2.25.1
]]></description><link>https://zenn.dev/glisan/articles/50ffeba73ee1e0</link><guid isPermaLink="true">https://zenn.dev/glisan/articles/50ffeba73ee1e0</guid><pubDate>Fri, 27 Dec 2024 08:03:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SL1bEmvs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%2520%25E6%2597%25A2%25E5%25AD%2598%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25B8%258A%25E6%259B%25B8%25E3%2581%258D%25E3%2581%2597%25E3%2581%25A6pip%2520install%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0MzU1YzBlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>グリッサンド。</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 7: Bridge Repair]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day7 の記事です。 Day6 はこちら。
https://zenn.dev/yasuharu519/articles/dda9f1190d9b30
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 7: Bridge Repair
Day 7 では
3267: 81 40 27
のような入力が与えられ、 : の右の数列の 足し算・かけ算から左の数字を作れるか? という問題です。

 Part1
とりあえず全部試して見て条件に合うものがあるか...]]></description><link>https://zenn.dev/yasuharu519/articles/d186c5f3bbbe23</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/d186c5f3bbbe23</guid><pubDate>Fri, 27 Dec 2024 08:01:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Nj6OlpDH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%25207%253A%2520Bridge%2520Repair%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[【Python】 インストールしているモジュールを全削除]]></title><description><![CDATA[pip freeze &gt; installed_packages.txt
pip uninstall -r installed_packages.txt -y
installed_packages.txtにインストールしているモジュールを箇条書きで書かせ、
それをすべてuninstallします。
-yをつけることでProceed (Y/n)?というめんどくさい確認を飛ばすことができます。
]]></description><link>https://zenn.dev/glisan/articles/f74827ddb6336e</link><guid isPermaLink="true">https://zenn.dev/glisan/articles/f74827ddb6336e</guid><pubDate>Fri, 27 Dec 2024 07:51:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5h9lu0iX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%2585%25A8%25E5%2589%258A%25E9%2599%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2589%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0MzU1YzBlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>グリッサンド。</dc:creator></item><item><title><![CDATA[AIスクレインピングエージェントの構築(LangGraph, Firecrawl)]]></title><description><![CDATA[
 はじめに
この記事では、LangGraphとFirecrawlを使用して、企業のWebサイトから特定の情報を抽出するWebスクレインピングエージェントを構築する方法を紹介します。具体的には、企業のホームページから社長の名前を取得する方法を解説します。

 参考にさせていただいた動画
https://www.youtube.com/watch?v=vSz5-KeRyHs
この動画では特定のキーワードをホームページから取得していますが、今回は正規表現では取得できないより抽象的な情報を取得することに挑戦しました。

 使用技術

 LangGraph
LangGraphは、AIエージェント...]]></description><link>https://zenn.dev/shoheiweb/articles/86ef445581d8b0</link><guid isPermaLink="true">https://zenn.dev/shoheiweb/articles/86ef445581d8b0</guid><pubDate>Fri, 27 Dec 2024 05:12:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vLLvGc7D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2528LangGraph%252C%2520Firecrawl%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2587%25E3%2583%25BC%25E3%2581%25B8%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhZTUwMzRhYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しょーへー</dc:creator></item><item><title><![CDATA[Slackでバリュースタンプの数を計測する仕組み]]></title><description><![CDATA[
 はじめに
こんちには、株式会社Mediiの渡辺です
Mediiの特徴として、バリューを大切にしており、それが社員にちゃんと浸透していることが挙げられます
バリュー浸透のため、社内で色々な取り組みをしていますが、今回はその中の一つ、Slackでのバリュースタンプの数を計測する仕組みを作った話しをします
Mediiのバリューや取り組みについては、こちらの記事も是非ご覧ください！

 ちょっとだけ変遷
今の仕組みになるまでに、何度か改良を重ねています
当初は楽をしていたのですが、キャパシティやコスト面で問題が出てきたため、徐々に改良を重ねてきました

Zapier &amp; スプレッドシ...]]></description><link>https://zenn.dev/medii/articles/value-counter</link><guid isPermaLink="true">https://zenn.dev/medii/articles/value-counter</guid><pubDate>Fri, 27 Dec 2024 04:23:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EhrLlYjZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Slack%25E3%2581%25A7%25E3%2583%2590%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2597%25E3%2581%25AE%25E6%2595%25B0%25E3%2582%2592%25E8%25A8%2588%25E6%25B8%25AC%25E3%2581%2599%25E3%2582%258B%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tatsuya%2520Watanabe%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Medii%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0YzBfdkZLWDdBaFg0TU1GVjBBLTFPX3NWclk5ZzB6WFVabDFHaWI2NU5rUVE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tatsuya Watanabe</dc:creator></item><item><title><![CDATA[Python Lambda レイヤーの仕組み]]></title><description><![CDATA[
 はじめに
※ Lambdaレイヤーを作成するための操作手順詳細は含みません。
Lambdaでは、関数のコードからパッケージなどを参照するため、レイヤーという仕組みを備えています。
この記事では、Pythonランタイムにおいてどのような仕組みで参照が行われているのかを記載します。

 要点
Pythonのパッケージをレイヤー経由でLambda関数から参照させるためには、次の2点が満たされている必要があります。

レイヤーに指定するzipが、特定のディレクトリ構造となっていること
パッケージのWheelがAmazon Linuxおよび選択したアーキテクチャで利用可能であること

前提とし...]]></description><link>https://zenn.dev/ncdc/articles/30a777a515a921</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/30a777a515a921</guid><pubDate>Fri, 27 Dec 2024 01:46:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i7Lykhrr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520Lambda%2520%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:K%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3OTg0NTdlYjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>K</dc:creator></item><item><title><![CDATA[Advent of Code 2024 6: Guard Gallivant]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day6 の記事です。 Day5 はこちら。
https://zenn.dev/yasuharu519/articles/0c32f0eb2ffc98
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Part1
....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...
このような . と #...]]></description><link>https://zenn.dev/yasuharu519/articles/dda9f1190d9b30</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/dda9f1190d9b30</guid><pubDate>Thu, 26 Dec 2024 16:08:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MaRPeoG---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%25206%253A%2520Guard%2520Gallivant%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[【Python】OpenCVでドラクエモンスター判別]]></title><description><![CDATA[
 はじめに
こんにちは、Yusei です。今回は第1稿の続編です。
前回の記事はコチラ。これからOpenCVで物体検出を考えている方の一助になれば嬉しいです。


 今回のネタ
前回はドラクエの自動レベル上げシステムを紹介しました。コードの中に以下のマジックナンバーがあります。
threshold=0.64
なんだこれは。どこから出てきたんであろうか。
ということで、この閾値設定の裏話と、OpenCVのテンプレートマッチングを使って調査したこと、試行錯誤したことをお伝えできれば良いなと思っています。

 テンプレートマッチング
前記事で結構さらっと流してしまっていますが、画像の判別時に...]]></description><link>https://zenn.dev/ys110wstr/articles/ad6c45ab4709ce</link><guid isPermaLink="true">https://zenn.dev/ys110wstr/articles/ad6c45ab4709ce</guid><pubDate>Thu, 26 Dec 2024 16:00:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kyRlA6jD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591OpenCV%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25A2%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E5%2588%25A4%25E5%2588%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdmNTU3ZGUwYTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusei</dc:creator></item><item><title><![CDATA[DaVinciResolveでPythonの外部ライブラリを使いたい]]></title><description><![CDATA[DaVinciResolveはPythonを使ったスクリプト操作が可能。
その上で、pipでinstallするような外部ライブラリを使いたいって需要あるよね、ある。
具体的に言うとGUIライブラリとか使いたい人多いんじゃないかな。
一応グローバルにpip installすれば外部ライブラリ使えるけど…配布したい時どうするの？とか
そこらへんの最適解を自分なりに考えてみました。

 方法
以下の手順を踏み、外部ライブラリをフォルダに纏め、プログラム内でそのフォルダを参照する。

外部ライブラリを特定フォルダ下にインストールする
requirements.txtが置いてあるフォルダで下記コマ...]]></description><link>https://zenn.dev/nuroku/articles/d5be12bf50cbf7</link><guid isPermaLink="true">https://zenn.dev/nuroku/articles/d5be12bf50cbf7</guid><pubDate>Thu, 26 Dec 2024 15:58:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jubC1HOc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DaVinciResolve%25E3%2581%25A7Python%25E3%2581%25AE%25E5%25A4%2596%25E9%2583%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2582%258D%25E3%2581%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxNDk0MTQyZjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬろく</dc:creator></item></channel></rss>