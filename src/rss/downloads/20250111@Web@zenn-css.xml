<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「CSS」のフィード]]></title><description><![CDATA[Zennのトピック「CSS」のRSSフィードです]]></description><link>https://zenn.dev/topics/css</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/98e1680a6c.png</url><title>Zennの「CSS」のフィード</title><link>https://zenn.dev/topics/css</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 11 Jan 2025 12:04:06 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/css/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【CSS】特定クラスの最後の要素を指定する]]></title><description><![CDATA[
 はじめに
CSSを使って最後の要素をスタイリングしたい場合、疑似クラスの:last-of-typeや:last-childがまず思い浮かびます。しかし、これらを特定のクラスに絞る場合には、別の方法が必要でした。:hasを活用して実現する方法を備忘録として残します。

 コード例
以下は、Sassでborder-bottomを条件付きで設定する例です。
.item {
  border-bottom: 1px solid black;

  &amp;:not(:has(~ .item)) {
    border-bottom: none;
  }
}

 解説

 :not(:ha...]]></description><link>https://zenn.dev/kibe/articles/771571e0eb75c2</link><guid isPermaLink="true">https://zenn.dev/kibe/articles/771571e0eb75c2</guid><pubDate>Thu, 09 Jan 2025 00:53:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LeBN2A2T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CSS%25E3%2580%2591%25E7%2589%25B9%25E5%25AE%259A%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25AE%25E6%259C%2580%25E5%25BE%258C%25E3%2581%25AE%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k1b3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAwOTYwY2IzNTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k1b3</dc:creator></item><item><title><![CDATA[タブレットのレスポンシブ対応：PC画面サイズの縮小版を表示する]]></title><description><![CDATA[
 概要
画面幅に基づいて適切なレイアウトを提供する実装方法を解説します。特に以下の2つのケースで、縮小表示を実現します：

小型スマートフォン（412px未満）：412px幅のレイアウトを縮小表示
タブレット（744px～1200px未満）：1200px幅のPCレイアウトを縮小表示


 コードによる実装

 1. viewport設定
(function () {
  var screenWidth = window.screen.width;
  var metaTag = document.createElement('meta');
  metaTag.name = "view...]]></description><link>https://zenn.dev/sarap422/articles/b61ea87791a81e</link><guid isPermaLink="true">https://zenn.dev/sarap422/articles/b61ea87791a81e</guid><pubDate>Wed, 08 Jan 2025 18:37:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I5OGe2wv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25BF%25E3%2583%2596%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E3%2581%25AE%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%2596%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%259APC%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AE%25E7%25B8%25AE%25E5%25B0%258F%25E7%2589%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarap422%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarap422</dc:creator></item><item><title><![CDATA[visually-hidden]]></title><description><![CDATA[.visually-hidden {
position: absolute!important;
width:4px!important;
height: 4px!important;
padding: 0!important;
margin: -1px!important;
overflow: hidden!important;
clip: rect(0,0,0,0)!important;
white-space: nowrap!important;
border: 0!important;
}
https://qiita.com/randy39/items/fca820d500dfe...]]></description><link>https://zenn.dev/1000_x_t30/articles/82373c5bbddbca</link><guid isPermaLink="true">https://zenn.dev/1000_x_t30/articles/82373c5bbddbca</guid><pubDate>Wed, 08 Jan 2025 04:37:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7tSrG2DA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:visually-hidden%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2540ngtmtkyk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkNjk2NzYzNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka@ngtmtkyk</dc:creator></item><item><title><![CDATA[input が含まれないcustom element にすれば大体解決した話]]></title><description><![CDATA[ということで 前回の話 の &lt;toggle-checkbox&gt;&lt;/toggle-checkbox&gt; の内部で使っていた input を排除した toggle-checkbox が完成しました。
ポイントとしては以下の通り

内部 checked は this.#checked に一元化
validation が必要かは ElementInternals.willValidate でチェック
validate で focus したい場合は 子として 何らかの要素が必要（自身ではダメ？
disabled の対応は別途実装必要

例: tabindex とか


spa...]]></description><link>https://zenn.dev/juners/articles/dc1d4b881879c3</link><guid isPermaLink="true">https://zenn.dev/juners/articles/dc1d4b881879c3</guid><pubDate>Wed, 08 Jan 2025 03:32:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CHWwhLK4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:input%2520%25E3%2581%258C%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584custom%2520element%2520%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258C%25E3%2581%25B0%25E5%25A4%25A7%25E4%25BD%2593%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[CSSで扇形を作る方法]]></title><description><![CDATA[HTMLとかCSSで扇形を作るのは::beforeとか::afterとかborder-radiusとか使わなきゃ行けなさそうで大変に思えるけど、ちょっとしたせこワザを思いついたので共有します。
border-radius: 50%;
background: conic-gradient(white 60deg, blue 60deg):
この例なら角度60度の扇形ができます。

 仕組み
円を作ってその内部の色にグラデーションを当ててるだけです。
上の例では白と青のグラデーションをしていしていますが、用途によって white → transparent のようにすると扇形だけ可視化するこ...]]></description><link>https://zenn.dev/daraenglish/articles/8b800203439a75</link><guid isPermaLink="true">https://zenn.dev/daraenglish/articles/8b800203439a75</guid><pubDate>Wed, 08 Jan 2025 03:22:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lI_12AAd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%25E3%2581%25A7%25E6%2589%2587%25E5%25BD%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daraEnglish%25E4%25B8%25AD%25E3%2581%25AE%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmp5dmY3NnBoTUdiazNoOWpwc2ppdVhiYTVsblgyMHpkZnAwVkxUc0hXdlkzT2VPY009czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daraEnglish中の人</dc:creator></item><item><title><![CDATA[TailWind CSS v4は便利だぞ]]></title><description><![CDATA[
 はじめに
tailwindCSS の v4.0 ベータ版が出ました！
それに伴って今まで以上に便利な機能が追加されたので
細かい変更やよく使う機能を絞って紹介させていただきます！

 初期設定
初期設定の部分から変更されています。
まず CSS ファイルに必要な記述が少なくなりました！

app.css
- @tailwind base;
- @tailwind components;
- @tailwind utilities;

+ @import "tailwindcss";

見ての通り今までは TailWindCSS を使うのに
必要なコードが 3 行ありましたが
1 行に...]]></description><link>https://zenn.dev/jun0723/articles/f27b0046072704</link><guid isPermaLink="true">https://zenn.dev/jun0723/articles/f27b0046072704</guid><pubDate>Wed, 08 Jan 2025 03:10:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qTBDeI0---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TailWind%2520CSS%2520v4%25E3%2581%25AF%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25A0%25E3%2581%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2585%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3ZmE0NzMzZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じゅん</dc:creator></item><item><title><![CDATA[CSS Modulesとは？]]></title><description><![CDATA[CSS Modulesは、コンポーネント指向のWeb開発におけるスタイリング手法の一つです。主な特徴は以下の通りです：


スコープ化: 各コンポーネントのスタイルをローカルスコープ化し、クラス名の衝突を防ぎます。


自動的なユニーク化: コンパイル時にクラス名に一意の識別子を付与し、グローバルな名前空間の汚染を回避します。


JavaScriptとの統合: CSSファイルをJavaScriptモジュールとしてインポートし、オブジェクトのようにクラス名を扱えます。


再利用性: スタイルを再利用可能なモジュールとして定義でき、コードの重複を減らせます。


柔軟性: 通常のCSSと...]]></description><link>https://zenn.dev/btc/articles/250108_css_modules</link><guid isPermaLink="true">https://zenn.dev/btc/articles/250108_css_modules</guid><pubDate>Wed, 08 Jan 2025 01:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--32ptv37R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:CSS%2520Modules%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:my%2520log%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwODIzM2M5OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>my log</dc:creator></item><item><title><![CDATA[Marpのcustom css適用]]></title><description><![CDATA[カスタムCSSが適用できないときに確認すること

相対パスがあっているか（今開いているところの相対パス、絶対パスはNG）


"OUTPUT"から右側の"WINDOW"からエラーの原因をみる


わたしは最初に /* @theme test1 */とファイル名が入っていないことが原因だった

https://qiita.com/atw0_0w/items/ca0699010600db169b55
https://marpit.marp.app/theme-css
]]></description><link>https://zenn.dev/codememo/articles/7a7812b8c85089</link><guid isPermaLink="true">https://zenn.dev/codememo/articles/7a7812b8c85089</guid><pubDate>Tue, 07 Jan 2025 04:28:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mrPJPKyi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:Marp%25E3%2581%25AEcustom%2520css%25E9%2581%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3J5eXVmTENHdzJwemFHYnM0WjMzeEg0UXl3YjNDUGdKdHpUN2I4VF8zZ1BjVjZWVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>M</dc:creator></item><item><title><![CDATA[なぜYouTubeでは動画を全画面表示しながらスクロールが可能なのか？]]></title><description><![CDATA[こちらは JavaScript Advent Calendar 2024の 25 日目の記事です。
https://qiita.com/advent-calendar/2024/javascript

 はじめに
YouTubeは全画面表示中でもスクロールできて便利ですね[1]。

動画を全画面表示中でもスクロールできる
しかし Fullscreen API を用いて動画を全画面にした場合、通常はスクロール不可能なはずです。
YouTube ではどのようにスクロール可能な全画面を実現しているのでしょうか？
本記事では、その実装方法を解説します（Fullscreen APIとは）。

 調...]]></description><link>https://zenn.dev/popopon/articles/scrollable-fullscreen-video</link><guid isPermaLink="true">https://zenn.dev/popopon/articles/scrollable-fullscreen-video</guid><pubDate>Mon, 06 Jan 2025 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e3_ucncs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CYouTube%25E3%2581%25A7%25E3%2581%25AF%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E5%2585%25A8%25E7%2594%25BB%25E9%259D%25A2%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwYzhlNDRjMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しん</dc:creator></item><item><title><![CDATA[同じデザインを複数のHTMLタグに適用する]]></title><description><![CDATA[Webアプリなどを業務で開発する際に、UIのデザインをFigmaなどで作成し（Design System）、
それを元に実装することはよくあるかと思います。
本記事は、上記の場合に見た目は同じだけどHTMLタグは別にしたいユースケースに遭遇した場合に、
対応した内容を時系列で解説します。
実装全体は以下のPRです。
https://github.com/ki504178/nextjs_ts_codebase/pull/21

 前提
Design Systemで定義されていたものとして、以下のようなパターンにより表示を切り替えられるボタンの共通コンポーネントでした。

!
実際の業務では...]]></description><link>https://zenn.dev/ki504178/articles/html_tag_design</link><guid isPermaLink="true">https://zenn.dev/ki504178/articles/html_tag_design</guid><pubDate>Mon, 06 Jan 2025 00:25:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x67N-PBr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258C%25E3%2581%2598%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AEHTML%25E3%2582%25BF%25E3%2582%25B0%25E3%2581%25AB%25E9%2581%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ki504178%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U3YWU5YTIzNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ki504178</dc:creator></item><item><title><![CDATA[ドラッグでリサイズするUIを実装するときに設定したいCSS]]></title><description><![CDATA[例えばサイドバーの幅をドラッグで調整できるUIを実装した時、以下のような症状に遭遇したことはありませんか？

ドラッグ中になんか引っかかる・スムースに反応しない
マウスのボタンを離してもドラッグ中判定のままになってしまう
ドラッグ中にテキストが選択されてしまう

僕はあります。

 挙動が微妙な実装例
以下は上記のような挙動を再現した実装例になっています。試しに、サイドバーの右端をドラッグして色々と操作をしてみてください。おそらく、リサイズがカクついたり、マウスのボタンを離した状態でもリサイズされてしまったり、テキストが選択されてしまう症状が出ると思います。
（↓の埋込状態の操作だとうま...]]></description><link>https://zenn.dev/moozaru/articles/8df76e62e72c9e</link><guid isPermaLink="true">https://zenn.dev/moozaru/articles/8df76e62e72c9e</guid><pubDate>Sun, 05 Jan 2025 22:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8DLjqrvU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%25E3%2581%25A7%25E3%2583%25AA%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%2599%25E3%2582%258BUI%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584CSS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:zaru%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiNDkwNTdmZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25AB%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25AD%25E3%2582%258B%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hTeWVOcHN2TEdOdTdPeUFlU1JEbDhUNkNOX1p3NHBXSHpIRHN2NlBFPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zaru</dc:creator></item><item><title><![CDATA[コンテナクエリについてまとめ]]></title><description><![CDATA[
 コンテナクエリとは
要素のサイズやレイアウトに基づいてスタイルを適用するためのCSSの機能です。これは、従来のメディアクエリがビューポート（画面全体のサイズ）に基づいてスタイルを変更するのに対し、特定のコンテナ要素のサイズを基準にスタイルを変更できる点で異なります。
子要素が親コンテナのサイズに応じてスタイルを変更できるため、柔軟な指定が可能になりますね。

 コンテナクエリの使い方
コンテナクエリを使うポイントは、「どの要素をコンテナとして設定するか」を決めることです。
今回は、.container 要素をコンテナに指定します。
コンテナにする要素は必ずしも親要素である必要はありま...]]></description><link>https://zenn.dev/takaa/articles/9c442b19b17578</link><guid isPermaLink="true">https://zenn.dev/takaa/articles/9c442b19b17578</guid><pubDate>Sun, 05 Jan 2025 15:38:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A0MEtfo3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZTg4MTMwMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaa</dc:creator></item><item><title><![CDATA[FLOCSSについてまとめ]]></title><description><![CDATA[FLOCSSには3つのレイヤーの概念があり、役割によってそれぞれ区分されています。
1.Foundation
2.Layout
3.Object

 1.Foundation
webサイト全体で利用するベースとなるCSSがFoundationレイヤーで定義します。
以下が具体的なものです。

リセットCSSやノーマライズCSS
全体の背景やタイポグラフィなどプロジェクト全体の基礎となるスタイル
ざっくり要約すると全ページ、全要素に共通するようなcssはFoundationレイヤーに記述するといいと思います。


 2.Layout
ヘッダーやフッター、メインとなるコンテンツエリア、サイド...]]></description><link>https://zenn.dev/takaa/articles/87f92eca7f2fa1</link><guid isPermaLink="true">https://zenn.dev/takaa/articles/87f92eca7f2fa1</guid><pubDate>Sun, 05 Jan 2025 15:12:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cVAsfDXa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FLOCSS%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takaa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkZTg4MTMwMTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takaa</dc:creator></item><item><title><![CDATA[[Tailwind CSS] ボタンUI]]></title><description><![CDATA[
 はじめに
この記事では、Tailwind CSSでよくあるボタンデザインを作成しました。
下記サイトを活用して表示しております。

参考資料



 1. 「登録」のボタン

&lt;button class="py-1 px-5 bg-sky-500 rounded-2xl text-white font-black"&gt;登録&lt;/button&gt;
!
工夫ポイント

プライマリーカラーなど色を使用することで、この後にイベントが発生することをイメージさせる
文字を白色にすることで、見やすさとテキストではないことを強調させる
ボタンの角を丸くすることで、ボタンらしさを強調...]]></description><link>https://zenn.dev/aew2sbee/articles/tailwind-css-button-ui</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/tailwind-css-button-ui</guid><pubDate>Sun, 05 Jan 2025 13:37:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qJG2PQa---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTailwind%2520CSS%255D%2520%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3UI%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%2580%2589%25E3%2581%2582%25E3%2582%2593%2520%25E3%2582%2582%25E3%2581%258F%25E3%2582%2582%25E3%2581%258F%25E5%258B%2589%25E5%25BC%25B7%25E4%25BC%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhZTc3ZDA0MzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小倉あん🥝もくもく勉強会</dc:creator></item><item><title><![CDATA[CSS gridの学習ロードマップと資料]]></title><description><![CDATA[
 CSS gridを学ぶ順番は大事
CSS gridは覚えることが多く、単純にプロパティの数だけ比べてもCSS flexより多いです。そのため手当たり次第ではなく、順番を考えて学ぶことが大事です。
なぜCSS gridを覚えられないのか？ - (Zennに書いた別記事より)
ところが、世間一般の記事の多くは「CSS gridは2次元レイアウトに向いている」という説明から始まります。CSSを使いこなすためには、最初に注目すべき点はそこではありません。たしかに2次元レイアウトはCSS gridの重要な特徴ですが、それだけに注目すると「なんだか難しい」「使用場面が少ない」と誤解しやすくなり、...]]></description><link>https://zenn.dev/richardimaoka/articles/c462f542eea000</link><guid isPermaLink="true">https://zenn.dev/richardimaoka/articles/c462f542eea000</guid><pubDate>Sat, 04 Jan 2025 12:24:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g_Flbg9N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSS%2520grid%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2581%25A8%25E8%25B3%2587%25E6%2596%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Richard%2520Imaoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o2MS11QmliS2tUdjRRUmJibFZfWDVLQWF5akhMZjJiMUtnVTZSTnc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Richard Imaoka</dc:creator></item><item><title><![CDATA[見せてあげよう、Marp の真髄を]]></title><description><![CDATA[みなさんは Marp でスライド作成していますか？
Marp は Markdown による軽量な記述方式と、あらかじめ用意されたテーマにより、美しいスライドを簡単に作成することができます。
今回はそんな Marp をフルに活用すべく、私が考える Marp の結論構成を紹介したいと思います！

 対象者
この記事の対象読者は以下の通りです。

✅ Marp のスライドデザインを細かくカスタマイズしたい
✅ Marp で HTML タグをいちいち書くのが億劫
✅ Marp で作ったスライドを楽に Web で公開したい

逆に、下記のような方は対象外となっています。

❌ Marp の概要/基...]]></description><link>https://zenn.dev/ykicchan/articles/c30efd827337c3</link><guid isPermaLink="true">https://zenn.dev/ykicchan/articles/c30efd827337c3</guid><pubDate>Fri, 03 Jan 2025 11:46:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HSDiCmmx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A6%258B%25E3%2581%259B%25E3%2581%25A6%25E3%2581%2582%25E3%2581%2592%25E3%2582%2588%25E3%2581%2586%25E3%2580%2581Marp%2520%25E3%2581%25AE%25E7%259C%259F%25E9%25AB%2584%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2581%259D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDgxZmEzY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きっちゃそ</dc:creator></item><item><title><![CDATA[[CSS] 磨りガラスを再現する、backdrop-filter]]></title><description><![CDATA[
 はじめに
2024に新しく最新ブラウザに組み込まれた機能から、今回は backdrop-filter を取り上げます。
https://web.dev/baseline/2024?hl=ja
backdrop-filter は CSS に加えられた項目の一つで、背景にグラフィック効果を追加することができます。たとえば背景をぼかしたり、色を反転させたりする際に便利です。

 基本
背景ぼかしなど、背景に対するグラフィック効果を実装する場合、これまでは before などの疑似要素に filter プロパティを使って実装したりすることがほとんどでした。
&lt;div class="co...]]></description><link>https://zenn.dev/progate_users/articles/22ed34525e75a6</link><guid isPermaLink="true">https://zenn.dev/progate_users/articles/22ed34525e75a6</guid><pubDate>Fri, 03 Jan 2025 00:15:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eHMzL5n0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BCSS%255D%2520%25E7%25A3%25A8%25E3%2582%258A%25E3%2582%25AC%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%2592%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581backdrop-filter%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2588%25E3%2581%25A4%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2OGUyYmI4YzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Progate%2520Path%2520%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiOGNiMGY2NjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よつ</dc:creator></item><item><title><![CDATA[ポップオーバーをシンプルに実現する、Popover API]]></title><description><![CDATA[
 はじめに
2024 年の Newly Available（最新バージョンのブラウザで利用できる機能）を流し見していた際、面白そうな機能があったので取り上げます。
https://zenn.dev/anko/articles/mdn-baseline-2024-html-css
!
Newly Available を紹介する記事には掲載されていますが、記事内で参照されているソースを確認したところ、Limited Support となっていました。Safari などの一部ブラウザでは Partial Support（一部のサポート）のようです。
https://webstatus.dev...]]></description><link>https://zenn.dev/progate_users/articles/02c9aa13105ee7</link><guid isPermaLink="true">https://zenn.dev/progate_users/articles/02c9aa13105ee7</guid><pubDate>Thu, 02 Jan 2025 11:34:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eoRVZcOP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259D%25E3%2583%2583%25E3%2583%2597%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581Popover%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%2588%25E3%2581%25A4%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2OGUyYmI4YzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Progate%2520Path%2520%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiOGNiMGY2NjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よつ</dc:creator></item><item><title><![CDATA[& 入れ子セレクターが間違って使われてた]]></title><description><![CDATA[
 前提

 &amp; 入れ子セレクターとは？
https://developer.mozilla.org/ja/docs/Web/CSS/Nesting_selector

 本題
ざっくり言うと下記のようなコードでした。
&lt;style&gt;
  .parent {
    font-weight: bold;
    padding-bottom: 16;

    .child {
      color: orange;
    }

    &amp;.child2 {
      /* parent child2みたいな使い方か、hoverの時に使う */
    ...]]></description><link>https://zenn.dev/sikmi_tech/articles/6cbd4ecd530fa3</link><guid isPermaLink="true">https://zenn.dev/sikmi_tech/articles/6cbd4ecd530fa3</guid><pubDate>Thu, 02 Jan 2025 07:41:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PRf5yPJv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2526%2520%25E5%2585%25A5%25E3%2582%258C%25E5%25AD%2590%25E3%2582%25BB%25E3%2583%25AC%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%258C%25E9%2596%2593%25E9%2581%2595%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%25BF%25E3%2582%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:na8esin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlYzhlY2ZlNDguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%2597%25E3%2581%258F%25E3%2581%25BF%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2htRnZJU0VZaHpTODM3VVpLRE5tdHNYV2FBazF4WE5GSUt3TG1oPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>na8esin</dc:creator></item><item><title><![CDATA[BEMとは？CSSの命名規則について詳しくまとめてみた]]></title><description><![CDATA[BEM（ベム）というクラスの命名規則があります。
このBEMについて、詳しく解説していきます。


 BEMって何？

BEMは、ウェブサイトやアプリのCSS（デザイン）をわかりやすく管理するためのルールです。


B: Block（ブロック）

E: Element（エレメント）

M: Modifier（モディファイア）

つまり、「部品を分けて考えて名前を付けよう！」という考え方です。たとえば、家を作るときに「部屋（Block）」「家具（Element）」「家具の色（Modifier）」を決めるような感じです。


 BEMの基本ルール



Block（ブロック）

ページの中で...]]></description><link>https://zenn.dev/nabesan/articles/b47aa380c118bb</link><guid isPermaLink="true">https://zenn.dev/nabesan/articles/b47aa380c118bb</guid><pubDate>Thu, 02 Jan 2025 07:24:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wrvwbvAk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BEM%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FCSS%25E3%2581%25AE%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A9%25B3%25E3%2581%2597%25E3%2581%258F%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuta%2520Watanabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzODU0MzkwNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuta Watanabe</dc:creator></item></channel></rss>