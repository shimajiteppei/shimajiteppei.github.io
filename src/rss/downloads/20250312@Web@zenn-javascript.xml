<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 12 Mar 2025 01:09:52 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[(備忘録) 奇数判定大喜利]]></title><description><![CDATA[
 たこたこたこたこ たこいかぱにっく！
「たこ」と言ったらたこ叩く！

 元凶(^ρ^)
https://x.com/fumokmm/status/1898690910013255750
https://x.com/fumokmm/status/1898695858859737496
https://x.com/arith_rose/status/1899300131658510802

 Let's お大喜利スクリプト


 ① 余算の無駄遣い (条件分岐を回避)

function isOdd(num) {
    return [false, true][num % 2];
}
...]]></description><link>https://zenn.dev/libraplanet/articles/0ced64f806fdb0</link><guid isPermaLink="true">https://zenn.dev/libraplanet/articles/0ced64f806fdb0</guid><pubDate>Tue, 11 Mar 2025 16:14:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ry8DOk1g--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2529%2520%25E5%25A5%2587%25E6%2595%25B0%25E5%2588%25A4%25E5%25AE%259A%25E5%25A4%25A7%25E5%2596%259C%25E5%2588%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:takumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ5ZjRkNTRiODQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takumi</dc:creator></item><item><title><![CDATA[Astroで作るブログの仕組み]]></title><description><![CDATA[
 Astroでつくるブログの仕組み解説

 はじめに
こんにちは、坂爪です。この記事ではAstroを使ったブログシステムの基本的な仕組みについて解説します。Astroの特徴からディレクトリ構成、そして実際の実装方法まで、順を追って説明していきます。

 前提条件
この記事を理解するためには、以下の知識が必要です：

基礎的なWEBの仕組みやJavaScriptの理解


 Astroとは

Astroは、ブログやマーケティング、eコマースなど、コンテンツ駆動のウェブサイトを作成するためのウェブフレームワークです。Astroは、新しいフロントエンドアーキテクチャを開拓し、他のフレームワー...]]></description><link>https://zenn.dev/dume5579/articles/6ee7ee1e6b1231</link><guid isPermaLink="true">https://zenn.dev/dume5579/articles/6ee7ee1e6b1231</guid><pubDate>Tue, 11 Mar 2025 16:02:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pb2ioK5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259D%2582%25E7%2588%25AA%2520%25E8%25AA%25A0%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0Y2U4MmU3OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>坂爪 誠人</dc:creator></item><item><title><![CDATA[【第一回】discord.jsでbotを作る方法【基礎編】]]></title><description><![CDATA[
 discord.jsでDiscordのbotを作る（第一回）
基礎編です。気まぐれ更新なのでやる気がなくなれば途中で沈没するDisocrdのボット開発記事です。

 本シリーズでやること
この開発記事シリーズは基本備忘録的な感じです（備忘録ってなに？）。
基本的にはdiscord.js Guideに従って、ある程度までコマンドの基礎の解説あたりまで進めていきます。その後は筆者の個人開発の記録として綴っていきますが、いずれにせよここがスタート地点。ここがわからん場合はJSの基礎などをやると良き。筆者も基礎は分かってないけど。

 フォルダの作成とインストールをザーッと
とりあえず、テキ...]]></description><link>https://zenn.dev/semapho/articles/aaf90c395f6316</link><guid isPermaLink="true">https://zenn.dev/semapho/articles/aaf90c395f6316</guid><pubDate>Tue, 11 Mar 2025 16:00:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DfZLAKdo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25AC%25AC%25E4%25B8%2580%25E5%259B%259E%25E3%2580%2591discord.js%25E3%2581%25A7bot%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2580%2590%25E5%259F%25BA%25E7%25A4%258E%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Semapho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dyczI5dzNqTHdyaG41VTIwa05CVy1UcC04X1d6UFNJRS1nNmVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Semapho</dc:creator></item><item><title><![CDATA[JavaScript Objectを使う]]></title><description><![CDATA[Next.js/Reactを使っているときによく使う構文で、Objectがあります。分厚い本やMDNを見て学習することがあるのですが毎回検索しにいくのは大変です。

仕事でもよく使っていた構文の使い方を解説した本を書いてみることにしました。最近は初心者でもTypeScriptから勉強したほうがいいというが、JavaScriptで変数、配列、オブジェクト、　DOM操作を学んでから出ないと理解できないことがあるので、私はお勧めしてないです。

ちなみに私は、Node.jsでCloud Functionsを使うことが多かったのですが、Objectはよく使っていましたね。

使い方は多く存在するので、参考程度にみてください。
著者: JboyHashimoto]]></description><link>https://zenn.dev/joo_hashi/books/4c1e890ac259bb</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/books/4c1e890ac259bb</guid><pubDate>Tue, 11 Mar 2025 14:58:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FgAvwV2A--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mYmRhNmRjYzZjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[『RPGツクールMZ』のステータス表示周り]]></title><description><![CDATA[『RPGツクールMZ』関連記事 目次
『RPGツクールMZ』のステータス表示周りを調べてみました。
いわゆるHUD(Headup Display)と呼ばれる、HPなどの各種ゲージが並んでいる部分ですね。
個人的にはHUDは戦闘機のコクピットにあるやつ以外だと強い違和感があるのですが、もうゲーム制作界隈では標準的な用語になっているので、郷にいればの精神でやっていこうと思います。
関連記事としては、次のようなものがあります。

『RPGツクールMZ』のウィンドウ内容を調べてみた
『RPGツクールMZ』のウィンドウ文字表示を調べてみた
『RPGツクールMZ』文字表示関連のメソッド一覧

例によ...]]></description><link>https://zenn.dev/tonbi/articles/7b3a8c58812b48</link><guid isPermaLink="true">https://zenn.dev/tonbi/articles/7b3a8c58812b48</guid><pubDate>Tue, 11 Mar 2025 13:48:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NX3N9oXU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258ERPG%25E3%2583%2584%25E3%2582%25AF%25E3%2583%25BC%25E3%2583%25ABMZ%25E3%2580%258F%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B9%25E8%25A1%25A8%25E7%25A4%25BA%25E5%2591%25A8%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2582%2593%25E3%2581%25B3%2540%25E9%25B3%25B6%25E5%25B6%258B%25E5%25B7%25A5%25E6%2588%25BF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBYl9FRlAtZm9RQU1pN1VoM3hzYkNyQXZUSTZjUDFkZGJJMWJrPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>とんび@鳶嶋工房</dc:creator></item><item><title><![CDATA[「エラー発生時の状況を楽に正確に再現」Sentry Session Replayを活用する]]></title><description><![CDATA[
 導入の背景
フロントエンドのエラー発生時「状況再現」にに困ること、しばしばないでしょうか？
「Sentryにエラーが来た。エラーの内容はわかるが、これどういう経緯で発生したんだ、、？？」
という調査に時間がかかることが多く、なんとかしたいなと考えていました。
このような「エラー発生時の状況再現」に非常に便利なのがSentry Session Replay（以後Session Replay）です。
Session Replay導入の結果「状況再現」が精度良く、かつ迅速に行えるようになり、エラーの修正が非常に楽になりました。
ただ導入前は「具体的にどういうことができるんだ？」というイメー...]]></description><link>https://zenn.dev/kataokatsuki/articles/26d5f316f598f7</link><guid isPermaLink="true">https://zenn.dev/kataokatsuki/articles/26d5f316f598f7</guid><pubDate>Tue, 11 Mar 2025 12:48:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xdcoBQzq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E7%2599%25BA%25E7%2594%259F%25E6%2599%2582%25E3%2581%25AE%25E7%258A%25B6%25E6%25B3%2581%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E6%25AD%25A3%25E7%25A2%25BA%25E3%2581%25AB%25E5%2586%258D%25E7%258F%25BE%25E3%2580%258DSentry%2520Session%2520Replay%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kataoka%2520Katsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2plaEl4V2xYM3ctckJQMDNMUDVna0s2NDN3MVJBZTl6TW1LcWxnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kataoka Katsuki</dc:creator></item><item><title><![CDATA[【基礎から学ぶ】関数の作り方と使い方を徹底解説]]></title><description><![CDATA[プログラミングにおいて、関数は最も重要な基本要素の1つです。コードの再利用性を高め、プログラムを整理するために不可欠な存在です。この記事では、関数の基本的な概念から実践的な使い方まで、初心者にもわかりやすく解説します。

 関数とは？
関数は、特定の処理をまとめた「部品」のようなものです。一度作った関数は、必要なときに何度でも使うことができます。

 関数を使うメリット


コードの再利用

同じ処理を何度も書く必要がない
変更が必要な場合も1箇所を修正するだけでよい



プログラムの整理

処理をわかりやすい単位に分割できる
コードの見通しが良くなる



保守性の向上

バグの修正...]]></description><link>https://zenn.dev/homatsu_tech/articles/73895938c878a8</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/73895938c878a8</guid><pubDate>Tue, 11 Mar 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UVkv04w4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%259F%25BA%25E7%25A4%258E%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2591%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZWQ1ZGYyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[静的なホームページで動的なお知らせ情報を表示する]]></title><description><![CDATA[静的な Web サイトでも動的なコンテンツを表示したいということがあるかもしれません。
今回はタイトルの通り「ホームページにお知らせ情報を表示する」というケースを例に、その方法を一つ実際のコードと合わせて紹介したいと思います。
※サンプルのホームページはこちらから確認できます。

 概要
今回紹介するのはお知らせを Google スプレッドシートで管理し、JS でそのスプレッドシートを取得するという方法になります。
上記のサンプルホームページや以下に記載するコード例ではこちらのスプレッドシートを参照しています。(このスプレッドシートではアクセス権の設定で「リンクを知っている人全員」を「閲...]]></description><link>https://zenn.dev/guitarinchen/articles/493ac2f501bfee</link><guid isPermaLink="true">https://zenn.dev/guitarinchen/articles/493ac2f501bfee</guid><pubDate>Tue, 11 Mar 2025 09:08:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tqd8XMsh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259D%2599%25E7%259A%2584%25E3%2581%25AA%25E3%2583%259B%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AA%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:guitarinchen%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMjdmMGEzNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>guitarinchen</dc:creator></item><item><title><![CDATA[Honoでcurlコマンドを使うときのエラー]]></title><description><![CDATA[
 発生した経緯
HonoでAPI開発中、作成したリクエストをVScodeのターミナル上でリクエストを送ったところ、エラーが発生した。
API（デフォルトで記載されているもの）
app.get("/", (c) =&gt; {
  return c.text("Hello Hono!");
});
コマンド
curl -X GET http://localhost:3000
エラー
Invoke-WebRequest : パラメーター名 'X' に一致するパラメーターが見つかりません。

 考えられる原因
curl コマンドが Invoke-WebRequest として解釈されるのは、W...]]></description><link>https://zenn.dev/ashunar0/articles/f0f4f406d49952</link><guid isPermaLink="true">https://zenn.dev/ashunar0/articles/f0f4f406d49952</guid><pubDate>Tue, 11 Mar 2025 08:18:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--44-SpoAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25A7curl%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25AA%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVJSTJuOHVoRXhKNjdHbGllMWo4M2VyVUJDeDJPS09TVnBtaHhjdmFYVjA4T1Z1c209czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あすなろ</dc:creator></item><item><title><![CDATA[Goで学ぶWebSocket：[JWT認証 & 負荷分散設計]]]></title><description><![CDATA[
 はじめに
前回の記事では、WebSocketを活用した通知システム、Redisを使ったWebSocketサーバーの構築方法を解説しました。
今回はさらに発展させて、JWT認証を組み込んだWebSocket実装と 負荷分散を考慮した設計について解説します。
対象読者

WebSocketに認証を組み込みたい方
負荷の高いWebSocketアプリを効率的にスケールアウトしたい方
セキュアなリアルタイム通信を実現したい方

目次

JWT認証を組み込んだセキュアなWebSocketの実装

JWT認証とは？
GoでのJWT認証の実装
WebSocketへのJWT認証の適用


負荷分散を考...]]></description><link>https://zenn.dev/urabexon/articles/13f981020eefc5</link><guid isPermaLink="true">https://zenn.dev/urabexon/articles/13f981020eefc5</guid><pubDate>Tue, 11 Mar 2025 05:06:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YTly41Nx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6WebSocket%25EF%25BC%259A%255BJWT%25E8%25AA%258D%25E8%25A8%25BC%2520%2526%2520%25E8%25B2%25A0%25E8%258D%25B7%25E5%2588%2586%25E6%2595%25A3%25E8%25A8%25AD%25E8%25A8%2588%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroki%2520Urabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4NmEwZTdkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroki Urabe</dc:creator></item><item><title><![CDATA[React19にアップグレードに挑戦してみた話]]></title><description><![CDATA[こんにちは、WED 株式会社でエンジニアをしている篠崎（@sinora_）です。
WED が開発・運営している、レシート買取アプリ「ONE」はアプリのみで展開していますが、
その「ONE」の運用で使用する管理画面は Next.js を採用しております。
最近管理画面の開発にアサインされることになり、フロントエンド側を書く機会がとても増えまして、自分の学習がてら 2024 年 12 月にリリースされた React19 のアップグレードにチャレンジしてみようと思い、
その軌跡を備忘録としてここに記述していこうと思います。

 なぜアップグレードしようと思ったのか？
forwardRef を使...]]></description><link>https://zenn.dev/wed_engineering/articles/20250303-react19-upgrade</link><guid isPermaLink="true">https://zenn.dev/wed_engineering/articles/20250303-react19-upgrade</guid><pubDate>Tue, 11 Mar 2025 01:14:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CCi4hs-A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sinora%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYjlmMzI3YWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:WED%2520Engineering%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3MWM1NjVkM2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sinora</dc:creator></item><item><title><![CDATA[Promiseについて調べてみた]]></title><description><![CDATA[前回、chatGPTを使ってコールバック関数について調べてみました。
https://zenn.dev/masato24524/articles/1e7fe29f12aa33
今回はasync/awaitについて調べてみます、、、と思ったのですが
その前にPromiseのきちんとした理解が必要そうです。
Promiseは非同期処理の際の結果に応じて処理を指定できるというものでした。


（質問）そもそもJavaScriptのPromiseってなに？


 Promiseとは？
Promise は、非同期処理の結果を表すオブジェクト です。
非同期処理が 成功するか失敗するか を表し、それ...]]></description><link>https://zenn.dev/masato24524/articles/4d248db052a364</link><guid isPermaLink="true">https://zenn.dev/masato24524/articles/4d248db052a364</guid><pubDate>Tue, 11 Mar 2025 00:34:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0DoMHskE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Promise%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhYzUxMTE3YTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masato</dc:creator></item><item><title><![CDATA[denoland/denoをvscodeで動かすための設定]]></title><description><![CDATA[cargoとかそこら辺が入っているのは前提として。
denoには https://docs.deno.com/runtime/contributing/#deno という親切なガイドがあるんですが、なんかこれ通りだとちょいちょいエラー出たりするので自分の手元でゴニョゴニョしてた話を書く。
とりあえず、以下のように.vscode/settings.jsonをか書けば良さそう。
{
    "deno.enable": true,
    "deno.path": "your-pc-path/target/debug/deno",
    "deno.importMap": "./tools...]]></description><link>https://zenn.dev/yuto76/articles/cfd0b28be422da</link><guid isPermaLink="true">https://zenn.dev/yuto76/articles/cfd0b28be422da</guid><pubDate>Mon, 10 Mar 2025 23:52:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UrIzXDH4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:denoland%252Fdeno%25E3%2582%2592vscode%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2599%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A6%25E3%2582%25A6%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4NzFiYTNmNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ユウト</dc:creator></item><item><title><![CDATA[GoでWebSocketを使用した通知システムを作成する：[Redis連携]]]></title><description><![CDATA[
 はじめに
前回の記事では、GoでWebSocketを使った基本的なリアルタイム通信を実装しました。
今回は、さらに応用的なWebSocketの活用方法として、通知システムの作成およびRedisを使ったスケーラブルなWebSocketサーバーの構築を解説します。
対象読者

WebSocketを活用して通知システムを実装したい方
Redisを使ってWebSocketサーバーをスケールアウトしたい方
複数のWebSocketクライアントを効率的に管理したい方

目次

WebSocketを活用した通知システムの作り方

通知システムの仕組み
WebSocketサーバーの実装
クライアント...]]></description><link>https://zenn.dev/urabexon/articles/0e822d7c6cb571</link><guid isPermaLink="true">https://zenn.dev/urabexon/articles/0e822d7c6cb571</guid><pubDate>Mon, 10 Mar 2025 11:22:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UZtZrFs4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2581%25A7WebSocket%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E9%2580%259A%25E7%259F%25A5%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259A%255BRedis%25E9%2580%25A3%25E6%2590%25BA%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroki%2520Urabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4NmEwZTdkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroki Urabe</dc:creator></item><item><title><![CDATA[【超初心者向け】Hello Worldを書いてみよう！（Python, JavaScript, Java）]]></title><description><![CDATA[プログラミングを始める時、最初に書くのが「Hello World」プログラムです。これは画面に「Hello World」という文字を表示する、最もシンプルなプログラムです。この記事では、3つの主要なプログラミング言語でHello Worldを書く方法を解説します。

 なぜHello Worldから始めるの？
Hello Worldプログラムには、以下のような意義があります：


最小限のコードで動作確認ができる

開発環境が正しく設定されているか確認できる
プログラムの基本的な構造を理解できる



プログラミングの第一歩として最適

成功体験を得やすい
言語の基本的な文法に触れられる...]]></description><link>https://zenn.dev/homatsu_tech/articles/40e7bfdfa62eae</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/40e7bfdfa62eae</guid><pubDate>Mon, 10 Mar 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l9vQ6VSI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25B6%2585%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Hello%2520World%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%25EF%25BC%2588Python%252C%2520JavaScript%252C%2520Java%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZWQ1ZGYyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[JavaScript レキシカルスコープとは？]]></title><description><![CDATA[
 クロージャの一種
https://developer.mozilla.org/ja/docs/Web/JavaScript/Guide/Closures

 公式の解説によると
クロージャ
クロージャは、組み合わされた（囲まれた）関数と、その周囲の状態（レキシカル環境）への参照の組み合わせです。言い換えれば、クロージャは関数にその外側のスコープにアクセスする機能を提供します。JavaScript では、クロージャは関数が作成されるたびに、関数作成時点で作成されます。
レキシカルスコープ
次のような関数を考えてみてください。
function init() {
  var name =...]]></description><link>https://zenn.dev/forge422/articles/f0ff40c2de7660</link><guid isPermaLink="true">https://zenn.dev/forge422/articles/f0ff40c2de7660</guid><pubDate>Mon, 10 Mar 2025 02:28:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8462MJ6x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2583%25AC%25E3%2582%25AD%25E3%2582%25B7%25E3%2582%25AB%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Forge%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhZmFlYjIyYzEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Forge</dc:creator></item><item><title><![CDATA[なぜReactを使うかを理解してみる(#1 JavaScript編)]]></title><description><![CDATA[
 はじめに
はじめまして、私は今年の1月からReactを触り始めた初学者です。
日々キャッチアップに苦闘する中で、

Reactを習得する上で、学ぶべきことが多すぎる…
なんとなく便利なことはわかったが、それぞれの技術がなぜ使われているのか、全然わかっていない…

といった想いがふつふつと湧いてきてしまいました。
そんな私のような「悩めるReactぴよぴよエンジニア」に向け、一緒に頑張っていきましょうといった想いから、本記事を書きました。
本記事では、初学者を対象としているため、なるべく専門用語は使わず、認知負荷がかからないように心がけております。
!
この記事の対象者

React入...]]></description><link>https://zenn.dev/baleenstudio/articles/9c946a2116898a</link><guid isPermaLink="true">https://zenn.dev/baleenstudio/articles/9c946a2116898a</guid><pubDate>Sun, 09 Mar 2025 22:35:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p4CjjAPq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CReact%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%258B%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2528%25231%2520JavaScript%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%258F%25E3%2583%2588%25E3%2581%25AF%25E9%25A3%259B%25E3%2581%25B0%25E3%2581%25AA%25E3%2581%2584%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2OWZhMGRkNDAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEBALEEN%2520STUDIO%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiODkxOGZkYzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハトは飛ばない</dc:creator></item><item><title><![CDATA[GoでWebSocketを実装する[リアルタイム通信の実装方法について]]]></title><description><![CDATA[
 はじめに
WebSocketは、リアルタイム通信を実現するための技術です。
通常のHTTP通信では、クライアントがリクエストを送るたびにサーバーが応答する方式ですが、WebSocketはサーバーとクライアントの間で常に接続を維持し、双方向通信が可能です。
Goには、標準のnet/httpパッケージではWebSocketをサポートしていませんが、サードパーティのライブラリ「github.com/gorilla/websocket」を使うことで、簡単にWebSocketを実装できます。
今回は、GoでWebSocketサーバーを実装する方法を、基本から実践まで初心者向けにわかりやすく解説...]]></description><link>https://zenn.dev/urabexon/articles/c29e8caa73fe3d</link><guid isPermaLink="true">https://zenn.dev/urabexon/articles/c29e8caa73fe3d</guid><pubDate>Sun, 09 Mar 2025 09:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1LKe26-f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2581%25A7WebSocket%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%255B%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroki%2520Urabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4NmEwZTdkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroki Urabe</dc:creator></item><item><title><![CDATA[JavaScriptで学ぶ条件分岐と繰り返し処理：アコーディオンとタブパネルの実装を通じて]]></title><description><![CDATA[Webサイトを作っていると、「クリックしたら開閉する」「タブを切り替える」といった動きをつけたくなることがありますよね。このような動きを実現するためには、JavaScriptの条件分岐と繰り返し処理の理解が欠かせません。
この記事では、実際によく使われるUIコンポーネントの実装を通じて、JavaScriptの基本的な制御構文を学んでいきましょう。

 目次

条件分岐とは
繰り返し処理とは
実装例1：アコーディオン
実装例2：タブパネル
まとめ


 1. 条件分岐とは
条件分岐は、「もし〜なら、こうする」というプログラムの流れを作るための制御構文です。例えば、「もし年齢が20歳以上なら...]]></description><link>https://zenn.dev/ori1026/articles/2b8559dd00a3fd</link><guid isPermaLink="true">https://zenn.dev/ori1026/articles/2b8559dd00a3fd</guid><pubDate>Sun, 09 Mar 2025 04:55:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wkU2N9N6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maple%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNDM4OTljNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maple</dc:creator></item><item><title><![CDATA[anime.jsでシークバーに連動する数値アニメーションを実装した]]></title><description><![CDATA[
 前書き

 作りたいものの説明
私は今、生産シミュレーションアプリを作成している。生産設備を配置しそれぞれを線で結ぶことで、生産ラインを形成する。ラインの中を人が行き来して、製品をひとつずつ作り上げる様をシミュレーションする。

 解決したかったこと
シミュレーションの機能として再生や停止機能を設けた。シークバーを設けて任意の位置から再生できるようにした。このほかにも現在の生産数を表示させるようにしたい。シークバーに連動して、その値が動くようにする。
そのやり方がわかったので、ここで説明する。

 anime.jsとは何か
軽量なJSアニメーションライブラリ。CSSやDOM、JSオブ...]]></description><link>https://zenn.dev/kyokucho1989/articles/46b16dc1cf02c4</link><guid isPermaLink="true">https://zenn.dev/kyokucho1989/articles/46b16dc1cf02c4</guid><pubDate>Sat, 08 Mar 2025 22:59:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vCZLZq68--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:anime.js%25E3%2581%25A7%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E9%2580%25A3%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%25E6%2595%25B0%25E5%2580%25A4%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kyokucho1989%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lqbUw1MUdrQm9ESFJENkJvTE0zQm0zUGFQYThOb193ZmE1MnNqPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kyokucho1989</dc:creator></item></channel></rss>