<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 04 Oct 2025 02:38:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[学生×React/TS, デザインで最近ハマったことと軽い対処]]></title><description><![CDATA[

RSCまわりの境界、地味にしんどい
Next.js 15でRSC前提が当たり前になってきて、「ここはServer？ここはClient？」の判断が増えて手が止まる。速くはなるけど、試作のノリは落ちるやつ。


TypeScriptを上げるたびに小さな地雷
TS 5.6以降の更新は嬉しいけど、学プロみたいに依存がバラけてると設定差分でちょいちょい詰まる。アプリ本体は保守的、ユーティリティだけ先に上げる運用が安定。


CSSの選択肢が増えすぎ問題
:has と Container Queriesが使える今、「JSでやるかCSSでやるか」の線引きが再び迷子に。カードレイアウトはコンテナ基準...]]></description><link>https://zenn.dev/sakaikaz/articles/79caf305f6b670</link><guid isPermaLink="true">https://zenn.dev/sakaikaz/articles/79caf305f6b670</guid><pubDate>Fri, 03 Oct 2025 19:05:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3mpLmGKb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E7%2594%259F%25C3%2597React%252FTS%252C%2520%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25A7%25E6%259C%2580%25E8%25BF%2591%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2581%25A8%25E8%25BB%25BD%25E3%2581%2584%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25A0%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0NThjMTkxZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>堺</dc:creator></item><item><title><![CDATA[PHPは型がない？？？]]></title><description><![CDATA[
 プログラマーが発言すること
いきなりですが、プログラマーとかがよく言う発言といえば...
「TypeScriptは型があって...」
「TypeScriptはJavaScriptの上位互換であって...」
「PHPはゴミだし...」
「Vueは最高～！」
「Python読みにくい」
「Javaは冗長すぎる」
・・・ひどいですね←
https://zenn.dev/takoserver/articles/7a624e38285b16
ほら、この方なんか「PHPは論外」と言っちゃってます。。。
PHPプログラマーとしては許せない言い分ですね！！！！！

 PHPにも型があります
ほら、な...]]></description><link>https://zenn.dev/blitzlog/articles/5659c9cdef962d</link><guid isPermaLink="true">https://zenn.dev/blitzlog/articles/5659c9cdef962d</guid><pubDate>Fri, 03 Oct 2025 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DO5QLBjM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PHP%25E3%2581%25AF%25E5%259E%258B%25E3%2581%258C%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%25EF%25BC%259F%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:BlitZlog%2520%255B%25E3%2582%2586%25E3%2583%25BC%255D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVBNU5IZnVEbU5TREJsQ283UUlHejdzNzEyTGNMalJ1dm9kUU4xb2xOcTE5anBpMGM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>BlitZlog [ゆー]</dc:creator></item><item><title><![CDATA[エックスサーバーでNode.jsをインストールしてNestJSのREST APIをデプロイする方法]]></title><description><![CDATA[
 はじめに
Xserverは日本国内で人気の高いレンタルサーバーですが、標準ではNode.jsをサポートしていません。しかし、適切な設定を行えば、Xserver上でもNode.jsアプリケーションを動作させることが可能です。
本記事では、XserverにNode.jsをインストールし、NestJSで構築したREST API（データベースとやり取りするToDoリストのバックエンド）をデプロイする手順を解説します。
今回はSSR（サーバーサイドレンダリング）は使用せず、REST APIのみのシンプルなNestJSアプリケーションを対象とします。

 想定する環境

Xserverのスタンダ...]]></description><link>https://zenn.dev/hiro_ghap1/articles/1e0b67c6f44660</link><guid isPermaLink="true">https://zenn.dev/hiro_ghap1/articles/1e0b67c6f44660</guid><pubDate>Fri, 03 Oct 2025 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lp2GHmWB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7Node.js%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6NestJS%25E3%2581%25AEREST%2520API%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HASEGAWA%2520Yoshihiro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhYTliZjU3ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>HASEGAWA Yoshihiro</dc:creator></item><item><title><![CDATA[ApolloClientを捨ててVanillaTSで型安全にGraphQL通信する]]></title><description><![CDATA[株式会社MyVisionのフロントエンドエンジニアのsrkwです。
今回、弊社のHPのフォーム部分をAstro+Reactの高速SPAに置き換えるにあたり、GraphQL Codegenを使ったGraphQL通信の抽象化を行ったので、事例紹介をしたいと思います。
なお、Astro化の全貌については以下の記事に記載したので、ご興味があればぜひこちらもご覧ください。
https://zenn.dev/my_vision/articles/f3dcb3e5f04b21

 背景・概要
弊社のアプリケーションのFE・BE間の通信にはGraphQLを利用しています。
社内の他のFEリポジトリではA...]]></description><link>https://zenn.dev/my_vision/articles/f32bbad26125bc</link><guid isPermaLink="true">https://zenn.dev/my_vision/articles/f32bbad26125bc</guid><pubDate>Fri, 03 Oct 2025 09:27:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D3C-3cxu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ApolloClient%25E3%2582%2592%25E6%258D%25A8%25E3%2581%25A6%25E3%2581%25A6VanillaTS%25E3%2581%25A7%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25ABGraphQL%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:srkw%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwNWJhY2I0OTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:MyVision%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2ZjU3MTUxYzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>srkw</dc:creator></item><item><title><![CDATA[pdfmeをプロジェクトで使ってみた]]></title><description><![CDATA[PDF生成ライブラリである pdfme をプロジェクトで使ってみたので、使い方やハマったことなどをまとめました。

 pdfme とは
https://pdfme.com/ja/
pdfme は Kyohei さん（@labelmake）によって開発されており、作者自身による紹介記事も公開されています。
https://zenn.dev/hand_dot/articles/cf740012273ce8
PDF生成ライブラリとしては「テンプレート」と「入力データ」の2つを渡して、様々なPDFが生成可能になるという仕組みです。
テンプレートも入力データもともにJSONおよびプレーンなJava...]]></description><link>https://zenn.dev/cariot_dev/articles/f278c7d0cd5118</link><guid isPermaLink="true">https://zenn.dev/cariot_dev/articles/f278c7d0cd5118</guid><pubDate>Fri, 03 Oct 2025 09:11:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7vfFVfZ9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pdfme%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:t_endo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMjE5NTM5MjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25AA%25E3%2582%25AA%25E3%2583%2583%25E3%2583%2588%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRjMDRiZjE3ZDUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>t_endo</dc:creator></item><item><title><![CDATA[VSCode拡張機能「Unicode Hover Preview」を作ってみた]]></title><description><![CDATA[こんにちは、TRUSTART株式会社の片ノ坂です！今回、最新のLLM（大規模言語モデル）サービスであるClaude Codeを活用してVSCode拡張機能を開発した経験についてご紹介します！

 1. 「Unicode Hover Preview」拡張機能とは？
今回開発した「Unicode Hover Preview」は、VSCode上でUnicode文字（例：\u3042 など）にカーソルをホバーすると、指定したフォントで見たときの見た目など詳細情報をツールチップで表示する拡張機能です。



リポジトリ: https://github.com/trustart-co-jp/unic...]]></description><link>https://zenn.dev/trustart_dev/articles/0eeee8b47c0f60</link><guid isPermaLink="true">https://zenn.dev/trustart_dev/articles/0eeee8b47c0f60</guid><pubDate>Fri, 03 Oct 2025 09:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m4U2aWI5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%258CUnicode%2520Hover%2520Preview%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%2589%2587%25E3%2583%258E%25E5%259D%2582%2520%25E5%258D%2593%25E7%25A3%25A8%25EF%25BC%2588TRUSTART%25EF%25BC%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4Y2I1MTc4ODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TRUSTART%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmMxZmQ2YzAuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>片ノ坂 卓磨（TRUSTART）</dc:creator></item><item><title><![CDATA[TypeScriptの部分型をわかりやすく解説してみた]]></title><description><![CDATA[
 はじめに
TypeScriptを学んでいて、部分型という概念について学んだのですが、すっきり整理したいので、本記事を書きます。

 この記事の対象者
・TypeScriptを学び始めた人
・部分型の理解が浅い人
・部分型がなぜ重要なのかわからない人

 部分型とは
部分型には大きく分けて名前的部分型と構造的部分型の2種類があります。
名前的部分型
名前的部分型は「型どうしの関係を明示的に宣言する」必要があります。
例えばJavaが採用しており、CircleがShapeの部分型であることをextendsによって表現します。
class Shape {}

class Circle ex...]]></description><link>https://zenn.dev/begineer/articles/7a1a2e1d86a539</link><guid isPermaLink="true">https://zenn.dev/begineer/articles/7a1a2e1d86a539</guid><pubDate>Fri, 03 Oct 2025 07:15:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AEKCGLuW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E9%2583%25A8%25E5%2588%2586%25E5%259E%258B%25E3%2582%2592%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVlYWQ2YTAyYzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>しま</dc:creator></item><item><title><![CDATA[2日目:type-challenges ~Readonly~]]></title><description><![CDATA[Type Challenges で型を勉強していきます。2 日目。
Readonly の問題に挑戦。

 解答
type MyReadonly&lt;T&gt; = {
  readonly [K in keyof T]: T[K];
};


keyof T: オブジェクト型 T のすべてのキーを union 型にする（例: "title" | "description" | "completed"）

[K in keyof T]: そのキーをループして新しいオブジェクト型を作る（Mapped Types）

readonly: プロパティを読み取り専用にする

T[K]: 元の T...]]></description><link>https://zenn.dev/aki05162525/articles/a22213845fdb41</link><guid isPermaLink="true">https://zenn.dev/aki05162525/articles/a22213845fdb41</guid><pubDate>Fri, 03 Oct 2025 06:24:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F--0hFbG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:2%25E6%2597%25A5%25E7%259B%25AE%253Atype-challenges%2520%7EReadonly%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBaM1pHbFo2RUJSc0NDTnVqeUpRV0U0eXEzczZJeTNYR1NPdHE2a21ZR3dNSWpqTXA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>いるか</dc:creator></item><item><title><![CDATA[Nuxt4 NuxtUI Buttonデフォルト色変更]]></title><description><![CDATA[
 はじめに
Nuxt4がでてNuxtUIを久しぶりに触りました。
ボタンのデフォルトをprimaryから他のに変更したいなーと思いその方法をメモします。

 手順
まずは、Nuxtをinstallします。
Node.jsが入ってない方はこちら から！
Nuxt公式
https://nuxt.com/
Nuxt Project作成
npm create nuxt@latest
コマンドを実行すると、プロジェクト名等きかれると思いますので
任意で作成してください。
その質問の中にモジュールを導入するか？ときかれる質問がありますのでYesにし、
NuxtUIのモジュールを選択してください！
...]]></description><link>https://zenn.dev/tspk/articles/5bd07b4989fa52</link><guid isPermaLink="true">https://zenn.dev/tspk/articles/5bd07b4989fa52</guid><pubDate>Fri, 03 Oct 2025 06:15:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YQ9vWXxV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt4%2520NuxtUI%2520Button%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E8%2589%25B2%25E5%25A4%2589%25E6%259B%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B7%25E3%2581%25A3%25E3%2581%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRaUk5ISjNvUTRveHRBeGZBcVh5Y2RlVV9HbUxldnlQVUFiNUhMcU4ybUVZVVpsM2E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぷっけ</dc:creator></item><item><title><![CDATA[[個人開発] 続編-YouTubeで集中した時間を振り返るWebアプリ]]></title><description><![CDATA[
 🌱 はじめに

こちらのアプリの姉妹アプリのお話になります。
今回も個人開発で アナリティクスWeb アプリを開発しました。
その内容についてご紹介します。

実際の私のアナリティクスの内容になります
下記リンクから アナリティクスの内容を確認できます。


 🌱 サービス説明
!
アナリティクスとして確認できる内容は下記の通りです。

全期間
過去 7 日間
過去 30 日間



 1. 全期間

シンプルに何のデータがわかるように直観的なアイコンや色,テキストを選定しました。
「データ更新日」も記載しいつ更新された情報なのか を明示するようにしました。

 2. 過去 7 日間...]]></description><link>https://zenn.dev/aew2sbee/articles/personal-development-youtube-nextjs-2</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/personal-development-youtube-nextjs-2</guid><pubDate>Fri, 03 Oct 2025 05:24:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ocQTBEIP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%255D%2520%25E7%25B6%259A%25E7%25B7%25A8-YouTube%25E3%2581%25A7%25E9%259B%2586%25E4%25B8%25AD%25E3%2581%2597%25E3%2581%259F%25E6%2599%2582%25E9%2596%2593%25E3%2582%2592%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%2580%2589%25E3%2581%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhN2I0MzQ2ZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>小倉あん</dc:creator></item><item><title><![CDATA[GCS統合とテキスト抽出機能の実装と撤回から学んだこと]]></title><description><![CDATA[!
この記事は、生成AIを使用して記載しています。
誤字脱字、誤情報などありましたら連絡頂けると助かります🙇


 概要
メール管理システムにGoogle Cloud Storage（GCS）を統合し、添付ファイルからテキストを自動抽出する機能を実装しました。PDF、Word、Excelなど様々な形式に対応し、添付ファイルの内容まで検索可能にすることが目的でした。しかし、本番環境での運用開始後に想定外の問題が発生し、最終的にrevertすることになりました。この記事では、実装の技術的詳細と、なぜ撤回に至ったのかの教訓を共有します。

 技術スタック


Google Cloud Stor...]]></description><link>https://zenn.dev/91works/articles/10a11a4e3eaef4</link><guid isPermaLink="true">https://zenn.dev/91works/articles/10a11a4e3eaef4</guid><pubDate>Fri, 03 Oct 2025 05:05:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5ZnMb96m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GCS%25E7%25B5%25B1%25E5%2590%2588%25E3%2581%25A8%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E6%258A%25BD%25E5%2587%25BA%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A8%25E6%2592%25A4%25E5%259B%259E%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:YoshikiAgatsuma%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE5ZDA5N2JmNjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:91works%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiMzIwNDk2ZTUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>YoshikiAgatsuma</dc:creator></item><item><title><![CDATA[OpenCode ─ ベンチマークでトップを獲得した理由と魅力を徹底解説]]></title><description><![CDATA[
 はじめに
AIコーディングエージェントは、開発現場においてますます欠かせない存在になりつつあります。そんな中、最近公開されたTypeScriptエージェントのベンチマークテストで、OpenCodeが1位・3位・7位という圧倒的な成績を収めました。:muscle:
競合にはClaude、Gemini、Codexといった大手勢が並ぶ中、この結果は特筆すべきものです。
ベンチマークの結果をまずは見てください：

ご覧のとおり、OpenCodeは成功率・解決数・平均時間のバランスで突出したパフォーマンスを発揮しています。本記事では「なぜOpenCodeがここまで高精度なのか」「実際にどのよう...]]></description><link>https://zenn.dev/taka000/articles/a0072b7e734c8d</link><guid isPermaLink="true">https://zenn.dev/taka000/articles/a0072b7e734c8d</guid><pubDate>Fri, 03 Oct 2025 04:56:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Usr8A1uL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenCode%2520%25E2%2594%2580%2520%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2581%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A7%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E7%258D%25B2%25E5%25BE%2597%25E3%2581%2597%25E3%2581%259F%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A8%25E9%25AD%2585%25E5%258A%259B%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXpCR01mazY0b29ScWlKUC12VnpBaERrLVJ4ZjNONGJ5QkhyaEM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Taka</dc:creator></item><item><title><![CDATA[なぜ、JavaScriptこそが現在最強のWORA言語なのか？]]></title><description><![CDATA[
 はじめに
「Write Once, Run Anywhere（WORA）」という言葉は1990年代にJavaが掲げた理念でした。一度書いたコードが、どんな環境でもそのまま動くという理想は、当時の開発者にとって大きな夢でした。ところが2020年代を迎えた現在、その理念を最も現実的に体現しているのはJavaではなくJavaScriptです。
JavaScriptは1995年に誕生したときには「ブラウザ上の簡易スクリプト」に過ぎませんでした。しかし時代を経るごとに進化し、Webを超えてサーバー、デスクトップ、モバイルへと拡大し、いまや社会全体を支えるプラットフォーム言語となりました。加えて...]]></description><link>https://zenn.dev/pdfractal/articles/464a0742526587</link><guid isPermaLink="true">https://zenn.dev/pdfractal/articles/464a0742526587</guid><pubDate>Fri, 03 Oct 2025 03:33:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O-kO6kRL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259C%25E3%2580%2581JavaScript%25E3%2581%2593%25E3%2581%259D%25E3%2581%258C%25E7%258F%25BE%25E5%259C%25A8%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AEWORA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pdfractal%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M4ZmJkZmFkY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>pdfractal</dc:creator></item><item><title><![CDATA[子ども向け学習アプリ開発ログ：単語カードをAPI経由で取得して一覧表示まで実装]]></title><description><![CDATA[単語カード一覧の取得まで進みました。まだ自分が思い描いている完成形には遠いですが、
大きな流れはできてきたので、これからは細かい UI/UX の改善やデータ加工、エラー処理に注力していきます。

 前回

タグ機能（検索・フィルタリング対応も検討）
Word 登録時に既存タグを選択 or 新規タグを作成できるよう修正
タグ一覧をフロントから取得して UI で選択可能に



 今回

単語カードを API から取得



 ① 単語カードを API から取得
まずはログインユーザが登録した単語カードを API 経由で取得できるようにしました。
Prisma で Word を検索し、必要な...]]></description><link>https://zenn.dev/hyoni/articles/509e1bbaac03d4</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/509e1bbaac03d4</guid><pubDate>Fri, 03 Oct 2025 02:22:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--setzLn18--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%2590%25E3%2581%25A9%25E3%2582%2582%25E5%2590%2591%25E3%2581%2591%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2583%25AD%25E3%2582%25B0%25EF%25BC%259A%25E5%258D%2598%25E8%25AA%259E%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592API%25E7%25B5%258C%25E7%2594%25B1%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%2580%25E8%25A6%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25BE%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[React 19.2 が出たので内容抑えておく]]></title><description><![CDATA[React19がリリースされたのが去年の12月。。その半年後に19.1がリリース。。そして10月1日に早くも19.2が登場です。
本当にフロントエンド界隈の進化は早いですね！AIの動向も追いながら技術のキャッチアップを行うのは本当に大変です。
なんとなくこの記事が目についた方が簡単に変更内容をキャッチアップできるように押さえておくと良さそうなものをまとめておきます。

 TL;DR
Reactの新機能である&lt;Activity /&gt;とuseEffectEventなどの紹介
新しいReact DOM機能のPartial Pre-renderingの紹介
その他の変更点の紹介

 ...]]></description><link>https://zenn.dev/noda_k/articles/d9d63a18cdbe84</link><guid isPermaLink="true">https://zenn.dev/noda_k/articles/d9d63a18cdbe84</guid><pubDate>Thu, 02 Oct 2025 15:17:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mCT6Z_QI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252019.2%2520%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2586%2585%25E5%25AE%25B9%25E6%258A%2591%25E3%2581%2588%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0MTYyOTRjNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>noda</dc:creator></item><item><title><![CDATA[1日目:type-challenges]]></title><description><![CDATA[Type Challenges で型を勉強していきます。1 日目。
Pickの問題に挑戦。

 解答
type MyPick&lt;T, K extends keyof T&gt; = {
  [P in K]: T[P];
};


K extends typeof T:K は T のキーに限定される（制約）

[P in K]:K のそれぞれのキーをループする（Mapped Types）
T[P]:元の型 T からプロパティ P の型を取り出す（インデックス型アクセス）

]]></description><link>https://zenn.dev/aki05162525/articles/e4bd62bcd410e8</link><guid isPermaLink="true">https://zenn.dev/aki05162525/articles/e4bd62bcd410e8</guid><pubDate>Thu, 02 Oct 2025 14:44:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BGkVIGZc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:1%25E6%2597%25A5%25E7%259B%25AE%253Atype-challenges%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBaM1pHbFo2RUJSc0NDTnVqeUpRV0U0eXEzczZJeTNYR1NPdHE2a21ZR3dNSWpqTXA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>いるか</dc:creator></item><item><title><![CDATA[TypeScriptのジェネリクスについて]]></title><description><![CDATA[
 ジェネリクスとは
ジェネリクスは型を安全に使いつつ使いまわせるようにする便利機能です。
型の安全性と汎用性のあるコードはトレードオフでしたがこれを解決するような概念になります。

 どのような恩恵がある？
ジェネリクスの恩恵は先ほど述べたように型の安全性を担保したまま汎用的に使い回すことができるところです。
まずはよろしくない書き方から。
汎用的に使いたいので引数の型にany[]を使って全ての型の引数を許容するように書いてみます。
function getFirstItemBad(items: any[]): any {
  return items[0];
}

const num...]]></description><link>https://zenn.dev/rihitonnnu/articles/073eedc9a54825</link><guid isPermaLink="true">https://zenn.dev/rihitonnnu/articles/073eedc9a54825</guid><pubDate>Thu, 02 Oct 2025 13:09:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CIj3wlZH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rihitonnnu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekV3Y0FzbVR0eW1oMzdwbEZqVm5HbV91aGRPbmxzRDRqM2UyN2o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>rihitonnnu</dc:creator></item><item><title><![CDATA[Vue3 + TypeScript で「一度閉じたら二度と出ない」お知らせモーダルを実装する]]></title><description><![CDATA[
対象読者

Vue 3（Composition API）と TypeScript でモーダルを実装したい人
「一度閉じたら同端末では再表示しない」を安定して実現したい人
Blade 等のサーバテンプレートからユーザーIDをフロントに渡したい人
Safari のプライベートブラウズなどで localStorage が使えない場合にも“既読管理”を効かせたい人


この記事では、「初回だけ出す → 閉じたら次回以降は出さない」 告知モーダルを、最小の責務分割で実装します。
localStorage が使えない環境でも Cookie にフォールバックして安定動作させるのがポイントです。
※ ...]]></description><link>https://zenn.dev/hi_kun0912/articles/046fde28d0133e</link><guid isPermaLink="true">https://zenn.dev/hi_kun0912/articles/046fde28d0133e</guid><pubDate>Thu, 02 Oct 2025 09:56:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Kn6IeSyV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E3%2580%258C%25E4%25B8%2580%25E5%25BA%25A6%25E9%2596%2589%25E3%2581%2598%25E3%2581%259F%25E3%2582%2589%25E4%25BA%258C%25E5%25BA%25A6%25E3%2581%25A8%25E5%2587%25BA%25E3%2581%25AA%25E3%2581%2584%25E3%2580%258D%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2581%25AF%25E5%25AD%2590%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%2591%25E3%2583%2591%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhYjMzZWZkYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>息子溺愛パパ@エンジニア</dc:creator></item><item><title><![CDATA[【React修行日記】useReducerと型定義]]></title><description><![CDATA[
 学習の目的

useReducerの基本について理解する
useState と useReducer の違いを把握する
型定義を使った状態管理のメリットを学ぶ
複雑な状態更新を整理してTodoリストを実装できるようになる


 useReducerとは
useReducerは、Reactで状態管理を行うためのフックのひとつ。useStateと同じく、コンポーネントの状態を保持し、更新するために使う。
useStateは状態だけを管理するのに対して、useReducerは状態と状態を操作するための手段（関数）の両方を管理する。
シンプルな状態管理であればuseStateが直感的で扱いや...]]></description><link>https://zenn.dev/tsunadog/articles/d50e53f64d6dfb</link><guid isPermaLink="true">https://zenn.dev/tsunadog/articles/d50e53f64d6dfb</guid><pubDate>Thu, 02 Oct 2025 09:18:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YkN2cqKM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E4%25BF%25AE%25E8%25A1%258C%25E6%2597%25A5%25E8%25A8%2598%25E3%2580%2591useReducer%25E3%2581%25A8%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsunadog%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZDZiMjViNzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>tsunadog</dc:creator></item><item><title><![CDATA[Codex CLI 完全ガイド: Codex TypeScript SDK 活用]]></title><description><![CDATA[
シリーズ記事

Codex CLI 完全ガイド：全体像 (Qiita)
Codex CLI 完全ガイド：全体像 (Zenn)



 はじめに
「CLI ツールをプログラムから呼び出したい」これは開発者なら誰もが一度は思うことがあるはずです。
Codex CLI は強力ですが、シェルスクリプトから呼び出すだけでは限界があります。CI/CD パイプラインに統合したり、複雑な条件分岐を実装したり、結果を構造化データとして扱いたい場合、プログラマティックな API が必要になります。
Codex TypeScript SDK は、まさにこのニーズに応えます。
本記事では、型安全で柔軟な SD...]]></description><link>https://zenn.dev/taka000/articles/d164d55f6828a2</link><guid isPermaLink="true">https://zenn.dev/taka000/articles/d164d55f6828a2</guid><pubDate>Thu, 02 Oct 2025 04:34:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zj8cyLf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Codex%2520CLI%2520%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%253A%2520Codex%2520TypeScript%2520SDK%2520%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeXpCR01mazY0b29ScWlKUC12VnpBaERrLVJ4ZjNONGJ5QkhyaEM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Taka</dc:creator></item></channel></rss>