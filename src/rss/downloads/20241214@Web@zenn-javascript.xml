<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 14 Dec 2024 05:40:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[React Tokyoというコミュニティを作ろうと思ったワケ]]></title><description><![CDATA[https://x.com/ReactTokyo/status/1864325542746706283
この度、新たにReact Tokyoというコミュニティを立ち上げました。
少し過去を振り返ると、以前からコミュニティ活動に似た取り組みは続けてきました。当初は、2015年あたりからMeteorというフレームワークを使ったアプリ開発を推進してました。MeteorがReactを採用し始めたこともあり、徐々にUI部分はReact中心にシフトしていきました。2017年からは、Meteorに限らずJSフレームワーク全般を扱うようになり、特に後半はReactやTypeScriptを中心にしていきま...]]></description><link>https://zenn.dev/dai_shi/articles/9f2760086fb31a</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/9f2760086fb31a</guid><pubDate>Sat, 14 Dec 2024 05:30:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m1e0HcVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Tokyo%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%258B%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E6%2580%259D%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AF%25E3%2582%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[ReactHooks入門！-useStateとuseEffect-]]></title><description><![CDATA[こんにちは！今回は、React人気の影の立役者ともいえるHooksについて解説します。シンプルで直感的な使い方が、React開発者の生産性を大きく向上させた理由を一緒に見ていきましょう！

 Hooksって何？
Hooksは、React 16.8で導入された機能で、関数コンポーネントで状態管理やライフサイクルの制御などができるようになる便利な機能です。
簡単に言うと

「値を保存して、変更できるようにしたい」→useState
「コンポーンネントの表示後に何かしたい」→useEffect

という感じの使い方ができます。

 1.useStateで値を管理する
まずは一番基本的なuseS...]]></description><link>https://zenn.dev/ukir/articles/02fd050c538864</link><guid isPermaLink="true">https://zenn.dev/ukir/articles/02fd050c538864</guid><pubDate>Sat, 14 Dec 2024 05:26:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w_6ijdaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ReactHooks%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%2581-useState%25E3%2581%25A8useEffect-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ukir%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmODBhZWE1MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ukir</dc:creator></item><item><title><![CDATA[BootstrapのCollapseが効かないとき]]></title><description><![CDATA[bootstrap.min.jsが2回 include されていないか確認する。大体、２回インクルードされて２回イベントが処理されてずっと同じ状態になってしまう。
]]></description><link>https://zenn.dev/touhoku_japan/articles/d9cd7aee354657</link><guid isPermaLink="true">https://zenn.dev/touhoku_japan/articles/d9cd7aee354657</guid><pubDate>Sat, 14 Dec 2024 04:56:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Gy0t_xyM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Bootstrap%25E3%2581%25AECollapse%25E3%2581%258C%25E5%258A%25B9%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%25B1%25E5%258C%2597%2520%25E6%2597%25A5%25E5%25A4%25AB%2520%252F%2520touhoku_japan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5SExZbmEwWER2cE9sR2tCcUw1TjZHRUZfSDBlMmltaXVSZ3VoPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>東北 日夫 / touhoku_japan</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#８ GSAP Sample1 Loading】]]></title><description><![CDATA[
 【#８ GSAP Sample1 Loading】
YouTube: https://youtu.be/aVEhwoJu-CM
https://youtu.be/aVEhwoJu-CM
今回からScrollTriggerの解説に入る前に
ここまでの応用でいくつかサンプルを作成していこうと思います。

index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8" /&gt;
    &lt;meta name="viewport" content="...]]></description><link>https://zenn.dev/web_life_ch/articles/a263526657b641</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/a263526657b641</guid><pubDate>Sat, 14 Dec 2024 04:24:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AIMTpc9Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2598%2520GSAP%2520Sample1%2520Loading%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[Jestでデバッグ実行時に特定のテストケースの時だけ実行を止める方法]]></title><description><![CDATA[この記事はCommune Advent Calendar 2024シリーズ1の14日目の記事です。

 背景
Jestで特定のテストケースだけデバッグ実行したい場合、VS CodeやJetBrainsのIDE（WebStormなど）では簡単に特定のテストケースだけデバッグ実行することができます。しかし、describe.eachやtest.eachを使ってテストを実行する場合JetBrainsのIDEではそれらの中の個別のケースだけを実行することはできませんこのためtest.eachの中の特定のテストケースの時だけデバッグ実行したい場合に他のケースをコメントアウトするか、ブレークポイント...]]></description><link>https://zenn.dev/dev_commune/articles/a7caa932745a11</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/a7caa932745a11</guid><pubDate>Sat, 14 Dec 2024 00:52:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gDZ4oYHR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%25E3%2581%25A7%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AB%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AE%25E6%2599%2582%25E3%2581%25A0%25E3%2581%2591%25E5%25AE%259F%25E8%25A1%258C%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:isomura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlNmQwZWQ5NGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>isomura</dc:creator></item><item><title><![CDATA[ENCA 13日目: モジュールの識別子名で Unicode が扱えるように]]></title><description><![CDATA[!
この記事は 1人 ECMAScript Normative Changes Advent Calendar 2024 の 13 日目です。


 モジュールの識別子名で Unicode が扱えるように
WebAssembly が Names として UTF-8 を使うことを採用しました。これによりモジュールの識別子名で valid な UTF-8 であることが要請されています。
https://webassembly.github.io/spec/core/syntax/values.html#syntax-name
一方で ECMAScript では今までモジュールの識別子名が変数...]]></description><link>https://zenn.dev/pixiv/articles/d9a350c3237931</link><guid isPermaLink="true">https://zenn.dev/pixiv/articles/d9a350c3237931</guid><pubDate>Fri, 13 Dec 2024 23:18:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JdpUpycC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ENCA%252013%25E6%2597%25A5%25E7%259B%25AE%253A%2520%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E8%25AD%2598%25E5%2588%25A5%25E5%25AD%2590%25E5%2590%258D%25E3%2581%25A7%2520Unicode%2520%25E3%2581%258C%25E6%2589%25B1%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:petamoriken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMDc3ZWRhZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:pixiv%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODlhMzQ2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>petamoriken</dc:creator></item><item><title><![CDATA[Vue の Composable、内部で何が起きてるのか追ってみた！]]></title><description><![CDATA[この記事は、📅 Vue Advent Calendar 2024 の 14 日目の記事です。

 1. はじめに

はじめまして、haba です。
Vue 3 から登場した「Composable」をご存知でしょうか？

Vue アプリケーションの文脈で「コンポーザブル（composable）」とは、Vue の Composition API を活用して状態を持つロジックをカプセル化して再利用するための関数です。
（公式ドキュメントより）

Composable は、状態やロジックを簡潔にまとめ、再利用可能な形で Vue コンポーネント間で共有できる便利な仕組みです。例えば、VueUse ...]]></description><link>https://zenn.dev/comm_vue_nuxt/articles/243d83c8ad5b72</link><guid isPermaLink="true">https://zenn.dev/comm_vue_nuxt/articles/243d83c8ad5b72</guid><pubDate>Fri, 13 Dec 2024 19:51:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1E73uCFP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%2520%25E3%2581%25AE%2520Composable%25E3%2580%2581%25E5%2586%2585%25E9%2583%25A8%25E3%2581%25A7%25E4%25BD%2595%25E3%2581%258C%25E8%25B5%25B7%25E3%2581%258D%25E3%2581%25A6%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25E8%25BF%25BD%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Naoki%2520Haba%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MTZlOWFlNjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Vue%25E3%2583%25BBNuxt%2520%25E6%2583%2585%25E5%25A0%25B1%25E3%2581%258C%25E9%259B%2586%25E3%2581%25BE%25E3%2582%258B%25E5%25BA%2583%25E5%25A0%25B4%2520%252F%2520P...%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3MTAwODg5NDkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoki Haba</dc:creator></item><item><title><![CDATA[fullPage.jsで縦のセクションを自動再生する方法]]></title><description><![CDATA[
 イントロダクション
fullPage.jsでは、セクションを自動的に再生することができます。これにより、カルーセルが自動的に再生され、X秒ごとに次のセクションに移動します。まるで自動スライダーやカルーセルのようです。
これはfullPage.jsに標準で備わっている機能ではありませんが、fullPage.jsのメソッドやコールバックを使用することで実現可能です。fullPage.jsはそれに対応しています！
もちろん、fullPage.jsで水平スライドを自動再生する方法もありますので、興味があればこちらもチェックしてください。

 例
説明を始める前に、こちらのコードペンが千の言葉...]]></description><link>https://zenn.dev/alvarotrigo/articles/65c51af8ce5dd4</link><guid isPermaLink="true">https://zenn.dev/alvarotrigo/articles/65c51af8ce5dd4</guid><pubDate>Fri, 13 Dec 2024 11:29:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cJFQak9A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:fullPage.js%25E3%2581%25A7%25E7%25B8%25A6%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%2586%258D%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Alvaro%2520Trigo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzZTc5MDBkNTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Alvaro Trigo</dc:creator></item><item><title><![CDATA[puppeteer フォームの自動入力と送信の基本]]></title><description><![CDATA[puppeteerを使って、自動でログインフォームの入力と送信を行ってみます。
今回はこちらの簡易的なログインフォームで試してみます。


 Puppeteerのセットアップ
まず、Puppeteerをプロジェクトにインストールします。
npm install puppeteer

 自動化スクリプトの作成
次に、自動化のためのスクリプトを作成します。
以下のコードは、特定のWebサイトにアクセスし、ユーザー名とパスワードを入力してログインボタンをクリックする簡単な例です。
import puppeteer from 'puppeteer';

async function formSu...]]></description><link>https://zenn.dev/tatsuki_dev06/articles/7c574e82a13cb1</link><guid isPermaLink="true">https://zenn.dev/tatsuki_dev06/articles/7c574e82a13cb1</guid><pubDate>Fri, 13 Dec 2024 11:12:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vtYSIGcm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:puppeteer%2520%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%2585%25A5%25E5%258A%259B%25E3%2581%25A8%25E9%2580%2581%25E4%25BF%25A1%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tatsuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyMDMyNTZiNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tatsuki</dc:creator></item><item><title><![CDATA[for 文の let 宣言のスコープの謎 ～どうもシンプルに while に直すことができないらしい～]]></title><description><![CDATA[
 はじめに
for 文は while に直すことができると聞きますが 例えば次の様な コードがあったとします。
for (let i = 0, imax = 5; i &lt; imax; i++) {
  console.log('c', i);
  setTimeout(() =&gt; console.log('t', i));
}
https://www.typescriptlang.org/play/?ssl=4&amp;ssc=2&amp;pln=1&amp;pc=1#code/GYewTgBAFANgpgFwgSwgXggBgDQoLYCGAHuhAKwDcKEAPPsV...]]></description><link>https://zenn.dev/juners/articles/4a7de160710902</link><guid isPermaLink="true">https://zenn.dev/juners/articles/4a7de160710902</guid><pubDate>Fri, 13 Dec 2024 09:32:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IXTDHupJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:for%2520%25E6%2596%2587%25E3%2581%25AE%2520let%2520%25E5%25AE%25A3%25E8%25A8%2580%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E8%25AC%258E%2520%25EF%25BD%259E%25E3%2581%25A9%25E3%2581%2586%25E3%2582%2582%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25AB%2520while%2520%25E3%2581%25AB%25E7%259B%25B4%25E3%2581%2599%25E3%2581%2593%25E3%2581%25A8%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2589%25E3%2581%2597%25E3%2581%2584%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[RubyistがJavascriptの基礎学習をしてみる]]></title><description><![CDATA[Rubyしか書けないし、Rubyしか書いてこなかったので、
それ以外の言語も触れるようになりたいなと思って、
リファレンス等を見ながら何となくでやってたところをしっかり理解しようという意図。
学習しながら書き足しているのでメモみたいなもの。
あまり参考にしないほうがいいかもしれない。
というか今までJavascriptよくわかってないのによく業務こなせてたな...。
雰囲気でコード書いてたのでウンコード量産してそう、すまん。

 クラス
そもそもJavascriptのRubyでいうクラスメソッドみたいなのがよくわかっていなかった。
Example.foo();
みたいなやつ。
Javas...]]></description><link>https://zenn.dev/rhiroe/articles/learn_js_by_rubyiest</link><guid isPermaLink="true">https://zenn.dev/rhiroe/articles/learn_js_by_rubyiest</guid><pubDate>Fri, 13 Dec 2024 08:29:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--clBRboBI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rubyist%25E3%2581%258CJavascript%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rhiroe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNGQ3MDIzYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rhiroe</dc:creator></item><item><title><![CDATA[エディタからJestのテストを実行する際に複数の設定を自動で切り替える方法（VS CodeとJetBrains IDE）]]></title><description><![CDATA[この記事はCommune Advent Calendar 2024シリーズ1の13日目の記事です。

 やりたいこと
サーバーサイドの開発をしている現場ではユニットテストとは別にDBのセットアップ処理を伴う統合テストを実行できるようにしている場合があります。DBのセットアップ処理やリセット処理などは時間がかるため、ユニットテストには含めないようにして別の設定ファイルに含める方法を採る場合が多いと思います。
コマンドラインから実行する場合にはテストフレームワークの実行用設定ファイルを引数に渡すことで変更できます。
# ユニットテスト（デフォルトの設定ファイルが利用される）
npm exec...]]></description><link>https://zenn.dev/dev_commune/articles/70f70336e73a2b</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/70f70336e73a2b</guid><pubDate>Fri, 13 Dec 2024 01:01:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Kq0U1XyZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589Jest%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588VS%2520Code%25E3%2581%25A8JetBrains%2520IDE%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:isomura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlNmQwZWQ5NGQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>isomura</dc:creator></item><item><title><![CDATA[Gemini 1.5 Pro で音声ファイルの文字起こしをしてみた]]></title><description><![CDATA[
 はじめに
弊社ではフリーランスエンジニアと企業のマッチングサービスを運営しています。
生成AIを活用し、営業担当とエンジニアのカウンセリングを文字起こし・要約し、カウンセリングの効率化を図りたいというニーズが社内から出てきました。
その検証の第一段階として、Gemini 1.5 Proを活用し音声ファイルを文字起こししてみることにしました。

 技術スタック

フレームワーク: Express
言語: JavaScript
音声ファイルの文字起こし: Google Gemini 1.5 Pro


 ソースコード

const fs = require('fs');
const pa...]]></description><link>https://zenn.dev/bizlink/articles/7aabda4f4e1bdd</link><guid isPermaLink="true">https://zenn.dev/bizlink/articles/7aabda4f4e1bdd</guid><pubDate>Fri, 13 Dec 2024 00:08:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PHKmMsdQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemini%25201.5%2520Pro%2520%25E3%2581%25A7%25E9%259F%25B3%25E5%25A3%25B0%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shun%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllMzFlOGFkZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Bizlink%2520Developers%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Zi1FQzFSY0JkbHk4Wm8xZ2Q0UWkzQ0ctRlRnZWc0UnpEc3VfUU1qUG9JPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shun</dc:creator></item><item><title><![CDATA[ENCA 12日目: Cyclic Module Records の策定]]></title><description><![CDATA[!
この記事は 1人 ECMAScript Normative Changes Advent Calendar 2024 の 12 日目です。


 ECMAScript のモジュール
ECMAScript にはもともとモジュール1つをカプセル化して表現した Abstract Module Records という抽象クラスと、それを継承した Source Text Module Records 具象クラスのみが定義されていました。
Source Text Module Records がいわゆる JavaScript モジュールを表しており、ざっくり以下のような特徴を持ちます。

Jav...]]></description><link>https://zenn.dev/pixiv/articles/02b6e0c46f4edd</link><guid isPermaLink="true">https://zenn.dev/pixiv/articles/02b6e0c46f4edd</guid><pubDate>Thu, 12 Dec 2024 18:01:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--laEsBkLe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ENCA%252012%25E6%2597%25A5%25E7%259B%25AE%253A%2520Cyclic%2520Module%2520Records%2520%25E3%2581%25AE%25E7%25AD%2596%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:petamoriken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMDc3ZWRhZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:pixiv%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODlhMzQ2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>petamoriken</dc:creator></item><item><title><![CDATA[ClusterScriptでも高階関数を使うのです]]></title><description><![CDATA[この記事は「Cluster Script Advent Calendar 2024」の10日目です
昨日はa.satoさんの「第二回ゆるゲームジャムトライ」でした！
send/receiveは本当こんがらがって大変ですよね…。

こんばんは！かおもです！！！！！！
まずはこちらのコードをご覧ください。
インタラクトされたら実行する(
    Playerのジャンプ力を指定倍にする(2)
);

毎Frame実行する(
    Playerのジャンプ力を指定秒後に元に戻す(10)
);
そうです、これはClusterScriptのコードです。
これ、なんと動きます！！！
これを動くものにで...]]></description><link>https://zenn.dev/vkao/articles/5bbb858d99f2ff</link><guid isPermaLink="true">https://zenn.dev/vkao/articles/5bbb858d99f2ff</guid><pubDate>Thu, 12 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eyQQ32TU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ClusterScript%25E3%2581%25A7%25E3%2582%2582%25E9%25AB%2598%25E9%259A%258E%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AE%25E3%2581%25A7%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%258A%25E3%2582%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y290c3hmV19RVmFPemc4a0ZoeUNZQ0YtMGFiZlBldEpJLUdpdFM5OFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かおも</dc:creator></item><item><title><![CDATA[【css】ふわっと！ページトップへ戻るボタン【javascript】]]></title><description><![CDATA[スクロールした時にふわっと表示され、トップに移動するときはスムーススクロールします。

 1.htmlを記述する
&lt;a id="pagetop" aria-label="ページのトップへ"&gt;&lt;span&gt;&lt;/span&gt;&lt;/a&gt;
aria-labelはwebアクセシビリティ対応を考慮

 2.cssを記述する
html{
  scroll-behavior: smooth;
}
#pagetop {
  position: fixed;
  right: 40px;
  bottom: 20px;
  z-index: 5500;
  disp...]]></description><link>https://zenn.dev/saru_no_note/articles/10f24360b0c548</link><guid isPermaLink="true">https://zenn.dev/saru_no_note/articles/10f24360b0c548</guid><pubDate>Thu, 12 Dec 2024 12:58:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6ubqcfmb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590css%25E3%2580%2591%25E3%2581%25B5%25E3%2582%258F%25E3%2581%25A3%25E3%2581%25A8%25EF%25BC%2581%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2581%25B8%25E6%2588%25BB%25E3%2582%258B%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2580%2590javascript%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saru%2540%25E6%2596%2587%25E7%25B3%25BB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4MWU3ZDhiYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saru@文系コーダー</dc:creator></item><item><title><![CDATA[[Javascript]0/ null / undefined / NaNの区別]]></title><description><![CDATA[
 JavaScriptのFalsy値：0、null、undefined、NaNの区別
JavaScriptには0、null、undefined、NaNといったFalsy値があります。これらは条件文でFalsyとして評価されるという共通点がありますが、具体的な違いを知らない方も多いかもしれません。この機会にこれらの値を区別する方法を学んでみましょう。



値
Booleanコンテクスト
Numberコンテクスト
Stringコンテクスト




null
false
0
"null"


undefined
false
NaN
"undefined"


NaN
false
NaN
"...]]></description><link>https://zenn.dev/heatherjin/articles/6b3be184a5c7f4</link><guid isPermaLink="true">https://zenn.dev/heatherjin/articles/6b3be184a5c7f4</guid><pubDate>Thu, 12 Dec 2024 08:44:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--odi4OAZ4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavascript%255D0%252F%2520null%2520%252F%2520undefined%2520%252F%2520NaN%25E3%2581%25AE%25E5%258C%25BA%25E5%2588%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AA%25E3%2583%259C%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUQ0NnhSVTRQalhfb1c3RVMyRzQ5eS1kbXFibHp4azBWTDRGQjlCOHFuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハリボー</dc:creator></item><item><title><![CDATA[collaboflow.proxyではじめる外部API連携]]></title><description><![CDATA[
 コラボフロー JavaScript API
コラボフローには、申請書をJavaScriptによってカスタマイズするためのコラボフロー JavaScript APIが用意されています。
本APIを利用することで、下記の例のようなさまざまなアクションを申請書上に実装する事が可能となります。

通常のフォーム設計機能だけでは不可能な複雑な入力チェックを実現する
特定の条件に一致する場合、入力パーツを表示/非表示にする
特定の条件に一致する場合、必要な値を自動的にセットする


 collaboflow.proxyではじめる外部API連携
さらに、コラボフロー JavaScript APIに...]]></description><link>https://zenn.dev/uchimura/articles/2b7718be7f9df5</link><guid isPermaLink="true">https://zenn.dev/uchimura/articles/2b7718be7f9df5</guid><pubDate>Thu, 12 Dec 2024 07:37:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dlloW_r1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:collaboflow.proxy%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%258B%25E5%25A4%2596%25E9%2583%25A8API%25E9%2580%25A3%25E6%2590%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2586%2585%25E6%259D%2591%2520%25E5%259C%25AD%25E5%25AE%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhNzY4MTQ3ZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>内村 圭宏</dc:creator></item><item><title><![CDATA[StripeのAPIキーからStripeアカウントを特定する方法]]></title><description><![CDATA[複数のStripeアカウントで開発や運用を行っていると、プロジェクトで利用しているAPIキーがどのStripeアカウントで利用しているものかがわからなくなることがあります。
この記事では、APIキーから対象のStripeアカウントを特定する方法を紹介します。

 Checkout Sessionを利用して確認する
もっとも簡単な方法は、Checkout Sessionを利用することです。Checkout Sessionには、カード情報を保存するためのsetupモードが用意されています。setupモードでセッションを作成し、リダイレクトを行うAPIを実装しましょう。
app.get('/c...]]></description><link>https://zenn.dev/stripe/articles/confirm-stripe-account-by-api-key</link><guid isPermaLink="true">https://zenn.dev/stripe/articles/confirm-stripe-account-by-api-key</guid><pubDate>Thu, 12 Dec 2024 06:10:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7KVDSdz4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Stripe%25E3%2581%25AEAPI%25E3%2582%25AD%25E3%2583%25BC%25E3%2581%258B%25E3%2582%2589Stripe%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E7%2589%25B9%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hidetaka%2520Okamoto%2528S...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gtSGp6eWxINWdaWDBOVXNUN1JvQ1hzUEJSR3E1OHVDSlRZSFVKPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hidetaka Okamoto(Stripe)</dc:creator></item><item><title><![CDATA[JavaScript で XML を扱う | NodeJS + fast-xml-parser]]></title><description><![CDATA[https://github.com/NaturalIntelligence/fast-xml-parser

 fast-xml-parser でできること

XML をオブジェクトに変換する（パース）
オブジェクトを XML に変換する（ビルド）
XML のフォーマットを検証する（バリデーション）


 前提

Node: 20.12.2
fast-xml-parser: ^4.5.0


 セットアップ
npm i fast-xml-parser

 使い方

 XML をオブジェクトに変換する（パース）

index.js
const { XMLParser } = requir...]]></description><link>https://zenn.dev/bbsfish/articles/dde8794a0be4e6</link><guid isPermaLink="true">https://zenn.dev/bbsfish/articles/dde8794a0be4e6</guid><pubDate>Thu, 12 Dec 2024 04:32:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VTODKewH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%2520%25E3%2581%25A7%2520XML%2520%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%2520%257C%2520NodeJS%2520%252B%2520fast-xml-parser%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y.%2520HSD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSS1ZeDZXOGNtbm1hTFhWM25SNC1QYnFWbTdDVkJ3RXdrT2czUlNnWjlOPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y. HSD</dc:creator></item></channel></rss>