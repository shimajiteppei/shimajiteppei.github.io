<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 22 May 2025 12:04:34 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Zustand × React Context を組み合わせたデザインパターン実践]]></title><description><![CDATA[
 はじめに
Dress Code株式会社で直近HR Forceの開発をしている、ふるしょうです。
HR領域のSaaSは、複雑なフォームの機能要件が伴うことが少なくありません。
例えば、入社手続きにおける家族情報の登録など、動的フィールドの表示/非表示や編集制御、複雑な依存関係を持つ計算フィールド、再起的な階層構造、同一ページ内に複数の独立したフォームインスタンスが存在する場合の適切な状態管理が必要になります。
弊社では、このような複雑なフォーム要件に対応するため、Zustand と React Context を組み合わせたアーキテクチャパターンを採用し、開発を進めています。
本記事で...]]></description><link>https://zenn.dev/dress_code/articles/7229462ef29103</link><guid isPermaLink="true">https://zenn.dev/dress_code/articles/7229462ef29103</guid><pubDate>Thu, 22 May 2025 08:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--K7soH42H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zustand%2520%25C3%2597%2520React%2520Context%2520%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2581%259F%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%2597%25E3%2582%2587%25E3%2581%2586%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiOGMxZmU1MDUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:DRESS%2520CODE%2520TECH%2520BLOG%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzMmQ5N2Q0NmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるしょう</dc:creator></item><item><title><![CDATA[TypeScript CLI で Markdown 1 ファイルから Cursor／Cline ルールを自動生成する方法]]></title><description><![CDATA[こんにちは！アルダグラムでエンジニアをしている柴田です

 はじめに
近年、AI エージェントツールの発展が著しく、開発現場でも Cursor や Cline のような自律エージェントを活用してコード生成やレビューを行うケースが増えていると思います。
弊社でも業務効率化を目的に複数の AI ツールを試験的に導入しており、特定のAIツールに依存せず用途に応じて併用しています。
これらのツールでは、プロジェクト固有のガイドラインやインデックス除外設定を記述したルールファイルを設定することができますが、Cursor と Cline の両方でほぼ同一のルールファイルを手動管理していると、更新タイ...]]></description><link>https://zenn.dev/aldagram_tech/articles/452ce8ea87baea</link><guid isPermaLink="true">https://zenn.dev/aldagram_tech/articles/452ce8ea87baea</guid><pubDate>Thu, 22 May 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iSezeGGU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520CLI%2520%25E3%2581%25A7%2520Markdown%25201%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%2520Cursor%25EF%25BC%258FCline%2520%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shibata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiM2FkMDk1NzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2580%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkZTMwMDdmMmQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shibata</dc:creator></item><item><title><![CDATA[JavaScriptオブジェクトのキー（プロパティ名）の書き方、全部解説します！]]></title><description><![CDATA[こんにちは！ JavaScriptでプログラミングをしていると、オブジェクトのキー（プロパティ名）の書き方がいくつかあって、「あれ？これはどういう意味だっけ？」と混乱することはありませんか？
{ key: value } だけでなく、[変数]: value とか、obj.key と obj['key'] の違いとか、ちょっとごちゃごちゃして見えますよね。
この記事では、そんなJavaScriptオブジェクトのキーに関するあらゆる表現方法を、一つ一つ丁寧に、オリジナルのサンプルコードを交えながら解説していきます。TypeScriptでの書き方も少し触れます。


 1. オブジェクトリテラ...]]></description><link>https://zenn.dev/noah11/articles/b789bcaa75c887</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/b789bcaa75c887</guid><pubDate>Thu, 22 May 2025 02:49:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wffpKwZW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25EF%25BC%2588%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E5%2590%258D%25EF%25BC%2589%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2580%2581%25E5%2585%25A8%25E9%2583%25A8%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA[this.player = null!; の意味]]></title><description><![CDATA[
 this.player = null!; の意味

 1. !（Non-null Assertion Operator）とは？
TypeScriptの!（ノン・ヌル・アサーション演算子）は
「この値は絶対にnullやundefinedじゃないよ」とコンパイラに伝えるための記号です。


 2. this.player = null!; の挙動


null! は「nullだけど、nullじゃないとみなして！」という意味です。
つまり、TypeScriptの型チェックを一時的にごまかして、nullを代入しています。



 3. どんなときに使う？

クラスのプロパティを「とりあえずn...]]></description><link>https://zenn.dev/btc/articles/250522_typescript_null_exclamation</link><guid isPermaLink="true">https://zenn.dev/btc/articles/250522_typescript_null_exclamation</guid><pubDate>Thu, 22 May 2025 02:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GGhxi-PB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:this.player%2520%253D%2520null%2521%253B%2520%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:my%2520log%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwODIzM2M5OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>my log</dc:creator></item><item><title><![CDATA[TypeScriptの「?」と「!」の違い]]></title><description><![CDATA[TypeScriptにおける
foo?: number
と
foo!: number
の違いを分かりやすく解説します。


 foo?: number の意味


「foo」はオプショナル（省略可能）なプロパティです。

型は number または undefined になります。
オブジェクトを生成する際、fooを指定してもしなくてもOKです。

例:
type Example = {
  foo?: number;
};

const a: Example = {};           // OK（fooなし）
const b: Example = { foo: 42 }; // ...]]></description><link>https://zenn.dev/btc/articles/250522_typescript_mark</link><guid isPermaLink="true">https://zenn.dev/btc/articles/250522_typescript_mark</guid><pubDate>Thu, 22 May 2025 02:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ToR-vmYS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E3%2580%258C%253F%25E3%2580%258D%25E3%2581%25A8%25E3%2580%258C%2521%25E3%2580%258D%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:my%2520log%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwODIzM2M5OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>my log</dc:creator></item><item><title><![CDATA[確定代入アサーションはつけるべき？]]></title><description><![CDATA[
 確定代入アサーション（definite assignment assertion）はつけるべき？

 結論
確定代入アサーション（!）は「本当にその変数やプロパティが必ず初期化される」と自信がある場合のみ使うべきです。
乱用は避け、TypeScriptの型安全性を損なわないよう注意が必要です。


 詳細

確定代入アサーション（!）は、TypeScriptのstrictNullChecksが有効なときに「この変数（プロパティ）は必ず初期化される」とコンパイラに伝えるためのものです。
これを使うと、初期化チェックのエラーが出なくなりますが、実際には初期化されていない場合でもエラーを抑...]]></description><link>https://zenn.dev/btc/articles/250522_definite_assignment_assertion</link><guid isPermaLink="true">https://zenn.dev/btc/articles/250522_definite_assignment_assertion</guid><pubDate>Thu, 22 May 2025 02:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MWhwowN_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A2%25BA%25E5%25AE%259A%25E4%25BB%25A3%25E5%2585%25A5%25E3%2582%25A2%25E3%2582%25B5%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25AF%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258D%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:my%2520log%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEwODIzM2M5OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>my log</dc:creator></item><item><title><![CDATA[やっぱりnullやundefinedは悪だと思うんだ...(TSでの工夫)]]></title><description><![CDATA[!
後日追記
この記事を読むにあたって私の知識の乏しさと勢いとノリで書いてしまった部分もあるので間違っている部分が多くあると思います。
消そうかどうか迷いましたが、今後のためになるので残しておきます。
数件コメントをいただきましたが、参考になるコメントです。
それも踏まえた上で読んでいただけると幸いです。

こんにちは。
てるし〜です。
JavascriptやTypescriptでプログラムを書いているとnullやundefinedが出てくると思います。
みなさんはこれらを使っていますか？
そしてこやつらに苦しめられてはいませんか？
私自身、何も違和感なく使っていましたが言われてみたら訳...]]></description><link>https://zenn.dev/terusi/articles/e243ead933d406</link><guid isPermaLink="true">https://zenn.dev/terusi/articles/e243ead933d406</guid><pubDate>Wed, 21 May 2025 19:04:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hvuOrEh---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25B1%25E3%2582%258Anull%25E3%2582%2584undefined%25E3%2581%25AF%25E6%2582%25AA%25E3%2581%25A0%25E3%2581%25A8%25E6%2580%259D%25E3%2581%2586%25E3%2582%2593%25E3%2581%25A0...%2528TS%25E3%2581%25A7%25E3%2581%25AE%25E5%25B7%25A5%25E5%25A4%25AB%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2597%25E3%2580%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2M5MzkyNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるし〜</dc:creator></item><item><title><![CDATA[Google Gemini APIで複数話者テキスト音声合成（TTS）を実現！会話を自然な声で生成]]></title><description><![CDATA[
 はじめに
近年、AI技術の進化は目覚ましく、特にテキスト音声合成（Text-to-Speech: TTS）は、その品質と表現力が飛躍的に向上しています。これまでは単一話者の音声合成が主流でしたが、Google Gemini APIを使うことで、なんと複数話者の会話を、それぞれの話者に異なる声色を割り当てて自然に生成できるようになりました。
本記事では、Google Gemini APIの新しいTTS機能 gemini-2.5-flash-preview-tts モデルとTypeScriptを使用して、複数話者での会話を音声ファイルとして出力する実装方法を解説します。ポッドキャスト、オ...]]></description><link>https://zenn.dev/coji/articles/gemini-multi-speaker-tts</link><guid isPermaLink="true">https://zenn.dev/coji/articles/gemini-multi-speaker-tts</guid><pubDate>Wed, 21 May 2025 15:19:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xprTlpbG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Gemini%2520API%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E8%25A9%25B1%25E8%2580%2585%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E9%259F%25B3%25E5%25A3%25B0%25E5%2590%2588%25E6%2588%2590%25EF%25BC%2588TTS%25EF%25BC%2589%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581%25E4%25BC%259A%25E8%25A9%25B1%25E3%2582%2592%25E8%2587%25AA%25E7%2584%25B6%25E3%2581%25AA%25E5%25A3%25B0%25E3%2581%25A7%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[【インタビュー】AI時代の開発最前線へ-CTOが語る Jicooの技術戦略・組織・エンジニアの未来]]></title><description><![CDATA[
今回は、JicooのCTOである小林さんに、Jicoo技術戦略や開発組織の未来、そして今まさに変化の渦中にあるAI技術への取り組みについて、詳しくお話を聞きました。
この記事では、小林さんのこれまでの歩みから、TypeScriptやDDDといった技術選択の背景、AI時代を見据えた開発体制、エンジニアの成長環境、そして私たちがどんな仲間を求めているかまで、率直に語ってもらっています。
技術の力で世の中に大きなインパクトを与えたいと考えているエンジニアの皆さん、そして私たちの挑戦に興味を持ってくださる全ての方に、ぜひ読んでいただければ幸いです！

 目次

インタビューされた人
インタビュ...]]></description><link>https://zenn.dev/jicoosumi/articles/eafcaf80f9b9a7</link><guid isPermaLink="true">https://zenn.dev/jicoosumi/articles/eafcaf80f9b9a7</guid><pubDate>Wed, 21 May 2025 10:25:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zrhEksHa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%2593%25E3%2583%25A5%25E3%2583%25BC%25E3%2580%2591AI%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E6%259C%2580%25E5%2589%258D%25E7%25B7%259A%25E3%2581%25B8-CTO%25E3%2581%258C%25E8%25AA%259E%25E3%2582%258B%2520Jicoo%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E6%2588%25A6%25E7%2595%25A5%25E3%2583%25BB%25E7%25B5%2584%25E7%25B9%2594%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E6%259C%25AA%25E6%259D%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mone%2520Osumi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3YTQ0Nzk5NDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mone Osumi</dc:creator></item><item><title><![CDATA[App RouterとTanStack Queryの実践プラクティス]]></title><description><![CDATA[Next.js App RouterとTanStack Queryの運用を続けてきて、ある程度知見が溜まったのでまとめます。

 TL;DR
Next.js App RouterとTanStack Queryの連携パターンを3つ紹介します：

①initialData方式（シンプルだが深い階層でバケツリレーが必要）
②Hydration方式（効率的だがサーバー/クライアント間の整合性確保が課題）
③ファクトリパターン（型安全で保守性高いが初期設定複雑）

パフォーマンス最適化のためにはSuspenseを活用したprefetchのリフトアップと、静的/動的データの適切な使い分けが重要です。...]]></description><link>https://zenn.dev/sirok/articles/nextjs-app-router-with-tanstack-query</link><guid isPermaLink="true">https://zenn.dev/sirok/articles/nextjs-app-router-with-tanstack-query</guid><pubDate>Wed, 21 May 2025 10:15:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bumORiNt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:App%2520Router%25E3%2581%25A8TanStack%2520Query%25E3%2581%25AE%25E5%25AE%259F%25E8%25B7%25B5%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2581%2584%25E3%2581%25BB%25E3%2581%25A4%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYWMxYjU0OWEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B7%25E3%2583%25AD%25E3%2582%25AF%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxYjY1ZTkyMTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かいほつ</dc:creator></item><item><title><![CDATA[AIを活用したアプリ多言語化の効率化 - OpenAI APIによる高精度翻訳システムの構築]]></title><description><![CDATA[
 1. はじめに
株式会社Sally CTO の @aitaro です。普段はマーダーミステリーアプリ「ウズ」とマダミス制作ツール「ウズスタジオ」、マダミス情報サイト「マダミス.jp」を全力で開発しています。
以前の多言語化シリーズでは、Golangでの自作多言語対応の基本実装と、Notionと翻訳ファイルを双方向同期するシステムについて紹介しました。

https://zenn.dev/uzu_tech/articles/879b388e184794
https://zenn.dev/uzu_tech/articles/3cdcb2fa33463d

本記事では、この仕組みをさらに発...]]></description><link>https://zenn.dev/uzu_tech/articles/3cca3424de76d0</link><guid isPermaLink="true">https://zenn.dev/uzu_tech/articles/3cca3424de76d0</guid><pubDate>Wed, 21 May 2025 02:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ruDiJmZy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%258C%2596%25E3%2581%25AE%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%2520-%2520OpenAI%2520API%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E9%25AB%2598%25E7%25B2%25BE%25E5%25BA%25A6%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Aitaro%2520Chaya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NjI5NGIwZmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UZU%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dYWTBMZmk2THctQ1RUeVYyWjZBbmxTNkJzM0dIQVpMS24zUVRpLWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Aitaro Chaya</dc:creator></item><item><title><![CDATA[Figma API × Lisp (Clojure) で作るレスポンシブスタイルのエクスポーター]]></title><description><![CDATA[
 はじめに
本記事では、FigmaのテキストスタイルをFigma APIから取得して、実際に使いやすい形に整形する方法を紹介します。
「そんなのはFigma MCPやFigma SitesみたいなAIツールでサクッと終わらせるよ！」という方は、ここでそっと閉じてください。とはいえ、本記事ではFigmaはあくまで入り口として、Lispの活用ポイントやTypeScriptなど静的型付け言語との違いについても触れています。プログラミング言語や設計の視点に興味がある方に読んでいただけると嬉しいです。
本記事で扱うコードはGitHubで公開していますので、興味のある方はぜひご覧ください。
htt...]]></description><link>https://zenn.dev/sumisonic/articles/e05a37b3bd957e</link><guid isPermaLink="true">https://zenn.dev/sumisonic/articles/e05a37b3bd957e</guid><pubDate>Wed, 21 May 2025 02:17:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MhaF3ZEg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Figma%2520API%2520%25C3%2597%2520Lisp%2520%2528Clojure%2529%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B7%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumisonic%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjY1ZWQ2N2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumisonic</dc:creator></item><item><title><![CDATA[TypeScriptで実現する型安全なAPIクライアント構築]]></title><description><![CDATA[
 はじめに
開発チームが大きくなるにつれて、フロントエンドとバックエンドの連携における型安全性の重要性は増していきます。
私たちの金融系Webアプリケーション開発チーム（10名程度）では、バックエンドチームがAPIのレスポンス構造を変更した際、フロントエンドへの共有が不十分で本番環境でユーザー認証の問題が発生しました。
この経験から、プロジェクトにおける型安全性について深く考えるようになりました。
特にフロントエンドとバックエンドの間でデータをやり取りする際、型の不一致はバグの温床となります。
本記事では、TypeScriptの型システムを活用してAPIレスポンスから自動的に型定義を生...]]></description><link>https://zenn.dev/nagis/articles/a9e506df1b848b</link><guid isPermaLink="true">https://zenn.dev/nagis/articles/a9e506df1b848b</guid><pubDate>Wed, 21 May 2025 02:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UDhO78-0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AAAPI%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nagi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxZWUzNTI0ZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nagi</dc:creator></item><item><title><![CDATA[React経験者が差分から学ぶNext.jsの良さ【ハンズオン】]]></title><description><![CDATA[
 Next.jsの基礎：App Routerで作業を通して学ぶ
ReactとTypeScriptの経験を持つ方を対象に、Next.jsの基礎から、サーバーサイドレンダリング (SSR)、静的サイトジェネレーション (SSG)、クライアントサイドレンダリング (CSR) の違いと使い分けまでを、App Router を中心に解説します。手を動かしながら学べるように、具体的なコード例も含めています。

 はじめに
この記事は下記記事でまとめた内容をハンズオン形式で手を動かしながら理解する記事になります。
https://zenn.dev/funayamateppei/articles/4a...]]></description><link>https://zenn.dev/funayamateppei/articles/cc44a4bc849289</link><guid isPermaLink="true">https://zenn.dev/funayamateppei/articles/cc44a4bc849289</guid><pubDate>Tue, 20 May 2025 13:34:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bbhBu5UG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E7%25B5%258C%25E9%25A8%2593%25E8%2580%2585%25E3%2581%258C%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6Next.js%25E3%2581%25AE%25E8%2589%25AF%25E3%2581%2595%25E3%2580%2590%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%25AA%25E3%2582%2580%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTA3MWNkNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふなむし</dc:creator></item><item><title><![CDATA[Serverless Framework V4でビルドしたコードの実行時にエラーが発生した時の対処法]]></title><description><![CDATA[こんにちは。株式会社シータグCTOの @y_okady です。
シータグでは社内業務の自動化にAWS Lambda + Serverless Framework V4を使用しています。従来はJavaScriptでLambda関数を記述していましたが、つい先日シータグ社内の社内標準プログラミング言語にTypeScriptを採用したことを受けて、TypeScriptへの移行を実施しました。
Serverless Framework V4ではLambda利用時にTypeScriptがネイティブでサポートされ、プラグインなしでTypeScriptファイルを扱うことができるようになりました。
ht...]]></description><link>https://zenn.dev/ctag/articles/0d5e878e842865</link><guid isPermaLink="true">https://zenn.dev/ctag/articles/0d5e878e842865</guid><pubDate>Tue, 20 May 2025 13:08:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CoLnJLoG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Serverless%2520Framework%2520V4%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2597%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2597%25E3%2581%259F%25E6%2599%2582%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:okady%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTNlMWQ2MWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25B7%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdlNTc0MDdlMDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okady</dc:creator></item><item><title><![CDATA[React経験者が差分から学ぶNext.js]]></title><description><![CDATA[
 Next.js + TypeScript入門：React経験者が差分から学ぶSSR/SSG/CSR

 はじめに
この記事では、ReactとTypeScriptの経験を持つ方を対象に、Next.jsの基礎から、サーバーサイドレンダリング (SSR)、静的サイトジェネレーション (SSG)、クライアントサイドレンダリング (CSR) の違いと使い分けまでを解説します。

 Next.jsとは？Reactとの差分
Next.jsは、Reactをベースとした強力なフレームワークで、Webアプリケーション開発に必要な多くの機能を提供します。Reactが主にクライアントサイドでのUI構築に特化...]]></description><link>https://zenn.dev/funayamateppei/articles/4a464c0f4f45c6</link><guid isPermaLink="true">https://zenn.dev/funayamateppei/articles/4a464c0f4f45c6</guid><pubDate>Tue, 20 May 2025 13:06:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ncIM3lRZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E7%25B5%258C%25E9%25A8%2593%25E8%2580%2585%25E3%2581%258C%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6Next.js%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2581%25AA%25E3%2582%2580%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTA3MWNkNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふなむし</dc:creator></item><item><title><![CDATA[React × MUI × TypeScriptでTODOアプリを作って学んだこと（初心者向け）]]></title><description><![CDATA[
 1. はじめに
転職に向けたポートフォリオとして、TODOアプリを作ってみました！
この記事では、アプリを作る中で学んだことや「ここで詰まった…！」というポイント、そこをどうやって解決したかなどを振り返っています。
フロントエンドを中心に、実際にコードを書きながら学んだことをまとめているので、同じようにアプリ開発にチャレンジしている人の参考になれば嬉しいです！

 2. 作成したアプリの概要
毎日のタスクをパパっと登録＆管理できる、シンプルなToDoアプリを作りました。
フロントエンドは React + TypeScript でSPA（シングルページアプリ）として構築し、バックエンド...]]></description><link>https://zenn.dev/kinako825/articles/0097a5641ab74b</link><guid isPermaLink="true">https://zenn.dev/kinako825/articles/0097a5641ab74b</guid><pubDate>Tue, 20 May 2025 12:41:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4HLDE_wC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25C3%2597%2520MUI%2520%25C3%2597%2520TypeScript%25E3%2581%25A7TODO%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%25EF%25BC%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinako%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ODUyNmZhNWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kinako</dc:creator></item><item><title><![CDATA[ZENN の記事を高速で反映させるブログサイトを開発🧑🏼‍💻 〜開発編〜]]></title><description><![CDATA[
 ZENN の記事を高速で反映させるブログサイトを開発 🧑🏼‍💻（Next.js × TypeScript × Tailwind CSS 使用、Vercel で無料運用） 〜開発編〜

 はじめに
仕事やプライベートで Next.js や TypeScript、TailwindCSS などを習得した知見を活かしたいと思いましたので、それらを活用した個人開発の一環として、「HayaTech-Blog」というブログサイトを作りました。ZENN に投稿している記事を取得して、エンジニア向けのブログとして公開しています。
HayaTech-Blog
URL：https://hayatech-b...]]></description><link>https://zenn.dev/hayatech/articles/develop-blog-app-2</link><guid isPermaLink="true">https://zenn.dev/hayatech/articles/develop-blog-app-2</guid><pubDate>Tue, 20 May 2025 10:58:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Oeop6qOy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ZENN%2520%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25A7%25E5%258F%258D%25E6%2598%25A0%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%2520%2520%25E3%2580%259C%25E9%2596%258B%25E7%2599%25BA%25E7%25B7%25A8%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HayaTech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OTUyMWE4YzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HayaTech</dc:creator></item><item><title><![CDATA[小さなツールを作って考える、生成AIとの向き合いかた]]></title><description><![CDATA[フェアリーデバイセズ株式会社プロダクト開発部のCubbitです。この生成AIブームの隆盛に伴い、生成AIでコーディングを補助するツールが次々と登場しています。自分の職能のようなものの価値が薄れつつあることを少し寂しく感じつつも、便利なものであれば利用していきたいという気持ちから、私も日々キャッチアップに勤しんでいます。今回は、個人的にClineを試し、AIコーディングツールへの向き合い方を探ったことについて書いていきたいと思います。

 Cline/Claudeを試してみる
https://github.com/cline/cline
ClineはVisual Studio Codeの拡...]]></description><link>https://zenn.dev/fairydevices/articles/2ecb820a00f37f</link><guid isPermaLink="true">https://zenn.dev/fairydevices/articles/2ecb820a00f37f</guid><pubDate>Tue, 20 May 2025 08:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UFGjafkL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25B0%258F%25E3%2581%2595%25E3%2581%25AA%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E3%2580%2581%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25A8%25E3%2581%25AE%25E5%2590%2591%25E3%2581%258D%25E5%2590%2588%25E3%2581%2584%25E3%2581%258B%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Cubbit%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MjE4ODkwNjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25BB%25E3%2582%25BA%25E5%2585%25AC%25E5%25BC%258F%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dLaUg0Z2lyTG1GTHA2N1R0b2RhczF4bVVDaXFHZVZ1RzJjR2VvPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Cubbit</dc:creator></item><item><title><![CDATA[Cloudflare WorkersとD1でreact-router v7, drizzle-orm, valibot, conformメモ]]></title><description><![CDATA[備忘録メモ。
一旦動かすことができたのですが、しばらく別件に取り掛かるため、メモとして残します。

 新規プロジェクト
$ npx create-react-router@latest --template remix-run/react-router-templates/cloudflare-d1

(中略)

         create-react-router v7.6.0

   dir   Where should we create your new project?
         ./example_react-router_cloudflare-workers

...]]></description><link>https://zenn.dev/craneduck/articles/ff36a7fa8e7495</link><guid isPermaLink="true">https://zenn.dev/craneduck/articles/ff36a7fa8e7495</guid><pubDate>Tue, 20 May 2025 07:31:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VJ5AeE4X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%25E3%2581%25A8D1%25E3%2581%25A7react-router%2520v7%252C%2520drizzle-orm%252C%2520valib...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%2583%25E3%2582%25AF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM5NDVkNWY1NzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クレーンダック</dc:creator></item></channel></rss>