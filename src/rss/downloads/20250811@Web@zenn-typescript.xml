<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 11 Aug 2025 00:56:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[JS/TS学習備忘録]]></title><description><![CDATA[理解を深めるため学習に応じて書き連ねていく
本届いたら勉強して理解したことを書き連ねていく

 JavaScript
aaa

 TypeScript
aaa
]]></description><link>https://zenn.dev/nanashi123/articles/javascript-typescript-memo</link><guid isPermaLink="true">https://zenn.dev/nanashi123/articles/javascript-typescript-memo</guid><pubDate>Sun, 10 Aug 2025 17:39:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PRTzDj93--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%252FTS%25E5%25AD%25A6%25E7%25BF%2592%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nanashi123%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliZDI1NzkwZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nanashi123</dc:creator></item><item><title><![CDATA[ReactとWebAudio APIで本物っぽいVUメーターを作る]]></title><description><![CDATA[

 vu-meter-react これは何？
ちょっと今作ってるアプリで必要に迫られまして、VUメーターのライブラリを作りました。
ターゲットポイントを設けた線形補完で力技実装ですが、挙動はかなり正確なはずです。
正確なVUのバリスティクス（約300msのアタック/リリース）、ステレオ/モノ、テーマ（light/dark）、可変サイズに対応。React 16.8+ 〜 19 で動作。

 動作デモ
https://codesandbox.io/p/sandbox/2kwnxh

 インストール
npm i vu-meter-react
# or
yarn add vu-meter-re...]]></description><link>https://zenn.dev/jun_murakami/articles/ba1474a666da5b</link><guid isPermaLink="true">https://zenn.dev/jun_murakami/articles/ba1474a666da5b</guid><pubDate>Sun, 10 Aug 2025 15:38:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y5lLXe9z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A8WebAudio%2520API%25E3%2581%25A7%25E6%259C%25AC%25E7%2589%25A9%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584VU%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2520Murakami%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4WUpGeVFIblVsUDZucHhNYXZtX25qUEx3M1JfanJxRldjdEhDSjlodz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun Murakami</dc:creator></item><item><title><![CDATA[TypeScript でプロパティが排他的なオブジェクトを表現する Exclusive 型を作る]]></title><description><![CDATA[この記事では、TypeScript で排他的なプロパティを持つオブジェクトを表現する Exclusive 型の実装方法について紹介します。

 やりたいこと
Exclusive 型の目的は、オブジェクトが複数のプロパティ候補の中からちょうど 1 つのプロパティだけを持つことを強制することです。
例えば、Exclusive 型を使って以下のような型が定義されているとします。
Exclusive&lt;{ id: string; name: string }&gt;
この場合、次のオブジェクトは型チェックを通ります。
{ id: "1" }
{ name: "Alice" }
一方、次のオブ...]]></description><link>https://zenn.dev/wintery_fish/articles/typescript-exactly-one-type</link><guid isPermaLink="true">https://zenn.dev/wintery_fish/articles/typescript-exactly-one-type</guid><pubDate>Sun, 10 Aug 2025 09:18:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x8svwRI1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%258C%25E6%258E%2592%25E4%25BB%2596%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2520Exclusive%2520%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AE%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiM2NjNjFjNzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鮗</dc:creator></item><item><title><![CDATA[TypeScriptで多層構造のエラーメッセージからエラーコードの型定義を生成する]]></title><description><![CDATA[const ERROR_MESSAGES = {
  admin: {
    post: {
      "not-found": "投稿が見つかりません。",
      "invalid-type": "投稿のタイプが無効です。",
    },
  },
  user: {
    post: {
      "not-found": "投稿が見つかりません。",
      "invalid-type": "投稿のタイプが無効です。",
    },
    search: {
      "invalid-query": "検索クエリが無効です。",
      "no-re...]]></description><link>https://zenn.dev/dev_commune/articles/3bcb750ea008a0</link><guid isPermaLink="true">https://zenn.dev/dev_commune/articles/3bcb750ea008a0</guid><pubDate>Sun, 10 Aug 2025 08:28:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q0y7AD1F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E5%25A4%259A%25E5%25B1%25A4%25E6%25A7%258B%25E9%2580%25A0%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%258B%25E3%2582%2589%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:anoChick%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1MTE3MTI5NDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25B3%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzZWUzY2RlYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>anoChick</dc:creator></item><item><title><![CDATA[React + Railsで安全なドラッグ＆ドロップ並び替え機能：楽観更新とRails側バリデーション実装例]]></title><description><![CDATA[
 はじめに
React（TypeScript）+ Ruby on Rails（APIモード）で、ドラッグ＆ドロップによる並び替え機能を実装するとき、以下のような課題に直面します。


ネットワーク遅延でUI更新がもたつく


APIエラー時に順序が壊れる


不正なリクエストでDBの順序が破壊される


本記事では、
フロント側は「楽観更新＋失敗時ロールバック」、
サーバー側は「親で絞る＋件数検証」
という2つの仕組みを組み合わせた、安全で快適な並び替え機能の実装例を紹介します。

 並び替え機能における課題
並び替え機能を実装する際、以下の２点が課題になります。

 1. UIのもた...]]></description><link>https://zenn.dev/kazukiootaki/articles/e42a9262a36222</link><guid isPermaLink="true">https://zenn.dev/kazukiootaki/articles/e42a9262a36222</guid><pubDate>Sun, 10 Aug 2025 08:25:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sHiPAjI_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%252B%2520Rails%25E3%2581%25A7%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E3%2583%2589%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B0%25EF%25BC%2586%25E3%2583%2589%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%25E4%25B8%25A6%25E3%2581%25B3%25E6%259B%25BF%25E3%2581%2588%25E6%25A9%259F%25E8%2583%25BD%25EF%25BC%259A%25E6%25A5%25BD%25E8%25A6%25B3%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%25A8Rails%25E5%2581%25B4%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuki_otaki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OTY4Mjg0NDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuki_otaki</dc:creator></item><item><title><![CDATA[Next.js + Supabase タスク管理アプリ ユーザー認証編]]></title><description><![CDATA[Next.jsの初学者向けチュートリアルコンテンツです。タスク管理アプリを Next.js 及び TypeScript で開発していきます。シンプルでモダンなUIに、優先度・重要フラグ、タグ情報、テーマ変更なども付加した、実用性の高いアプリとなっています。
こちらは、下記のチューリアルコンテンツの続編となります。

https://zenn.dev/amayann/books/18f5c79fb4778b

一旦形になった、タスク管理アプリについて、ユーザー認証を導入し、ユーザー毎のデータ、タスク管理が出来るアプリに仕立てます。ユーザー所有のデータのみを扱うように認証と制御を行いないます。また、Supabaseのストレージサービスを使用した、プロフィール画像の格納をはじめ、ユーザーのプロフィール・設定機能を実装します。]]></description><link>https://zenn.dev/amayann/books/6a78a940e7bfc3</link><guid isPermaLink="true">https://zenn.dev/amayann/books/6a78a940e7bfc3</guid><pubDate>Sun, 10 Aug 2025 06:54:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--svcIHWyg--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8xN2JjNmQ2OTY1LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>bauhaus</dc:creator></item><item><title><![CDATA[モノレポでBiome v2を使う時は「"root":false,"extends":"//"」とする]]></title><description><![CDATA[今行っている個人開発では、モノレポ構成でフォーマッタ/リンタにはBiomeを採用しています。
プロジェクトルートの設定でindentStyle: "spaces"に設定しているにも関わらず、保存する度にtabに切り替わってしまう問題が起きていました。
CLI経由の実行では問題なく、拡張機能経由のフォーマットに問題がありました。
※エディタはVSCodeです。

 元々の設定
元は次のように、extendsでプロジェクトルートに存在するbiome.jsonを拡張して個別のbiome.jsonを作成していました。
// biome.json
{
	"formatter": {
		"enab...]]></description><link>https://zenn.dev/ud/articles/b5998b0413743c</link><guid isPermaLink="true">https://zenn.dev/ud/articles/b5998b0413743c</guid><pubDate>Sun, 10 Aug 2025 03:18:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RyaNGP0f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E3%2581%25A7Biome%2520v2%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2599%2582%25E3%2581%25AF%25E3%2580%258C%2522root%2522%253Afalse%252C%2522extends%2522%253A%2522%252F%252F%2522%25E3%2580%258D%25E3%2581%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:UD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwUGh4NnVtTjRvcWJINjdRbjFvOTY3WlNEWl9vWnNXLTZpQW1LZGVzPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>UD</dc:creator></item><item><title><![CDATA[掲示板アプリ:Next.js App Router における様々なレンダリングパターン入門（SSG, SSR, ISR, CSR）]]></title><description><![CDATA[## 概要
このプロジェクトでは、お知らせ・アンケート・クイズ機能を持つ掲示板アプリを構築します。GitHub の Discussions 風の UI/UX で、汎用性が高いシンプルな掲示板アプリです！
具体的な、アプリの仕様・学習内容については、READMEを参照ください🙌]]></description><link>https://zenn.dev/kazzyfrog/books/bulletin-board</link><guid isPermaLink="true">https://zenn.dev/kazzyfrog/books/bulletin-board</guid><pubDate>Sat, 09 Aug 2025 17:05:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HI4qJ6yc--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zZWFjNjUyMWM4LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[【2025-08-09】ESLintとStylisticのバージョン更新によるリントエラーの発生]]></title><description><![CDATA[前提として、私のプロジェクトの技術スタックは以下のとおり。

言語

TypeScript（ 5.9.2 ）


ライブラリ

React（ v19.1.0 ）


フレームワーク

Next.js（ v15.3.4 ）


リンター

ESLint（ v9.32.0 ）
eslint-config-next（ v15.4.6 ）


フォーマッター

Stylistic（@stylistic/eslint-plugin）（ v5.2.2 ）




 発生していた問題
Dependabot が自動生成した依存関係更新 PR にて CI が落ちていた。
エラーの内容は以下。
Maximu...]]></description><link>https://zenn.dev/sakataku1991/articles/8344a40c8d0dd5</link><guid isPermaLink="true">https://zenn.dev/sakataku1991/articles/8344a40c8d0dd5</guid><pubDate>Sat, 09 Aug 2025 11:47:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fqV312oI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902025-08-09%25E3%2580%2591ESLint%25E3%2581%25A8Stylistic%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E7%2599%25BA%25E7%2594%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sakataku1991%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MWQwYmQ0YWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sakataku1991</dc:creator></item><item><title><![CDATA[ZennとQiitaの記事を同期するアクション]]></title><description><![CDATA[ZennとQiitaの記事を同期するアクションを開発しました。
Zennに記事を投稿するにあたり、Qiitaにもついでに投稿したいと思ったことがきっかけです。
同様なアクションを既に開発されている方がいらっしゃいますが、Github Actionsの学習も兼ねて実装してみました。
本アクションでは片方の記事から他方の記事を生成、リポジトリにプッシュを自動化します。
ここでは簡単な紹介に留めたいと思います。
実際の使い方は、URLからREADMEを参照いただければと思います。
ご興味のある方はご使用いただければと思います。また不明点やバグ、使い勝手、実装の良し悪しなど、ご質問、ご指導いただ...]]></description><link>https://zenn.dev/r_dev95/articles/sync-zenn-qiita-articles</link><guid isPermaLink="true">https://zenn.dev/r_dev95/articles/sync-zenn-qiita-articles</guid><pubDate>Sat, 09 Aug 2025 08:48:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rvLhBaIy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zenn%25E3%2581%25A8Qiita%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E5%2590%258C%25E6%259C%259F%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:r-dev95%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2NjZEp3b2lsbGlFTWxqckFKRS1hb0VyUzIxSU9yNXZXUHNxRTVBLXA2Q1ZfeFV3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>r-dev95</dc:creator></item><item><title><![CDATA[【ExpoとSupabaseで作る認証フロー (3)】認証ガードで画面を保護する最終実装]]></title><description><![CDATA[
 はじめに
前回の記事で、invalidateQueriesを使い、ログインやログアウトといったデータ変更の結果をアプリ全体のUIに自動で反映させる仕組みを構築しました。
シリーズ最終回の今回は、これまでに構築した認証フックを使い、Expo Routerのルートレイアウトファイル (app/_layout.tsx) で認証ガード（Authentication Guard）を実装します。これにより、ユーザーのログイン状態に応じてアクセスできる画面を自動で制御します。

 Step 1: 実装のゴールを定義する
私たちが目指すユーザー体験は以下の通りです。

✅ 未ログインのユーザーがアプ...]]></description><link>https://zenn.dev/keisho_tech/articles/3d94546fdb812c</link><guid isPermaLink="true">https://zenn.dev/keisho_tech/articles/3d94546fdb812c</guid><pubDate>Fri, 08 Aug 2025 15:38:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h9M9Ngzf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Expo%25E3%2581%25A8Supabase%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%2520%25283%2529%25E3%2580%2591%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BF%259D%25E8%25AD%25B7%25E3%2581%2599%25E3%2582%258B%25E6%259C%2580%25E7%25B5%2582%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%259F%25B3%25E5%25B7%259D%25E5%25A3%25B1%25E6%259C%2597%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyZmQ5NzQ2ZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25AB%258B%25E5%2591%25BD%25E9%25A4%25A8%25E6%2585%25B6%25E7%25A5%25A5%25E9%25AB%2598%25E7%25AD%2589%25E5%25AD%25A6%25E6%25A0%25A1%25E3%2580%2590K-Tech%25E3%2580%2591%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndPRGVDUEszUW56OGFSblZJSlIwVjF2RWxIUG5YWmRFUUhKb2hhQllyYnY3bUd6aTk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>石川壱朗</dc:creator></item><item><title><![CDATA[【ExpoとSupabaseで作る認証フロー (2)】invalidateQueriesでアプリの状態を自動同期する]]></title><description><![CDATA[
 はじめに
前回の記事では、useMutationを使い、サインアップのようなサーバーの状態を変更するアクションを正しく実装する方法を学びました。
しかし、アクションが成功しても、アプリは「ユーザーのログイン状態が変わったこと」にまだ気づいていません。
!
「サインインしたのに、ウェルカムメッセージが表示されない…」
「サインアウトボタンを押したのに、ログインしたままの画面に居続ける…」
これは、アプリの各部分が表示している「ログイン状態」の情報が古いままになっているからです。今回の記事では、この問題を解決し、TanStack Queryの真価を引き出すinvalidateQuerie...]]></description><link>https://zenn.dev/keisho_tech/articles/8136b2e454940c</link><guid isPermaLink="true">https://zenn.dev/keisho_tech/articles/8136b2e454940c</guid><pubDate>Fri, 08 Aug 2025 15:34:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C6ZTYo0r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Expo%25E3%2581%25A8Supabase%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%2520%25282%2529%25E3%2580%2591invalidateQueries%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E7%258A%25B6%25E6%2585%258B%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%2590%258C%25E6%259C%259F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%259F%25B3%25E5%25B7%259D%25E5%25A3%25B1%25E6%259C%2597%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyZmQ5NzQ2ZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25AB%258B%25E5%2591%25BD%25E9%25A4%25A8%25E6%2585%25B6%25E7%25A5%25A5%25E9%25AB%2598%25E7%25AD%2589%25E5%25AD%25A6%25E6%25A0%25A1%25E3%2580%2590K-Tech%25E3%2580%2591%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndPRGVDUEszUW56OGFSblZJSlIwVjF2RWxIUG5YWmRFUUhKb2hhQllyYnY3bUd6aTk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>石川壱朗</dc:creator></item><item><title><![CDATA[【ExpoとSupabaseで作る認証フロー(1)】TanStack QueryのuseMutationを正しく使おう]]></title><description><![CDATA[
 はじめに
!
Expoとsupabaseに関しての初期セットアップが済んでおり、基本知識が備わっている前提の記事となります。TanStack Queryについては以下のTaiseiさんのBookをご参照ください。


Expo Router, Supabase, そしてTanStack Queryは、現代のReact Nativeアプリ開発における非常に強力な組み合わせです。しかし、特にTanStack Queryを使い始めたばかりの頃は、「データを取得するuseQuery」と「データを変更するuseMutation」の使い分けで混乱しがちです。
!
このシリーズでは、認証フローをゼ...]]></description><link>https://zenn.dev/keisho_tech/articles/1d93c27c5e61f7</link><guid isPermaLink="true">https://zenn.dev/keisho_tech/articles/1d93c27c5e61f7</guid><pubDate>Fri, 08 Aug 2025 15:33:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zbl0X-fE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Expo%25E3%2581%25A8Supabase%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%25AA%258D%25E8%25A8%25BC%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25281%2529%25E3%2580%2591TanStack%2520Query%25E3%2581%25AEuseMutation%25E3%2582%2592%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E7%259F%25B3%25E5%25B7%259D%25E5%25A3%25B1%25E6%259C%2597%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyZmQ5NzQ2ZGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E7%25AB%258B%25E5%2591%25BD%25E9%25A4%25A8%25E6%2585%25B6%25E7%25A5%25A5%25E9%25AB%2598%25E7%25AD%2589%25E5%25AD%25A6%25E6%25A0%25A1%25E3%2580%2590K-Tech%25E3%2580%2591%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSndPRGVDUEszUW56OGFSblZJSlIwVjF2RWxIUG5YWmRFUUhKb2hhQllyYnY3bUd6aTk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>石川壱朗</dc:creator></item><item><title><![CDATA[React Router v7 のバリデーションライブラリ Zodix を Zod v3/v4 両対応にしてみた]]></title><description><![CDATA[
 Zodix を fork して改良してみました
React Router v7（旧 Remix）でフォームやクエリパラメータのバリデーションを行うライブラリ「Zodix」を fork して、Zod v3/v4 両対応と React Router v7 対応にしてみました。NPM パッケージとして @coji/zodix で公開しています。
https://github.com/coji/zodix
https://www.npmjs.com/package/@coji/zodix

 なぜ fork したのか
オリジナルの Zodix は便利なライブラリなんですが、使っていて困ったこ...]]></description><link>https://zenn.dev/coji/articles/zodix-fork-zod-v3-v4-react-router-v7</link><guid isPermaLink="true">https://zenn.dev/coji/articles/zodix-fork-zod-v3-v4-react-router-v7</guid><pubDate>Fri, 08 Aug 2025 12:02:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PmJLSglf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2520v7%2520%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520Zodix%2520%25E3%2582%2592%2520Zod%2520v3%252Fv4%2520%25E4%25B8%25A1%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Coji%2520Mizoguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pWY2RrNjcwV2NIdGs0anBHa2FGTDAxcERVUVlIX0JYdWE5aDRVNVE9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Coji Mizoguchi</dc:creator></item><item><title><![CDATA[配列について(TypeScript)]]></title><description><![CDATA[
 TypeScriptの配列について
TSの技術書を読んだが、配列のページがとても多い。
配列について重要などだなと感じた。

 私が今回配列について学んだこと

配列はたくさんのデータを記憶できる変数があるらしい
配列はタプル型と同様に、複数の値を記憶できる。


 プログラムが大きくなるにつれて扱うデータは増える

例えば、100人にペットを飼っているのかアンケートをだしてそしてそれを集計して飼っている人の平均を求めたいとする。
このとき、各個人のペットを飼っている人数を管理するために100人分の変数を準備しないといけない


 100個の変数を宣言する例(配列を使わないとき（非効...]]></description><link>https://zenn.dev/puku/articles/2163c43469c668</link><guid isPermaLink="true">https://zenn.dev/puku/articles/2163c43469c668</guid><pubDate>Fri, 08 Aug 2025 05:43:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kzM46PHp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2528TypeScript%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mayuka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3MmIzMjJhNGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mayuka</dc:creator></item><item><title><![CDATA[権限によるUI制御をラクにするためにReactでやった設計/実装✅]]></title><description><![CDATA[
 はじめに
ユーザーが特定の操作を行っても良いのか、情報を閲覧しても良いのか、などを制御するのに必要な認可処理。セキュリティの観点や、データの正しい操作を行えるようにするという点で主にバックエンド側が責任を持ってこれを行うのですが、フロントエンドにおいてもユーザー体験の向上を主なモチベーションとして認可の実装が必要になってきます。
この記事では自分がReactで行ったフロントエンドの認可周りの設計や、具体的な実装の一部を共有できたらなと思っています。

 どんなことができると良さそうか

 UIの表示非表示、差し替え
ユーザーの権限に応じて利用可能な機能や閲覧可能な情報などが制限される...]]></description><link>https://zenn.dev/ispec_inc/articles/71a9f7d395e537</link><guid isPermaLink="true">https://zenn.dev/ispec_inc/articles/71a9f7d395e537</guid><pubDate>Fri, 08 Aug 2025 03:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bqiRmFev--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A8%25A9%25E9%2599%2590%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BUI%25E5%2588%25B6%25E5%25BE%25A1%25E3%2582%2592%25E3%2583%25A9%25E3%2582%25AF%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25ABReact%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%259F%25E8%25A8%25AD%25E8%25A8%2588%252F%25E5%25AE%259F%25E8%25A3%2585%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:s.kato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmN2Y5YzE4ZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ispec%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlOTEwZDc3Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s.kato</dc:creator></item><item><title><![CDATA[【React】安易にkeyにindexを指定するのはいい加減やめようの会]]></title><description><![CDATA[こんにちは!
株式会社Sally エンジニアの haruten です♪
私たち株式会社Sallyでは、マーダーミステリーをスマホやPCで遊べるアプリ「ウズ」や、マーダーミステリーを制作してウズ上で公開・プレイできるエディターツール「ウズスタジオ」などを開発・運営しています。
https://sally-inc.jp/
最近、Next.jsの開発現場でkeyの扱いを甘く見ていたせいで、思わぬバグに悩まされました。
今回は、そのトラブルの体験談も交えながらkeyの重要性についてまとめてみます。
初心者向けの内容ですが、自分も見落としていたポイントであり、同じミスを防ぐための自戒も込めた備忘録...]]></description><link>https://zenn.dev/uzu_tech/articles/5a81aa1ec73ff2</link><guid isPermaLink="true">https://zenn.dev/uzu_tech/articles/5a81aa1ec73ff2</guid><pubDate>Fri, 08 Aug 2025 01:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tYVqSdaq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591%25E5%25AE%2589%25E6%2598%2593%25E3%2581%25ABkey%25E3%2581%25ABindex%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2584%25E5%258A%25A0%25E6%25B8%259B%25E3%2582%2584%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AE%25E4%25BC%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:haruten%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5NjI5NGIwZmUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:UZU%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNzI0NDRkNGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>haruten</dc:creator></item><item><title><![CDATA[Tailwind CSS v4 でダークモードを実装できないとき]]></title><description><![CDATA[
 今までできたこと
今まではtailwind.config.jsファイルでdarkModeを設定できていた。

tailwind.config.js
/** @type {import('tailwindcss').Config} */
module.exports = {
darkMode: "class", // Enable dark mode using the 'class' strategy
//others...
}

こうすることで、適切にコンポーネントでも作成すれば，tsxファイルなどでclassName="bg-white dark:bg-gray-800"などと指...]]></description><link>https://zenn.dev/syosuke/articles/24a81cb038c6cd</link><guid isPermaLink="true">https://zenn.dev/syosuke/articles/24a81cb038c6cd</guid><pubDate>Fri, 08 Aug 2025 00:24:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BOWDxcCU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tailwind%2520CSS%2520v4%2520%25E3%2581%25A7%25E3%2583%2580%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Syosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2M2NhYTBkMzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Syosuke</dc:creator></item><item><title><![CDATA[Nuxt4アップグレードガイドの内容を整理してみた]]></title><description><![CDATA[
 はじめに
Nuxt3 から Nuxt4 へのアップグレードは、公式の充実したガイドが用意されているため、基本的には記載されている手順に従って作業すれば問題ありません。
Upgrade Guide · Get Started with Nuxt v4
しかし、公式ガイドは分量が多く、項目も多岐にわたるため、全体像を把握するのに時間がかかります。この記事では、実際のアップグレード作業を通じて得た知見をもとに、公式ガイドのどこを重点的に読めばよいかを整理しました。
最終的には公式ガイドを参照して作業することになりますが、事前にこの記事を読むことで全体の作業を効率化できるはずです。

 アッ...]]></description><link>https://zenn.dev/shun91/articles/nuxt4-upgrade</link><guid isPermaLink="true">https://zenn.dev/shun91/articles/nuxt4-upgrade</guid><pubDate>Thu, 07 Aug 2025 11:07:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YVYwxMOV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt4%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%25E3%2581%25AE%25E5%2586%2585%25E5%25AE%25B9%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shun91%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqLWFka3hrSi1rTUFYQ3JNX0QybHpFOTEyVzhWbVRwS3VHQ2ZEVW9rPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shun91</dc:creator></item><item><title><![CDATA[GraphQLスキーマ変更を安全に：破壊的変更検知と依存Repoへの自動PR作成]]></title><description><![CDATA[こんにちは。株式会社EVERSTEELで業務委託のエンジニアをしている白木です。
GraphQLスキーマの変更時に発生しがちな破壊的変更の見落としや、フロントエンド・バックエンド間の型定義同期の課題を、GitHub Actionsを活用した自動化によって解決した事例を紹介します。

 直面していた課題
GraphQLを活用したマイクロサービスアーキテクチャやフロントエンド・バックエンド分離型のWeb開発において、GraphQLスキーマの変更管理は重要な課題です。
特に以下のような問題に直面していました。


破壊的変更の見落とし: GraphQLスキーマの変更時に、既存のクライアントを壊...]]></description><link>https://zenn.dev/eversteel_tech/articles/8ed9a448415368</link><guid isPermaLink="true">https://zenn.dev/eversteel_tech/articles/8ed9a448415368</guid><pubDate>Thu, 07 Aug 2025 00:50:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eU_EgyWB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GraphQL%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E5%25A4%2589%25E6%259B%25B4%25E3%2582%2592%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25EF%25BC%259A%25E7%25A0%25B4%25E5%25A3%258A%25E7%259A%2584%25E5%25A4%2589%25E6%259B%25B4%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%25A8%25E4%25BE%259D%25E5%25AD%2598Repo%25E3%2581%25B8%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595PR%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:SHIRO%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZjM2ZWM4NDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:EVERSTEEL%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p2ZDR0SDNrY3NQOEliejdSdUgtajJZVDNoLThLOTN4aGd1U2s9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SHIRO</dc:creator></item></channel></rss>