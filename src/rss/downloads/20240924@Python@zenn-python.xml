<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 24 Sep 2024 08:10:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【簡単】Streamlit でデータ可視化アプを開発]]></title><description><![CDATA[
 はじめに


交通事故を可視化したマップです。
オープンデータとして公開されている 2019 年からのデータを簡単な表にしたのですが、多いですね……。お互い安全運転を心がけましょう…………。
北海道の統計



年度
件数
死者数
負傷者数




2023
9082
131
10601


2022
8457
115
9785


2021
8304
120
9598


2020
7898
144
9043


2019
9595
152
11046



というわけで、このデータと Streamlit の st.map を使って地図にプロットしたいと思います。
データは以下から...]]></description><link>https://zenn.dev/pfirsich/articles/2610798ddfab07</link><guid isPermaLink="true">https://zenn.dev/pfirsich/articles/2610798ddfab07</guid><pubDate>Tue, 24 Sep 2024 08:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--U6DeRi18--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591Streamlit%2520%25E3%2581%25A7%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2582%25A2%25E3%2583%2597%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Pfirsich%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wmtodk13dmVKbW8wbWRDeUtmM2tpUWNINFVvcGhBb2VuVGlnVmhndz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Pfirsich</dc:creator></item><item><title><![CDATA[Pathlib と os.path の使いやすさを比較してみる]]></title><description><![CDATA[

 TD;LR
Python はファイルシステムを操作するための 2 つの主要なモジュール pathlib と os.path を提供している。
どちらのモジュールも、ファイルやディレクトリの発見、作成、変更、削除を行う機能を提供するが、コードの可読性や理解のしやすさの観点でどちらが扱いやすいかを比較した。
pathlib の方がコードを簡潔に記述できるため、扱いやすいと感じた。

 os.path モジュール
os.path モジュールは、Python でファイルパスを操作するためのツールを提供します。主な機能には、ファイルやディレクトリの存在確認（os.path.exists）、絶...]]></description><link>https://zenn.dev/gixo/articles/211529ae6c2158</link><guid isPermaLink="true">https://zenn.dev/gixo/articles/211529ae6c2158</guid><pubDate>Tue, 24 Sep 2024 01:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xl5BOjql--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pathlib%2520%25E3%2581%25A8%2520os.path%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2595%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Yuji%2520Tsuritani%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYTBiZjE4NjMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25AE%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JkYzZkZjE2NmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuji Tsuritani</dc:creator></item><item><title><![CDATA[関数型プログラミングをPythonで実践しよう - #1 まずは書いてみる -]]></title><description><![CDATA[
change log
2024/09/24 初版公開



 はじめに
本記事では、Pythonを用いて関数型プログラミングの基本概念を解説し、実際にプログラムを作成しながらその実践方法を整理します。
関数型プログラミングは、値を許容しない「イミュータブルなデータ」と「純粋関数」を中心としたアプローチで、コードの安全性や再利用性を高める手法です。

 対象読者
本記事は、以下のような方々に向けて書かれています。

関数型プログラミングの基本に触れて、実際に試してみたい方
Pythonで関数型プログラミングを始めたいが、どこから手を付ければよいか迷っている方


 対象外の読者
以下のよ...]]></description><link>https://zenn.dev/acntechjp/articles/67c336eb4f92e2</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/67c336eb4f92e2</guid><pubDate>Mon, 23 Sep 2024 23:45:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pzYHAQ6_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%2520-%2520%25231%2520%25E3%2581%25BE%25E3%2581%259A%25E3%2581%25AF%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:naoto.a.kimura%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2YTRiM2QwYWEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>naoto.a.kimura</dc:creator></item><item><title><![CDATA[【Python】threading]]></title><description><![CDATA[Python でスレッドの使い方をざっくりと把握していきます。

 使ってみる

 １スレッド
まずはともあれスレッドを作成、実行していきます。
import time
import datetime
import threading

def func():
    print(
        "Thread:",
        threading.current_thread().name,
        "starting at",
        datetime.datetime.now()
    )

    # sleep 3 seconds
    time.sl...]]></description><link>https://zenn.dev/zulinx86/articles/python-threading</link><guid isPermaLink="true">https://zenn.dev/zulinx86/articles/python-threading</guid><pubDate>Mon, 23 Sep 2024 15:13:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3xdiE5B0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E3%2580%2590Python%25E3%2580%2591threading%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zulinx86%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyZjYzMDk2NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zulinx86</dc:creator></item><item><title><![CDATA[【Django】ブログアプリを作ろう！2]]></title><description><![CDATA[
 はじめに
!
推敲しようと思ったら永遠に上げられない気がしたので、8 割方メモ状態で無理やりアップしました。
ご了承ください。

この記事を書くきっかけは、Django の勉強を始めて、いざブログアプリを作ろうとしたらどうにもうまくいかなかったことにあります。
初学者なので間違っている部分、効率の悪い部分などあるかもしれませんがご了承ください。
勉強しながら、ブログアプリを作りながらこれを書いているので、おそらくなぞっていけば私と同じように進められるはずです。
こちらの記事の続編です。一度完成まで持っていったブログアプリに、新しい機能をつけてみましょう！

 要件
今回追加する機能は...]]></description><link>https://zenn.dev/ramu_k/articles/20240923-django-blog-image</link><guid isPermaLink="true">https://zenn.dev/ramu_k/articles/20240923-django-blog-image</guid><pubDate>Mon, 23 Sep 2024 14:08:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oZbh18we--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Django%25E3%2580%2591%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25EF%25BC%25812%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ramu%2520Karita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4Y2U2NjJiMWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ramu Karita</dc:creator></item><item><title><![CDATA[PythonによるWINフォーマット地震波形の読み込みモジュール]]></title><description><![CDATA[
柔軟性・コード作成効率が高いPythonで，WINに特化したライブラリを作成した．
WINシステムをインストールしていない環境でも，Pythonユーザーであれば容易にデータを読み込み，プロット，処理できる．

 背景

 知識

WINシステム:
WINフォーマットのデータを扱うためのC, Fortranのプログラム群．
WINフォーマット:
日本国内で実質的な共通規格として用いられている，地震波形データのフォーマット．


 現状の問題点

Pythonの地震波形処理ライブラリObsPyによるWINの読み込みは不十分．

年の処理(90年代のデータが「2090年」のように誤解釈される...]]></description><link>https://zenn.dev/kigishi/articles/818ab782dbbfa1</link><guid isPermaLink="true">https://zenn.dev/kigishi/articles/818ab782dbbfa1</guid><pubDate>Mon, 23 Sep 2024 13:48:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OysUHwDo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWIN%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E5%259C%25B0%25E9%259C%2587%25E6%25B3%25A2%25E5%25BD%25A2%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmNWJlODc0MzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kei</dc:creator></item><item><title><![CDATA[【Python】pipコマンドが使えない... 対処法]]></title><description><![CDATA[
 ぼくの状況
使用環境はubuntu。
以下のようにpythonはインストール済みでした。
➜ python --version
Python 3.10.15
しかし、pip install ｛何か｝コマンドを押すと、そこで止まってしまっていました。
ctrl + Cを押すまで、フリーズしたままです。

 pipのバージョンをアップデート
以下のコマンドを使って、pipのバージョンをアップデートすると、使えるようになりました。
curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10

 おまけ
pipはインストールしているが...]]></description><link>https://zenn.dev/hovinci/articles/45d56267a3d098</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/45d56267a3d098</guid><pubDate>Mon, 23 Sep 2024 12:19:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lbNxA4cf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591pip%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584...%2520%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYTE5NmI1NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[AtCoder - Cross Sum -]]></title><description><![CDATA[
 AtCoder Cross Sum

 問題リンク
AtCoder Typical90 D

 解法
この問題では、各マスに対して、同じ行または同じ列にあるマスの値の合計を求める必要があります。以下のアプローチで解きます。

 アプローチ


行ごとの合計と列ごとの合計を計算

各行の合計をrow_sumsに格納します。
各列の合計をcol_sumsに格納します。



各マスの答えを計算

マス(i, j)の答えは「行iの合計」＋「列jの合計」から「マス(i, j)」の値を引いたものです。




 ステップ

行ごとの合計を計算する。
列ごとの合計を計算する。
マス(i, j)に...]]></description><link>https://zenn.dev/sakai13/articles/bc97beec225912</link><guid isPermaLink="true">https://zenn.dev/sakai13/articles/bc97beec225912</guid><pubDate>Mon, 23 Sep 2024 11:55:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YTzZKe5b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:AtCoder%2520-%2520Cross%2520Sum%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sakai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OWI1OWY3NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sakai</dc:creator></item><item><title><![CDATA[AtCoder - Score Sum Queries -]]></title><description><![CDATA[
 AtCoder - Score Sum Queries

 問題リンク
AtCoder Typical90 J

 解法
この問題は、範囲クエリに対する累積和（prefix sum）の応用で解くことができます。

 アプローチ


累積和の事前計算

各クラスごとに累積和を計算します。



効率的な範囲内合計の計算

各クエリに対して、事前に計算した累積和を用いて範囲内の合計を求めます。




 ステップ

1組と2組の生徒それぞれの点数に対する累積和を別々に持つ配列を作成します。
各クエリに対して、指定された範囲で累積和を使い、合計を計算します。


 実装
# 入力の読み込み...]]></description><link>https://zenn.dev/sakai13/articles/dd8f25f40ee293</link><guid isPermaLink="true">https://zenn.dev/sakai13/articles/dd8f25f40ee293</guid><pubDate>Mon, 23 Sep 2024 11:53:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PGfIobi3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AtCoder%2520-%2520Score%2520Sum%2520Queries%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sakai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OWI1OWY3NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sakai</dc:creator></item><item><title><![CDATA[AtCoder - Cubic Cake -]]></title><description><![CDATA[
 問題リンク
AtCoder Typical90 V

 考え方
幅 ( A )、奥行き ( B )、高さ ( C ) の直方体をすべて立方体にするための最小の立方体の辺の長さは、( A )、( B )、( C ) の最大公約数（GCD）を求め、それを基準に切断すれば良いです。

例えば、( A=2, B=2, C=3 ) の場合、最大公約数は 1 なので、全てのピースを ( 1 × 1 × 1 ) の立方体にする必要があります。
( A=4, B=4, C=2 ) の場合、最大公約数は 2 なので、全てのピースは ( 2 × 2 × 2 ) の立方体にできます。


 解法

直方体...]]></description><link>https://zenn.dev/sakai13/articles/7886dc85f50cd8</link><guid isPermaLink="true">https://zenn.dev/sakai13/articles/7886dc85f50cd8</guid><pubDate>Mon, 23 Sep 2024 11:50:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y0GanuHu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:AtCoder%2520-%2520Cubic%2520Cake%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sakai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OWI1OWY3NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sakai</dc:creator></item><item><title><![CDATA[AtCoder - Sign Up Requests -]]></title><description><![CDATA[
 問題リンク
AtCoder Typical90 D

 解法
この問題では、ユーザー名の重複を防いで、初めて受理された日を記録するというタスクを効率的に処理します。

 1. ユーザ名の管理

ユーザー名がすでに登録されているかどうかを高速に確認するために、set（集合）を使います。setは要素の追加・検索が平均 ( O(1) ) で行えるので、数が多くても高速に処理できます。

 2. 処理の流れ


ユーザー名の一覧を1日ずつ確認し、まだ登録されていないユーザー名なら、その名前をsetに追加し、初めて受理された日（インデックス + 1）を記録します。
最終的に、記録された日をリス...]]></description><link>https://zenn.dev/sakai13/articles/8761828d871858</link><guid isPermaLink="true">https://zenn.dev/sakai13/articles/8761828d871858</guid><pubDate>Mon, 23 Sep 2024 11:48:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d3t1F4IH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:AtCoder%2520-%2520Sign%2520Up%2520Requests%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sakai%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2OWI1OWY3NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sakai</dc:creator></item><item><title><![CDATA[206. Reverse Linked Listの解き方について]]></title><description><![CDATA[
 問題文

Given the head of a singly linked list, reverse the list, and return the reversed list.

Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]


 考え方

prevとcurrをそれぞれ宣言し、上記のようなイメージで配置させます。
prev = None
curr = head

currとcurr.nextのリンクを切り、currとprevを繋ぎます。

prevをcurrの位置に持ってきます。

currを次のポイントに持ってきます。
これをc...]]></description><link>https://zenn.dev/daiten/articles/0679ab808b71c2</link><guid isPermaLink="true">https://zenn.dev/daiten/articles/0679ab808b71c2</guid><pubDate>Mon, 23 Sep 2024 11:46:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3h4xm8ng--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:206.%2520Reverse%2520Linked%2520List%25E3%2581%25AE%25E8%25A7%25A3%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daitenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MzllZjg1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daitenn</dc:creator></item><item><title><![CDATA[AsanaAPIでプロキシを通過できずにハマった話]]></title><description><![CDATA[※まえがき：タイトルに偽りはないのですが、実は単純なurllib3のお話だったりするかも
はじめまして。最近はAWS認定試験にお熱の大吉（だいきち）です。
先週、プロキシサーバを経由しなければ問題なくプログラムが動作するが、プロキシサーバを経由させた途端に407エラー（プロキシ認証失敗）が返ってくる…という現象に苛まされておりました。
Qiitaと迷いましたが、こちらの方がマサカリが飛び交うことは無さそうだなと思ったので、先週ハマったことを主に備忘録として書き残しておこうと思います。
突然ですが、私の勤務先ではAsanaというタスク管理ツールを利用しています。
RedmineやJIRA、...]]></description><link>https://zenn.dev/daikichi7/articles/5e6ff1935d5a94</link><guid isPermaLink="true">https://zenn.dev/daikichi7/articles/5e6ff1935d5a94</guid><pubDate>Mon, 23 Sep 2024 10:26:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BPpfQRQb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AsanaAPI%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2582%2592%25E9%2580%259A%25E9%2581%258E%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259A%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25A4%25A7%25E5%2590%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc4NjFhYTQ3MGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>大吉</dc:creator></item><item><title><![CDATA[楽天商品の価格通知アプリをつくりました]]></title><description><![CDATA[
 概要
個人開発で楽天商品のお買い得情報をLINE通知するWebアプリを作りました。

楽天価格通知アプリ
ソースコード

このアプリは自分がほしいものリストに追加した楽天の商品がセールなどで安くなったら、LINE 通知してくれる web アプリケーションです。

 想定ユーザー
自分用に作ったのでユーザーは自分だけです。
なので今のところ認証機能はありません。

 使用技術

 フロントエンド

TypeScript 4.5.4

Next.js 14.0.4

MUI 5.15.20



 バックエンド

Python 3.12



 インフラ

Docker
AWS

Lam...]]></description><link>https://zenn.dev/ryouta26/articles/0bfda1e6c22e36</link><guid isPermaLink="true">https://zenn.dev/ryouta26/articles/0bfda1e6c22e36</guid><pubDate>Mon, 23 Sep 2024 10:11:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AJd0YJpo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A5%25BD%25E5%25A4%25A9%25E5%2595%2586%25E5%2593%2581%25E3%2581%25AE%25E4%25BE%25A1%25E6%25A0%25BC%25E9%2580%259A%25E7%259F%25A5%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ryouta.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2ZjIyNTZmYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ryouta.js</dc:creator></item><item><title><![CDATA[【Python】スクレイピングでヤフオクの自動延長なし商品を抽出する]]></title><description><![CDATA[Pythonはなんやかんやで好きな泉（@izumin_0401）です。
普段せどりをするんですが、ヤフオクのスクレイピングをしたい場面があったのでツールを作りました。
!
スクレイピングする際はサーバに迷惑をかけないようにしましょう。


 ブログ記事はこちら
https://traveler0401.com/python-auction-yahoo-tool/

 ヤフオクの自動延長なし商品とは？
ヤフオクは基本的にオークション形式なので、落札時間直前に入札が入ると自動で時間が延長されます。
時間が延長されれば価格が競り上がるので出品者としてはありがたいわけですが、たまに自動延長の設定...]]></description><link>https://zenn.dev/izumin_0401/articles/a7d021a51a5b93</link><guid isPermaLink="true">https://zenn.dev/izumin_0401/articles/a7d021a51a5b93</guid><pubDate>Mon, 23 Sep 2024 08:48:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uu8pmFqP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2594%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2583%25A4%25E3%2583%2595%25E3%2582%25AA%25E3%2582%25AF%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%25BB%25B6%25E9%2595%25B7%25E3%2581%25AA%25E3%2581%2597%25E5%2595%2586%25E5%2593%2581%25E3%2582%2592%25E6%258A%25BD%25E5%2587%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B3%2589%25E6%25B5%25A9%25E5%2585%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExNTljYmRlNDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>泉浩兵</dc:creator></item><item><title><![CDATA[Pythonのasync/awaitを理解したい【asyncio】]]></title><description><![CDATA[
 用語
概念を理解するために、非同期処理で何が起きているかを把握します。


イベントループ：タスクをスケジュールする

タスク：コルーチンを実行し、実行結果などを管理する

コルーチン：実行や一時停止ができる処理

私たちはやりたいことをコルーチンで書いてタスクにしてイベントループに入れるだけで、イベントループがうまいこと処理してくれる、というイメージです。
ここでいううまいこととは、CPUを使わないのに何秒もかかるタスクがあるときに、代わりに別のタスクにCPUを使わせる、といった具合です。
これらのことをするために、Pythonの標準ライブラリであるasyncioを使用します。

...]]></description><link>https://zenn.dev/iharuoru/articles/45dedf1a1b8352</link><guid isPermaLink="true">https://zenn.dev/iharuoru/articles/45dedf1a1b8352</guid><pubDate>Mon, 23 Sep 2024 07:00:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GxhkeYp4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEasync%252Fawait%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2590asyncio%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJkYWQyZjhkZTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iharu</dc:creator></item><item><title><![CDATA[【Python】tqdmで進捗可視化]]></title><description><![CDATA[
 tqdmとは？
tqdmは、Pythonで進捗をプログレスバーを表示させたい時に使います。
英語のYouTubeを見てみると、普通に「ティーキューディーエム」って呼んでいました。
そもそもtqdmは、アラビア語で"進捗"を意味する"taqaddum"から来ているのと、スペイン語での "I love you so much"の略語らしいです。

 導入
pip install tqdm
または、

sudo apt-get update
sudo apt-get install python3-tqdm   # For Debian/Ubuntu

 使い方
from tqdm imp...]]></description><link>https://zenn.dev/hovinci/articles/653897d7f44293</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/653897d7f44293</guid><pubDate>Mon, 23 Sep 2024 05:52:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CBJ6pkNJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591tqdm%25E3%2581%25A7%25E9%2580%25B2%25E6%258D%2597%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYTE5NmI1NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-371｜A - Jiro]]></title><description><![CDATA[
 設問ページ

🔗ABC-371 A - Jiro



 提出結果
def getStringMap():
    return input().split()


def main():
    S = getStringMap()
    a = b = c = 0

    if S[0] == "&gt;":
        a += 1
    else:
        b += 1

    if S[1] == "&gt;":
        a += 1
    else:
        c += 1

    if S[2] == "&gt;":
       ...]]></description><link>https://zenn.dev/hyperdb/articles/f7144a1bce414d</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/f7144a1bce414d</guid><pubDate>Mon, 23 Sep 2024 05:16:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wmHTNk06--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-371%25EF%25BD%259CA%2520-%2520Jiro%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-371｜B - Taro]]></title><description><![CDATA[
 設問ページ

🔗ABC-371 B - Taro



 提出結果
def getIntMap():
    return map(int, input().split())


def getStringListRow(N):
    return [list(input().split()) for _ in range(N)]


def main():
    N, M = getIntMap()
    AB = getStringListRow(M)

    c = [0] + [0 for _ in range(N)]

    for A, B in AB:
   ...]]></description><link>https://zenn.dev/hyperdb/articles/e9468a651c028f</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/e9468a651c028f</guid><pubDate>Mon, 23 Sep 2024 05:16:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--S3OHoRpM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-371%25EF%25BD%259CB%2520-%2520Taro%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[異星のruff]]></title><description><![CDATA[
 なにこれ
Python用のツール。
以下の役割を担う。

静的解析
フォーマッター
リンター
インポートソーター


 なにが嬉しいの？

1個だけ入れればOKになる。

プラグインの追加が不要。
isortとかflake8とか不要。


動作が早い。

Rustでできてる。
ruff-lspという専用LSP内蔵。


自動修正機能搭載。

エディタからもCLIからも修正可能。


設定しやすい。

既存のライブラリ（isortやflake8とか）のルールがそのまま使えると思ってOK

pyproject.tomlとかruff.tomlにルールを設定できる。


様々なエディタで利用...]]></description><link>https://zenn.dev/behike56/articles/35f2d46def1aa2</link><guid isPermaLink="true">https://zenn.dev/behike56/articles/35f2d46def1aa2</guid><pubDate>Mon, 23 Sep 2024 04:53:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sUcPlnxC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:%25E7%2595%25B0%25E6%2598%259F%25E3%2581%25AEruff%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25BE%258A%25E9%25A3%25BC%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkMTg0MTkyNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>羊飼い</dc:creator></item></channel></rss>