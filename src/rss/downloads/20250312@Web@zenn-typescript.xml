<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 12 Mar 2025 06:47:50 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[npmについての最低限知識]]></title><description><![CDATA[
 npmとは
Node Package Managerというパッケージマネージャー

 パッケージマネージャーとは？
ソフトウェア開発において必要な「部品」（ライブラリやフレームワークなど）を探して、インストールし、更新し、管理するためのツール。
パッケージマネージャーがなければ、必要なコードを自分で探してダウンロードし、正しい場所に配置し、バージョンを確認し、更新を手動で行う必要がある。
パッケージマネージャーはこれらの作業を自動化して、開発者がコードの作成に集中できるようにしてくれる。

 主な役割

 パッケージのインストール:
必要なコードをインターネットから自動的に探してダウ...]]></description><link>https://zenn.dev/gdf_takahashi/articles/d99de7ee4ed0dc</link><guid isPermaLink="true">https://zenn.dev/gdf_takahashi/articles/d99de7ee4ed0dc</guid><pubDate>Wed, 12 Mar 2025 05:18:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iD2J3kvn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:npm%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AE%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25AB%2598%25E6%25A9%258B%2520%25E9%2581%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1FoMHB4MkdnWXBCSXJKS2VVT0lwb0VPTS03N2stSUpWaGk2TWJncTYzbE1TbUt0bz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>高橋 遼</dc:creator></item><item><title><![CDATA[10x高速なTypeScript ~TSがTSで実装される時代の終わりの始まり?~]]></title><description><![CDATA[昨夜TypeScriptの開発チームから"A 10x Faster TypeScript"という記事が公開されました。
ざっくりいうと、TypeScriptの（コンパイラ、型システムの）実装をgolangに移植したという話です。
現時点でどれくらい実用的なレベルに達しているのか気になりますが、これまでのTypeScriptによるTypeScriptの実装のコードベースやVSCodeのコードベースを正常にロードできるようです。
VSCodeのコードベース(1,505,000行)のロード時間が77.8秒から7.5秒と、10.4倍に高速化されたということで、タイトルの通り偽りなく革命が起きよう...]]></description><link>https://zenn.dev/terass_dev/articles/d9335be2a69c85</link><guid isPermaLink="true">https://zenn.dev/terass_dev/articles/d9335be2a69c85</guid><pubDate>Wed, 12 Mar 2025 02:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--23C74io8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:10x%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AATypeScript%2520%7ETS%25E3%2581%258CTS%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AE%25E7%25B5%2582%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AE%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258A%253F%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuji%2520Koike%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjJkODQzYTQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Terass%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pEbVBmbmlNbWVFZDVmZzBldXN6Z1hhYnVzX0Y1WnprNkFJVTRCPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shuji Koike</dc:creator></item><item><title><![CDATA[私のよく使うソフトウェアアーキテクチャの雛型]]></title><description><![CDATA[
 サンプルプロジェクト

https://github.com/m10maeda/itddd


 構成
イベント駆動と CQRS を意識した、レイヤードアーキテクチャをベースとしたヘキサゴナルアーキテクチャになります。


 各層について
レイヤードアーキテクチャをベースに、以下の4層に分けています。



プレゼンテーション層: ソフトウェアの入出力を担当

アプリケーション層: ソフトウェアのユースケースを担当

ドメイン層: ドメイン知識を元にしたビジネスのルールや制約、プロセスを担当

インフラストラクチャー層: 技術的関心ごとの全般を担当


 ディレクトリ構成
domai...]]></description><link>https://zenn.dev/m10maeda/articles/my-favorite-architecture-blueprint</link><guid isPermaLink="true">https://zenn.dev/m10maeda/articles/my-favorite-architecture-blueprint</guid><pubDate>Wed, 12 Mar 2025 02:34:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M99qutaN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%2581%25E3%2581%25AE%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E3%2582%25A6%25E3%2582%25A7%25E3%2582%25A2%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2581%25AE%25E9%259B%259B%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2589%258D%25E7%2594%25B0%25E3%2581%25BF%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZlMWY3YjBkZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>前田みお</dc:creator></item><item><title><![CDATA[ShadcnのDropdown MenuとDialogを組み合わせる]]></title><description><![CDATA[
 実装できるもの


 実装コード
"use client";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  Dropdown...]]></description><link>https://zenn.dev/r2727/articles/8ff0f5cfa39e92</link><guid isPermaLink="true">https://zenn.dev/r2727/articles/8ff0f5cfa39e92</guid><pubDate>Wed, 12 Mar 2025 02:09:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--M7GEEyjA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Shadcn%25E3%2581%25AEDropdown%2520Menu%25E3%2581%25A8Dialog%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E5%2590%2588%25E3%2582%258F%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:r2727%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5MDNiYmFmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>r2727</dc:creator></item><item><title><![CDATA[管理画面リニューアルで、脆弱性対策&高速な開発環境を実現]]></title><description><![CDATA[こんにちは、GENIEE CHAT機能開発チームリーダーの鎌原です。
GENIEE CHATでは現在、管理画面のリニューアルプロジェクトが進行中です。


デザインそのものもモダンに変わっていますが、それ以上にライブラリやディレクトリ構成などが大きくブラッシュアップされました。
本記事では、この移行のプロジェクトの概要と気をつけたポイントや学んだこと・反省点等をご紹介させていただきたいと思います。

 移行プロジェクトの概要
移行前の管理画面には主に2つの課題がありました。

 1. 脆弱性の更新対象のパッケージが多く、手間がかかる
弊社ではプロダクトの脆弱性を定期的に確認して、都度対応...]]></description><link>https://zenn.dev/geniee/articles/a35d7665c58d5a</link><guid isPermaLink="true">https://zenn.dev/geniee/articles/a35d7665c58d5a</guid><pubDate>Wed, 12 Mar 2025 01:48:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qkFl1uC2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2583%25AA%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%25A7%25E3%2580%2581%25E8%2584%2586%25E5%25BC%25B1%25E6%2580%25A7%25E5%25AF%25BE%25E7%25AD%2596%2526%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AA%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kkaznor1%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyMmViZTNjMjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:GENIEE%2520TechBlog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0NDMwOThhN2YuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kkaznor1</dc:creator></item><item><title><![CDATA[TypeScriptを使って学ぶSOLID原則2 ”オープン/クローズドの原則（Open/Closed  Principle）”]]></title><description><![CDATA[
 モチベーション
ソフトウェアを設計する際に重要な5つのガイドラインであるSOLID原則について学んでいます。
そのアウトプットの一環で記事を執筆しています。
前回は単一責任の原則（Single Responsibility Principle）についてアウトプットを行いました。
https://zenn.dev/ayut0/articles/dfd0df8c0be114
今回はオープン/クローズドの原則（Open/Closed Principle） についてのアウトプットを行います。

 オープン/クローズドの原則（Open/Closed Principle）とは
オープン/クローズ...]]></description><link>https://zenn.dev/ayut0/articles/56b658ab764abf</link><guid isPermaLink="true">https://zenn.dev/ayut0/articles/56b658ab764abf</guid><pubDate>Tue, 11 Mar 2025 23:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--97tV-xgP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6SOLID%25E5%258E%259F%25E5%2589%25872%2520%25E2%2580%259D%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%252F%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25BA%25E3%2583%2589%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25EF%25BC%2588Open%252FClosed%2520%2520Prin...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:A3yut0%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h3d1FoeGFydTFVMjN1MFJ0MnBmUVBjWUZ2dkNTa0RBYmlxWEo4U1NBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>A3yut0</dc:creator></item><item><title><![CDATA[Astroで作るブログの仕組み]]></title><description><![CDATA[
 Astroでつくるブログの仕組み解説

 はじめに
こんにちは、坂爪です。この記事ではAstroを使ったブログシステムの基本的な仕組みについて解説します。Astroの特徴からディレクトリ構成、そして実際の実装方法まで、順を追って説明していきます。

 前提条件
この記事を理解するためには、以下の知識が必要です：

基礎的なWEBの仕組みやJavaScriptの理解


 Astroとは

Astroは、ブログやマーケティング、eコマースなど、コンテンツ駆動のウェブサイトを作成するためのウェブフレームワークです。Astroは、新しいフロントエンドアーキテクチャを開拓し、他のフレームワー...]]></description><link>https://zenn.dev/dume5579/articles/6ee7ee1e6b1231</link><guid isPermaLink="true">https://zenn.dev/dume5579/articles/6ee7ee1e6b1231</guid><pubDate>Tue, 11 Mar 2025 16:02:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pb2ioK5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Astro%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%259D%2582%25E7%2588%25AA%2520%25E8%25AA%25A0%25E4%25BA%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0Y2U4MmU3OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>坂爪 誠人</dc:creator></item><item><title><![CDATA[React×Vite×Tailwind CSSの環境構築]]></title><description><![CDATA[
 はじめに
React×Viteのフロントエンド開発でよく使うTailwind CSSの環境構築について忘れがちなのでまとめておきます(2025/3/11時点)。TypeScriptでもJavaScriptでも手順は同じです。
2025年1月にTailwind CSSの新バージョンv4が公開され、それまでとインストール方法が変更されました。

 Tailwind CSSとは？
Tailwind CSSは、HTMLのクラス名に直接CSSを指定することでスタイルを適用するCSSのフレームワークです。
https://tailwindcss.com/
HTMLとCSSのファイルを行き来する必...]]></description><link>https://zenn.dev/ashunar0/articles/4279a7d38d882b</link><guid isPermaLink="true">https://zenn.dev/ashunar0/articles/4279a7d38d882b</guid><pubDate>Tue, 11 Mar 2025 13:38:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EmJmT3tS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25C3%2597Vite%25C3%2597Tailwind%2520CSS%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25AA%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVJSTJuOHVoRXhKNjdHbGllMWo4M2VyVUJDeDJPS09TVnBtaHhjdmFYVjA4T1Z1c209czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あすなろ</dc:creator></item><item><title><![CDATA[CDKでNatGatewayのIPアドレスをOutputsに出力する]]></title><description><![CDATA[
 概要
CDKで作成した別スタックで定義されたNatGatewayのIPアドレスを取得したくなった。
別スタックから取得できるように
ALBのリスナーでNatGatewayを通る通信だけ許可したかったため。
#　やり方
// NatGatwayのPublicIpを取得する関数
const getNatgwIp = (vpc: IVpc): string[] =&gt; {
    // vpcにあるnat gatwayを全て取得する
    const natgws = vpc.node.findAll().filter(
        (child) =&gt; child ins...]]></description><link>https://zenn.dev/kiitosu/articles/4bba99745d6781</link><guid isPermaLink="true">https://zenn.dev/kiitosu/articles/4bba99745d6781</guid><pubDate>Tue, 11 Mar 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3eN5uWI---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDK%25E3%2581%25A7NatGateway%25E3%2581%25AEIP%25E3%2582%25A2%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%2592Outputs%25E3%2581%25AB%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiitosu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzJBNDNaZzRhRzk5b0NEMm5aMFY1RDJISlVUVGtySVB4UWhtaXU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiitosu</dc:creator></item><item><title><![CDATA[Honoでcurlコマンドを使うときのエラー]]></title><description><![CDATA[
 発生した経緯
HonoでAPI開発中、作成したリクエストをVScodeのターミナル上でリクエストを送ったところ、エラーが発生した。
API（デフォルトで記載されているもの）
app.get("/", (c) =&gt; {
  return c.text("Hello Hono!");
});
コマンド
curl -X GET http://localhost:3000
エラー
Invoke-WebRequest : パラメーター名 'X' に一致するパラメーターが見つかりません。

 考えられる原因
curl コマンドが Invoke-WebRequest として解釈されるのは、W...]]></description><link>https://zenn.dev/ashunar0/articles/f0f4f406d49952</link><guid isPermaLink="true">https://zenn.dev/ashunar0/articles/f0f4f406d49952</guid><pubDate>Tue, 11 Mar 2025 08:18:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--44-SpoAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25A7curl%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2599%25E3%2581%25AA%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVJSTJuOHVoRXhKNjdHbGllMWo4M2VyVUJDeDJPS09TVnBtaHhjdmFYVjA4T1Z1c209czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あすなろ</dc:creator></item><item><title><![CDATA[【TypeScript】基本的なコンパイル方法とtsconfigの設定]]></title><description><![CDATA[
 コンパイル方法

 対象のファイルをコンパイル
引数で指定したファイルをコンパイルします
tsc index.ts

 ウォッチモードでのコンパイル
引数で指定したファイルの変更を監視し、変更があった場合は自動でコンパイルします
tsc index.ts --watch
tsc index.ts -w

 プロジェクト全体のコンパイル

 1.tsconfig.jsonを生成
以下のコマンドを実行することでtsconfig.jsonが生成されます
tsconfig.jsonにコンパイルの設定を記述します
tsc --init

 2.コマンド実行
ディレクトリ内の.tsファイルが全て...]]></description><link>https://zenn.dev/yoshida_taro/articles/4234455ef9b34b</link><guid isPermaLink="true">https://zenn.dev/yoshida_taro/articles/4234455ef9b34b</guid><pubDate>Tue, 11 Mar 2025 06:36:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3WGj1yyt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8tsconfig%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2590%2589%25E7%2594%25B0%2520%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NjM2YjY3NDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>吉田 たろう</dc:creator></item><item><title><![CDATA[download.ts]]></title><description><![CDATA[import axios from 'axios'

export interface IDownloadOptions {
  timeout?: number
  // UI update or logs record
  onCancel?: () =&gt; void
}

export interface IDownloadResult {
  cancel: () =&gt; void
  download: Promise&lt;Blob&gt;
}

export const createDownload = (url: string, options: IDownloa...]]></description><link>https://zenn.dev/tokoshiekou/articles/d1450878e58cbe</link><guid isPermaLink="true">https://zenn.dev/tokoshiekou/articles/d1450878e58cbe</guid><pubDate>Tue, 11 Mar 2025 04:22:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yLOUF27Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:download.ts%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2588%25E3%2582%25B3%25E3%2582%25B7%25E3%2582%25A8%25E3%2582%25B3%25E3%2582%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmdsemdMMzQtZURZN1RKbDJEYTc3bmpyVFo2WkR3TmQ2ZkpWRHRHcF9rOWI5SnRvaz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>トコシエコウ</dc:creator></item><item><title><![CDATA[TS の using でプリントデバッグを確率的にサンプリングして出力する]]></title><description><![CDATA[スコープ単位でログをサンプリングする。
{
  using log = createSampleLog&lt;string&gt;(5);
  log("a");
  log("b");
  // スコープを抜けるときに最大5件サンプリングされて表示される
}
using の使い所

 やりたかったこと
Cline が勝手にデバッグログを仕込みまくって膨大なログを食ってトークンを使いまくるので、そもそも出力するログに上限を設定したい。
ロガーは初期化したスコープに依存して、抜ける時に吐き出す。

 前提知識: using と Symbol.dispose
スコープから抜けるときの処理を書...]]></description><link>https://zenn.dev/mizchi/articles/ts-using-sampling-logger</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ts-using-sampling-logger</guid><pubDate>Tue, 11 Mar 2025 03:05:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z-zq9Kcg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TS%2520%25E3%2581%25AE%2520using%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2587%25E3%2583%2590%25E3%2583%2583%25E3%2582%25B0%25E3%2582%2592%25E7%25A2%25BA%25E7%258E%2587%25E7%259A%2584%25E3%2581%25AB%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2597%25E3%2581%25A6%25E5%2587%25BA%25E5%258A%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[satisfiesでmetaの型を定義したstorybookのファイルでtsのエラーが起きる]]></title><description><![CDATA[
 はじめに
Next.jsでStorybookを使用し、satisfiesを利用してmetaの型定義を行った際に、以下のエラーが発生しました。
Expression produces a union type that is too complex to represent.
このエラーが発生した状況と、その解決方法について解説します。

 エラーが出た時の状況

Next.jsのpage.tsxが106個を超えたあたりからエラーが発生。

106個という数に特に意味はないと思われる。
ページを追加するとエラーが発生する。ページを削除するとエラーが起きない。



satisfiesを...]]></description><link>https://zenn.dev/chot/articles/3d10f249257c70</link><guid isPermaLink="true">https://zenn.dev/chot/articles/3d10f249257c70</guid><pubDate>Tue, 11 Mar 2025 01:19:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QLQjuH-Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:satisfies%25E3%2581%25A7meta%25E3%2581%25AE%25E5%259E%258B%25E3%2582%2592%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%259Fstorybook%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A7ts%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E8%25B5%25B7%25E3%2581%258D%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:o_ken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzODVjOWFlYzkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:chot%2520Inc.%2520tech%2520blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhNDAyNzUyMzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>o_ken</dc:creator></item><item><title><![CDATA[React19にアップグレードに挑戦してみた話]]></title><description><![CDATA[こんにちは、WED 株式会社でエンジニアをしている篠崎（@sinora_）です。
WED が開発・運営している、レシート買取アプリ「ONE」はアプリのみで展開していますが、
その「ONE」の運用で使用する管理画面は Next.js を採用しております。
最近管理画面の開発にアサインされることになり、フロントエンド側を書く機会がとても増えまして、自分の学習がてら 2024 年 12 月にリリースされた React19 のアップグレードにチャレンジしてみようと思い、
その軌跡を備忘録としてここに記述していこうと思います。

 なぜアップグレードしようと思ったのか？
forwardRef を使...]]></description><link>https://zenn.dev/wed_engineering/articles/20250303-react19-upgrade</link><guid isPermaLink="true">https://zenn.dev/wed_engineering/articles/20250303-react19-upgrade</guid><pubDate>Tue, 11 Mar 2025 01:14:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CCi4hs-A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React19%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sinora%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYjlmMzI3YWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:WED%2520Engineering%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3MWM1NjVkM2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sinora</dc:creator></item><item><title><![CDATA[Denoで社内ツールを作る]]></title><description><![CDATA[
 はじめに
社内業務を効率化するためのツールとして、キャッチアップも兼ねてDenoでCLIを作ってみました。
Cliffyの使い方についてのメモや、Denoを触る上で迷ったところをまとめていきます。

 Denoのインストール
まずはDenoをインストールします。
詳しいインストール方法は公式サイトを参照ください。
MacOSの場合は以下のコマンドでインストールできます。
brew install deno
もしくは
curl -fsSL https://deno.land/install.sh | sh

 プロジェクトの作成
Denoではdeno initコマンドでプロジェクトを作...]]></description><link>https://zenn.dev/aidemy/articles/deno-for-internal-tool-20250307</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/deno-for-internal-tool-20250307</guid><pubDate>Mon, 10 Mar 2025 23:57:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--at0D32Ry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Deno%25E3%2581%25A7%25E7%25A4%25BE%25E5%2586%2585%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2584%25E3%2583%2581%25E3%2583%258E%25E3%2582%25B3%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDk2MGJlYzIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ツチノコ</dc:creator></item><item><title><![CDATA[react-hook-quillの紹介]]></title><description><![CDATA[
 はじめに
react-hook-quillというQuillの軽量ラッパーを開発したので紹介します。
QuillはSlabが開発をしているリッチテキストエディタです。QuillはReactなどのライブラリの上に構築されておらず、TypeScriptで開発されており、Reactで使うためにはReact用の実装を追加する必要があります。
すでにいくつかのReactとQuillの連携用のライブラリはありますが、Quillの提供するAPIが連携用のライブラリ側でふさがれていることがある等、ユースケースによっては課題が生じそうなものがあったため、新たに開発を行いました。
下記はreact-hoo...]]></description><link>https://zenn.dev/kozmof/articles/e2fcd86320ca12</link><guid isPermaLink="true">https://zenn.dev/kozmof/articles/e2fcd86320ca12</guid><pubDate>Mon, 10 Mar 2025 22:30:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6l4zV0uX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:react-hook-quill%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kozmof%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4ODc5ZmYyMWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kozmof</dc:creator></item><item><title><![CDATA[HTML Emailも React + Tailwind CSS で書ける時代キテた]]></title><description><![CDATA[
gm! エルソウルラボ、Validators DAO の kishi.sol です。
フロントエンド開発の世界は、ReactやTailwind CSSをはじめとするオープンソース技術の進化によって劇的に改善され、スピーディかつ高品質なUIを構築する環境が整いました。
コンポーネントベースの開発スタイルが定着したことで、保守性が高まり、コードを資産として残せるようになったことは間違いありません。かつてレスポンシブレイアウトに苦戦したのも今や昔話で、Tailwindのエコシステムを活用すれば誰もが簡単に美しくモダンなWeb UIを作成できるようになっています。
しかし一方で、私たちを悩ませ...]]></description><link>https://zenn.dev/ki4themecha2q/articles/ba899a101ff695</link><guid isPermaLink="true">https://zenn.dev/ki4themecha2q/articles/ba899a101ff695</guid><pubDate>Mon, 10 Mar 2025 18:19:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k9e-QjEE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%2520Email%25E3%2582%2582%2520React%2520%252B%2520Tailwind%2520CSS%2520%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%25E6%2599%2582%25E4%25BB%25A3%25E3%2582%25AD%25E3%2583%2586%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kishi.sol%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyOTgzY2I3N2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kishi.sol</dc:creator></item><item><title><![CDATA[【Next.js】Firebase Authenticationのカスタムクレームで管理者ログインを実装]]></title><description><![CDATA[
 はじめに
Firebase Authenticationを使用してFirebaseの管理者権限がないユーザーはログインできないようにする認証機能を実装しました。
実装方法だけでなく、設計や考え方について説明しているため、Firebase Authenticationを使用しない場合でも読むことができる内容になっています。
バックエンドはExpress、フロントエンドはNext.jsを使用しており、この記事ではNext.jsの部分のみに触れています。
Next.jsのバージョン"next": "15.2.1",


 設計

 実現したいこと
アプリ上で新規ユーザーを登録する機能は不要...]]></description><link>https://zenn.dev/kiwichan101kg/articles/612658661d41ae</link><guid isPermaLink="true">https://zenn.dev/kiwichan101kg/articles/612658661d41ae</guid><pubDate>Mon, 10 Mar 2025 13:12:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lofEpANo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Next.js%25E3%2580%2591Firebase%2520Authentication%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E8%2580%2585%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kiwichan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZlYTA3YzU3YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kiwichan</dc:creator></item><item><title><![CDATA[React Router v7 + HonoをClineと共に開発した感想]]></title><description><![CDATA[
 流れ
もともと自分が作っていたWebアプリを刷新したいなぁとずっと思っていましたがなかなか重い腰が上がらず・・・
昨今の生成AIのおかげで面倒なこともサクッとできる感じがしてきたので、ちょっとやってみようか、となりました。
せっかくなのでモダンなFWとか使いたいなぁと思っていたところで、RemixとReact Routerが統合されたとのニュースを聞いたのをきっかけにReact Router v7でWebアプリを作ってみることにしました。

 前提
筆者はVueやNuxtをメインで触っているので、Reactはほぼ初心者です。
SPAやMPAの概念や知識はあるものの、Reactにおける...]]></description><link>https://zenn.dev/k4nd4/articles/1599422fca8d7f</link><guid isPermaLink="true">https://zenn.dev/k4nd4/articles/1599422fca8d7f</guid><pubDate>Mon, 10 Mar 2025 13:03:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m3J45Ks3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Router%2520v7%2520%252B%2520Hono%25E3%2582%2592Cline%25E3%2581%25A8%25E5%2585%25B1%25E3%2581%25AB%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k4nd4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyOWIyMmIyYzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k4nd4</dc:creator></item></channel></rss>