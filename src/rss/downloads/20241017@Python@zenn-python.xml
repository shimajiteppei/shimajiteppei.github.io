<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 17 Oct 2024 00:26:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[LeetCode #21 Merge Two Sorted Lists]]></title><description><![CDATA[
 問題概要
入力値：list1(Optional[ListNode]), list2(Optional[ListNode])
出力値：Optional[ListNode]
Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.
問題のリンク

 入力例
Input: list1=[1,2,4], list2=[1,3,4]
Output: [1,1,2,3,4,4]

 解答例1
計算量：O(n)
Py...]]></description><link>https://zenn.dev/pirika/articles/a2351120bfd63e</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/a2351120bfd63e</guid><pubDate>Thu, 17 Oct 2024 00:23:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7C2r6j9k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%2520%252321%2520Merge%2520Two%2520Sorted%2520Lists%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[LeetCode #257 Binary Tree Paths]]></title><description><![CDATA[
 問題概要
入力値：root([int])
出力値：[string]
Given the root of a binary tree, return all root-to-leaf paths in any order.
問題のリンク

 入力例
Input: root = [1,2,3,null,5]
Output: ["1-&gt;2-&gt;5","1-&gt;3"]

 解答例1
計算量：O(n)
Python
class Solution(object):
    def binaryTreePaths(self, root):
        """
        :t...]]></description><link>https://zenn.dev/pirika/articles/2140a96deb614f</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/2140a96deb614f</guid><pubDate>Wed, 16 Oct 2024 13:57:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lrMIeprV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%2520%2523257%2520Binary%2520Tree%2520Paths%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[Pythonにおけるログ出力について - print関数とloggingモジュールの比較 -]]></title><description><![CDATA[print関数とloggingモジュールでログを出力するのでは、具体的に何がどう違うのかな、、、とふと思い、調べたのでまとめました。
print関数とloggingモジュールは、ともにPythonでデータを出力するための方法ですが、以下のように、それぞれ異なる用途と特徴があります。

 print関数

 概要:
Pythonの組み込み関数で、データを標準出力（通常はコンソール）に表示するために使用される。

 メリット:

使い方が簡単。
追加のセットアップが不要で、すぐに使える。
小規模なスクリプトや簡単なデバッグに適している。


 デメリット:

出力のカスタマイズが限られている...]]></description><link>https://zenn.dev/ykmra/articles/f23beef0294790</link><guid isPermaLink="true">https://zenn.dev/ykmra/articles/f23beef0294790</guid><pubDate>Wed, 16 Oct 2024 12:47:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4mjN5cox--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25AD%25E3%2582%25B0%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2520-%2520print%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8logging%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ykmra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4Wm1IRjRXZjNEVGp6QXJTeEZzbkhoY0xIVzlhWkh0LWNadkp1MmI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ykmra</dc:creator></item><item><title><![CDATA[uv で poetry の virtualenvs.create false と同じことをする]]></title><description><![CDATA[
 背景
今話題の Python のパッケージマネジャーの uv 高速でいいですよね。
poetry を Dockerfile の中で使っている時は virtualenvs.create false の設定をして .venv ディレクトリを作らず直接仮想環境でない Python の環境にインストールしていたのですが、 uv のドキュメントを見ても同じような設定が見つからずできないのかな？と色々調べたら同じようなことをする方法を見つけたのでまとめておきます。

 方法
同じことが issue で質問されていて最終的にこうすればいいよと示されていました。
最初に見つけた issue
http...]]></description><link>https://zenn.dev/yamasakit/articles/0493168d963376</link><guid isPermaLink="true">https://zenn.dev/yamasakit/articles/0493168d963376</guid><pubDate>Wed, 16 Oct 2024 12:23:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1nHSiuDD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:uv%2520%25E3%2581%25A7%2520poetry%2520%25E3%2581%25AE%2520virtualenvs.create%2520false%2520%25E3%2581%25A8%25E5%2590%258C%25E3%2581%2598%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamasaKit%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZDc4NDNmZDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamasaKit</dc:creator></item><item><title><![CDATA[【初心者向け】Pythonの無名関数（ラムダ式）をわかりやすく解説（map関数、filter関数、sorted関数の説明も）]]></title><description><![CDATA[Pythonの無名関数（lambda式）について理解することは、Pythonプログラミングの効率を上げ、より簡潔なコードを書く上で役立ちます。本記事では、Pythonの無名関数（lambda式）の基本から実践的な使い方までを解説します。

 無名関数（lambda式）とは？
無名関数とは、名前を持たない関数のことです。通常の関数は def キーワードを使って定義され、名前が付けられますが、無名関数はその名の通り、名前を持たずに一行で簡潔に記述されます。
Pythonにおける無名関数は lambda キーワードを使って定義され、特に簡単な関数を一時的に使用したい場合に便利です。lambda...]]></description><link>https://zenn.dev/yogurt/articles/d28d862eed8ddf</link><guid isPermaLink="true">https://zenn.dev/yogurt/articles/d28d862eed8ddf</guid><pubDate>Wed, 16 Oct 2024 07:31:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yuznmdoQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%25E3%2581%25AE%25E7%2584%25A1%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%25EF%25BC%2588%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25EF%25BC%2589%25E3%2582%2592%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E8%25A7%25A3%25E8%25AA%25AC%25EF%25BC%2588map%25E9%2596%25A2%25E6%2595%25B0%25E3%2580%2581filter%25E9%2596%25A2%25E6%2595%25B0%25E3%2580%2581sorted%25E9%2596%25A2%25E6%2595%25B0...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A8%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZmFiYWU4NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヨーグルト</dc:creator></item><item><title><![CDATA[[LangChain] Tool Calling 入門]]></title><description><![CDATA[
 はじめに
こんにちは。PharmaXでエンジニアをしている諸岡（@hakoten）です。
この記事では、LangChainの「Tool Calling」の基本的な使い方と仕組みについてご紹介しています。LangChainをこれから始める方や、Tool Callingをまだあまり使ったことがない方に、ぜひ最後まで読んでいただけると嬉しいです。

 環境
この記事執筆時点では、以下のバージョンで実施しています。
LangChain周りは非常に開発速度が早いため、現在の最新バージョンを合わせてご確認ください

langchain: 0.3.1
langchain-openai: 0.2.1...]]></description><link>https://zenn.dev/pharmax/articles/1b351b730eef61</link><guid isPermaLink="true">https://zenn.dev/pharmax/articles/1b351b730eef61</guid><pubDate>Wed, 16 Oct 2024 01:09:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--laeMQB6D--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BLangChain%255D%2520Tool%2520Calling%2520%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hakotensan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxNTUyMTlkOTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PharmaX%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNGM1MmE4MWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hakotensan</dc:creator></item><item><title><![CDATA[【Ruff×VSCode】PythonでLinterとFormatterを設定]]></title><description><![CDATA[
 Linter と Formatter とは


Linter : コードの文法や誤りを警告してくれるツール
例: 型定義、docstringの不足

Formatter : コードの見た目を整えて、統一されたスタイルにするツール
例: インデント、スペースの修正、import 文のソート




 Ruff とは
Python の Linter と Formatter を兼ね備えたツール
https://docs.astral.sh/ruff/
https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff...]]></description><link>https://zenn.dev/metalmental/articles/20241016_python-ruff</link><guid isPermaLink="true">https://zenn.dev/metalmental/articles/20241016_python-ruff</guid><pubDate>Tue, 15 Oct 2024 22:56:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2nkbZZtP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Ruff%25C3%2597VSCode%25E3%2580%2591Python%25E3%2581%25A7Linter%25E3%2581%25A8Formatter%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:metalmental%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzJYbHgtVTZpT1J6VWI0WVZiYjlTUWNoa1FMRzZnalktdmFiZl9YYjJocHd3dk01NHY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>metalmental</dc:creator></item><item><title><![CDATA[Pycon JP 2024参加レポート【Goldスポンサー協賛 / セッション登壇】]]></title><description><![CDATA[こんにちは！
Recustomer株式会社でEMをしておりますTatsukiです！
この投稿は2024年9月27日〜29日に開催されたPycon JP 2024に参加してきましたので、その参加レポートになります。弊社はゴールドスポンサーとして協賛させていただき、かつ複数のエンジニアが登壇しましたので、その様子も含めて、ご紹介させていただきます！🐍

 Pycon JP 2024とは
https://2024.pycon.jp/ja
Pycon JPとは国内最大級のPythonカンファレンスであり、多くのPythonエンジニアが集まり、知見や体験を共有し合う場です。以下は公式サイトより引用...]]></description><link>https://zenn.dev/recustomer/articles/77fc9544cec8b1</link><guid isPermaLink="true">https://zenn.dev/recustomer/articles/77fc9544cec8b1</guid><pubDate>Tue, 15 Oct 2024 22:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---3hx71JC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pycon%2520JP%25202024%25E5%258F%2582%25E5%258A%25A0%25E3%2583%25AC%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2580%2590Gold%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25BC%25E5%258D%2594%25E8%25B3%259B%2520%252F%2520%25E3%2582%25BB%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E7%2599%25BB%25E5%25A3%2587%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tatsuki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyNWNjODQ5ZDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Recustomer%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhODE4YWQxYjIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tatsuki</dc:creator></item><item><title><![CDATA[Google Analytics 4(GA4) のAPIで403エラーが出た時]]></title><description><![CDATA[
 概要
Google Analytics Data APIをPythonから使おうとしたら、
google analytics api 403 User does not have sufficient permissions for this property. To learn more about Property ID
というエラーが出ました。これを解決できた方法を以下に書きます。

 方法
まず、
https://www.zenryoku-kun.com/post/ga4-api
を参考に、
https://developers.google.com/analytics/de...]]></description><link>https://zenn.dev/efficientyk/articles/208da4dfdc57a2</link><guid isPermaLink="true">https://zenn.dev/efficientyk/articles/208da4dfdc57a2</guid><pubDate>Tue, 15 Oct 2024 13:12:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pqTkW4yt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Google%2520Analytics%25204%2528GA4%2529%2520%25E3%2581%25AEAPI%25E3%2581%25A7403%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259F%25E6%2599%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YK%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NmMjg1YTc5NzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YK</dc:creator></item><item><title><![CDATA[StreamlitでVega-Liteを描画する]]></title><description><![CDATA[
 問題
Pythonのデータ可視化ライブラリAltair-Vegaは，Vega-Lite用JSONビルダー的なもので，Pythonを使ってVega-Liteの仕様に沿ったJSONを組み立てることができます．
Vega-Lite JSONとAltair Chartは，お互いに変換することができます．
chart = alt.Chart.from_json(vega_spec)
vega_spec = chart.to_json()
そこで以下のようにVega-Lite JSONをAltair Chartに変換し，Streamlitで描画しようとしましたが，なぜか描画されませんでした．ここ...]]></description><link>https://zenn.dev/ikumasudo/articles/b988ae77a54a1f</link><guid isPermaLink="true">https://zenn.dev/ikumasudo/articles/b988ae77a54a1f</guid><pubDate>Tue, 15 Oct 2024 13:00:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LW3qhzNG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7Vega-Lite%25E3%2582%2592%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ikuma%2520Sudo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXMxRnpKeFc3NkI5TjdobGM2UHM1TllrNEpMUl8zTDVpd2JRRm9meTV2bHZRZjNqT2g9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ikuma Sudo</dc:creator></item><item><title><![CDATA[OpenAI の Swarm で 画像認識したり、処理の移譲をするメモ]]></title><description><![CDATA[OpenAIが作成した実験的なマルチエージェントシステムのためのフレームワークですね。
詳細は、サンプル見たり、他の方の投稿記事を探してみると良いと思います。
実験的なサンプルフレームワークで、本番環境での使用は想定されていないそうです。
ちょっと残念👀
https://github.com/openai/swarm

 Swarmの雰囲気
ざっくり概要を言うと、複数のエージェントや関数を定義して、それら間で移譲しながら処理を進めるシステムみたいな感じですかね？
サンプルをちょっと改造して試してみた感じは以下↓
from swarm import Swarm, Agent

client...]]></description><link>https://zenn.dev/kazuhito/articles/970dd095bc3eea</link><guid isPermaLink="true">https://zenn.dev/kazuhito/articles/970dd095bc3eea</guid><pubDate>Tue, 15 Oct 2024 12:29:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--X7s1xvTl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520%25E3%2581%25AE%2520Swarm%2520%25E3%2581%25A7%2520%25E7%2594%25BB%25E5%2583%258F%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259F%25E3%2582%258A%25E3%2580%2581%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E7%25A7%25BB%25E8%25AD%25B2%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuhito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dZUW5XQmozQjhFcGlwOVEtSzhhelItcEV1azFOTXdteGhVeUowZHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuhito</dc:creator></item><item><title><![CDATA[データドリフトの検知に、Evidently を使ってみた。]]></title><description><![CDATA[
 はじめに
機械学習モデルに入力するデータの移り変わりを検出する「データドリフト」について、実際にどのように検知できるのかアウトプットのイメージを確認したかったため、実行してみました。
さまざまなPythonライブラリがありますが、見た目が気に入ったEvidentlyを使ってみることに！

 データドリフト検知のライブラリの比較10選



ライブラリ名
特徴・用途
GitHubスター数
最新更新日




Evidently
データドリフト、ターゲットドリフト、モデルパフォーマンスを簡単に可視化。オープンソースで使いやすい。
⭐️ 5,200
2024年10月


Alibi Det...]]></description><link>https://zenn.dev/channnnsm/articles/694c5be907a18c</link><guid isPermaLink="true">https://zenn.dev/channnnsm/articles/694c5be907a18c</guid><pubDate>Tue, 15 Oct 2024 09:13:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---f-dowNq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2589%25E3%2583%25AA%25E3%2583%2595%25E3%2583%2588%25E3%2581%25AE%25E6%25A4%259C%25E7%259F%25A5%25E3%2581%25AB%25E3%2580%2581Evidently%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:channnnsm%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNjJjYmRjY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>channnnsm</dc:creator></item><item><title><![CDATA[3DCNNサロゲートモデル用に読み込む形状を確認する]]></title><description><![CDATA[
 今回取り組むこと


前回記事でメッシュモデルから3DCNNに読み込めるデータに加工してサロゲートモデルを作成しました。
今回は、加工したデータがどんな形状になっているか確認出来るようにしました。


 なぜ形状を確認するのか？

今回の加工でメッシュモデルは、セル数分の（x,y,z,値）のテンソルに加工され、イメージではボクセル化されています。
例えば、セル数が荒すぎると元形状の外観が十分に再現出来ていない恐れがあります。
また、例えば強度剛性のサロゲートを作る場合リブがあるか、他の形状との隙間が埋まっていないか等、CAE解析で結果に大きな影響を与える形状が再現出来ていないと、効果...]]></description><link>https://zenn.dev/cae_taka/articles/db616674ed4835</link><guid isPermaLink="true">https://zenn.dev/cae_taka/articles/db616674ed4835</guid><pubDate>Tue, 15 Oct 2024 05:36:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RWExnyEU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:3DCNN%25E3%2582%25B5%25E3%2583%25AD%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E7%2594%25A8%25E3%2581%25AB%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E5%25BD%25A2%25E7%258A%25B6%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmY2QxNmFlM2MuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taka</dc:creator></item><item><title><![CDATA[まだuvicorn-gunicorn-dockerイメージ使ってるの？]]></title><description><![CDATA[
 uvicorn-gunicorn-dockerからカスタムUvicorn Dockerイメージへの移行
uvicorn-gunicorn-dockerイメージは非推奨となりました。
https://github.com/tiangolo/uvicorn-gunicorn-docker?tab=readme-ov-file#deprecated-tags
なぜなら、Uvicornを--workersオプションと共に直接使用することが可能になり、ほとんどのデプロイメントにおいてこのイメージが不要になったからです。特にKubernetesなどのシステムを使用する場合は、独自のDockerイ...]]></description><link>https://zenn.dev/htr_art/articles/62f027ecb8ae94</link><guid isPermaLink="true">https://zenn.dev/htr_art/articles/62f027ecb8ae94</guid><pubDate>Tue, 15 Oct 2024 05:33:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SQoY8Oq3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25BE%25E3%2581%25A0uvicorn-gunicorn-docker%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nwb%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2YzJkNjM4ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nwb</dc:creator></item><item><title><![CDATA[PyCon JP 2024 に出展してきました]]></title><description><![CDATA[
 はじめに
こんにちは、シンプルフォームでインフラエンジニアをやっている入江 純 (@jirtosterone) です。
この度、9/27, 28 に開催された PyCon JP 2024 に Gold スポンサー として協賛 &amp; ブース出展してきました 🎉🎉
https://2024.pycon.jp/ja
本記事では出展レポートとして、ブース出展の準備〜後片付けまでの流れや、個人的な感想をざっくりとお伝えしたいと思います。あたかも全体を取りまとめたかのように書いていますが全くそんなことはなく、ごく一部の担当しかしていません。解像度が低い部分がある点はご容赦ください。

運営...]]></description><link>https://zenn.dev/simpleform_blog/articles/15dfc7de0f106f</link><guid isPermaLink="true">https://zenn.dev/simpleform_blog/articles/15dfc7de0f106f</guid><pubDate>Tue, 15 Oct 2024 04:15:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3gm3gk7---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyCon%2520JP%25202024%2520%25E3%2581%25AB%25E5%2587%25BA%25E5%25B1%2595%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258D%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Jun%2520Irie%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2YTZmNDIxOGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:SimpleForm%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjU2MGE5NzYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun Irie</dc:creator></item><item><title><![CDATA[LeetCode #2269 Find the K-Beauty of a Number]]></title><description><![CDATA[
 問題概要
入力値：num(int), k(int)
出力値：int
Given integers num and k, return the k-beauty of num.
問題のリンク

 入力例
Input: n = 240, k = 2
Output: 2

 解答例1
計算量：O(n)
Sliding window
Python
class Solution(object):
    def divisorSubstrings(self, num, k):
        """
        :type num: int
        :type k: int
   ...]]></description><link>https://zenn.dev/pirika/articles/9ee7a568877467</link><guid isPermaLink="true">https://zenn.dev/pirika/articles/9ee7a568877467</guid><pubDate>Tue, 15 Oct 2024 00:02:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FOTTP76_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LeetCode%2520%25232269%2520Find%2520the%2520K-Beauty%2520of%2520a%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2594%25E3%2583%25AA%25E3%2582%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0YmI4OWIzOGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ピリカ</dc:creator></item><item><title><![CDATA[[入門者向け] Slack AppのWebhooksでメッセージを送る]]></title><description><![CDATA[稼働中のシステムでエラーをなるはやで補足したい。
Slackに通知きたらええのに。
そんなあなたにSlack AppのWebHooks経由でSlackメッセージを送る方法をご説明します。

 レガシーな方法
Incoming Webhooksという機能がありますが、現在こちらの機能は非推奨となってます。

削除するかもしれないから使わないでみたいなことが書いてます。
おすすめされているSlack Appを使いましょう。


 さくっとSlack Appを作ってみる


Your Appsの右上のCreate New Appをクリックします。



モーダルが出てくるので、From scr...]]></description><link>https://zenn.dev/nichol76/articles/e8a0e0bd8c7e61</link><guid isPermaLink="true">https://zenn.dev/nichol76/articles/e8a0e0bd8c7e61</guid><pubDate>Mon, 14 Oct 2024 15:03:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cvj7pf5B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2585%25A5%25E9%2596%2580%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%255D%2520Slack%2520App%25E3%2581%25AEWebhooks%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E9%2580%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuko%2520Katsuda%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0Y2U0ODY4NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuko Katsuda</dc:creator></item><item><title><![CDATA[Python でキューを使ってリトライ処理する]]></title><description><![CDATA[!

 学べること

Pythonでfor-else構文を使ってリトライ処理する方法
Pythonでキューの使ってリトライ処理する方法



 はじめに
指定された回数だけ処理を繰り返し、成功した場合はそのまま処理を続行し、規定回数内に成功しない場合はエラーを出力するような実装が必要なことがありました。これは一般的に『リトライ処理』と呼ばれるものです。特にキューを使った方法をまた使う機会ありそうなので、ここにメモとして残しておきます。

 検証環境
% python --version
Python 3.10.13

% pip show tenacity | grep "Version...]]></description><link>https://zenn.dev/yuichi_dev/articles/0bf7dbfc3e043c</link><guid isPermaLink="true">https://zenn.dev/yuichi_dev/articles/0bf7dbfc3e043c</guid><pubDate>Mon, 14 Oct 2024 14:16:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--93XC093d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A7%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%2588%25E3%2583%25A9%25E3%2582%25A4%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmI0ZGExMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuichi</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-374｜A - Takahashi san 2]]></title><description><![CDATA[
 設問ページ

🔗ABC-374 A - Takahashi san 2



 提出結果
def getString():
    return input()


def main():
    S = getString()

    print("Yes" if S[-3:] == "san" else "No")


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/d211f0bc7f8dc3</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/d211f0bc7f8dc3</guid><pubDate>Mon, 14 Oct 2024 10:15:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XU-IsZOp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-374%25EF%25BD%259CA%2520-%2520Takahashi%2520san%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-374｜C - Separated Lunch]]></title><description><![CDATA[
 設問ページ

🔗ABC-374 C - Separated Lunch



 提出結果
import itertools


def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    N = getInt()
    K = getIntList()

    a = sum(K)
    b = a
    for i in range(1, N):
        c = itertools.comb...]]></description><link>https://zenn.dev/hyperdb/articles/cc7ec94dcbaa89</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/cc7ec94dcbaa89</guid><pubDate>Mon, 14 Oct 2024 10:15:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wSVue7yv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-374%25EF%25BD%259CC%2520-%2520Separated%2520Lunch%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item></channel></rss>