<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-05-26T20:30:42+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2031101</id>
    <published>2025-05-26T20:30:42+09:00</published>
    <updated>2025-05-26T20:30:42+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/rana_kualu/items/8fd975cbada30cb5ed45"/>
    <url>https://qiita.com/rana_kualu/items/8fd975cbada30cb5ed45</url>
    <title>【TypeScript7】TypeScriptが10倍高速になるぞー</title>
    <content type="html">先日2025/03/11に、A 10x Faster TypeScriptという記事が公開されました。
TypeScriptの処理系をGoで書き直すことによって速度が10倍向上するとのことです。

ロ…</content>
    <author>
      <name>rana_kualu</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2031070</id>
    <published>2025-05-26T18:55:39+09:00</published>
    <updated>2025-05-26T19:16:54+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/relu/items/9b8085e89c01bcf6d35a"/>
    <url>https://qiita.com/relu/items/9b8085e89c01bcf6d35a</url>
    <title>CORS対応版 郵便番号・デジタルアドレスAPIを開発しました digital-address.app ゆうID不要</title>
    <content type="html">本記事では、日本郵便公式の「郵便番号・デジタルアドレスAPI」をブラウザ上で直接利用できるようにした CORS対応版クライアントAPI をご紹介します。公式APIは2025年5月26日より無料で提供…</content>
    <author>
      <name>relu</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2031034</id>
    <published>2025-05-26T17:48:13+09:00</published>
    <updated>2025-05-26T17:48:13+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Anders/items/d7afce2c58d9306fdf28"/>
    <url>https://qiita.com/Anders/items/d7afce2c58d9306fdf28</url>
    <title>react.jsでファイルダウンロードリンクのメモ</title>
    <content type="html">react.jsでファイルダウンロードする処理をメモする。
要件

リンクを叩くとファイルダウンロードが走る
クライアント側の日付をダウンロードファイル名に入れる

実装方法

next/linkで別タグ…</content>
    <author>
      <name>Anders</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2030907</id>
    <published>2025-05-26T12:37:52+09:00</published>
    <updated>2025-05-26T12:37:52+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/Tomato_otamoT/items/260f1f50deceff538269"/>
    <url>https://qiita.com/Tomato_otamoT/items/260f1f50deceff538269</url>
    <title>ReactのuseEffectについて</title>
    <content type="html">ReactのuseEffectは、副作用を扱うためのフックです。
「副作用」とは、データの取得・DOMの操作・イベントリスナーの登録・タイマーの設定など、Reactのレンダリングの外で起こる処理のこ…</content>
    <author>
      <name>Tomato_otamoT</name>
    </author>
  </entry>
</feed>
