<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 31 Mar 2025 09:38:47 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[フロント初心者がReact開発をするまでの学び]]></title><description><![CDATA[
 前書き
フロント開発の楽しさに目覚めつつあるAIエンジニアです。
レスポンスの重要性に気付かされることが多いです。
精度そこそこでなるはやのAIシステムを作れる人を目指していきたいと思います。
今回はフロント初心者がReactで開発するまでの学びを残していきます。
Reactの勉強の仕方として公式のチュートリアルが良いということを聞き、突撃しましたが
なるほど、わからん
状態だったため、基本的な知識がないとスムーズに理解できないだろうといった所感です。
私が読んだ本にはそもそもJavaScriptを知らないとReactの理解は厳しいと書いてありました。
Reactチュートリアル挫折経...]]></description><link>https://zenn.dev/goals_techblog/articles/1c07186b2bd28d</link><guid isPermaLink="true">https://zenn.dev/goals_techblog/articles/1c07186b2bd28d</guid><pubDate>Mon, 31 Mar 2025 09:25:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bg8oYDEN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CReact%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E5%25AD%25A6%25E3%2581%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kei%2520TAKAHATA%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0ZmMzNjliMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Goals%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNjg4MDE4MTguanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kei TAKAHATA</dc:creator></item><item><title><![CDATA[PythonとHTMLで簡単にログイン・新規登録システムを作成する方法]]></title><description><![CDATA[
 はじめに
Webアプリケーションを開発する際に、ログイン機能や新規登録機能は非常に重要な要素です。本記事では、PythonとHTMLを使ってシンプルなログインおよび新規登録システムを作成する方法を紹介します。これを活用すれば、フルスクラッチで簡単な認証システムを構築できます。

 必要な準備
まずは、必要なライブラリをインストールしましょう。
pip install Flask
Flaskは、Pythonで簡単にWebアプリケーションを作成できる軽量なフレームワークです。

 プロジェクトの構成
プロジェクトのディレクトリ構造は以下のようになります。
/project_folder
...]]></description><link>https://zenn.dev/mstng/articles/116dce59cb63ec</link><guid isPermaLink="true">https://zenn.dev/mstng/articles/116dce59cb63ec</guid><pubDate>Mon, 31 Mar 2025 08:45:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0DgVSnGa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A8HTML%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25BB%25E6%2596%25B0%25E8%25A6%258F%25E7%2599%25BB%25E9%258C%25B2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mstng%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlVrUWI4S2o0cnl1WHhNZ1FBeXJleTFmOW5JTW1iRmN6UVRzaC1YYk1udWQtNEotYkF2Zz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mstng</dc:creator></item><item><title><![CDATA[検品作業を96％カット！Geminiでレシートの重複判定をしてみた]]></title><description><![CDATA[
 はじめに
WED株式会社で ML エンジニアをしています、ishi2kiです。
当社では、レシート買取アプリ「ONE」を開発・運用しています。 アプリユーザーは、レシート買取ミッションに参加し、対象商品のレシートをアップロードすることでお金がもらえます。
このアプリの運用課題として、ユーザーが同一のレシートを使い回していないか、人目で検品する必要があることが挙げられていました。
しかし、アップロードされるレシート枚数が多いと、その分検品にかかる人件費も増えてきてしまいます。そのため、生成 AI (Gemini) でレシート画像を比較し同じレシートか否かを判定 (重複判定) することで...]]></description><link>https://zenn.dev/wed_engineering/articles/duplicate_detect</link><guid isPermaLink="true">https://zenn.dev/wed_engineering/articles/duplicate_detect</guid><pubDate>Mon, 31 Mar 2025 08:40:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NmPZdUDJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A4%259C%25E5%2593%2581%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%259296%25EF%25BC%2585%25E3%2582%25AB%25E3%2583%2583%25E3%2583%2588%25EF%25BC%2581Gemini%25E3%2581%25A7%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AE%25E9%2587%258D%25E8%25A4%2587%25E5%2588%25A4%25E5%25AE%259A%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ishi2ki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxYjlmMzI3YWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:WED%2520Engineering%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwMmZhZjBjOWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ishi2ki</dc:creator></item><item><title><![CDATA[Pythonにおける非同期処理ライブラリの選定について(Celery vs Threading)]]></title><description><![CDATA[
 はじめに
Pythonで非同期処理を設計する際には、Celery（マルチプロセスを用いたタスクキュー）と標準のスレッド（threading）のどちらを使用するか検討する必要があります。
本記事では選定の基本軸となる「CPU負荷」と「スループット」をベースにどちらを使用するのが適切かをまとめてみました。

 選定基準: CPU負荷とスループット
非同期処理方式を選ぶ際は、処理がCPU集約型か（CPU負荷）と必要な処理量（スループット）を基準に検討します。
CPUを多用する処理ではスレッドを使って並列化しても性能向上は限定的です。
Celeryであれば別プロセスのワーカーでタスクを実行で...]]></description><link>https://zenn.dev/akagami/articles/83cf08e9a9e320</link><guid isPermaLink="true">https://zenn.dev/akagami/articles/83cf08e9a9e320</guid><pubDate>Mon, 31 Mar 2025 07:00:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3xRJHP4---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E9%2581%25B8%25E5%25AE%259A%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2528Celery%2520vs%2520Threading%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AB%25E3%2582%25AC%25E3%2583%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViZTdiNGNmZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アカガミ</dc:creator></item><item><title><![CDATA[【AtCoder】Daily Training 2025/03/25]]></title><description><![CDATA[
 1. はじめに

 目的
Daily Trainingを解くことにより、競技プログラミングに慣れることを目的としています。

 フィードバックして欲しい点
私は競技プログラミング初心者のため、いただいたアドバイスをすぐに理解できず、何度も質問してしまうかもしれません。それでも構わないという心優しい方がいらっしゃれば、ぜひアドバイスをいただけると嬉しいです。丁寧に教えていただけると、とても助かります！

 1. アルゴリズムの選択と最適化

今の実装よりも効率的なアルゴリズムがあるか？

計算量を減らせる部分や、ボトルネックになっている処理はないか？


 2. コードの可読性と整理
...]]></description><link>https://zenn.dev/keiiita/articles/2bcbb1ef5563b8</link><guid isPermaLink="true">https://zenn.dev/keiiita/articles/2bcbb1ef5563b8</guid><pubDate>Mon, 31 Mar 2025 05:15:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7eGL4O3K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AtCoder%25E3%2580%2591Daily%2520Training%25202025%252F03%252F25%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keiiita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjJLZ2laOThYRjRJZDdaeEN6djVpWHdTY3pZODQ3c3pWbWhvUVZXcTRuaTMtRkJ0VT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keiiita</dc:creator></item><item><title><![CDATA[標準出力にタイムスタンプをつけて再出力]]></title><description><![CDATA[
 はじめに
定期実行のバッチなどで、実行時に日時を出力したい場合がありますが、バッチプログラムでは雑にprintなりechoしておいて、後付で日時を行に追加する処理を作りました。
処理としては標準出力と標準エラーにたいして、呼び出し側のコマンドで時間等をつけて出力という動きになります。
基本はログファイルに出す想定なので、結果は判別できるようにして、標準出力だけにしています。
バッファリングされると出力が遅延する場合があるのでflash=Trueなどをつけるほうがベターです。

 使い方1
python3 with_timestamp.py ls -latr
python3 with_...]]></description><link>https://zenn.dev/kn64872/articles/7ecb0da8e8d055</link><guid isPermaLink="true">https://zenn.dev/kn64872/articles/7ecb0da8e8d055</guid><pubDate>Mon, 31 Mar 2025 04:55:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dqOkZ2Gg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A8%2599%25E6%25BA%2596%25E5%2587%25BA%25E5%258A%259B%25E3%2581%25AB%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2597%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2581%25A6%25E5%2586%258D%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O.Yabuki-213%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1ODJlZThhMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O.Yabuki-213</dc:creator></item><item><title><![CDATA[Raspberry Pi Picoで4x4キーパッドをPIOで使ってみよう]]></title><description><![CDATA[このアーティクルは2025年3月をもって終了したエンジニア向け情報サイトfabcrossに寄稿し掲載された初心者向けの記事をfabcrossの許可を得て再掲しています。

キーボードの自作が一時期注目を集めました。現在でもオリジナルキーボードを作ってみたいという人は多いでしょう。Raspberry Pi Pico（以下、Pico）シリーズはGPIOが豊富で、USBホスト機能が利用でき、なおかつ安価なので、キーボードに組み込むマイコンにも最適です。
10キーパッドから100以上のキーがあるフルサイズキーボードまで、ほとんどすべてのキーボードは、キーマトリクスを使って多数のキーのオンオフを検...]]></description><link>https://zenn.dev/satoshi_yoneda/articles/4x4_keypad_pio</link><guid isPermaLink="true">https://zenn.dev/satoshi_yoneda/articles/4x4_keypad_pio</guid><pubDate>Mon, 31 Mar 2025 01:06:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IROpjq3R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Raspberry%2520Pi%2520Pico%25E3%2581%25A74x4%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%2591%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592PIO%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B1%25B3%25E7%2594%25B0%2520%25E8%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjVhX1JNNGdTalJreWxMekJNckoyTnFoa3VXMjMybF9qSHlxMEtBVmdHR2RrTUNWVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>米田 聡</dc:creator></item><item><title><![CDATA[Hugging Face 内の Oraganization の Private リポジトリのデータセットをロードするときのトークンの設定]]></title><description><![CDATA[
 はじめに
Hugging Face 内の Organization の Private リポジトリにあるデータセットをローカル環境にロードする機会がありました。その際、アクセストークンの設定に不備があると、Organization の Private リポジトリにアクセスできないことが分かりました。本記事では、その際の対応方法を備忘録として記載します。

 Hugging Face で使用できるアクセストークンについて
Hugging Face では 3 種類のアクセストークンを作成することができます。詳細は以下の公式ドキュメントをご参照ください。
https://huggingfa...]]></description><link>https://zenn.dev/headwaters/articles/58cc4ddeae27b0</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/58cc4ddeae27b0</guid><pubDate>Mon, 31 Mar 2025 00:36:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zCRa5rFj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hugging%2520Face%2520%25E5%2586%2585%25E3%2581%25AE%2520Oraganization%2520%25E3%2581%25AE%2520Private%2520%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuichiro%2520Sakata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYmQ1ZTMxYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shuichiro Sakata</dc:creator></item><item><title><![CDATA[[Python]Google AI Studio + Code Execution + Gemini 2.5 Proで遊んでみた(PIL)]]></title><description><![CDATA[
 TL;DR

Google AI StudioのCode Executionで生成したPythonのコードを実行できる
あいまいなプロンプトでもGemini 2.5 Proの強力な推論でコードを大量に生成できる
MatplotlibのShowを実行するとグラフを表示できるが、Pillow(PIL)と組み合わせることで画像も表示できる
PythonはNumPyでベクトルや行列演算を簡単に行うことができるため、Pillowで取得した画像データを簡単に編集、解析できる
結果、PhotoshopやGIMP、Pixlrのような画像編集ソフトウェアを操作しなくてもAIが画像を解析して自動的に編集...]]></description><link>https://zenn.dev/tkithrta/articles/7e3826ee55c3ec</link><guid isPermaLink="true">https://zenn.dev/tkithrta/articles/7e3826ee55c3ec</guid><pubDate>Sun, 30 Mar 2025 19:39:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jI-d9v-B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255DGoogle%2520AI%2520Studio%2520%252B%2520Code%2520Execution%2520%252B%2520Gemini%25202.5%2520Pr...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25BB%2592%25E3%2583%25B0%25E6%25A8%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NDRlMTA4ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>黒ヰ樹</dc:creator></item><item><title><![CDATA[【Python × Langchain × Gemini】AI Agent の関数実行を試してみた]]></title><description><![CDATA[dotD で Web エンジニアをしている奥山です。今回は、LangChain で Gemini の AI Agent を作成して、関数を実行させる際に遭遇した課題と、その解決策について説明します。
Python のコードで AI の活用を検証するために、無料で使用できる Gemini を使いたいと思いました。しかし、Gemini では、使用する予定だった OPENAI_FUNCTIONS タイプの AI Agent が使用できませんでした。

 OpenAI と Gemini の違い
OpenAI は、多くの開発者が利用するメジャーな AI モデルで、従量課金制となっています。Gemi...]]></description><link>https://zenn.dev/dotdtech_blog/articles/de526370ba6059</link><guid isPermaLink="true">https://zenn.dev/dotdtech_blog/articles/de526370ba6059</guid><pubDate>Sun, 30 Mar 2025 17:04:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5nAS-Cp_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%2520%25C3%2597%2520Langchain%2520%25C3%2597%2520Gemini%25E3%2580%2591AI%2520Agent%2520%25E3%2581%25AE%25E9%2596%25A2%25E6%2595%25B0%25E5%25AE%259F%25E8%25A1%258C%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Sayuri%2520Okuyama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNTMxNmU4NDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:dotD%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjhBNnR0bHR5LTFFUFFReURTNXBGQVNCeXZGdlhjMXJUSnpZZ0t5NkNDPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sayuri Okuyama</dc:creator></item><item><title><![CDATA[Pythonのジェネリッククラス入門：型安全かつ再利用可能なクラス設計]]></title><description><![CDATA[
 はじめに
Pythonで開発をしていると、「型安全に」「再利用性の高い」コードを書きたいと思うことは多いはず。そんなときに役立つのが「ジェネリッククラス」です。
本記事では、Pythonにおけるジェネリッククラスの基礎から実践的な使い方までを解説します。

「そもそもジェネリッククラスって何？」
「どうやって使うの？」
「どんなメリットがあるの？」

といった疑問を持つ方に向けて、サンプルコードとともに紹介していきます。

 TL;DR

ジェネリッククラスとは、型パラメータを用いて再利用可能なクラスのこと。
Pythonでは&nbsp;typing.TypeVar&nbsp;と&n...]]></description><link>https://zenn.dev/sousquared/articles/82d66436fc461d</link><guid isPermaLink="true">https://zenn.dev/sousquared/articles/82d66436fc461d</guid><pubDate>Sun, 30 Mar 2025 08:38:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---QMs0D2K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%258B%25E3%2581%25A4%25E5%2586%258D%25E5%2588%25A9%25E7%2594%25A8%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sousquared%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXYTF2cDBWNTdEM3hXUExZZ0puLTIyaHZ4U0pEQWxPbzFpX1h2PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sousquared</dc:creator></item><item><title><![CDATA[【Python入門】Pythonチュートリアル（Python 3.11）]]></title><description><![CDATA[「Python」の標準的な機能や使い方に関連する情報をまとめております。（Python 3.11）]]></description><link>https://zenn.dev/yuni50314/books/python_basic_ver311</link><guid isPermaLink="true">https://zenn.dev/yuni50314/books/python_basic_ver311</guid><pubDate>Sun, 30 Mar 2025 08:18:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pqeVUeMv--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci85YWQyOTczMTRjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Yuni-Book</dc:creator></item><item><title><![CDATA[pipxとは？Pythonツールのインストール＆実行に便利なコマンド]]></title><description><![CDATA[
 pipxとは？Pythonツールのインストール＆実行に便利なコマンド
別の記事（こちらを参照）で、pip install時のエラーについて書きました。その記事の中で、pipxを使い方法もあると書いているのですが、そもそもpipxとはについても書いておきたいと思います。

 pipxとは？
pipx は、Python製のCLIツール（コマンドラインアプリケーション）を仮想環境ごと安全にインストールして実行するためのツールです。

Pythonパッケージをシステムに汚染せずに使える
グローバルインストールのように簡単にコマンドを実行できる
仮想環境を自動的に作成・管理してくれる


例：...]]></description><link>https://zenn.dev/kail/articles/371334bd4b23e9</link><guid isPermaLink="true">https://zenn.dev/kail/articles/371334bd4b23e9</guid><pubDate>Sun, 30 Mar 2025 07:53:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SxDBXFYr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pipx%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259FPython%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25EF%25BC%2586%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%25AB%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kail%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxMDVmZWY3NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kail</dc:creator></item><item><title><![CDATA[pip installでerror: externally-managed-environmentの意味と解決方法]]></title><description><![CDATA[
 【Linux】 pip installでerror: externally-managed-environment発生
最近PCを新調して環境を徐々にLinux環境も整えていますが、pipで以下のエラーが出ることがあります。
error: externally-managed-environment

× This environment is externally managed
╰─&gt; To install Python packages system-wide, try apt install
    python3-xyz, where xyz is the packa...]]></description><link>https://zenn.dev/kail/articles/ef502d950e8268</link><guid isPermaLink="true">https://zenn.dev/kail/articles/ef502d950e8268</guid><pubDate>Sun, 30 Mar 2025 07:38:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yr_LQb3m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pip%2520install%25E3%2581%25A7error%253A%2520externally-managed-environment%25E3%2581%25AE%25E6%2584%258F%25E5%2591%25B3%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kail%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIxMDVmZWY3NzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kail</dc:creator></item><item><title><![CDATA[Docker + Fast API で動く環境を作成する]]></title><description><![CDATA[今回はDocker購入書籍のハンズオンのための環境構築について備忘録も兼ねて記載します。
仕事でもAPIの話がよく出てくるのでAPI利用したアプリなどの実装をしたいと思っていた
＋
Python信者
ということでFastAPIに入門してみようかと思い以下の書籍を購入。
https://amzn.asia/d/irhI9dr
私の基本方針としてLocal上は汚さず基本的にはDockerコンテナで管理することにしているので、今回の書籍のハンズオンもDocker上で実装する。
（書籍ではMiniCondaを利用してましたね）

Dockerfile
FROM python:3.12-slim
...]]></description><link>https://zenn.dev/hirokito/articles/6a482cf53c36f3</link><guid isPermaLink="true">https://zenn.dev/hirokito/articles/6a482cf53c36f3</guid><pubDate>Sun, 30 Mar 2025 07:27:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qdKMccGg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%252B%2520Fast%2520API%2520%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hirokito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhZjBhYWQ1NmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hirokito</dc:creator></item><item><title><![CDATA[[Python] ABC399 C Make it Forest]]></title><description><![CDATA[
 [Python] ABC399 C Make it Forest

 目的

コンテスト中に私自身が回答できなかった問題について、振り返り、理解を深めるための記事です。
初心者のため誤解している部分も多いかと思いますが、理解不足の点はその旨記載しています。


 問題
https://atcoder.jp/contests/abc399/tasks/abc399_c

 自分の回答

提出できる回答を作れず。
検索した結果、DFSまたはUnion-Findを利用すれば良さそうなところまでは分かったが、取り除く辺を特定する方法を理解できずギブアップ


 どうすればよかったのか

公式...]]></description><link>https://zenn.dev/miso253udon/articles/25a3b28ac752b6</link><guid isPermaLink="true">https://zenn.dev/miso253udon/articles/25a3b28ac752b6</guid><pubDate>Sun, 30 Mar 2025 04:11:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CVPFEyks--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%255BPython%255D%2520ABC399%2520C%2520Make%2520it%2520Forest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miso253oudon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MTQ0ODZlMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miso253oudon</dc:creator></item><item><title><![CDATA[PyPI と TestPyPI への公開手順]]></title><description><![CDATA[
 PyPI と TestPyPI への公開手順
Python パッケージを PyPI および TestPyPI に公開する手順をまとめました。

 前提条件

 必要なツール
以下をインストール:
pip install build twine

 アカウント作成


PyPI: https://pypi.org でアカウント作成。

TestPyPI: https://test.pypi.org でアカウント作成（別アカウントが必要）。


 認証情報の設定（任意）
~/.pypirc に API トークンを保存すると、アップロード時の入力を省略可能:
[distutils]
ind...]]></description><link>https://zenn.dev/naoyoshinori/articles/d87a46df047f3f</link><guid isPermaLink="true">https://zenn.dev/naoyoshinori/articles/d87a46df047f3f</guid><pubDate>Sat, 29 Mar 2025 23:30:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r5hXY_WI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PyPI%2520%25E3%2581%25A8%2520TestPyPI%2520%25E3%2581%25B8%25E3%2581%25AE%25E5%2585%25AC%25E9%2596%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naoyoshinori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0syYTlYZmVLMW1WSGpQZGEzZmZFX2RfWktiSmpST3lRNDlXcGpiTTA5Q3dnZUw1Q0o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>naoyoshinori</dc:creator></item><item><title><![CDATA[【Python】スライディングウィンドウ法について(2)]]></title><description><![CDATA[
 初めに
こんにちは！スライディングウィンドウ法についてまとめる記事の第二弾です！
第一弾は以下をご覧ください！
https://zenn.dev/daichi09167/articles/d18d66080975e0

 文字列にも応用可能(異なる文字をk個まで含む最長の部分文字列)
問題
文字列 s が与えられたとき、異なる文字を最大 k 個まで含む最長の部分文字列の長さを求めよ。
def longest_substring_with_k_distinct(s: str, k: int) -&gt; int:
    if k == 0:
        return 0
    ...]]></description><link>https://zenn.dev/daichi09167/articles/eeb76a9810f37c</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/eeb76a9810f37c</guid><pubDate>Sat, 29 Mar 2025 14:32:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8lp1FMCB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A6%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A6%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25282%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YTc4OTEwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item><item><title><![CDATA[【Python】スライディングウィンドウ法について(1)]]></title><description><![CDATA[
 スライディングウィンドウ法とは
こんにちは！アルゴリズムの問題を解いていく中で、スライディングウィンドウ法について触れる機会があったのでまとめていきたいと思います。スライディングウィンドウ法は、連続するデータ（配列・文字列など）に対して、効率的に部分問題を解く手法です。特に、「連続する部分配列（subarray）や部分文字列（substring）に関する問題」 に適しています。通常、2つのポインタ (left と right) を用いてウィンドウを動的に調整しながら解を求めます。

 スライディングウィンドウの種類
スライディングウィンドウの種類について、以下の表にまとめたいと思いま...]]></description><link>https://zenn.dev/daichi09167/articles/d18d66080975e0</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/d18d66080975e0</guid><pubDate>Sat, 29 Mar 2025 14:28:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nbc-c9Ka--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25A6%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A6%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25281%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YTc4OTEwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item><item><title><![CDATA[【Python】プロセス間通信の基本(パイプと名前付きパイプ)]]></title><description><![CDATA[
 概要
以前、プロセスの基礎の基礎の記事を書きました。
https://zenn.dev/shimiyu/articles/4f432e6ea1be06
プロセスに続き、パイプについて書きました。

 パイプ(pipe)とは
プロセス間でデータをやり取りする場面があります。例えば、親プロセスが生成したメッセージを子プロセスに渡して処理させる、といったケースです。
この時に使うのが パイプ(pipe) です。文字通り、プロセス間を繋ぐ管(くだ)の役割を果たします。
Pythonではos.pipe()を使うことで、プロセス間でデータをやり取りするための通路(パイプ)を作ることができます。
...]]></description><link>https://zenn.dev/shimiyu/articles/44eee5d0e76276</link><guid isPermaLink="true">https://zenn.dev/shimiyu/articles/44eee5d0e76276</guid><pubDate>Sat, 29 Mar 2025 12:59:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7j6O6ma2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E9%2596%2593%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2528%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%25E3%2581%25A8%25E5%2590%258D%25E5%2589%258D%25E4%25BB%2598%25E3%2581%258D%25E3%2583%2591%25E3%2582%25A4%25E3%2583%2597%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BF%25E3%2582%2586%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0OWE2NTYxY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しみゆー</dc:creator></item></channel></rss>