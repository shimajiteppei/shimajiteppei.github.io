<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 09 Oct 2025 03:04:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[Python] itertools.countでカウントダウンを実装する～イテレータ型とは～]]></title><description><![CDATA[
 今回の目標
$ python3 count_down.py
3
2
1
Hello, World!

 itertools.count とは
ここからの説明は概要をつかむための説明です。ふわっとしています。
正しい説明はPythonの公式ドキュメントを参照してください。

 まず、itertoolsモジュールとは何か
よく使われるイテレータを集めたPythonの標準ライブラリです。

 ではイテレータ（iterator）とは何か
Pythonの型の一つです。イテレータ型[1]はざっくりいうと順番に取り出すことができるものです。
[1,2,3]みたいにfor文で一つずつ取り出せるものと...]]></description><link>https://zenn.dev/sanyodo/articles/d7244dc87aa80f</link><guid isPermaLink="true">https://zenn.dev/sanyodo/articles/d7244dc87aa80f</guid><pubDate>Thu, 09 Oct 2025 01:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jKqtgz9F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%2520itertools.count%25E3%2581%25A7%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BD%259E%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E5%259E%258B%25E3%2581%25A8%25E3%2581%25AF%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2582%2582%25E3%2581%25A1%25E3%2582%2583%25E3%2581%25AE%25E4%25B8%2589%25E6%25B4%258B%25E5%25A0%2582%2520%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E9%2583%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjZDQ1NjgyZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>おもちゃの三洋堂 システム部</dc:creator></item><item><title><![CDATA[CLIPによるマルチモーダルRAGを構築してみた]]></title><description><![CDATA[
 はじめに
こんにちは、Timelabで Lynxというカレンダーサービスを開発している諸岡（@hakoten）です。
この記事は、RAGの種類の一つである「マルチモーダルRAG」を具体的なサンプルを用いて試したものになります。
精度や運用の話には触れておらず、あくまでアプローチの入門記事であるころご理解ください。

 マルチモーダルRAGとは
従来のベクトルデータベースを使ったRAGでは、テキストベースを中心に検索を行いますが、実際のユースケースでは画像、PDF、音声など、さまざまな形式のデータを扱う必要があります。
この際に、画像やPDFなどを統合的に検索できる仕組みを、マルチモー...]]></description><link>https://zenn.dev/timelab/articles/764104c9db7d86</link><guid isPermaLink="true">https://zenn.dev/timelab/articles/764104c9db7d86</guid><pubDate>Wed, 08 Oct 2025 23:41:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EjEO95Mo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CLIP%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25ABRAG%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hakotensan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxMjE1ZGFiYzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Timelab%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzNGM1MmE4MWMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>hakotensan</dc:creator></item><item><title><![CDATA[プロンプトエンジニアリングを終わらせるDSPy]]></title><description><![CDATA[
 はじめに
DSPyに夢中である。DSPyの最も重要な点は、プロンプトエンジニアリングを排除できる可能性を秘めていることだ。可能性を秘めているだけで、現状、プロンプトエンジニアリングが完全に不要になったわけではないのだが、こちらの分野を真面目に学ぶ動機として十分だ。使い心地というか、真面目にこの分野やってみようと思ったのはPFNのChainerを初めて触ってみたときの感覚に似ている。その後、PyTorchが出現し、すごいスピードで技術とツールが進歩していく中で、学んだことをまとめるためにブログを書き始めたのを思い出した。
https://dspy.ai/#__tabbed_3_1
DS...]]></description><link>https://zenn.dev/cybernetics/articles/39fb763aca746c</link><guid isPermaLink="true">https://zenn.dev/cybernetics/articles/39fb763aca746c</guid><pubDate>Wed, 08 Oct 2025 22:45:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0q7HhHL---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E7%25B5%2582%25E3%2582%258F%25E3%2582%2589%25E3%2581%259B%25E3%2582%258BDSPy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HELLO_CYBERNETICS%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZmMTc5MDZiMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>HELLO_CYBERNETICS</dc:creator></item><item><title><![CDATA[Claude Code Sandbox で Node.js イメージに Python を追加する際の PEP668 エラー解決法]]></title><description><![CDATA[
 はじめに
https://github.com/anthropics/claude-code/tree/main/.devcontainer

Claude Code のレポジトリで公開されている devcontainer を使用して Python 環境を立てて使用したいと思った。
ただし、レポジトリに公開されているベースイメージが Node.js のため、Python を別途インストールする必要がある。
そのままインストールするとライブラリを pip で別途追加する際に、PEP668由来の error: externally-managed-environment が表示され、イン...]]></description><link>https://zenn.dev/t_tsuge/articles/8622ec7a0f60af</link><guid isPermaLink="true">https://zenn.dev/t_tsuge/articles/8622ec7a0f60af</guid><pubDate>Wed, 08 Oct 2025 16:28:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TQTIq_Rx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%2520Sandbox%2520%25E3%2581%25A7%2520Node.js%2520%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%2520Python%2520%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%2520PEP668...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t_tsuge%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExN2FkYTMyYzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>t_tsuge</dc:creator></item><item><title><![CDATA[誰でも書けるスクリプト言語は、immutable な配列を提供すればよかった]]></title><description><![CDATA[
 突然ですが、
Python あるある〜。
a = [1, 2, 3]
b = a # コピー？
c = a # コピー？

b.append(4) # 追加
c.append(5) # 追加

print(b)
# [1, 2, 3, 4, 5]
# c に追加したはずの 5 が
# b にも追加されていて、ビビる

print(c)
# [1, 2, 3, 4, 5]
# b に追加したはずの 4 が
# c にも追加されていて、ビビる
JavaScript 版もありますconst a = [1, 2, 3]
const b = a // コピー？
const c = a // コ...]]></description><link>https://zenn.dev/toga/articles/immutable-vector</link><guid isPermaLink="true">https://zenn.dev/toga/articles/immutable-vector</guid><pubDate>Wed, 08 Oct 2025 15:32:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MvRgSnCO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25AA%25B0%25E3%2581%25A7%25E3%2582%2582%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AF%25E3%2580%2581immutable%2520%25E3%2581%25AA%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E6%258F%2590%25E4%25BE%259B%25E3%2581%2599%25E3%2582%258C%25E3%2581%25B0%25E3%2582%2588%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A8%25E3%2581%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1NTBlNjIzOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>とが</dc:creator></item><item><title><![CDATA[Pythonでアナグラム判定]]></title><description><![CDATA[アナグラム（anagram）とは、文字の順序を入れ替えて別の単語を作ることです。例えば「listen」と「silent」や、「Tom Marvolo Riddle」（トム・マールヴォロ・リドル）と「I am Lord Voldemort」（我輩はヴォルデモート卿なり）はアナグラムの関係にあります。

 問題の定義
問題: 2つの文字列 s と t が与えられたとき、それらがアナグラムかどうかを判定する関数を実装してください。
例:
isAnagram("anagram", "nagaram")  # True
isAnagram("rat", "car")          # Fals...]]></description><link>https://zenn.dev/junwineone/articles/afeeb26fb579e6</link><guid isPermaLink="true">https://zenn.dev/junwineone/articles/afeeb26fb579e6</guid><pubDate>Wed, 08 Oct 2025 13:41:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xUItTkvB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%258A%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E5%2588%25A4%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:junwine%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlNmYzOGZmNzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>junwine</dc:creator></item><item><title><![CDATA[pydantic-settingsで実行環境から環境変数を読み込む方法]]></title><description><![CDATA[今回は昨日に続いて、pydantic-settingsを利用して環境変数を取り扱おうと思います。昨日は.envファイルを読み込むように設定しましたが、今回はPython実行環境にすでに設定されている環境変数を読み込む方法を共有します。
https://zenn.dev/akasan/articles/0a4136eb60030d

 早速やってみる！
先ほど書いたように、今回は.envから読み込むのではなく、実行環境にすでに登録されている環境変数を読み込もうと思います。

 環境構築
今回はuvで環境構築するとともに、シェルに環境変数を登録します。
uv init pydantic_se...]]></description><link>https://zenn.dev/akasan/articles/3e60499f9b189a</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/3e60499f9b189a</guid><pubDate>Wed, 08 Oct 2025 13:09:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZmpYfVZs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pydantic-settings%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258B%25E3%2582%2589%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[EmbeddingGemma-300mでテキスト分類（LoRA）]]></title><description><![CDATA[
 初めに
GoogleからEmbeddingGemma-300mが出ましたので、ファインチューニングを試してみました。
EmbeddingGemma-300mでテキスト分類（ロジスティック回帰）では、accuracy = 89.6%でした。
今度はLoRAのファインチューニングを試してみます。
データセットは同様にlivedoor ニュースコーパスです。
今回の結果は、accuracy = 95.7%でした。
Gemma 3 270Mのファインチューニングより良い結果となりました。


 インストール
!pip install evaluate

 データ準備
livedoor ニュー...]]></description><link>https://zenn.dev/piment/articles/c0b594492a4deb</link><guid isPermaLink="true">https://zenn.dev/piment/articles/c0b594492a4deb</guid><pubDate>Wed, 08 Oct 2025 13:08:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--03nWLqdC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:EmbeddingGemma-300m%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%2588%2586%25E9%25A1%259E%25EF%25BC%2588LoRA%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B4%25E3%2583%25BC%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiODU4NjI1MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ぴーまん</dc:creator></item><item><title><![CDATA[現場で使える！Dify x Pythonハイブリッド開発実践！]]></title><description><![CDATA[
 はじめに
こんにちは！株式会社Sapeetのソリューション事業部でアルゴリズムエンジニアとして働いている堀ノ内です。ソリューション事業部では受託開発を行なっており、近年は生成AIを活用したプロジェクトが非常に増えています。
弊社では開発を迅速に進めるため、PoCの段階ではノーコードツールであるDifyを活用しており、多くのプロジェクトに導入してきました。これまではDifyを単体で使うことが多かったのですが、ノーコードツールであるが故、少し凝った処理をしようとしたり、UIをリッチにしようとすると実現が難しいという課題があります。
こちらの解決策の1つとして、AI周りのワークフローはDi...]]></description><link>https://zenn.dev/sapeet/articles/edfee5b30d79a8</link><guid isPermaLink="true">https://zenn.dev/sapeet/articles/edfee5b30d79a8</guid><pubDate>Wed, 08 Oct 2025 09:18:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oSPd5qJA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25EF%25BC%2581Dify%2520x%2520Python%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E5%25AE%259F%25E8%25B7%25B5%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Tsukasa%2520Japan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I2NDhiYmQ3ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BESapeet%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1NjcxZjE0OTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Tsukasa Japan</dc:creator></item><item><title><![CDATA[デジタルデトックスのその先。]]></title><description><![CDATA[
 はじめに
私は、スマホを持っていない。デジタルデトックスをしようと何度も思って、いろいろいろいろ試したあげく、そうなった。本記事では、それでもみんなと合わせて過ごすため、私が行なっている工夫のうち技術的側面を書き残せればと思う。

 この記事で取り扱う内容
7本立てで記事を投稿する予定である。
&lt;ルーター設定&gt;

家Wi-Fiを1時間に制約
MACアドレス偽装対策

&lt;自作アプリケーション&gt;

「スリープ時Wi-Fiオフ」
「起動時10秒Wi-Fiオン」
「家Wi-Fi接続時間測定」＋「Wi-Fi/PC使用時間統計」
「今日のぶん終わり」
「地図印刷用ウィンド...]]></description><link>https://zenn.dev/kato_ho1/articles/83059e882a15a3</link><guid isPermaLink="true">https://zenn.dev/kato_ho1/articles/83059e882a15a3</guid><pubDate>Wed, 08 Oct 2025 06:25:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WrkKI4ik--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2582%25B8%25E3%2582%25BF%25E3%2583%25AB%25E3%2583%2587%25E3%2583%2588%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AE%25E3%2581%259D%25E3%2581%25AE%25E5%2585%2588%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A8%25E3%2581%2586%2520%25E5%25B8%2586%25E4%25B8%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNGE3YzBjODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>かとう 帆一</dc:creator></item><item><title><![CDATA[不動産データを使ったMeta-Learnerによる因果効果推定の比較（S / T / X-Learner）]]></title><description><![CDATA[
 Meta-Learnerによる因果効果推定の比較（S / T / X-Learner）

 はじめに
因果推論の文脈でよく登場する手法に Meta-Learner があります。
代表的なものとして S-Learner, T-Learner, X-Learner が知られています。
本記事では、賃貸住宅における宅配ボックス設置が賃料に与える効果 を題材に、
これら3つの手法を Python で実装し、その推定分布を比較しました。
「不動産」に限らず、マーケティング施策や医療介入など、処置（Treatment）がある場面で効果推定をしたい
という一般的なケースに応用できる内容です。


...]]></description><link>https://zenn.dev/sumasate_tec/articles/ds__otani__0</link><guid isPermaLink="true">https://zenn.dev/sumasate_tec/articles/ds__otani__0</guid><pubDate>Wed, 08 Oct 2025 05:52:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3ACQOioH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%258D%25E5%258B%2595%25E7%2594%25A3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FMeta-Learner%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%259B%25A0%25E6%259E%259C%25E5%258A%25B9%25E6%259E%259C%25E6%258E%25A8%25E5%25AE%259A%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%2588S%2520%252F%2520T%2520%252F%2520X-Learner%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25B9%25E3%2583%259E%25E3%2582%25B5%25E3%2583%2586%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxMWNlN2JhZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259E%25E3%2582%25B5%25E3%2583%2586%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlhMTRkYWQ3ZTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>スマサテ株式会社</dc:creator></item><item><title><![CDATA[【Python】Pixiの特異性「Task」の基本]]></title><description><![CDATA[
 タスクの全容を知る
https://pixi.sh/latest/workspace/advanced_tasks/
パッケージマネージャーは数多あれ、それがタスクを持つことは尠少、しかしその利便たるや計り知れないところがある。本記事はPixiの持つ特異性の一つ、タスクについて、その基本的な使い方を極力簡素に網羅するものである。
なお、一部の操作はコマンドpixi task ～で行うことができるが、本記事ではこれを扱わない。

 0. ワークスペース新規作成
まずは新規にワークスペースを一つ作る。

 tasksの名で作成
pixi init tasks

tasksフォルダーと、そ...]]></description><link>https://zenn.dev/amenaruya/articles/d1b350697a4f2b</link><guid isPermaLink="true">https://zenn.dev/amenaruya/articles/d1b350697a4f2b</guid><pubDate>Tue, 07 Oct 2025 22:35:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--byO3rEhO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591Pixi%25E3%2581%25AE%25E7%2589%25B9%25E7%2595%25B0%25E6%2580%25A7%25E3%2580%258CTask%25E3%2580%258D%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:amenaruya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwZDg5YWZmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>amenaruya</dc:creator></item><item><title><![CDATA[discord.pyでcogを使って開発しやすくする]]></title><description><![CDATA[
 はじめに
discord.pyでようせいさんというBotを作っています。ようせいさんの招待はこちら。
はじめはサーバー内でメンバーを募集する機能を作っていましたが，徐々に機能が増えてコードが1000行を超え始めて，修正作業や新しい機能の追加が大変になりました。
ファイルを分ける方法を調べるとcogというものが出てきたので調べながら実装してみました。
Cogの有効化の方法がよくわからない部分も多いです😭

 参考ページ
https://discordpy.readthedocs.io/ja/stable/ext/commands/cogs.html
https://zenn.dev/n...]]></description><link>https://zenn.dev/kush1n_a/articles/f03daa46ca18c4</link><guid isPermaLink="true">https://zenn.dev/kush1n_a/articles/f03daa46ca18c4</guid><pubDate>Tue, 07 Oct 2025 17:37:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RUWu9Km0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:discord.py%25E3%2581%25A7cog%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2581%2597%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnhwSUc3S2FuWVNsQ1NuVG1UX1VqVFctamNROEpBazUyVmVTYzFPVERGbXM0aDZva209czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>くしな</dc:creator></item><item><title><![CDATA[pydantic-settingsで環境変数を読み込む方法]]></title><description><![CDATA[今回はpydantic-settingsを用いて環境変数を読み込むと同時に、環境変数の値のバリデーションをしてみようと思います。

 pydantic-settingsとは？
pydantic-settingsは環境変数やシークレットファイルを読み込んで利用するための機能をpydanticから拡張したものになっています。通常Pythonで環境変数を読み込むときはosモジュールを利用することが多いかと思いますが、pydantic-settingsを利用するとpydanticに備わっているバリデーション機能などを利用することができるため、より安全に環境変数などを扱うことができます。
http...]]></description><link>https://zenn.dev/akasan/articles/0a4136eb60030d</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/0a4136eb60030d</guid><pubDate>Tue, 07 Oct 2025 14:10:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f9WEZSfH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pydantic-settings%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[【Python】ピクセルの位置を入れ替えて画像を別の画像にしてみた]]></title><description><![CDATA[
 概要
本記事では、ある画像（例: オーロラの写真）を、別の画像（例: オバマ大統領）の構造を持つように変形させるモーフィング・アニメーションをPythonで作成する手法を紹介します。
このアルゴリズムの面白い点は、ピクセルの色を一切変えず、その位置を入れ替えるだけで目標画像を再構成する点です。ピクセルの対応付けには「輝度」の順位を利用し、直感的で美しいアニメーションを生成します。完成したコードと、その背景にある「最適輸送」などの考え方についても触れていきます。



 はじめに
最近TLを眺めていたら、任意の画像をオバマ大統領に変換するプログラムを見かけました。そのアイデアに触発され...]]></description><link>https://zenn.dev/kinnkinn/articles/d41e2b227cf124</link><guid isPermaLink="true">https://zenn.dev/kinnkinn/articles/d41e2b227cf124</guid><pubDate>Tue, 07 Oct 2025 13:56:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eKQE7-i1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%2594%25E3%2582%25AF%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25AE%25E4%25BD%258D%25E7%25BD%25AE%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E6%259B%25BF%25E3%2581%2588%25E3%2581%25A6%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E5%2588%25A5%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kinnkinn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3Y2M3ZGVjYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>kinnkinn</dc:creator></item><item><title><![CDATA[僕の頭の中、AIが翻訳してくれました。数独2000問を解いた僕が、人間の「思考」をアルゴリズムに落とし込むまで]]></title><description><![CDATA[
 はじめに
この記事は、「自分の数独の解き方をアルゴリズムとして実装してみたい！」そんな興味から生まれた、AIとの共同開発の記録です。
本記事のテーマは、AIを「思考の翻訳機」であり「コーディングパートナー」として活用し、自分の頭の中にある複雑な思考プロセスを、いかにして具体的なプログラムに落とし込んでいくか、その試行錯誤の全記録です。
コードの大部分はAIによって生成されましたが、最終的なロジックの検証、デバッグ、そして僕の「美学」に合う形へのリファクタリングは、僕とAIの対話を通じて行われました。 この記事が、AIを使って自分のアイデアを形にしたいと考えている方にとって、具体的なヒ...]]></description><link>https://zenn.dev/koupro0204/articles/773c9ff31a4e98</link><guid isPermaLink="true">https://zenn.dev/koupro0204/articles/773c9ff31a4e98</guid><pubDate>Tue, 07 Oct 2025 12:23:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sjM-OO2a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2583%2595%25E3%2581%25AE%25E9%25A0%25AD%25E3%2581%25AE%25E4%25B8%25AD%25E3%2580%2581AI%25E3%2581%258C%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%25E6%2595%25B0%25E7%258B%25AC2000%25E5%2595%258F%25E3%2582%2592%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%259F%25E5%2583%2595%25E3%2581%258C%25E3%2580%2581%25E4%25BA%25BA%25E9%2596%2593%25E3%2581%25AE%25E3%2580%258C%25E6%2580%259D%25E8%2580%2583%25E3%2580%258D%25E3%2582%2592%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2581%25AB%25E8%2590%25BD%25E3%2581%25A8%25E3%2581%2597%25E8%25BE%25BC%25E3%2582%2580%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YTdjZjUyNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>い。</dc:creator></item><item><title><![CDATA[RenderにデプロイするPythonアプリのVersionを指定する方法]]></title><description><![CDATA[
 Renderにデプロイする際のPython Versionについて
デフォルトではデプロイした日付によってPythonのVersionが異なるようです。

しかし、PythonのVersionを上げたい場合や下げたい場合もあると思います。
下記の公式ドキュメントによると、方法は2つあるようなので紹介したいと思います。
https://render.com/docs/python-version

 方法①　環境変数にPYTHON_VERSIONを設定
Render ➔ Projects ➔ SERVICE NAME ➔ Environment
Key:PYTHON_VERSION
V...]]></description><link>https://zenn.dev/aputech/articles/53c3e8decc941c</link><guid isPermaLink="true">https://zenn.dev/aputech/articles/53c3e8decc941c</guid><pubDate>Tue, 07 Oct 2025 07:46:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tNoQapGB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Render%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258BPython%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEVersion%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2583%25BC%2540%25E6%2583%2585%25E5%25A0%25B1%25E7%25B3%25BB%25E5%25AD%25A6%25E7%2594%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxMzE3MjU3ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>ひー@情報系学生</dc:creator></item><item><title><![CDATA[動くコード小説「暗号アリス」]]></title><description><![CDATA[
 Cipher Alice — Executable Code-Novel
Run this file with Python 3.
You can tweak RUN_MODE and ENDING_CHOICE at the bottom.
from textwrap import dedent
import random

# ===== Utilities =====

class DecodeError(Exception):
    pass

def rot13(s: str) -&gt; str:
    # ROT13 for ASCII letters only
 ...]]></description><link>https://zenn.dev/yasuna_ide/articles/90c1936f29fcb6</link><guid isPermaLink="true">https://zenn.dev/yasuna_ide/articles/90c1936f29fcb6</guid><pubDate>Tue, 07 Oct 2025 05:13:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--em_LS-3H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%2595%25E3%2581%258F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%25B0%258F%25E8%25AA%25AC%25E3%2580%258C%25E6%259A%2597%25E5%258F%25B7%25E3%2582%25A2%25E3%2583%25AA%25E3%2582%25B9%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yasuna%2520Ide%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NhNmU0OGM4YzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>Yasuna Ide</dc:creator></item><item><title><![CDATA[YOLOによる小物体検出 - 過学習とフレーム差分で精度向上]]></title><description><![CDATA[
 はじめに
「キャップ野球」は、ペットボトルのキャップをボールの代わりに使用するユニークなスポーツです。私はこの競技のデータプラットフォームを開発・運営しており、試合成績の記録/閲覧や選手分析などの機能を提供しています。
https://cap-baseball.com
野球では球場に固定されたハイスピードカメラなどによる分析が進んでおり、分析されたデータは様々なところに使われていると聞きます。
キャップ野球もリーグ戦や大会などが数多く行われ、ハイスピードカメラではないものの映像記録は豊富に残っており、その映像記録からデータ分析を行えないか考えています。
本業はフロントエンドエンジニア...]]></description><link>https://zenn.dev/ckoshien/articles/998987fb5cc962</link><guid isPermaLink="true">https://zenn.dev/ckoshien/articles/998987fb5cc962</guid><pubDate>Tue, 07 Oct 2025 05:04:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1KsAFql1--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:YOLO%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25B0%258F%25E7%2589%25A9%25E4%25BD%2593%25E6%25A4%259C%25E5%2587%25BA%2520-%2520%25E9%2581%258E%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25A8%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E5%25B7%25AE%25E5%2588%2586%25E3%2581%25A7%25E7%25B2%25BE%25E5%25BA%25A6%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koshien%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyMTBiMDYzYWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>koshien</dc:creator></item><item><title><![CDATA[Microsoft Agent Frameworkをためしてみた（python）]]></title><description><![CDATA[2025/10/1にMicrosoftからエージェント開発の最新フレームワークである『Microsoft Agent Framework』が公開されました！
ザックリと概要を説明して、Pythonでの実装例をかいつまんで載せていきます。
※LLMモデルはAzure Open AIを利用しております。
https://devblogs.microsoft.com/foundry/introducing-microsoft-agent-framework-the-open-source-engine-for-agentic-ai-apps/

 概要

 Microsoft Agent Fr...]]></description><link>https://zenn.dev/headwaters/articles/2d8222bf2214ad</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/2d8222bf2214ad</guid><pubDate>Mon, 06 Oct 2025 21:21:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KIPEhVDn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Microsoft%2520Agent%2520Framework%25E3%2582%2592%25E3%2581%259F%25E3%2582%2581%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2588python%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yu%2520shimohama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgzZjNhMmM0NDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png?_a=BACAGSGT" length="0" type="false"/><dc:creator>yu shimohama</dc:creator></item></channel></rss>