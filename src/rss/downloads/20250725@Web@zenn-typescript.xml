<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 25 Jul 2025 05:02:39 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[SaaSプロダクトのKubernetesマニフェスト管理をcdk8s化して運用性・保守性を大幅改善しました]]></title><description><![CDATA[こんにちは、エンジニアの齊藤です。
私が携わっているプロダクトでは、複数の旅行会社向けにSaaSサービスを提供しており、Kubernetes(k8s)でWebアプリケーションやバッチジョブを運用しています。嬉しいことに導入してくださるお客様が増えてきたのですが、各顧客に要求されるリソース量や細かな設定値が異なっているため、顧客数の増加に伴い運用負荷が高まってきていたという側面がありました。
具体的には、k8sマニフェストの管理が問題となっていました。k8sを用いてアプリをデプロイするためにはk8sマニフェストを用意する必要がありますが、我々のプロダクトでは細かな設定値の異なる複数の顧客に...]]></description><link>https://zenn.dev/forcia_tech/articles/20250711_rsaito_cdk8s</link><guid isPermaLink="true">https://zenn.dev/forcia_tech/articles/20250711_rsaito_cdk8s</guid><pubDate>Fri, 25 Jul 2025 04:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m_ySGZXC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SaaS%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2580%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AEKubernetes%25E3%2583%259E%25E3%2583%258B%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25B9%25E3%2583%2588%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592cdk8s%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E9%2581%258B%25E7%2594%25A8%25E6%2580%25A7%25E3%2583%25BB%25E4%25BF%259D%25E5%25AE%2588%25E6%2580%25A7%25E3%2582%2592%25E5%25A4%25A7%25E5%25B9%2585%25E6%2594%25B9%25E5%2596%2584%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:FORCIA%2520Tech%2520Blog%2520%25E9%2581%258B...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMDIwOGYzMDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:FORCIA%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkZmRkZTQ5MGUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>FORCIA Tech Blog 運営チーム</dc:creator></item><item><title><![CDATA[大規模PJでAI駆動開発。Cursor Agentの品質とは？]]></title><description><![CDATA[
 はじめに
こんにちは。エンジニア 兼 講師のShotaです。
普段はエンジニアとしてAIツールを実案件に適用しながら開発を行い、同時に講師として得られた知見を体系化して受講生の方にお伝えする活動をしています。
AIツールを実案件に適用する際に事前に知っておくべき実践的なTipsのシリーズ第2回目。今回のテーマは「Agentモードの品質とは？」です。
前回解説した、新規開発に利用するAIツールのAgentモード。「〇〇アプリ作ってみた」という紹介記事は数多くありますが、実際に出力されるコードの品質を詳しく分析した事例はまだ少ないのが現状です。
AIツールは個人開発や小規模PJでの利用に...]]></description><link>https://zenn.dev/shotafukuyama/articles/890e8178cfda7d</link><guid isPermaLink="true">https://zenn.dev/shotafukuyama/articles/890e8178cfda7d</guid><pubDate>Fri, 25 Jul 2025 02:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x5K8id41--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1PJ%25E3%2581%25A7AI%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2582Cursor%2520Agent%25E3%2581%25AE%25E5%2593%2581%25E8%25B3%25AA%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shota%2520Fukuyama%25EF%25BD%259CUde...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NjMDQ5ZmY1NDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shota Fukuyama｜Udemyベストセラー講師</dc:creator></item><item><title><![CDATA[TanStack Routerで実現する高度なクエリパラメータ管理]]></title><description><![CDATA[
 はじめに
ReactアプリケーションでURLクエリパラメータを扱う際に直面する課題として、型安全性の欠如、複雑なデータ構造の扱いづらさ、デフォルト値の管理、そしてパフォーマンスの最適化などがあります。
既存のルーティングライブラリ（React Router、Next.js、Expo Routerなど）は基本的なuseSearchParamsやuseLocalSearchParamsフックを提供していますが、これらは手動での型変換、文字列処理、バリデーションが必要で、開発者体験を大きく損なっています。
本記事では、TanStack Routerが提供する高度なクエリパラメータ管理機能、...]]></description><link>https://zenn.dev/tsuboi/articles/c76fc09315bdd1</link><guid isPermaLink="true">https://zenn.dev/tsuboi/articles/c76fc09315bdd1</guid><pubDate>Thu, 24 Jul 2025 11:38:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fINKFH1M--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TanStack%2520Router%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E9%25AB%2598%25E5%25BA%25A6%25E3%2581%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E7%25AE%25A1%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tsuboi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzMmU3Zjg2MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tsuboi</dc:creator></item><item><title><![CDATA[TypeScriptの自分用技術スタック]]></title><description><![CDATA[
 概略
すごい基本的なことを記録しています。

 判定

 指定した文字を含むかどうかを判定
const isMatch = str.includes("指定文字");

 指定した文字（複数）を含むかどうかを判定
const specialChars = ['.', '*']
const isMatch = specialChars.some(char =&gt; str.includes(char));

 処理分岐

 truthyならTrue、falsyならFalaseにする
// metaが存在し、meta.errorがtruthyならtrue
const isError =...]]></description><link>https://zenn.dev/noelsun/articles/f3cd6700bb77f4</link><guid isPermaLink="true">https://zenn.dev/noelsun/articles/f3cd6700bb77f4</guid><pubDate>Thu, 24 Jul 2025 10:17:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pVGGVZOi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noelsun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEpJT01tVEphcHlKMUMxU3ZrZGpoX1p1R29tYklscy1Cc2xlb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noelsun</dc:creator></item><item><title><![CDATA[NuxtのuseFetchのカスタマイズが思いのほか面倒だった]]></title><description><![CDATA[useFetchのbaseURLオプションを毎度書くのが非常に面倒なので、ラッパーコンポーザブルをサクッと書こうとしたら意外難しかったのでメモ。
まずnuxt.config.tsにbaseURLオプションを指定しておく。

nuxt.config.ts
export default defineNuxtConfig({
  runtimeConfig: {
    public:{
      baseURL: "http://example.com/",
    }
  }
}

ラッパーコンポーザブルuseApi.tsを試しに👇のように書くと、useFetchにオプションを渡すときに...]]></description><link>https://zenn.dev/artovenry/articles/9355403a8a9290</link><guid isPermaLink="true">https://zenn.dev/artovenry/articles/9355403a8a9290</guid><pubDate>Thu, 24 Jul 2025 09:05:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HqhG_OMS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nuxt%25E3%2581%25AEuseFetch%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%258C%25E6%2580%259D%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25BB%25E3%2581%258B%25E9%259D%25A2%25E5%2580%2592%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:artovenry%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUU4RHlBeVhMbFZ1dG5mbnBiZmY5cEVrOVVYWVVMVWQyOUplYkc1TjNBTkE4U1Z3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>artovenry</dc:creator></item><item><title><![CDATA[テックブログ始めました]]></title><description><![CDATA[
 まとめ

ウェザーニューズのテックブログを開設しました
エンジニア、広報、法務による多角的なレビューを導入します
一連の流れをシステマチックにするため、GitHub Actions を利用した自動化を図っています
システム構築にあたり Vibe/Agentic Coding を最大限活用しました


 はじめに
はじめまして、株式会社ウェザーニューズ陸上気象事業部の Hoshock です。
全社のモダン開発・クラウド化を推進しており、直近では新卒の開発研修リーダーを務めています。
この度、表題の通りウェザーニューズのテックブログを開設しました。
このブログでは、ウェザーニューズの開発...]]></description><link>https://zenn.dev/weathernews/articles/b47082b365c8ca</link><guid isPermaLink="true">https://zenn.dev/weathernews/articles/b47082b365c8ca</guid><pubDate>Thu, 24 Jul 2025 05:45:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BQUEpTXh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E5%25A7%258B%25E3%2582%2581%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hoshock%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5OTYyNThkZjkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Weathernews%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwNjAzM2NlZTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hoshock</dc:creator></item><item><title><![CDATA[SWRの再取得を疎結合に通知する、イベント駆動のReact設計パターン]]></title><description><![CDATA[
 はじめに
ReactでSPAを開発していると、ある画面での操作が別のコンポーネントに影響を与えるという場面に頻繁に出くわします。
たとえば、以下のようなケースです：

商品の並び替えが完了したら、商品一覧を再取得したい
アイテムの削除や追加後に、他のビューのデータも更新したい

こうしたときに、SWRの mutate() を使えばうまくいきそうに思えますが、実際にはいくつかの課題があります。
この記事では、Contextや状態管理ライブラリに頼らず、依存を増やさずに実現できる方法として、超軽量なEventEmitterパターンをご紹介します。

 mutateの限界："グローバルに呼...]]></description><link>https://zenn.dev/kra8/articles/ff7fbf6a3c629d</link><guid isPermaLink="true">https://zenn.dev/kra8/articles/ff7fbf6a3c629d</guid><pubDate>Thu, 24 Jul 2025 01:52:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TXH9BpPS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SWR%25E3%2581%25AE%25E5%2586%258D%25E5%258F%2596%25E5%25BE%2597%25E3%2582%2592%25E7%2596%258E%25E7%25B5%2590%25E5%2590%2588%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2580%2581%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E9%25A7%2586%25E5%258B%2595%25E3%2581%25AEReact%25E8%25A8%25AD%25E8%25A8%2588%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kra8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lWZnhseVJ2ajMtVG1sU1VWNDY0NHd6Z3QtV3FmaVRHQ0xrNzdpPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kra8</dc:creator></item><item><title><![CDATA[Mastraワークフローの型安全性と変更容易性を高める設計指針]]></title><description><![CDATA[
 はじめに
こんにちは、atamaplus の takei です。
最近、趣味や業務でエージェントフレームワークであるMastra のワークフロー機能[1]を約 1 ヶ月ほど使ってみました。
実際に使ってみて非常に便利である一方で、適切に設計しないと型安全性や変更容易性（保守性）に課題が生じやすいと感じました。
特に以下のような課題に直面しました。

ステップ[2] の中で getInitData[3] や runtimeContext[4] を使うと型推論が効かず、型安全でないコードになる
ステップがワークフロー定義に依存し、ワークフローの変更や他のワークフローでのステップの再利用が...]]></description><link>https://zenn.dev/atamaplus/articles/f558f854fe715d</link><guid isPermaLink="true">https://zenn.dev/atamaplus/articles/f558f854fe715d</guid><pubDate>Thu, 24 Jul 2025 01:07:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FTjuZFOn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E3%2581%25A8%25E5%25A4%2589%25E6%259B%25B4%25E5%25AE%25B9%25E6%2598%2593%25E6%2580%25A7%25E3%2582%2592%25E9%25AB%2598%25E3%2582%2581%25E3%2582%258B%25E8%25A8%25AD%25E8%25A8%2588%25E6%258C%2587%25E9%2587%259D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yutake27%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjOTM3M2I1YWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:atama%2520plus%2520techblog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNTc2ZTM0OTQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yutake27</dc:creator></item><item><title><![CDATA[[TypeScript]乱数文字列を生成する]]></title><description><![CDATA[!
この記事は「[Dart]乱数文字列を生成する」をTypeScript用に書き換えたものです.

https://zenn.dev/toms74209200/articles/dart-random-string

JavaScript でよく見る乱数文字列を生成する関数は以下のようなものでしょう.
function generateRandomString(length) {
    const chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    let result = "";
...]]></description><link>https://zenn.dev/toms74209200/articles/typescript-random-string</link><guid isPermaLink="true">https://zenn.dev/toms74209200/articles/typescript-random-string</guid><pubDate>Thu, 24 Jul 2025 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OfOvNTkx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%25E4%25B9%25B1%25E6%2595%25B0%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:toms%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTVLV3Rva3h5eWFxT0M5ajlpQXhVQjF1NVlndDV3QUprRjVEc0lXcEVDNnVoUD1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>toms</dc:creator></item><item><title><![CDATA[Promiseとモナド： then と async/await の選び方]]></title><description><![CDATA[何度目の議論かという感じですが、全員がこうすべきという主張ではなく、あくまで自分の意見を残すためのドキュメントです。

 tl;dr
async/await と then は表面的には等価ですが、設計や保守の観点では明確なトレードオフがあります。
制約が強いほど安全性が高く、予期せぬ副作用を避けやすくなります。
そのため、原則として関数合成（then）を採用し、どうしても中間変数が必要な箇所のみ async によるdo記法を用いるべきだと考えています。

 Promise とモナド：then と async/await の選び方
Promise や一般的なモナドを扱う際、主に2種類の記法...]]></description><link>https://zenn.dev/unhappychoice/articles/b46ee85439beb1</link><guid isPermaLink="true">https://zenn.dev/unhappychoice/articles/b46ee85439beb1</guid><pubDate>Wed, 23 Jul 2025 23:03:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LmCT3sEN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Promise%25E3%2581%25A8%25E3%2583%25A2%25E3%2583%258A%25E3%2583%2589%25EF%25BC%259A%2520then%2520%25E3%2581%25A8%2520async%252Fawait%2520%25E3%2581%25AE%25E9%2581%25B8%25E3%2581%25B3%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuji%2520Ueki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2htc0V1eUFJV0pMZjZCTGdTM1VweG5INnU5N0RCTHlrRkhXZmg5Q2t3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yuji Ueki</dc:creator></item><item><title><![CDATA[TypeScript でデザイントークン管理 ➜ Vite で CSS 変数を自動生成する方法]]></title><description><![CDATA[
 🌟 はじめに — 目的と背景
「デザイントークンをコードで一元管理したい」
これまでは私のプロジェクトでも、Figma 上で決めたカラーパレットや余白などを 共通の CSS 変数ファイル（variable.css） に直接記述して管理していました。
しかし、実際の開発では TypeScript 側にトークンとして定義されていなかったため、必要な値を使うたびに Figma や CSS ファイルを探して手動でコピペする という非効率な運用になっていました。
この記事では、TypeScript で定義したデザイントークンからカスタムプロパティ（CSS 変数）を自動生成し、Vite のビルド...]]></description><link>https://zenn.dev/hhh/articles/f4e135aaf6ad97</link><guid isPermaLink="true">https://zenn.dev/hhh/articles/f4e135aaf6ad97</guid><pubDate>Wed, 23 Jul 2025 03:28:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v7sD7oAS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25B3%25E7%25AE%25A1%25E7%2590%2586%2520%25E2%259E%259C%2520Vite%2520%25E3%2581%25A7%2520CSS%2520%25E5%25A4%2589%25E6%2595%25B0%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hhh%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNiM2FkYTFlMjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hhh</dc:creator></item><item><title><![CDATA[GraphQL API にデータを投入するツールがなかったので作った話]]></title><description><![CDATA[
 はじめに
こんにちは、Zenn 記事投稿 2 本目の @jackchuka です。
前回は、Go 製の CLI ツールを作った話をしましたが、今回は一転して TypeScript で開発した、GraphQL API にデータを投入するための CLI ツール GQL Ingest を紹介したいと思います。
https://github.com/jackchuka/gql-ingest

 開発の背景
先日、とあるプロジェクトで、データを GraphQL で作成されたバックエンドに投入する依頼が届きました。いかにもよくある内容で、大量のデータが埋め込まれた CSV ファイルからデータを投...]]></description><link>https://zenn.dev/jackchuka/articles/4d506fd67590bf</link><guid isPermaLink="true">https://zenn.dev/jackchuka/articles/4d506fd67590bf</guid><pubDate>Wed, 23 Jul 2025 01:22:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7l4jwlF8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GraphQL%2520API%2520%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%258A%2595%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jackchuka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXNwQ3o5V2tLRlZvZmZsaUVuY185ZE0xUXgtRV8tSkZ1blhNZnBYRkU5RC1QVU1nVFBwQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jackchuka</dc:creator></item><item><title><![CDATA[TypeScript & GraphQL でToDoアプリを開発する #3]]></title><description><![CDATA[
 ⬅️前回の記事はこちら
https://zenn.dev/agent_grow/articles/477f98f021fd2d

 Apollo Server &amp; Apollo Client の起動

 ⭐️Apollo Serverの起動
backend/にsrc/index.tsを作成

index.ts
import express from 'express';                                 // Expressを読み込み
import http from 'http';                                ...]]></description><link>https://zenn.dev/agent_grow/articles/8011af2c6d0ec6</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/8011af2c6d0ec6</guid><pubDate>Tue, 22 Jul 2025 23:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z19jG7Mb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%2526%2520GraphQL%2520%25E3%2581%25A7ToDo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%2520%25233%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%25A2%25E3%2583%25A9%25E3%2582%25A6%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlMWU4MWVlNDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>モラウ</dc:creator></item><item><title><![CDATA[Cloudflare環境でのStripe接続エラー解決方法]]></title><description><![CDATA[
 概要
Next.js + Stripe環境において、ローカル開発環境では正常に動作するがCloudflareにデプロイした本番環境で以下のエラーが発生する問題の解決方法についての記事になります
Stripe session retrieval error: Error: An error occurred with our connection to Stripe. Request was retried 3 times.

 発生環境

Next.js: 15.1.0
Stripe: ^18.3.0
@opennextjs/cloudflare: ^1.5.1
wrangler: ...]]></description><link>https://zenn.dev/rize/articles/7db0371d908572</link><guid isPermaLink="true">https://zenn.dev/rize/articles/7db0371d908572</guid><pubDate>Tue, 22 Jul 2025 14:45:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PiAOOHk0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2581%25AEStripe%25E6%258E%25A5%25E7%25B6%259A%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rize%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhMDQ5MzFkZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rize</dc:creator></item><item><title><![CDATA[Apollo-clientのtypescript-react-apolloを使って便利Hooksを自動生成して開発効率アップ]]></title><description><![CDATA[Apollo ClientでGraphQLの型安全かつ効率的な開発を行うには、@graphql-codegen/typescript-react-apolloを使ってhooksを自動生成するのがおすすめです。


 @graphql-codegen/typescript-react-apolloでhooksを自動生成して効率的に開発する方法

 1. 必要なパッケージのインストール
yarn add -D @graphql-codegen/cli @graphql-codegen/typescript @graphql-codegen/typescript-operations @gra...]]></description><link>https://zenn.dev/tk_niway/articles/apollo-client-plugin-2025-07-22</link><guid isPermaLink="true">https://zenn.dev/tk_niway/articles/apollo-client-plugin-2025-07-22</guid><pubDate>Tue, 22 Jul 2025 13:26:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F1UmN200--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apollo-client%25E3%2581%25AEtypescript-react-apollo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E4%25BE%25BF%25E5%2588%25A9Hooks%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk-niway%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YWM4NDM4NDguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk-niway</dc:creator></item><item><title><![CDATA[AI面接を支える技術]]></title><description><![CDATA[はじめまして。PeopleX エンジニアの坂津と申します。今回、先日始動したばかりのPeopleX テックブログのセカンドバッターを務めさせていただくことになりました。
簡単に自己紹介させていただくと、サウナが趣味で2024年には合計136回サウナ施設に訪問しました。特定の施設だけではなく、いろいろなサウナに入るのが好きで累計100施設ほど訪問しております。
「サ活(サウナ活動)だいすき坂津」と覚えてください！
さて、そんな私はPeopleXには昨年の創業当初から参画し、PeopleWork（タレントマネジメント、オンボーディング、社内報）、PeopleX AI上司など数々のプロダクト開...]]></description><link>https://zenn.dev/peoplex_blog/articles/2507-technology-supporting-ai-interview</link><guid isPermaLink="true">https://zenn.dev/peoplex_blog/articles/2507-technology-supporting-ai-interview</guid><pubDate>Tue, 22 Jul 2025 09:31:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FjeG19K8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E9%259D%25A2%25E6%258E%25A5%25E3%2582%2592%25E6%2594%25AF%25E3%2581%2588%25E3%2582%258B%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E5%259D%2582%25E6%25B4%25A5%2520%25E6%25BD%25A4%25E5%25B9%25B3%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2YjYwNDBmMmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PeopleX%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxMTJhZjAzZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>坂津 潤平</dc:creator></item><item><title><![CDATA[最初から自作のReact UIライブラリを構築]]></title><description><![CDATA[ReactとTypeScriptを使ったUIコンポーネントライブラリ構築の全工程、https://github.com/onekyuu/SEELE-UI]]></description><link>https://zenn.dev/onekyuu/books/95f910dac53638</link><guid isPermaLink="true">https://zenn.dev/onekyuu/books/95f910dac53638</guid><pubDate>Tue, 22 Jul 2025 03:50:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VBzhY17g--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kY2IzNTJmYjBjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Onekyuu</dc:creator></item><item><title><![CDATA[JavaScriptで日時の差分を計算する方法とISO形式の扱い方]]></title><description><![CDATA[
 初めに
jsのDate()オブジェクトについて色々調べたのでまとめます。

 Date()について
const d : Date = new Date();
console.log(d) // 出力； Sun Jul 20 2025 20:00:08 GMT+0900 (日本標準時)
Dateインスタンスを出力すると、Sun Jul 20 2025 20:00:08 GMT+0900 (日本標準時)のように表示されます。
これはローカルな環境での現在時刻をdateString形式で出力しているからです。

 どうやって取得しているのか
console.log(d.getTime())...]]></description><link>https://zenn.dev/amethyst/articles/d9d19dfd8c03a6</link><guid isPermaLink="true">https://zenn.dev/amethyst/articles/d9d19dfd8c03a6</guid><pubDate>Tue, 22 Jul 2025 03:16:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JrIfoFQG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E6%2597%25A5%25E6%2599%2582%25E3%2581%25AE%25E5%25B7%25AE%25E5%2588%2586%25E3%2582%2592%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25A8ISO%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25B4%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzYTAyNjNlN2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>紫</dc:creator></item><item><title><![CDATA[LeetCodeのTypeScript解説]]></title><description><![CDATA[
 Two Sum

 ポイント

合計する数値の数は2つのみであること。（3つ以上は考慮不要）

function twoSum(nums: number[], target: number): number[] {
  let tmpMap = new Map();
  for (let i = 0; i &lt; nums.length; ++i) {
    // ターゲット値から現要素の値を引いた数値がMapに存在すれば終わり。
    if (tmpMap.has(target - nums[i])) {
      return [tmpMap.get(target - n...]]></description><link>https://zenn.dev/noelsun/articles/5cf55d30bb9dab</link><guid isPermaLink="true">https://zenn.dev/noelsun/articles/5cf55d30bb9dab</guid><pubDate>Tue, 22 Jul 2025 01:27:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yX8wALhF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:LeetCode%25E3%2581%25AETypeScript%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noelsun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEpJT01tVEphcHlKMUMxU3ZrZGpoX1p1R29tYklscy1Cc2xlb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noelsun</dc:creator></item><item><title><![CDATA[TypeScriptユーティリティ型の「王道パターン」まとめ！実務でよく使う型操作テクニック集]]></title><description><![CDATA[
 はじめに
TypeScriptには便利なユーティリティ型（Pick, Partial, Omit, Required など）が用意されていますが、単体ではなく「組み合わせて使う」ことで真価を発揮します。
この記事では、実務でよく使われる 王道の組み合わせパターン5選 を紹介します。
🎯 ベース型の定義（共通）
まずは、例として使うベース型 User を定義します。
type User = {
  id: number
  name: string
  email: string
  password: string
  isAdmin: boolean
}

 1. 一部プロパティだ...]]></description><link>https://zenn.dev/oharu121/articles/a53ee5df2041f8</link><guid isPermaLink="true">https://zenn.dev/oharu121/articles/a53ee5df2041f8</guid><pubDate>Mon, 21 Jul 2025 12:26:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PnPc07qE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O%2520Haru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdQdmFwaGptVTIwMkxrb29lbU5jcDFRREdnRU40NE5RVTB5U0VKdHBqUUJWSjNQMFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O Haru</dc:creator></item></channel></rss>