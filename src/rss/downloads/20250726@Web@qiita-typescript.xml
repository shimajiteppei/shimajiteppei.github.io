<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/typescript/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/typescript/feed"/>
  <title>TypeScriptタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでTypeScriptタグが付けられた新着記事</description>
  <updated>2025-07-26T19:35:22+09:00</updated>
  <link>https://qiita.com/tags/typescript</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2058818</id>
    <published>2025-07-26T19:35:22+09:00</published>
    <updated>2025-07-26T19:35:22+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/ricorico/items/c2bcf9b1766fdca7925d"/>
    <url>https://qiita.com/ricorico/items/c2bcf9b1766fdca7925d</url>
    <title>【10分で読める】CursorでMCPサーバ作ろうとしたらAPIサーバ作ってた話</title>
    <content type="text">【10分で読める】CursorでMCPサーバ作ろうとしたらAPIサーバ作ってた話

はじめに
こんにちは。
世の流れ的にこういうのやっておこうか〜と思い、CursorでMCPサーバを作ってみようと思ったけど、途中でAPIになっていることに気付かずデプロイまでしてしまいまし...</content>
    <author>
      <name>ricorico</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2058788</id>
    <published>2025-07-26T17:59:23+09:00</published>
    <updated>2025-07-26T18:01:08+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuki3942/items/5c1ed18d4c86d417518d"/>
    <url>https://qiita.com/yuki3942/items/5c1ed18d4c86d417518d</url>
    <title>【React初心者メモ】useMemoの使い方</title>
    <content type="text">useMemoとは
useMemoとは、「計算結果を記憶（メモ化）して、不要な再計算を防ぐ」ためのフックです。
Reactのリレンダー（再描画）時、複雑な計算を毎回実行するとパフォーマンスに影響します。useMemo を使うとことで、依存値（dependencies）が変...</content>
    <author>
      <name>yuki3942</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2058764</id>
    <published>2025-07-26T16:48:50+09:00</published>
    <updated>2025-07-26T16:52:15+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/yuki3942/items/48f890df17f546697916"/>
    <url>https://qiita.com/yuki3942/items/48f890df17f546697916</url>
    <title>【React初心者メモ】代表的な配列メソッド</title>
    <content type="text">.map()
「元の配列の各要素に同じ処理を施して新しい配列を作る」ために使います。
基本的な書き方：
要素/インデックス/元の配列の3つをコールバック関数の引数として取ることができます。
// 1) element だけ受け取る
const newArray = ori...</content>
    <author>
      <name>yuki3942</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2058735</id>
    <published>2025-07-26T15:45:33+09:00</published>
    <updated>2025-07-26T15:45:33+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/tk-niway/items/09191d0efde712f25616"/>
    <url>https://qiita.com/tk-niway/items/09191d0efde712f25616</url>
    <title>NestJSでgRPCクライアントを実装する方法</title>
    <content type="text">@nestjs-grpc-protoc.md の記事の続きとして、ts-protoで生成した型を使い、NestJSでgRPCクライアントを実装する方法を解説します。

1. ts-protoで生成した型の準備
サーバー側と同じprotoファイルからts-protoでType...</content>
    <author>
      <name>tk-niway</name>
    </author>
  </entry>
</feed>
