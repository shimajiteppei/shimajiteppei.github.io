<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 20 Aug 2025 06:07:48 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Docker × MySQL】SQLダンプファイルをコンテナにインポートする方法]]></title><description><![CDATA[
 はじめに
Docker環境のMySQLに、PC上のSQLダンプファイルをインポートする手順を整理します。
既存データの移行やバックアップの復元、テストデータの投入などで頻繁に必要になる作業です。

 前提条件

MySQL が Docker コンテナで動作している
手元にインポートしたいダンプファイル（例：dump.sql）がある
Docker がインストール済み
コンテナ名（またはコンテナID）がわかっている（例：mysql-container）
インポート先のデータベース（例：sample_db）が存在している
（存在しない場合は以下で作成可能）

docker exec -it...]]></description><link>https://zenn.dev/fd2025/articles/a4a254a016fad4</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/a4a254a016fad4</guid><pubDate>Tue, 19 Aug 2025 12:29:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tZw2uw9Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%2520%25C3%2597%2520MySQL%25E3%2580%2591SQL%25E3%2583%2580%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[開発環境は毎日破壊せよ]]></title><description><![CDATA[あなたは開発環境を「秘伝のタレ」にしていませんか？

「この場合のデータを構築するにはコツがいるんだよ」
「.sqlite3ファイルは各プログラマーが育てるものだ」
「俺には俺の開発データがあるんだ。開発データがほしいなら、自分で作れ」

発想を転換してください。「開発環境は毎日破壊する」——それくらいの心構えで、クリーンで再現性の高い環境を扱う文化を根付かせるべきなのです。

 壊れることを恐れるな。そもそも壊れるものなのだから。
そもそも、開発環境は壊れるものです。 新入社員が不慣れな操作で壊すだけでなく、ベテランでも新しいフレームワークを使うときだったり、新しいツールを試したり、あ...]]></description><link>https://zenn.dev/doloopwhile/articles/a5c3cd0a22afa3</link><guid isPermaLink="true">https://zenn.dev/doloopwhile/articles/a5c3cd0a22afa3</guid><pubDate>Tue, 19 Aug 2025 08:16:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LICYrG9W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AF%25E6%25AF%258E%25E6%2597%25A5%25E7%25A0%25B4%25E5%25A3%258A%25E3%2581%259B%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2582%2582%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkMGI4MjIzZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おもと</dc:creator></item><item><title><![CDATA[ローカルから docker コンテナにファイルをコピーするコマンド]]></title><description><![CDATA[
 これなに

ローカル環境から docker コンテナ内にファイルをコピーするまでに必要なコマンドをまとめました
単なる基礎的な個人的なメモなのですが、興味がある人は読んでいただいても大丈夫です


 基本コマンド

 コンテナIDまたは名前を確認する
$ docker ps
CONTAINER ID   IMAGE         ...   NAMES
container-id   your-image    ...   your-container

 docker cp でファイルコピー
ダブルクオーテーションは便宜的に書いているだけなので、実際のコマンドには必要ありません
$...]]></description><link>https://zenn.dev/su3_hokkaido/articles/2025-06-10_cp_command_docker</link><guid isPermaLink="true">https://zenn.dev/su3_hokkaido/articles/2025-06-10_cp_command_docker</guid><pubDate>Mon, 18 Aug 2025 08:20:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e2FG7bVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2581%258B%25E3%2582%2589%2520docker%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Su3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmY2Q1YTk5MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Su3</dc:creator></item><item><title><![CDATA[Docker Desktop から Lima に乗り換えたときの環境設定手順メモ + golang インストール]]></title><description><![CDATA[
 これなに

業務で Docker Desktop のライセンス費用が高くなってきたので Lima に乗り換えるという話があった
それに伴って何を設定したのかをメモします


 セットアップ手順

 Step 1: Homebrew インストール
これはもうみんな使っているので大丈夫だと思いますが、念のためセットアップコマンド置いておきます
インターネット上には先人たちの知恵がたくさん転がっているので、困ったら Copilot とか Google 先生に訊くのが良きなので、細かい話は省きます
$ /bin/bash -c "$(curl -fsSL https://raw.github...]]></description><link>https://zenn.dev/su3_hokkaido/articles/2024-12-29_docker_to_lima</link><guid isPermaLink="true">https://zenn.dev/su3_hokkaido/articles/2024-12-29_docker_to_lima</guid><pubDate>Mon, 18 Aug 2025 08:20:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WPTbFAuW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%2520%25E3%2581%258B%25E3%2582%2589%2520Lima%2520%25E3%2581%25AB%25E4%25B9%2597%25E3%2582%258A%25E6%258F%259B%25E3%2581%2588%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E8%25A8%25AD%25E5%25AE%259A%25E6%2589%258B%25E9%25A0%2586%25E3%2583%25A1%25E3%2583%25A2%2520%252B%2520golang%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Su3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmY2Q1YTk5MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Su3</dc:creator></item><item><title><![CDATA[Dockerコンテナ上でSeleniumを動かしてSBI証券に自動ログインする（Chrome・デバイス認証対応）]]></title><description><![CDATA[
 はじめに
証券会社のログインは、セキュリティ対策として「デバイス認証」が導入されている場合が多く、単純にSeleniumでスクリプト化しても、端末の識別情報がリセットされると毎回認証が求められ、認証のたびに手作業が必要になるのが課題です。本記事では、Dockerコンテナ上にChromeをインストールし、Seleniumで自動操作を行いつつ、認証済みプロファイルを再利用することで「初回のみのデバイス認証」で済む仕組みを紹介します。

 1. Docker環境を構築する
Dockerでpythonを扱える環境を構築します。手順は、記事「【図解】Windows11でWSL2＋Dockerに...]]></description><link>https://zenn.dev/stockdatalab/articles/20250819_tech_sbilogin</link><guid isPermaLink="true">https://zenn.dev/stockdatalab/articles/20250819_tech_sbilogin</guid><pubDate>Mon, 18 Aug 2025 02:36:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aqwPb9cQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E4%25B8%258A%25E3%2581%25A7Selenium%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6SBI%25E8%25A8%25BC%25E5%2588%25B8%25E3%2581%25AB%25E8%2587%25AA%25E5%258B%2595%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Chrome%25E3%2583%25BB%25E3%2583%2587%25E3%2583%2590%25E3%2582%25A4%25E3%2582%25B9%25E8%25AA%258D%25E8%25A8%25BC%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25A0%25AA%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E5%258F%258E%25E9%259B%2586%25E3%2583%25A9%25E3%2583%259C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzZjRkZjY4MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>株の情報収集ラボ</dc:creator></item><item><title><![CDATA[VM インスタンス作成中にコンテナをデプロイするオプション廃止に伴う Container-Optimized OS での対応]]></title><description><![CDATA[
 はじめに
これまで、VMインスタンス作成時にコンテナを直接デプロイする機能（gce-container-declaration メタデータを使用する方法）がありましたが、このコンテナ起動エージェントを利用した機能が非推奨となり、2026 年 7 月 31 日に廃止されることがアナウンスされました。
これを受け、起動スクリプトを使用してコンテナをデプロイする方法へと移行作業を行いました。利用していたVMインスタンスのイメージは、Container-Optimized OS (以下、COS)です。
本記事では、実際に行った具体的な手順やポイントを、公式ドキュメントを基にご紹介します。

...]]></description><link>https://zenn.dev/rescuenow/articles/17379adb6cf7d0</link><guid isPermaLink="true">https://zenn.dev/rescuenow/articles/17379adb6cf7d0</guid><pubDate>Mon, 18 Aug 2025 01:28:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--G0NFBKmp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VM%2520%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E4%25BD%259C%25E6%2588%2590%25E4%25B8%25AD%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E5%25BB%2583%25E6%25AD%25A2%25E3%2581%25AB%25E4%25BC%25B4%25E3%2581%2586%2520Container-Optimized%2520OS...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:yamada_kazumasa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhNWJjNmQwYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamada_kazumasa</dc:creator></item><item><title><![CDATA[WSL で手を動かして覚える TCP/IP 入門]]></title><description><![CDATA[
Windows の WSL2 上で Docker Compose を使い、ping と HTTP の裏側で動く ARP / ICMP / TCP を、実際のパケットを“見ながら”確認します。所要 10〜15 分、初学者向けです。



 このハンズオンでやること（ゴールと流れ）

同一サブネット上に client / server / sniffer の3コンテナを立ち上げ、Docker のブリッジ labnet を作る

client → server の通信で、まず ARP（IP→MAC 解決）が起き、その後 ICMP（ping） が流れる様子を観察する

client から se...]]></description><link>https://zenn.dev/sfx/articles/67b2ed73ed6401</link><guid isPermaLink="true">https://zenn.dev/sfx/articles/67b2ed73ed6401</guid><pubDate>Sun, 17 Aug 2025 10:21:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f9BUDIKE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL%2520%25E3%2581%25A7%25E6%2589%258B%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E8%25A6%259A%25E3%2581%2588%25E3%2582%258B%2520TCP%252FIP%2520%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sfx%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sfx</dc:creator></item><item><title><![CDATA[Devcontainer.jsonの基本的な書き方と設計について]]></title><description><![CDATA[
 はじめに
前回の記事では、Dev Containersが解決できる課題と基本的な概念について説明しました。今回は実際にdevcontainer.jsonを利用して、Dev Container環境を構築する方法について詳しく解説していきます。書き方については公式のDocumentや他の記事、AI利用等で問題なく情報を得ることができるため、本記事ではdevcontainer.jsonの基本的な構文と主要な設定項目、その仕組みについて焦点を当てることにします。

 devcontainer.jsonとは
devcontainer.jsonは、Dev Container環境の設定を定義するJ...]]></description><link>https://zenn.dev/twatanabe0808/articles/devcontainer-json-basics</link><guid isPermaLink="true">https://zenn.dev/twatanabe0808/articles/devcontainer-json-basics</guid><pubDate>Sun, 17 Aug 2025 09:11:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cBeOUzkA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Devcontainer.json%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2581%25A8%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoya%2520Watanabe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwN2tqR2ZOVVh4SFF1OFZkVEtMUHBkZkY2Q0hoa3o2UzJ5Z0Z0eXhTUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoya Watanabe</dc:creator></item><item><title><![CDATA[サブスク代わりに自宅の音楽をどこでも聴く！Docker＋Plexで作るストリーミング環境]]></title><description><![CDATA[
 想定読者
本稿は、自宅に音楽ファイルを持っていて、Spotifyなどのサブスクより手持ちの曲を楽しみたい人向けの記事である。

 はじめに | やりたいこと
本稿は、自宅にある音楽データを外出先からも聴けるようにするための、環境構築方法を記す記事である。
筆者は同じ曲ばかり聞きがちなので、Spotifyなどのサブスクサービスを使うよりも、曲を買って聞いたほうが安上がりである。
ただし、買った曲を外出先で聴くためには、スマホにわざわざ入れておく必要があり、曲数が増えるにつれ面倒になってきた。また、スマホとPCとでプレイリストを同期するのも面倒だった。
そこで、外出先からも自宅の音楽を聴...]]></description><link>https://zenn.dev/nakurei/articles/plex-docker-music-streaming</link><guid isPermaLink="true">https://zenn.dev/nakurei/articles/plex-docker-music-streaming</guid><pubDate>Sat, 16 Aug 2025 22:55:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JyFMMK2a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2583%2596%25E3%2582%25B9%25E3%2582%25AF%25E4%25BB%25A3%25E3%2582%258F%25E3%2582%258A%25E3%2581%25AB%25E8%2587%25AA%25E5%25AE%2585%25E3%2581%25AE%25E9%259F%25B3%25E6%25A5%25BD%25E3%2582%2592%25E3%2581%25A9%25E3%2581%2593%25E3%2581%25A7%25E3%2582%2582%25E8%2581%25B4%25E3%2581%258F%25EF%25BC%2581Docker%25EF%25BC%258BPlex%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E7%2592%25B0%25E5%25A2%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NakuRei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwZjNjZmQ5ZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NakuRei</dc:creator></item><item><title><![CDATA[Laravel Sail からホスト側のサーバーにアクセスする方法]]></title><description><![CDATA[こんにちは。 SAW です。
最近、学習の一環として 英語のブログを書き始めました。
公開前する前に ChatGPT に文章を添削してもらっているので、より自然な表現を身につけられたら良いなと思います。
Laravel Sail で起動したコンテナから、 ホスト側の別サーバーにアクセスしようとしたところ、  サーバーに到達できずエラーが発生する という問題に遭遇しました。
本記事では、 Laravel Sail のコンテナからホスト側のサーバーにアクセスする方法 を紹介します。
なお、本記事では Laravel のバージョンが 12.x 系を前提としています。

 対象読者
本記事で想定...]]></description><link>https://zenn.dev/azuki_penguin/articles/d46c77205b1b51</link><guid isPermaLink="true">https://zenn.dev/azuki_penguin/articles/d46c77205b1b51</guid><pubDate>Sat, 16 Aug 2025 12:24:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wRijsMyU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%2520Sail%2520%25E3%2581%258B%25E3%2582%2589%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E5%2581%25B4%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SAW%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q3ZDU1YWE3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SAW</dc:creator></item><item><title><![CDATA[学習ログ｜Prisma × Next.js × Docker ビルドで出たエラーと学び]]></title><description><![CDATA[
 はじめに
Docker で Next.js + Prisma アプリをビルドするときに、いくつかハマりどころがあった。ここでは実際に遭遇したエラーと、それを直す過程で学んだことを記録する。


 前提知識

 Prisma

Node.js で使える ORM（Object Relational Mapping）。
Prisma Client を自動生成して DB に型安全にアクセスできる。

@prisma/client を dependencies に入れ、npx prisma generate を実行すると、node_modules/@prisma/client 以下にクライアン...]]></description><link>https://zenn.dev/atsushimemet/articles/1f7271663e23bb</link><guid isPermaLink="true">https://zenn.dev/atsushimemet/articles/1f7271663e23bb</guid><pubDate>Sat, 16 Aug 2025 05:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JbmEt7Hh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25AD%25E3%2582%25B0%25EF%25BD%259CPrisma%2520%25C3%2597%2520Next.js%2520%25C3%2597%2520Docker%2520%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25A7%25E5%2587%25BA%25E3%2581%259F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E5%25AD%25A6%25E3%2581%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:studymemot%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeTd0bDJIcVI3WmY1QnJlX1hOM2hyWksyNU1CczlhNEVvd2c1RmVKZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>studymemot</dc:creator></item><item><title><![CDATA[TiFlashとMySQL、クエリはどっちが速い？]]></title><description><![CDATA[
 はじめに
TiDB は分散型の HTAP（Hybrid Transactional/Analytical Processing）データベースで、トランザクション処理向けの行ストレージ（TiKV）と、分析処理向けの列ストレージ（TiFlash）を併用できます。一方、MySQL（InnoDB）は行志向ストレージを採用した OLTP 向けの RDBMS です。
本記事では、同一データセットを用いて TiFlash と MySQL（InnoDB） のクエリ処理性能を比較し、どのようなケースでどちらを選ぶと効果的かを整理します。特に「少ない列を対象にした集計・グルーピング（例：COUNT(*)...]]></description><link>https://zenn.dev/collabostyle/articles/01f4d7b20362ab</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/01f4d7b20362ab</guid><pubDate>Fri, 15 Aug 2025 13:09:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--04IXWQmg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TiFlash%25E3%2581%25A8MySQL%25E3%2580%2581%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2581%25AF%25E3%2581%25A9%25E3%2581%25A3%25E3%2581%25A1%25E3%2581%258C%25E9%2580%259F%25E3%2581%2584%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2594%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[DockerCompose + PostgresでのRails立ち上げ]]></title><description><![CDATA[
 Getting Started（環境構築・起動手順）
本ドキュメントは、ローカル/コンテナでRailsプロジェクトを動かすための最小手順をまとめたものです。

 1. 概要

 必要ツール

Docker Desktop（Compose v2 含む）
Git


 サービス構成


web: ruby:3.3.4 イメージをベースに、開発に必要なライブラリを追加したRails実行環境。

db: postgres:17 公式イメージを利用したデータベース。


 ディレクトリ方針

Rails アプリケーションはリポジトリのルート（直下）に配置します。

Dockerfile, do...]]></description><link>https://zenn.dev/yohei7328/articles/9a46a05bc22c86</link><guid isPermaLink="true">https://zenn.dev/yohei7328/articles/9a46a05bc22c86</guid><pubDate>Thu, 14 Aug 2025 15:37:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--23GMmsMy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DockerCompose%2520%252B%2520Postgres%25E3%2581%25A7%25E3%2581%25AERails%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2588%25E3%2583%25BC%25E3%2581%25B8%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h4bXpaRy1VMTdvWkx5Tkxvc0RBazA0UHNneUZkLTU2S2NtM0hSckE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>よーへい</dc:creator></item><item><title><![CDATA[Macでdocker volume pruneを定期自動実行する]]></title><description><![CDATA[launchedを使う。

 設定する手順

 1. plistファイルを用意する
~/Library/LaunchAgents/com.example.docker-volume-prune.plist に以下の内容を記述する
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
...]]></description><link>https://zenn.dev/sunnyone/articles/eb068d5d9f5f16</link><guid isPermaLink="true">https://zenn.dev/sunnyone/articles/eb068d5d9f5f16</guid><pubDate>Thu, 14 Aug 2025 15:21:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xDX7Z_sI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mac%25E3%2581%25A7docker%2520volume%2520prune%25E3%2582%2592%25E5%25AE%259A%25E6%259C%259F%25E8%2587%25AA%25E5%258B%2595%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sunnyone%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKek9vWHNpcElZcTJGYmVnTXRTSnl0REIwNmMyalhqU1N4Z1g3OUY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sunnyone</dc:creator></item><item><title><![CDATA[DockerでStreamlitを動かしてみる]]></title><description><![CDATA[
 はじめに
Streamlitをローカル上のDockerで動かす際の手順を備忘録としてまとめました。
!
ここでは「コンテナを用いずにローカルでStreamlitのWebアプリを構築する手順」は説明しません。


 動作環境

Windows 11
Docker Desktop
WSL2 (Ubuntu-24.04)
Python 3.13.5


 フォルダ構成
今回はDockerでStreamlitを動かすことに焦点を置いているため、フォルダ構成は最小限としています。
- .venv
- .python-version
- Dockerfile
- requirements.txt...]]></description><link>https://zenn.dev/headwaters/articles/b7f311dcccb0a1</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/b7f311dcccb0a1</guid><pubDate>Thu, 14 Aug 2025 04:10:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V9QJj3CX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Streamlit%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shuichiro%2520Sakata%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiYmQ1ZTMxYzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shuichiro Sakata</dc:creator></item><item><title><![CDATA[TiDBでインデックス作成]]></title><description><![CDATA[TiDBでインデックスの作成を行います。

 前提条件
ローカル環境構築で作成したTiDBの環境を使用
tidbコンテナを起動

 インデックス設計の基本指針

等価条件= を先頭に、範囲条件 BETWEEN / &gt; / &lt; / LIKE 'prefix%' を後ろに置く複合インデックスが効きやすい
選択度が高い列を先頭にすると効果大
ORDER BY / JOINキーも考慮（WHEREとORDER BYの両立が取れる並びが理想）
文字列の長い列はプレフィックスインデックスで節約可（例：email(16)）
関数適用で索引が効かない時（LOWER(name)など）は、式インデ...]]></description><link>https://zenn.dev/gtok/articles/3c1e5f7f03e73b</link><guid isPermaLink="true">https://zenn.dev/gtok/articles/3c1e5f7f03e73b</guid><pubDate>Wed, 13 Aug 2025 23:13:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xid3wFWS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TiDB%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2587%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2594%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MyOWNkNWUxZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごと</dc:creator></item><item><title><![CDATA[ローカルLLMを試す (gpt-oss-20b, 2025-08)]]></title><description><![CDATA[古めのPCで gpt-oss-20b を試した際の環境構築の備忘録です。
前回 と基本的な手順は同じですが、 llama.cppの最新イメージを使用する必要 があります。
!
追記 (2025-08-14)
llama.cpp に MoE の重みを CPU に保持するオプションが追加されていた(b6051, b6089) ことを次の記事で知りました。有益な情報に感謝いたします。
https://nowokay.hatenablog.com/entry/2025/08/13/235311
こちらのオプションを使用することで、gpt-oss-20b の場合は VRAM 4〜5GB 程度で動か...]]></description><link>https://zenn.dev/ftl/articles/ed44841ab4f644</link><guid isPermaLink="true">https://zenn.dev/ftl/articles/ed44841ab4f644</guid><pubDate>Wed, 13 Aug 2025 12:48:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--alomqcEy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25ABLLM%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2520%2528gpt-oss-20b%252C%25202025-08%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shigeru%2520Fujiwara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjNjMTlHUWxQZmRuaVB1YTRyeFdjM1hnNG1nV0tvVGJPcHhWUmpjOS1xdWtzZ3o2eHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shigeru Fujiwara</dc:creator></item><item><title><![CDATA[【AWS】dockerやcronが稼働中のEC2のインスタンスタイプを変更した話]]></title><description><![CDATA[
 はじめに
AWS EC2のインスタンスタイプを変更する方法の記事はたくさん出てきますが、
主要で動かしているプロセスもきちんと維持されるか、など実務レベルでは意外と書かれていない記事が多かったため、備忘録として記載します。

 dockerで何か動かしている場合
例えば以下は適当ですが何かしらdockerで起動しているものがあるとします。
これがインスタンスタイプの変更後に自動で上がるのか、分からないと気になりますよね。
[root@ip-10-1-1-10 ec2-user]# docker ps
CONTAINER ID   IMAGE                  COMM...]]></description><link>https://zenn.dev/cliffstar/articles/4b3348c02dc961</link><guid isPermaLink="true">https://zenn.dev/cliffstar/articles/4b3348c02dc961</guid><pubDate>Wed, 13 Aug 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BUui2gHU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%25E3%2580%2591docker%25E3%2582%2584cron%25E3%2581%258C%25E7%25A8%25BC%25E5%2583%258D%25E4%25B8%25AD%25E3%2581%25AEEC2%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:cliffstar%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYzQ1OWNlZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>cliffstar</dc:creator></item><item><title><![CDATA[Gemini CLI 用 Docker]]></title><description><![CDATA[Google の Gemini CLI を手軽に利用できる Docker イメージを公開しています。ローカルに Node.js を用意せず、すぐに Gemini モデルと対話できる環境を構築可能です。VS Code Dev Container との統合例や、Docker MCP Gateway と連携して外部ツールやサービスを AI エージェントが利用できるサンプルも提供しています。用途に応じて選べる複数のバリアント（最小構成の node、開発ツールを含む javascript-node / typescript-node）を用意しています。]]></description><link>https://zenn.dev/naoyoshinori/books/00b2e3044a617c</link><guid isPermaLink="true">https://zenn.dev/naoyoshinori/books/00b2e3044a617c</guid><pubDate>Wed, 13 Aug 2025 10:29:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wLQ6DbG2--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9jMTI5YTM4NTYxLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>naoyoshinori</dc:creator></item><item><title><![CDATA[MCPをより安全にDockerで利用する]]></title><description><![CDATA[https://docs.docker.com/ai/mcp-catalog-and-toolkit/toolkit/

 1. はじめに
アクセンチュア株式会社の桐山です。
今回は、勢いが止まらないMCP(Model Context Protocol)をDockerで試してみましたので、紹介したいと思います。
MCPは、自然言語でWeb検索・DB操作・クラウド操作‥等、便利なツールを実行できるプロトコルですが、MCPによってはセキュリティ的なリスクが潜んでいる可能性も否定できません。
そこで、MCPをDocker化することにより、ホスト環境とMCP環境を分離させ、より安全にMCPを実行...]]></description><link>https://zenn.dev/acntechjp/articles/421703d21c942d</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/421703d21c942d</guid><pubDate>Wed, 13 Aug 2025 07:27:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ppgkz9Gf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%2592%25E3%2582%2588%25E3%2582%258A%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25ABDocker%25E3%2581%25A7%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Koichi%2520Kiriyama%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5NmMzZGEzY2QuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Koichi Kiriyama</dc:creator></item></channel></rss>