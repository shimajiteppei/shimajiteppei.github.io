<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 13 Dec 2024 11:37:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Dockerで自分専用のコンテナ環境を作成する]]></title><description><![CDATA[
 背景
最近だと開発環境でDockerを使う場面も増えてきていると思います。僕は普段Railsのアプリケーションを開発していますが、開発環境はDockerのコンテナで立ち上げています。この場合、開発スタイルは以下の2つに分かれると思います。


docker compose execを駆使してホストで開発する
コンテナに入って開発する

僕は後者のスタイルが好きですが、前者のホストで開発するスタイルをよく見かけます。
前者の場合、コマンド実行する際にdocker compose execを駆使する必要があり、タイプ量も多く億劫に感じることも多いので、それの回避方法を幾つか紹介するととも...]]></description><link>https://zenn.dev/rhiroe/articles/docker_dev_envionment</link><guid isPermaLink="true">https://zenn.dev/rhiroe/articles/docker_dev_envionment</guid><pubDate>Fri, 13 Dec 2024 08:30:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3cZQ9usL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E5%25B0%2582%25E7%2594%25A8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rhiroe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNGQ3MDIzYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rhiroe</dc:creator></item><item><title><![CDATA[Dockerのvolume mountしたディレクトリの中の所有者をコンテナの実行ユーザーに変更する]]></title><description><![CDATA[
 結論
Dockerfileでvolume mountするディレクトリをあらかじめ作成しておく

 詳細
こんな感じのDockerfileがあり
FROM ruby:3.3.4-bullseye

ENV LANG=C.UTF-8
ENV TZ=Asia/Tokyo
ENV EDITOR=vim

EXPOSE 3000

RUN apt update -qq &amp;&amp;\
    apt upgrade -y &amp;&amp;\
    apt install -y --no-install-recommends \
    vim &amp;&amp;\
    rm...]]></description><link>https://zenn.dev/rhiroe/articles/docker_volume_mount_permissions</link><guid isPermaLink="true">https://zenn.dev/rhiroe/articles/docker_volume_mount_permissions</guid><pubDate>Fri, 13 Dec 2024 08:30:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--le1MAoYQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25AEvolume%2520mount%25E3%2581%2597%25E3%2581%259F%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25AE%25E6%2589%2580%25E6%259C%2589%25E8%2580%2585%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rhiroe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNGQ3MDIzYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rhiroe</dc:creator></item><item><title><![CDATA[Dockerで自分専用のコンテナ環境を作成する]]></title><description><![CDATA[
 背景
最近だと開発環境でDockerを使う場面も増えてきていると思います。僕は普段Railsのアプリケーションを開発していますが、開発環境はDockerのコンテナで立ち上げています。この場合、開発スタイルは以下の2つに分かれると思います。


docker compose execを駆使してホストで開発する
コンテナに入って開発する

僕は後者のスタイルが好きですが、前者のホストで開発するスタイルをよく見かけます。
前者の場合、コマンド実行する際にdocker compose execを駆使する必要があり、タイプ量も多く億劫に感じることも多いので、それの回避方法を幾つか紹介するととも...]]></description><link>https://zenn.dev/rhiroe/articles/docker-dev-envionment</link><guid isPermaLink="true">https://zenn.dev/rhiroe/articles/docker-dev-envionment</guid><pubDate>Fri, 13 Dec 2024 08:30:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3cZQ9usL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7%25E8%2587%25AA%25E5%2588%2586%25E5%25B0%2582%25E7%2594%25A8%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:rhiroe%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNGQ3MDIzYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>rhiroe</dc:creator></item><item><title><![CDATA[WSL2+Docker+GPUによる機械学習環境構築]]></title><description><![CDATA[
 本記事の概要
本記事では、Windows 11環境において、WSL2、Docker、およびNVIDIA GPUを活用した機械学習環境の構築手順を解説します。具体的には次の5つのステップで環境を構築していきます:

NVIDIAドライバのインストール：GeForce RTX 4060 Laptop GPU用の最新のStudioドライバをインストール
Dockerのインストール：WSL2上のUbuntuにDockerをセットアップ
NVIDIA Container Toolkitのインストール：DockerコンテナでGPUを利用するための設定
Docker追加設定：自動起動の設定とsud...]]></description><link>https://zenn.dev/enlog/articles/d61f0c285c5c81</link><guid isPermaLink="true">https://zenn.dev/enlog/articles/d61f0c285c5c81</guid><pubDate>Fri, 13 Dec 2024 05:09:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---epX0Z1J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%252BDocker%252BGPU%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:en%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlMTU0Yjg4ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>en</dc:creator></item><item><title><![CDATA[VSCodeからWSL2+Docker環境に接続する手順]]></title><description><![CDATA[
 本記事の概要
本記事ではVSCodeからWSL2+Docker開発環境への接続方法を解説します。

 環境
本記事において前提としている環境を次に示します。

OS: Windows 11

バージョン: 23H2
64ビットオペレーティングシステム、x64ベースプロセッサ


Visual Studio Code: 1.96.0
WSL2: 2.3.26.0
Docker: 27.3.1
Docker Compose: v2.29.7


 VScodeからWSL2+Docker環境に接続することで得られる主要なメリット

環境の再現性と共有が可能（環境の差異によるトラブルを防止）...]]></description><link>https://zenn.dev/enlog/articles/3705a90b0f33e4</link><guid isPermaLink="true">https://zenn.dev/enlog/articles/3705a90b0f33e4</guid><pubDate>Fri, 13 Dec 2024 02:10:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kv6hF59K--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VSCode%25E3%2581%258B%25E3%2582%2589WSL2%252BDocker%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:en%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlMTU0Yjg4ODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>en</dc:creator></item><item><title><![CDATA[Docker で GitLab と mailpit を使う:Linux 使い（略）Advent Calendar 2024]]></title><description><![CDATA[
 はじめに
これは「Linux 使いになりたい人のための Advent Calendar 2024」の記事です。
筆者は、Web エンジニアを志望する人には、セルフホスト Git サービスを稼働させて利用することをオススメしています。もし Git を使ったことがないなら、Git を学ぶときに、セルフホスト Git サービスを稼働させることも視野に含めながら学習するのが効率的だと考えています。
!
この記事は、次の記事の続きです。



 Docker で GitLab と mailpit を使う
前回はセルフホスト Git サービスを使うにあたり、OpenSSH を使うことが多いといっ...]]></description><link>https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_10</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_10</guid><pubDate>Thu, 12 Dec 2024 10:26:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dx2097YW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2581%25A7%2520GitLab%2520%25E3%2581%25A8%2520mailpit%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253ALinux%2520%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2588%25E7%2595%25A5%25EF%25BC%2589Advent%2520Calendar%2520...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[SNSでの情報収集は誘惑が多くて大変、それRSSでやってみませんか？]]></title><description><![CDATA[
 ゴール

X（旧Twitter）の投稿をRSSリーダーで閲覧可能にする（ローカル限定）

使用するアプリはInstagramなど他のSNSにも対応していますが、今回は扱いません。

 書いた経緯
私は普段RSSをメインに情報収集しているのですが、必要に応じてXの公式アカウントのポストも確認しています。
ですが、タイトルの通りSNSは誘惑が多く、意志の弱い私は気がつくと一般アカウントの投稿した関係ない漫画を読み漁っています。
ところで、皆さんはRSSを使っているでしょうか。
2013年にはGoogleリーダーがサービスを終了し、何となく過去の産物といったイメージがあるかもしれませんが、...]]></description><link>https://zenn.dev/lclco/articles/e9e32724e9b472</link><guid isPermaLink="true">https://zenn.dev/lclco/articles/e9e32724e9b472</guid><pubDate>Thu, 12 Dec 2024 05:01:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5l0L1fHR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SNS%25E3%2581%25A7%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E5%258F%258E%25E9%259B%2586%25E3%2581%25AF%25E8%25AA%2598%25E6%2583%2591%25E3%2581%258C%25E5%25A4%259A%25E3%2581%258F%25E3%2581%25A6%25E5%25A4%25A7%25E5%25A4%2589%25E3%2580%2581%25E3%2581%259D%25E3%2582%258CRSS%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%259B%25E3%2582%2593%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nishi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYzlhY2Y4M2EuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LCL%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUZxZE9EQnBZanc3Uk5ZeFpkQm5iWXRxX0UyYkVIN1hNTkNzNEdrMWU3SkRRX0dlYz1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nishi</dc:creator></item><item><title><![CDATA[新米エンジニアがawesome-composeにあるcomposeファイルに改善点がないか考えてみる]]></title><description><![CDATA[こんにちは。Sun* でバックエンドエンジニアをやっているうえひろです。
普段は業務効率化システムのバッチ作成に取り組んでいますが、今日は「Docker」について少しお話ししたいと思います。
最近、「awesome-compose」リポジトリを見つけて、Composeファイルの改善点を探る挑戦を始めました。初心者ならではの気づきが皆さんのお役に立てれば嬉しいです。ぜひ最後までお読みください！
※今回はローカル環境向けの設定を前提に記事を書いてます。
この記事はSun* Advent Calendar 2024の12日目の記事です。

 awesome-composeとは？
awesome...]]></description><link>https://zenn.dev/sun_asterisk/articles/d094eb8637abc1</link><guid isPermaLink="true">https://zenn.dev/sun_asterisk/articles/d094eb8637abc1</guid><pubDate>Thu, 12 Dec 2024 03:36:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--38_rkhA---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0%25E7%25B1%25B3%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%258Cawesome-compose%25E3%2581%25AB%25E3%2581%2582%25E3%2582%258Bcompose%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AB%25E6%2594%25B9%25E5%2596%2584%25E7%2582%25B9%25E3%2581%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%258B%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25A6%25E3%2582%25A8%25E3%2583%2580%2520%25E3%2583%2592%25E3%2583%25AD%25E3%2582%25A2%25E3%2582%25AD%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YTU0ZjZiM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sun%252A%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiNmRmODVkM2MuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ウエダ ヒロアキ</dc:creator></item><item><title><![CDATA[[Baker link. Dev]Lチカを試そうとしたら開発環境構築で詰まった話]]></title><description><![CDATA[Rustでの組み込み開発してみたいなーとか考えていたら、
丁度良い商品入荷したので買っちゃいました😘
https://www.switch-science.com/products/10044

 Baker link. Dev Rev. 1 とは

Raspberry Pi財団が独自に開発したARM Cortex M0+デュアルコアのRP2040マイコンをベースに、デバッガを搭載したRust言語学習用開発ボードです。Rev.1版では、外部マイコンデバックをサポートしたファームウェアが標準搭載されています。

Baker link. Dev Rev. 1 の前の型である「Baker li...]]></description><link>https://zenn.dev/collabostyle/articles/bf9fa0e604c33c</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/bf9fa0e604c33c</guid><pubDate>Wed, 11 Dec 2024 11:51:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZKjmoBTj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BBaker%2520link.%2520Dev%255DL%25E3%2583%2581%25E3%2582%25AB%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%259D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:miko%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk2NTU1YTc5NjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miko</dc:creator></item><item><title><![CDATA[Dev Container の sshd フィーチャー:Linux 使い（略）Advent Calendar 2024]]></title><description><![CDATA[
 はじめに
これは「Linux 使いになりたい人のための Advent Calendar 2024」の記事です。
筆者は、Web エンジニアを志望する人には、セルフホスト Git サービスを稼働させて利用することをオススメしています。もし Git を使ったことがないなら、Git を学ぶときに、セルフホスト Git サービスを稼働させることも視野に含めながら学習するのが効率的だと考えています。
!
この記事は、次の記事の続きです。



 Dev Container の sshd フィーチャー
前回はセルフホスト Git サービスを使うにあたり、OpenSSH を使うことが多いといった説...]]></description><link>https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_09</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_09</guid><pubDate>Wed, 11 Dec 2024 11:09:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gXcfpv71--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%2520%25E3%2581%25AE%2520sshd%2520%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25BC%253ALinux%2520%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2588%25E7%2595%25A5%25EF%25BC%2589Advent%2520Calendar%25202024%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[Redisの基本と負荷テストやってみた]]></title><description><![CDATA[
 こんな人に読んで欲しい！

Redisって聞いたことあるけど、使ったことがない
RedisをDBのキャッシュとして使うと実際どのくらい早くなるの？


 3行でこの記事をまとめると

Redisの基本的な使い方を学びます
RedisでDBキャッシュをする方法を学びます
負荷テストをして、どのくらい高速化するかを試します

↓ こちらでコードを公開しています(docker compose upとするだけで試すことができます！)
https://github.com/zackerms/playground-redis

 自己紹介
zacker（ざっかー）といいます。
アプリ開発が大好き...]]></description><link>https://zenn.dev/dev_zacker/articles/6e866d6f4b8185</link><guid isPermaLink="true">https://zenn.dev/dev_zacker/articles/6e866d6f4b8185</guid><pubDate>Wed, 11 Dec 2024 02:15:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eWkJ-T1h--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Redis%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%25A8%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zacker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzIzN2U4ZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zacker</dc:creator></item><item><title><![CDATA[VS Code の Remote - SSH 拡張機能:Linux 使い（略）Advent Calendar 2024]]></title><description><![CDATA[
 はじめに
これは「Linux 使いになりたい人のための Advent Calendar 2024」の記事です。
筆者は、Web エンジニアを志望する人には、セルフホスト Git サービスを稼働させて利用することをオススメしています。もし Git を使ったことがないなら、Git を学ぶときに、セルフホスト Git サービスを稼働させることも視野に含めながら学習するのが効率的だと考えています。
!
この記事は、次の記事の続きです。



 VS Code の Remote - SSH 拡張機能
前回はセルフホスト Git サービスを使うにあたり、OpenSSH を使うことが多いといった説...]]></description><link>https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_08</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_08</guid><pubDate>Tue, 10 Dec 2024 14:32:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lcu9qHzS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520%25E3%2581%25AE%2520Remote%2520-%2520SSH%2520%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%253ALinux%2520%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2588%25E7%2595%25A5%25EF%25BC%2589Advent%2520Calendar%25202024%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[Github ActionsのComposite Actionを使ってみる]]></title><description><![CDATA[
 Github ActionsのComposite Actionを使ってみる
最近Composite Actionというものを知ったので、試しに使ってみる。
Composite Actionとは複数のアクションを一つのステップ内に集約することができる機能のこと。

複合アクションを使用すると、一連のワークフロー ジョブ ステップを 1 つのアクションに収集し、複数のワークフローで 1 つのジョブ ステップとして実行できます。


今回作成したリポジトリ


 コード

 action.yml

ファイルはどこに置いても良いらしく、自由度が高いが、ファイル名はaction.yml・act...]]></description><link>https://zenn.dev/mitate_gengaku/articles/github-actions-composite-action</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/github-actions-composite-action</guid><pubDate>Tue, 10 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kYx2PB8u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Github%2520Actions%25E3%2581%25AEComposite%2520Action%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[Kafka使えば無条件に高速になると、いつから錯覚していた？]]></title><description><![CDATA[
 対象読者

「Kafkaって、なんかすごいやつでしょ」って思てる人
分散コンピューティングに興味がある人


 この記事を読むとわかること

Kafkaとはなんぞや
Kafkaってどうやって使うの？
どういうときは高速化できるの？

↓ コードはこちら！
https://github.com/zackerms/playground-apache-kafka
docker compose up とするだけで、Apache Kafkaを利用することができます。
また、ベンチマークの方法はREADMEに記載しています。

 Apache Kafkaとは？
異なるシステム間で大量のメッセージ...]]></description><link>https://zenn.dev/dev_zacker/articles/dab5563aacd677</link><guid isPermaLink="true">https://zenn.dev/dev_zacker/articles/dab5563aacd677</guid><pubDate>Tue, 10 Dec 2024 02:17:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KcE8NxzW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kafka%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25B0%25E7%2584%25A1%25E6%259D%25A1%25E4%25BB%25B6%25E3%2581%25AB%25E9%25AB%2598%25E9%2580%259F%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25A8%25E3%2580%2581%25E3%2581%2584%25E3%2581%25A4%25E3%2581%258B%25E3%2582%2589%25E9%258C%25AF%25E8%25A6%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:zacker%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYyYzIzN2U4ZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>zacker</dc:creator></item><item><title><![CDATA[dockerfileのカスタマイズを分解して解説してみた]]></title><description><![CDATA[!
スクールで学んだdockerfileのカスタマイズを自身の理解を深める為に記録したものです。
学習しはじめの初心に返って記録します。


 はじめに
エンジニア転職を目指しRuby on Railsを中心に学習中の初学者です。
備忘録として、躓いたことやケアレスミスも含め投稿します！誤っている箇所などありましたらご指摘いただけると幸いです

 対象読者

Ruby on Rails初学者
docker初学者
Mac利用者


 記事概要

 今回の対象dockerfile
FROM ruby:3.2.3
ENV LANG C.UTF-8
ENV TZ Asia/Tokyo
RUN a...]]></description><link>https://zenn.dev/hi_kun0912/articles/6212f660e9f455</link><guid isPermaLink="true">https://zenn.dev/hi_kun0912/articles/6212f660e9f455</guid><pubDate>Tue, 10 Dec 2024 00:28:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KjJKCmQF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:dockerfile%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%25E3%2582%2592%25E5%2588%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2581%25AF%25E5%25AD%2590%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%2591%25E3%2583%2591%2540%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E5%25AE%259F%25E5%258B%2599%25E6%259C%25AA%25E7%25B5%258C%25E9%25A8%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhYjMzZWZkYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>息子溺愛パパ@エンジニア実務未経験</dc:creator></item><item><title><![CDATA[Dockerコンテナで無限待機する]]></title><description><![CDATA[
Dockerコンテナをデバッグしたり、特定のプロセスがない状態でもコンテナを起動したままにしておきたい場合、sleepコマンドを用いて無限に待機させることができる
これにより、コンテナの中に入ってツールを実行したり、環境を整えたりといった調査・開発作業が容易になる
以下のようなスクリプトをDockerfileでENTRYPOINTやCMDに指定することで、コンテナは終了せずにずっと起動状態を保つことができる

#!/bin/bash

exec sleep infinity
]]></description><link>https://zenn.dev/wasabina67/articles/sleep-infinity-sh</link><guid isPermaLink="true">https://zenn.dev/wasabina67/articles/sleep-infinity-sh</guid><pubDate>Mon, 09 Dec 2024 15:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GRemOd9F--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E7%2584%25A1%25E9%2599%2590%25E5%25BE%2585%25E6%25A9%259F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wasabina67%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tBQmhwQURYZVpZNU9UQl81MjhsZDNXRXh4cXE5c3dWVFQxMGVwbXRlT1gwbTVtVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wasabina67</dc:creator></item><item><title><![CDATA[Docker で OpenSSH を使う:Linux 使い（略）Advent Calendar 2024]]></title><description><![CDATA[
 はじめに
これは「Linux 使いになりたい人のための Advent Calendar 2024」の記事です。
筆者は、Web エンジニアを志望する人には、セルフホスト Git サービスを稼働させて利用することをオススメしています。もし Git を使ったことがないなら、Git を学ぶときに、セルフホスト Git サービスを稼働させることも視野に含めながら学習するのが効率的だと考えています。
!
この記事は、次の記事の続きです。



 Docker で OpenSSH を使う
前回はセルフホスト Git サービスを使うにあたり、OpenSSH を使うことが多いといった説明の流れから、...]]></description><link>https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_07</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_07</guid><pubDate>Mon, 09 Dec 2024 11:35:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6HGlegzm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2581%25A7%2520OpenSSH%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%253ALinux%2520%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2588%25E7%2595%25A5%25EF%25BC%2589Advent%2520Calendar%25202024%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[docker compose up -dが「Synchronized File Shares」で止まる]]></title><description><![CDATA[
 概要
いつものようにDev Containerでコンテナを立ち上げようとしたところ、いつまで経っても終わらない。試しにdocker compose up -dを実行しても同様。
08:33:49 ~/projects/api $ docker compose up -d
[+] Running 0/2
[+] Running 6/2 File Shares [⠀]    // ここで止まる

 対処方法
原因は不明。Docker DesktopのFile Sharingを削除後にdocker compose up -dしたら解消。

 環境

Docker Desktop 4.36....]]></description><link>https://zenn.dev/tusi/articles/f1db1c3cd781ff</link><guid isPermaLink="true">https://zenn.dev/tusi/articles/f1db1c3cd781ff</guid><pubDate>Mon, 09 Dec 2024 00:58:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D9MCU_y9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:docker%2520compose%2520up%2520-d%25E3%2581%258C%25E3%2580%258CSynchronized%2520File%2520Shares%25E3%2580%258D%25E3%2581%25A7%25E6%25AD%25A2%25E3%2581%25BE%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenryu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY2NjA3MmFjNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenryu</dc:creator></item><item><title><![CDATA[Catalyst 9300のapp hostingでsshサーバーを構築してみる]]></title><description><![CDATA[
MMA Advent Calendar 2024 9日目の記事です


 はじめに
Cisco Catalyst 9300では，Dockerアプリケーションホスティングが利用できます．
これを利用することで，L3スイッチなのにLinuxライクに様々なアプリケーションを動かすことができます．
!
Dockerアプリケーションホスティングには，背面にUSBで挿入できるCisco純正のSSDが必要です．

というわけで，今回はsshサーバーを構築してみました．
!
いろいろな制約があったため，単一のユーザーしかログインできないサーバーとなります．


 今回の環境




インターフェース
...]]></description><link>https://zenn.dev/shiragi/articles/3ae11b1db956dd</link><guid isPermaLink="true">https://zenn.dev/shiragi/articles/3ae11b1db956dd</guid><pubDate>Sun, 08 Dec 2024 14:27:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oItSRXPn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Catalyst%25209300%25E3%2581%25AEapp%2520hosting%25E3%2581%25A7ssh%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiargi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzZDZjNWFjNmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shiargi</dc:creator></item><item><title><![CDATA[rails db:createしたらMySQLでエラー115が出た原因と対処のメモ]]></title><description><![CDATA[
 rails db:createしたらMySQLでエラー115が出た原因と対処のメモ

 先に結論
ちゃんとMySQLの起動完了を待ってから投入すること。
以下、詳細。

 発生事象

compose.yml(抜粋)
services:
  rails:
    depends_on:
      - mysql
  mysql:

これを、ローカル環境(MacBook Air)で動かしたら
$ docker compose up -d
[+] Running 2/2
 ✔ Container example-mysql-1  Started
 ✔ Container example-...]]></description><link>https://zenn.dev/1986_1115/articles/mysql-error115-on-docker</link><guid isPermaLink="true">https://zenn.dev/1986_1115/articles/mysql-error115-on-docker</guid><pubDate>Sun, 08 Dec 2024 14:12:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tgo61brM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:rails%2520db%253Acreate%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589MySQL%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC115%25E3%2581%258C%25E5%2587%25BA%25E3%2581%259F%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E5%25AF%25BE%25E5%2587%25A6%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mnr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvMS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mnr</dc:creator></item></channel></rss>