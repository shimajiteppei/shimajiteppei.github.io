<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 16 Sep 2025 09:46:53 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Upyo 0.3.0 リリース：マルチプロバイダー対応と耐障害性の強化]]></title><description><![CDATA[
 Upyo とは
Upyoは、Node.js、Deno、Bun、エッジ関数など、複数のJavaScriptランタイムで動作する統一的なメールライブラリです。SMTP、Mailgun、SendGrid、Amazon SESなどの様々なメールプロバイダーを同じインターフェースで扱えるため、プロバイダーを変更してもアプリケーションコードの修正が不要です。TypeScriptファーストで設計されており、型安全性とゼロ依存性を特徴としています。名前の由来は韓国語の「郵票（ウピョ）」で、これは「切手」を意味します。切手がどの郵便システムでも郵便を届けられるように、Upyo はどのランタイムでもメー...]]></description><link>https://zenn.dev/hongminhee/articles/9e67fbb08f30f2</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/9e67fbb08f30f2</guid><pubDate>Tue, 16 Sep 2025 07:15:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ePpy4pRj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Upyo%25200.3.0%2520%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25A8%25E8%2580%2590%25E9%259A%259C%25E5%25AE%25B3%25E6%2580%25A7%25E3%2581%25AE%25E5%25BC%25B7%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[音声系AIサービス「ElevenLabs」使ってみた！]]></title><description><![CDATA[!
この記事は人間が作成しています。
一応フロントエンドエンジニアです。


 はじめに
ChatGPTをはじめとする生成AIによる文章系のサービスがありふれてきた昨今、音声でのやり取りができるAIサービスはまだまだ物珍しい存在です。今回は、リアルタイム音声AI機能を提供する「ElevenLabs」を実際に使ってみたので、その感想と技術的な特徴をまとめてみました。
日本だとあまり話題になっていない（?）ようですが、使ってみると素晴らしいサービスでしたので、早速記事にしてみます。

 ElevenLabsとは？
ElevenLabsは、高品質な音声合成と音声認識を提供するAIサービスです。...]]></description><link>https://zenn.dev/bltsdc/articles/8a4dec8a46d760</link><guid isPermaLink="true">https://zenn.dev/bltsdc/articles/8a4dec8a46d760</guid><pubDate>Tue, 16 Sep 2025 01:47:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qOfzuvMp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E7%25B3%25BBAI%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2580%258CElevenLabs%25E3%2580%258D%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wakaaa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q5NDcyMGM5YTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BLT%2520SDC%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSU5zOG9QZWMya0dlVS0tcG00Y3lZaTExZ1k3aTRIV3hkZERmdUkwclFGX0dZTVQ1UHE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakaaa</dc:creator></item><item><title><![CDATA[git rebaseが難しすぎたので、自動化CLI作った]]></title><description><![CDATA[
 はじめに
!
修正や追加等はコメントまたはGitHubで編集リクエストをお待ちしております。


 git rebase、怖くないですか？
開発を進めていると、ブランチの歴史をきれいに保つために git rebase を使いたくなる場面がよくあります。フィーチャーブランチを main や develop の最新状態に追従させたいときなどです。
しかし、git rebase は強力な反面、多くの開発者にとって悩みの種でもあります。


大量のコンフリクト: rebaseを実行したら、大量のコンフリクトが発生してしまい、1つ1つ解決するのが大変...

どのコミットで問題が起きたかわから...]]></description><link>https://zenn.dev/riya_amemiya/articles/c080705b331456</link><guid isPermaLink="true">https://zenn.dev/riya_amemiya/articles/c080705b331456</guid><pubDate>Tue, 16 Sep 2025 01:36:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OnVW5w0k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:git%2520rebase%25E3%2581%258C%25E9%259B%25A3%25E3%2581%2597%25E3%2581%2599%25E3%2581%258E%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596CLI%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Riya%2520Amemiya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOTk0YWYxZDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Riya Amemiya</dc:creator></item><item><title><![CDATA[Vueで大規模プロジェクトを想定したcomponentsディレクトリ構成の考え方]]></title><description><![CDATA[
 前置き
法人向けのWebサイトをVueで新規構築するにあたり、Vueのcomponentsディレクトリ構成について改めて整理・検討することになりました。
現在の要件としては、Atomic Designをベースにコンポーネントを設計する方針です。

 環境


Vue3


Vue2と比べて大きく進化しており、とくに&lt;script setup&gt;構文が推奨されるようになっています。
▶️ https://github.com/vuejs




Vite


Webpackの代替となるバンドラー。Vue3で推奨されており、作者のエヴァン・ユー氏が開発。
高速なビルド性能を持ち...]]></description><link>https://zenn.dev/kimmaru/articles/4636c67aab1aca</link><guid isPermaLink="true">https://zenn.dev/kimmaru/articles/4636c67aab1aca</guid><pubDate>Mon, 15 Sep 2025 14:15:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CpVcX514--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25A7%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E6%2583%25B3%25E5%25AE%259A%25E3%2581%2597%25E3%2581%259Fcomponents%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AE%25E8%2580%2583%25E3%2581%2588%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2586%25E3%2582%25BD%25E3%2583%2586%25E3%2582%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTlMZlV6dGRPMFZXaHU3Qjl1OG9xSE5JUnJqMFhNMW9Ja3Fua0FrUjZQcVBkaEdXUTU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>テソテソ</dc:creator></item><item><title><![CDATA[TanStack Form v1以降のアップデート内容まとめ]]></title><description><![CDATA[TanStack Form v1以降のアップデート内容をコード例とともに解説します。
継続的に更新予定です。]]></description><link>https://zenn.dev/tsuboi/books/cc224465ab144a</link><guid isPermaLink="true">https://zenn.dev/tsuboi/books/cc224465ab144a</guid><pubDate>Mon, 15 Sep 2025 10:55:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cuyeyfNQ--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci81M2EyYTM2YWZjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Tsuboi</dc:creator></item><item><title><![CDATA[Zod の型推論機能（z.infer）]]></title><description><![CDATA[
 概要
Zod は、自分自身で定義したスキーマから静的型を自動推論できます。この推論された型は z.infer&lt;&gt; を使って抽出でき、好きなように使用できます。

 基本的な型推論（Inferring types）

 基本例
const Player = z.object({
  username: z.string(),
  xp: z.number(),
});

// 推論された型を抽出
type Player = z.infer&lt;typeof Player&gt;;
// 結果: { username: string; xp: number; }

// コ...]]></description><link>https://zenn.dev/aki05162525/articles/aeea0ad1b0b53c</link><guid isPermaLink="true">https://zenn.dev/aki05162525/articles/aeea0ad1b0b53c</guid><pubDate>Mon, 15 Sep 2025 08:37:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eNNQWef---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zod%2520%25E3%2581%25AE%25E5%259E%258B%25E6%258E%25A8%25E8%25AB%2596%25E6%25A9%259F%25E8%2583%25BD%25EF%25BC%2588z.infer%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSjBaM1pHbFo2RUJSc0NDTnVqeUpRV0U0eXEzczZJeTNYR1NPdHE2a21ZR3dNSWpqTXA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>いるか</dc:creator></item><item><title><![CDATA[TypeScript の歩き方 - TypeScript の全機能を概観する]]></title><description><![CDATA[
 この記事は何？
TypeScript を学ぼうとする人にとって最初のハードルは「どこから手を付ければよいかわからない」ことでしょう。
TypeScript は JavaScript の上に成り立っており、JavaScript もまた、複雑な歴史的経緯の上に成り立っています。JavaScript の深淵な歴史は、TypeScript 学習者に重くのしかかります。
また TypeScript/JavaScript に関連する技術は非常に多岐にわたり、広く普及しています。例えば、DOM, React, Node.js, npm, webpack など...。これらはあまりに普及しているため...]]></description><link>https://zenn.dev/somnicattus/articles/8ccf5271f83599</link><guid isPermaLink="true">https://zenn.dev/somnicattus/articles/8ccf5271f83599</guid><pubDate>Mon, 15 Sep 2025 08:23:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2wpU4Kaz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25AE%25E6%25AD%25A9%25E3%2581%258D%25E6%2596%25B9%2520-%2520TypeScript%2520%25E3%2581%25AE%25E5%2585%25A8%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%25A6%2582%25E8%25A6%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:somnicattus%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMTUyZWZmZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>somnicattus</dc:creator></item><item><title><![CDATA[ダウンロード数2倍差：Prismaがなぜ選ばれるのか]]></title><description><![CDATA[
 はじめに
2020年 ~ 2023年頃、NestJSを使ったAPI開発に携わっていましたが、ORMとしてTypeORMを使用していました。NestJSのドキュメントでもTypeORM押しで、Prismaについては参考情報がある程度の位置づけだったように覚えています。
しかし、2024年頃をさかいに、Prismaのダウンロード数がTypeORMを超え、直近（2025年9月）のダウンロード数では 2倍ぐらい差がついています。
今選ぶべきはPrismaなのでしょうか？この記事では、実際のコード例を交えながら、両者の特徴を詳しく比較したいと思います。

https://npmtrends.c...]]></description><link>https://zenn.dev/duckdevv/articles/4839d1c51c5a6d</link><guid isPermaLink="true">https://zenn.dev/duckdevv/articles/4839d1c51c5a6d</guid><pubDate>Mon, 15 Sep 2025 06:24:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SoE54tq7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%2595%25B02%25E5%2580%258D%25E5%25B7%25AE%25EF%25BC%259APrisma%25E3%2581%258C%25E3%2581%25AA%25E3%2581%259C%25E9%2581%25B8%25E3%2581%25B0%25E3%2582%258C%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duckdevv%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3MTNlN2IxZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>duckdevv</dc:creator></item><item><title><![CDATA[「なんでこの順で動くの？」を一発で理解する：JS/TSのイベントループと実行順（同期→Microtask→描画→Macrotask）]]></title><description><![CDATA[非同期処理のコードは書けるけど、実行順に自信がない。
await や setTimeout、Promise.then が どの順で動くかが直感とズレる。
この記事は、そんな人のために イベントループと「tick」 を軸に、実行順のルールをスッキリ言語化します。


 この記事のゴール


イベントループの流れを、同期→Microtask→描画→Macrotask の順で理解する

await（= 非同期の続きがいつ動く？）/ Promise.then / setTimeout の 実行順が説明できるようになる



 用語の解説


Call Stack（コールスタック）
「今、実行中の...]]></description><link>https://zenn.dev/h4gi/articles/4d57603d5c5616</link><guid isPermaLink="true">https://zenn.dev/h4gi/articles/4d57603d5c5616</guid><pubDate>Mon, 15 Sep 2025 01:50:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gf-c76E9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258C%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2593%25E3%2581%25AE%25E9%25A0%2586%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258F%25E3%2581%25AE%25EF%25BC%259F%25E3%2580%258D%25E3%2582%2592%25E4%25B8%2580%25E7%2599%25BA%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259AJS%252FTS%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25A8%25E5%25AE%259F%25E8%25A1%258C%25E9%25A0%2586%25EF%25BC%2588%25E5%2590%258C%25E6%259C%259F%25E2%2586%2592Microtask%25E2%2586%2592%25E6%258F%258F%25E7%2594%25BB%25E2%2586%2592M...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%258E%25E3%2581%25AF%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYmJkZTE3OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はぎはら</dc:creator></item><item><title><![CDATA[【TypeScript】オブジェクトの分割代入 (destructuring assignment)]]></title><description><![CDATA[
 はじめに
はじめまして！分割代入についてまとめていきたいと思います。
分割代入 (destructuring assignment) とは、オブジェクトや配列から必要な値を取り出し、変数に代入する構文です。

 基本的な例
// User 型を定義
type User = {
  id: number;
  firstName: string;
  age: number;
};

const user: User = { id: 1, firstName: "Alice", age: 25 };

// 通常の代入
//const id = user.id
//const firs...]]></description><link>https://zenn.dev/daichi09167/articles/7cfe5f6da42c67</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/7cfe5f6da42c67</guid><pubDate>Mon, 15 Sep 2025 01:35:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--L-66HiHV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E5%2588%2586%25E5%2589%25B2%25E4%25BB%25A3%25E5%2585%25A5%2520%2528destructuring%2520assignment%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjODE0Yzk4ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item><item><title><![CDATA[JavaScript/TypeScript の非同期処理をめっちゃわかりやすく整理してみた]]></title><description><![CDATA[JavaScript/TypeScriptを書いていると必ず出会う「非同期処理」。
Promise や async/await を使っているけど、「なんでこうなってるの？」「awaitって実際なにしてるの？」と疑問に思うこと、ありませんか？
この記事では、非同期処理の基本から await の役割までを整理します。

 同期処理と非同期処理の違い

 同期処理
一個ずつ順番に実行。前の処理が終わるまで次に進まない。
console.log("A");
console.log("B");
console.log("C");
// 出力: A → B → C

 非同期処理
「終わったら教えて...]]></description><link>https://zenn.dev/h4gi/articles/c0d38a490ab19b</link><guid isPermaLink="true">https://zenn.dev/h4gi/articles/c0d38a490ab19b</guid><pubDate>Mon, 15 Sep 2025 00:55:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s6VfrBUO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%252FTypeScript%2520%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%2581%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2582%258F%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%258E%25E3%2581%25AF%25E3%2582%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhYmJkZTE3OGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はぎはら</dc:creator></item><item><title><![CDATA[はじめてのReact入門 - コンポーネント開発からTodoアプリ制作まで]]></title><description><![CDATA[こんにちは、とまだです。

「Reactって難しそう」「コンポーネントってなに？」と思ったことはありませんか？

実は私も最初はそう思っていました。でも大丈夫。基本から段階的に学んでいけば、必ずマスターできます。

【こんな方におすすめ】
・JavaScriptの基礎は学んだけど、次に何を学べばいいか迷っている
・Reactに興味はあるけど、どこから始めていいかわからない
・効率的にUI開発ができるようになりたい
・将来的にNext.jsなども学んでみたい

【本書で身につくスキル】
■ Reactの基本概念の理解
- コンポーネント指向の考え方
- 仮想DOMの仕組み
- JSXの書き方と活用法

■ 実践的な開発環境の構築
- Viteを使った高速な開発環境
- VS Codeの効率的な設定
- Tailwind CSSでのモダンなスタイリング

■ 動的なアプリケーション開発
- useState/useEffectの実践的な使い方
- Props/Stateによるデータ管理
- イベントハンドリングの実装

■ 本格的なアプリ制作
- Todoアプリの段階的な開発
- localStorageでのデータ永続化
- TypeScriptでの型安全な開発

【学習の流れ】
本書は段階的なアプローチでReactを学ぶことができます。

まず「Reactとは何か」から始まり、開発環境を整え、簡単なコンポーネントを作りながら基礎を固めます。

そして、実際にTodoアプリを作りながら実践力を養い、最後はTypeScriptを使った本格的な開発まで学習します。

各チャプターは段階的に難易度が上がっていくので、無理なく着実にスキルアップできます。

【技術スタック】
- React 18
- Vite（高速ビルドツール）
- Tailwind CSS（ユーティリティファーストCSS）
- TypeScript（型定義による安全な開発）

【最後に】
Reactを学ぶことで、モダンなWebアプリケーション開発をできるようになります。

また、コンポーネント指向の開発手法は、効率的で保守性の高いコードを書く力を与えてくれるはずです！

そしてこの本で学んだあと、私の動画講座も試してみてはいかがでしょうか？
Claude Code や Codex など、AI駆動開発分野のベストセラー講座で実践レベルにスキルアップしましょう！
https://school.learning-next.app/coupons]]></description><link>https://zenn.dev/tmasuyama1114/books/react_basic_tutorial</link><guid isPermaLink="true">https://zenn.dev/tmasuyama1114/books/react_basic_tutorial</guid><pubDate>Sun, 14 Sep 2025 19:41:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R9-fnf2G--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zMWJkNDdkMTVjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>とまだ@AI 駆動開発教育者</dc:creator></item><item><title><![CDATA[GitHub APIを使ってリポジトリ管理を自動化してみた]]></title><description><![CDATA[
 きっかけ：積み重なった練習リポジトリの山
最近、自分のGitHubを見返したら、昔の練習リポジトリが山のように残っていました。
ひとつずつ削除するのは正直めんどくさいし、間違えて大事なものを消してしまいそうで怖い…。
そこで「ワンクリックで整理できるツールがあればいいのに」と思い、Angularで作ってみました。
この記事では、その開発経緯と仕組みを紹介します。

 作ったもの：GitHub Repository Cleaner
デモ： https://tetsufromtw.github.io/repo-cleaner-angular/
GitHub： https://github...]]></description><link>https://zenn.dev/tetsufromtw/articles/be2578c8d508e1</link><guid isPermaLink="true">https://zenn.dev/tetsufromtw/articles/be2578c8d508e1</guid><pubDate>Sun, 14 Sep 2025 14:50:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zkPC0coH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E7%25AE%25A1%25E7%2590%2586%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2586%25E3%2583%2584%25E3%2583%2587%25E3%2582%25B9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW9jcWlMOFlUQ0JHbjlfbnpqaFo2ZmhoekdLb3pMMHlkbUlEdERQRUZvS2tKNEx3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>テツデス</dc:creator></item><item><title><![CDATA[DDDとクリーンアーキテクチャをはじめよう-Node.js編]]></title><description><![CDATA[
 背景
ども！池田(ikedadada)です！
前回はDDDとクリーンアーキテクチャの考え方と、Todo
APIの要件をまとめました。今回は「Node.jsでDDD＋クリーンアーキテクチャをやるなら、こんな感じで組むよ」という方針で、実装例を紹介します。
サンプル実装は次のリポジトリに置いてあります。
https://github.com/ikedadada/start-ddd-and-clean-architecture
!
目的は「原則の実感」と「読みやすい分割」です。特定のFWやORMにロックインしないことを重視し、依存は内向きに揃えます。


 全体像と依存の向き
構成はシンプ...]]></description><link>https://zenn.dev/poporo/articles/20250914_1_start_ddd_and_clean_architecture_nodejs</link><guid isPermaLink="true">https://zenn.dev/poporo/articles/20250914_1_start_ddd_and_clean_architecture_nodejs</guid><pubDate>Sun, 14 Sep 2025 12:46:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XTkFW2XY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DDD%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%25E3%2582%2592%25E3%2581%25AF%25E3%2581%2598%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586-Node.js%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ikedadada%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzYjczNjc4ZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ikedadada</dc:creator></item><item><title><![CDATA[【Code Reading Agent 開発】探索を簡単にする機能を作りました（フォルダ検索機能）]]></title><description><![CDATA[この記事は、以下の記事らへんの続きです。
https://zenn.dev/coffeecupjp/articles/89bb2b40ced6eb
https://zenn.dev/coffeecupjp/articles/09eaa20edcf2c0
https://speakerdeck.com/ymbigo/potipotixuan-ze-surudakedeosswodu-meruvscodekuo-zhang-ji-neng

 これまでの振り返り
LLMによるコーディングは、この１年で進化しました。
去年５月に自分はOpenDevin（現OpenHands）を使った時は、使い...]]></description><link>https://zenn.dev/coffeecupjp/articles/f2449a9717c1bf</link><guid isPermaLink="true">https://zenn.dev/coffeecupjp/articles/f2449a9717c1bf</guid><pubDate>Sun, 14 Sep 2025 11:24:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qe7Z-0Fp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Code%2520Reading%2520Agent%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E6%258E%25A2%25E7%25B4%25A2%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%25A4%259C%25E7%25B4%25A2%25E6%25A9%259F%25E8%2583%25BD%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kazuya%2520Kurihara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4NThhOTNlMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kazuya Kurihara</dc:creator></item><item><title><![CDATA[NextJSで魅せるロード画面にこだわってみる]]></title><description><![CDATA[
 はじめに
ことの始まりとしては、筆者が起業したので、電子広告台をケチるためにHPを作成する必要があった。
官報に記載すると数万円取られるからである。あとつまらない。
ぶっちゃけHPに書くことは公告義務を果たすための内容以外に特にないので、
演出をちょっとこだわることにした。

 前提：Webサイトにおけるロード画面という概念について
基本的にロード画面というのは、ゲームの地形などを読み込む際に、ユーザーを待たせないために導入されがちだ。　だがHPやLPにおいては、必ずしもその限りではない。
動画サイトのように、大量のデータを扱う際にはロード画面は作成する必要があるだろう。
だが、殆ど...]]></description><link>https://zenn.dev/bitcat/articles/9cc4daf42de351</link><guid isPermaLink="true">https://zenn.dev/bitcat/articles/9cc4daf42de351</guid><pubDate>Sun, 14 Sep 2025 00:19:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oG1Pczwl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NextJS%25E3%2581%25A7%25E9%25AD%2585%25E3%2581%259B%25E3%2582%258B%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AB%25E3%2581%2593%25E3%2581%25A0%25E3%2582%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bitcat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk4NzNmYTQ2Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bitcat</dc:creator></item><item><title><![CDATA[短いコードは本当に正しいのか 可読性とのバランス]]></title><description><![CDATA[コンポーネントの実装で、フラグを条件分岐で代入する処理を書いたところ、コードレビューで「もっとシンプルに書ける」との指摘を受けたため書いてみた。
//example.component.ts
const text: string = 'test'
let isValid: boolean

// 実装したコード
if (this.text) {
  this.isValid = true
} else {
  this.isValid = false
}

// レビューで指摘された修正後のコード
this.isValid = !!this.text //レビューで指摘された修正後のコー...]]></description><link>https://zenn.dev/kei1225/articles/deb44a82d7d367</link><guid isPermaLink="true">https://zenn.dev/kei1225/articles/deb44a82d7d367</guid><pubDate>Sat, 13 Sep 2025 23:22:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ps7EQPea--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%259F%25AD%25E3%2581%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AF%25E6%259C%25AC%25E5%25BD%2593%25E3%2581%25AB%25E6%25AD%25A3%25E3%2581%2597%25E3%2581%2584%25E3%2581%25AE%25E3%2581%258B%2520%25E5%258F%25AF%25E8%25AA%25AD%25E6%2580%25A7%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KEI%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZjMzE5MGYyNWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KEI</dc:creator></item><item><title><![CDATA[【React】ジャイロセンサによるインタラクションを実現する]]></title><description><![CDATA[この記事では、Webサイトでスマホの傾きを検知して描画に反映する方法を紹介します。

 デモ


 準備

 実装環境
今回はVite・React・TypeScriptで実装します。
DeviceOrientationEventはhttpsのサイトでしか使えないので、そのための環境を作ります。
Viteでhttps環境を用意
npm vite create@latest

npm i @vitejs/plugin-basic-ssl


 vite.config.jsを作成
import basicSsl from '@vitejs/plugin-basic-ssl'

export d...]]></description><link>https://zenn.dev/makimura3329/articles/try-device-orientation-react</link><guid isPermaLink="true">https://zenn.dev/makimura3329/articles/try-device-orientation-react</guid><pubDate>Sat, 13 Sep 2025 11:01:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lxODzBOx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591%25E3%2582%25B8%25E3%2583%25A3%25E3%2582%25A4%25E3%2583%25AD%25E3%2582%25BB%25E3%2583%25B3%25E3%2582%25B5%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2520Makimura%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3ZTE1MjMxZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>🧟Makimura🧟</dc:creator></item><item><title><![CDATA[TypeScript のコンパイルを理解する]]></title><description><![CDATA[
 🌼 はじめに
こんにちは、にわかエンジニアです。
私はエンジニア歴のほとんどを TypeScript と一緒に過ごしていてあまり気づいてなかったのですが、どうやら TypeScript のコンパイルは他の言語に比べて変わってるらしいです。
なので、TypeScript のコンパイルについて調べたものを共有したいと思います！

 1. コンピューターの言語、人の言語
まずは根本的な言語（とその翻訳）について説明します。

 1-1. 低水準言語
低水準言語（low-level language）は、コンピュータが理解しやすいように作られた言語で、一般的に機械語とアセンブリ言語を指します...]]></description><link>https://zenn.dev/luvmini511/articles/4ba982523ee265</link><guid isPermaLink="true">https://zenn.dev/luvmini511/articles/4ba982523ee265</guid><pubDate>Sat, 13 Sep 2025 07:36:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4-RvQiJi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2593%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3YTQwNzFlZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みんちゃん</dc:creator></item><item><title><![CDATA[【TypeScript】4つの強力な型操作についてまとめる]]></title><description><![CDATA[
 はじめに
typeof・keyof・Conditional Types・Mapped Typesについて、まとめていきたいと思います。

 typeofとは
typeofは、変数や定数の値から型を取得するために使います。関数や変数の型を一括で取得でき、型定義の冗長さを減らせるという利点があります。
!
文字列リテラルや数値リテラルを保持したい場合は as const が必要です。


 変数の型を取得し、それを新しい型として定義する例
const user = {
  name: '太郎',
  age: 30
};

// typeof user で、user オブジェクトの型を取...]]></description><link>https://zenn.dev/daichi09167/articles/5379cfe1b8f576</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/5379cfe1b8f576</guid><pubDate>Sat, 13 Sep 2025 03:36:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UTC8-tgh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%25914%25E3%2581%25A4%25E3%2581%25AE%25E5%25BC%25B7%25E5%258A%259B%25E3%2581%25AA%25E5%259E%258B%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjODE0Yzk4ODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item></channel></rss>