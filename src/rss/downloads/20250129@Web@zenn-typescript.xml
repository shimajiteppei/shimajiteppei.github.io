<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 29 Jan 2025 04:00:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[[TypeScript]オブジェクト定数から型定義するのが便利だよって話]]></title><description><![CDATA[こんにちわ、かねこです。
自分は普段Reactを使って開発をしているのですが、Reactにはconstantsと呼ばれる変数や値を定義する方法があり、プロジェクト内で使う値を一元管理でき変更が必要になった場合にも、一箇所で変更するだけで済むため、コードの保守性を高めることができたり、JSX内に生のテキストを書かなくて良くなるため、ソースコードの可読性が上がるので、かなり気に入っています。
その中でも最近、定義した定数からTypeScriptの型を生成する記述方法がかなりいいなと思ったので、共有していこうと思います〜
今回はTODOリストの新規作成画面と編集画面で同じコンポーネントを使って...]]></description><link>https://zenn.dev/toraco/articles/ef4a98f272a5f5</link><guid isPermaLink="true">https://zenn.dev/toraco/articles/ef4a98f272a5f5</guid><pubDate>Wed, 29 Jan 2025 03:16:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Cw3hFaA4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypeScript%255D%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%25AE%259A%25E6%2595%25B0%25E3%2581%258B%25E3%2582%2589%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258C%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25A0%25E3%2582%2588%25E3%2581%25A3%25E3%2581%25A6%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%258B%25E3%2581%25AD%25E3%2581%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5ZTBhNDI3ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:toraco%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d3T1pRbUc0ZDBMRjA3LUdScVBsWm1ZeWpIYzNlM0NZSjFOSnhHeEE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かねこ</dc:creator></item><item><title><![CDATA[GAS で多言語対応やってみた]]></title><description><![CDATA[
 はじめに
クラウドエース第三開発部の角谷（かどたに）です。
Google Apps Script（以下、GAS）を使用した開発において、多言語対応をやってみたのでその方法を紹介します。

 対象読者

GAS 開発を行っている方（特に ASIDE を使用する方）
GAS で多言語対応を行いたい方
ASIDE 環境で外部の npm パッケージを使用したい方


 手順

 前提条件

Node.js がインストールされている


 手順 1. ASIDE で GAS の開発環境を構築
今回は ASIDE というフレームワークを用いて、GAS の開発環境を構築します。


ASIDE: ...]]></description><link>https://zenn.dev/cloud_ace/articles/773666f01034cb</link><guid isPermaLink="true">https://zenn.dev/cloud_ace/articles/773666f01034cb</guid><pubDate>Wed, 29 Jan 2025 01:23:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Aca_sizN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%2520%25E3%2581%25A7%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%2589%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B9%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE2OGMwYmM4MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クラウドエース株式会社</dc:creator></item><item><title><![CDATA[個人ブログの記事を Zenn, Qiita へエクスポートするコマンドを作る]]></title><description><![CDATA[
 Git Subtree
Git には複数のリポジトリを統合する手段の1つとして Subtree というものがあるようです。文字通り、リポジトリをサブディレクトリとして取り込み、別でバージョン管理できるようにする仕組みです。

やり方はこの記事などに書いてあります。

 Zenn のリポジトリを取り込む
例として、Zenn の記事を管理しているリポジトリを取り込んでみます。リポジトリが GitHub にあるとすると、
git remote add my-zenn-repo https://github.com/username/zenn-repo.git
のようにすることで、my-ze...]]></description><link>https://zenn.dev/s_inoue0108/articles/article-export-cmd</link><guid isPermaLink="true">https://zenn.dev/s_inoue0108/articles/article-export-cmd</guid><pubDate>Tue, 28 Jan 2025 14:18:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QqC0THpU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%258B%25E4%25BA%25BA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25AE%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%2520Zenn%252C%2520Qiita%2520%25E3%2581%25B8%25E3%2582%25A8%25E3%2582%25AF%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:S.Inoue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlZTc2ZmE4NzYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>S.Inoue</dc:creator></item><item><title><![CDATA[try, catch 処理が必要なコードの見極め方]]></title><description><![CDATA[!
そもそもtry, catchがわからない方は、こちらをお読みください

https://zenn.dev/sanpi34/articles/294717a744970a

 try...catch 処理が必要なコードの見極め方
try...catch 処理を使うべき場面を見極めるには、エラーが発生しやすい箇所やその影響を正しく判断することが重要です。この記事では、どのような場合に try...catch を使うべきかを解説します。


 1. エラーが発生する可能性がある操作を含むか
以下のような操作では、エラーが発生する可能性があるため、try...catch を検討する必要があり...]]></description><link>https://zenn.dev/sanpi34/articles/ed98ee5a563e4d</link><guid isPermaLink="true">https://zenn.dev/sanpi34/articles/ed98ee5a563e4d</guid><pubDate>Tue, 28 Jan 2025 13:03:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yhx0utIM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:try%252C%2520catch%2520%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E8%25A6%258B%25E6%25A5%25B5%25E3%2582%2581%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sanpi34%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTM1NzYwZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sanpi34</dc:creator></item><item><title><![CDATA[try...catch とは何か？]]></title><description><![CDATA[try...catch は、JavaScript をはじめとする多くのプログラミング言語で使用されるエラーハンドリングの構文です。プログラム実行中に発生するエラーを捕捉し、適切に処理するための仕組みを提供します。


 try...catch の基本構文
以下は、JavaScript の try...catch 構文の基本形です。
try {
  // エラーが発生する可能性のあるコード
} catch (error) {
  // エラーが発生した場合の処理
}

 構成要素


try ブロック

エラーが発生する可能性のあるコードを記述します。
このブロック内でエラーが発生した場合...]]></description><link>https://zenn.dev/sanpi34/articles/294717a744970a</link><guid isPermaLink="true">https://zenn.dev/sanpi34/articles/294717a744970a</guid><pubDate>Tue, 28 Jan 2025 13:00:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A6ssPak5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:try...catch%2520%25E3%2581%25A8%25E3%2581%25AF%25E4%25BD%2595%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sanpi34%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTM1NzYwZTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sanpi34</dc:creator></item><item><title><![CDATA[Next.js × GAイベントトラッキング実装で学んだこと]]></title><description><![CDATA[
 はじめに
最近、Next.jsプロジェクトでGoogle Analytics（GA4）のイベントトラッキングを実装する機会がありました。その過程で学んだことを共有したいと思います。

 注意事項
本記事では Next.js アプリケーションでのイベントトラッキングの実装に焦点を当てているため、GA4/GTMのコンソールでの設定（トリガーの作成やタグの設定など）については割愛しています。設定については、以下の公式ドキュメントを参照してください：

Google Analytics 4 設定ガイド
Google タグマネージャーの基本
GA4 イベントの設定方法
GTM トリガーの設定
...]]></description><link>https://zenn.dev/shunjuio/articles/9e0feaabce6a3b</link><guid isPermaLink="true">https://zenn.dev/shunjuio/articles/9e0feaabce6a3b</guid><pubDate>Tue, 28 Jan 2025 11:21:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GKs4LoPK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%25C3%2597%2520GA%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:aratai%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MGZmNGMxMGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%2590%2588%25E5%2590%258C%25E4%25BC%259A%25E7%25A4%25BE%25E6%2598%25A5%25E7%25A7%258B%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YV9BNjFzbGNZZ1pDYWpGMC1zb0Y4SDExU1R3OUdsQk5XRE5pWUg5UT1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aratai</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜Bi-linear補間（026/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の26本目です。

 前回
https://zenn.dev/nyagato_00/articles/8bb967fe63fd6e

 実装

 お題

Bi-linear補間により画像を1.5倍に拡大せよ。
Bi-linear補間とは周辺の４画素に距離に応じた重みをつけることで補完する手法である。 計算量が多いだけ処理時間がかかるが、画質の劣化を抑えることができる。

https://github.com/minido/Gasyori100knock-1/tree/master/Quest...]]></description><link>https://zenn.dev/nyagato_00/articles/b3355f806fb6ad</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/b3355f806fb6ad</guid><pubDate>Tue, 28 Jan 2025 07:44:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RkbQTKF2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259CBi-linear%25E8%25A3%259C%25E9%2596%2593%25EF%25BC%2588026%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[TypeScript 5.8のerasableSyntaxOnlyフラグ。enumやnamespaceが消える日が来た]]></title><description><![CDATA[TypeScript 5.8で導入されるerasableSyntaxOnlyフラグを使うと、enumやnamespace、クラスのパラメータプロパティ、moduleキーワードなどの構文をエラーとして検出できます。これらの構文はNode.jsでTypeScriptを実行する際に非互換な構文であり、本フラグの導入によりNode.jsとTypeScriptの互換性が高まります。
本記事では、erasableSyntaxOnlyフラグの挙動と、なぜこのフラグが導入されたのかを解説します。

 erasableSyntaxOnlyフラグの挙動
erasableSyntaxOnly とは、「削除可能...]]></description><link>https://zenn.dev/ubie_dev/articles/ts-58-erasable-syntax-only</link><guid isPermaLink="true">https://zenn.dev/ubie_dev/articles/ts-58-erasable-syntax-only</guid><pubDate>Tue, 28 Jan 2025 04:14:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1bnbxgNw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25205.8%25E3%2581%25AEerasableSyntaxOnly%25E3%2583%2595%25E3%2583%25A9%25E3%2582%25B0%25E3%2580%2582enum%25E3%2582%2584namespace%25E3%2581%258C%25E6%25B6%2588%25E3%2581%2588%25E3%2582%258B%25E6%2597%25A5%25E3%2581%258C%25E6%259D%25A5%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E9%25B9%25BF%25E9%2587%258E%2520%25E5%25A3%25AE%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOWMzMWRhODMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Ubie%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hwRUMxbUtjVjZsX01lT2R6N1Nsejk1SXR4WUZoYjB2LTNOdzNjV3c9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>鹿野 壮</dc:creator></item><item><title><![CDATA[ConnectによるgRPCを超えたスキーマ駆動開発（Golang/TypeScript）]]></title><description><![CDATA[こんにちは。PortalKeyの植森です。
前回、PortalKeyの主要技術に関してざっくりと解説をしました。
今回は、その中のひとつであるConnectについて掘り下げていきます。


 Connectとは？
https://connectrpc.com/
Connectは、Buf Technologies社が開発したRPCフレームワークです。Protocol Buffersによって通信を定義し、効率的なサーバー/クライアント間通信を実現します。
まずはConnectの特徴について解説していきます。

 Production-grade simplicity: 本番運用のシンプルさ
...]]></description><link>https://zenn.dev/portalkeyinc/articles/18f6f3f54da55a</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/18f6f3f54da55a</guid><pubDate>Mon, 27 Jan 2025 14:06:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C2iaJUr8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Connect%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BgRPC%25E3%2582%2592%25E8%25B6%2585%25E3%2581%2588%25E3%2581%259F%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2588Golang%252FTypeScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wakaba260%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hYOTVyU0tGaEZ1Xy00RWJGMXVDMldKcms2SEtYMFZ4MV91ZjhrRkE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakaba260</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜最近傍補間（025/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の25本目です。

 前回
https://zenn.dev/nyagato_00/articles/957f04f14fab61

 実装

 お題

最近傍補間により画像を1.5倍に拡大せよ。
最近傍補間(Nearest Neighbor)は画像の拡大時に最近傍にある画素をそのまま使う手法である。 シンプルで処理速度が速いが、画質の劣化は著しい。
次式で補間される。 I' ... 拡大後の画像、 I ... 拡大前の画像、a ... 拡大率、[ ] ... 四捨五入
https://gi...]]></description><link>https://zenn.dev/nyagato_00/articles/8bb967fe63fd6e</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/8bb967fe63fd6e</guid><pubDate>Mon, 27 Jan 2025 07:29:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sM-8V1Vz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E6%259C%2580%25E8%25BF%2591%25E5%2582%258D%25E8%25A3%259C%25E9%2596%2593%25EF%25BC%2588025%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[Globe-ingの技術スタック]]></title><description><![CDATA[
 はじめに
みなさん、はじめまして。Globe-ingのCTOを務める上田です。
この度、弊社テックブログを立ち上げることになりました。第一弾の記事では、私たちが開発中のプロダクト「オクタゴン」と「AIコンサルタント」の紹介と、それらを支える技術的な選択についてお話しします。


 開発中のプロダクトについて
現在、Globe-ingでは2つのプロダクトラインを構想・開発しています。

 1. 「オクタゴン」
コンサルタントが長年培ってきたノウハウを自動化・SaaS化し、幅広い企業に素早く提供することを目指したプロダクト群です。例えば、以下のプロダクトを開発しています。


セールスス...]]></description><link>https://zenn.dev/globeing/articles/glb-tech-stack</link><guid isPermaLink="true">https://zenn.dev/globeing/articles/glb-tech-stack</guid><pubDate>Mon, 27 Jan 2025 06:14:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PahVhFEJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Globe-ing%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kueda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxZWQ3MTE4MTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Globe-ing%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyOWJhYzk3ZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kueda</dc:creator></item><item><title><![CDATA[GolangでUnion型を実現！型の柔軟性を最大限に活かす3つの方法]]></title><description><![CDATA[
 はじめに
Golang（以下Go）は、シンプルで高速なプログラミングを実現するために設計された言語です。しかし、Goには他の言語で一般的なUnion型のサポートがありません。そのため、複合型を扱いたい場合、Goの特徴を活かした方法で工夫する必要があります。
この記事では、Union型的なことをGoで実現するための方法を詳しく解説します。初学者の方でも理解しやすいように、コード例や実用的なシナリオを交えながら説明します。


 Union型とは？
Union型は、1つの変数が複数の型のうちどれか1つを持つことを許容する型です。例えば、TypeScriptやPythonでは以下のように書...]]></description><link>https://zenn.dev/daiten/articles/0276f69f817461</link><guid isPermaLink="true">https://zenn.dev/daiten/articles/0276f69f817461</guid><pubDate>Mon, 27 Jan 2025 05:38:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HvR7vyHj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Golang%25E3%2581%25A7Union%25E5%259E%258B%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581%25E5%259E%258B%25E3%2581%25AE%25E6%259F%2594%25E8%25BB%259F%25E6%2580%25A7%25E3%2582%2592%25E6%259C%2580%25E5%25A4%25A7%25E9%2599%2590%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%25993%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daitenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MzllZjg1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daitenn</dc:creator></item><item><title><![CDATA[【RT/TS】多言語対応について]]></title><description><![CDATA[
 新シリーズ始動
React Tech/Typescript Scraps (略してRT/TS) の記念すべき第一回へようこそ！今回は、最近react-i18nextと一緒に使っている便利なパターンをご紹介します。ローカライズ以外にも役立つテクニックなので、どうぞ最後までお見逃しなく！
!
PWA講座の進捗はどうですか？
皆さんに楽しんでもらえるように、インタラクティブなサンプルをたくさん用意しているのですが、その分、予想以上に時間がかかってしまっています。でもご安心ください！最後の章は必ず完成させますので、もうしばらくお待ちください。


 このシリーズはどんな人向け？
このシリーズ...]]></description><link>https://zenn.dev/sun_asterisk/articles/fa77f9ff7e1b58</link><guid isPermaLink="true">https://zenn.dev/sun_asterisk/articles/fa77f9ff7e1b58</guid><pubDate>Mon, 27 Jan 2025 02:40:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ejLAiUWu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RT%252FTS%25E3%2580%2591%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2593%25E3%2583%25B3%2520%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A7%25E3%2583%25A0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YTU0ZjZiM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sun%252A%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNTVlY2IwMTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>デルビン アルチョム</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜ガンマ補正（024/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の24本目です。

 前回
https://zenn.dev/nyagato_00/articles/60493cb7873f11

 実装

 お題

imori_gamma.jpgに対してガンマ補正(c=1, g=2.2)を実行せよ。
ガンマ補正とは、カメラなどの媒体の経由によって画素値が非線形的に変換された場合の補正である。 ディスプレイなどで画像をそのまま表示すると画面が暗くなってしまうため、RGBの値を予め大きくすることで、ディスプレイの特性を排除した画像表示を行うことがガンマ補正...]]></description><link>https://zenn.dev/nyagato_00/articles/957f04f14fab61</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/957f04f14fab61</guid><pubDate>Sun, 26 Jan 2025 10:08:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bvmidj5m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E3%2582%25AC%25E3%2583%25B3%25E3%2583%259E%25E8%25A3%259C%25E6%25AD%25A3%25EF%25BC%2588024%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[TypeScript入門書の執筆にあたってフロントエンド章にVueを採用した理由]]></title><description><![CDATA[こんにちは、西山と申します。2019年に新卒入社した企業でTypeScriptを書き始めてから、もうすぐ7年目になります。
去年の夏、筆者が現在所属している株式会社Helpfeelのスポンサー活動をきっかけに執筆のお声がけをいただき、『TECHNICAL MASTER はじめてのTypeScript エンジニア入門編』という本を書きました。来月上旬に発売されます。
本書は秀和システムによる「TECHNICAL MASTER」シリーズのひとつで、これから開発者を目指す人を読者のメインターゲットにしています。
この記事ではそのパート3、Node.jsとフロントエンドフレームワークを使ってWe...]]></description><link>https://zenn.dev/xxishan/articles/dd21b43d0d5bbb</link><guid isPermaLink="true">https://zenn.dev/xxishan/articles/dd21b43d0d5bbb</guid><pubDate>Sun, 26 Jan 2025 09:32:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4ZWIhq0y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25E6%259B%25B8%25E3%2581%25AE%25E5%259F%25B7%25E7%25AD%2586%25E3%2581%25AB%25E3%2581%2582%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25AB%25A0%25E3%2581%25ABVue%25E3%2582%2592%25E6%258E%25A1%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNDczODZkMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nishiyama</dc:creator></item><item><title><![CDATA[驚愕の改善率！たった3ステップのReactパフォーマンスチューニング]]></title><description><![CDATA[こんにちは！寝落ちエンジニアの長男です。
皆さんは、こんな経験はありませんか？

Reactアプリの動作が遅くてユーザーからクレームが...
原因は分かっているけど、改善の仕方が分からない...
パフォーマンスチューニングに手をつけたいけど、時間がない...

実は私も同じ悩みを抱えていました。300万MAUを抱えるサービスで、ユーザーからの「遅い」というフィードバックに頭を抱える日々。でも、たった3つの改善で画面の初期表示を42%高速化し、ユーザーの離脱率を18%改善することができました。
今回は、私が実際のプロジェクトで成功した、誰でも実践できるReactパフォーマンスチューニングの...]]></description><link>https://zenn.dev/nap_engineer/articles/9e26019a661e50</link><guid isPermaLink="true">https://zenn.dev/nap_engineer/articles/9e26019a661e50</guid><pubDate>Sun, 26 Jan 2025 07:06:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ypZ8dBnE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A9%259A%25E6%2584%2595%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%25E7%258E%2587%25EF%25BC%2581%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F3%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AEReact%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AF%259D%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E9%2595%25B7%25E7%2594%25B7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxYmVkOWI2MDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>寝落ちエンジニアの長男</dc:creator></item><item><title><![CDATA[k6とTypeScriptで始める負荷テスト]]></title><description><![CDATA[負荷テスト、やってます？
明らかなボトルネックが見えていて、かつ、シンプルなワークロードに落とし込めるなら、自作のシェルスクリプトやシンプルなCLIアプリ[1]で十分な場合もありますが、ログインして情報を取ってきてそれに基づいてデータを作る...みたいな、ある程度複雑なユーザーシナリオを組もうとすると、何らかツールやフレームワークが必要になります。
YAML（Taurus[2]など）やXML（Apache JMeter[3]など）でも良いのですが、より強力な表現力を得ようとすると、慣れたプログラミング言語で記述したくなります。
本投稿では、JavaScript/TypeScriptで負荷...]]></description><link>https://zenn.dev/ohke/articles/k6-typescript-2025</link><guid isPermaLink="true">https://zenn.dev/ohke/articles/k6-typescript-2025</guid><pubDate>Sat, 25 Jan 2025 21:38:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d0VzFgf5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:k6%25E3%2581%25A8TypeScript%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzI1YWRjYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ohke</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜ヒストグラム平坦化（023/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の23本目です。

 前回
https://zenn.dev/nyagato_00/articles/2be700edd634d7

 実装

 お題

ヒストグラム平坦化を実装せよ。
ヒストグラム平坦化とはヒストグラムを平坦に変更する操作であり、上記の平均値や標準偏差などを必要とせず、ヒストグラム値を均衡にする操作である。
これは次式で定義される。 ただし、S ... 画素値の総数、Zmax ... 画素値の最大値、h(z) ... 濃度zの度数

https://github.com/m...]]></description><link>https://zenn.dev/nyagato_00/articles/60493cb7873f11</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/60493cb7873f11</guid><pubDate>Sat, 25 Jan 2025 10:50:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MkKzVKFe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E5%25B9%25B3%25E5%259D%25A6%25E5%258C%2596%25EF%25BC%2588023%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[How to embed Amazon Connect's standard CCP in Next.js]]></title><description><![CDATA[日本語verはこちら

 Introduction.
In this case, I would like to embed Amazon Connect's standard CCP into a Next.js application to create an application that allows you to visually see which queue an incoming call came through.
Next.js is a framework that is gaining momentum right now and I would love to...]]></description><link>https://zenn.dev/daikim/articles/c4b8335acdcb39</link><guid isPermaLink="true">https://zenn.dev/daikim/articles/c4b8335acdcb39</guid><pubDate>Sat, 25 Jan 2025 05:09:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ncaOpU_a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:How%2520to%2520embed%2520Amazon%2520Connect%2527s%2520standard%2520CCP%2520in%2520Next.js%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiNzhhZWJjNDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daiki</dc:creator></item><item><title><![CDATA[if文の式で配列を使う方法]]></title><description><![CDATA[
 結論 Array.isArray()で型を絞る
type formState = { bool: false | [true, string] | null };
if (Array.isArray(bool) &amp;&amp; bool[0] === true) {}
型を絞ることで配列を扱えるようになる
]]></description><link>https://zenn.dev/wakki/articles/2b31128121739e</link><guid isPermaLink="true">https://zenn.dev/wakki/articles/2b31128121739e</guid><pubDate>Fri, 24 Jan 2025 18:25:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NzAmxmB_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:if%25E6%2596%2587%25E3%2581%25AE%25E5%25BC%258F%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkOTg4YTEyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワッキー</dc:creator></item></channel></rss>