<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 08 Jun 2025 05:28:09 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[TypeScript: オプショナルチェイニング vs 型ガード 使い分けガイド]]></title><description><![CDATA[TypeScriptでオプショナルプロパティを安全に扱う際、オプショナルチェイニング（?.） と 型ガード のどちらを使うべきか迷うことはありませんか？
この記事では、それぞれの特徴と適切な使い分けについて、コード例を交えて解説します。

 オプショナルチェイニング（?.）とは
オプショナルチェイニングは、プロパティが存在しない可能性がある場合に安全にアクセスできる演算子です。

 基本的な使用例
interface User {
  name: string;
  profile?: {
    age: number;
    email: string;
  };
}

const...]]></description><link>https://zenn.dev/h_tatsuoka/articles/2b28b973473b8a</link><guid isPermaLink="true">https://zenn.dev/h_tatsuoka/articles/2b28b973473b8a</guid><pubDate>Sun, 08 Jun 2025 04:16:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TuZMURWl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%253A%2520%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%258A%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A7%25E3%2582%25A4%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2520vs%2520%25E5%259E%258B%25E3%2582%25AC%25E3%2583%25BC%25E3%2583%2589%2520%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HTatsuoka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwOTY0NTE5YTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HTatsuoka</dc:creator></item><item><title><![CDATA[Button の disabled だけで安心してはいけない]]></title><description><![CDATA[
 disabledだけで安心していませんか？Reactでのボタン制御に潜む落とし穴

 はじめに
Reactでボタンを一時的に無効化するには、disabled属性を使うのが定番です。
例えば、送信中に二重クリックを防ぐための実装は次のようになります。
&lt;button disabled={isSubmitting}&gt;送信&lt;/button&gt;
一見するとこれで十分に思えるかもしれません。
しかし、実はこの実装だけでは不十分なケースもあるのです。


 disabledは見た目だけの制御
disabled属性を設定すれば、確かにUI上ではボタンが押せなくなります。
しか...]]></description><link>https://zenn.dev/qluqlu/articles/44cb2e37d312d9</link><guid isPermaLink="true">https://zenn.dev/qluqlu/articles/44cb2e37d312d9</guid><pubDate>Sun, 08 Jun 2025 03:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GeZ0ZW8f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Button%2520%25E3%2581%25AE%2520disabled%2520%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E5%25AE%2589%25E5%25BF%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AF%25E3%2583%25AB%25E3%2582%25AF%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjg1NWNiMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>クルクル</dc:creator></item><item><title><![CDATA[TypeScriptの Branded Types でドメインを守り、コードの安全性を向上させる]]></title><description><![CDATA[
 🚀 そのid、本当に安全ですか？
こんにちは！TypeScriptで開発をしている皆さん。
突然ですが、こんな経験はありませんか？

「このid: stringって、何のIDだっけ…？ userId？ それともorderId？」
レビューで「あ、ここの関数に、間違えてproductIdを渡しちゃってますね…」と指摘された。

userIdとcompanyId、どちらもstring型だから、間違えて代入してもコンパイラが教えてくれず、実行時エラーに…。

TypeScriptの基本的な型（string, numberなど）は非常に便利ですが、
時として、こうした「型の意図が曖昧」なこと...]]></description><link>https://zenn.dev/watasho/articles/bc5714b75abd07</link><guid isPermaLink="true">https://zenn.dev/watasho/articles/bc5714b75abd07</guid><pubDate>Sun, 08 Jun 2025 02:13:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oBPe99c8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%2520Branded%2520Types%2520%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%2588%25E3%2582%258A%25E3%2580%2581%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%25E3%2582%2592%25E5%2590%2591%25E4%25B8%258A%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:watasho%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHZHcjFkZkVjd2llaGF2ell4WEVGT043OFBFVlBLb1QtSlQ2S0lmNFVBb2c0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>watasho</dc:creator></item><item><title><![CDATA[CSVの型カオスに立ち向かう、TypeScriptでの完全型安全な扱い方]]></title><description><![CDATA[
 はじめに
CSVファイルをTypeScriptで型安全に扱う方法について、具体的な実装を交えながらご紹介します。
この記事で紹介するコードのデモと実際のソースコードはこちらから確認できます。
https://exp.bmth.dev/csv

 CSVの悩み：なぜJSONのようにいかないのか
JSONファイルは、TypeScriptプロジェクトにおいて非常に扱いやすい存在です。
import data from './data.json'のように書くだけで、TypeScriptが型を推論し、中身を直接オブジェクトとして利用できます。
とても便利ですよね。
しかし、CSVファイルではそ...]]></description><link>https://zenn.dev/bmth/articles/ts-typed-csv</link><guid isPermaLink="true">https://zenn.dev/bmth/articles/ts-typed-csv</guid><pubDate>Sat, 07 Jun 2025 19:01:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_qaXbkTC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CSV%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25AB%25E3%2582%25AA%25E3%2582%25B9%25E3%2581%25AB%25E7%25AB%258B%25E3%2581%25A1%25E5%2590%2591%25E3%2581%258B%25E3%2581%2586%25E3%2580%2581TypeScript%25E3%2581%25A7%25E3%2581%25AE%25E5%25AE%258C%25E5%2585%25A8%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AA%25E6%2589%25B1%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2598%25E3%2582%2587%25E3%2581%2586%25E3%2581%2592%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzZTk3NzVhNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>じょうげん</dc:creator></item><item><title><![CDATA[Next.js,Nust.js,NestJSの違いを整理する]]></title><description><![CDATA[
 時間ない人向け比較表



フレームワーク
主な用途
ベース技術
主な特徴




Next.js
フロントエンド（ReactアプリのSSR/SSG）
React + Node.js
ファイルベースルーティング、ISR、App Router、Vercelとの親和性


Nuxt.js
フロントエンド（VueアプリのSSR/SSG）
Vue.js + Node.js
自動ルーティング、柔軟な設定、Vue3対応、軽量な構成


NestJS
バックエンド（API、マイクロサービス）
Node.js + TypeScript
モジュール構造、依存性注入（DI）、Angular風アーキテクチ...]]></description><link>https://zenn.dev/yamayaman/articles/6914665e6de54f</link><guid isPermaLink="true">https://zenn.dev/yamayaman/articles/6914665e6de54f</guid><pubDate>Sat, 07 Jun 2025 13:59:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H3G_pMJt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%252CNust.js%252CNestJS%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yamayaman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlMGFkMTM0MjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yamayaman</dc:creator></item><item><title><![CDATA[Vibe Codingした後に、Claude Codeと学習しよう！]]></title><description><![CDATA[
 はじめに
先日、MCP (Model Context Protocol) ServerのStreamable HTTPトランスポートを最小構成で実装しました。もちろん、Claude Codeと一緒に！ここで生成されたソースコード群(プロジェクト)について、Claude Codeと対話しながら、Node.jsやTypeScript、Dockerの理解を深めました。
Vibe Codingだけではもったいないと思っていて、Claude Codeと一緒に生成したアウトプットを見ていくと学びが多くスキルアップに繋がるのではと！
具体的なやり取りを記事にしました。私の質問の仕方など参考になると...]]></description><link>https://zenn.dev/acntechjp/articles/59e657e90d1c50</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/59e657e90d1c50</guid><pubDate>Sat, 07 Jun 2025 13:18:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RW1R_poN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vibe%2520Coding%25E3%2581%2597%25E3%2581%259F%25E5%25BE%258C%25E3%2581%25AB%25E3%2580%2581Claude%2520Code%25E3%2581%25A8%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%259E%25E3%2583%2583%25E3%2582%25B5%25E3%2583%25B3%2520%2528Masanori%2520Yos...%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU5MzkwNDBmYjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マッサン (Masanori Yoshida)</dc:creator></item><item><title><![CDATA[Claude Codeを使って自分用のプロトタイプ開発環境を整理した]]></title><description><![CDATA[プロトタイプ開発環境というのは、雑に思いついたwebアプリを素早く作成するための環境のことで1年半くらい前にもこういう記事を書いた。
https://zenn.dev/razokulover/articles/7653ef0336db77
個人開発やサイドプロジェクトで「ちょっとしたアイデアを形にしたい」というときになんかゼロから環境構築するのは面倒だし、かといって適当に作ると後々メンテナンスが大変になる。
以前はViteを使って簡単なプロトタイプを作っていたが最近のAI Codingの進化によりプロトタイプ以上にしっかり動くものまで簡単に作れるようになってきた。そうなるとpure vi...]]></description><link>https://zenn.dev/razokulover/articles/7f4b4d21622bda</link><guid isPermaLink="true">https://zenn.dev/razokulover/articles/7f4b4d21622bda</guid><pubDate>Sat, 07 Jun 2025 10:35:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9c2gB37H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%2587%25AA%25E5%2588%2586%25E7%2594%25A8%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YuheiNakasaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kzeF9ZT3A4VnMzd2p0d1QweXJBb19CVW9WXzFZZnNmSEZXbVpmPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YuheiNakasaka</dc:creator></item><item><title><![CDATA[【メモ】TypeScriptプロジェクト初期セットアップ（Vite版）]]></title><description><![CDATA[
 目標

Vitaを利用してHTML+TypeScriptのプロジェクトを作成
HTML+TypeScriptのコンテンツをViteサーバーで提供。
gtsを利用してGoogle TypeScript Style Guideに従うようにESLintを設定。
VSCodeで編集時にlinter、保存時にformatterが効くようにする。


 前提

2025/6の時点での情報に従う。
nodejsの環境はセットアップ済み。
VSCodeはセットアップ済み。


 セットアップ

 webpackインストール
npm init vite@latest . -- --template v...]]></description><link>https://zenn.dev/kurta/articles/fa1a116574dbe0</link><guid isPermaLink="true">https://zenn.dev/kurta/articles/fa1a116574dbe0</guid><pubDate>Sat, 07 Jun 2025 07:51:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---Bo5D9Ov--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%25A1%25E3%2583%25A2%25E3%2580%2591TypeScript%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E5%2588%259D%25E6%259C%259F%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25EF%25BC%2588Vite%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kurta%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyMDRmOWM0OTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kurta</dc:creator></item><item><title><![CDATA[GAS関数だってフロントエンドから型安全に呼び出ししたい！]]></title><description><![CDATA[
 概要
GAS芸人の皆さん、こんにちは！
HtmlServiceを使ったWebアプリ開発、手軽に公開できて沼りますよね🫠
最近は@google/claspとvite-plugin-singlefileを活用して、ReactやVueをGASにホストすることにハマっています。

補足：HtmlServiceとは？
Google Apps Script（GAS）でHTMLやJavaScriptを使ったWebアプリを作成・公開できる仕組みです。
GAS初心者の方は、公式ドキュメントも参考にしてみてください。

そんな中でフロントエンドからサーバサイド（GAS）の関数を呼び出すために必ず利用する...]]></description><link>https://zenn.dev/luth/articles/gasnuki-publish</link><guid isPermaLink="true">https://zenn.dev/luth/articles/gasnuki-publish</guid><pubDate>Sat, 07 Jun 2025 06:21:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QgNpwymA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GAS%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:luth%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhNjRjYzI5NGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luth</dc:creator></item><item><title><![CDATA[TypeScriptでマイクラやってみた]]></title><description><![CDATA[統合版マイクラには Script API という機能があり、JavaScriptで既存のマイクラのしくみを変えるアドオンを作成ことができます。TypeScriptでの開発にも対応しています。
https://learn.microsoft.com/en-us/minecraft/creator/documents/scriptinggettingstarted?view=minecraft-bedrock-stable
TypeScriptを使ってのScriptAPIの環境開発構築と
One Block Challenge風のブロックを壊すとランダムに新しいブロックが生成されるしくみ
を...]]></description><link>https://zenn.dev/sumiso_c0db8c/articles/036946fd7812f0</link><guid isPermaLink="true">https://zenn.dev/sumiso_c0db8c/articles/036946fd7812f0</guid><pubDate>Sat, 07 Jun 2025 06:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0T9JSTfG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sumiso_c0db8c%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTF6aUQtcjdoeWs1RDJBSUJqcTVJQWZCSENWRFIzSG1kTXFmS0Q5eXVxdm9VRGMxYz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sumiso_c0db8c</dc:creator></item><item><title><![CDATA[async 関数で await 使わず Promise を返すメモ]]></title><description><![CDATA[async で処理したいが, 遅延処理で処理終わってからなんかしたいなどで await で同期を取りたくない, 使えないときもある.

 基本構成(Promise object返す)
async fun() {
    return new Promise(...);
}
if else とかで分岐していて return しわすれすると処理されないので注意. e.g.
async fun() {
   if (...) {
        return new Promise(...);
    } else {
         // Promise オブジェクトが返されない.
   ...]]></description><link>https://zenn.dev/syoyo/articles/c2f440ba8a5bd0</link><guid isPermaLink="true">https://zenn.dev/syoyo/articles/c2f440ba8a5bd0</guid><pubDate>Sat, 07 Jun 2025 02:14:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cnuqnwrN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:async%2520%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A7%2520await%2520%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%2520Promise%2520%25E3%2582%2592%25E8%25BF%2594%25E3%2581%2599%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:syoyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FiZTYxMTY5ZTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>syoyo</dc:creator></item><item><title><![CDATA[TypeScript入門：関数の型定義～配列操作について]]></title><description><![CDATA[
 はじめに
最近はAIコーディングばかりで、自身の基礎的な理解が曖昧になっていると感じることがありました。そこで本記事では、自身の知識を整理し、理解を深める目的で、TypeScriptの要点をできるだけかみ砕いてアウトプットとしてまとめます。

 1.引数と戻り値の基本
JavaScriptでも関数はたくさん使っていましたが、TypeScriptではもっと厳密に、そして安全に関数を扱えます。

 ポイント
ポイントは、引数（関数に渡すデータ）と戻り値（関数から返ってくるデータ）それぞれに、「君のデータの種類はこれだよ」と型を決めてあげることでした。これを最初にやっておくと、後で全然違う...]]></description><link>https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</link><guid isPermaLink="true">https://zenn.dev/atsukiprog/articles/3470d5c4bc0ecf</guid><pubDate>Sat, 07 Jun 2025 02:01:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cTOB812w--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25EF%25BD%259E%25E9%2585%258D%25E5%2588%2597%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25A2%25A7%25E6%259C%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MTAwYTVmYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>碧月</dc:creator></item><item><title><![CDATA[cloudflare D1を使うReact Router v7のアプリを作り方（たぶん最速）]]></title><description><![CDATA[
 概要
react router v7と、cloudflare D1を使用したアプリケーションをORM（Drizzle）付きで作成する方法を備忘録がてらまとめます。
少し前に比べて、マイグレーション周り等利便性が向上していてとても便利になっていました。
プロジェクトの作成から、アプリのデプロイ、DBの接続までを行います。

 react router v7のプロジェクトの作成
以下のコマンドを実行します。

```bash
$npx create-react-router@latest --template remix-run/react-router-templates/cloudf...]]></description><link>https://zenn.dev/ramo798/articles/2a0c5e997da019</link><guid isPermaLink="true">https://zenn.dev/ramo798/articles/2a0c5e997da019</guid><pubDate>Fri, 06 Jun 2025 15:54:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agllZIii--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cloudflare%2520D1%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586React%2520Router%2520v7%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25EF%25BC%2588%25E3%2581%259F%25E3%2581%25B6%25E3%2582%2593%25E6%259C%2580%25E9%2580%259F%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ramo798%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0ZWQxODJhZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ramo798</dc:creator></item><item><title><![CDATA[TypeScriptで人生が変わった話 - TypeScript大好きエンジニアの溺愛ポエム]]></title><description><![CDATA[
 はじめに - TypeScriptへの愛を込めて
『Zenn TypeScript記事投稿コンテスト』
こんなコンテストがあるなんて...！
文章は下手だし、みんなみたいに豊富な経験があるわけでもないけれど、このTypeScriptへの愛と学びは発信しておかないと、TypeScriptLoverとしての名が廃る。
そんな想いで、気づいたときにはキーボードを叩いていました。
ちなみに、AIが目まぐるしい勢いで成長している昨今、いつか自分の手でコードを書けなくなる日が来るかもしれません...😱 でも声を大にして宣言します。AIがどれだけ発展しても、TypeScriptは己が手一本で書き続...]]></description><link>https://zenn.dev/katakuriko_a/articles/512ca79b440741</link><guid isPermaLink="true">https://zenn.dev/katakuriko_a/articles/512ca79b440741</guid><pubDate>Fri, 06 Jun 2025 12:39:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NyBO23-o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E4%25BA%25BA%25E7%2594%259F%25E3%2581%258C%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2520-%2520TypeScript%25E5%25A4%25A7%25E5%25A5%25BD%25E3%2581%258D%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E6%25BA%25BA%25E6%2584%259B%25E3%2583%259D%25E3%2582%25A8%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Uni%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMWIxZjEyZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Uni</dc:creator></item><item><title><![CDATA[【Vercel】デプロイリージョンを日本に変更したら動作が早くなるかも]]></title><description><![CDATA[【Vercel】デプロイリージョンを日本に変更したら動作が速くなった話

 はじめに
普段の開発でVercelを使っているのですが、なんとなく表示が遅いな〜と感じていました。
調べてみるとデフォルトで
Washington, D.C., USA (East) - us-east-1 - iad1
アメリカのリージョンが設定されていました。

Tokyo, Japan (Northeast) - ap-northeast-1 - hnd1
にチェックをいれsaveを押下してください。

これによりリージョンが東京に変更されます。
せっかくコーディングなどで試行錯誤していても意外と見落としが...]]></description><link>https://zenn.dev/ren21/articles/276b3cd6574e96</link><guid isPermaLink="true">https://zenn.dev/ren21/articles/276b3cd6574e96</guid><pubDate>Fri, 06 Jun 2025 11:54:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NTrHHEvO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Vercel%25E3%2580%2591%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E5%258B%2595%25E4%25BD%259C%25E3%2581%258C%25E6%2597%25A9%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258B%25E3%2581%258B%25E3%2582%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YTk2YTVjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れん</dc:creator></item><item><title><![CDATA[Next.jsプロジェクトにCIを実装したので備忘録]]></title><description><![CDATA[
 Next.jsプロジェクトにCIを実装したので備忘録
Next.jsプロジェクトでCI/CDの勉強としてCIを導入してみました。
特にprettierでtailwind-cssのクラスの整形も行ってくれて感動しました。
私は既に作成したアプリケーションに導入したのですが、次は最初から導入しようと思います。
今回は簡単なフォーマットやTailwindcssの整形、TypeScriptの型チェックを行うCIの実装を備忘録として残します。

 🎯 この記事でできること

ESLintでコードの品質チェック
TypeScriptの型チェック
Prettierでコードフォーマットチェック
Ta...]]></description><link>https://zenn.dev/ren21/articles/bba14870f89888</link><guid isPermaLink="true">https://zenn.dev/ren21/articles/bba14870f89888</guid><pubDate>Fri, 06 Jun 2025 11:10:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UpkS-8Dt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABCI%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY4YTk2YTVjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れん</dc:creator></item><item><title><![CDATA[【Discord.js】既読管理とリマインド機能を持つDiscord BOTを作ってみた]]></title><description><![CDATA[
 はじめに
こんにちは、saitogoです。
今回は、Discordサーバーでメッセージの既読管理とリマインド機能を持つBOTを開発したので、その紹介と使い方について記事にまとめました。
「重要なお知らせを投稿したけど、誰が読んだかわからない...」
「全員に確実に読んでもらいたい情報があるのに、見落とされてしまう...」
「メッセージをまだ見てない人にリマインドしたいけど、一人一人手動でDM送るのが面倒くさい...」
そんな課題を解決するために、メッセージの既読状況を視覚的に管理し、未読者にリマインドを送信できるBOTを開発しました。


 作成したBOTの概要
https://gi...]]></description><link>https://zenn.dev/saitogo/articles/8259eee6afc437</link><guid isPermaLink="true">https://zenn.dev/saitogo/articles/8259eee6afc437</guid><pubDate>Fri, 06 Jun 2025 09:16:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9VbAvJCH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Discord.js%25E3%2580%2591%25E6%2597%25A2%25E8%25AA%25AD%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25A8%25E3%2583%25AA%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4Discord%2520BOT%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saitogo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkOTUyMmM3ZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saitogo</dc:creator></item><item><title><![CDATA[BiomeのGritQLプラグイン vs. ast-grep: JS開発者のためのAST変換ガイド]]></title><description><![CDATA[
 なぜASTツールがリンターにとって重要なのか
Zennの皆様こんにちは。ast-grepの著者、Herringtonです。
大規模プロジェクトで一貫性のある高品質なコードを維持することは、大きな課題です。最新のRustベースのLintingツールは、基本的なコーディング標準を強制する点で素晴らしいパフォーマンスを発揮しますが、開発者が高度にカスタムなプロジェクト固有のパターンや、コードベース全体にわたる自動化された大規模なリファクタリングを必要とする場合、しばしば不十分です。ここで、AST（Abstract Syntax Tree：抽象構文木）ベースのツール、特にネイティブリンターに...]]></description><link>https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</link><guid isPermaLink="true">https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</guid><pubDate>Fri, 06 Jun 2025 05:29:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agZTJNfU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2581%25AEGritQL%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2520vs.%2520ast-grep%253A%2520JS%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAST%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Herrington%2520Darkholme%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZWZPY0dMdmpkYjdJT0JURTFKNXB4d3ZVcEc2SEdRZ2w3bE1LZnR0SW1hMFRxTj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Herrington Darkholme</dc:creator></item><item><title><![CDATA[(papaparse)React + TypeScriptでCSVをパースする方法]]></title><description><![CDATA[CSVファイルを読み込むためにpapaparseライブラリを使いました。

 私の開発環境

React
TypeScript


 papaparseのインストール
npm install papaparse
npm install --save-dev @types/papaparse

 Papa.parse() 主な機能



オプション名
説明




header: true
最初の行をヘッダーとして扱う


skipEmptyLines: true
空の行をスキップ


complete
パースされたデータを親コンポーネントに渡す


error
エラー発生時の処理



...]]></description><link>https://zenn.dev/hyoni/articles/e46cc1f71eda90</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/e46cc1f71eda90</guid><pubDate>Fri, 06 Jun 2025 01:35:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JAk3Y9Rj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528papaparse%2529React%2520%252B%2520TypeScript%25E3%2581%25A7CSV%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[Next.jsプロジェクト新規作成のベストプラクティス：爆速開発を始めるための完全ガイド]]></title><description><![CDATA[
 はじめに
Next.jsは、Reactアプリケーションを構築するためのフレームワークです。サーバーサイドレンダリング（SSR）や静的サイト生成（SSG）などの機能が組み込まれており、高いパフォーマンスと優れた開発体験を提供します。
この記事では、Next.jsプロジェクトを新規作成する際の基本的な手順から、開発効率を最大化するための推奨設定までを網羅的に解説します。

 1. Next.jsプロジェクトの基本的な作成方法

 プロジェクトを作成するコマンド
まずは、Next.jsプロジェクトのひな形を作成します。以下のコマンドをターミナルで実行してください。
my-next-appの...]]></description><link>https://zenn.dev/pg_owl/articles/5776795262efe1</link><guid isPermaLink="true">https://zenn.dev/pg_owl/articles/5776795262efe1</guid><pubDate>Fri, 06 Jun 2025 01:27:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cFIt8LFc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.jsw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2584%25E3%2582%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliOGNmNDliOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ツジ</dc:creator></item></channel></rss>