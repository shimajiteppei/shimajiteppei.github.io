<?xml version="1.0" encoding="UTF-8"?>
<feed xml:lang="ja-JP" xmlns="http://www.w3.org/2005/Atom">
  <id>tag:qiita.com,2005:/tags/java/feed</id>
  <link rel="alternate" type="text/html" href="https://qiita.com"/>
  <link rel="self" type="application/atom+xml" href="https://qiita.com/tags/java/feed"/>
  <title>Javaタグが付けられた新着記事 - Qiita</title>
  <description>QiitaでJavaタグが付けられた新着記事</description>
  <updated>2025-09-20T20:16:10+09:00</updated>
  <link>https://qiita.com/tags/java</link>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2082771</id>
    <published>2025-09-20T20:16:10+09:00</published>
    <updated>2025-09-20T20:16:10+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/masatomix/items/5d54119cff0aa0cb46ab"/>
    <url>https://qiita.com/masatomix/items/5d54119cff0aa0cb46ab</url>
    <title>AWS CDK で Infrastructure as Code する: Fluent Bit 番外編。SpringBootのログ機構つづき。</title>
    <content type="text">今回は前回の「SpringBootのログ機構」の続きです。
前回の最後に、続きでこんなことをやりたいと書きました。

アプリチームが投げる例外について、フレームワークチームがExceptionHandlerを使って、適切なHTTPのResponse Statusに載せ替えて...</content>
    <author>
      <name>masatomix</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2082746</id>
    <published>2025-09-20T18:46:46+09:00</published>
    <updated>2025-09-20T18:46:46+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/gitcho/items/335620aa22c48f66cdab"/>
    <url>https://qiita.com/gitcho/items/335620aa22c48f66cdab</url>
    <title>JavaでAgentをA2A通信させてみる</title>
    <content type="text">はじめに
生成AI界隈が賑わっている昨今、AgentというAIが自律して依頼をこなす仕組みが実現できるようになり、今年4月にAgent同士が通信するA2AというプロトコルがGoogleから登場した。

現在(2025年9月)はLinux Foundationに寄贈され...</content>
    <author>
      <name>gitcho</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2082624</id>
    <published>2025-09-20T10:38:41+09:00</published>
    <updated>2025-09-20T10:38:41+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/555hamano/items/312abc58e2f0c7abd5cf"/>
    <url>https://qiita.com/555hamano/items/312abc58e2f0c7abd5cf</url>
    <title>全30回：静的と動的でどう違うのか、JavaとPythonで学ぶデザインパターン - Day 9 Adapterパターン：異なるインターフェースを橋渡しする</title>
    <content type="text">はじめに
皆さん、こんにちは！「JavaとPythonで比べるデザインパターン」シリーズの第9回目です。
今回は、異なるインターフェースを持つクラス同士を協調させるためのAdapter（アダプター）パターンについて解説します。

Adapterパターンとは？
Adapte...</content>
    <author>
      <name>555hamano</name>
    </author>
  </entry>
  <entry>
    <id>tag:qiita.com,2005:PublicArticle/2082622</id>
    <published>2025-09-20T10:32:50+09:00</published>
    <updated>2025-09-20T10:32:50+09:00</updated>
    <link rel="alternate" type="text/html" href="https://qiita.com/555hamano/items/7e77ad670faefbb36f6d"/>
    <url>https://qiita.com/555hamano/items/7e77ad670faefbb36f6d</url>
    <title>全30回：静的と動的でどう違うのか、JavaとPythonで学ぶデザインパターン - Day 8 構造パターン入門：クラスとオブジェクトを組み合わせる</title>
    <content type="text">Day 8 構造パターン入門：クラスとオブジェクトを組み合わせる
皆さん、こんにちは！「JavaとPythonで比べるデザインパターン」シリーズの第8回目です。
本日からは、デザインパターンの3つのカテゴリのうち、2つ目となる 「構造パターン（Structural Pat...</content>
    <author>
      <name>555hamano</name>
    </author>
  </entry>
</feed>
