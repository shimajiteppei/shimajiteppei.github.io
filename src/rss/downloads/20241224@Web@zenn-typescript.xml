<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 24 Dec 2024 10:23:03 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ts-morphを使ってテンプレートファイルを作成してみる]]></title><description><![CDATA[この記事は クラウドワークス グループ Advent Calendar 2024 シリーズ3の24日目の記事です。
株式会社ソニックムーブでバックエンドエンジニアをしています、福田です！
新卒で会社に入り３年目、最初はわからないことが多く混乱してましたが、最近はリーダー的な役割も任せてもらえるようになり楽しくエンジニアライフを送ってます（笑）
そんな自分の所属しているユニットでは主にAPIの作成業務が多いです。1日で1つのAPIを作る日もあるくらいの毎日です。
そしてこのAPIの作成業務ですが、標準化が結構進んでおり、基本的には同じようなファイルを作成するところからスタートします。毎回同...]]></description><link>https://zenn.dev/sonicmoov/articles/69258e963f501d</link><guid isPermaLink="true">https://zenn.dev/sonicmoov/articles/69258e963f501d</guid><pubDate>Tue, 24 Dec 2024 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pEBImKQy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ts-morph%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:SMV%25E7%25A6%258F%25E7%2594%25B0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY0YjYwNGE3MzguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25BD%25E3%2583%258B%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25A0%25E3%2583%25BC%25E3%2583%2596%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmZGJkMTU2ZjUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SMV福田</dc:creator></item><item><title><![CDATA[Honoのルーティングってどんなルーターがあるの？]]></title><description><![CDATA[この記事は Hono Advent Calendar 2024 の 24 日目の記事です。
https://qiita.com/advent-calendar/2024/hono
こんにちは、株式会社 Gemcook でバックエンドエンジニアをしているあさひです！Hono のルーティングについて意識したことがなかったので改めて調べて記事にしてみました！

 Hono とは？
Hono は、Cloudflare Workers、Deno、Bun など、様々な JavaScript ランタイムで動作する、Web 標準準拠の超高速で軽量な Web フレームワークです。シンプルな記述と使いやすさ...]]></description><link>https://zenn.dev/gemcook/articles/hono_reg-exp-router</link><guid isPermaLink="true">https://zenn.dev/gemcook/articles/hono_reg-exp-router</guid><pubDate>Tue, 24 Dec 2024 07:08:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g2SDugW---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25AE%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25AA%25E3%2583%25AB%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%258C%25E3%2581%2582%25E3%2582%258B%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%2582%25E3%2581%2595%25E3%2581%25B2%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYzJiNzVlZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Gemcook%2520Tech%2520Blog%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhMDQyOWUwODUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あさひ</dc:creator></item><item><title><![CDATA[Biomeを使ったLintとフォーマット / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の24日目です。昨日は『tsupでバンドルする』を紹介しました。

 ESLintというlintツール
ESLintという開発補助ツールがあります。JavaScript / TypeScriptでの開発においておなじみとなってきたこのツールは、ソースコードを静的に解析し、バグの可能性やスタイルの乱れを指摘してくれるLintツールです。
チーム全体のコーディング規約を統一でき、その違反を自動で指摘できるため、大人数での開発で生じがち...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9ec44q4tt8armmek11</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9ec44q4tt8armmek11</guid><pubDate>Tue, 24 Dec 2024 03:21:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hmSTHOab--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FLint%25E3%2581%25A8%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[type-challengesの醍醐味「算術演算系問題」の紹介]]></title><description><![CDATA[
 はじめに
この記事は、TSKaigi Advent Calendar 2024の24日目の記事です。
https://qiita.com/advent-calendar/2024/tskaigi
フロントエンドエンジニアのhigh-gです。
TSKaigi Kansai 2024に引き続き、TSKaigi 2025も運営メンバーとして参加しています。
最近は、業務開始前にTypeScriptの型パズル問題集として知られるtype-challengesに取り組むことを日課としています。
type-challengesの問題の中でも、個人的に最も面白いと感じているのが算術演算系問題です。...]]></description><link>https://zenn.dev/highgrenade/articles/daf6be4ea23022</link><guid isPermaLink="true">https://zenn.dev/highgrenade/articles/daf6be4ea23022</guid><pubDate>Tue, 24 Dec 2024 03:10:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B2252hkC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:type-challenges%25E3%2581%25AE%25E9%2586%258D%25E9%2586%2590%25E5%2591%25B3%25E3%2580%258C%25E7%25AE%2597%25E8%25A1%2593%25E6%25BC%2594%25E7%25AE%2597%25E7%25B3%25BB%25E5%2595%258F%25E9%25A1%258C%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:high-g%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmNTUyYWUxZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>high-g</dc:creator></item><item><title><![CDATA[サーバレスフレームワークとしてのSST v3を調査した]]></title><description><![CDATA[
 はじめに
この記事は any Product Team Advent Calendar2 24日目の記事です。
https://qiita.com/advent-calendar/2024/anyinc
こんにちは。anyの荒川です。Qastにおけるサーバレスフレームワークの検討の段階における選択肢のひとつであったSSTについて紹介したいと思います。

 背景
もともと弊社プロダクトであるQastにおいてはSST v2（クラウドはAWS）をすでに利用していました。
SST v2は開発者体験としては良い部分ももちろんあるのですが、

独自のフレームワークということで学習コストが高い
v...]]></description><link>https://zenn.dev/any_dev/articles/research-for-sst-v3</link><guid isPermaLink="true">https://zenn.dev/any_dev/articles/research-for-sst-v3</guid><pubDate>Tue, 24 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ncn9agiS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AC%25E3%2582%25B9%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AESST%2520v3%25E3%2582%2592%25E8%25AA%25BF%25E6%259F%25BB%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Shogo%2520Arakawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmZjBlNjg2MzIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:any%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzYzBkNGI1YjUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shogo Arakawa</dc:creator></item><item><title><![CDATA[僕が4ヶ月で学んだReactでの分割]]></title><description><![CDATA[
 はじめに
本記事は日本CTO協会24卒 Advent Calendar 2024の10日目の記事です遅れてごめんなさい！
自分は今年の4月に入社したどすこいというエンジニアです。4月から研修をしており、8月ごろからWebエンジニアとして事業部に所属して開発しています。Reactを触ったのはほとんど初めてでした。
今回は、それで学んだことが見えるのはリファクタリングかなぁとおもったので、やってみます！
注:今回はファイルの分割の部分をメインで紹介します。コードが動くところや細かい部分はちょっと後回しに描いちゃってますのでご容赦ください。

 対象のサンプルコード
import { us...]]></description><link>https://zenn.dev/ctk64/articles/2485912885a5e0</link><guid isPermaLink="true">https://zenn.dev/ctk64/articles/2485912885a5e0</guid><pubDate>Mon, 23 Dec 2024 16:24:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fbUmRVAG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2583%2595%25E3%2581%258C4%25E3%2583%25B6%25E6%259C%2588%25E3%2581%25A7%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A0React%25E3%2581%25A7%25E3%2581%25AE%25E5%2588%2586%25E5%2589%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:doskoi64%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3ZHVTRlNWFuaEJFUFZkd3FGbVJWUFBMSU96QWI5NlJzOXRCcFlYSmRoY1dpZmRCMDROQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>doskoi64</dc:creator></item><item><title><![CDATA[PrismaスキーマからMVCでいうモデルを自動生成するやつ作ったよ feat. frourio & prisma generator]]></title><description><![CDATA[こんにちは、もう２０２４年も終わってしまいそうですね（遠い目）。
さて、タイトルのようなものを作ったのですが、経緯が大事かと思うので、2024年を振り返りながら書いてみようかと思います。

 経緯というか2024年の振り返り
2024年序盤はtRPCが話題をかっさらい、honoがすべてを持っていったように見えますが、frourioばっかりやっていました。frourioについては下記をどうぞ。
https://zenn.dev/solufa/articles/next-frourio-starter
https://zenn.dev/solufa/articles/catapult-ts-...]]></description><link>https://zenn.dev/mikana0918/articles/bbc72296500079</link><guid isPermaLink="true">https://zenn.dev/mikana0918/articles/bbc72296500079</guid><pubDate>Mon, 23 Dec 2024 15:55:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0b5hhsrm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2581%258B%25E3%2582%2589MVC%25E3%2581%25A7%25E3%2581%2584%25E3%2581%2586%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2582%2584%25E3%2581%25A4%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2588%2520feat.%2520frourio%2520%2526%2520prisma...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mikana0918%2540InterfaceX%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1NjU4MzcwMDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mikana0918@InterfaceX</dc:creator></item><item><title><![CDATA[NestJS+SQSで非同期処理を実装してみる]]></title><description><![CDATA[
 はじめに
NestJSを使った実践的な実装、第2段としてNestJS+SQSを使用した、
非同期処理を実装してみました。

 非同期処理について
ChatGPTに聞いてみたら下記回答が返ってきました。

API を呼び出したときに「重たい処理（時間がかかる処理）」をその場で全部やろうとすると、ユーザーは処理が終わるまで待たされてしまい、アプリケーションも他の仕事ができなくなってしまいます。
そこで「重たい処理だけをキューに渡して、バックグラウンドで処理させる」方法を取ると、API 呼び出しは「作業をキューに依頼した」段階ですぐに返事を返せるため、ユーザーは待たずに先に進められます。こ...]]></description><link>https://zenn.dev/shota_web305/articles/16c0f66ec05a5a</link><guid isPermaLink="true">https://zenn.dev/shota_web305/articles/16c0f66ec05a5a</guid><pubDate>Mon, 23 Dec 2024 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l1gP69j5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NestJS%252BSQS%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kikiWeb305%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VmOWE5NzFkZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kikiWeb305</dc:creator></item><item><title><![CDATA[React Hook Form, Zod￤配列のフォームで重複があった場合にエラー表示する]]></title><description><![CDATA[
 はじめに

動的に入力フォームが増やせる
日付、時間、担当者、タイプなどの入力項目があり同一の日付、時間、担当者の入力をエラー表示にする

上記の入力フォームを作成したのでわかる範囲でまとめてみました🕺

 環境



ライブラリなど
バージョン




React
18.3.1


TypeScript
5.4.3


ReactHookForm
7.53.2


Zod
3.23.8




 まとめ

入力フォーム

ReactHookFormのuseFieldArrayを使用する
各入力フォームのコンポーネントはReactHookFormのControllerで作成する


...]]></description><link>https://zenn.dev/fuwakani/articles/68c112fe71da5d</link><guid isPermaLink="true">https://zenn.dev/fuwakani/articles/68c112fe71da5d</guid><pubDate>Mon, 23 Dec 2024 13:18:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vcBqdSAl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Hook%2520Form%252C%2520Zod%25EF%25BF%25A4%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E9%2587%258D%25E8%25A4%2587%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fuwakani%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczMmI4OGFiYTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fuwakani</dc:creator></item><item><title><![CDATA[Next.jsでAuth0を使ってみた]]></title><description><![CDATA[
 海外の動画を真似したみたが...
この動画を真似してコンソールの設定をするところまでは良かったが、設定が変わっている部分があるようだ？
https://www.youtube.com/watch?v=KTwnwlAluSE
https://www.npmjs.com/package/@auth0/nextjs-auth0
ドキュメントのソースコードが違う？
https://developer.auth0.com/resources/guides/web-app/nextjs/basic-authentication
作ったものを参考に練習してみてください。
こちらに完成品あります

...]]></description><link>https://zenn.dev/joo_hashi/articles/6997e67b5ce29a</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/6997e67b5ce29a</guid><pubDate>Mon, 23 Dec 2024 11:49:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6xn3FYIe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7Auth0%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[TypeScript型道場 2024！]]></title><description><![CDATA[みなさまこんにちは！エアークローゼットの大西です。この記事はエアークローゼットのアドベントカレンダー2024の23日目の記事となってます。
今回はクイズ形式で型について学べる記事を考えてみました！
初級、中級、上級をそれぞれ2問ずつ用意しています！
ただ、知識を問うだけでは面白くないので、ちょっと頭を使う内容にしてみました。（結果的にジェネリクス型の問題ばかりになりました笑）
レベルは主観でつけているので参考程度に見てください。
それではみなさま楽しみながら学んでいきましょう！

 初級

 問題1
次の関数getPropertyは、オブジェクトから指定されたキーの値を取得します。関数の...]]></description><link>https://zenn.dev/dhik/articles/dc006c9663f367</link><guid isPermaLink="true">https://zenn.dev/dhik/articles/dc006c9663f367</guid><pubDate>Mon, 23 Dec 2024 11:32:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3pO_zpCW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%259E%258B%25E9%2581%2593%25E5%25A0%25B4%25202024%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Itsuki%2520Onishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FDTlBFdS00SWxVTVhyZWx1X1M5MW1BaXNHV0tlRlVReWJvMVRVa08xWFEzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Itsuki Onishi</dc:creator></item><item><title><![CDATA[Honoでサービス公開RTA]]></title><description><![CDATA[!
この記事はNE Advent Calendar 202423日目の記事です


 はじめに
こんにちは。シュートです。
Honoの開発者体験が良いということを最近頻繁に耳にするので、これを期に簡単なサービスをどれだけサクッと公開できるかRTAをやってみようと思います。
あと使ってみたかったんです。
Honoがどんなものなのかはこちら。

At first, I just wanted to create a web application on Cloudflare Workers. But, there was no good framework that works on Clo...]]></description><link>https://zenn.dev/neinc_tech/articles/02b1a8d19a470b</link><guid isPermaLink="true">https://zenn.dev/neinc_tech/articles/02b1a8d19a470b</guid><pubDate>Mon, 23 Dec 2024 10:28:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ff1hi7iM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%25E3%2581%25A7%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E5%2585%25AC%25E9%2596%258BRTA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:shoooout%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiMzg1NzFjZWMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NE%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1ZmFjYzk0MGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shoooout</dc:creator></item><item><title><![CDATA[Commanderを使ってCLIツールを作ってみるメモ]]></title><description><![CDATA[
 Commanderを使ってCLIツールを作ってみるメモ
Commanderというライブラリを使用すると、簡単にCLIツールが作れる。今回は引数に入力したライブラリをインストールするCLIツールを実装してcommanderに慣れることを目標とする。
child_processモジュールを使用することでサブプロセスでコマンドを実行することができるので内部で使用する。

 プロジェクトの準備

 前提条件
TypeScriptプロジェクトがすでに作成済み

 実装


command("コマンド名") - コマンド名を登録する

description("説明") - コマンドの説明

a...]]></description><link>https://zenn.dev/mitate_gengaku/articles/commander-tutorial</link><guid isPermaLink="true">https://zenn.dev/mitate_gengaku/articles/commander-tutorial</guid><pubDate>Mon, 23 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zemu5Wop--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Commander%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6CLI%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25BE%25A1%25E6%25A5%25AF%25E7%258E%2584%25E5%25B6%25BD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0tQOVRYWHQ5Qm1BLVplcURoLWdxUHl4RVFjMmNsRkhSNk95XzVVSVVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>御楯玄嶽</dc:creator></item><item><title><![CDATA[[React] カスタムフックの独立性]]></title><description><![CDATA[
 概要
React のカスタムフックを複数回呼び出した際、それらが互いに独立していることを検証します。
検証内容としては、カスタムフック内部の state や useEffect 内の副作用などが干渉し合わないか、といった内容になります。
カスタムフックの独立性については公式に以下の記載があります。

カスタムフックは、state 自体ではなく、state を扱うロジックを共有できるようにするためのものです。フックの呼び出しは、同じフックの他の場所からの呼び出しとは完全に独立しています。

カスタムフックでロジックを再利用する
こちらについてさらに掘り下げ、カスタムフック呼び出し元が単...]]></description><link>https://zenn.dev/breakedge/articles/c6623477ecbd00</link><guid isPermaLink="true">https://zenn.dev/breakedge/articles/c6623477ecbd00</guid><pubDate>Mon, 23 Dec 2024 09:21:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vw6R7FPu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BReact%255D%2520%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E7%258B%25AC%25E7%25AB%258B%25E6%2580%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hzmd%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2596%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%2520%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkZjUyYWExZWIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hzmd</dc:creator></item><item><title><![CDATA[TypeScriptでVRChatのロール振りを自動化してみる]]></title><description><![CDATA[この記事はUniMagic Advent Calendar 2024の12日目の記事です(11日遅れ)
一応ゆにまじに関係ある話題です

 前提
VRChatのブラウザページで使用されているAPIはユーザーが使用して良いと言われており、外部ツールや自動化などに用いることができます(例えばVRCXなど)
前回自動化した認証を用いて、今回はロール振りを自動化します

 環境
bun v1.0

 ソースコード
https://zenn.dev/articles/06579913c81331
こちらの記事の認証が設定されている前提です
https://gist.github.com/o-tr/...]]></description><link>https://zenn.dev/ootr/articles/f491d412162ae7</link><guid isPermaLink="true">https://zenn.dev/ootr/articles/f491d412162ae7</guid><pubDate>Mon, 23 Dec 2024 07:29:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UmI-Ts7t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7VRChat%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E6%258C%25AF%25E3%2582%258A%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ootr%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzExZDc3OTk2ZDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ootr</dc:creator></item><item><title><![CDATA[TypeScriptの原因不明の型エラーの原因 コールバック編]]></title><description><![CDATA[TypeScriptでなんでこの型チェック通らないんだと思うことありますよね。
この記事ではよく見るエラーの一つであるコールバックでの型エラーについて、なぜその型エラーを通すとまずいのかを解説します。[1]

 エラー
以下のように紙書籍と電子書籍のデータを題材に考えます。
// 紙書籍はISBN (International Standard Book Number) をIDとして利用する
type PaperBook = {
  type: "paper";
  isbn: string;
  // ...その他いろんなフィールド
};

// 電子書籍はDOI (Digital O...]]></description><link>https://zenn.dev/aidemy/articles/typescript-mysterious-type-errors-callback</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/typescript-mysterious-type-errors-callback</guid><pubDate>Mon, 23 Dec 2024 06:34:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k6fD3w3N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%25E4%25B8%258D%25E6%2598%258E%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mosh%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzNjI3YTFkMmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mosh</dc:creator></item><item><title><![CDATA[Atomic Design の課題と解決策：LX DESIGN の大規模リファクタリング事例]]></title><description><![CDATA[
 はじめに
はじめまして。
LX DESIGNでフロントエンドエンジニアを担当している吉継と申します。
今回が初めての技術記事執筆になりますので、お手柔らかによろしくお願いします🙌
2024年初頭から半年間にわたり、LX DESIGNではフロントエンドの大規模リファクタリングを実施しました。私がちょうどジョインしたタイミングでもあり、その際にリファクタリングの方針や技術選定を担当させていただきました。
リファクタリングの全体像については、以下の記事をご覧ください。
(弊社のフロントエンドのエースですが、文章センスも圧倒的で羨ましい限りですw)
https://zenn.dev/lxde...]]></description><link>https://zenn.dev/lxdesign_blog/articles/18022bf4fd45bb</link><guid isPermaLink="true">https://zenn.dev/lxdesign_blog/articles/18022bf4fd45bb</guid><pubDate>Mon, 23 Dec 2024 05:28:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LL1A1YFw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Atomic%2520Design%2520%25E3%2581%25AE%25E8%25AA%25B2%25E9%25A1%258C%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%25EF%25BC%259ALX%2520DESIGN%2520%25E3%2581%25AE%25E5%25A4%25A7%25E8%25A6%258F%25E6%25A8%25A1%25E3%2583%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E4%25BA%258B%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kei%2520Yoshitsugu%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YxYzY4Y2UzMjAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:LX%2520DESIGN%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVhBUGRGT2FCUkRZRkxVc3RQODNNakZScXF2TW1PNmNXVDEwVHdDU0lTcDFDLXdBPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kei Yoshitsugu</dc:creator></item><item><title><![CDATA[tsupでバンドルする / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の23日目です。昨日は『tsx TypeScript Execute』を紹介しました。

 JavaScriptのモジュール史とバンドル文化
今回は少し昔話をします。
JavaScriptプログラミングにおいて、CommonJS (CJS)が登場するまでは「モジュール」という概念がほとんどありませんでした。これは15年以上前の話で、巨大なJSファイルにすべてのプログラムを書いたり、もし複数ファイルに分割しても最終的にはモジュール機...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9ebjsq8ywjm4jrtk30</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9ebjsq8ywjm4jrtk30</guid><pubDate>Mon, 23 Dec 2024 05:07:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f8Z5DCpv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tsup%25E3%2581%25A7%25E3%2583%2590%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[tsx TypeScript Execute / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の22日目です。昨日は『using宣言』を紹介しました。

 tsx とは
皆さんはtsxをご存知でしょうか。
そう聞くと、まず「.tsx」というファイル拡張子を想起することが多いと思います。これはReactにおけるJSXのTypeScript版であることを示す拡張子です。
しかし今回はそうではなく、「tsx TypeScript Execute」という全く別のツールのご紹介です。紛らわしくも同じ名称なので注意が必要です。

 N...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9eam33wp5q00s5j839</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9eam33wp5q00s5j839</guid><pubDate>Mon, 23 Dec 2024 05:07:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iso86P6a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tsx%2520TypeScript%2520Execute%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item><item><title><![CDATA[using宣言 / TypeScript一人カレンダー]]></title><description><![CDATA[こんにちは、クレスウェア株式会社の奥野賢太郎 (@okunokentaro) です。本記事はTypeScript 一人 Advent Calendar 2024の21日目です。昨日は『ECMAScript Private Fields』を紹介しました。

 ECMAScriptの進化とusing宣言
昨日の記事では、クラス実装時のモダンな記法としてECMAScript Private Fieldsを紹介しました。
ここ数年、エラーハンドリングをめぐる事情や、バックエンド・フロントエンド境界がより曖昧になっていることによるprototype情報の取り扱いの事情など、クラス設計の観点に変化が...]]></description><link>https://zenn.dev/okunokentaro/articles/01jf78zf9e8y4j7vd351r4w10c</link><guid isPermaLink="true">https://zenn.dev/okunokentaro/articles/01jf78zf9e8y4j7vd351r4w10c</guid><pubDate>Mon, 23 Dec 2024 05:07:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F3IMFLUK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:using%25E5%25AE%25A3%25E8%25A8%2580%2520%252F%2520TypeScript%25E4%25B8%2580%25E4%25BA%25BA%25E3%2582%25AB%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:okunokentaro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyY2RlNDNmOWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okunokentaro</dc:creator></item></channel></rss>