<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Rust」のフィード]]></title><description><![CDATA[Zennのトピック「Rust」のRSSフィードです]]></description><link>https://zenn.dev/topics/rust</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ba09661577.png</url><title>Zennの「Rust」のフィード</title><link>https://zenn.dev/topics/rust</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 19 Dec 2024 10:02:51 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/rust/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Rustのclapでcliのコマンドやオプションをenumで取得する]]></title><description><![CDATA[
 Rust Advent Calendar 2024 19 日目
この記事は Rust Advent Calendar 2024 の 19 日目として書いています。
今日見たら偶然 19 日が空いていたので 9 日目同様にせっかくなら入れるかと思って入れています。
https://qiita.com/advent-calendar/2024/rust
昨日は @sotanengel さんによる 「docs.rs 書くのめんどくさくない？」をできるだけ楽にした話 でした。
https://qiita.com/sotanengel/items/81a25106d039aec919a3

 ...]]></description><link>https://zenn.dev/ara_ta3/articles/rust-cli-with-clap-bind-enum</link><guid isPermaLink="true">https://zenn.dev/ara_ta3/articles/rust-cli-with-clap-bind-enum</guid><pubDate>Thu, 19 Dec 2024 07:00:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RNbwa3eJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25AEclap%25E3%2581%25A7cli%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2582%2584%25E3%2582%25AA%25E3%2583%2597%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592enum%25E3%2581%25A7%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ara_ta3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwMmNmMDMwYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ara_ta3</dc:creator></item><item><title><![CDATA[workers-rsでハローワールド + Github Actionで自動デプロイ]]></title><description><![CDATA[この記事は デジタルキューブ ＆ ヘプタゴン Advent Calendar 2024 の 12月23日分の記事です。
Rust練習したいなーと常々思っていたので、入口としてCloudflare Workers用のRustクレートworkers-rsに入門してみます。
そもそもCloudflare Workersって何？
Cloudflareのエッジロケーションでサーバレスにコードを実行してくれるサービスです。
CDNのエッジで処理するので通信による待ち時間が少なく、V8 isolateによってコールドスタートの影響も非常に少ないことが特徴です。厳密な説明ではありませんが、僕は制約がある...]]></description><link>https://zenn.dev/t4nih4ru/articles/403c6eec5ce72d</link><guid isPermaLink="true">https://zenn.dev/t4nih4ru/articles/403c6eec5ce72d</guid><pubDate>Thu, 19 Dec 2024 03:41:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Neq79BAc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:workers-rs%25E3%2581%25A7%25E3%2583%258F%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%2520%252B%2520Github%2520Action%25E3%2581%25A7%25E8%2587%25AA%25E5%258B%2595%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmMWU1YTExNGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TH</dc:creator></item><item><title><![CDATA[RustでsqlxでPostgreSQLのLISTENとNOTIFYをしてみる]]></title><description><![CDATA[
 目的
ユニークビジョン株式会社 Advent Calendar 2024のシリーズ2、12/12の記事です。
PostgreSQLにはLISTENとNOTIFYという非同期で通信する仕組みが存在します。
これをRustに組み込んでみます。

 説明

 pg_notify
PostgreSQLの関数であるpg_notifyは、チャンネル名とペイロードの2つの引数を取ります。
SELECT pg_notify('channel_name', 'payload');
チャンネル名をLISTENしている対象に通知が送られます。

 コード
コードは以下のようになります。
channel_m...]]></description><link>https://zenn.dev/aoyagikouhei/articles/0cb7b4870f8010</link><guid isPermaLink="true">https://zenn.dev/aoyagikouhei/articles/0cb7b4870f8010</guid><pubDate>Wed, 18 Dec 2024 22:52:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0FI1tAZn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7sqlx%25E3%2581%25A7PostgreSQL%25E3%2581%25AELISTEN%25E3%2581%25A8NOTIFY%25E3%2582%2592%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2592%25E6%259F%25B3%25E5%25BA%25B7%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDA3ZGRhNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>青柳康平</dc:creator></item><item><title><![CDATA[pg_bigmをRustで実装する（Part1）]]></title><description><![CDATA[この記事はPostgreSQL Advent Calendar 2024の19日目の記事です。
昨日は澤田さんの「PostgreSQL 17で新しく実装されたradix treeを使ってインメモリのキーバリューストア作ってみた」でした。拡張機能を実装してさらにPostgreSQLのバグを見つけているのがさすがだなと思いました。

 はじめに
2024年10月にギリシャで開催されたPGConf.EU 2024に参加したのですが、そのときに「Fearless Extension Development With Rust and PGRX」という発表がありました。これは、PostgreSQL...]]></description><link>https://zenn.dev/shinyakato/articles/c9744a06cfa540</link><guid isPermaLink="true">https://zenn.dev/shinyakato/articles/c9744a06cfa540</guid><pubDate>Wed, 18 Dec 2024 22:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9WAuoNBz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pg_bigm%25E3%2582%2592Rust%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588Part1%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shinya%2520Kato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNTI2MzU3OTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shinya Kato</dc:creator></item><item><title><![CDATA[Haskeller の異常な愛情：または、生粋の Haskeller は転職して Rust を一ヶ月半書いて何を思うようになったか]]></title><description><![CDATA[この記事は Jij Advent Calendar 2024、Haskell Advent Calendar 2024、およびRust Advent Calendar 2024シリーズ2 の18日目の記事です。
各カレンダーの前後の記事は以下の通りです：

Haskell Advent Calendar 2024

前の記事：
次の記事： gotoki_no_joe さんの「集めるDPについて」


Rust Advent Calendar 2024 シリーズ2

前の記事：yasuo-ozu さんの「本物のSpecializationをStable Rustで！」
次の記事：hyuma...]]></description><link>https://zenn.dev/jij_inc/articles/2024-12-18-pure-haskeller-writing-rust</link><guid isPermaLink="true">https://zenn.dev/jij_inc/articles/2024-12-18-pure-haskeller-writing-rust</guid><pubDate>Wed, 18 Dec 2024 08:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XCtgDzuq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Haskeller%2520%25E3%2581%25AE%25E7%2595%25B0%25E5%25B8%25B8%25E3%2581%25AA%25E6%2584%259B%25E6%2583%2585%25EF%25BC%259A%25E3%2581%25BE%25E3%2581%259F%25E3%2581%25AF%25E3%2580%2581%25E7%2594%259F%25E7%25B2%258B%25E3%2581%25AE%2520Haskeller%2520%25E3%2581%25AF%25E8%25BB%25A2%25E8%2581%25B7%25E3%2581%2597%25E3%2581%25A6%2520Rust%2520%25E3%2582%2592%25E4%25B8%2580%25E3%2583%25B6%25E6%259C%2588%25E5%258D%258A%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E4%25BD%2595%25E3%2582%2592%25E6%2580%259D...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:konn%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I0ZjhjYjkwMmYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Jij%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gyb0FBaFdSS2VaMDl0LTg4dDQyemhvd1F4Y0tlMDJfbWN6b1ZoOEE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>konn</dc:creator></item><item><title><![CDATA[RustでERDからモデルstructを作る]]></title><description><![CDATA[
 目的
ユニークビジョン株式会社 Advent Calendar 2024のシリーズ2、12/10の記事です。
Rustでテーブル変更に対して壊れにくいテストを書くで紹介しているようにbuilderパターンを使ってテーブルと同じ構造のstructを作ると単体テストで便利です。
ここではRustとPostgreSQLのストアード・プロシージャーの雛形を作るでも紹介したERDツールを使って、作成します。

 説明

 ディレクトリ構成
- erd
  - table
    - templates
      - table_rs.ejs
    - table.erd.json
- ap...]]></description><link>https://zenn.dev/aoyagikouhei/articles/ddb0a0285a6cec</link><guid isPermaLink="true">https://zenn.dev/aoyagikouhei/articles/ddb0a0285a6cec</guid><pubDate>Tue, 17 Dec 2024 22:52:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jd2iMTZu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7ERD%25E3%2581%258B%25E3%2582%2589%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25ABstruct%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2592%25E6%259F%25B3%25E5%25BA%25B7%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDA3ZGRhNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>青柳康平</dc:creator></item><item><title><![CDATA[俺のガチってるdotfiles紹介]]></title><description><![CDATA[
 はじめに
どうもです。3-shake の melanmeg です
今回は dotfiles 紹介です。
エンジニアにとっては、dotfiles は作業効率を上げるための 自分用チートシート のように感じています。もしくは これまで コツコツと積み上げてきた財産 ...ですかね。
普段から使い慣れた環境をどこでも再現できるようにしておくことで、複数の端末で素早く自分好みの環境を用意できます！
シェルやVSCodeのカスタマイズ、Gitの便利設定、そして新しいVMでの簡単なセットアップ方法を紹介します。dotfiles管理の魅力を共有し、皆さんの環境構築がもっと楽しくなればと思います🙇
...]]></description><link>https://zenn.dev/melanmeg/articles/dd0b9606352fb9</link><guid isPermaLink="true">https://zenn.dev/melanmeg/articles/dd0b9606352fb9</guid><pubDate>Tue, 17 Dec 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ffrSn5Ux--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BF%25BA%25E3%2581%25AE%25E3%2582%25AC%25E3%2583%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258Bdotfiles%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:melanmeg%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1OGE1Y2Q4MGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>melanmeg</dc:creator></item><item><title><![CDATA[Tauri(Rust)、Qwik、Bunを使って爆速なクロスプラットフォームアプリ（デスクトップ、スマホ、Web）を作る（環境構築編）]]></title><description><![CDATA[
 はじめに
今回はTauri、Qwik、Bunを使って爆速なクロスプラットフォームアプリ（デスクトップ、スマホ、Web）を作るための環境構築方法を紹介する。

 今回の技術スタック

 Rustとは
ブラウザのFirefoxを開発しているMozillaが開発したプログラミング言語。
所有権システムなど独特な方法でメモリ安全性を保証しつつ処理を高速化するための機能が備わっている。
バックエンドとしてLLVMを使っているため、さまざまなプラットフォームに対応でき、ビルド時に高度な最適化が可能である。

 TypeScriptとは
JavaScriptの構文を拡張し、より高度な記述ができるよ...]]></description><link>https://zenn.dev/varubogu/articles/tauri-qwik-bun</link><guid isPermaLink="true">https://zenn.dev/varubogu/articles/tauri-qwik-bun</guid><pubDate>Tue, 17 Dec 2024 19:31:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FyUjmQDp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tauri%2528Rust%2529%25E3%2580%2581Qwik%25E3%2580%2581Bun%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%2588%2586%25E9%2580%259F%25E3%2581%25AA%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25EF%25BC%2588%25E3%2583%2587%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2580%2581%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259B%25E3%2580%2581Web%25EF%25BC%2589...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25B4%25E3%2582%25A1%25E3%2583%25AB%25E3%2583%259C%25E3%2583%25BC%25E3%2582%25B0%2540toyosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqUWptMkNsYkdRV21tdzk1UElEVkRpUmRzUU1Ec3lfcEEtX0ZOMGc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヴァルボーグ@toyosuke</dc:creator></item><item><title><![CDATA[組み込みRust入門]]></title><description><![CDATA[
 はじめに
こちらは広島大学の技術系サークルの18日目のアドカレです。
https://adventar.org/calendars/10901
そして、今回の記事はHiCoder内で組み込みRust講習会を行ったときに話した内容をまとめています。
想定読者は、プログラミングをチョットデキて、Rustの所有権について他サイト等で学んできた人です。
この記事ではコードを一切書かず、コマンドを叩くだけなので、是非やってみてください。
私自身も勉強中なので、内容に誤りがあったらコメントで教えてくださいm(_ _)m8

 この記事で必要なもの

Raspberry Pi Pico
ブレッドボ...]]></description><link>https://zenn.dev/hallucogenia/articles/embedded-rust</link><guid isPermaLink="true">https://zenn.dev/hallucogenia/articles/embedded-rust</guid><pubDate>Tue, 17 Dec 2024 18:46:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qP_vgN1C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BFRust%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jijinbei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNFJTZmdxUWM5U054bmFGN1lZQTl4emZ2eHdYQ1dhaGFZNUZ1RmQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jijinbei</dc:creator></item><item><title><![CDATA[RustとBevyで雪の結晶のシミュレーションをする]]></title><description><![CDATA[
静けさに抱かれながら　また今日も待っている
ゆるやかに降る　水じゃなくてもっと寂しい粒 [1]

!
この記事は「株式会社ガラパゴス（有志）Advent Calendar 2024」18日目の記事です。


 イントロダクション
こんにちは。冬ですね。
サービス開発パートナー事業部　バックエンドエンジニアの@necocenです。
冬といえば雪、雪といえばきれいな結晶です。
今回は、雪の結晶（雪片）の成長シミュレーションモデルをRustで実装して、Rayonで並列化を行い、さらにゲームエンジンBevyを使って可視化し、Webブラウザで表示できるようにした話をします。特に仕事とは関係があり...]]></description><link>https://zenn.dev/galapagos/articles/snowflake-simulator-in-rust</link><guid isPermaLink="true">https://zenn.dev/galapagos/articles/snowflake-simulator-in-rust</guid><pubDate>Tue, 17 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9gPDbaLG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A8Bevy%25E3%2581%25A7%25E9%259B%25AA%25E3%2581%25AE%25E7%25B5%2590%25E6%2599%25B6%25E3%2581%25AE%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:necocen%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlMWFiMTkxYzQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2582%25AC%25E3%2583%25A9%25E3%2583%2591%25E3%2582%25B4%25E3%2582%25B9%25EF%25BC%2588%25E6%259C%2589%25E5%25BF%2597%25EF%25BC%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hQekd1XzZweFgyVDZFNXBtWlZBWjl6ODhxSE9LdDlFdnRMU3lwPXMyNTAtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>necocen</dc:creator></item><item><title><![CDATA[RustでDBアクセスをsqlxにしてみた]]></title><description><![CDATA[
 目的
ユニークビジョン株式会社 Advent Calendar 2024のシリーズ2、12/7の記事です。
DBはPostgreSQLを使っていて、それにアクセスするためにcrate deadpool-postgresを使っていました。
さらにこれだけではrawすぎたので、一覧や一件を返すためのwrapperを作って使ってました。
sqlxはこれらをまとめてやってくれたので、こちらに乗り換えました。

 説明

 sqlx
READMEの機能を翻訳してみます。

Native Rustなのでどこでもコンパイルできる
行をストリームで読み込める。非同期でデコードしてくれる(struct...]]></description><link>https://zenn.dev/aoyagikouhei/articles/2ab5674172e764</link><guid isPermaLink="true">https://zenn.dev/aoyagikouhei/articles/2ab5674172e764</guid><pubDate>Mon, 16 Dec 2024 23:05:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yUeMHOAW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7DB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2582%2592sqlx%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%2592%25E6%259F%25B3%25E5%25BA%25B7%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjZDA3ZGRhNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>青柳康平</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 2: Red-Nosed Reports]]></title><description><![CDATA[
 このページは
2024 年の Advent of Code の Day2 の記事です。 Day1 はこちら。
https://zenn.dev/yasuharu519/articles/bb6f740564e282
!
以下問題のネタバレが多数含まれています。問題を楽しみたい方は是非一度本家の問題を見てから読んでみてください。


 Day 2: Red-Nosed Reports
今回は以下のような数列が与えられたときに条件を満たすものかチェックを行い、条件を満たす数列がいくつあるかを求めるというもの。
7 6 4 2 1

 Part1
カウントする条件としては

数列が単調に増...]]></description><link>https://zenn.dev/yasuharu519/articles/7466cf0680b540</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/7466cf0680b540</guid><pubDate>Mon, 16 Dec 2024 15:39:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZNJdcBMa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%25202%253A%2520Red-Nosed%2520Reports%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[Rust: eguiを触ってみた]]></title><description><![CDATA[
 はじめに
つい最近触る機会があったのでRustでGUIが実装できるeguiの紹介をします。
https://github.com/emilk/egui

egui (pronounced "e-gooey") is a simple, fast, and highly portable immediate mode GUI library for Rust.


egui runs on the web, natively, and in your favorite game engine.


 eguiの目指すところ
egui公式のGoalsより

使いやすいGUIライブラリ
レ...]]></description><link>https://zenn.dev/tkk/articles/a0b420ab8d7b49</link><guid isPermaLink="true">https://zenn.dev/tkk/articles/a0b420ab8d7b49</guid><pubDate>Mon, 16 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3BiArj6f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%253A%2520egui%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg0ODIxNTNiNzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkk</dc:creator></item><item><title><![CDATA[Advent of Code 2024 Day 1: Historian Hysteria]]></title><description><![CDATA[
 Advent of Code とは
Advent of Code では、 12 月の 1 日から 25 日まで毎日新しい問題が公開されます。
2015 年から毎年開催されていて、今年でもう 10 回目となるようです。記念すべきイヤーですね。
問題は毎日 2 つ公開され、一つ目の問題は比較的簡単な問題、二つ目の問題は基本的に同じ入力を使うものの、条件が変わり難易度が上がったものとなっています。そのため、別のアプローチを考える必要があります。
問題の解答としては、与えられた入力に対して、指示に従って作成した出力を提出すればよいものとなっています。そのため、言語の縛りや実行時間の縛りなども...]]></description><link>https://zenn.dev/yasuharu519/articles/bb6f740564e282</link><guid isPermaLink="true">https://zenn.dev/yasuharu519/articles/bb6f740564e282</guid><pubDate>Mon, 16 Dec 2024 14:35:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--goL9u7C0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Advent%2520of%2520Code%25202024%2520Day%25201%253A%2520Historian%2520Hysteria%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sawady%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4ODhkNmU3MTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sawady</dc:creator></item><item><title><![CDATA[Wasmコンポーネントの活用：Spin v3.0によるWebアプリ開発]]></title><description><![CDATA[Rustで実装しているSpinアプリに、TypeScriptで実装したビジネスロジックを組み込みました。これはSpin v3.0から利用できるspin-depsプラグインを利用した結果です。この記事では、Wasmコンポーネントとして実装されたビジネスロジックを、同プラグインを利用してSpinアプリに組み込むための手順と、簡単な例について説明します。
TL;DR：


Spinはマイクロサービスを定義するためのフレームワークです

Spin v3.0よりWasmコンポーネントを組み込むためのプラグインspin depsが試験的に追加されました
このプラグインを使うことで、ビジネスロジックの...]]></description><link>https://zenn.dev/chikoski/articles/spin-wasm-component-integration</link><guid isPermaLink="true">https://zenn.dev/chikoski/articles/spin-wasm-component-integration</guid><pubDate>Mon, 16 Dec 2024 10:06:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9uXASOpJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Wasm%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%25B4%25BB%25E7%2594%25A8%25EF%25BC%259ASpin%2520v3.0%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:chikoski%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwYzk3YTk1NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>chikoski</dc:creator></item><item><title><![CDATA[Rustでcsvバイナリデータを読み込んでsqliteにデータを挿入する]]></title><description><![CDATA[Rust polarsでcsvデータを読み込んで
sqliteに格納するコードの備忘録です。
use polars::prelude::*;
use rusqlite::{params, Connection, Result};
use std::fs::File;
use std::io::Cursor;

fn main() -&gt; Result&lt;()&gt; {
    let conn = Connection::open("test.db")?;

    conn.execute(
        "CREATE TABLE IF NOT EXISTS csv_da...]]></description><link>https://zenn.dev/miseuser/articles/8467fe810bbb74</link><guid isPermaLink="true">https://zenn.dev/miseuser/articles/8467fe810bbb74</guid><pubDate>Sun, 15 Dec 2024 23:48:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KeVVfnuH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25E3%2581%25A7csv%25E3%2583%2590%25E3%2582%25A4%25E3%2583%258A%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2593%25E3%2581%25A7sqlite%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E6%258C%25BF%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:user%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDZXb1czOEUtNHpaS18yM1kwR2tGTnJBR3BNTEUzNjJPMGlPR0UyY19keG81WDhBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>user</dc:creator></item><item><title><![CDATA[rust基本文法]]></title><description><![CDATA[後輩がRustできてて焦った。時代はRustなのか
自分用の殴り書き
モジュール系は今回除外

 変数宣言
rustは強い型推論があるらしいからあんまり気にしないでもいいみたい
でも書いたほうがいいきがするよ
// コメントアウト
let x = 5;         //標準で不変
let mut y = 5;     //mutを付けると可変

let a: i32 = 10;   //整数型32bit
let b: u32 = 20;   //整数型32bit (unsigned)

const PI: f32 = 3.141592; //constは型指定必須

 分岐
let ...]]></description><link>https://zenn.dev/mitsuijao/articles/ce1916cfeec537</link><guid isPermaLink="true">https://zenn.dev/mitsuijao/articles/ce1916cfeec537</guid><pubDate>Sun, 15 Dec 2024 19:23:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QkFzVmUG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:rust%25E5%259F%25BA%25E6%259C%25AC%25E6%2596%2587%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mitsuiJao%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJiZjc0NmZlNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mitsuiJao</dc:creator></item><item><title><![CDATA[Rust×Tauriでアプリ開発するときにYewとstylistに触れてみた]]></title><description><![CDATA[この記事は Rust Advent Calender 2024 の 16 日目の記事です。
普段はタコスとちいかわとホラー映画を愛でている WebアプリやWindowsデスクトップアプリ開発、画像解析をしているエンジニアです！久々にZenn記事書きますm(__)m

 要約

Tauriを利用したデスクトップアプリのフロントエンド開発にYewフレームワークを選んだよ
スタイル管理には、コード内で安全にCSSを記述できるstylistクレートを活用するよ
コード可読性のために、style.rsを作成してスタイル管理を効率化したよ


 Tauriとは？
https://tauri.app/...]]></description><link>https://zenn.dev/shinue/articles/4fa72c61dd235b</link><guid isPermaLink="true">https://zenn.dev/shinue/articles/4fa72c61dd235b</guid><pubDate>Sun, 15 Dec 2024 15:22:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--eUqJ8hzG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%25C3%2597Tauri%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25ABYew%25E3%2581%25A8stylist%25E3%2581%25AB%25E8%25A7%25A6%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shin-ue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IwOWM3MGQwODcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shin-ue</dc:creator></item><item><title><![CDATA[奥深いstr::to_lowercaseの世界]]></title><description><![CDATA[この記事はとあるサークルのOB/OGが行っているN代アドベントカレンダー2024の16日目です。

 はじめに
突然ですが、以下の2つの関数、どちらの方が実行に時間がかかるでしょうか？
理由も含めて答えられますか？
コードブロックのすぐ下から解答・解説が始まるのでスクロールに気をつけて考えてみてください。
const LOREM1: &amp;str = r#"  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sit amet leo libero. Morbi tortor lorem, porta at ...]]></description><link>https://zenn.dev/taro137/articles/23b526df4cb7fa</link><guid isPermaLink="true">https://zenn.dev/taro137/articles/23b526df4cb7fa</guid><pubDate>Sun, 15 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i45WVY4A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A5%25A5%25E6%25B7%25B1%25E3%2581%2584str%253A%253Ato_lowercase%25E3%2581%25AE%25E4%25B8%2596%25E7%2595%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Taro%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBlOGE5ZGM1NjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Taro</dc:creator></item><item><title><![CDATA[【Rust】axum + shakuでDIコンテナを状態管理する際のCloneトレイト問題とArcによる解決]]></title><description><![CDATA[
 問題
axumでshakuのモジュールをStateとして使用する際、以下のようなエラーに遭遇することがある
the trait bound `AppModule: Clone` is not satisfied
the trait `Clone` is not implemented for `AppModule`

 原因
この問題は以下の2つの要因から発生する：

axumのRouterは状態（State）にCloneトレイトの実装を要求する
shakuのmodule!マクロで生成されたモジュールには直接#[derive(Clone)]を付けることができない


 解決方法
解決...]]></description><link>https://zenn.dev/omyu_t/articles/e57efaaea9685b</link><guid isPermaLink="true">https://zenn.dev/omyu_t/articles/e57efaaea9685b</guid><pubDate>Sun, 15 Dec 2024 13:37:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SBmwJrU9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Rust%25E3%2580%2591axum%2520%252B%2520shaku%25E3%2581%25A7DI%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AEClone%25E3%2583%2588%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%2588%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25A8Arc%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:heigen03%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1NjkxOWU5NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>heigen03</dc:creator></item></channel></rss>