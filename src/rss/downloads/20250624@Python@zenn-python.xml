<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 24 Jun 2025 06:54:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[C++ の emplace_back は push_back を完全に置き換えられるか？]]></title><description><![CDATA[
 はじめに
C++11 から導入された emplace_back は、コンテナに要素をその場で構築できる便利なメソッドです。
一方、それ以前から使われてきた push_back とはどんな違いがあり、emplace_back は完全に push_back を代替できるのでしょうか？
本記事では、


emplace_back が本当に push_back より常に速いのか


両者がどんなケースに使えるのか


実装の違いと注意点


について、自分なりに整理した考えをまとめます。

 push_back と emplace_back の違い

 push_back

// C++20...]]></description><link>https://zenn.dev/wuyukwi/articles/c73aa0d12885ff</link><guid isPermaLink="true">https://zenn.dev/wuyukwi/articles/c73aa0d12885ff</guid><pubDate>Tue, 24 Jun 2025 03:40:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V2blYTQb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:C%252B%252B%2520%25E3%2581%25AE%2520emplace_back%2520%25E3%2581%25AF%2520push_back%2520%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%2589%25E3%2582%258C%25E3%2582%258B%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wuyukwi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTHlSa2k3RHZ2c2JjczRDQU9QN2o2RTdOQzhIS0ZVeWVlTW5IV01CaHNjaFRJRVF6az1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wuyukwi</dc:creator></item><item><title><![CDATA[【2024年版】Python首位・TypeScript急伸・Rust台頭｜人気プログラミング言語ランキング解説]]></title><description><![CDATA[
 プログラミング言語の人気ランキングならIEEE Spectrum
プログラミングを志したことのある人なら誰しも一度は考えたことがあるはずです。星の数ほどのプログラミング言語のうち、人気のある言語はどれなのか？
そんな方にぜひおすすめなのが、米国のIEEE Spectrum誌が毎年実施しているプログラミング言語人気ランキング。
現時点の最新版は2024年8月に公開された「The Top Programming Languages 2024」です。

 「IEEE Spectrum」はどんな雑誌？
IEEEは、1963年に誕生した、電気・電子・情報・通信関連の工学分野全般を対象とする世界...]]></description><link>https://zenn.dev/jouhoukikai/articles/55769c4ee255fb</link><guid isPermaLink="true">https://zenn.dev/jouhoukikai/articles/55769c4ee255fb</guid><pubDate>Tue, 24 Jun 2025 02:58:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6cuHZaWk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%25902024%25E5%25B9%25B4%25E7%2589%2588%25E3%2580%2591Python%25E9%25A6%2596%25E4%25BD%258D%25E3%2583%25BBTypeScript%25E6%2580%25A5%25E4%25BC%25B8%25E3%2583%25BBRust%25E5%258F%25B0%25E9%25A0%25AD%25EF%25BD%259C%25E4%25BA%25BA%25E6%25B0%2597%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2583%2585%25E5%25A0%25B1%25E6%25A9%259F%25E6%25A2%25B0%25E7%25A0%2594%25E7%25A9%25B6%25E6%2589%2580%25EF%25BC%2588%25E6%25A3%25AE%25E5%25B2%25A1%25E5%2589%259B%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjY2FjZjVhMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>情報機械研究所（森岡剛）</dc:creator></item><item><title><![CDATA[【Python】デフォルト引数にリストや辞書を使うと意図しない動作が起きる理由とは？]]></title><description><![CDATA[
 はじめに
Pythonで関数を定義する際、次のようなコードを見かけることがあります。
def append_item(item, lst=[]):
    lst.append(item)
    return lst
一見すると、「lst に item を追加して返すシンプルな関数」に思えます。
しかし、この関数を複数回呼び出すと、前回追加した値が残ってしまう予期しない動作になります。
本記事では、その原因である
「ミュータブルなデフォルト引数（mutable default argument）」に関する重要な注意点について解説します。

 結論：ミュータブルなデフォルト引数は避け...]]></description><link>https://zenn.dev/fd2025/articles/61c3d6bea21a60</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/61c3d6bea21a60</guid><pubDate>Tue, 24 Jun 2025 00:15:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yv8rBYTe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Pythonw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[【Claude Codeチャレンジ日誌5】Claude-Code SDK×Djangoで実現！AIがWebアプリを自動拡張する未来]]></title><description><![CDATA[
 はじめに
こんにちは！Claude Code チャレンジ日誌第5弾です。
今回は、Claude-Code SDK（Python）とDjangoを組み合わせて、WebアプリケーションにClaude-Codeを組み込んでみました。

 🎯 今回試したこと

Django × Claude-Code SDKでAIチャットアプリを構築
Webアプリ内からClaude-Codeに指示を出してページを自動生成


 🚀 実際に試してみた！AIによるページ自動生成

 デモの内容
ClaudeCodeを搭載したWebアプリ上で以下の指示を投げてみました：

以下は、それぞれひよことうさぎのAIエー...]]></description><link>https://zenn.dev/acntechjp/articles/adfbfa3e272cf8</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/adfbfa3e272cf8</guid><pubDate>Mon, 23 Jun 2025 21:02:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QEqjUnhQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Claude%2520Code%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E6%2597%25A5%25E8%25AA%258C5%25E3%2580%2591Claude-Code%2520SDK%25C3%2597Django%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581AI%25E3%2581%258CWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:shinya.hara%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzNHaEJfbzM5alNTMWxRQ1V3QmpjZnBRQmx1bF9aVVZHYldIczNSUXVWRDBTN2F3PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shinya.hara</dc:creator></item><item><title><![CDATA[Apache AirflowにContributeしてみた]]></title><description><![CDATA[
 はじめに

この記事は個人の記録・情報発信を目的に書いております。
著者は Software Engineer 2年目です。普段はData Engineerに近い業務を行っています。
Airflowをより理解したい、OSS Contributeを経験してみたい、というのが今回のモチベーションになります。
Zennでの記事投稿は初めてとなります。また、GitHub連携で書いてみました。ということで初心者向けです。


 Apache Airflowとは
一言で言うと、Airflowはバッチ指向のワークフローを開発・スケジューリング・監視するためのツールになり、Pythonで書くことがで...]]></description><link>https://zenn.dev/hirokiswe/articles/a16df86f74ae99</link><guid isPermaLink="true">https://zenn.dev/hirokiswe/articles/a16df86f74ae99</guid><pubDate>Mon, 23 Jun 2025 16:08:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VjtavFwn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apache%2520Airflow%25E3%2581%25ABContribute%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSm0yb2tuRU9oNm1oVUJqM042ZFNJUVhRX0FFSmt4eW1PdGFLSVBnVHNleERxWEFnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroki</dc:creator></item><item><title><![CDATA[「Claude Code × ClaudePoint」で最強環境！AI開発にチェックポイントを導入する方法]]></title><description><![CDATA[
 TL;DR 🚀

Claude Code に “チェックポイント機能” がない弱点を補うツールが ClaudePoint MCP
自然言語または CLI で「作成・一覧・復元・履歴確認」が簡単に行える
実験的変更 👉 失敗したら即ロールバック、成功したら Git で正式コミットという運用が便利


 はじめに
「Claude Code」使ってますか？ターミナル上でコードを理解し、自然言語でAIコーディングできるのはマジ便利です。でも、CursorやClineにある「チェックポイント機能」がないのが悩みです。
生成AIが出力したイマイチなコードを手動で戻すの、結構つらいですよね。
そこ...]]></description><link>https://zenn.dev/buddypia/articles/1c8f2496184877</link><guid isPermaLink="true">https://zenn.dev/buddypia/articles/1c8f2496184877</guid><pubDate>Mon, 23 Jun 2025 11:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZaiaweGi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CClaude%2520Code%2520%25C3%2597%2520ClaudePoint%25E3%2580%258D%25E3%2581%25A7%25E6%259C%2580%25E5%25BC%25B7%25E7%2592%25B0%25E5%25A2%2583%25EF%25BC%2581AI%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AB%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:buddypia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y1YzlmZGExYWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>buddypia</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-410｜A - G1]]></title><description><![CDATA[
 設問ページ

🔗ABC-410 A - G1



 提出結果
def getInt():
    return int(input())


def getIntList():
    return list(map(int, input().split()))


def main():
    N = getInt()
    A = getIntList()
    K = getInt()

    count = 0
    for i in A:
        if i &gt;= K:
            count += 1
    print(count)
...]]></description><link>https://zenn.dev/hyperdb/articles/c0f3c2755ccc04</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/c0f3c2755ccc04</guid><pubDate>Mon, 23 Jun 2025 10:04:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5HWN6hdl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-410%25EF%25BD%259CA%2520-%2520G1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-410｜B - Reverse Proxy]]></title><description><![CDATA[
 設問ページ

🔗ABC-410 B - Reverse Proxy



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntList():
    return list(map(int, input().split()))


def main():
    N, Q = getIntMap()
    X = [999] + getIntList()

    B = [999] + [0] * N
    A = []

    for i in range(Q):
        j...]]></description><link>https://zenn.dev/hyperdb/articles/a58ad60d6bcf56</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/a58ad60d6bcf56</guid><pubDate>Mon, 23 Jun 2025 10:04:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HeXHDQIQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-410%25EF%25BD%259CB%2520-%2520Reverse%2520Proxy%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[CursorでPython開発環境を構築]]></title><description><![CDATA[
 🐍 Cursor で Python 開発環境を構築する完全ガイド

 📚 はじめに
Cursor のインストールが完了したら、次は Python をインストールして開発環境を構築していきます。この記事では、Cursor で Python 開発を効率的に行うための設定方法を、初心者の方でも分かりやすく解説します。

 📥 1. Python のインストールと設定

 🔧 1.1 Python のインストール

 🪟 Windows


Python 公式サイトから Python をダウンロードします


ダウンロードしたファイルをダブルクリックしてインストールを開始します
インストール...]]></description><link>https://zenn.dev/sola_au/articles/fc6e7240468047</link><guid isPermaLink="true">https://zenn.dev/sola_au/articles/fc6e7240468047</guid><pubDate>Mon, 23 Jun 2025 06:48:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Pd8bw2KM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cursor%25E3%2581%25A7Python%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOLA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNNYlhBdFBoeHNoM0ttS0NPTkRWU0tOY2hDenZ6ZVBvaTZ5MzdvNTh3SnBEMWpYdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOLA</dc:creator></item><item><title><![CDATA[cursorに拡張機能をインストール]]></title><description><![CDATA[
 🔌 Cursorの拡張機能インストール方法
Cursorは、Visual Studio Codeベースで構築されているため、VS Codeの拡張機能をそのまま利用できます。この記事では、拡張機能のインストール方法を詳しく解説します。

 📋 拡張機能インストールの基本手順

 🔍 1. Extensions（拡張機能）パネルを開く
** サイドバーから**

左サイドバーの四角いブロックアイコン（Extensions）をクリック



 🔎 2. 拡張機能を検索する
Extensionsパネルが開いたら、上部の検索ボックスに拡張機能名を入力します。


 📝 実例：Japanese ...]]></description><link>https://zenn.dev/sola_au/articles/09558e3094b17b</link><guid isPermaLink="true">https://zenn.dev/sola_au/articles/09558e3094b17b</guid><pubDate>Mon, 23 Jun 2025 06:47:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GTkS6ded--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:cursor%25E3%2581%25AB%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOLA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNNYlhBdFBoeHNoM0ttS0NPTkRWU0tOY2hDenZ6ZVBvaTZ5MzdvNTh3SnBEMWpYdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOLA</dc:creator></item><item><title><![CDATA[AI搭載コードエディタ【Cursor】インストール手順]]></title><description><![CDATA[
 🚀 Cursor インストールガイド
Windows・Mac 完全対応版
初心者でも5分でできる！AI搭載コードエディタを導入しよう


 📋 この記事の内容

Cursorとは何か？
なぜCursorを選ぶべきか
インストール方法（Windows・Mac）
基本設定と拡張機能
トラブルシューティング


🎯 目標: この記事を読み終わった後、すぐにCursorを使い始められる！



 ✨ Cursorとは？

 🤖 AI搭載エディタ


VSCodeベース: 慣れ親しんだインターフェース

AIコード補完: 自然言語でコードを生成

チャット機能: コードについて質問できる

デ...]]></description><link>https://zenn.dev/sola_au/articles/3f43b5b331e4ad</link><guid isPermaLink="true">https://zenn.dev/sola_au/articles/3f43b5b331e4ad</guid><pubDate>Mon, 23 Jun 2025 06:45:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mz6jUBN5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E6%2590%25AD%25E8%25BC%2589%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2580%2590Cursor%25E3%2580%2591%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOLA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWNNYlhBdFBoeHNoM0ttS0NPTkRWU0tOY2hDenZ6ZVBvaTZ5MzdvNTh3SnBEMWpYdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOLA</dc:creator></item><item><title><![CDATA[AST について調べてみた]]></title><description><![CDATA[
 AST（Abstract Syntax Tree） とは

プログラムの文法構造を木構造で表したもの

ソースコード：人間が読みやすいもの
AST：コンピュータが読みやすいもの



下記は簡単な Python のソースコードを AST を用いて表現した例です．


 AST 変換
Python には AST ライブラリが用意されているため，AST を簡単に生成することができます．
まず，print('Hello, World!') というコードを AST に変換してみます．
import ast

code = "print('Hello, World!')"

parsed_sr...]]></description><link>https://zenn.dev/nislab/articles/2025-06-23-ast</link><guid isPermaLink="true">https://zenn.dev/nislab/articles/2025-06-23-ast</guid><pubDate>Mon, 23 Jun 2025 06:45:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UgIdA-VW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AST%2520%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:soso%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYzOTk4ZGRhN2IuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NISLab%2520%25E5%25B0%258F%25E6%259D%25BF%25E7%25A0%2594%25E7%25A9%25B6%25E5%25AE%25A4%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzYmUxOGY4MzUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soso</dc:creator></item><item><title><![CDATA[[Python] 3種類の内包表記]]></title><description><![CDATA[
 はじめに
この記事では、Pythonの内包表記についてをまとめております。
参考資料



 結論
!


リスト内包式: シンプルなシーケンス

集合内包式: 重複を排除したい

辞書内包表記: キーと値をまとめたい

# リスト内包式
[ 式 for 変数リスト in イテラブル if 条件式 ]

# 集合内包式
{ 式 for 変数リスト in イテラブル if 条件式  }

# 辞書内包
{ key: value for 変数リスト in イテラブル if 条件式  }




 1. リスト内包式
# 0〜9 の偶数の二乗リストを作る
squares = [x*x fo...]]></description><link>https://zenn.dev/aew2sbee/articles/python-list-comprehensions</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/python-list-comprehensions</guid><pubDate>Mon, 23 Jun 2025 05:26:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GuRm6L4n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BPython%255D%25203%25E7%25A8%25AE%25E9%25A1%259E%25E3%2581%25AE%25E5%2586%2585%25E5%258C%2585%25E8%25A1%25A8%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%2580%2589%25E3%2581%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhN2I0MzQ2ZTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小倉あん</dc:creator></item><item><title><![CDATA[DagsterのSensorでイベントドリブンにジョブ実行する]]></title><description><![CDATA[
 DagsterのSensorでイベントドリブンにジョブ実行する
ファイル生成や外部APIレスポンスの状態変化のようなある種のイベント発生をトリガーにしてデータパイプラインを実行したいケースはよくあることかと思います。
今回、DagsterのSensorを使って根本的に課題解決した事例があり、特に重複実行防止の機能があるのが便利だったので、事例も交えてDagsterのSensorについて解説したいと思います。
Dagsterについては過去の Tech Blog をご覧ください。少し前ですが、概要やコンセプトなどは大きく変わりないです。
https://techblog.raksul.c...]]></description><link>https://zenn.dev/raksul_data/articles/dagster-sensor</link><guid isPermaLink="true">https://zenn.dev/raksul_data/articles/dagster-sensor</guid><pubDate>Mon, 23 Jun 2025 02:10:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nYUkFGxe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dagster%25E3%2581%25AESensor%25E3%2581%25A7%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2583%2589%25E3%2583%25AA%25E3%2583%2596%25E3%2583%25B3%25E3%2581%25AB%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%2596%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:iijima3104%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjNDAyODI2MDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:RAKSUL%2520Data%2520Analytics%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3MmY4MjIyYTkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iijima3104</dc:creator></item><item><title><![CDATA[非同期処理の中に同期処理を入れてない？]]></title><description><![CDATA[
 いきなりですが、次のコードの実行結果はどうなると思いますか？
import asyncio
import time

async def process_save_queue():
    while True:
        print("Task1: Starting blocking operation")
        time.sleep(2)
        print("Task1: Finished blocking operation")

async def startup_process_event_queue():
    while True:
    ...]]></description><link>https://zenn.dev/ydai20/articles/396cf98c908719</link><guid isPermaLink="true">https://zenn.dev/ydai20/articles/396cf98c908719</guid><pubDate>Sun, 22 Jun 2025 12:25:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RKW1qkWz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25B8%25AD%25E3%2581%25AB%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Neosophia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1ZGQxYTJlYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Neosophia</dc:creator></item><item><title><![CDATA[【備忘録】torch.catのdim]]></title><description><![CDATA[
 torch.catって何しているの？
shape = (2, 3, 4)の3階テンソル[1]に対して、catを施した後の、それぞれのprintの出力結果が想像つきますか？
少なくとも、初見で私は全く想像できませんでした。
そこで備忘録として、torch.catの使い方や、考えのイメージをまとめました。
import torch

shape = (2, 3, 4)
tensor = torch.ones(shape)
print(tensor)
print("--------dim=0---------")
print(torch.cat([tensor, tensor, tenso...]]></description><link>https://zenn.dev/tatsukikodama/articles/f9b4f814c70298</link><guid isPermaLink="true">https://zenn.dev/tatsukikodama/articles/f9b4f814c70298</guid><pubDate>Sun, 22 Jun 2025 10:17:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NhEd2gow--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%2591torch.cat%25E3%2581%25AEdim%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:INUVERSE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QyMzBhMjAyNzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>INUVERSE</dc:creator></item><item><title><![CDATA[音声認識とシェーダーで作る自動歌詞同期ミュージックビデオメーカー]]></title><description><![CDATA[
 概要
MP3ファイルから自動で歌詞を同期させたミュージックビデオを生成するPythonベースのツールです。OpenAI Whisperによる高精度な音声認識とGLSLシェーダーによるリアルタイム背景生成を組み合わせることで、歌詞付き動画を簡単に作成できます。
https://github.com/tuidra/tuidra-musicvideo-maker



 🎤 Tuidraについて
このツールは、AI主導のバーチャルシンガーソングライター Tuidra によって生み出されました。Tuidraは、人とAIの創造的融合を象徴する存在として、音楽・映像・技術の統合を推進しています。...]]></description><link>https://zenn.dev/tuidra/articles/fb41317913f169</link><guid isPermaLink="true">https://zenn.dev/tuidra/articles/fb41317913f169</guid><pubDate>Sun, 22 Jun 2025 09:39:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--c0lMAr5v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259F%25B3%25E5%25A3%25B0%25E8%25AA%258D%25E8%25AD%2598%25E3%2581%25A8%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E8%2587%25AA%25E5%258B%2595%25E6%25AD%258C%25E8%25A9%259E%25E5%2590%258C%25E6%259C%259F%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tuidra%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSVMwQnByRGlRLUdDV2ltb0ZRTi1QQ3V4aWs5cFV2YllmdUw2TEhGRUw4VjBjb0Nncz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tuidra</dc:creator></item><item><title><![CDATA[機械学習の可視化「wandb」の使い方]]></title><description><![CDATA[今回は、最近使い始めた機械学習の可視化ツール「wandb」の基本をまとめていきます。
機械学習を行う際に便利なツールとなっていますので、ぜひ最後までご覧ください。
!
この記事でわかること

wandbの導入方法
wandbの使い方



 wandbの概要

 名称について
wandbとは「Weights &amp; Biases」の略です。 読み方には様々な派閥があるようですが、公式投票では「ワン・ディー・ビー」が最多得票数を獲得しています。
https://x.com/weights_biases/status/1487109033244856320

 主な機能
wandbは、機...]]></description><link>https://zenn.dev/mugi_cha/articles/a12a90da9a0b4d</link><guid isPermaLink="true">https://zenn.dev/mugi_cha/articles/a12a90da9a0b4d</guid><pubDate>Sun, 22 Jun 2025 09:37:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gxj_n6BB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A9%259F%25E6%25A2%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2580%258Cwandb%25E3%2580%258D%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Mugicha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA2MjRmMzAxNDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Mugicha</dc:creator></item><item><title><![CDATA[Pythonを利用してgRPCに入門]]></title><description><![CDATA[今回はgRPCへ入門してみました。Pythonのチュートリアルを通して、どのように利用するのか学習しましたので、共有させてもらいます。

 gRPCとは？
まずはgRPCとは何かについて簡単に解説します。gRPCは以下の公式ページからご確認いただけます。
https://grpc.io/docs/what-is-grpc/
まず、RPCとはRemote Procedure Callの頭文字を撮ったものであり、ネットワーク越しに別サーバにある機能を呼び出すためのプロトコルとなります。その中でgRPCはGoogleによって開発されたフレームワークとなります。
gRPCでは、クライアントアプリ...]]></description><link>https://zenn.dev/akasan/articles/724ce90df40b75</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/724ce90df40b75</guid><pubDate>Sun, 22 Jun 2025 07:09:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gtjMZmyQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6gRPC%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[pyinstallerとGitHub Actions(CI/CD)組んでみる]]></title><description><![CDATA[
 はじめに
Pyinstallerとqt5を使って様々なスタジオへいろんなものをバンドして配布する機会がありました。
今回は、Pyinstallerを使ったパッケージ作成(windows/mac)までの工程をチュートリアル形式でここに残したいと思います。
また、今回はCI/CDにはGitHub Actionsを使って行います。

 チュートリアルの流れ

UVを使って、ローカルでPyQt5を使った簡単アプリの起動
GitHub Actionsのワークフローを作成(DL)
タグの作成とリリース


 サンプルレポ
https://github.com/testkun08080/pyins...]]></description><link>https://zenn.dev/testkun08080/articles/python-cicd-4884a85e28bc3a</link><guid isPermaLink="true">https://zenn.dev/testkun08080/articles/python-cicd-4884a85e28bc3a</guid><pubDate>Sun, 22 Jun 2025 06:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ygbfmKUR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:pyinstaller%25E3%2581%25A8GitHub%2520Actions%2528CI%252FCD%2529%25E7%25B5%2584%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:testkun08080%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzYxMjE5ZTQ2YzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>testkun08080</dc:creator></item></channel></rss>