<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 16 Apr 2025 10:17:14 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[仕事で使うための Cloudflare Worker 入門]]></title><description><![CDATA[(これは某所でやる Cloudflare の入門チュートリアルで、そこの肌感に合わせています。)
アカウント登録が終わっていることは前提とします。

 Hello World
https://developers.cloudflare.com/pages/get-started/c3/
$ npm create cloudflare@latest
いちばん簡単な TypeScript のワーカーのサンプルを作ります

Hello World
Worker only
TypeScript

npm run dev で起動。
この中身を解説します。

 仕組みを知る

 Wrangler
C...]]></description><link>https://zenn.dev/mizchi/articles/cf-worker-introduce-for-pro</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/cf-worker-introduce-for-pro</guid><pubDate>Wed, 16 Apr 2025 08:31:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UQwCStUA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%2595%25E4%25BA%258B%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Cloudflare%2520Worker%2520%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[テストを自動化する#2｜Playwright/Javascriptのサンプルコード]]></title><description><![CDATA[Playwrightでのテスト自動化に使えるJavascriptのコードです。

 今回取り上げている内容
!

新しいタブでページを開きたい
AまたはBと表示されている項目をクリック・テキストを入力したい
ダイアログをescキーで閉じたい




 新しいタブでページを開きたい
新しいタブでページを開く際に、以下のコードを使ってページやページ遷移を定義することができます。押下するボタンをAAA、新しく開かれたタブをpage1として記述しています。

spec.ts
// 新しいページが開く「popup」イベントを待機する Promise（非同期処理の予約） を作成
const page...]]></description><link>https://zenn.dev/okitegami/articles/9e5c9ea4a0ba3d</link><guid isPermaLink="true">https://zenn.dev/okitegami/articles/9e5c9ea4a0ba3d</guid><pubDate>Wed, 16 Apr 2025 08:26:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3JJbUdkw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25232%25EF%25BD%259CPlaywright%252FJavascript%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kikuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk1NTRhZDI5ZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kikuchi</dc:creator></item><item><title><![CDATA[MCPサーバーでまだ出来ないこと]]></title><description><![CDATA[最近の生成AIのトピックはもっぱらMCP（サーバー）がトレンドで、Zennでもすごい量の記事がかかれていたりいいねが大量にあったりという状況です。
自分もローカルでテストしてみて、AIが会社のバックログのデータを参照して回答を生成してくれることに感動しています。
一方でMCPはまだまだ開発途中の技術であり、まだ出来ないことも分かってきたので、自分の企業でMCPサーバーを導入しようと考えた際に生じる2つのハードルについて書いていこうと思います。

 MCPサーバーをローカル外に建てられない
イントロダクションの以下の図で示されている通り、現在MCPサーバーはローカルに立ち上げて利用するよう...]]></description><link>https://zenn.dev/aidiot/articles/78b2b4e5169ff9</link><guid isPermaLink="true">https://zenn.dev/aidiot/articles/78b2b4e5169ff9</guid><pubDate>Wed, 16 Apr 2025 04:48:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0gGQkjIL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A7%25E3%2581%25BE%25E3%2581%25A0%25E5%2587%25BA%25E6%259D%25A5%25E3%2581%25AA%25E3%2581%2584%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:nemunyan%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AA%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxY2ZmZTc5YzEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nemunyan</dc:creator></item><item><title><![CDATA[AIエージェントの設計と実装における知見を整理する]]></title><description><![CDATA[こんにちは。AI ShiftでWebフロントエンドエンジニアをしている安井です。今回はAIエージェントを実現するにあたって試行錯誤した設計と実装に関する筆者の考えを整理したいと思います。
!
本記事は私自身が実装する中で得られた知見を整理することが目的であり、AIエージェントの実装におけるベストプラクティスを提案するものではありません。


 はじめに
AIエージェントは現在大きな注目を集めており、新しいサービスも次々と登場しています。しかしながら、実際にAIエージェントを開発するための具体的な方法論については情報が十分に共有されておらず、依然として不明瞭な部分が多いように感じています。...]]></description><link>https://zenn.dev/aishift/articles/6aa1540ea27fcd</link><guid isPermaLink="true">https://zenn.dev/aishift/articles/6aa1540ea27fcd</guid><pubDate>Wed, 16 Apr 2025 00:01:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8bLple-Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25A8%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E7%259F%25A5%25E8%25A6%258B%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ytaisei%25EF%25BC%2588%25E3%2581%259F%25E3%2581%2584%25E3%2581%259B%25E3%2583%25BC%25EF%25BC%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhhNDQwNmNlMGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:AI%2520Shift%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNTZlNDI3NWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ytaisei（たいせー）</dc:creator></item><item><title><![CDATA[TanStack RouterのLoader機能]]></title><description><![CDATA[
 loader 機能とは
TanStack Router のloader機能は、ルートコンポーネントがレンダリングされる前にデータを事前に取得する仕組みです。API を叩いてデータ更新した後に、画面遷移してもすぐに変更が反映されていなかったりしますよね。それを防いでくれます。

 loader 機能の設定方法

 1. ルート定義に loader を追加
import { createFileRoute } from "@tanstack/react-router";

export const Route = createFileRoute("/_layout/home/")({
 ...]]></description><link>https://zenn.dev/ka_projects/articles/eadf64cc536244</link><guid isPermaLink="true">https://zenn.dev/ka_projects/articles/eadf64cc536244</guid><pubDate>Wed, 16 Apr 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lbrV04VJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:TanStack%2520Router%25E3%2581%25AELoader%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:luck%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3MzNhNDk3OTguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:KA%2520projects%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWZWX29pQVNoRWZKTVpVV1NuOVh2c1MyOU11b1pEU3dodEVfQkFNR0FWbjBPUkwxYjc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>luck</dc:creator></item><item><title><![CDATA[【TypeScript】もう型定義で消耗しない！便利なUtility Types]]></title><description><![CDATA[
 はじめに
TypeScriptには、そんな悩みを解決してくれる便利なUtility Types（ユーティリティ型）という機能が組み込まれています。これらは、まるで「型の便利ツール箱」のようなもので、既存の型を元にして新しい型を簡単に、そして安全に作り出すことができます。
改めてドキュメントを確認しつつ、AIも用いて忘備録としてまとめました。

 1. Partial&lt;Type&gt; - プロパティを全部「あってもなくても良い」にする魔法 ✨

 🤔 これは何？
Partial&lt;Type&gt;は、指定したType（例えばインターフェースや型エイリアス）の すべてのプロパ...]]></description><link>https://zenn.dev/noah11/articles/cce251d7ebceb0</link><guid isPermaLink="true">https://zenn.dev/noah11/articles/cce251d7ebceb0</guid><pubDate>Tue, 15 Apr 2025 23:23:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ucDQ0fbf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590TypeScript%25E3%2580%2591%25E3%2582%2582%25E3%2581%2586%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%25A7%25E6%25B6%2588%25E8%2580%2597%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25AAUtility%2520Types%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yusuken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjNjI1ODJjNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yusuken</dc:creator></item><item><title><![CDATA[もったいないので作ったSNSアプリ公開しました]]></title><description><![CDATA[
 作ったSNSアプリ


 ドメイン
サブドメインで分離してて計5個くらいあります。
アプリページ：https://chienowa.social
認証ページ：https://auth.chienowa.social
ヘルプページ：https://support.chienowa.social
ヘルプページは結構適当です。
他に管理者用のページだったりがあります

 自分について
22歳です。3浪してて去年大学入りましたが、お金がなかったり将来に不安を感じて12月に休学してしまって、それ以来これを作っていました

 経歴
エンジニア？の経歴としては2023年の2月にパソコン買ったことか...]]></description><link>https://zenn.dev/shi_san/articles/434c01c045159f</link><guid isPermaLink="true">https://zenn.dev/shi_san/articles/434c01c045159f</guid><pubDate>Tue, 15 Apr 2025 16:38:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8W1qqaeM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259FSNS%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSTc5ejJLOE9HMy1iblZweS03UTk2R3p4cHpiRUVkUnpJbi03djFnYXZoZDBmV0ZBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あ</dc:creator></item><item><title><![CDATA[GainNodeを使って音量の変化を自然に感じるようにする]]></title><description><![CDATA[
 はじめに
こんにちは！PortalKeyの渋谷です。
今回はWebAudioAPIのGainNodeについてのお話です。
GainNodeというのは音量調整を行えるノードです。
マイクから取得した音、音楽や動画の音、通話の音等の音量調整を行う際に使います。
UI操作によって音量調整できるようにしたところ
「なんか直感的じゃないんだけど…」
と非難轟々だった件について
なぜ起きたのか、どう直したのか、順を追ってお話ししていきます。

 なぜ起きたのか
「音量をn倍にすると聞こえる音の大きさがn倍にならない。」
まずこの謎について知る必要があります。
我々の耳は「n倍になった音を聞いた時...]]></description><link>https://zenn.dev/portalkeyinc/articles/a6cccf66b9312f</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/a6cccf66b9312f</guid><pubDate>Tue, 15 Apr 2025 15:56:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7PDfXfMj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GainNode%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%259F%25B3%25E9%2587%258F%25E3%2581%25AE%25E5%25A4%2589%25E5%258C%2596%25E3%2582%2592%25E8%2587%25AA%25E7%2584%25B6%25E3%2581%25AB%25E6%2584%259F%25E3%2581%2598%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:da-shibuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR2Y0dCWGJ5bmIwc3k4TnQyZll4aU8xQ2xBN1ZwNzAtR2RJeTR4WW1uc2JEMEhRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>da-shibuya</dc:creator></item><item><title><![CDATA[Drizzle ORM: `relations` と `foreignKey` の違いと使い分け]]></title><description><![CDATA[Drizzle ORMでテーブル間の関連を定義する際、relationsとforeignKeyという2つの方法があります。これらは似ているように見えますが、実際には役割を果たす層（レベル）が異なります。
この記事では、私自身が学んだ内容をもとに、Drizzle ORMでのリレーション定義についてまとめています。特に初めて使う方や、私のように使い分けで迷った方の参考になればと思います。
公式ドキュメントを参考にしながら自分なりに解釈し、特に理解が難しかった部分について補足を加えてみました。
もし内容に誤りがあれば、ぜひご指摘いただければ幸いです。

 1. relations と fore...]]></description><link>https://zenn.dev/kosuke_ito/articles/8690a50b4beb50</link><guid isPermaLink="true">https://zenn.dev/kosuke_ito/articles/8690a50b4beb50</guid><pubDate>Tue, 15 Apr 2025 15:22:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6XSKw4Gi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drizzle%2520ORM%253A%2520%2560relations%2560%2520%25E3%2581%25A8%2520%2560foreignKey%2560%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kosuke%2520ito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q1ZDE2NTk1ZjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kosuke ito</dc:creator></item><item><title><![CDATA[GitHubリポジトリを活用したファイル検索システム]]></title><description><![CDATA[
 初めに
GitHubを活用して開発している方は多いと思います。CursorやGitHub Copilotのようなコード開発AIとGitHubのレポジトリ情報を組み合わせてコード開発を行うことができれば、より便利に開発を行うことができるのではないでしょうか。
本記事では、GitHubのレポジトリ情報を活用してファイル検索システムを作成してみたいと思います。
本記事ではコード検索に、セマンティックベクトルではなく、llms.txtを用います。
一般的には、サイトの構造情報をAIクローラーに渡して、効率よくサイトの情報を活用するためにllms.txtは使用されます。
しかし、今回は以下の２...]]></description><link>https://zenn.dev/mseabass/articles/47dbff7ec1b4ed</link><guid isPermaLink="true">https://zenn.dev/mseabass/articles/47dbff7ec1b4ed</guid><pubDate>Tue, 15 Apr 2025 14:56:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bY7Gop3p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M%2520Sea%2520Bass%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjN2NkZGNkYmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>M Sea Bass</dc:creator></item><item><title><![CDATA[Route HandlersをZod OpenAPI Honoで置き換える]]></title><description><![CDATA[
 はじめに
この記事では、Next.js の Route Handlers の代わりに Zod OpenAPI Hono を使って API ルートを置き換える方法について紹介します。Hono は軽量かつ柔軟で、Zodとの相性も良く、型安全な API 設計と仕様書自動生成が非常にスムーズに行えます。
特に今回試したのは以下のようなポイントです：

@hono/zod-openapi を使って OpenAPI 仕様書を自動生成する
RouteHandlers ではなく Hono を API のエントリポイントとして使う

Next.js の API 開発をより型安全かつ拡張しやすいものにし...]]></description><link>https://zenn.dev/miyamotto/articles/24cadcfcb06f4a</link><guid isPermaLink="true">https://zenn.dev/miyamotto/articles/24cadcfcb06f4a</guid><pubDate>Tue, 15 Apr 2025 14:43:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hXCWZX8V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Route%2520Handlers%25E3%2582%2592Zod%2520OpenAPI%2520Hono%25E3%2581%25A7%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miyamotto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmZNSnNFbjBaem82alRQNmZjWjRVQVFBdVU2a0ZqbUxtYlp6d3VpeURPQXI5RWpnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miyamotto</dc:creator></item><item><title><![CDATA[#83　⭕️❌ゲームで学ぶ探索]]></title><description><![CDATA[
 ⭕️❌ゲームで学ぶ探索
今回の記事は⭕️❌ゲームの完全読みについて解析してみようと思います
この記事は前回の続きです

 探索とは
今回はMinMax法という探索手法を用います
MinMax法とは自分の手番では自分にとって最善な手を、相手にとっては相手にとって最善な手を指すことを前提とした探索アルゴリズムです

 実装例
⭕️❌ゲームに必要なクラスとして前回の記事で作成したFieldクラスに、勝敗の判定を行うjudge()を追加作成します

 勝敗判定
勝敗判定はjudgeBoardsにあるように縦・横・斜めの8通りのパターンのビットボードを事前に計算(※)しておき、パターンに一致し...]]></description><link>https://zenn.dev/nxted_sapporo/articles/6d83e889ae4a25</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/6d83e889ae4a25</guid><pubDate>Tue, 15 Apr 2025 12:13:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Taf81uTT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%252383%25E3%2580%2580%2520%2520%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E6%258E%25A2%25E7%25B4%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[今話題のVibe Codingを取り入れてゲームメモのWebアプリを作りました]]></title><description><![CDATA[
 はじめに
最近、ClineをはじめとするVibe Codingが話題になっています。実は私はまだ触れていなかったので、どんなものか体験するためにWebアプリを作ってみることにしました。

 作成したもの
https://ggmemo.pokekoyomi.com
ゲームの戦績をメモするためのアプリです。ちょっとカッコつけて英語で作りました。
このアプリは2つのモードを提供しています。1つ目はアクセスするだけですぐに使える「Basic Mode」で、データはすべてブラウザのローカルストレージに保存されるため気軽に利用できます。2つ目はサインインして使用する「Session Mode」で...]]></description><link>https://zenn.dev/hoshito/articles/fa378d2de365ca</link><guid isPermaLink="true">https://zenn.dev/hoshito/articles/fa378d2de365ca</guid><pubDate>Tue, 15 Apr 2025 11:11:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Liv4bR7N--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BB%258A%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEVibe%2520Coding%25E3%2582%2592%25E5%258F%2596%25E3%2582%258A%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25A1%25E3%2583%25A2%25E3%2581%25AEWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hoshito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U0ZWM5ZTA4MGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hoshito</dc:creator></item><item><title><![CDATA[Marp+生成AIで書いた資料でJaSST nano vol.47で登壇してみた #jasstnano]]></title><description><![CDATA[こんにちは。ダイの大冒険ガチ勢のbun913と申します。
本日JaSST nano vol.47というイベントにて、私がSDET（Software Development Engineer in Test）という職種になってから感じていることについて赤裸々に発表しました。
この内容について軽く触るとともに、せっかくなので今回からチャレンジしてみたMarpと生成AIを活用したスライド作成の体験が良かったので、それについて記事にしてみました。

 発表の内容


SDET という日本では珍しい職種で働いています

名前からすると「Software Development Engineer が...]]></description><link>https://zenn.dev/moneyforward/articles/defaceaddf6756</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/defaceaddf6756</guid><pubDate>Tue, 15 Apr 2025 10:52:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mUpzJcee--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Marp%252B%25E7%2594%259F%25E6%2588%2590AI%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2584%25E3%2581%259F%25E8%25B3%2587%25E6%2596%2599%25E3%2581%25A7JaSST%2520nano%2520vol.47%25E3%2581%25A7%25E7%2599%25BB%25E5%25A3%2587%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2520%2523jasstnano%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bun913%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNGVhMDEyMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bun913</dc:creator></item><item><title><![CDATA[ユーティリティ型【個人学習まとめ】]]></title><description><![CDATA[
 ユーティリティ型
型を変換したり、新しい型を生成するために使用する組み込み式のジェネリック型が TypeScript には存在し、ユーティリティ型と呼びます。
いくつもの種類がありますが、今回は私が気になった 2 つの学習をしてみましょう！

 Partial&lt;T&gt;型
Partial&lt;T&gt;型は、指定された型のプロパティをオプショナルプロパティ(任意のプロパティ)に変換します。
例として、Userインターフェイスを用意します。
age、addressはオプショナルプロパティで、省略しても OK なプロパティです。
interface User {
  name:...]]></description><link>https://zenn.dev/o0rororo0o/articles/d6d9adb3b4a5ad</link><guid isPermaLink="true">https://zenn.dev/o0rororo0o/articles/d6d9adb3b4a5ad</guid><pubDate>Tue, 15 Apr 2025 08:46:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LlmkpihM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A6%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E5%259E%258B%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258D%25E3%2582%258D%25E3%2582%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2ZTZjOWM4YmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ろろろ</dc:creator></item><item><title><![CDATA[[EOL]LambdaでNode.js v18ランタイムのサポートが2025/09/01に終了します]]></title><description><![CDATA[
 Node.js v18のサポート終了
Node.js v18は2025/04/30にサポートを終了します
https://endoflife.date/nodejs

 Lambdaランタイムのサポート終了
Node.js v18がサポートを終了したため、Lambdaランタイムで使用できるNode.js 18のサポートも終了されます
終了日は2025/09/01で、それ以降は以下の通りLambdaの作成および更新に制限がかかるようになります

2025/09/01~

Node.js 18 ランタイムにセキュリティパッチやその他の更新を適用しなくなり、Node.js 18 を使用する...]]></description><link>https://zenn.dev/malliavin/articles/bfe98be53cf876</link><guid isPermaLink="true">https://zenn.dev/malliavin/articles/bfe98be53cf876</guid><pubDate>Tue, 15 Apr 2025 05:38:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7lzxR6q4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BEOL%255DLambda%25E3%2581%25A7Node.js%2520v18%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258C2025%252F09%252F01%25E3%2581%25AB%25E7%25B5%2582%25E4%25BA%2586%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2581%25E3%2582%25A7%25E3%2583%25BC%25E3%2582%25AA%25E3%2583%25BC%25E3%2582%2592%25E3%2581%2593%25E3%2582%2588%25E3%2581%25AA%25E3%2581%258F%25E6%2584%259B%25E3%2581%2599%25E8%2580%2585%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3NzY3MzFlNDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>チェーオーをこよなく愛す者</dc:creator></item><item><title><![CDATA[[RT/TS] 音声録音に関して]]></title><description><![CDATA[
 はじめに
近年、AIの進化とともに、その応用範囲は急速に拡大しています。少し前まで、AIは主にユーザーの入力に基づいてテキストを生成するために使われていましたが、現在では、画像生成、動画生成、そして音声認識といった分野でも目覚ましい成果を上げています。この記事では、特に「音声認識」に焦点を当て、フロントエンド開発者の視点から詳しく掘り下げていきたいと思います。
実用的な観点から見ると、音声認識の課題は、主に次の2つのサブタスクに分解できます。

入力デバイスからの音声録音
データの整形とネットワーク送信

驚くべきことに、これらの各ステップには、議論すべき点がたくさんあります。この連...]]></description><link>https://zenn.dev/sun_asterisk/articles/f51c697c5fe457</link><guid isPermaLink="true">https://zenn.dev/sun_asterisk/articles/f51c697c5fe457</guid><pubDate>Tue, 15 Apr 2025 01:28:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ib-n8S7J--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BRT%252FTS%255D%2520%25E9%259F%25B3%25E5%25A3%25B0%25E9%258C%25B2%25E9%259F%25B3%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2597%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2593%25E3%2583%25B3%2520%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A7%25E3%2583%25A0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YTU0ZjZiM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sun%252A%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNTVlY2IwMTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>デルビン アルチョム</dc:creator></item><item><title><![CDATA[171. Excel Sheet Column Number]]></title><description><![CDATA[Excel シートに表示される列タイトルを表す文字列 columnTitle が与えられたとき、その対応する列番号を返してください。
例：
A -&gt; 1  
B -&gt; 2  
C -&gt; 3  
...  
Z -&gt; 26  
AA -&gt; 27  
AB -&gt; 28  
...

例 1:
入力: columnTitle = "A"
出力: 1
例 2:
入力: columnTitle = "AB"
出力: 28
例 3:
入力: columnTitle = "ZY"
出力: 701

]]></description><link>https://zenn.dev/idapan/articles/dff9fbe296c0d5</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/dff9fbe296c0d5</guid><pubDate>Mon, 14 Apr 2025 21:39:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1hMu7C5A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:171.%2520Excel%2520Sheet%2520Column%2520Number%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[ハンズオン！Next.js+Hono+RPC+Supabase+Drizzle+pnpm+Turborepoで作るモノレポ構成のアプリ開発]]></title><description><![CDATA[
 はじめに
プログラミングスクールRUNTEQでWebエンジニア兼講師をしているいっぺい（@ippei_111）と申します。
今回は、TypeScriptを使用して、Next.js+Hono+RPC+Supabase+Drizzle+pnpm+Turborepoのモノレポ構成のアプリを作成する方法をハンズオン形式で紹介していきます。
本記事で作成するアプリは、フロントエンドはNext.jsのApp Router、バックエンドはHonoフレームワークを使用し、Cloudflare Workersにデプロイします。データベースはSupabaseのPostgreSQLを利用し、ORM/クエリ...]]></description><link>https://zenn.dev/ippe/articles/7782e701f8df26</link><guid isPermaLink="true">https://zenn.dev/ippe/articles/7782e701f8df26</guid><pubDate>Mon, 14 Apr 2025 15:16:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KMKKfoKQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25EF%25BC%2581Next.js%252BHono%252BRPC%252BSupabase%252BDrizzle%252Bpnpm%252BTurborepo%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ippei%2520Shimizu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0ODUyMDJjY2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ippei Shimizu</dc:creator></item><item><title><![CDATA[ベストプラクティスをまとめてくれてる tsconfig/bases]]></title><description><![CDATA[tsconfig でよくあるやつや、ベストプラクティス的なのをまとめてくれているプロジェクト。

tsconfig/bases

公式ドキュメントでも紹介されているので信頼感がある。

TypeScript: Documentation - What is a tsconfig.json


 使えるもの
strictest は strict 以外の設定でも型チェックをカッチリしておきたい場合に便利。
tsc の新バージョンでカッチリするルールがリリースされても追随するのがラクになる。

strictest.json at tsconfig/bases

next とか、フレームワークに...]]></description><link>https://zenn.dev/sakamoto_akira_/articles/26af9405640f43</link><guid isPermaLink="true">https://zenn.dev/sakamoto_akira_/articles/26af9405640f43</guid><pubDate>Mon, 14 Apr 2025 14:43:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--i2iIfFTI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%25A6%25E3%2582%258B%2520tsconfig%252Fbases%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2581%258B%25E3%2582%2582%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjODBjNjY2MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さかもと</dc:creator></item></channel></rss>