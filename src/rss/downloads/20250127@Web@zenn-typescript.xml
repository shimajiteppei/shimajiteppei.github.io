<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 27 Jan 2025 10:40:58 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[画像処理100本ノックに挑戦｜最近傍補間（025/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の25本目です。

 前回
https://zenn.dev/nyagato_00/articles/957f04f14fab61

 実装

 お題

最近傍補間により画像を1.5倍に拡大せよ。
最近傍補間(Nearest Neighbor)は画像の拡大時に最近傍にある画素をそのまま使う手法である。 シンプルで処理速度が速いが、画質の劣化は著しい。
次式で補間される。 I' ... 拡大後の画像、 I ... 拡大前の画像、a ... 拡大率、[ ] ... 四捨五入
https://gi...]]></description><link>https://zenn.dev/nyagato_00/articles/8bb967fe63fd6e</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/8bb967fe63fd6e</guid><pubDate>Mon, 27 Jan 2025 07:29:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sM-8V1Vz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E6%259C%2580%25E8%25BF%2591%25E5%2582%258D%25E8%25A3%259C%25E9%2596%2593%25EF%25BC%2588025%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[Globe-ingの技術スタック]]></title><description><![CDATA[
 はじめに
みなさん、はじめまして。Globe-ingのCTOを務める上田です。
この度、弊社テックブログを立ち上げることになりました。第一弾の記事では、私たちが開発中のプロダクト「オクタゴン」と「AIコンサルタント」の紹介と、それらを支える技術的な選択についてお話しします。


 開発中のプロダクトについて
現在、Globe-ingでは2つのプロダクトラインを構想・開発しています。

 1. 「オクタゴン」
コンサルタントが長年培ってきたノウハウを自動化・SaaS化し、幅広い企業に素早く提供することを目指したプロダクト群です。例えば、以下のプロダクトを開発しています。


セールスス...]]></description><link>https://zenn.dev/globeing/articles/glb-tech-stack</link><guid isPermaLink="true">https://zenn.dev/globeing/articles/glb-tech-stack</guid><pubDate>Mon, 27 Jan 2025 06:14:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PahVhFEJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Globe-ing%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kueda%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxZWQ3MTE4MTkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Globe-ing%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMyOWJhYzk3ZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kueda</dc:creator></item><item><title><![CDATA[GolangでUnion型を実現！型の柔軟性を最大限に活かす3つの方法]]></title><description><![CDATA[
 はじめに
Golang（以下Go）は、シンプルで高速なプログラミングを実現するために設計された言語です。しかし、Goには他の言語で一般的なUnion型のサポートがありません。そのため、複合型を扱いたい場合、Goの特徴を活かした方法で工夫する必要があります。
この記事では、Union型的なことをGoで実現するための方法を詳しく解説します。初学者の方でも理解しやすいように、コード例や実用的なシナリオを交えながら説明します。


 Union型とは？
Union型は、1つの変数が複数の型のうちどれか1つを持つことを許容する型です。例えば、TypeScriptやPythonでは以下のように書...]]></description><link>https://zenn.dev/daiten/articles/0276f69f817461</link><guid isPermaLink="true">https://zenn.dev/daiten/articles/0276f69f817461</guid><pubDate>Mon, 27 Jan 2025 05:38:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HvR7vyHj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Golang%25E3%2581%25A7Union%25E5%259E%258B%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25EF%25BC%2581%25E5%259E%258B%25E3%2581%25AE%25E6%259F%2594%25E8%25BB%259F%25E6%2580%25A7%25E3%2582%2592%25E6%259C%2580%25E5%25A4%25A7%25E9%2599%2590%25E3%2581%25AB%25E6%25B4%25BB%25E3%2581%258B%25E3%2581%25993%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daitenn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3MzllZjg1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daitenn</dc:creator></item><item><title><![CDATA[【RT/TS】多言語対応について]]></title><description><![CDATA[
 新シリーズ始動
React Tech/Typescript Scraps (略してRT/TS) の記念すべき第一回へようこそ！今回は、最近react-i18nextと一緒に使っている便利なパターンをご紹介します。ローカライズ以外にも役立つテクニックなので、どうぞ最後までお見逃しなく！
!
PWA講座の進捗はどうですか？
皆さんに楽しんでもらえるように、インタラクティブなサンプルをたくさん用意しているのですが、その分、予想以上に時間がかかってしまっています。でもご安心ください！最後の章は必ず完成させますので、もうしばらくお待ちください。


 このシリーズはどんな人向け？
このシリーズ...]]></description><link>https://zenn.dev/sun_asterisk/articles/fa77f9ff7e1b58</link><guid isPermaLink="true">https://zenn.dev/sun_asterisk/articles/fa77f9ff7e1b58</guid><pubDate>Mon, 27 Jan 2025 02:40:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ejLAiUWu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590RT%252FTS%25E3%2580%2591%25E5%25A4%259A%25E8%25A8%2580%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%2587%25E3%2583%25AB%25E3%2583%2593%25E3%2583%25B3%2520%25E3%2582%25A2%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A7%25E3%2583%25A0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1YTU0ZjZiM2MuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Sun%252A%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRkNTVlY2IwMTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>デルビン アルチョム</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜ガンマ補正（024/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の24本目です。

 前回
https://zenn.dev/nyagato_00/articles/60493cb7873f11

 実装

 お題

imori_gamma.jpgに対してガンマ補正(c=1, g=2.2)を実行せよ。
ガンマ補正とは、カメラなどの媒体の経由によって画素値が非線形的に変換された場合の補正である。 ディスプレイなどで画像をそのまま表示すると画面が暗くなってしまうため、RGBの値を予め大きくすることで、ディスプレイの特性を排除した画像表示を行うことがガンマ補正...]]></description><link>https://zenn.dev/nyagato_00/articles/957f04f14fab61</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/957f04f14fab61</guid><pubDate>Sun, 26 Jan 2025 10:08:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bvmidj5m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E3%2582%25AC%25E3%2583%25B3%25E3%2583%259E%25E8%25A3%259C%25E6%25AD%25A3%25EF%25BC%2588024%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[TypeScript入門書の執筆にあたってフロントエンド章にVueを採用した理由]]></title><description><![CDATA[こんにちは、西山と申します。2019年に新卒入社した企業でTypeScriptを書き始めてから、もうすぐ7年目になります。
去年の夏、筆者が現在所属している株式会社Helpfeelのスポンサー活動をきっかけに執筆のお声がけをいただき、『TECHNICAL MASTER はじめてのTypeScript エンジニア入門編』という本を書きました。来月上旬に発売されます。
本書は秀和システムによる「TECHNICAL MASTER」シリーズのひとつで、これから開発者を目指す人を読者のメインターゲットにしています。
この記事ではそのパート3、Node.jsとフロントエンドフレームワークを使ってWe...]]></description><link>https://zenn.dev/xxishan/articles/dd21b43d0d5bbb</link><guid isPermaLink="true">https://zenn.dev/xxishan/articles/dd21b43d0d5bbb</guid><pubDate>Sun, 26 Jan 2025 09:32:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4ZWIhq0y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E5%2585%25A5%25E9%2596%2580%25E6%259B%25B8%25E3%2581%25AE%25E5%259F%25B7%25E7%25AD%2586%25E3%2581%25AB%25E3%2581%2582%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%25AB%25A0%25E3%2581%25ABVue%25E3%2582%2592%25E6%258E%25A1%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nishiyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyNDczODZkMDYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nishiyama</dc:creator></item><item><title><![CDATA[驚愕の改善率！たった3ステップのReactパフォーマンスチューニング]]></title><description><![CDATA[こんにちは！寝落ちエンジニアの長男です。
皆さんは、こんな経験はありませんか？

Reactアプリの動作が遅くてユーザーからクレームが...
原因は分かっているけど、改善の仕方が分からない...
パフォーマンスチューニングに手をつけたいけど、時間がない...

実は私も同じ悩みを抱えていました。300万MAUを抱えるサービスで、ユーザーからの「遅い」というフィードバックに頭を抱える日々。でも、たった3つの改善で画面の初期表示を42%高速化し、ユーザーの離脱率を18%改善することができました。
今回は、私が実際のプロジェクトで成功した、誰でも実践できるReactパフォーマンスチューニングの...]]></description><link>https://zenn.dev/nap_engineer/articles/9e26019a661e50</link><guid isPermaLink="true">https://zenn.dev/nap_engineer/articles/9e26019a661e50</guid><pubDate>Sun, 26 Jan 2025 07:06:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ypZ8dBnE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A9%259A%25E6%2584%2595%25E3%2581%25AE%25E6%2594%25B9%25E5%2596%2584%25E7%258E%2587%25EF%25BC%2581%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F3%25E3%2582%25B9%25E3%2583%2586%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AEReact%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AF%259D%25E8%2590%25BD%25E3%2581%25A1%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E9%2595%25B7%25E7%2594%25B7%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxYmVkOWI2MDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>寝落ちエンジニアの長男</dc:creator></item><item><title><![CDATA[k6とTypeScriptで始める負荷テスト]]></title><description><![CDATA[負荷テスト、やってます？
明らかなボトルネックが見えていて、かつ、シンプルなワークロードに落とし込めるなら、自作のシェルスクリプトやシンプルなCLIアプリ[1]で十分な場合もありますが、ログインして情報を取ってきてそれに基づいてデータを作る...みたいな、ある程度複雑なユーザーシナリオを組もうとすると、何らかツールやフレームワークが必要になります。
YAML（Taurus[2]など）やXML（Apache JMeter[3]など）でも良いのですが、より強力な表現力を得ようとすると、慣れたプログラミング言語で記述したくなります。
本投稿では、JavaScript/TypeScriptで負荷...]]></description><link>https://zenn.dev/ohke/articles/k6-typescript-2025</link><guid isPermaLink="true">https://zenn.dev/ohke/articles/k6-typescript-2025</guid><pubDate>Sat, 25 Jan 2025 21:38:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d0VzFgf5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:k6%25E3%2581%25A8TypeScript%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E8%25B2%25A0%25E8%258D%25B7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ohke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlmMzI1YWRjYjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ohke</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜ヒストグラム平坦化（023/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の23本目です。

 前回
https://zenn.dev/nyagato_00/articles/2be700edd634d7

 実装

 お題

ヒストグラム平坦化を実装せよ。
ヒストグラム平坦化とはヒストグラムを平坦に変更する操作であり、上記の平均値や標準偏差などを必要とせず、ヒストグラム値を均衡にする操作である。
これは次式で定義される。 ただし、S ... 画素値の総数、Zmax ... 画素値の最大値、h(z) ... 濃度zの度数

https://github.com/m...]]></description><link>https://zenn.dev/nyagato_00/articles/60493cb7873f11</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/60493cb7873f11</guid><pubDate>Sat, 25 Jan 2025 10:50:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MkKzVKFe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E5%25B9%25B3%25E5%259D%25A6%25E5%258C%2596%25EF%25BC%2588023%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[How to embed Amazon Connect's standard CCP in Next.js]]></title><description><![CDATA[日本語verはこちら

 Introduction.
In this case, I would like to embed Amazon Connect's standard CCP into a Next.js application to create an application that allows you to visually see which queue an incoming call came through.
Next.js is a framework that is gaining momentum right now and I would love to...]]></description><link>https://zenn.dev/daikim/articles/c4b8335acdcb39</link><guid isPermaLink="true">https://zenn.dev/daikim/articles/c4b8335acdcb39</guid><pubDate>Sat, 25 Jan 2025 05:09:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ncaOpU_a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:How%2520to%2520embed%2520Amazon%2520Connect%2527s%2520standard%2520CCP%2520in%2520Next.js%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daiki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiNzhhZWJjNDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daiki</dc:creator></item><item><title><![CDATA[if文の式で配列を使う方法]]></title><description><![CDATA[
 結論 Array.isArray()で型を絞る
type formState = { bool: false | [true, string] | null };
if (Array.isArray(bool) &amp;&amp; bool[0] === true) {}
型を絞ることで配列を扱えるようになる
]]></description><link>https://zenn.dev/wakki/articles/2b31128121739e</link><guid isPermaLink="true">https://zenn.dev/wakki/articles/2b31128121739e</guid><pubDate>Fri, 24 Jan 2025 18:25:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NzAmxmB_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:if%25E6%2596%2587%25E3%2581%25AE%25E5%25BC%258F%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkOTg4YTEyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワッキー</dc:creator></item><item><title><![CDATA[Playwright導入で躓いた点とその解決策]]></title><description><![CDATA[
 はじめに
先日、自分が担当しているプロジェクトにPlaywrightを導入しました。
とても便利で使い勝手が良いと感じましたが、導入の際に躓いた点もいくつかありました。
そこで備忘録も兼ねて皆さんに共有したいと思います！💫

 前提

Playwrightを導入したプロジェクトは至ってシンプルなフォーム
CIでテストを実行する


 ①実行時間が長すぎる！
シンプルなプロジェクトですが、テストケースは300件以上にもなりました。
これをそのままGitHub Actionsで実行すると、処理に膨大な時間がかかりました。。
（約40分間動きづけていたため、堪らずキャンセルしました笑）

...]]></description><link>https://zenn.dev/kiman/articles/f7cfd3e463b506</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/f7cfd3e463b506</guid><pubDate>Fri, 24 Jan 2025 17:15:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FJzITx2X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Playwright%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%25A7%25E8%25BA%2593%25E3%2581%2584%25E3%2581%259F%25E7%2582%25B9%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[画像処理100本ノックに挑戦｜ヒストグラム操作（022/100）]]></title><description><![CDATA[
 これはなに？
画像処理100本ノックを、TypeScriptとlibvipsで挑戦してみる記事の22本目です。

 前回
https://zenn.dev/nyagato_00/articles/37c98e95fee7ed

 実装

 お題

ヒストグラムの平均値をm0=128、標準偏差をs0=52になるように操作せよ。
これはヒストグラムのダイナミックレンジを変更するのではなく、ヒストグラムを平坦に変更する操作である。
平均値m、標準偏差s、のヒストグラムを平均値m0, 標準偏差s0に変更するには、次式によって変換する。

https://github.com/minido/G...]]></description><link>https://zenn.dev/nyagato_00/articles/2be700edd634d7</link><guid isPermaLink="true">https://zenn.dev/nyagato_00/articles/2be700edd634d7</guid><pubDate>Fri, 24 Jan 2025 12:10:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UuGlOe1r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586100%25E6%259C%25AC%25E3%2583%258E%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AB%25E6%258C%2591%25E6%2588%25A6%25EF%25BD%259C%25E3%2583%2592%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E6%2593%258D%25E4%25BD%259C%25EF%25BC%2588022%252F100%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nyagato_00%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MTVKUVk3SjNOUG1kcGlMeWdfWUt3blZzaTRpWDRoYjU1c21UTTk3c1E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nyagato_00</dc:creator></item><item><title><![CDATA[TypeScript 開発 入門 〜環境構築からアプリ作成まで〜]]></title><description><![CDATA[TypeScriptの概要やメリットを紹介しつつ、JavaScript資産との高い互換性や静的型付けによる保守性の向上などを解説する内容です。続いて、Node.jsの導入やVSCode設定など開発環境の準備から、基本文法・型システム・インターフェース・クラス・ジェネリクスといったTypeScriptの特徴的機能を一通り学び、実際にTodoアプリを作りながら開発の流れを体験します。さらに、周辺ツールの利用方法やエラー対処、React/Vue/Node.jsとの連携例など実務で役立つ知識にも触れ、最後に設定ファイルや便利な型ユーティリティ集を付録としてまとめた、TypeScript入門から実践までを網羅する構成になっています。]]></description><link>https://zenn.dev/ippei523/books/6b5c153743be13</link><guid isPermaLink="true">https://zenn.dev/ippei523/books/6b5c153743be13</guid><pubDate>Fri, 24 Jan 2025 08:52:42 GMT</pubDate><dc:creator>暇人エンジニア</dc:creator></item><item><title><![CDATA[Canvasでズーム＆描画！インタラクティブなホワイトボードを構築 (1)]]></title><description><![CDATA[
 はじめに
こんにちは！PortalKeyの渋谷です。
今回はプロジェクトでホワイトボードが必要になったため、見様見真似で作った結果結構苦しんだ過程と共に、実装方法を紹介していきます。
（Canvasをズームした時にガビガビになってる人の助けにもなるかもしれません。）
今回は第一弾！
必要最低限の操作と、マーカーで書いて遊べるようにします。
完成イメージはこちらです。


 開発環境


TypeScript v5.5.4

react v18.3.1

tailwindcss v3.4.10

※ HTML5の&lt;canvas&gt;が使えれば、同じ環境でなくても問題ありません！...]]></description><link>https://zenn.dev/portalkeyinc/articles/dd38ad6ccd83d3</link><guid isPermaLink="true">https://zenn.dev/portalkeyinc/articles/dd38ad6ccd83d3</guid><pubDate>Fri, 24 Jan 2025 05:17:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3YZzU_mE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Canvas%25E3%2581%25A7%25E3%2582%25BA%25E3%2583%25BC%25E3%2583%25A0%25EF%25BC%2586%25E6%258F%258F%25E7%2594%25BB%25EF%25BC%2581%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AA%25E3%2583%259B%25E3%2583%25AF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%2520%25281%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:da-shibuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM2Y2JkM2UxMzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:PortalKey%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzR2Y0dCWGJ5bmIwc3k4TnQyZll4aU8xQ2xBN1ZwNzAtR2RJeTR4WW1uc2JEMEhRPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>da-shibuya</dc:creator></item><item><title><![CDATA[【フレームワーク不要！】モーダルを作って学ぶ、TypeScriptの具体的な使い方]]></title><description><![CDATA[Web サイト制作がメインのコーダー/エンジニアの皆さん、TypeScript を使っていますか？
TypeScript 導入の参考記事がアプリ開発向けのものばかりで、サイト制作の現場にはどうやって導入するんだ、？となる方に、記事を書いてみました。

 この記事を書こうと思った理由

入門のチュートリアルや、型について学んでみたけど、実際にどう使うの？という方に向けての知見共有のため
TypeScript は React,Vue 等と合わせて使う記事や検索結果が多く、サイト制作向けのものが少なかったため
Web サイト制作のコーダー/エンジニアが、TypeScript に入門するため

...]]></description><link>https://zenn.dev/taku1116/articles/e73f72d961db11</link><guid isPermaLink="true">https://zenn.dev/taku1116/articles/e73f72d961db11</guid><pubDate>Fri, 24 Jan 2025 02:16:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TzCiq_OY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E4%25B8%258D%25E8%25A6%2581%25EF%25BC%2581%25E3%2580%2591%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%25AD%25A6%25E3%2581%25B6%25E3%2580%2581TypeScript%25E3%2581%25AE%25E5%2585%25B7%25E4%25BD%2593%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taku%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSnlhZ3d2T2FJRExLV2pYWVVkLXNpUDVzM1c0TXRHQ1pzbUVJZWpKTDVsMHMxYk9CUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taku</dc:creator></item><item><title><![CDATA[MUI@6 でカスタムパレットを型安全に定義する]]></title><description><![CDATA[自身が定義したプロパティをコンポーネント側でも型定義する際、バージョン5と6で定義方法が変わったので備忘録として残します。
今回は独自で定義した gray というプロパティをコンポーネントでも候補として出せるようにする方法です。

 MUI@5 でやっていた型定義
検索するとよく出てくるやり方。
declare module '@mui/material/styles' に定義するのは Palette と PaletteOptions を extends する方法で定義します。
const CustomPalettes = {
  /** グレースケール */
  gray: {
   ...]]></description><link>https://zenn.dev/seventhseven07/articles/e937e14a80ad2c</link><guid isPermaLink="true">https://zenn.dev/seventhseven07/articles/e937e14a80ad2c</guid><pubDate>Fri, 24 Jan 2025 00:15:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VJaa0i0y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MUI%25406%2520%25E3%2581%25A7%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2591%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Shumpei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YyY2ZhOWM5YTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Shumpei</dc:creator></item><item><title><![CDATA[Biome の導入 〜 設定まで]]></title><description><![CDATA[最近巷で話題の biome を ESLint と  Prettier の代わりに導入してみようと思います。
導入 〜 設定までの備忘録として記事にしようと思います。
今回はReact や Next のプロジェクトが既に立ち上がってる状態を前提としています。
この記事では npm で導入していきます。

 Biome とは
もともと Rome という、lint や format、build、test といった開発ツールを１つに集約することを目指したプロジェクトがありました。
この Rome の主要メンバーによってフォークされて Biome が生まれたらしいです。
Biome は JavaS...]]></description><link>https://zenn.dev/cami_crane/articles/e43121c9f82b6c</link><guid isPermaLink="true">https://zenn.dev/cami_crane/articles/e43121c9f82b6c</guid><pubDate>Thu, 23 Jan 2025 13:24:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GL_JN70---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%2520%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%2520%25E3%2580%259C%2520%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258C%25E3%2581%2584%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UzOGEzZTlhNjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くれいん</dc:creator></item><item><title><![CDATA[ノーコードで有料のオンラインサロンを作ってみた]]></title><description><![CDATA[
 試しにやってみたらできた？
Next.jsを使用して有料のオンラインサロンのサービスを作ろうとしたがなかなか進まずノーコードでできないかなと考えていた💦
今だと便利なSaasとか出てきてるのでそれぽいのがあった!
Reactで開発されたと思われるYOORというサービスですね。
作った初日にメンテナンスしてる表示が出てた？
1/23と書いてあったな。明日か。今日は1/22だ。
https://share.yoor.jp/door/YoorID_0106
ところで、俺ちゃんって何って話ですが元ネタはデッドプールって映画の主人公が自分のことを俺ちゃんと言ってたので気に入って私も自分のことを...]]></description><link>https://zenn.dev/joo_hashi/articles/d19faacba57b7e</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/articles/d19faacba57b7e</guid><pubDate>Wed, 22 Jan 2025 14:47:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qKKBJQ7d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%258E%25E3%2583%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%25E6%259C%2589%25E6%2596%2599%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B5%25E3%2583%25AD%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JboyHashimoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNjOTBiY2M0M2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[【React】font-awesomeのインストールと使い方（Next.js, TypeScript）]]></title><description><![CDATA[Reactでfont-awesomeを使いたいと思い、公式ドキュメントをさらったので、
意訳しつつ簡単にまとめました。
Reactだけでなく、Next.jsとTypeScriptでの使い方も書いてます。
公式ドキュメントはこちら

 インストール
各種パッケージをインストールします。

 1. SVGコアパッケージのインストール
最初にコアパッケージをインストールします。
npm
npm i --save @fortawesome/fontawesome-svg-core
yarn
yarn add @fortawesome/fontawesome-svg-core

 2. アイコンパ...]]></description><link>https://zenn.dev/iizukasan/articles/font-awesome_with_react</link><guid isPermaLink="true">https://zenn.dev/iizukasan/articles/font-awesome_with_react</guid><pubDate>Wed, 22 Jan 2025 14:32:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ATuFEwGG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591font-awesome%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25EF%25BC%2588Next.js%252C%2520TypeScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:iizk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwMGM0NzA2ZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>iizk</dc:creator></item></channel></rss>