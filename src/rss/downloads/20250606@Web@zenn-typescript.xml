<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 06 Jun 2025 05:33:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[BiomeのGritQLプラグイン vs. ast-grep: JS開発者のためのAST変換ガイド]]></title><description><![CDATA[
 なぜASTツールがリンターにとって重要なのか
Zennの皆様こんにちは。ast-grepの著者、Herringtonです。
大規模プロジェクトで一貫性のある高品質なコードを維持することは、大きな課題です。最新のRustベースのLintingツールは、基本的なコーディング標準を強制する点で素晴らしいパフォーマンスを発揮しますが、開発者が高度にカスタムなプロジェクト固有のパターンや、コードベース全体にわたる自動化された大規模なリファクタリングを必要とする場合、しばしば不十分です。ここで、AST（Abstract Syntax Tree：抽象構文木）ベースのツール、特にネイティブリンターに...]]></description><link>https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</link><guid isPermaLink="true">https://zenn.dev/hd_nvim/articles/f536e4e87f5d55</guid><pubDate>Fri, 06 Jun 2025 05:29:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--agZTJNfU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Biome%25E3%2581%25AEGritQL%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2520vs.%2520ast-grep%253A%2520JS%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEAST%25E5%25A4%2589%25E6%258F%259B%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Herrington%2520Darkholme%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZWZPY0dMdmpkYjdJT0JURTFKNXB4d3ZVcEc2SEdRZ2w3bE1LZnR0SW1hMFRxTj1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Herrington Darkholme</dc:creator></item><item><title><![CDATA[(papaparse)React + TypeScriptでCSVをパースする方法]]></title><description><![CDATA[CSVファイルを読み込むためにpapaparseライブラリを使いました。

 私の開発環境

React
TypeScript


 papaparseのインストール
npm install papaparse
npm install --save-dev @types/papaparse

 Papa.parse() 主な機能



オプション名
説明




header: true
最初の行をヘッダーとして扱う


skipEmptyLines: true
空の行をスキップ


complete
パースされたデータを親コンポーネントに渡す


error
エラー発生時の処理



...]]></description><link>https://zenn.dev/hyoni/articles/e46cc1f71eda90</link><guid isPermaLink="true">https://zenn.dev/hyoni/articles/e46cc1f71eda90</guid><pubDate>Fri, 06 Jun 2025 01:35:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JAk3Y9Rj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528papaparse%2529React%2520%252B%2520TypeScript%25E3%2581%25A7CSV%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2592%25E3%2583%25A7%25E3%2583%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0sxdWxlU2pkSzlwbDVxZnp3QVlUcFhCNk9xUEhkZGpKWjRUVlRPTl9lMHdYODhLdkg9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヒョニ</dc:creator></item><item><title><![CDATA[Next.jsプロジェクト新規作成のベストプラクティス：爆速開発を始めるための完全ガイド]]></title><description><![CDATA[
 はじめに
Next.jsは、Reactアプリケーションを構築するためのフレームワークです。サーバーサイドレンダリング（SSR）や静的サイト生成（SSG）などの機能が組み込まれており、高いパフォーマンスと優れた開発体験を提供します。
この記事では、Next.jsプロジェクトを新規作成する際の基本的な手順から、開発効率を最大化するための推奨設定までを網羅的に解説します。

 1. Next.jsプロジェクトの基本的な作成方法

 プロジェクトを作成するコマンド
まずは、Next.jsプロジェクトのひな形を作成します。以下のコマンドをターミナルで実行してください。
my-next-appの...]]></description><link>https://zenn.dev/pg_owl/articles/5776795262efe1</link><guid isPermaLink="true">https://zenn.dev/pg_owl/articles/5776795262efe1</guid><pubDate>Fri, 06 Jun 2025 01:27:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cFIt8LFc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.jsw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2584%25E3%2582%25B8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzliOGNmNDliOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ツジ</dc:creator></item><item><title><![CDATA[TypeScriptでオブジェクトのプレースホルダを置換する]]></title><description><![CDATA[function replaceKeywords(obj: any, replacements: Record&lt;string, string&gt;): any {
  if (typeof obj === 'string') {
    let result = obj;
    for (const [key, value] of Object.entries(replacements)) {
      result = result.replace(new RegExp(`\\{${key}\\}`, 'g'), value);
    }
    return resul...]]></description><link>https://zenn.dev/noelsun/articles/b346696537630e</link><guid isPermaLink="true">https://zenn.dev/noelsun/articles/b346696537630e</guid><pubDate>Fri, 06 Jun 2025 00:33:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5fTyUoD_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A7%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259B%25E3%2583%25AB%25E3%2583%2580%25E3%2582%2592%25E7%25BD%25AE%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:noelsun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeEpJT01tVEphcHlKMUMxU3ZrZGpoX1p1R29tYklscy1Cc2xlb0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>noelsun</dc:creator></item><item><title><![CDATA[TypeScriptだけでフルスタック開発！AWS Amplify Gen2が変える開発の常識]]></title><description><![CDATA[フロントエンドエンジニアの多くは「バックエンドの構築」に対して一定の苦手意識を持っているのではないでしょうか。私自身も、インフラやAWSリソースの設定に手こずった経験は多くあります。
今回は、そんなフロントエンドエンジニアの助けになりうる「AWS Amplify Gen2」について紹介します。実際に触ってみて「これは非常に可能性がある」と感じたので、その魅力をお伝えしたいと思います。

 Amplifyってそもそも何？
まず前提として、AWS Amplifyとは何かを整理しておきましょう。
簡単に言えば「フロントエンドエンジニアがクラウドバックエンドを簡単に構築・連携できるようにするため...]]></description><link>https://zenn.dev/codeciao/articles/amplify-gen2-typescript-fullstack</link><guid isPermaLink="true">https://zenn.dev/codeciao/articles/amplify-gen2-typescript-fullstack</guid><pubDate>Thu, 05 Jun 2025 23:46:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zI33FyLu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2581AWS%2520Amplify%2520Gen2%25E3%2581%258C%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25AE%25E5%25B8%25B8%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:e-ichinose%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzlkNWI1NzhlNWUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:codeciao%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSmN3SlBhNjROWDQxZEptQWl3Z0JMdF9ZWEZaaHRnaDZTUlNwN0FpTXpkWkE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>e-ichinose</dc:creator></item><item><title><![CDATA[Next.js + Rails API を Docker コンテナで構築する手順]]></title><description><![CDATA[
 はじめに
昨今、フロントエンドに React（Next.js）を、バックエンドに Rails API を組み合わせた構成を見かける様になりました。
本記事では、「ホストマシンに Ruby や Node.js を一切インストールせず、すべて Docker コンテナ上で構築・起動する環境」をゼロから用意する手順を解説します。
本記事の手順に沿って必要なファイルを揃えれば、最後に docker compose up --build だけで開発環境が立ち上がり、Rails API と Next.js の開発サーバーを同時に動かせます。
また、本記事はあくまで開発の環境構築であり、本番環境の構...]]></description><link>https://zenn.dev/mothimothi/articles/821d6eb819b44a</link><guid isPermaLink="true">https://zenn.dev/mothimothi/articles/821d6eb819b44a</guid><pubDate>Thu, 05 Jun 2025 21:03:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UlaPPt_Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520%252B%2520Rails%2520API%2520%25E3%2582%2592%2520Docker%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25A1%25E3%2582%2582%25E3%2581%25A1%25E5%2592%258C%25E5%25B0%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1M2JhMTYwNWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もちもち和尚</dc:creator></item><item><title><![CDATA[Azure AI Foundry のエージェント機能を使ってウェブ検索を行う（TypeScript）]]></title><description><![CDATA[
 概要
Azure AI Foundry のエージェント機能を使うためには、@azure/ai-projects というパッケージを利用する。
Github で言うと、以下のディレクトリに該当する。
https://github.com/Azure/azure-sdk-for-js/tree/main/sdk/ai/ai-projects
公式ドキュメントを見ようとしたものの、ドキュメントの量が膨大でよく分からなかったため、コードを書きながら利用方法を探ってみた。

 リファレンス
読んでおくとよさそうな情報。
まずは以下のURLで表示される README の内容をさらっと見るのが良さ...]]></description><link>https://zenn.dev/tenkei/articles/008d111862bdb3</link><guid isPermaLink="true">https://zenn.dev/tenkei/articles/008d111862bdb3</guid><pubDate>Thu, 05 Jun 2025 15:10:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Zx77uAis--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520AI%2520Foundry%2520%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25EF%25BC%2588TypeScript%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tenkei%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FjOGQ2ZDA5MjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tenkei</dc:creator></item><item><title><![CDATA[DSLやめてSQLでいいんじゃない？]]></title><description><![CDATA[ORMはCUD処理は得意ですが、R（SELECT）処理は苦手です。
DSLのゴールはSQLへの翻訳であるのに、答え（SQL）を知っていても、わざわざ逆翻訳（DSL）しなければならない。
その上、各ORMライブラリごとにDSLの文法は異なり、SQL以上に方言だらけの世界です。
そこで改めて考えたい。なぜSQLを使わないのですか？

 SQLを忌避する理由
私が想像する理由は大きく5つあります。

SQLインジェクションが怖い
汎用性が低い
静的解析やコンパイルチェックが効かない
エンティティモデルへのマッピングが面倒
長文の保守性が悪い

これは今も本当に問題なのでしょうか？
SQLの解析...]]></description><link>https://zenn.dev/mkmonaka/articles/3c6799efb2be34</link><guid isPermaLink="true">https://zenn.dev/mkmonaka/articles/3c6799efb2be34</guid><pubDate>Thu, 05 Jun 2025 13:41:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7qttMze4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DSL%25E3%2582%2584%25E3%2582%2581%25E3%2581%25A6SQL%25E3%2581%25A7%25E3%2581%2584%25E3%2581%2584%25E3%2582%2593%25E3%2581%2598%25E3%2582%2583%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:M%2520Sugiura%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI3ODIyODg3MzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>M Sugiura</dc:creator></item><item><title><![CDATA[Cline が一発で解いた TypeScript 型パズルを解読する]]></title><description><![CDATA[こんばんは、時間決めてすみません。社会人大学院生バンドマンの小林と申します。最近 TypeScript を書いていたら遭遇した面白い型エラーについて紹介しようと思います。
そこまで複雑な型パズルではないんだけど、そこそこ面白いから面白そうだな〜と思った人は是非具体的な例の部分のコードを TypeScript Playground にコピペして遊んでみてね。

 発端
ライブラリの関数を呼び出してそこそこ長い引数を渡そうとしていたときに、
functionA([
   {
      type: 'foo',
      idA: 1,
   },
   {
      type: 'ba...]]></description><link>https://zenn.dev/takabayap/articles/0525fc0d1cd75a</link><guid isPermaLink="true">https://zenn.dev/takabayap/articles/0525fc0d1cd75a</guid><pubDate>Thu, 05 Jun 2025 12:10:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IABdB2Xy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cline%2520%25E3%2581%258C%25E4%25B8%2580%25E7%2599%25BA%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%2584%25E3%2581%259F%2520TypeScript%2520%25E5%259E%258B%25E3%2583%2591%25E3%2582%25BA%25E3%2583%25AB%25E3%2582%2592%25E8%25A7%25A3%25E8%25AA%25AD%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TakabayaP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g2ZU9LZ1dYcVZxRTNGUEpBN3llYzdGeVVWUnpBQ2pDRDlwU1F4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TakabayaP</dc:creator></item><item><title><![CDATA[AI駆動開発やってみるか]]></title><description><![CDATA[
 回想
最近、2024年の12月に始めたReactでのメモ帳アプリ作成が最低実装水準を達成し、一旦の開発終了を迎えた。
元はといえば、SEとは名ばかりの車載IVIシステム検証テスター兼野良業務自動化男を脱却するために、モバイルアプリ開発を勉強していたことが発端だった。
Flutterでは社内案件の引き手が無く、泣く泣くHTML/Javascriptを経由してReactに辿り着いた。
今となってはReactの魅力もわかってきたし、アプリ開発を通して愛着も湧いてきた。
結果的にこの右往左往が身になっている実感がある。
しかし、困ったこともある。
参画中の客先常駐案件だ。
担当業務は自動車E...]]></description><link>https://zenn.dev/ferretbites/articles/dfe6ab7d9fa31b</link><guid isPermaLink="true">https://zenn.dev/ferretbites/articles/dfe6ab7d9fa31b</guid><pubDate>Thu, 05 Jun 2025 11:44:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mw1kY8aB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ferret_Vite%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS3BXNm4tZ1JHUDNJY01YLWNWbzRfZGE0cGV1Z2R1VzUzYW5tVXNyRGs0RjRnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ferret_Vite</dc:creator></item><item><title><![CDATA[React+typescript+vscodeでブレークポイントを使うには]]></title><description><![CDATA[
 はじめに
みなさん、こんにんちは。
皆さんはReact+ts環境のデバッグはどのように行っていますか？
console.log連打ですか？
Chromeのデバッグツールですか？
ReactDevツールですか？
それもいいですか、vscodeでブレークポイントが使えたら幸せだと思いませんか？
その願い・・・なんと叶います！！
というわけでやり方を伝授いたします。

 やり方

 準備
起動構成を作ります。
以下のソースコードをコピペしたあと、urlとwebRootを書き換えてください。
{
  "version": "0.2.0",
  "configurations": [
    ...]]></description><link>https://zenn.dev/k_tabuchi/articles/792c38f63ce74b</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/792c38f63ce74b</guid><pubDate>Thu, 05 Jun 2025 04:10:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PI_aqxs0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%252Btypescript%252Bvscode%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%259D%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[グラフ構築と状態管理の実装アプローチから見るMastraとLanggraphの比較]]></title><description><![CDATA[
 1. はじめに
FastDOCTORの技術部門（通称FDT：FastDOCTOR Technologies）のIncubationグループでインターンをしている河内（かわち）です！
実は私は2023年にFastDOCTORが開催したハッカソンを通じて参加することになりました。当時のハッカソン参加体験はこちらのブログ記事にまとめていますので、興味のある方はぜひご覧ください。そして、嬉しいことにFastDOCTORでは近日中に再びハッカソンの開催が予定されています！ぜひチェックしてみてください。 connpass
FastDOCTORの開発環境は多様で、プロジェクトによって異なるフレーム...]]></description><link>https://zenn.dev/fastdoctor/articles/0b61398578951a</link><guid isPermaLink="true">https://zenn.dev/fastdoctor/articles/0b61398578951a</guid><pubDate>Thu, 05 Jun 2025 03:27:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UNJkI-Xg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E7%258A%25B6%25E6%2585%258B%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%25E3%2581%258B%25E3%2582%2589%25E8%25A6%258B%25E3%2582%258BMastra%25E3%2581%25A8Langgraph%25E3%2581%25AE%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:seigo%25202016%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxMzdkOTVjODQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2589%25E3%2582%25AF%25E3%2582%25BF%25E3%2583%25BC%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkYzgwYWEzMzQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>seigo 2016</dc:creator></item><item><title><![CDATA[#107 OpenAIのRealtime APIをつかってみる　]]></title><description><![CDATA[
 OpenAIのRealtime APIをつかってみる
OpenAIからRealtime API (Beta版)がリリースされたので、実際に触ってみようと思います。
公式ドキュメントに音声の送信方法が記載されていますが、受信方法は記載されていなかったので今回は音声の受信と、受信した音声をDiscordを経由して再生してみようと思います

 作成方針
今回は、ユーザがDiscordのチャット欄に「join」の入力すると、BOTがVCに入室して話し始める※。というものを作成したいと思います
OpenAIのRealtimAPIを主軸に触っていこうと思いますので、Discord周りの実装で手抜...]]></description><link>https://zenn.dev/nxted_sapporo/articles/2e5edcce31592f</link><guid isPermaLink="true">https://zenn.dev/nxted_sapporo/articles/2e5edcce31592f</guid><pubDate>Thu, 05 Jun 2025 02:12:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u0NA1XJf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2523107%2520OpenAI%25E3%2581%25AERealtime%2520API%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258B%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NXTEDCo.%252C%2520Ltd.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmZjQzOTVhYzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NXTEDCo., Ltd.</dc:creator></item><item><title><![CDATA[Azure App Service + Next.jsでファイルの分割アップロードを実装する]]></title><description><![CDATA[Azure App Service上でNext.jsアプリ作ってたんですが、大容量ファイルのアップロードでApp Serviceがメモリ不足でクラッシュするという事件が発生しました😇

 開発環境とアーキテクチャ
まず、今回作ってたシステムの構成はこんな感じ：


 ここで重要な制約が...


VNet統合: App ServiceとBlob StorageはVNet統合されてる

外部アクセス制限: ブラウザから直接Blob Storageにアクセスできない

必須経路: ファイルアップロードは全部App Service経由じゃないとダメ

要するに、よくある「ブラウザ→Blob S...]]></description><link>https://zenn.dev/nbs_tokyo/articles/b4baf9c56b9d1f</link><guid isPermaLink="true">https://zenn.dev/nbs_tokyo/articles/b4baf9c56b9d1f</guid><pubDate>Wed, 04 Jun 2025 13:57:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fYyPXnYI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520App%2520Service%2520%252B%2520Next.js%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2588%2586%25E5%2589%25B2%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Hirofumi%2520Moribayashi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmNWU5MTAzNjYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%258D%25E3%2582%25A4%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25BA%25E6%259D%25B1%25E4%25BA%25AC%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxZGNhOThiZGMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hirofumi Moribayashi</dc:creator></item><item><title><![CDATA[DI（依存性注入）の基礎を理解する【Part1】〜「自分で作らない」設計でテストも拡張もラクになる〜]]></title><description><![CDATA[
 はじめに

「DIって何？よく聞くけど正直よくわからん」
「クラスに依存を注入って、結局何がいいの？」
「interface使うとなんで疎結合になるの？」

そんな疑問を持っている方に向けて、この記事では Dependency Injection（DI）＝依存性の注入 について、TypeScriptで書いた最小限のコードを使ってわかりやすく解説します。


 🧠 DIってなんぞや？
DIとは Dependency Injection の略で、直訳すると「依存性の注入」。

依存するオブジェクトを自分で作らず、外部から与えてもらうこと。

…と言われてもピンとこないので、まずはコードを...]]></description><link>https://zenn.dev/manntera/articles/437829356d0117</link><guid isPermaLink="true">https://zenn.dev/manntera/articles/437829356d0117</guid><pubDate>Wed, 04 Jun 2025 13:08:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ja5jb_eZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:DI%25EF%25BC%2588%25E4%25BE%259D%25E5%25AD%2598%25E6%2580%25A7%25E6%25B3%25A8%25E5%2585%25A5%25EF%25BC%2589%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Part1%25E3%2580%2591%25E3%2580%259C%25E3%2580%258C%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%2589%25E3%2581%25AA%25E3%2581%2584%25E3%2580%258D%25E8%25A8%25AD%25E8%25A8%2588%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2582%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2582%25E3%2583%25A9%25E3%2582%25AF%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BE%25E3%2582%2593%25E3%2581%25A6%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25B8%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NWJmOTI0MDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>まんてらスタジオ</dc:creator></item><item><title><![CDATA[ブラウザ側でvector化してサーバレスっぽくQdrantで類似画像検索する]]></title><description><![CDATA[ブラウザ上で画像をベクトル化し、Qdrantを使って類似画像検索する。TypeScriptのみでサーバレスっぽい感じの構成（Qdrantがいるのでサーバレスではない）
画像のアップロードやベクター化などをクライアント側に任せられるので、嬉しいケースはあるはず。

 できたもの
実際に動かした結果はこんな感じ。Dog API Imagesの画像を入れて試している

混ぜ込んだ同じ犬の結果が出たり（背景色に引っ張られてそう）、それ以外もわりかし近いものが出てる

別の例として、CC0ライセンスの画像を使った検索でもそれっぽい感じになった


 やり方

 Qdrant準備
とりあえず準備とし...]]></description><link>https://zenn.dev/terrierscript/articles/2025-06-04-qdrant-browser-vector-search</link><guid isPermaLink="true">https://zenn.dev/terrierscript/articles/2025-06-04-qdrant-browser-vector-search</guid><pubDate>Wed, 04 Jun 2025 12:53:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--NnZgjJ8v--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E5%2581%25B4%25E3%2581%25A7vector%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25AC%25E3%2582%25B9%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258FQdrant%25E3%2581%25A7%25E9%25A1%259E%25E4%25BC%25BC%25E7%2594%25BB%25E5%2583%258F%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:terrierscript%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RhNzJjMjE0Y2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>terrierscript</dc:creator></item><item><title><![CDATA[ChatGPT&Next.jsでマーケティング支援アプリを作ろう]]></title><description><![CDATA[「せっかく良い商品を作ったのに、うまく魅力を伝えられない…」
そんな悩みを解決するために、キャッチコピーや説明文を自動で考えてくれるWebアプリを作ってみました。

このアプリでは、ChatGPTの力を借りて、マーケティングの文章をサクッと生成できます。使ったのは、誰でも簡単にWebアプリが作れるNext.jsと、話題のOpenAIのAPIです。

エンジニアとしてこんな力が身につきます！
- APIの使い方が学べる：OpenAIのChatGPT APIとやりとりする方法がわかります
- Next.jsでのアプリ開発を体験できる：ページ構成やチャットUIの作り方も紹介
- 実用的なツールを作る面白さを実感できる：自分が作ったもので、誰かの仕事がラクになる！

アプリの内容は？
- 商品名と説明を入力するだけで、キャッチコピーと説明文を自動生成
- ターゲットや広告の場所も指定すれば、もっと効果的な文章に
- 会話形式のUIなので、使いながら文章をブラッシュアップできます

「実際に使えるアプリを作りながら、技術も学べる」そんな体験をしてみませんか？
この記事を通して、あなたも今日から“つくれるエンジニア”の仲間入りです！]]></description><link>https://zenn.dev/kenquichi/books/0633bfc8563e1f</link><guid isPermaLink="true">https://zenn.dev/kenquichi/books/0633bfc8563e1f</guid><pubDate>Wed, 04 Jun 2025 12:42:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nQdxxb97--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82NjBmZmY0ZmQ0LmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ケン吉</dc:creator></item><item><title><![CDATA[Amplify Gen 2 Scheduling Functionでハマった cron 式エラーと解決方法]]></title><description><![CDATA[
 はじめに
Amplify Gen 2 の Scheduling Function は、defineFunction に schedule プロパティを追加するだけで「定期実行」の Lambda を簡単に作れます。ところが “いつもの cron 感覚” で書いた式が、デプロイ時にビルドで失敗。（実際にはコードレビューのときに気付けずApproveしてしまいました...）
この記事では 「なぜ？」と「どう直す？」 をまとめます。みなさんの参考になれば幸いです。

 現象 ── レビューでも見落とした cron 記法ミス

// 誤ったコード（毎時 5 分と 35 分に動かすつもりだった）...]]></description><link>https://zenn.dev/myuta_dev/articles/8a53f5744662ed</link><guid isPermaLink="true">https://zenn.dev/myuta_dev/articles/8a53f5744662ed</guid><pubDate>Wed, 04 Jun 2025 10:29:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QT0g53eD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Amplify%2520Gen%25202%2520Scheduling%2520Function%25E3%2581%25A7%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%2520cron%2520%25E5%25BC%258F%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5YWM1YTI0YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bara</dc:creator></item><item><title><![CDATA[TypeScript(Deno)におけるモジュールとパッケージの使い分け]]></title><description><![CDATA[
 要約
TypeScript実行環境であるDenoを例に、モジュール(ESM)/パッケージ/ワークスペースの概念と適切な使い分けを整理します。これらを理解することで、コードの構造化とプロジェクト管理が効率的になります。

 はじめに
TypeScriptはJavaScriptに型システムを加えた言語ですが、歴史的経緯から複雑な概念が存在します。特に、処理をどこに配置するのが適切かという点は重要な課題です。
本記事では、Denoのワークスペース機能を理解する過程で明確になった、モジュール・パッケージ・ワークスペースの役割と使い分けについて解説します。

 対象読者

他言語経験者でTyp...]]></description><link>https://zenn.dev/yabuki/articles/2025-06-04-typescript-workspace</link><guid isPermaLink="true">https://zenn.dev/yabuki/articles/2025-06-04-typescript-workspace</guid><pubDate>Wed, 04 Jun 2025 06:10:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Du7G37-m--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2528Deno%2529%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A8%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YABUKI%2520Yukiharu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huRmQ1MnFmTEF6bUNNYVREYVhrTEZsZ0l0d1FrNVlrczJvcjBEPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YABUKI Yukiharu</dc:creator></item><item><title><![CDATA[値が無いかもしれない、を`Option<T>`で表す！`T | null`との違いは？🤔]]></title><description><![CDATA[
 はじめに
こんにちは。最近fp-tsを用いた関数型プログラミングにハマっているs.katoです。
そんなfp-tsについてキャッチアップをするときに割と最初に触れた概念(型？表現？)であるOptionについて、今回は紹介したいと思います！
まずはfp-tsにおけるOptionの定義から
export interface None {
  readonly _tag: 'None'
}

export interface Some&lt;A&gt; {
  readonly _tag: 'Some'
  readonly value: A

export type Option&lt;...]]></description><link>https://zenn.dev/ispec_inc/articles/e968d8e0732f5d</link><guid isPermaLink="true">https://zenn.dev/ispec_inc/articles/e968d8e0732f5d</guid><pubDate>Wed, 04 Jun 2025 03:00:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HQmM5C9L--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2580%25A4%25E3%2581%258C%25E7%2584%25A1%25E3%2581%2584%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2580%2581%25E3%2582%2592%2560Option%253CT%253E%2560%25E3%2581%25A7%25E8%25A1%25A8%25E3%2581%2599%25EF%25BC%2581%2560T%2520%257C%2520null%2560%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25AF%25EF%25BC%259F%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:s.kato%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmN2Y5YzE4ZTUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ispec%2520inc.%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlOTEwZDc3Y2UuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>s.kato</dc:creator></item></channel></rss>