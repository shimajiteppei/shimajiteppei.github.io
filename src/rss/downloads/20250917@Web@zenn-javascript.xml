<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 17 Sep 2025 11:40:45 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Mastraのマルチエージェントワークフローにおける条件分岐]]></title><description><![CDATA[
 背景
前回の記事ではMastraのマルチエージェントワークフローの公式サンプルコードを動かすところまでを検証しました。今回はもう少し複雑なワークフローとして、条件分岐を行うようなワークフローを実現したいと思います。

 環境



項目
バージョン




OS
Windows 11


ランタイム
Node.js v22.14.0


主要ライブラリ
"@ai-sdk/azure": "^1.3.23", "@mastra/core": "^0.10.4", "zod": "^3.25.76"


LLM
Azure OpenAI(gpt-4.1-mini)




 検証内容
現...]]></description><link>https://zenn.dev/serio/articles/0a7e227b9f536a</link><guid isPermaLink="true">https://zenn.dev/serio/articles/0a7e227b9f536a</guid><pubDate>Wed, 17 Sep 2025 07:53:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZrElW3ji--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mastra%25E3%2581%25AE%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25AF%25E3%2581%2597%25E3%2581%258F%25E3%2582%258C%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OGEyY2UyNGQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25BB%25E3%2583%25AA%25E3%2582%25AA%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はしくれ</dc:creator></item><item><title><![CDATA[Axiosの概要]]></title><description><![CDATA[
 Axiosとは
AxiosはTypeScriptやJavaScriptで使えるHTTPクライアントライブラリです。
PromiseベースのAPIを提供しており非同期処理が扱いやすく、JSONデータの自動変換も行ってくれるため、レスポンスデータの処理がしやすくなっています。
https://axios-http.com/ja/

 インストール方法
まずはAxiosをプロジェクトにインストールします。
npm install axios
# または
yarn add axios

 基本的な使い方
Axiosを使うと、シンプルにHTTPリクエストを送ることができます。

 GETリクエ...]]></description><link>https://zenn.dev/ket8/articles/7b8fabaecf2c23</link><guid isPermaLink="true">https://zenn.dev/ket8/articles/7b8fabaecf2c23</guid><pubDate>Wed, 17 Sep 2025 03:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xLuwpyLw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:Axios%25E3%2581%25AE%25E6%25A6%2582%25E8%25A6%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:KET8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FkZWE4MmFjMWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>KET8</dc:creator></item><item><title><![CDATA[JSの弱点から学ぶTypeScriptの安全性]]></title><description><![CDATA[
 はじめに
現在フロントエンド開発のインターンでReact+TypeScriptでの開発を行っています。
「TypeScript」さえ書ければそれでいいと思っていませんか？
JavaScript を学ぶと、その柔軟さの裏にある弱点がわかり、コンパイル元の言語であるTypeScriptの設計がなぜこうなっているのかがわかります。
ここでは、クラス設計を中心に両者の違いを簡潔にまとめます。
要点：JavaScriptでのクラス内の変数は定義の仕方によっては安全でない(バグの温床になる)。TypeScriptはどのような方法を取っているかがわかる。
2025/9/17 追記　TypeScri...]]></description><link>https://zenn.dev/kumakuma_it/articles/d710b27d0f8920</link><guid isPermaLink="true">https://zenn.dev/kumakuma_it/articles/d710b27d0f8920</guid><pubDate>Wed, 17 Sep 2025 01:56:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ikJ6OCvO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%25E3%2581%25AE%25E5%25BC%25B1%25E7%2582%25B9%25E3%2581%258B%25E3%2582%2589%25E5%25AD%25A6%25E3%2581%25B6TypeScript%25E3%2581%25AE%25E5%25AE%2589%25E5%2585%25A8%25E6%2580%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%2586%258A%25E7%2586%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MwOTFkYmU4NTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>熊熊</dc:creator></item><item><title><![CDATA[パスワード更新画面を追加]]></title><description><![CDATA[
 関連記事
関連記事一覧
https://zenn.dev/shunsuke_stack/articles/3b7759f0053ca6
https://zenn.dev/shunsuke_stack/articles/bdf5b784bd6f8b
https://zenn.dev/shunsuke_stack/articles/88dedd7c5a2341
https://zenn.dev/shunsuke_stack/articles/65c1d38ed8c694


 GitHub
https://github.com/nakajima-sh-cnctor/nuxt4-fireb...]]></description><link>https://zenn.dev/shunsuke_stack/articles/525b30bb53cac9</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/525b30bb53cac9</guid><pubDate>Wed, 17 Sep 2025 01:16:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k-t07Zkr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E6%259B%25B4%25E6%2596%25B0%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[Nest.js を使ったショートリンクサービスの構築]]></title><description><![CDATA[

 ショートリンクとは？
インターネットをサーフィンしていると、t.cn/A67x8Y や bit.ly/3z4aBc のようなリンクをよく見かけるでしょう。これらは通常非常に短く、クリックすると元のドメイン名とはまったく異なるドメイン名のページにリダイレクトされます。
これらのリンクがショートリンクです。

 ショートリンクはなぜ必要か？
ショートリンクは、Twitter の初期の頃、文字数制限が厳しかった時代に登場しました。当時、その主な目的は文字数を節約し、リンクが貴重なスペースを占有しないようにすることでした。
ショートリンクが普及するにつれて、リンク自体の「短さ」はそれほど重...]]></description><link>https://zenn.dev/bluemoon529/articles/3ddd6b0f028051</link><guid isPermaLink="true">https://zenn.dev/bluemoon529/articles/3ddd6b0f028051</guid><pubDate>Wed, 17 Sep 2025 00:16:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Hh1JuZ6R--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Nest.js%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluemoon529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYi5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bluemoon529</dc:creator></item><item><title><![CDATA[【DAY99】Firebaseで生活を自動運転]]></title><description><![CDATA[
 クレームから始まった生活管理
日々の生活の中で、「あれ、また忘れてるよ」「やってないじゃん」が繰り返された。
ゴミ出し、買い物、洗濯、ちょっとした予定の管理。
些細なタスクが抜けるたびに、家族からのクレームが溜まっていった。
タスクを紙に書いても意味がない。
リマインダーは通知が多すぎて無視してしまう。
じゃあ、生活の流れに「自動で組み込む」しかないと思った。
選んだのは、FirebaseとJavaScript。

 Firebase × JavaScript で生活をコード化する
構成はこう。


Firebase Authentication：家族ごとのログイン認証

Fires...]]></description><link>https://zenn.dev/keisuke4649/articles/day99-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day99-pg-connection</guid><pubDate>Tue, 16 Sep 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--46QXZh54--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590DAY99%25E3%2580%2591Firebase%25E3%2581%25A7%25E7%2594%259F%25E6%25B4%25BB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E9%2581%258B%25E8%25BB%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item><item><title><![CDATA[ESLint 9へのアップデートとFlat Config移行の実践記録]]></title><description><![CDATA[
 はじめに
ESLint 9 がリリースされ、新しい Flat Config 形式が標準となりました。
この記事では、モノレポ環境での ESLint 8 から 9 へのアップデート作業と、従来の.eslintrc.yml形式から Flat Config 形式への移行について、実際に遭遇した問題と解決方法を含めて記録します。

 ESLint 9のメリット
ESLint 9 への移行には以下のメリットがあります。


パフォーマンスの向上: 設定の解析が高速化

依存関係の簡素化: 多くのプラグインが統合され、設定が簡単に


 移行前の状況
移行前は以下の環境でした。

ESLint ...]]></description><link>https://zenn.dev/ptpadan/articles/eslint-update-9</link><guid isPermaLink="true">https://zenn.dev/ptpadan/articles/eslint-update-9</guid><pubDate>Tue, 16 Sep 2025 18:06:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--g4aGO_Kr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%25209%25E3%2581%25B8%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2587%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25A8Flat%2520Config%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%25AE%25E5%25AE%259F%25E8%25B7%25B5%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yasushi.kobayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2paSXpCVVZFUTgtTXY4VG4xMzBoYXR4RmN6TXYzV1A3dWhzRFlka19RPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yasushi.kobayashi</dc:creator></item><item><title><![CDATA[WebAudioAPI + Flaskで波形描画とサーバー保存]]></title><description><![CDATA[
 はじめに
WebAudioAPI を使うと、ブラウザ上でマイク入力を扱い、録音・波形描画・エンコードをすべてフロントエンドで行える。
本記事では 3秒間の録音 → 波形描画 → WAV形式に変換 → Flaskサーバーに送信・保存 までの最小構成を紹介する。


 環境など

フロントエンド

HTML/JS
WebAudioAPI
BULMA


バックエンド

python 3.10.7
Flask 3.x



https://developer.mozilla.org/ja/docs/Web/API/Web_Audio_API
https://bulma.io/
https:...]]></description><link>https://zenn.dev/y_a_y/articles/webaudio_a0685efa3cc1ca</link><guid isPermaLink="true">https://zenn.dev/y_a_y/articles/webaudio_a0685efa3cc1ca</guid><pubDate>Tue, 16 Sep 2025 15:48:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4fH2KKOz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WebAudioAPI%2520%252B%2520Flask%25E3%2581%25A7%25E6%25B3%25A2%25E5%25BD%25A2%25E6%258F%258F%25E7%2594%25BB%25E3%2581%25A8%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E4%25BF%259D%25E5%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:y_a_y%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YwY2M2MDU1NDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>y_a_y</dc:creator></item><item><title><![CDATA[Upyo 0.3.0 リリース：マルチプロバイダー対応と耐障害性の強化]]></title><description><![CDATA[
 Upyo とは
Upyoは、Node.js、Deno、Bun、エッジ関数など、複数のJavaScriptランタイムで動作する統一的なメールライブラリです。SMTP、Mailgun、SendGrid、Amazon SESなどの様々なメールプロバイダーを同じインターフェースで扱えるため、プロバイダーを変更してもアプリケーションコードの修正が不要です。TypeScriptファーストで設計されており、型安全性とゼロ依存性を特徴としています。名前の由来は韓国語の「郵票（ウピョ）」で、これは「切手」を意味します。切手がどの郵便システムでも郵便を届けられるように、Upyo はどのランタイムでもメー...]]></description><link>https://zenn.dev/hongminhee/articles/9e67fbb08f30f2</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/9e67fbb08f30f2</guid><pubDate>Tue, 16 Sep 2025 07:15:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ePpy4pRj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Upyo%25200.3.0%2520%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2590%25E3%2582%25A4%25E3%2583%2580%25E3%2583%25BC%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25A8%25E8%2580%2590%25E9%259A%259C%25E5%25AE%25B3%25E6%2580%25A7%25E3%2581%25AE%25E5%25BC%25B7%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[Vueでダイアログボックスを表示する | Vue3]]></title><description><![CDATA[
 概要
Vueでアプリケーションを作成していて、ダイアログボックスを表示したかったので作った。
こだわったのは、APIの呼び出し方を、従来のブラウザのAPIのように、const result = await this.$dialog.alert('Hello!')と、一行で書けるようにしたこと。

 ファイル構成
root/
├ plugins/
│   └ dialog.js
├ App.vue # 今回は関係ない
└ main.js

 ソースコード

dialog.js
import { createApp, h, ref } from 'vue';

// --- ダイアログコ...]]></description><link>https://zenn.dev/bbsfish/articles/49312a4ab3a260</link><guid isPermaLink="true">https://zenn.dev/bbsfish/articles/49312a4ab3a260</guid><pubDate>Tue, 16 Sep 2025 06:45:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N9EAl-Pg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue%25E3%2581%25A7%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2520%257C%2520Vue3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y.%2520HSD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSS1ZeDZXOGNtbm1hTFhWM25SNC1QYnFWbTdDVkJ3RXdrT2czUlNnWjlOPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y. HSD</dc:creator></item><item><title><![CDATA[Findyのお気に入りを手元でさくっと整理する小さなChrome拡張を作った]]></title><description><![CDATA[
 3行で
Findyで見つけた求人/案件を、自分の基準で軽く仕分け・メモしたくて、個人用の拡張を作りました。拡張のポップアップからお気に入りへの追加・削除を行い、結果はローカルの保存領域に反映します。非公式・自己責任のツールです。サイトのDOMが変わると動かなくなる可能性があります。
!
リポジトリ: https://github.com/hydrangeas/findy-fav-manager


 背景
転職・副業の情報収集でFindyを使っているのですが、ブックマークするほどではない「あとで見る」を軽く積んでいく手段が欲しくなりました。ブラウザのブックマークや外部ツールに飛ばすと...]]></description><link>https://zenn.dev/hyd/articles/5bb1d50eda7cb7</link><guid isPermaLink="true">https://zenn.dev/hyd/articles/5bb1d50eda7cb7</guid><pubDate>Mon, 15 Sep 2025 14:06:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zIbuvW24--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Findy%25E3%2581%25AE%25E3%2581%258A%25E6%25B0%2597%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258A%25E3%2582%2592%25E6%2589%258B%25E5%2585%2583%25E3%2581%25A7%25E3%2581%2595%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A8%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E5%25B0%258F%25E3%2581%2595%25E3%2581%25AAChrome%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akira%2520Otaka%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1bWluVUowcFgydEsxVWllUVNuby1KRE9KZDNuQnRnbks1UmhUWFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akira Otaka</dc:creator></item><item><title><![CDATA[phaserでゲーム開発 第四回]]></title><description><![CDATA[phaserでゲーム開発シリーズ、第四回。
今回は画面に足場を配置してみたいと思います。
前回の記事はこちら。
https://zenn.dev/k_tabuchi/articles/ca8824beee6327
今回はプレイヤーにアニメーションをつけてみます。

 全体像
まずは、今回のコードの全文です。

GameScene.js
/**
 * ゲームのメインシーンを表すクラス
 * 
 * @extends Phaser.Scene
 */
export class GameScene extends Phaser.Scene {

    /** レイヤー */
    #lay...]]></description><link>https://zenn.dev/k_tabuchi/articles/491a66403580fd</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/491a66403580fd</guid><pubDate>Mon, 15 Sep 2025 12:51:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m-zpUp0b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:phaser%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%2520%25E7%25AC%25AC%25E5%259B%259B%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[phaserでゲーム開発 第三回]]></title><description><![CDATA[phaserでゲーム開発シリーズ、第三回。
今回は画面に足場を配置してみたいと思います。
前回の記事はこちら。
https://zenn.dev/k_tabuchi/articles/521622aefc1151
今回はプレイヤーを配置してみます。
まずは、今回のコードの全文です。

 全体像

GameScene
/**
 * ゲームのメインシーンを表すクラス
 * 
 * @extends Phaser.Scene
 */
export class GameScene extends Phaser.Scene {

    /** レイヤー */
    #layer;

    /...]]></description><link>https://zenn.dev/k_tabuchi/articles/ca8824beee6327</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/ca8824beee6327</guid><pubDate>Mon, 15 Sep 2025 11:31:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ei9Iomi4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:phaser%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%2520%25E7%25AC%25AC%25E4%25B8%2589%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[phaserでゲーム開発 第二回]]></title><description><![CDATA[phaserでゲーム開発シリーズ、第二回。
今回は画面に足場を配置してみたいと思います。
前回の記事はこちら。
https://zenn.dev/k_tabuchi/articles/2dc9016a5a5642
まずは、コードの全文です。

GameScene.js
/**
 * ゲームのメインシーンを表すクラス
 * 
 * @extends Phaser.Scene
 */
export class GameScene extends Phaser.Scene {
    /**
     * シーンのコンストラクタ
     * - シーンキーを "GameScene" として登...]]></description><link>https://zenn.dev/k_tabuchi/articles/521622aefc1151</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/521622aefc1151</guid><pubDate>Mon, 15 Sep 2025 07:27:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HHGpRdmd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:phaser%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%2520%25E7%25AC%25AC%25E4%25BA%258C%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[kintone × GAS 　kintoneアプリの情報をスプレッドシートに書き出す]]></title><description><![CDATA[自分のメモ、頭の整理のために書いています。クソ長くなってしまった。
自分がContent-Typeヘッダーを適当にしていたことがよくわかった（反省）。
思ったより色々めんどくさかった。

 0.概要と余談

 GitHub
https://github.com/ymgcmnk/KintoneSpreadsheetExporter

 概要
スプレッドシートがマスタであったものをkintoneアプリでDB化したは良いものの、その情報をスプレッドシートに落として参照したい時、あると思います。
ワンショットならCSVをエクスポートすれば良いですが、定常的にkintoneの情報をスプレッドシート...]]></description><link>https://zenn.dev/a03/articles/6d6a5cd5bf77e7</link><guid isPermaLink="true">https://zenn.dev/a03/articles/6d6a5cd5bf77e7</guid><pubDate>Mon, 15 Sep 2025 05:59:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ypAR2rrM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kintone%2520%25C3%2597%2520GAS%2520%25E3%2580%2580kintone%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2589%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%258D%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:a03%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y3FCWGd0Q2R5aEMzOUo3bnpoRFNPNFlubFRjWDgtSE9NTmgtMGpSPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>a03</dc:creator></item><item><title><![CDATA[phaserでゲーム開発 第一回]]></title><description><![CDATA[
 まえがき
プログラマーの皆さん、こんにちは。
皆さんは休日にプログラミングの勉強してますか？
私はなんとなく知らない言語の文法読んだり、適当に思いついたものを書いてみたりです。
けど特に作りたいものがない時ってモチベーションあがりませんよね。
というわけで、ゲームでも作る？ってなるのですが、フレームワークも色々あって迷いますよね。
今回は公開まで簡単にできるphaserを選択してみました。

 フレームワークの選定理由
おそらく参考資料が最も多いのはUnityだと思います。
しかし、これは初めて練習でやるには機能が過剰だし、開発環境がものすごく重くて、高スペックなPCがないと動かすの...]]></description><link>https://zenn.dev/k_tabuchi/articles/2dc9016a5a5642</link><guid isPermaLink="true">https://zenn.dev/k_tabuchi/articles/2dc9016a5a5642</guid><pubDate>Mon, 15 Sep 2025 05:33:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7hhmD48I--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:phaser%25E3%2581%25A7%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E9%2596%258B%25E7%2599%25BA%2520%25E7%25AC%25AC%25E4%25B8%2580%25E5%259B%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k-tabuchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkMjhhY2RlZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k-tabuchi</dc:creator></item><item><title><![CDATA[Screen Wake Lock API で画面を常時表示させる]]></title><description><![CDATA[先日、料理のレシピサイトを閲覧していたところ、画面表示を維持することができるトグルスイッチが設置されている事に気付きました。料理中は手が汚れスマホを極力触りたくないので、とても助かりました。
併せて、Web でも画面表示を維持することができると知り驚きました。
これは Screen Wake Lock API によって実現できる機能で、Chrome 84 以降、Safari 16.4 以降で対応しています。
今回は、この API の挙動を Android と iOS の実機で検証しました。
この機能が活かせるユースケースについて紹介し、実際に利用する際の注意点について記載します。

 検...]]></description><link>https://zenn.dev/ww24/articles/d111b4a80079a0</link><guid isPermaLink="true">https://zenn.dev/ww24/articles/d111b4a80079a0</guid><pubDate>Mon, 15 Sep 2025 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bxbZHdZu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Screen%2520Wake%2520Lock%2520API%2520%25E3%2581%25A7%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E5%25B8%25B8%25E6%2599%2582%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ww24%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNjI2Y2ExMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ww24</dc:creator></item><item><title><![CDATA[はじめてのReact入門 - コンポーネント開発からTodoアプリ制作まで]]></title><description><![CDATA[こんにちは、とまだです。

「Reactって難しそう」「コンポーネントってなに？」と思ったことはありませんか？

実は私も最初はそう思っていました。でも大丈夫。基本から段階的に学んでいけば、必ずマスターできます。

【こんな方におすすめ】
・JavaScriptの基礎は学んだけど、次に何を学べばいいか迷っている
・Reactに興味はあるけど、どこから始めていいかわからない
・効率的にUI開発ができるようになりたい
・将来的にNext.jsなども学んでみたい

【本書で身につくスキル】
■ Reactの基本概念の理解
- コンポーネント指向の考え方
- 仮想DOMの仕組み
- JSXの書き方と活用法

■ 実践的な開発環境の構築
- Viteを使った高速な開発環境
- VS Codeの効率的な設定
- Tailwind CSSでのモダンなスタイリング

■ 動的なアプリケーション開発
- useState/useEffectの実践的な使い方
- Props/Stateによるデータ管理
- イベントハンドリングの実装

■ 本格的なアプリ制作
- Todoアプリの段階的な開発
- localStorageでのデータ永続化
- TypeScriptでの型安全な開発

【学習の流れ】
本書は段階的なアプローチでReactを学ぶことができます。

まず「Reactとは何か」から始まり、開発環境を整え、簡単なコンポーネントを作りながら基礎を固めます。

そして、実際にTodoアプリを作りながら実践力を養い、最後はTypeScriptを使った本格的な開発まで学習します。

各チャプターは段階的に難易度が上がっていくので、無理なく着実にスキルアップできます。

【技術スタック】
- React 18
- Vite（高速ビルドツール）
- Tailwind CSS（ユーティリティファーストCSS）
- TypeScript（型定義による安全な開発）

【最後に】
Reactを学ぶことで、モダンなWebアプリケーション開発をできるようになります。

また、コンポーネント指向の開発手法は、効率的で保守性の高いコードを書く力を与えてくれるはずです！

そしてこの本で学んだあと、私の動画講座も試してみてはいかがでしょうか？
Claude Code や Codex など、AI駆動開発分野のベストセラー講座で実践レベルにスキルアップしましょう！
https://school.learning-next.app/coupons]]></description><link>https://zenn.dev/tmasuyama1114/books/react_basic_tutorial</link><guid isPermaLink="true">https://zenn.dev/tmasuyama1114/books/react_basic_tutorial</guid><pubDate>Sun, 14 Sep 2025 19:41:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R9-fnf2G--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zMWJkNDdkMTVjLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>とまだ@AI 駆動開発教育者</dc:creator></item><item><title><![CDATA[Vercelでメール送信フォームを作る]]></title><description><![CDATA[
 概要
Webサイトからメールを送信するには、どのような方法があるでしょうか？
一般的にはサーバーを構築したり、メール送信ライブラリを利用したりするケースが多いと思います。
今回はVercelの「サーバーレス関数」機能を使って、Node.jsでメールを送信する方法をご紹介します。

 サーバーレス関数とは
サーバーレス関数とは、サーバー構築や管理を気にせずにAPIエンドポイントを簡単に作成できる仕組みです。
この機能を活用して、Node.jsのnodemailerライブラリを使ってメール送信を行います。

 セットアップ
今回はフレームワークなどは使わず、素のHTMLとJavaScri...]]></description><link>https://zenn.dev/shicoku/articles/b90f705a37da45</link><guid isPermaLink="true">https://zenn.dev/shicoku/articles/b90f705a37da45</guid><pubDate>Sun, 14 Sep 2025 16:26:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j8tmIav6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vercel%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E9%2580%2581%25E4%25BF%25A1%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25A9%25A9%25E5%2593%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0YWVmNTQ0MzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>詩哭</dc:creator></item><item><title><![CDATA[JavaScriptでABC423(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc423

 A - Scary Fee
https://atcoder.jp/contests/abc423/tasks/abc423_a
1000+C円ずつ残高を減らして1000円もらえる。何回その操作ができる？がわかれば1000をかけるだけ
問題文を読むのに時間をかけすぎ
https://atcoder.jp/contests/abc423/submissions/69299722
2分12秒 AC!

 B - Locked Rooms
https://atcoder.jp/contests/abc423/tasks/a...]]></description><link>https://zenn.dev/aya_koto/articles/0ce2fa3338b9c7</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/0ce2fa3338b9c7</guid><pubDate>Sun, 14 Sep 2025 14:00:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hFlr7_mL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC423%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item></channel></rss>