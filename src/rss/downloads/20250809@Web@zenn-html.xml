<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「HTML」のフィード]]></title><description><![CDATA[Zennのトピック「HTML」のRSSフィードです]]></description><link>https://zenn.dev/topics/html</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/171432f5a6.png</url><title>Zennの「HTML」のフィード</title><link>https://zenn.dev/topics/html</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 09 Aug 2025 10:26:40 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/html/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[ClaudeCodeと作る消費税減税シミュレーター]]></title><description><![CDATA[
 はじめに
政治の焦点となっている消費税減税について、「10%から5%になったら実際どれくらい家計が楽になる？」という疑問を数値で可視化するため、政策議論支援ツール「消費税減税シミュレーター」を開発しました。
本記事では、WordPress子テーマとしての実装から、精密な消費税計算ロジック、リアルタイムUI制御まで、政策議論に活用できる実用的な計算ツールの構築手順を詳しく解説します。

 本記事について
今回の開発および記事執筆は、Claude Code（Anthropic社のAI）との協業で進めました。AI時代の新しい開発スタイルの実践例として参考になれば幸いです。

 自己紹介
ホ...]]></description><link>https://zenn.dev/5naokichi/articles/44639861cceb7c</link><guid isPermaLink="true">https://zenn.dev/5naokichi/articles/44639861cceb7c</guid><pubDate>Fri, 08 Aug 2025 06:54:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kCLu-duf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ClaudeCode%25E3%2581%25A8%25E4%25BD%259C%25E3%2582%258B%25E6%25B6%2588%25E8%25B2%25BB%25E7%25A8%258E%25E6%25B8%259B%25E7%25A8%258E%25E3%2582%25B7%25E3%2583%259F%25E3%2583%25A5%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%25E3%2581%25A1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQyYTY0ODViMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なおきち</dc:creator></item><item><title><![CDATA[HTML/CSS/JavaScript で、スムーズにテキスト要素がスライドインしてくる仕掛けを作る (Blazor, React)]]></title><description><![CDATA[
 はじめに
前回、こんな記事を書きました。
https://zenn.dev/j_sakamoto/articles/a774e70143cf12
上記記事内にて、自作した Web アプリ (翻訳字幕システム) の "こだわりポイント" として以下のように言及しておりました。

しかしながら、せっかく (?) 自作でやりきるとした以上、一点だけこだわったところがありました。
それは逐次の翻訳結果の出現を、しっかりアニメーション表示するようにしたところです。
音声認識されて返ってきた翻訳結果テキストを、何も考えずに (?) 表示エリアにただ追加してしまうと、既存の前回までの翻訳結果テキス...]]></description><link>https://zenn.dev/j_sakamoto/articles/eb117b9fb0681c</link><guid isPermaLink="true">https://zenn.dev/j_sakamoto/articles/eb117b9fb0681c</guid><pubDate>Wed, 06 Aug 2025 13:43:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8r8tReJ5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%252FCSS%252FJavaScript%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2582%25B9%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%258C%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B%25E4%25BB%2595%25E6%258E%259B%25E3%2581%2591%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520%2528Blazo...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540jsakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVX243dnJ5ZFlLb2NxdUhSUkIxSGZ4NGpVekNsdGNmZ290R2hfNWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@jsakamoto</dc:creator></item><item><title><![CDATA[html構築ソフト制作日記]]></title><description><![CDATA[

 コンポーネント定義


 プロジェクトフォルダ


 instance_component結合管理


 置換するファイル
[[[top]]]


[[[intro_02]]]

[[[conclusion]]]


[[[intro_01]]]

[[[bottom]]]



 intro コンポーネント
&lt;h2&gt;[replace]title&lt;/h2&gt;

&lt;p&gt;[replace]content&lt;/p&gt;

 intro_01 インスタンス
title,content
はじめに,この文書は、置換処理によって作成されます。
途中に,置換...]]></description><link>https://zenn.dev/kemii/articles/6cea32e00203f2</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/6cea32e00203f2</guid><pubDate>Tue, 05 Aug 2025 11:17:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1SRrbCLk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:html%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%25BD%25E3%2583%2595%25E3%2583%2588%25E5%2588%25B6%25E4%25BD%259C%25E6%2597%25A5%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[何を作ろうか、、]]></title><description><![CDATA[こんにちは。最近投稿ができていなくて申し訳ありませんでした。なんで投稿できていないかというと言い訳みたいになるんですが（ほんとに言い訳）何を作ろうか悩んでいてですね、、、、
それでこの記事を見てくれた方はコメントなどで＊＊＊をつくったら？とコメントしてくれると励みにもなるのでとてもうれしいです！（あんまり難しいのにはしないで）
]]></description><link>https://zenn.dev/ak0331/articles/0f6374c798cbbb</link><guid isPermaLink="true">https://zenn.dev/ak0331/articles/0f6374c798cbbb</guid><pubDate>Sat, 02 Aug 2025 02:33:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1P1NiWg_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%2595%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%258B%25E3%2580%2581%25E3%2580%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ak0331%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NTdjZjk1YzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ak0331</dc:creator></item><item><title><![CDATA[svgを分解して一部のスタイルだけ変える]]></title><description><![CDATA[svg分解してスタイルつけたときの備忘録です

 きっかけ
クリックのたびにアイコン(svg)の一部の色を変更したいが
クリックのたびに表示するアイコンをすべて用意できない
(アイコンの色だけ違うsvgファイルはたくさん作りたくない....)

 環境
windows 11
vscode
chrome

 分解する
pathごとにまとまっていれば、分解が可能です
pathがM...Zが1つのpathです
!
M...Zが1つしかなかった場合、諦めてsvgを用意するか、svgをつくってみるかになります

&lt;svg xmlns="http://www.w3.org/2000/svg" ...]]></description><link>https://zenn.dev/tanaa/articles/0a22bf5e3c95a4</link><guid isPermaLink="true">https://zenn.dev/tanaa/articles/0a22bf5e3c95a4</guid><pubDate>Fri, 01 Aug 2025 09:00:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gMrorKFY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:svg%25E3%2582%2592%25E5%2588%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%25A6%25E4%25B8%2580%25E9%2583%25A8%25E3%2581%25AE%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25A0%25E3%2581%2591%25E5%25A4%2589%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tana%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxNWJiOGQ5NTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tana</dc:creator></item><item><title><![CDATA[Vue3 で Head 要素を変更する | Vue3（Options API）+ Unhead]]></title><description><![CDATA[
 概要
Vue と Vue Router でマルチページな SPA を作っているとき、ページごとにタイトル（ブラウザのタブに表示されるサイトの名前）を変えたいことがあった。そんなとき、Unhead というモジュールを使うと、それを実現できる。

 注意点

Unhead は V1 と V2 があって、V1 は Vue2 用、V2 は Vue3 用
Unhead V2 は Vue3 の Composition API 向けに設計されている
今回は Vue3 の Options API で実装する


 導入方法

 ディレクトリ構造
src/
├ views/
│   └ HomeVie...]]></description><link>https://zenn.dev/bbsfish/articles/5eee305c0508bc</link><guid isPermaLink="true">https://zenn.dev/bbsfish/articles/5eee305c0508bc</guid><pubDate>Thu, 31 Jul 2025 07:05:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ARVzFPUK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%2520%25E3%2581%25A7%2520Head%2520%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2599%25E3%2582%258B%2520%257C%2520Vue3%25EF%25BC%2588Options%2520API%25EF%25BC%2589%252B%2520Unhead%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Y.%2520HSD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSS1ZeDZXOGNtbm1hTFhWM25SNC1QYnFWbTdDVkJ3RXdrT2czUlNnWjlOPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Y. HSD</dc:creator></item><item><title><![CDATA[【JavaScript】APIからJSONを取得して静的ページにお知らせを追加してみる]]></title><description><![CDATA[JavaScriptを使って、APIからJSONを取得して、整形＆リストアップして表示してみたいと思います。
フロントエンドは、静的ページに埋め込んだプレーンなJavaScriptになります。
バックエンドには、カンタンにAPI公開できる拙作のWebサービス「パケットベース」を利用しました。
パケットベース - Packetsbase

組織間でデータを送受信でき、受け取ったデータをノーコードでAPI公開できるサービスです。
自分あてにデータを送れば、自分用にAPIサーバーを立ち上げることもできます。

 フロントエンド
今回、簡単にプレーンなJavaScriptでコードを書いてみます。...]]></description><link>https://zenn.dev/yamakazoo/articles/a2f07c2d903d79</link><guid isPermaLink="true">https://zenn.dev/yamakazoo/articles/a2f07c2d903d79</guid><pubDate>Thu, 31 Jul 2025 03:28:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e5S4GlvN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591API%25E3%2581%258B%25E3%2582%2589JSON%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E9%259D%2599%25E7%259A%2584%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%25E3%2582%2592%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25A4%25E3%2583%259E%25E3%2582%25AB%25E3%2582%25BA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzYTQzZDJmODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヤマカズ</dc:creator></item><item><title><![CDATA[【HTML, CSS, JavaScript】フォームの良い書き方]]></title><description><![CDATA[JavaScriptオタクの綾坂ことです。
https://axtech.dev/
諸事情でお問い合わせフォームを作る機会があり、非常に困ったので備忘録として書いておきます。

 HTML

 フォーム全体

全体はformタグで囲みます。

PHPで送信プログラムを書いている場合など、JSを書かなくても送信まで終わらせることができる場合はformタグの属性で送信周りの指定をするらしい


入力項目群はul &gt; li、その他のセクションはdivで囲うといい感じになると思います


example.html
&lt;form action=""&gt;
    &lt;div cla...]]></description><link>https://zenn.dev/aya_koto/articles/08bcb1eacb585b</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/08bcb1eacb585b</guid><pubDate>Wed, 30 Jul 2025 08:23:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aDy75Sxc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590HTML%252C%2520CSS%252C%2520JavaScript%25E3%2580%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AE%25E8%2589%25AF%25E3%2581%2584%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[homeの作成]]></title><description><![CDATA[今回はホーム画面（linkでほかのサイトに飛べる仕組み）をつくった。
これが結構苦戦した。苦戦したのはいつも使わせてもらっているrenderという無料でwebサイトが公開できるところである。
今回した理由としてはこれからもゲームのようなものを作ろうと思ったから。
リンク↓
https://zenn-home.onrender.com/
＜＜＜このリンクは使えなくなる可能性があります＞＞＞
]]></description><link>https://zenn.dev/ak0331/articles/e5fcd1b38f2d38</link><guid isPermaLink="true">https://zenn.dev/ak0331/articles/e5fcd1b38f2d38</guid><pubDate>Wed, 30 Jul 2025 05:06:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tZbRfLlD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:home%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ak0331%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NTdjZjk1YzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ak0331</dc:creator></item><item><title><![CDATA[StreamlitでMermaidのマインドマップを表示する]]></title><description><![CDATA[
 はじめに
MarkdownのMermaidを使ってマインドマップを描画することができます。

これを、Streamlitのアプリで表示したかったので、
StreamlitのHTML埋め込み機能を使って、クライアントサイドのMermaid.jsライブラリでマインドマップを描画します。

Streamlit - Pythonベースのウェブアプリフレームワーク
Mermaid.js - テキストベースでダイアグラムを生成するJavaScriptライブラリ
HTML Components - StreamlitのカスタムHTMLコンポーネント機能


 実装コード
import stream...]]></description><link>https://zenn.dev/nomhiro/articles/streamlit-mermaid-maindmap</link><guid isPermaLink="true">https://zenn.dev/nomhiro/articles/streamlit-mermaid-maindmap</guid><pubDate>Tue, 29 Jul 2025 04:59:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sZroA9UJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%25E3%2581%25A7Mermaid%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%258D%25E3%2581%258F%25E3%2581%25BE%25EF%25BC%2588nomhiro%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q0YmFmOGY4OTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しろくま（nomhiro）</dc:creator></item><item><title><![CDATA[Reporting APIでWebを監視してみた]]></title><description><![CDATA[
 はじめに
最近は、Client Side AIの情報収集のために、Chrome Platform Status でリリースされたJavaScript APIをチェックするようにしています
そこで Reporting API という セキュリティ違反 や 非推奨API の呼び出しをモニタリングする機能があったため試してみました!

 仕組み
JavaScript APIですが、レポートの送信にはJavaScriptを利用するのではなく、HTTP Headerに送信先や送信対象を設定することで、エラー発生時に指定したEndpointに自動的にレポートがPOST送信されます



Key
...]]></description><link>https://zenn.dev/metalmental/articles/20250727_reporting-api</link><guid isPermaLink="true">https://zenn.dev/metalmental/articles/20250727_reporting-api</guid><pubDate>Sun, 27 Jul 2025 13:33:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TVtrlZiz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Reporting%2520API%25E3%2581%25A7Web%25E3%2582%2592%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:metalmental%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzJYbHgtVTZpT1J6VWI0WVZiYjlTUWNoa1FMRzZnalktdmFiZl9YYjJocHd3dk01NHY9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>metalmental</dc:creator></item><item><title><![CDATA[akのプログラミング日記１個目]]></title><description><![CDATA[今日はゲームを作ろうと思う。（超簡易的なものを）
お昼ごろにできた。
内容としてはコインを投げて表示する。おわり
今回はhtml,cssを重点的にまなんでみた。できたのがこれ↓
&lt;リンクがあったとこ。&gt;
まあ簡単な奴。午前はこれ。
＜＜＜このurlは予告なしに使えなくなる可能性があります＞＞＞
あたらしいリンク↓
https://zenn-home.onrender.com/
このリンクについては次の記事で。↑
]]></description><link>https://zenn.dev/ak0331/articles/018ed308db73ef</link><guid isPermaLink="true">https://zenn.dev/ak0331/articles/018ed308db73ef</guid><pubDate>Sun, 27 Jul 2025 03:55:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iZWXXtPH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ak%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E6%2597%25A5%25E8%25A8%2598%25EF%25BC%2591%25E5%2580%258B%25E7%259B%25AE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ak0331%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3NTdjZjk1YzMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ak0331</dc:creator></item><item><title><![CDATA[a11y 上の理由で Deprecated になった HTML と ARIA まとめ]]></title><description><![CDATA[!
この記事は、CYBOZU SUMMER BLOG FES '25 の記事です。

こんにちは、フロントエンドエンジニアの mehm8128 です。
今回は敢えて、a11y 上の理由から Deprecated になった HTML と ARIA をまとめてみようという記事です。

 Deprecated の定義
今回 "Deprecated" は、基本的に MDN において Deprecated の表示があるものを指すこととします。ただし、MDN からも既に削除されているものについては例外となります（＝ Deprecated の表示がないけど今回の定義に含みます）。
MDN の "Dep...]]></description><link>https://zenn.dev/cybozu_frontend/articles/deprecated-html-and-aria</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/deprecated-html-and-aria</guid><pubDate>Thu, 24 Jul 2025 03:07:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--woVG0d1C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:a11y%2520%25E4%25B8%258A%25E3%2581%25AE%25E7%2590%2586%25E7%2594%25B1%25E3%2581%25A7%2520Deprecated%2520%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2520HTML%2520%25E3%2581%25A8%2520ARIA%2520%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mehm8128%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxMDA2NzMzZWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mehm8128</dc:creator></item><item><title><![CDATA[HTMLのメタデータタグについて]]></title><description><![CDATA[
 HTMLメタデータタグ解説✌️

 メタデータタグについて💻
HTMLのコードを見ると必ず &lt;head&gt; タグがあってその中に色々と情報が記述されています。
この&lt;head&gt;内には重要な情報が散りばめられていて
簡単にいうとそのウェブページのプロフィール帳みたいな感じかなと思います。
（それはちゃうやろという方いたらすいません笑）
特に「これだけは知っておきたい！」という重要な
&lt;title&gt;　&lt;meta&gt;　&lt;link&gt; タグに絞って
その書き方、正しい順番、そしてそれぞれのタグがどんな意味を持ってるのかなど
自分自身が学習...]]></description><link>https://zenn.dev/hoge_was_taken/articles/cee3cd766aeb75</link><guid isPermaLink="true">https://zenn.dev/hoge_was_taken/articles/cee3cd766aeb75</guid><pubDate>Wed, 23 Jul 2025 08:51:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wHEwrqZI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTML%25E3%2581%25AE%25E3%2583%25A1%25E3%2582%25BF%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25BF%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryoichi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MjRlOTVkY2EuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryoichi</dc:creator></item><item><title><![CDATA[最近のHTMLを改めてちゃんと学んでみた]]></title><description><![CDATA[
 はじめに
!
修正や追加等はコメントまたはGitHubで編集リクエストをお待ちしております。

この記事は、以下のモダンCSSに関する記事のHTML版です。
https://zenn.dev/gmomedia/articles/6ed3718b4c6bc1
せっかくならHTMLもちゃんと学んでみようと思い、最近のHTMLの新機能を改めて学び直したので、アウトプットついでにこの記事を書いています。

 HTML Living Standardの時代へ
2019年5月28日、W3CとWHATWGは、HTMLとDOM標準の開発をWHATWGが主導することで合意しました。これにより、HTML...]]></description><link>https://zenn.dev/dinii/articles/16b3e71b580b6c</link><guid isPermaLink="true">https://zenn.dev/dinii/articles/16b3e71b580b6c</guid><pubDate>Tue, 22 Jul 2025 01:37:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xHidpnbF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E8%25BF%2591%25E3%2581%25AEHTML%25E3%2582%2592%25E6%2594%25B9%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E5%25AD%25A6%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Riya%2520Amemiya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNTVhMGJiNDIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Dinii%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyOTk0YWYxZDYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Riya Amemiya</dc:creator></item><item><title><![CDATA[Tor Browser向けにSVG画像の対応をする]]></title><description><![CDATA[Tor Browser上でセキュリティレベルを最大のSafestにすると、XSS対策でSVG画像が読み込まれなくなります。
サイト内でSVG画像を利用している場合には、これらが表示されないのでかなり不恰好な感じになってしまいます。かと言って全てのブラウザでPNG画像にすれば、画質が劣ったりデータ量が増えたりするわけです。
良い解決方法があるのでメモとして残しておきます。

 解決方法
必要な時だけPNG画像で表示されるようにします。SafestではJavaScriptが無効になる性質を利用します。
あらかじめPNG版とSVG版の画像を用意しておいて、スクリプトで画像を置き換えるようにしま...]]></description><link>https://zenn.dev/cizzuk/articles/bcaa6fb4bcd6f4</link><guid isPermaLink="true">https://zenn.dev/cizzuk/articles/bcaa6fb4bcd6f4</guid><pubDate>Mon, 21 Jul 2025 17:18:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--F8XZX9os--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Tor%2520Browser%25E5%2590%2591%25E3%2581%2591%25E3%2581%25ABSVG%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Cizzuk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U5YmExYTE3NGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Cizzuk</dc:creator></item><item><title><![CDATA[`nameFrom: heading`とsectionheader/sectionfooterについて]]></title><description><![CDATA[こんにちは、フロントエンドエンジニアの mehm8128 です。
今回は、W3C で進行中の nameFrom: heading 及び、sectionheader role と sectionfooter role について、まとめます。

 nameFrom: heading

まずは nameFrom: heading から見ていきます。

 nameFrom 復習
nameFromとは、WAI-ARIA role がそれぞれ持っている、何を基にして accessible name を計算するかというプロパティです。
author、contents、prohibited の 3 種類...]]></description><link>https://zenn.dev/mehm8128/articles/namefrom-heading</link><guid isPermaLink="true">https://zenn.dev/mehm8128/articles/namefrom-heading</guid><pubDate>Mon, 21 Jul 2025 10:55:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EnHE_W9r--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2560nameFrom%253A%2520heading%2560%25E3%2581%25A8sectionheader%252Fsectionfooter%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mehm8128%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxMDA2NzMzZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mehm8128</dc:creator></item><item><title><![CDATA[【CSS】ヘッダを固定するサンプルコード]]></title><description><![CDATA[
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;title&gt;固定ヘッダ&lt;/title&gt;
  &lt;style&gt;
    body {
    /*画面全体の余白をなくす*/
      margin: 0;
    }

    header {
      background: #333;
      color: #fff;
      padding: 20px;
      font-size: 24px;
 ...]]></description><link>https://zenn.dev/codek2/articles/38ea253f636d59</link><guid isPermaLink="true">https://zenn.dev/codek2/articles/38ea253f636d59</guid><pubDate>Mon, 21 Jul 2025 04:45:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q8QQs9Gn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590CSS%25E3%2580%2591%25E3%2583%2598%25E3%2583%2583%25E3%2583%2580%25E3%2582%2592%25E5%259B%25BA%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%2597%25A5%25E5%2592%258C%25EF%25BC%2588%25E3%2581%25B3%25E3%2582%2588%25E3%2582%258A%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3OWJlYTJhM2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>コード日和（びより）</dc:creator></item><item><title><![CDATA[【Spring Boot】編集（更新）機能をバリデーション付きで実装する]]></title><description><![CDATA[
 🎯 今回やること
前回はカテゴリの「作成（POST）」処理をバリデーション付きで実装しました。
今回はその続きとして、既存カテゴリの編集（更新）機能を作成していきます。
画面で「編集」ボタンをクリック → 入力フォームに遷移 → 更新して保存、という流れです。


 🖥 編集リンクを一覧に追加
まずはカテゴリ一覧に「編集」ボタンを追加します。

list.html
&lt;!-- list.htmlの一部 --&gt;
&lt;!-- category.id がnullになるとリンク生成エラーになるので注意 --&gt;
&lt;!-- th:href の中で + を使うことでパス動...]]></description><link>https://zenn.dev/taictech/articles/130b082b064fcf</link><guid isPermaLink="true">https://zenn.dev/taictech/articles/130b082b064fcf</guid><pubDate>Mon, 21 Jul 2025 02:02:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--gL2GkxQO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Spring%2520Boot%25E3%2580%2591%25E7%25B7%25A8%25E9%259B%2586%25EF%25BC%2588%25E6%259B%25B4%25E6%2596%25B0%25EF%25BC%2589%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E3%2583%2590%25E3%2583%25AA%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E4%25BB%2598%25E3%2581%258D%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tktech%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JmMzNmMTI1MWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tktech</dc:creator></item><item><title><![CDATA[【Day40】Swift×BEM記法でフロント実装をやってみた話]]></title><description><![CDATA[
## BEMと向き合ってみた

決められていたルールは「**BEM記法を徹底すること**」。名前は聞いたことがあったものの、実際に使うのはこれが初めて。Swiftとは構造の捉え方がまるで違う中、どうやって技術的に落とし込んでいったかを書いておきます。

---

## BEM記法とは何者か

BEMは「Block / Element / Modifier」の略。
HTML/CSSのクラス設計手法のひとつで、以下のような構造になります。

```html
&lt;div class="form"&gt;
  &lt;label class="form__label"&gt;メールアドレス...]]></description><link>https://zenn.dev/keisuke4649/articles/day40-pg-connection</link><guid isPermaLink="true">https://zenn.dev/keisuke4649/articles/day40-pg-connection</guid><pubDate>Sat, 19 Jul 2025 20:42:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tsFePo8o--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Day40%25E3%2580%2591Swift%25C3%2597BEM%25E8%25A8%2598%25E6%25B3%2595%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:keisuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1N6RW9ldTZzVFN5UDFTUEpZazlwSkFDYUVwMGhWeGRQYzVIcHlzeXpKdlBKUGpHcWZ0dz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>keisuke</dc:creator></item></channel></rss>