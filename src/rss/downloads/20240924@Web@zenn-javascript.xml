<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 24 Sep 2024 07:10:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[(React)コンテナー・プレゼンテーションパターンの設計]]></title><description><![CDATA[
 概要
業務委託で4社以上経験がありますが、だいたいどこの現場でも、フロントエンドの設計は、「雰囲気で運用している」ことが多かったです。
なので、今回はコンテナープレゼンテーションパターンについて、本気出して考えてみました！
Reactの設計についてはこの動画がよかったです！
コンテナープレゼンテーションパターンは、この記事が一番しっくりきました。
https://zenn.dev/morinokami/books/learning-patterns-1/viewer/presentational-container-pattern#コンテナ・プレゼンテーションパターン

React ...]]></description><link>https://zenn.dev/rsugi/articles/1c200186e3a0e3</link><guid isPermaLink="true">https://zenn.dev/rsugi/articles/1c200186e3a0e3</guid><pubDate>Tue, 24 Sep 2024 05:55:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4F1Dtp9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2528React%2529%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2583%25BC%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25BC%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E3%2581%25AE%25E8%25A8%25AD%25E8%25A8%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:r-sugi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M0YTAwZTQ1YmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>r-sugi</dc:creator></item><item><title><![CDATA[純粋な静的ファイルのサイトで共通レイアウトを実現する]]></title><description><![CDATA[フレームワークやビルドプロセス無しの純粋な静的なHTMLファイルをベースにしたサイトで、共通レイアウトを適用したい欲望にときどきかられます。
方法はいろいろありますが、クライアントサイドでのレイアウトの描画を遅延やちらつき無しにおこなうことや、こういった場合にコンテンツデータをどのように定義するのかを考えると、なかなか難しく、実際に自分が作ったライブラリをもとに紹介します。
デモ https://ksk1015.github.io/render-layout-js/
リポジトリ https://github.com/ksk1015/render-layout-js
自分が作成したライブラ...]]></description><link>https://zenn.dev/sizznami/articles/f5775fb885a2f7</link><guid isPermaLink="true">https://zenn.dev/sizznami/articles/f5775fb885a2f7</guid><pubDate>Tue, 24 Sep 2024 05:46:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--XoV1f7tw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25B4%2594%25E7%25B2%258B%25E3%2581%25AA%25E9%259D%2599%25E7%259A%2584%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25A7%25E5%2585%25B1%25E9%2580%259A%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ksk1015%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA1YWZkZTlkZDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ksk1015</dc:creator></item><item><title><![CDATA[React ダイアログ(モーダル)コンポーネントでも window.confirm の使い心地を実現]]></title><description><![CDATA[
 概要
window.confirm はすごく便利な API です。自動で確認ダイアログを出し、ユーザーが承認またはキャンセルするまで処理を待機し、確定したら結果を教えてくれます。
しかし実際の開発ではデザイナーさんが考えて作ってくれたデザインを実現するために window.confirm は利用せず、自前で確認ダイアログ(モーダル)を用意する、、、なんて場合も多いのではないでしょうか？
本記事では React のダイアログコンポーネントで window.confirm のような使い心地を実現する方法(デモあり)を紹介します。
今回は TODO アプリのタスク削除機能を想定し、タスクの...]]></description><link>https://zenn.dev/k0rosuke/articles/0ee743045a346c</link><guid isPermaLink="true">https://zenn.dev/k0rosuke/articles/0ee743045a346c</guid><pubDate>Tue, 24 Sep 2024 04:36:17 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DOXM29Pz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E3%2583%2580%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25AD%25E3%2582%25B0%2528%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%2529%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A7%25E3%2582%2582%2520window.confirm%2520%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%25BF%2583%25E5%259C%25B0%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:korosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmODcxM2MxMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>korosuke</dc:creator></item><item><title><![CDATA[semantic-release による継続的デリバリー（CD）の最適な設計を考える]]></title><description><![CDATA[
 これはなに
semantic-release と GitHub を使ってソフトウェアパッケージの継続的デリバリー（CD）を構築するうえで留意すべきポイントと、それらを踏まえた最適なリリースワークフローを考えるものです。

 背景情報
一般的に Node.js といったソフトウェアパッケージのリリースプロセスには、次のバージョン番号の決定、CHANGELOGやリリースノートの生成、パッケージの公開など、多くのステップが必要です。 semantic-releaseは、Semantic Versioning（SemVer2）に基づいてこれらのリリース・プロセスを自動化するツールですが、これ...]]></description><link>https://zenn.dev/wakamsha/articles/optimal-architecture-for-cd-with-semantic-release</link><guid isPermaLink="true">https://zenn.dev/wakamsha/articles/optimal-architecture-for-cd-with-semantic-release</guid><pubDate>Tue, 24 Sep 2024 03:31:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OavJCq0_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:semantic-release%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E7%25B6%2599%25E7%25B6%259A%25E7%259A%2584%25E3%2583%2587%25E3%2583%25AA%25E3%2583%2590%25E3%2583%25AA%25E3%2583%25BC%25EF%25BC%2588CD%25EF%25BC%2589%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E3%2581%25AA%25E8%25A8%25AD%25E8%25A8%2588%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wakamsha%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2psYURiOW50NGN1UTUweE54dmxHcW50Rkxsbkg1VThSWUFZOUtBakE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wakamsha</dc:creator></item><item><title><![CDATA[tsupでUMDモジュールを作成する]]></title><description><![CDATA[tsupでUMDモジュール作りたかったので検証しました。
結論はesbuild-plugin-umd-wrapperを使う事でUMDモジュールを作成できました。

 tsup.config.ts の設定
esbuild-plugin-umd-wrapperを使います。
既存の形式の出力方法も維持したかったので、tsupのコードにあった defaultOutExtension() をコピペしています。
https://github.com/monakamon/make-umd-by-tsup/blob/main/libs/hoge/tsup.config.ts

 ブラウザからの読み込み
...]]></description><link>https://zenn.dev/monakamon/articles/tsup-umd-build-tips</link><guid isPermaLink="true">https://zenn.dev/monakamon/articles/tsup-umd-build-tips</guid><pubDate>Tue, 24 Sep 2024 00:21:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---hHmQ1c2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:tsup%25E3%2581%25A7UMD%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:monakamon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzY2M3NTJjNTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>monakamon</dc:creator></item><item><title><![CDATA[Javascript で簡単に group by ができるようになったってマジ？]]></title><description><![CDATA[
 はじめに
先日、フロントエンドの開発中に、配列をグルーピングする必要が出てきたので、サンプルコードを探すためにJavascript groupbyで検索をかけていました。[1]
検索結果を見て驚いたことに、いつの間にかJavascript自体にgroup byが実装されていたのです！！
感動が薄れる前に、記事にさせていただきます🙌

 対象読者

何かしらの言語で配列のgroup byを知っている（SQLは除く）
Javascriptの基本的な言語知識がある
Javascprit（Typescript）で手軽にgroup byができなくて悩ましい


 これが Javascript ...]]></description><link>https://zenn.dev/agent_grow/articles/dead78ddb3386d</link><guid isPermaLink="true">https://zenn.dev/agent_grow/articles/dead78ddb3386d</guid><pubDate>Mon, 23 Sep 2024 23:30:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CnZ5Muse--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Javascript%2520%25E3%2581%25A7%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%2520group%2520by%2520%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%259E%25E3%2582%25B8%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2581%25A6%25E3%2582%258B%25E3%2582%2582%25E3%2581%25A8%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NkMDljNjAyYTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Agent%2520Grow%2520Tech%2520Notes%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzNmRmZWMxYmIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>てるもと</dc:creator></item><item><title><![CDATA[Webパフォーマンス向上のためのJS優先度付け実行メソッド比較: 使い分けガイド]]></title><description><![CDATA[
 JSの実行について
ユーザーのメインスレッドを闇雲に奪わないことは、重要です。
(今年からCWVにINPが追加され、SEO的に従来のFIDよりも厳しい基準で評価されているかと思います)
その際に特定の処理によって、メインスレッドを阻害しないことが大事ですが、
JavaScriptには、Promiseをはじめ、requestIdleCallback、queueMicrotask、Prioritized Task Scheduling APIなど、優先度を変更を実現する方法がいくつもあります。選択肢が多いため、どれを選ぶべきか迷うことがあります。この記事では、メインスレッド上での優先度付...]]></description><link>https://zenn.dev/anpan/articles/f66bb90ec0c322</link><guid isPermaLink="true">https://zenn.dev/anpan/articles/f66bb90ec0c322</guid><pubDate>Mon, 23 Sep 2024 10:56:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GYqaM1ED--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E5%2590%2591%25E4%25B8%258A%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AEJS%25E5%2584%25AA%25E5%2585%2588%25E5%25BA%25A6%25E4%25BB%2598%25E3%2581%2591%25E5%25AE%259F%25E8%25A1%258C%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E6%25AF%2594%25E8%25BC%2583%253A%2520%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:anpan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKeWo0dUFTRUQ4N2tkZ1BwaGJvSGJZb2FsdnpFYVNwMkJSUEhkX2E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>anpan</dc:creator></item><item><title><![CDATA[Node.js ハンズオン 1 〜 3章まとめ]]></title><description><![CDATA[随分前に読んだ本ですが、再入門しようと思って読み直しています。
その内容を投稿しようと思っています。
自分の理解が浅いところだけまとめていますので、網羅的ではないですが備忘録として記事にしました！

 第1章 イントロダクション

 クラス継承と prototype について
JavaScriptには、クラス継承を実現する仕組みとして prototype があります。各クラスには class.prototype.method という形でメソッドを追加することができ、オブジェクトがそのクラスのインスタンスかどうかを instanceof 演算子で検証できます。
また、prototype を...]]></description><link>https://zenn.dev/kimikimi/articles/589026b3eeadbc</link><guid isPermaLink="true">https://zenn.dev/kimikimi/articles/589026b3eeadbc</guid><pubDate>Mon, 23 Sep 2024 08:15:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--RUoz99k6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%2520%25E3%2583%258F%25E3%2583%25B3%25E3%2582%25BA%25E3%2582%25AA%25E3%2583%25B3%25201%2520%25E3%2580%259C%25203%25E7%25AB%25A0%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kimikimi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2laaTRqNDJRbXJXdzUyNEFqQlJMdUpoNFExT2w2MWJBeE9mR1o0UXMwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kimikimi</dc:creator></item><item><title><![CDATA[ファイルのアップロード機能：ファイル名の設定]]></title><description><![CDATA[Next.jsとsupabaseで個人開発をしています。その中で、ファイルをアップロードする機能を作成しています。アップロードできないファイル名(eapⅡ.mp4など)があったため解決方法をまとめました。

 ファイル名の設定

index.ts
const sanitizedFileName=file.name.replace(/[^a-z0-9]/gi,'_').toLowerCase();
//aからz,0から9,アンダースコアなどの文字列を以外の文字を除外する
const lastDotIndex=sanitizedFileName.lastIndexOf('.');//sani...]]></description><link>https://zenn.dev/maiamitorio/articles/b1764f7265ae09</link><guid isPermaLink="true">https://zenn.dev/maiamitorio/articles/b1764f7265ae09</guid><pubDate>Mon, 23 Sep 2024 01:26:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jWjXHUP_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E6%25A9%259F%25E8%2583%25BD%25EF%25BC%259A%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E5%2590%258D%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:maiamitorio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwZmEwOTA0ZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>maiamitorio</dc:creator></item><item><title><![CDATA[[JavaScript] チェックボックスによるボタンの活性/非活性の切り替え]]></title><description><![CDATA[
 はじめに
この記事では、Webサイトの「利用規約への同意」等で使用される、チェックボックスによるボタンの活性/非活性の切り替えのJavaScriptでの実装方法をまとめていきます。

 1. HTMLファイルの編集
&lt;input type="checkbox" id="agreement-check"&gt;
&lt;label for="agreement-check"&gt;&lt;a href="#" target="_brank"&gt;利用規約&lt;/a&gt;に同意する&lt;/label&gt;
&lt;button type="submit" value="登...]]></description><link>https://zenn.dev/aew2sbee/articles/javascript-checkbox</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/javascript-checkbox</guid><pubDate>Sun, 22 Sep 2024 13:11:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PqQMyY6l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%2520%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259C%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%25AE%25E6%25B4%25BB%25E6%2580%25A7%252F%25E9%259D%259E%25E6%25B4%25BB%25E6%2580%25A7%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%259B%25BF%25E3%2581%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[CORSでCookieの送受信をする]]></title><description><![CDATA[
 CORS（Cross-Origin Resource Sharing）とは
ブラウザーに実装されているJavaScriptは、同じオリジンにしかアクセスできない。これを同一(Same)オリジン(Origin)ポリシー(Policy)という。この同一オリジンポリシーの制限（セキュリティ）を緩和することをCORSという。
クロス(Cross)オリジン(Origin)とは、異なるオリジン間ということ。オリジンの定義は後述。
リソース(Resource)をシェアする(Sharing)とは、DOMやJSONなどのリソースを使うことを許可すること。
普通にWebアプリを開発していると、同一オリジ...]]></description><link>https://zenn.dev/tomoakinagahara/articles/d6f186d5385112</link><guid isPermaLink="true">https://zenn.dev/tomoakinagahara/articles/d6f186d5385112</guid><pubDate>Sun, 22 Sep 2024 10:26:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VqvSX3-b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CORS%25E3%2581%25A7Cookie%25E3%2581%25AE%25E9%2580%2581%25E5%258F%2597%25E4%25BF%25A1%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Tomoaki%2520Nagahara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czREt6Z1p1U3hEcGVZaFY1ajhJSjNmTzFZODlMLXg3bVJxcFU1Q0E9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Tomoaki Nagahara</dc:creator></item><item><title><![CDATA[try catchの使い方メモ]]></title><description><![CDATA[
 Summary

闇雲に広範囲をtry catchで囲わない
関連性の高い処理は1つのtry catchで
コケても良い処理とか影響範囲とか

コードレビューでtry catchの使い方についてフィードバックを受けたことを思い出したので自分の復習がてらまとめです。

 Not Good： 広すぎるtry catch
私がやっていたのはこれ。闇雲に広いスコープをtry catchで囲っていたつもりはないのですが、もっと細かくしたほうが良いとフィードバックを受けました。
広すぎると何が良くないかというと、「catchブロック内でエラーの内容に応じてどの部分の処理でコケたかを判別し、対処す...]]></description><link>https://zenn.dev/gekitenius/articles/js_try_catch</link><guid isPermaLink="true">https://zenn.dev/gekitenius/articles/js_try_catch</guid><pubDate>Sun, 22 Sep 2024 08:08:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s33xFJkO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:try%2520catch%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Gekitenius.Y%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRhMjM5OGQwYjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Gekitenius.Y</dc:creator></item><item><title><![CDATA[React のダブルクリック（多重クリック）対策一覧]]></title><description><![CDATA[
 概要
React アプリにおけるダブルクリック（多重クリック）対策の実装とそのデモを一覧でまとめてみました。コーディングのヒントになれば幸いです。
※本記事で紹介する実装は React SPA アプリを想定し、ボタンに対するダブルクリックに焦点を当てています。

 ダブルクリックの問題点
ダブルクリックで問題となるのがクリックアクションに紐づく API 呼び出しが複数回行われてしまうことです。
API 側で問題にならないよう設計されてれば安心ですが（トークンを利用するなど）、そうでなかったりそもそも API 側で対策すること自体が難しい場合もあるかもしれません。
今回は TODO ア...]]></description><link>https://zenn.dev/k0rosuke/articles/eab514e4920778</link><guid isPermaLink="true">https://zenn.dev/k0rosuke/articles/eab514e4920778</guid><pubDate>Sun, 22 Sep 2024 07:48:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9KYl4ARF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520%25E3%2581%25AE%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2588%25E5%25A4%259A%25E9%2587%258D%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25EF%25BC%2589%25E5%25AF%25BE%25E7%25AD%2596%25E4%25B8%2580%25E8%25A6%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:korosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmODcxM2MxMTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>korosuke</dc:creator></item><item><title><![CDATA[[JavaScript] 一文字ずつ時間差で表示するアニメーション]]></title><description><![CDATA[
 はじめに
この記事では、Webページ上でテキストを一文字ずつ表示するアニメーションの実装方法をまとめます。

 結論
JavaScriptによって指定した要素を一文字ずつspanで囲い、styleを変更(opacityの値を0→1に)することで、一文字ずつ表示するアニメーションを実装しました。
この記事では、Webページ上でテキストを一文字ずつ表示するアニメーションの実装方法をまとめます。

 やり方

 1. HTMLファイルの編集
&lt;div&gt;
    &lt;p class="js-text"&gt;Welcome to TECHLOG.&lt;/p&gt;
&lt;...]]></description><link>https://zenn.dev/aew2sbee/articles/javascript-timelag-animation</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/javascript-timelag-animation</guid><pubDate>Sat, 21 Sep 2024 11:24:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k6e_n-5t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BJavaScript%255D%2520%25E4%25B8%2580%25E6%2596%2587%25E5%25AD%2597%25E3%2581%259A%25E3%2581%25A4%25E6%2599%2582%25E9%2596%2593%25E5%25B7%25AE%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%258B%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%25E3%2582%258B%25E3%2581%259F%2520%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YTFYdHhmWGZPVmpKek9sTnQ0cDZmaWQyeENLMTlKOEl0akpQczZiZz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふるた なおき🥝</dc:creator></item><item><title><![CDATA[Drag & Drop APIのイベントの整理]]></title><description><![CDATA[業務の中で、ドラッグ&amp;ドロップを実装する機会があり、
イベントの種類がそこそこあったので、知識を整理しておきます。
この記事では、HTMLのDrag &amp; Drop APIの定義を整理した上で、
最後に実際に動かして理解できるコードを書くという流れにします。

 Drag &amp; Drop APIの各種イベント
主要なイベントについて整理します。
以下の表のようになります。



イベント
定義
備考




drag
ドラッグ対象の要素がドラッグされている間に発生し続ける
数百ミリ秒間隔で発生するので、常に発生している感覚


dragstart
ドラッグ対象の要素を...]]></description><link>https://zenn.dev/ohimusdev46301/articles/31694de152daf9</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/31694de152daf9</guid><pubDate>Sat, 21 Sep 2024 10:16:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o0CXZbbq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Drag%2520%2526%2520Drop%2520API%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%2595%25B4%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[最大寸法に制限されずにスクロール可能なcanvasを描画する方法]]></title><description><![CDATA[
 背景
canvasには描画領域の最大寸法が存在する。
この寸法を超えた場合、canvasが利用できなくなる。
以下はMDNのこちらのページから引用。
この表を見ると、x軸方向とy軸方向ともに最大30000px程度しか利用できない。
※IEはサポート終了のため。
最大面積も設定されているため、正方形に近い形で利用するならx軸方向とy軸方向ともに最大16000px程度となる。



ブラウザー
最大高
最大幅
最大面積




Chrome
32,767 pixels
32,767 pixels
268,435,456 pixels (つまり 16,384 x 16,384)



Fi...]]></description><link>https://zenn.dev/yaona807/articles/a1864ff0ac2e88</link><guid isPermaLink="true">https://zenn.dev/yaona807/articles/a1864ff0ac2e88</guid><pubDate>Sat, 21 Sep 2024 09:26:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UZXcj61W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%2580%25E5%25A4%25A7%25E5%25AF%25B8%25E6%25B3%2595%25E3%2581%25AB%25E5%2588%25B6%25E9%2599%2590%25E3%2581%2595%25E3%2582%258C%25E3%2581%259A%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AAcanvas%25E3%2582%2592%25E6%258F%258F%25E7%2594%25BB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yaona%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS1QxSWFHM1NYaUIxOF9NS1FvTTV4MmpTRHJEeXJfbEFoU3BDTUZWSE5XX1VzRFJSWHU9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yaona</dc:creator></item><item><title><![CDATA[モバイル判定ライブラリ ismobilejs]]></title><description><![CDATA[
 what is ismobilejs?
モバイルかどうかをbooleanを返却する形で判定してくれるライブラリ。
https://www.npmjs.com/package/ismobilejs

 たまにうまく動作しない可能性がある件
今自分が参加しているPJでは、Next.jsにおいてモバイルかどうかを判定するためにismobilejsを使用しているのだが、Chrome等の検証ツールで動作を確認してみると、iPad Air, iPad Proではモバイルであるにも関わらずfalse（モバイルではない判定）を返してくる。しかしiPad MiniではTrueを返す。（モバイル判定）
...]]></description><link>https://zenn.dev/senakobayashi/articles/1f373107ce253f</link><guid isPermaLink="true">https://zenn.dev/senakobayashi/articles/1f373107ce253f</guid><pubDate>Sat, 21 Sep 2024 08:35:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b1eIr-cn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%2590%25E3%2582%25A4%25E3%2583%25AB%25E5%2588%25A4%25E5%25AE%259A%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%2520ismobilejs%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sena%2520Kobayashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwYzUwMzJjZTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sena Kobayashi</dc:creator></item><item><title><![CDATA[【JavaScript】正規表現を手軽に扱うための基礎入門]]></title><description><![CDATA[
 モチベーション

正規表現を敬遠していたが扱えるようになりたい
文字列一致しているかを実装する時に使いたい

郵便番号や電話番号
HTMLパース
ログ解析
など


VSCodeなどのエディタで検索する時に使えると便利


 環境

macOS: Sonoma
言語: JavaScript

※プログラム言語によって仕様が異なる部分があるので、よく使うことが多そうなJavascriptを用いて検証していきます


node: 21.4.0


 指定した文字列に一致
文字列
console.log(/abc/.test("aaaa"))
// false
console.log(/a...]]></description><link>https://zenn.dev/takuty/articles/7938a319a45077</link><guid isPermaLink="true">https://zenn.dev/takuty/articles/7938a319a45077</guid><pubDate>Sat, 21 Sep 2024 03:49:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uZjvh9lD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2582%2592%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Takuty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JjYjE0OTVjMjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Takuty</dc:creator></item><item><title><![CDATA[フローティングバナーの作り方]]></title><description><![CDATA[サイトの下部に、追従してくるバナーを見たことはありませんか。
フローティングバナーなどと呼ばれているこの要素は、とても少ない JavaScript で実装できます。

 コード


 HTML
close-buttonの中にあるspanで×印を作っています。
&lt;div class="l-container"&gt;
  &lt;div class="floating-banner"&gt;
    &lt;div class="floating-banner__inner"&gt;
      &lt;img class="ebi" src="./img/ebi.png" alt=...]]></description><link>https://zenn.dev/928sekine/articles/8bf94df6de6b68</link><guid isPermaLink="true">https://zenn.dev/928sekine/articles/8bf94df6de6b68</guid><pubDate>Sat, 21 Sep 2024 03:31:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AQ8pScfM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%2590%25E3%2583%258A%25E3%2583%25BC%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259B%25E3%2581%258D%25E3%2581%25AD%25E3%2582%258A%25E3%2581%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyNDQ3MGIzZjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>せきねりな</dc:creator></item><item><title><![CDATA[WixStudioでVeloを使う Step 32 「郵便番号から住所を入力」]]></title><description><![CDATA[
 はじめに

郵便番号を入力すると住所が自動入力されるフォームをよく見かける。これを今回はWixStudioで実現する。ウェブサイトにこのようなフォームを組み込むにはJavascriptを利用するが、それなりに手順や情報を容易に取得出来るので組み込みに苦労することは少ない。応用すればWixStudioにも同様の仕組みを用意することが出来る。でも、ちょっと考えた。WixStudioにはWixStudioに向いた組み込み方があるのではないだろうか。今回はこれを研究する。

 目的
WixStudio版郵便番号を入力すると住所が自動入力されるフォームを作成する。

 準備
特別な要素は使わな...]]></description><link>https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0032</link><guid isPermaLink="true">https://zenn.dev/niibori/articles/veloonwixstudio-beginner-0032</guid><pubDate>Fri, 20 Sep 2024 13:38:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--hMcR309i--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WixStudio%25E3%2581%25A7Velo%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520Step%252032%2520%25E3%2580%258C%25E9%2583%25B5%25E4%25BE%25BF%25E7%2595%25AA%25E5%258F%25B7%25E3%2581%258B%25E3%2582%2589%25E4%25BD%258F%25E6%2589%2580%25E3%2582%2592%25E5%2585%25A5%25E5%258A%259B%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Niibori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U4ZDA4Mjg3YTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Niibori</dc:creator></item></channel></rss>