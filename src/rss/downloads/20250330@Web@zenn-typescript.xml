<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 30 Mar 2025 09:33:00 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[mono-event: TypeScript / JavaScriptのイベント処理をシンプルで安全にする]]></title><description><![CDATA[こんにちは！ 普段お仕事でWeb開発をしてるみいぬです。最近、長らく「こんなのがあったらな…」と温めていたイベント管理ライブラリ mono-event を作ってみました。
最近のフロントエンド界隈はReactなどのフレームワーク中心で、イベント管理ライブラリはちょっと地味な印象かもしれません。でも、ゲーム開発やライブラリ開発、バックエンド、ツール開発なんかで少し複雑なことをしようとすると、しっかりしたイベント管理の仕組みが途端に欲しくなるんですよね...
私自身、普段そこそこ規模の大きいWeb上の3Dアプリ開発に携わっていて、「型安全に書きたいのに any だらけになる...」「かといっ...]]></description><link>https://zenn.dev/yukimi_inu/articles/5f9828920674fc</link><guid isPermaLink="true">https://zenn.dev/yukimi_inu/articles/5f9828920674fc</guid><pubDate>Sun, 30 Mar 2025 05:32:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pyBEwFsI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:mono-event%253A%2520TypeScript%2520%252F%2520JavaScript%25E3%2581%25AE%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25A7%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%2584%25E3%2581%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RjMzg0OGNlOTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みいぬ</dc:creator></item><item><title><![CDATA[よく見かけるウェブアクセシビリティ違反（from エンジニア目線）]]></title><description><![CDATA[
 はじめに
こんにちは、株式会社 Kiva の uchida です。業務では企業の Web アクセシビリティ対応を効率化支援する「ユニウェブ」の開発をしています。
このブログでは、日々の開発やウェブ利用の中で気づいたアクセシビリティ違反の例を紹介します。エンジニアとしてアクセシビリティに配慮することは、ユーザー体験の向上だけでなく、より多くの人に情報を届けるためにとても重要なことです。
※なお、規格という観点では代替手段が備わっていれば問題ありません。

 ウェブアクセシビリティとは？
ウェブアクセシビリティとは、障がいの有無や利用環境に関わらず、すべての人がウェブサイトを快適に利用で...]]></description><link>https://zenn.dev/kiva/articles/6325fe5077322d</link><guid isPermaLink="true">https://zenn.dev/kiva/articles/6325fe5077322d</guid><pubDate>Sun, 30 Mar 2025 05:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SM7Ma_fc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2588%25E3%2581%258F%25E8%25A6%258B%25E3%2581%258B%25E3%2581%2591%25E3%2582%258B%25E3%2582%25A6%25E3%2582%25A7%25E3%2583%2596%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B7%25E3%2583%2593%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E9%2581%2595%25E5%258F%258D%25EF%25BC%2588from%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E7%259B%25AE%25E7%25B7%259A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:uchidash%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM4OTI5MTk5ZGUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Kiva%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNjdLYXh0U0p0UnlhUkVmN1pwNnI5V242emlTUURXLVNzbTI2NDk9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uchidash</dc:creator></item><item><title><![CDATA[108. Convert Sorted Array to Binary Search Tree]]></title><description><![CDATA[昇順にソートされた整数配列 nums が与えられたとき、それを高さバランスの取れた二分探索木（BST）に変換します。


 例1:
入力:
nums = [-10, -3, 0, 5, 9]
出力:
[0, -3, 9, -10, null, 5]
説明:
以下の形も受け入れ可能です:
[0, -10, 5, null, -3, null, 9]


 例2:
入力:
nums = [1, 3]
出力:
[3, 1]
説明:
以下の形も受け入れ可能です:
[1, null, 3] および [3, 1]


 制約:

1 &lt;= nums.length &lt;= 10^4
-10^...]]></description><link>https://zenn.dev/idapan/articles/cce28a4e62d1f3</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/cce28a4e62d1f3</guid><pubDate>Sat, 29 Mar 2025 21:57:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ax5j8sPP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:108.%2520Convert%2520Sorted%2520Array%2520to%2520Binary%2520Search%2520Tree%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[【JavaScript】JSDocで@ts-checkを使うときの@templateにデフォルト型を指定する【TypeScript】]]></title><description><![CDATA[なぜかTypeScript公式のJSDocリファレンスに書かれておらず、「jsdoc ts-check template default」で検索しても出てこなかったので、一応メモを残しておく。
@templateのデフォルト型を指定するには@template [TypeArgName=DefaultType]と書く。
例えば以下のTypeScriptコード相当のts-checkを書くには
type Identity&lt;T = number&gt; = T
const foo: Identity = 10
以下のように書く。
/**
 * @template [T=number]
 *...]]></description><link>https://zenn.dev/aiya000/articles/4930cfd3a50e22</link><guid isPermaLink="true">https://zenn.dev/aiya000/articles/4930cfd3a50e22</guid><pubDate>Sat, 29 Mar 2025 17:53:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MTZUPgYG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591JSDoc%25E3%2581%25A7%2540ts-check%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%2540template%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E5%259E%258B%25E3%2582%2592%25E6%258C%2587%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590Ty...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%2584%25E3%2582%2584%2520-%2520aiya000%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pZVUM0QXdxcVdtMVZmVWtiQXFzdE5ra1BFZU1FOUN0NFY1UzdiPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あいや - aiya000</dc:creator></item><item><title><![CDATA[useMemoに非同期処理を書いてはいけない理由]]></title><description><![CDATA[恥ずかしながら最近知ったので、備忘録としてまとめておきます...

 発端
例えば以下のようなコードを書いたとします。
const fetchData = () =&gt; {
  return new Promise((resolve) =&gt; {
    setTimeout(() =&gt; {
      console.log("非同期処理が完了しました");
      resolve("非同期データ");
    }, 1000);
  });
};

const result = useMemo(() =&gt; {
  fetchData().then(() =&g...]]></description><link>https://zenn.dev/muship/articles/cd4a54ba574f96</link><guid isPermaLink="true">https://zenn.dev/muship/articles/cd4a54ba574f96</guid><pubDate>Sat, 29 Mar 2025 14:55:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9UquJucc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:useMemo%25E3%2581%25AB%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E6%259B%25B8%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25AF%25E3%2581%2584%25E3%2581%2591%25E3%2581%25AA%25E3%2581%2584%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:muship%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjYjM0YjgzZWMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>muship</dc:creator></item><item><title><![CDATA[【React】Props のバケツリレー解消法について]]></title><description><![CDATA[
 はじめに
Reactでは、コンポーネント間のデータの受け渡しにおいて、propsのバケツリレーの問題がよく発生することがあります。
バケツリレーとは、あるコンポーネントから別のコンポーネントに props を渡す際に、複数の中間コンポーネントを経由して渡しているだけの状態をいいます。
なぜこのような問題が発生するかというと、React では「単方向データフロー」を採用していて、コンポーネント間で直接データをやり取りすることができないためだからです。
Context API や状態管理ライブラリで解消する方法もありますが、props を渡すだけの分かりやすいコンポーネントを作成すること...]]></description><link>https://zenn.dev/rh820/articles/bd8e97fd315cfa</link><guid isPermaLink="true">https://zenn.dev/rh820/articles/bd8e97fd315cfa</guid><pubDate>Sat, 29 Mar 2025 08:19:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OQjqfdjX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591Props%2520%25E3%2581%25AE%25E3%2583%2590%25E3%2582%25B1%25E3%2583%2584%25E3%2583%25AA%25E3%2583%25AC%25E3%2583%25BC%25E8%25A7%25A3%25E6%25B6%2588%25E6%25B3%2595%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hodii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhjM2JkYzhiZTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hodii</dc:creator></item><item><title><![CDATA[話題のMCPサーバーを自作して、自然言語でTestRailを操作してみた]]></title><description><![CDATA[こんにちは。ダイの大冒険ガチ勢のbun913と申します。
みなさんはMCPという外部システムやDBとの連携などを標準化するプロトコルをご存知ですか？
https://zenn.dev/cloud_ace/articles/model-context-protocol
私も全然知らなかったのですが、今回自然言語で TestRail というテストケースやテスト実行結果などのマネジメントツールと連携できるツールを自作してみました。
https://github.com/bun913/mcp-testrail

 デモ
非常に簡単にいうと、Claude Desktop や Cursor のような...]]></description><link>https://zenn.dev/moneyforward/articles/6c439bab3cb0f4</link><guid isPermaLink="true">https://zenn.dev/moneyforward/articles/6c439bab3cb0f4</guid><pubDate>Sat, 29 Mar 2025 07:05:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YM3OuxyL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AEMCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7TestRail%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:bun913%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwOTQ4MTI2ZjguanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Money%2520Forward%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcxNGVhMDEyMDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bun913</dc:creator></item><item><title><![CDATA[【React】export default function ホイスティングによるエラー]]></title><description><![CDATA[Reactを使う場合に、export default functionのホイスティングによって起こり得る予期しない動作やエラーについて、具体的なケースを挙げて説明します。ホイスティング自体は便利である一方で、特に複雑な構造を持つプロジェクトでは、予期せぬエラーが発生することがあります。

 問題

 1. 関数コンポーネントの定義順序に依存する問題
Reactコンポーネントをexport default functionで定義すると、その関数はホイスティングされるため、コンポーネントを定義する前に呼び出すことができてしまいます。これは通常、Reactコンポーネント内では問題ないのですが、...]]></description><link>https://zenn.dev/milkandhoney995/articles/97e4eddd7df0ae</link><guid isPermaLink="true">https://zenn.dev/milkandhoney995/articles/97e4eddd7df0ae</guid><pubDate>Sat, 29 Mar 2025 05:23:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V2tvmSpp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%25E3%2580%2591export%2520default%2520function%2520%25E3%2583%259B%25E3%2582%25A4%25E3%2582%25B9%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2594%25E3%2581%25BE%25E3%2581%25A0%25E3%2582%2593%25E3%2581%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNll4Y2RIakdmaEpuUGI2MkVmaXBRRmFlRG85X0ZaMFpic0lrS3Btdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごまだんご</dc:creator></item><item><title><![CDATA[export default function, export default constどっち？]]></title><description><![CDATA[
 はじめに
Next.jsで開発していて、appフォルダ内のファイルはexport default functionとexport default constどちらで記載した方が良いのか？と思い、それぞれの違いをまとめてみました。

 ホイスティングについて
両者の違いは、ホイスティングされるかどうかです。
ホイスティング（持ち上げる（hoisted））とは、関数宣言や変数宣言がそのスコープの先頭に移動したように振る舞うというJavaScriptの仕組みです。

 関数宣言
関数宣言は、関数が宣言された場所に関わらず使えるようになるのは、関数宣言がスコープの先頭に「持ち上げられる」から...]]></description><link>https://zenn.dev/milkandhoney995/articles/c96fd441475e43</link><guid isPermaLink="true">https://zenn.dev/milkandhoney995/articles/c96fd441475e43</guid><pubDate>Sat, 29 Mar 2025 05:09:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--8lbRGwsq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:export%2520default%2520function%252C%2520export%2520default%2520const%25E3%2581%25A9%25E3%2581%25A3%25E3%2581%25A1%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2594%25E3%2581%25BE%25E3%2581%25A0%25E3%2582%2593%25E3%2581%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNll4Y2RIakdmaEpuUGI2MkVmaXBRRmFlRG85X0ZaMFpic0lrS3Btdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ごまだんご</dc:creator></item><item><title><![CDATA[【Nextjs ✖️ Amazon Rekognition 】顔分析アプリを作って遊んでみた]]></title><description><![CDATA[
 はじめに
今回、顔認証機能を実装するためにAmazon Rekognitionを使用する機会がありました。
当初は顔認証について記事を書こうと考えていましたが、コードや説明が長くなりそうだったため、内容をシンプルにして「顔分析」に焦点を当てることにしました。
Next.js 15（App Router）とAmazon Rekognitionを使って、サクッと顔分析アプリを作成します。

 Amazon Rekognitionについて
Amazon Rekognitionは、AWSが提供する機械学習ベースの画像・動画分析サービスです。画像や動画から物体、人物、テキスト、シーン、アクティ...]]></description><link>https://zenn.dev/ktraw1574/articles/bdcf65ff91b73a</link><guid isPermaLink="true">https://zenn.dev/ktraw1574/articles/bdcf65ff91b73a</guid><pubDate>Sat, 29 Mar 2025 04:38:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A4H4mj56--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Nextjs%2520%2520%2520Amazon%2520Rekognition%2520%25E3%2580%2591%25E9%25A1%2594%25E5%2588%2586%25E6%259E%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E9%2581%258A%25E3%2582%2593%25E3%2581%25A7%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ktraw1574%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1ZjE0YzM4NjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ktraw1574</dc:creator></item><item><title><![CDATA[Difyのワークフローエディタの実装をみてみよう]]></title><description><![CDATA[
 はじめに
DifyはオープンソースのLLMアプリケーション開発プラットフォームです。
機能のひとつとしてワークフローがあり、ユーザーがAIワークフローを視覚的に構築できるようになっています。これがどのように実装されているのか、個人的に気になっているポイントを中心に調査しました。
https://github.com/langgenius/dify

 全体構造
ワークフローエディタはReactFlowをコアとして以下の主要コンポーネントで構成されている。


WorkflowContainer - メインコンテナコンポーネント。ReactFlowProviderでラップされており、ワ...]]></description><link>https://zenn.dev/koyo_k0/articles/95d1ec496e2781</link><guid isPermaLink="true">https://zenn.dev/koyo_k0/articles/95d1ec496e2781</guid><pubDate>Sat, 29 Mar 2025 03:21:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZuySLUkf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dify%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E3%2581%25BF%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:koyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg4ZDM0MjIwMmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koyo</dc:creator></item><item><title><![CDATA[[Cline] Memory Bank を一括読み込みする MCP を作ってみた]]></title><description><![CDATA[
 TL;DR

Cline の Memory Bank は複数ファイルの読み込みが必要で、毎チャット5回程度のチャットのラリーが発生する
MCP で簡単なツールを作り、一回のやり取りで前ファイルの読み込みが可能になった。
MCP は一種の Custom Instructions のようにも使える


 課題
Cline で Memory Bank という、Cline にプロジェクトの知識を外部化して持たせるプラクティスがあるが、これをやっていると毎回チャットの初めにファイルの読み込みためのラリーが発生してしまいます。

これは Cline が使える read_file というツールが単...]]></description><link>https://zenn.dev/heavenosk/articles/memory-bank-mcp-loader</link><guid isPermaLink="true">https://zenn.dev/heavenosk/articles/memory-bank-mcp-loader</guid><pubDate>Sat, 29 Mar 2025 02:35:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YQ4CU58T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BCline%255D%2520Memory%2520Bank%2520%25E3%2582%2592%25E4%25B8%2580%25E6%258B%25AC%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%2599%25E3%2582%258B%2520MCP%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2598%25E3%2583%2596%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhmNDMxNmYwYzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ヘブン</dc:creator></item><item><title><![CDATA[Expoを体験しよう]]></title><description><![CDATA[このマークご存知ですか？
Expoと呼ばれているReact Nativeを使いやすくしたものですね。最近生成AIを使ったサービスでも作れるようになってきておりこれから伸びるのではないかと注目されているツールです。

特徴といえば、TypeScriptを使ってモバイルアプリ、Webアプリ、デスクトップアプリを開発することができます。Expo Goと呼ばれているアプリを使用すれば実機でQRコードを読み取るだけでビルドすることもできます。

タイトルの通り体験するレベルなのでより専門に勉強されたい方は、Udemyや公式チュートリアルを繰り返してアプリを作ってみると良いでしょう。

以前、Expoの本を作ったのですがもっと簡略化できそうなところがあったので新しく作ることにしました。

対象者
・iOS/Androidの知識がある
・Reactの知識がある
・TypeScriptの知識がある

著者: JboyHashimoto]]></description><link>https://zenn.dev/joo_hashi/books/6eab81bdb41a10</link><guid isPermaLink="true">https://zenn.dev/joo_hashi/books/6eab81bdb41a10</guid><pubDate>Sat, 29 Mar 2025 01:57:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R8Uxc3ew--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iY2Y3ZTcwNTFhLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>JboyHashimoto</dc:creator></item><item><title><![CDATA[104. Maximum Depth of Binary Tree]]></title><description><![CDATA[2分木の根が与えられたとき、その最大深度を返します。
2分木の最大深度とは、根ノードから最も遠い葉ノードまでの最長パスに含まれるノードの数です。

例1:
入力: root = [3,9,20,null,null,15,7]
出力: 3

例2:
入力: root = [1,null,2]
出力: 2


こちらのコードは、PHPで書かれた2分木の最大深度を求めるためのクラスです。以下で詳しく解説します。

2分木のノードを表すクラスです。

val：ノードの値

left：左の子ノード

right：右の子ノード
コンストラクタでノードを初期化します。


処理の流れ


基底条件：
...]]></description><link>https://zenn.dev/idapan/articles/69ec84268b6314</link><guid isPermaLink="true">https://zenn.dev/idapan/articles/69ec84268b6314</guid><pubDate>Fri, 28 Mar 2025 21:39:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CxtnO2X8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:104.%2520Maximum%2520Depth%2520of%2520Binary%2520Tree%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Keijiro%2520Ida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwYTNmOGUyMGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Keijiro Ida</dc:creator></item><item><title><![CDATA[速習 Valibot]]></title><description><![CDATA[
 はじめに
フクロウラボでは一部のプロダクトでサーバーサイドの言語に TypeScript を採用しています。クライアントサイドからのリクエストや、外部マイクロサービスとのやり取りなどの、サービスの外の世界との接点になる部分では Zod を用いてスキーマによるバリデーションを行っています。
Zod はとても良いライブラリですが、筆者は代替ライブラリである Valibot を好んでおり直近の個人開発では Valibot を第一の選択肢として考えるようにしています。そこで今回は、チームメンバーへの布教も兼ねて Valibot について簡単に紹介したいと思います。

 Valibot とは
...]]></description><link>https://zenn.dev/fukurou_labo/articles/73a75b53597447</link><guid isPermaLink="true">https://zenn.dev/fukurou_labo/articles/73a75b53597447</guid><pubDate>Fri, 28 Mar 2025 09:56:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TLKEhLwI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:%25E9%2580%259F%25E7%25BF%2592%2520Valibot%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:shinshin%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3NGU4Mzc3ZTIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2595%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25A6%25E3%2583%25A9%25E3%2583%259C%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzZTUyMmM0NWQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shinshin</dc:creator></item><item><title><![CDATA[TypeScript で迷路モジュール]]></title><description><![CDATA[
 この記事のスナップショット

ソース
https://github.com/fnamuoo/webgl/blob/main/056

 概要
TypeScript のテスト環境を整備。
以前JavaScriptで書いた迷路モジュールをTypeScriptで書き直しました。
環境構築、インフラ回りの話は陳腐化しやすいのでご注意。
閲覧時に時間がたっていたら、複数の情報／裏付けで確認を。
迷路モジュールの中身については触れません。気になる方はこちらから。
https://zenn.dev/fnamuoo/articles/ebd8f752af9b11
https://zenn.dev/f...]]></description><link>https://zenn.dev/fnamuoo/articles/6fd1d5404d6d83</link><guid isPermaLink="true">https://zenn.dev/fnamuoo/articles/6fd1d5404d6d83</guid><pubDate>Fri, 28 Mar 2025 05:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--VFMZBqdX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%25E8%25BF%25B7%25E8%25B7%25AF%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fnamu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzlINGwtMEpXNk5URF9ORmMybEZ0VDJuVG4zSU1WX2c0WG5OejVzNXhwbXBhcnB3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fnamu</dc:creator></item><item><title><![CDATA[React特有の型定義]]></title><description><![CDATA[ReactをTypeScriptで書いたときの型定義が個人的にややこしかったのでまとめてみます。
すべて挙げるともっとたくさんあるのでしょうが、家計簿アプリ（Udemy教材）を以前作成したときに出てきたものを中心にピックアップしました。

＜目次＞

React.ReactNode
React.FC
React.ChangeEvent
React.MouseEvent
React.Dispatch
React.SetStateAction
React.ComponentType



 1. React.ReactNode
コンポーネントの子要素として渡せるすべての型に対して記述するユニ...]]></description><link>https://zenn.dev/masato24524/articles/9c772857328066</link><guid isPermaLink="true">https://zenn.dev/masato24524/articles/9c772857328066</guid><pubDate>Fri, 28 Mar 2025 02:33:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xGB094sl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E7%2589%25B9%25E6%259C%2589%25E3%2581%25AE%25E5%259E%258B%25E5%25AE%259A%25E7%25BE%25A9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwODU5NjQ1YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masato</dc:creator></item><item><title><![CDATA[Gemini APIを使ってXの投稿を評価・添削するアプリを作ってみた！]]></title><description><![CDATA[
 はじめに
今回は、Gemini APIを使ってSNSの投稿を改善するシンプルなアプリを作りながら、APIの特徴や使い方について紹介していきます。
AIを使った個人開発は初めてなので間違ってる情報などもあるかもしれないです。その際はコメントくださると嬉しいです。

 Gemini APIとは
Gemini APIは、Googleが提供する生成AIのAPIです。

無料枠が比較的大きい（月$10相当）
レスポンスが高速
マルチモーダル（テキスト、画像、音声など）に対応
PaLM 2から大幅に性能向上


 GeminiAPIを使ってアプリを作ってみた
Post PolishというXの投稿...]]></description><link>https://zenn.dev/yukih/articles/edf1c3207e61b5</link><guid isPermaLink="true">https://zenn.dev/yukih/articles/edf1c3207e61b5</guid><pubDate>Fri, 28 Mar 2025 01:11:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2q4iYH7n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gemini%2520API%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6X%25E3%2581%25AE%25E6%258A%2595%25E7%25A8%25BF%25E3%2582%2592%25E8%25A9%2595%25E4%25BE%25A1%25E3%2583%25BB%25E6%25B7%25BB%25E5%2589%258A%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uki884%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uki884</dc:creator></item><item><title><![CDATA[TypeScriptユーザーから見るGoの型]]></title><description><![CDATA[
 ユニオン型について

 TypeScriptのユニオン型
TypeScriptのユニオン型とは、複数の型のいずれかを受け取る型のことです。
let value: string | number;

value = "hello"; // OK（string）
value = 42;      // OK（number）
value = true;    // エラー（booleanは含まれていない）
また、TypeScriptのユニオン型は自由度が高く、リテラル型と組み合わせて使用することができます。
type Status = "success" | "error" | "load...]]></description><link>https://zenn.dev/kiman/articles/173a4fdfbb8d58</link><guid isPermaLink="true">https://zenn.dev/kiman/articles/173a4fdfbb8d58</guid><pubDate>Thu, 27 Mar 2025 21:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--14K2QAYl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E3%2581%258B%25E3%2582%2589%25E8%25A6%258B%25E3%2582%258BGo%25E3%2581%25AE%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258D%25E3%2582%2593%25E3%2582%2586%25E3%2581%25BE%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ3MmYyZmE3MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>きんゆまん</dc:creator></item><item><title><![CDATA[React Native import を絶対パス（エイリアス）で参照する設定]]></title><description><![CDATA[
 はじめに
Reactで開発していると、コンポーネントや関数をインポートする際のパスの指定に苦しむことがよくあると思います。
相対パスで指定する場合、下記のように「..」がたくさん並んで読みにくくなります。
import { Component } from '../../../components/ComponentA'
これは単に読みにくいだけでなく、ファイル構造を変更した際にパスの修正が難しくなるという大きな問題を孕んでいます。
この問題を解決するために「＠」をプロジェクトルートからのエイリアスに設定します。
すると、下記のように常にimportは絶対パスで参照することができます...]]></description><link>https://zenn.dev/akiakinorinori/articles/a6e26a7eeff0d4</link><guid isPermaLink="true">https://zenn.dev/akiakinorinori/articles/a6e26a7eeff0d4</guid><pubDate>Thu, 27 Mar 2025 16:09:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xsH0AY1a--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%2520Native%2520import%2520%25E3%2582%2592%25E7%25B5%25B6%25E5%25AF%25BE%25E3%2583%2591%25E3%2582%25B9%25EF%25BC%2588%25E3%2582%25A8%25E3%2582%25A4%25E3%2583%25AA%25E3%2582%25A2%25E3%2582%25B9%25EF%25BC%2589%25E3%2581%25A7%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%258D%25E3%2581%2582%25E3%2581%258D%25E3%2581%25AE%25E3%2582%258A%25E3%2581%25AE%25E3%2582%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnAyUnVMSF9OSDJreFFVS1lBZmozbHZQX0lZRU5vZ3FiY3M1RW1NRDFNSU1FPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あきあきのりのり</dc:creator></item></channel></rss>