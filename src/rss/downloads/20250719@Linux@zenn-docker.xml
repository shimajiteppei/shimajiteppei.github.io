<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 19 Jul 2025 02:59:44 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[なぜKubernetesが必要なのか？Dockerだけではダメ？K8sとDockerの扱うケース比較]]></title><description><![CDATA[最近のWeb開発やマイクロサービスでは「Docker」や「Kubernetes」の名前が頻出します。
でも、こう思ったことはありませんか？

「Dockerで動いてるならそれでよくない？Kubernetesって複雑じゃない？」
「KubernetesとDockerの違いあまり良く分かってないし、、」

本記事では、Dockerだけでは解決できない運用課題と、それをKubernetes（K8s）がどのように補うのかを、初心者にもわかるように解説します。


 Dockerのすごいところ
まずはDockerの利点をおさらいします。

環境依存をなくせる（どこでも同じ環境で動く）

docke...]]></description><link>https://zenn.dev/rrr068/articles/db17d71ba88665</link><guid isPermaLink="true">https://zenn.dev/rrr068/articles/db17d71ba88665</guid><pubDate>Sat, 19 Jul 2025 01:30:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tjiaOmAG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CKubernetes%25E3%2581%258C%25E5%25BF%2585%25E8%25A6%2581%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259FDocker%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A7%25E3%2581%25AF%25E3%2583%2580%25E3%2583%25A1%25EF%25BC%259FK8s%25E3%2581%25A8Docker%25E3%2581%25AE%25E6%2589%25B1%25E3%2581%2586%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B9%25E6%25AF%2594%25E8%25BC%2583%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BA%2594%25E5%258F%25B3%25E8%25A1%259B%25E9%2596%2580%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExY2Y0YjhkYTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>五右衛門</dc:creator></item><item><title><![CDATA[sshだけのコンテナ（改）]]></title><description><![CDATA[
 はじめに

sshd だけのコンテナをつくる
ベースは debian を使用
google compute engine みたいな感じで使いたい
ユーザを作成する
ユーザ固有の設定はシェルへ
シェルをコンテナ作成時に実行する


 環境

 i5-14400

windows11 pro
powershell 7
wsl2 ubuntu24.04
sshd (apt)
docker (snap)


 i5-10400

windows11 home
powershell 7
wsl2 ubuntu24.04 ( いらなかったかも？ )
vscode


 操作

 i5-14400...]]></description><link>https://zenn.dev/yukip/articles/20250719-1-container-ssh</link><guid isPermaLink="true">https://zenn.dev/yukip/articles/20250719-1-container-ssh</guid><pubDate>Fri, 18 Jul 2025 16:56:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DlARHHlK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ssh%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25EF%25BC%2588%25E6%2594%25B9%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2RSb0g4ZS15b0VfTXR0ZDZGeXFZdzR2R0pfVWZJRHlfNmFyYlpFWUdJd1U0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yukip</dc:creator></item><item><title><![CDATA[【Docker基本】Dockerfileと関連用語完全ガイド]]></title><description><![CDATA[
 1. Dockerfileとは？
Dockerfileは、Dockerでコンテナイメージを自動的にビルドするためのテキストベースの設定ファイルです。


 2. 核心用語解説

 🐳 Docker



コンテナ化プラットフォーム: アプリケーションとその実行環境を一つのパッケージにまとめて、どこでも同じように実行できるようにする技術

仮想化との違い: VMより軽量で高速（OSカーネルを共有）


 📦 コンテナ(Container)



定義: アプリケーションとその実行に必要なすべて（ライブラリ、依存関係、設定など）を一つにまとめた実行単位

特徴: 隔離された環境、可搬性、...]]></description><link>https://zenn.dev/cruway/articles/03a1453fbe7daf</link><guid isPermaLink="true">https://zenn.dev/cruway/articles/03a1453fbe7daf</guid><pubDate>Fri, 18 Jul 2025 12:24:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZiawLEPI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E5%259F%25BA%25E6%259C%25AC%25E3%2580%2591Dockerfile%25E3%2581%25A8%25E9%2596%25A2%25E9%2580%25A3%25E7%2594%25A8%25E8%25AA%259E%25E5%25AE%258C%25E5%2585%25A8%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258B%25E3%2581%25B8%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NDg3OTFhZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くるへい</dc:creator></item><item><title><![CDATA[Dockerコンテナ内でGemini CLIを使う方法]]></title><description><![CDATA[OSSの開発に参加しているとき、Dockerコンテナ内でGemini CLIを使いたくなりました。
その備忘録を載せます。

 開発環境が、docker-compose.ymlとして配られていた
とても親切なOSSでした！
docker-composeファイルとシステム全体の初期化用のスクリプトをディレクトリにダウンロードして、
docker compose up -dを叩けば、localhostで起動しました。

 しかし、Gemini CLIをDockerコンテナ内で使う方法がわからない
Gemini CLIをDockerコンテナ内で使うために、システム全体の初期化用のスクリプトであ...]]></description><link>https://zenn.dev/0xyusuke/articles/acfd7fd80ab1f6</link><guid isPermaLink="true">https://zenn.dev/0xyusuke/articles/acfd7fd80ab1f6</guid><pubDate>Fri, 18 Jul 2025 10:12:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--81MeLgjZ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2586%2585%25E3%2581%25A7Gemini%2520CLI%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[colimaでdevcontainerが起動しなかった際の対処法]]></title><description><![CDATA[
 背景

Claude Codeをdevcontainer環境で使いたいと思った
VS Codeに拡張機能をインストールし、devcontainerを使うための準備をした
しかし"Remote-Containers: Reopen in Container"で開発コンテナを開こうとすると「Docker バージョン 17.12.0 以降が必要です。」とエラーが出てDocker Desktopのインストールを促された
Docker Desktopは使用しておらず社内でもcolimaが推奨されているため、このためにDocker Desktopをインストールするのは避けたい

https://...]]></description><link>https://zenn.dev/miup/articles/devcontainer_with_colima</link><guid isPermaLink="true">https://zenn.dev/miup/articles/devcontainer_with_colima</guid><pubDate>Fri, 18 Jul 2025 03:36:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e3MrRUgA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:colima%25E3%2581%25A7devcontainer%25E3%2581%258C%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%2586P%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwY2JhMWEyMGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みうP</dc:creator></item><item><title><![CDATA[【Docker初心者向け】WordPress開発環境でメール受信を実現する3つの方法]]></title><description><![CDATA[
 はじめに
WordPress の開発環境を構築する際、テストメールの送受信機能は非常に重要です。この記事では、Docker を利用して WordPress 開発環境にメール受信機能（Mailpit）を統合する複数の方法を紹介します。Docker 初心者の方向けに、各構成案の compose.yaml ファイルの作成手順と、それぞれのメリット・デメリットを詳しく解説します。
自身の開発目的に合った最適な Docker イメージを選択し、compose.yamlファイルを効果的に作成できるようになることを目指しましょう。
ここでは、主に以下の 3 つの構成案を提案します。



構成案
...]]></description><link>https://zenn.dev/hiro345/articles/20250718_wp_and_mail</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20250718_wp_and_mail</guid><pubDate>Thu, 17 Jul 2025 22:58:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r3u6ioG6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591WordPress%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E5%258F%2597%25E4%25BF%25A1%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B3%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[toml?yaml? 違い調査]]></title><description><![CDATA[
 はじめに
最近Rustで何か作りたいという衝動からRustのプロジェクトを作ってみている。
パッケージマネージャーとしてRustはCargoというものを使用している。その依存関係が記載されているファイルはCargo.tomlという。
おや、yamlじゃなくてtoml?
yamlもtomlもなんとなく認知しているだけだったので、違いについて簡単に調べてみる。
（※全部は無理なので一部にします）

 結論

記法は違うが、そんなに違わない！
アプリで取り入れるなら、ユースケースに応じて選定するべき！（後述）


 調査

 YAML の書き方
こんな感じで書く。

配列の表現は以下の通り...]]></description><link>https://zenn.dev/marakasu/articles/0ab80bf9238848</link><guid isPermaLink="true">https://zenn.dev/marakasu/articles/0ab80bf9238848</guid><pubDate>Thu, 17 Jul 2025 18:30:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3KoW198Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:toml%253Fyaml%253F%2520%25E9%2581%2595%25E3%2581%2584%25E8%25AA%25BF%25E6%259F%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:MAETA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ0MjIxYmE1MTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>MAETA</dc:creator></item><item><title><![CDATA[Dev Container で起動した Claude Code から Hooks でホストの Mac に通知する]]></title><description><![CDATA[masaki です。
弊社では生成 AI を業務に積極的に取り入れています。
これまでにも以下のような記事を公開してきました。
https://zenn.dev/socialplus/articles/d92f1296c8403a
https://zenn.dev/socialplus/articles/618bc1016bc51c
最近はコードアシストにとどまらず、エージェント型 AI ツールを活用する動きが活発になっています。
今回は、よく話題にもなり弊社でも利用している Claude Code について、少し便利になる通知設定のテクニックをご紹介します。

 はじめに
Claude...]]></description><link>https://zenn.dev/socialplus/articles/ea9be95301ae99</link><guid isPermaLink="true">https://zenn.dev/socialplus/articles/ea9be95301ae99</guid><pubDate>Thu, 17 Jul 2025 09:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m-0lKZtY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Dev%2520Container%2520%25E3%2581%25A7%25E8%25B5%25B7%25E5%258B%2595%25E3%2581%2597%25E3%2581%259F%2520Claude%2520Code%2520%25E3%2581%258B%25E3%2582%2589%2520Hooks%2520%25E3%2581%25A7%25E3%2583%259B%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%2520Mac%2520%25E3%2581%25AB%25E9%2580%259A%25E7%259F%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:masaki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4Mjg2YmNjMDEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Social%2520PLUS%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3YWM1MjkxMTEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>masaki</dc:creator></item><item><title><![CDATA[Docker の mysql コンテナに mysql コマンドで接続できない]]></title><description><![CDATA[
 はじめに
今回、Dcoker の mysql コンテナを起動している状態で、mysql コマンドで接続できませんでした。解決に時間がかかったため、内容を共有します。

 環境
$ sw_vers
ProductName:		macOS
ProductVersion:		15.5
BuildVersion:		24F74

$ docker --version
Docker version 28.3.0, build 38b7060

$ docker compose version
Docker Compose version v2.38.1-desktop.1

$ mysql -...]]></description><link>https://zenn.dev/hiroto_ohira/articles/5b4f69b6fcac2d</link><guid isPermaLink="true">https://zenn.dev/hiroto_ohira/articles/5b4f69b6fcac2d</guid><pubDate>Thu, 17 Jul 2025 06:02:07 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iPQPlaCI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2581%25AE%2520mysql%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AB%2520mysql%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25A7%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%25AA%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3OGJjN2JkNTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>オーリア</dc:creator></item><item><title><![CDATA[📝 Go vs C# Todo App を Docker化して比較してみた！]]></title><description><![CDATA[
 はじめに

エンジニア4ヶ月目のSomeです！
前回、業務で使っているC#でTodoアプリを作ってDocker化してみました。


前回の記事: C# TodoアプリのDocker化


今回はGo言語とDockerを勉強中なので、同じ機能のTodoアプリをGoで作って、C#版と比較してみました！
結果が想像以上にすごかったので、共有します😊

 🔧 環境


MacBook Air (M3)
メモリ: 16GB
Go: 1.21（勉強中）
.NET: 8.0（業務で使用）



 **⚡ 結果まとめ - **



項目
C#
Go
差




📦 イメージサイズ
379MB
11...]]></description><link>https://zenn.dev/some55/articles/0d8f4e4432a86f</link><guid isPermaLink="true">https://zenn.dev/some55/articles/0d8f4e4432a86f</guid><pubDate>Wed, 16 Jul 2025 22:26:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GbRHftIG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Go%2520vs%2520C%2523%2520Todo%2520App%2520%25E3%2582%2592%2520Docker%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:some%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQzNWYzNjQ4YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>some</dc:creator></item><item><title><![CDATA[VS Code Dev Container で構築する Gemini CLI 開発環境チュートリアル]]></title><description><![CDATA[
 VS Code Dev Container で構築する Gemini CLI 開発環境チュートリアル

 1. はじめに
Google の Gemini CLI (@google/gemini-cli) は、ターミナルからGeminiモデルを対話的に利用できる強力なツールです。この記事では、naoyoshinori/docker-gemini-cli というDockerイメージと Visual Studio Code の Dev Containers を利用して、クリーンで再利用可能なGemini CLI開発環境を構築する手順を解説します。
Dev Containers を使うことで...]]></description><link>https://zenn.dev/naoyoshinori/articles/ea3ceeb96e6494</link><guid isPermaLink="true">https://zenn.dev/naoyoshinori/articles/ea3ceeb96e6494</guid><pubDate>Wed, 16 Jul 2025 12:37:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KTXpO-Ez--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520Dev%2520Container%2520%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2520Gemini%2520CLI%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:naoyoshinori%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0syYTlYZmVLMW1WSGpQZGEzZmZFX2RfWktiSmpST3lRNDlXcGpiTTA5Q3dnZUw1Q0o9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>naoyoshinori</dc:creator></item><item><title><![CDATA[GitHub ActionsでGrypeを使ったコンテナイメージスキャンを実施し、結果をGitHubにアップロードする]]></title><description><![CDATA[
 概要
DockerコンテナのイメージスキャンをGitHub Actionsで実施しています。
スキャン結果の確認にはGitHub Actionsのログを使用していました。
脆弱性スキャナーのGrypeはスキャン結果をSARIF形式で出力できるので、スキャン結果をGitHubにアップロードしてSecurityタブから確認できるようにします。

 ファイルの修正

 GitHubへの書き込み権限付与
GitHub ActionsからGitHubのセキュリティイベントに書き込むためにpermissionsに「security-events: write」を追加しました。

DockerIm...]]></description><link>https://zenn.dev/jnxjez/articles/2b550bf1de2c3b</link><guid isPermaLink="true">https://zenn.dev/jnxjez/articles/2b550bf1de2c3b</guid><pubDate>Wed, 16 Jul 2025 10:51:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--b__eJ67T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7Grype%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E6%2596%25BD%25E3%2581%2597%25E3%2580%2581%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592GitHub%25E3%2581%25AB%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25A4%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmNzI0MTQ1M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ジェイ</dc:creator></item><item><title><![CDATA[Devin's Machine を設定して Devin 自身にテストをやらせる]]></title><description><![CDATA[
 はじめに
最近 Devin を使った開発を積極的にするようになってきているのですが、Devin を使った開発で、なかなか成果を実感できない状況に悩んでいました。
特に、Devin が生成したコードの品質に悩まされ、CI でのテスト失敗に時間を取られることが多かったのです。
この記事では、Devin's Machine の設定を行うことで、どのように開発効率が改善されたかを実体験ベースで紹介します。

 これまでの課題

 Devin を使っても成果を実感できない
Devin を導入したものの、期待していたほどの成果を実感できていませんでした。主な課題は次のとおりです。

質の高くない...]]></description><link>https://zenn.dev/enechange_blog/articles/devin-machine-setup-improvement</link><guid isPermaLink="true">https://zenn.dev/enechange_blog/articles/devin-machine-setup-improvement</guid><pubDate>Wed, 16 Jul 2025 09:48:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AHTgxEsm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Devin%2527s%2520Machine%2520%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%2520Devin%2520%25E8%2587%25AA%25E8%25BA%25AB%25E3%2581%25AB%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2582%2584%25E3%2582%2589%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:so%2520hosoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5YThmZmY3MzEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:ENECHANGE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNjAwd3NISURfejNoR1F4RnlndnlrQzFFY2xfSUJtMW5qV0Q2LXg9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>so hosoki</dc:creator></item><item><title><![CDATA[go言語の開発用コンテナ]]></title><description><![CDATA[
 はじめに

go言語開発用のコンテナです
sshd も入れて、vscode から直接接続する
git もコンテナ内に入り込んだ状態でする
コンテナの起動停止は compose でする
ssh-key は手動て作成した
wsl のフォルダとつないでないので、ssh-key を再作成することもあるけどまぁいい


 コンテナ

 Dockerfile

作業用ユーザは useradd しておいた
ssh-key はとりあえず自力で作って github に都度追加した

FROM golang:1.24-bookworm

RUN echo 'export PATH="/usr/local...]]></description><link>https://zenn.dev/yukip/articles/20250716-1-go-container</link><guid isPermaLink="true">https://zenn.dev/yukip/articles/20250716-1-go-container</guid><pubDate>Wed, 16 Jul 2025 09:09:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dMd_jX8Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:go%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2594%25A8%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yukip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y2RSb0g4ZS15b0VfTXR0ZDZGeXFZdzR2R0pfVWZJRHlfNmFyYlpFWUdJd1U0PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yukip</dc:creator></item><item><title><![CDATA[【Docker基本】Dockerボリューム技術の理解と実践]]></title><description><![CDATA[Dockerでは、データの永続化とコンテナ間のデータ共有を実現するために「ボリューム（Volume）」という仕組みが用意されています。本記事では、Dockerボリュームの基本から、実践的な使い方、他の方式との違いまでを丁寧に解説します。


 📌 1. Dockerボリュームとは？
Dockerボリュームとは、コンテナのライフサイクルとは独立した永続的なデータ保存領域のことです。通常、ホストマシンの特定ディレクトリにデータが保存され、コンテナが停止・削除されてもデータが消えない仕組みです。


 🔍 2. ボリュームの特徴



特徴
説明




永続性
コンテナを削除してもデータは保...]]></description><link>https://zenn.dev/cruway/articles/97f4214221c722</link><guid isPermaLink="true">https://zenn.dev/cruway/articles/97f4214221c722</guid><pubDate>Mon, 14 Jul 2025 13:57:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AR2UPVCJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E5%259F%25BA%25E6%259C%25AC%25E3%2580%2591Docker%25E3%2583%259C%25E3%2583%25AA%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25A0%25E6%258A%2580%25E8%25A1%2593%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%25A8%25E5%25AE%259F%25E8%25B7%25B5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258F%25E3%2582%258B%25E3%2581%25B8%25E3%2581%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NDg3OTFhZGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>くるへい</dc:creator></item><item><title><![CDATA[論理サーバーとは？物理サーバーとの違いや仮想化技術をわかりやすく解説]]></title><description><![CDATA[
 はじめに
クラウドコンピューティングやVPS（Virtual Private Server）が当たり前になった現代において、「論理サーバー」という言葉を耳にする機会が増えました。しかし、物理的な実体がないため、直感的に理解しにくいと感じる方もいるかもしれません。
この記事では、論理サーバーとは何か、そしてそれを支える仮想化技術について、物理サーバーとの違いを交えながらわかりやすく解説します。

 論理サーバーとは？
論理サーバーとは、1台の物理サーバー（物理的なコンピュータ）のリソース（CPU、メモリ、ストレージなど）を分割し、ソフトウェアによって論理的に作り出されたサーバーのことを...]]></description><link>https://zenn.dev/iikanash1/articles/what-is-a-logical-server</link><guid isPermaLink="true">https://zenn.dev/iikanash1/articles/what-is-a-logical-server</guid><pubDate>Mon, 14 Jul 2025 11:39:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0KboLspb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otfw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDFiWHB5WG1ra0p5WS16N0d5bExrZFdLelFBRFl5RFExd1dsQkxvNldjX21WeTY2eUQ9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かなし</dc:creator></item><item><title><![CDATA[【AWS】Amazon Inspector 対応パターン集【Debian】]]></title><description><![CDATA[すべての「Amazon Inspectorの警告は絶対に消せ」という上司を持った方へ
大変お辛い時間を過ごされたことかと思います。
解決パターン集を用意しましたのでご一読ください。
!
※本記事は2025年に旧アカウントで作成したものを再構成したものです。
※本記事は個人検証環境を元に構成されています。実際の業務内容や企業の設定とは無関係です。
※Debian前提です。Ubuntuは多分sudoつければ同様にできます。


 A. package.jsonいじれば治るパターン
一番オーソドックスなパターン



npm outdatedで該当パッケージ調査

npm listで依存関係チ...]]></description><link>https://zenn.dev/nickelth/articles/amazoninspector01</link><guid isPermaLink="true">https://zenn.dev/nickelth/articles/amazoninspector01</guid><pubDate>Mon, 14 Jul 2025 07:12:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QW77RYrK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AWS%25E3%2580%2591Amazon%2520Inspector%2520%25E5%25AF%25BE%25E5%25BF%259C%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%25E9%259B%2586%25E3%2580%2590Debian%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258B%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25AB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0Mjc3ODIwNWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ニッケル</dc:creator></item><item><title><![CDATA[Laravel 12 + React 19 + MySQL 8.0をdocker composeする]]></title><description><![CDATA[
 概要
ブログアプリケーションを開発する際の、Laravel + React + MySQLのDocker環境構築方法を紹介します。
※ ブログappを作成しようと思っていたとこから切り出したので、一部ブログappを想定したエンドポイント名になっていたります。

 技術スタック


フロントエンド: React 19.1.0 + TypeScript 5.8.3 + Vite 7.0.3

バックエンド: Laravel 12.0 + PHP 8.2

データベース: MySQL 8.0

Webサーバー: Nginx (alpine)

コンテナ: Docker + Docker C...]]></description><link>https://zenn.dev/techno_koki/articles/5eaadba8e0ed4e</link><guid isPermaLink="true">https://zenn.dev/techno_koki/articles/5eaadba8e0ed4e</guid><pubDate>Mon, 14 Jul 2025 05:34:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vZRPvrQf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%252012%2520%252B%2520React%252019%2520%252B%2520MySQL%25208.0%25E3%2582%2592docker%2520compose%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:techno.koki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>techno.koki</dc:creator></item><item><title><![CDATA[DockerでMinecraft bedrock Edition(統合版)を建ててSwitchで接続する : レッドストーンを追え(7)]]></title><description><![CDATA[
 Nintendo Switchでも接続できる
!
関連記事:

まとめて登録が実装されたmod管理ツールferium4.6 : レッドストーンを追え(6)

レッドストーンを追えシリーズ過去記事

docker経由でMinecraft資源(Spigot)サーバーを立てる
docker経由でMinecraft資源(Spigot)サーバーを立てる(2)
Docker MinecraftのPaperサーバーのJavaバージョンを11にする
Docker Minecraft Paperサーバーを1.17しつつのJavaバージョンを16にする: レッドストーンを追え(1)
Docker Min...]]></description><link>https://zenn.dev/dozo/articles/0d6cd128b91a8f</link><guid isPermaLink="true">https://zenn.dev/dozo/articles/0d6cd128b91a8f</guid><pubDate>Mon, 14 Jul 2025 00:39:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z79nmhXM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2581%25A7Minecraft%2520bedrock%2520Edition%2528%25E7%25B5%25B1%25E5%2590%2588%25E7%2589%2588%2529%25E3%2582%2592%25E5%25BB%25BA%25E3%2581%25A6%25E3%2581%25A6Switch%25E3%2581%25A7%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2520%253A%2520%25E3%2583%25AC%25E3%2583%2583...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:dozo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>dozo</dc:creator></item><item><title><![CDATA[私が考えたReactフロントエンド環境(React Router v7)]]></title><description><![CDATA[
 はじめに
https://github.com/dbd-fish/templete_web_system
本プロジェクトのReact Router v7を中心としたWebフロントエンド環境を紹介します。
状態管理やhookはほとんど使用していません。
１人で考えたため、些細なことでも何か意見があればコメントして頂きたいです。
本記事の大部分は生成AIに書かせてみました。
READMEっぽくなってしまう箇所はある程度妥協して筆者が微調整をしました。

 全体像
本プロジェクトはDocker Composeを使用したマルチコンテナ構成のWebシステム開発テンプレートです。
フロントエンド...]]></description><link>https://zenn.dev/dbd_fish/articles/616fad4fd2760d</link><guid isPermaLink="true">https://zenn.dev/dbd_fish/articles/616fad4fd2760d</guid><pubDate>Sun, 13 Jul 2025 23:05:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--p_CHFcbm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A7%2581%25E3%2581%258C%25E8%2580%2583%25E3%2581%2588%25E3%2581%259FReact%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%2592%25B0%25E5%25A2%2583%2528React%2520Router%2520v7%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%258F%25A4%25E6%25B5%25B7%25E3%2580%2580%25E5%25B4%259A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIyMmY4MjFjNDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>古海　崚</dc:creator></item></channel></rss>