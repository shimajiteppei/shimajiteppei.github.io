<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sun, 23 Mar 2025 11:07:38 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[コードで解き明かすビジネス戦略: 実践的データドリブン経営]]></title><description><![CDATA[本書は、ビジネス戦略を加速させるために、データ分析と機械学習をコードで実践的に活用する方法を解説します。データ収集から前処理、可視化、統計分析、機械学習モデル構築まで、幅広い技術と概念を網羅し、具体的なコード例を通して読者の理解を深めます。データドリブン経営を推進し、ビジネス課題を解決するための実践的な知識とスキルを習得できます。]]></description><link>https://zenn.dev/idev/books/book-20250323-185428</link><guid isPermaLink="true">https://zenn.dev/idev/books/book-20250323-185428</guid><pubDate>Sun, 23 Mar 2025 10:42:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sp0_Ylcd--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82ODc0NWNhNThkLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>timeless-residents</dc:creator></item><item><title><![CDATA[Pythonで文字列から動的にフィールドを作成する方法（setattr）]]></title><description><![CDATA[
 はじめに
Pythonでは、setattr を使用することで、オブジェクトの属性（フィールド）を動的に設定することができます。特に、固定長の文字列データを解析し、各フィールドに格納する場合に役立ちます。
この記事では、setattr を活用して、固定長の文字列データをオブジェクトのフィールドとして自動的に設定する方法を、具体的なPythonクラスの実装を通じて紹介します。

 setattr を使用したクラス設計
以下の Person クラスは、setattr を活用して固定長の文字列データを解析し、オブジェクトのフィールドとして格納します。

 実装例
class Person:
...]]></description><link>https://zenn.dev/tryeverything/articles/a0030_python_setattr</link><guid isPermaLink="true">https://zenn.dev/tryeverything/articles/a0030_python_setattr</guid><pubDate>Sun, 23 Mar 2025 10:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--f9F8qkt8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%258B%25E3%2582%2589%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588setattr%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%2593%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDc5YTUwMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たんさん</dc:creator></item><item><title><![CDATA[Pythonで実際に動かしてプロセスを理解する]]></title><description><![CDATA[
 概要
「プロセスって聞いたことあるけど、なんとなくしかわからない…」状態だったため、超初歩的な内容ながらも、実際にPythonを使ってプロセスの基礎の基礎を見ていきます。

 プロセスとは
プロセスは、プログラムが実行され、メモリが割り当てられて実際にCPU上で動作している状態のことを指します。

 プログラムとの違い

プログラム: ハードディスクなどに保存されている、実行可能なコード
プロセス: プログラムを実行している最中の状態のこと。メモリを割り当てられ、CPU上で動いているもの。

例えるならば、プログラムはレシピ、プロセスはそのレシピをもとに実際に料理している行為そのもの...]]></description><link>https://zenn.dev/shimiyu/articles/4f432e6ea1be06</link><guid isPermaLink="true">https://zenn.dev/shimiyu/articles/4f432e6ea1be06</guid><pubDate>Sun, 23 Mar 2025 07:17:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rw1LPK_H--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25A7%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AB%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25BB%25E3%2582%25B9%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BF%25E3%2582%2586%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0OWE2NTYxY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しみゆー</dc:creator></item><item><title><![CDATA[[docker] python環境がexitedしてしまう問題]]></title><description><![CDATA[
 解決方法
以下をdocker-compose.yml(exitedしてしまうコンテナの末尾)に記載
command: tail -f /dev/null
あとは以下でコンテナに入って、好きなpythonファイルを実行するだけ。
docker&nbsp;exec&nbsp;-it&nbsp;コンテナ名&nbsp;bash
test.pyを実行
root@dfjhi987fkj:/python# python test.py

 なぜ解決するのか

基本的にdockerはcommandを実行し終えたらコンテナが停止する。
起動し続けるには、何かが実行状態でなければいけない
-f コマンド...]]></description><link>https://zenn.dev/apo_zenn/articles/a01a152d5353ad</link><guid isPermaLink="true">https://zenn.dev/apo_zenn/articles/a01a152d5353ad</guid><pubDate>Sun, 23 Mar 2025 06:54:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nIL_bL7W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255Bdocker%255D%2520python%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%258Cexited%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhNmY0NWNjMjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apo</dc:creator></item><item><title><![CDATA[Ruffに搭載される新しい型チェッカーRed-knotについて]]></title><description><![CDATA[Python開発者向けツールRuff/uvの開発チーム（Astral inc.）がPython向けの型チェッカーを新規開発しているので紹介いたします。この型チェッカーはコードネーム"Red-knot"と呼ばれており、まだリリース前ですが将来的にはRuffに組み込まれる予定であるようです。以下ではこのプロジェクトの概略を説明したいと思います。

 特徴
既存の型チェッカー(e.g. mypy, pyright)の不満点である遅さを改善すべく、徹底的にパフォーマンスに気を配った設計となっています。pyrightもそこまで遅くはないのですが、さらに高速であることを目指すようです。
Red-kn...]]></description><link>https://zenn.dev/mtshiba/articles/about-red-knot</link><guid isPermaLink="true">https://zenn.dev/mtshiba/articles/about-red-knot</guid><pubDate>Sun, 23 Mar 2025 03:42:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KaM787Eu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Ruff%25E3%2581%25AB%25E6%2590%25AD%25E8%25BC%2589%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BCRed-knot%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shiba%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g0WVFyaVliOXdBdEtlTUJXZjd1REJ5d2Q3UnJCYW5TSmlQYkRGPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shiba</dc:creator></item><item><title><![CDATA[【Python】n//2とint(n/2)の違い]]></title><description><![CDATA[今日は一見よく似た二つの計算方法「n//2」と「int(n/2)」の違いについて、わかりやすく解説していきます。
「え？どちらも同じじゃないの？」と思った方、実はこの二つ、微妙に違うんです！
その違いを知ることで、バグを防いだり、より効率的なコードが書けるようになります。

 基本的な違い
まずは基本から見ていきましょう。


n//2 は「切り捨て除算」と呼ばれるフロア除算（floor division）です。

int(n/2) は「普通の除算の結果を整数に変換」する方法です。

これだけだと分かりにくいので、実際のコードで確認してみましょう！
n = 5
result1 = n /...]]></description><link>https://zenn.dev/hovinci/articles/5d1a0f86019e6d</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/5d1a0f86019e6d</guid><pubDate>Sun, 23 Mar 2025 00:31:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5lV4kat4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591n%252F%252F2%25E3%2581%25A8int%2528n%252F2%2529%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[【YOLO】②YOLOのテストアプリをコンテナ化してECS上で動かしてみる]]></title><description><![CDATA[
 はじめに
前回の記事で、YOLO12を使用した簡単なwebアプリを作成しテスト実行するところまで記載しました。
今回はそのアプリからDockerイメージをビルドし、AWS ECS上で起動させる方法までを共有させていただきます。
以下リンクの前回記事と内容が重複する箇所の記載は省略させていただくことをご承知おきください。
https://zenn.dev/gj77a/articles/e5cd1056fcbdc4

 なんでコンテナ化するのか？
（※Dockerの基礎を理解されている方は読み飛ばしてください・・・）
サーバ上で問題なくアプリが動作することを確認できましたが、その上でわざ...]]></description><link>https://zenn.dev/gj77a/articles/b4e566c612c765</link><guid isPermaLink="true">https://zenn.dev/gj77a/articles/b4e566c612c765</guid><pubDate>Sat, 22 Mar 2025 16:42:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wXZ8IvL9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590YOLO%25E3%2580%2591%25E2%2591%25A1YOLO%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6ECS%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:GK7AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY3OWM5ZmRiZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>GK7AA</dc:creator></item><item><title><![CDATA[【Google Colabで学ぶpandas入門】データ分析の応用]]></title><description><![CDATA[この記事は、前回の「基本編」に続く「応用編」です。基本編では、データの準備や確認、クリーニング、基本的な可視化方法について紹介しました。今回は、より高度なデータ分析テクニックに焦点を当て、実践的なスキルを身につけることを目指します。データのグループ化、結合、並べ替え、フィルタリング、さらに高度な可視化まで幅広く紹介します。

 🔎 応用編：データ分析の応用

 1️⃣ グループ化と集計
データをカテゴリごとにグループ化して、統計量を計算できます。

 🔹 平均値の計算
import pandas as pd
data = {
    '名前': ['太郎', '花子', '次郎', '三...]]></description><link>https://zenn.dev/oit2003/articles/be9a90f0bf09e1</link><guid isPermaLink="true">https://zenn.dev/oit2003/articles/be9a90f0bf09e1</guid><pubDate>Sat, 22 Mar 2025 15:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--j6xpUM4Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Google%2520Colab%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6pandas%25E5%2585%25A5%25E9%2596%2580%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%25BF%259C%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:OIT2003%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUwxN0ZaM1B3YkZyak5GWFVZRnNva000aldZTWZaQzc0MVh1UzhtRDdlZUNJVT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>OIT2003</dc:creator></item><item><title><![CDATA[Janusを試してみた: マルチモーダルAIモデルのローカル環境構築と実行方法]]></title><description><![CDATA[
 はじめに
近年、テキストと画像を同時に理解し生成できるマルチモーダルモデルが注目されています。この記事では、DeepSeek AI が公開したオープンソースのマルチモーダルモデルである (Janusシリーズ)[https://github.com/deepseek-ai/Janus] を実際に動かしてみましたので、その環境構築と実行手順をまとめます。

 Janusシリーズとは？
Janusシリーズは、DeepSeek AIが開発した統合型マルチモーダルモデルです。テキストと画像を組み合わせて高度な理解と生成を可能にし、以下のようなことが実現できます。

画像をもとにした質問応答
テ...]]></description><link>https://zenn.dev/exmedia/articles/hands-on-with-janus</link><guid isPermaLink="true">https://zenn.dev/exmedia/articles/hands-on-with-janus</guid><pubDate>Sat, 22 Mar 2025 12:19:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bkEOaBeq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Janus%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%253A%2520%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25ABAI%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25A8%25E5%25AE%259F%25E8%25A1%258C%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:exMedia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNzZmZjNmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>exMedia</dc:creator></item><item><title><![CDATA[LLMのattention層の位置による影響を比較する]]></title><description><![CDATA[論文を読んで気になったのでAttention層の位置による影響を比較する簡単な実験をします。
以下の論文では、学習済みLLama2をベースに、Attention＋Dense層を1つの層とし、層をスキップする数を増減させ性能の違いを比較しています。結果は、少数のスキップであれば大きな性能低下は起きず、一方で多数をスキップした場合は大きな性能低下が見られたことが報告されています。
https://arxiv.org/abs/2407.09298
Attention層のみをスキップしDenseは残すようにすれば、性能も落とさず計算コストも下がって良いのでは？？？？

 構成
Phi3をベースに...]]></description><link>https://zenn.dev/if001/articles/4b11befad3bc58</link><guid isPermaLink="true">https://zenn.dev/if001/articles/4b11befad3bc58</guid><pubDate>Sat, 22 Mar 2025 11:32:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OUx5IU3E--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LLM%25E3%2581%25AEattention%25E5%25B1%25A4%25E3%2581%25AE%25E4%25BD%258D%25E7%25BD%25AE%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25BD%25B1%25E9%259F%25BF%25E3%2582%2592%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:if001%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzY1YjVlNzkzZjcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>if001</dc:creator></item><item><title><![CDATA[第二言語としてのPython入門]]></title><description><![CDATA[C/C++学習者向けにPythonを説明するという、マニアックな入門書です。
その唯一のアイデンティティも、十分に果たせたのかよく分かりません。]]></description><link>https://zenn.dev/seoi/books/af07a4e15b6323</link><guid isPermaLink="true">https://zenn.dev/seoi/books/af07a4e15b6323</guid><pubDate>Sat, 22 Mar 2025 07:37:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l1R6BZuH--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hNmNjZjIyNzNhLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>せおい</dc:creator></item><item><title><![CDATA[【Python】ネストされたdictをdaciteを用いてdataclassに変換する]]></title><description><![CDATA[
 概要
dictをdataclassに変換する際、標準の機能だとPython3: dict を dataclass に変換するで紹介されている通り、辞書のアンパック機能を使う方法が挙げられます。ただ、標準の機能だとネストされたdictには対応できていないようです。
ネストされたdictやjsonからdataclassを作成したいならpydanticが便利の記事に紹介されている通り、Pydanticを導入するのも一つの手ではありますが、Pydanticを導入せずにピンポイントで簡単に変換できる方法はないかなと少し調べてみました。

 対応案
How to create a datacla...]]></description><link>https://zenn.dev/someone7140/articles/341b2c82ce2d2d</link><guid isPermaLink="true">https://zenn.dev/someone7140/articles/341b2c82ce2d2d</guid><pubDate>Sat, 22 Mar 2025 07:10:57 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CtdWA0KN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fdict%25E3%2582%2592dacite%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%25A6dataclass%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AA%25E3%2581%258B%25E3%2581%25A4%25E3%2581%258C%25E3%2582%258F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhNWRlOTE4YjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>なかつがわ</dc:creator></item><item><title><![CDATA[ipynbファイルのmarkdownセルで 自動翻訳する方法]]></title><description><![CDATA[
 概要


この記事の対象者
Python で自動翻訳ツールを試してみたい人。


この記事の要約
Jupyter Notebookの Markdownテキストを、googletransを使って日本語に自動翻訳する仕組みについて解説


この記事を読んでできること
googletrans を利用して翻訳処理を実装する方法



 序説
最近購入した本の付録に、Jupyter Notebook（.ipynb）形式のファイルが付いていました。
内容は主にコードと Markdown 文書で構成されており、Markdown の文章は英語で書かれていました。
そこで、「これを日本語に変換できたら...]]></description><link>https://zenn.dev/churadata/articles/a42ddc858aaecd</link><guid isPermaLink="true">https://zenn.dev/churadata/articles/a42ddc858aaecd</guid><pubDate>Sat, 22 Mar 2025 03:35:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--83TIetry--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ipynb%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AEmarkdown%25E3%2582%25BB%25E3%2583%25AB%25E3%2581%25A7%2520%25E8%2587%25AA%25E5%258B%2595%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kei%25E5%25BF%258D%25E8%2580%2585%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2NTFmZDJlZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2581%25A1%25E3%2582%2585%25E3%2582%2589%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzYTk0NjI3YjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kei忍者</dc:creator></item><item><title><![CDATA[Shift-JISからUTF-8への一括変換方法]]></title><description><![CDATA[
 はじめに
昔のWindows環境では、Shift-JIS (SJIS) エンコーディングが標準的に使用されていました。しかし、現在ではUTF-8が主流となっており、異なるエンコーディング間での文字化けが問題になることがあります。
特に、システム移行やデータの統合を行う際に、Shift-JISで保存されたファイルをUTF-8に変換する必要が出てくることが多いです。この記事では、フォルダ内のすべてのShift-JISファイルをUTF-8に変換するPythonスクリプトを紹介します。

 必要な環境

Python 3.x


 スクリプトの説明
以下のPythonスクリプトを使用すると、...]]></description><link>https://zenn.dev/tryeverything/articles/a0029_python_sjis_utf8</link><guid isPermaLink="true">https://zenn.dev/tryeverything/articles/a0029_python_sjis_utf8</guid><pubDate>Fri, 21 Mar 2025 10:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xt5iZ2iz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Shift-JIS%25E3%2581%258B%25E3%2582%2589UTF-8%25E3%2581%25B8%25E3%2581%25AE%25E4%25B8%2580%25E6%258B%25AC%25E5%25A4%2589%25E6%258F%259B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%2593%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDc5YTUwMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たんさん</dc:creator></item><item><title><![CDATA[Zsh Hooks を活用して uv venv の仮想環境を自動有効化する方法]]></title><description><![CDATA[本記事では、uv（パッケージマネージャー）のコマンド uv venv を実行した際に、デフォルト仮想環境を自動でアクティベートする仕組みについて紹介します。Zsh のフック機能である preexec と precmd を利用し、add-zsh-hook を活用したシンプルな実装例を解説します。

 背景
日常的に Python の仮想環境を使っていると、仮想環境の有効化作業が面倒になることがあります。特に、uv を使って環境を管理している場合、「uv venv」コマンド実行時に対応する仮想環境を自動的にアクティベートできれば、作業効率が向上します。

 コードの概要
以下のコードは、以下...]]></description><link>https://zenn.dev/yukiyuriweb/articles/12c96b4e659c8e</link><guid isPermaLink="true">https://zenn.dev/yukiyuriweb/articles/12c96b4e659c8e</guid><pubDate>Fri, 21 Mar 2025 06:31:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZD-ULx0P--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Zsh%2520Hooks%2520%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%2520uv%2520venv%2520%25E3%2581%25AE%25E4%25BB%25AE%25E6%2583%25B3%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E6%259C%2589%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:YUKi%2540YUKiYURi%2520WEB%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ktTTgyWW9ZMHZWb3BoYXZCSFZLUEhjUTF0SlBHc0N5WHhHQlVEPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>YUKi@YUKiYURi WEB</dc:creator></item><item><title><![CDATA[AWS CDK で実現するPython Lambda レイヤー構築アーキテクチャ]]></title><description><![CDATA[本記事では、AWS CDK を利用して Python ランタイムの Lambda 関数に必要な依存パッケージをLambda レイヤーとしてStack内で作成・管理し、Lambdaのレイヤーに紐づけまでをGUIやコマンド操作なしで実現する仕組みについてまとめます。レイヤーのビルドから S3 へのアップロード、そして各 Lambda 関数への割当てまでのプロセスをすべてコード管理することで、手動作業を一切排除し、CI/CD パイプラインに組み込みやすいアーキテクチャを実現しています。

 プロジェクト概要
今回のプロジェクトは、以下の構成で管理されているS3へファイルをアップロードし公開でき...]]></description><link>https://zenn.dev/takoyaki3/articles/fe7d180c4bb71d</link><guid isPermaLink="true">https://zenn.dev/takoyaki3/articles/fe7d180c4bb71d</guid><pubDate>Fri, 21 Mar 2025 04:23:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mHhNZKt2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520CDK%2520%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BPython%2520Lambda%2520%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E6%25A7%258B%25E7%25AF%2589%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2586%25E3%2582%25AF%25E3%2583%2581%25E3%2583%25A3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2593%25E3%2582%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0NWIzZjgwZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たこやき</dc:creator></item><item><title><![CDATA[OpenAIの新しいAudio Modelを使って音声の文字起こしをする]]></title><description><![CDATA[
 はじめに
1年半前にYouTube動画編集の際の文字起こしを楽にしたく、OpenAIのWisperを利用する記事を書きました。
https://zenn.dev/atakon/articles/youtube-transcript
その後Docker環境で動かせるように改善をしました。
https://zenn.dev/atakon/scraps/723358fecce380
それから月日が経ち、今朝(2025/3/21)待望してたOpenAIのAudio Modelがリリースされたというメールが届いたので、早速試してみました。
https://platform.openai.com...]]></description><link>https://zenn.dev/atakon/articles/gpt-40-transcribe</link><guid isPermaLink="true">https://zenn.dev/atakon/articles/gpt-40-transcribe</guid><pubDate>Fri, 21 Mar 2025 03:17:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9UpGiUHP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%25E3%2581%25AE%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584Audio%2520Model%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%259F%25B3%25E5%25A3%25B0%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%259A%25E3%2581%258A%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzYjA2MWRjNGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かずお</dc:creator></item><item><title><![CDATA[Docker初心者のための環境構築入門🐳]]></title><description><![CDATA[
 プロジェクトごとに独立した環境をつくろう！
Pythonプログラムをもらうと、requirements.txtなどで環境を用意しますよね！すると、PythonやNumpyなどのライブラリのバージョンが混在していきます。Dockerをつかうことで、この問題を解決していきます！！
この記事はDocker入門者向けに書いたので、ほぼ最小の構成でコンテナを作ろうと思います。

 Dockerを手に入れよう
「docker windows」「docker mac」「docker ubuntu」などで検索して、使っているPCに合わせてDockerを用意しましょう！下記に公式サイトのリンクを載せて...]]></description><link>https://zenn.dev/small_test/articles/603f761d3ebda1</link><guid isPermaLink="true">https://zenn.dev/small_test/articles/603f761d3ebda1</guid><pubDate>Thu, 20 Mar 2025 12:24:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TO795o2p--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E5%2585%25A5%25E9%2596%2580%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:small_test%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E1Y2Q3NWQ2MTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>small_test</dc:creator></item><item><title><![CDATA[Streamlit in Snowflake (SiS) と Cortex AI で実現するフロー図自動作成アプリ]]></title><description><![CDATA[
 はじめに
今回は Streamlit in Snowflake と Cortex AI を組み合わせて、フロー図やアーキテクチャ図を自動生成できるアプリを作成してみましたのでご紹介します。まだまだ改善したい点があるため、後日 Part2 の記事を書く可能性が高いです！
!
本記事は私個人の発信となります。Snowflake を代表しての発言では無いためご理解いただければ幸いです。


 Streamlit in Snowflake (SiS) とは？
まず Stremlit は Python のライブラリです。Streamlit を使うとシンプルな Python の記述だけで Web...]]></description><link>https://zenn.dev/tsubasa_tech/articles/5238844010c097</link><guid isPermaLink="true">https://zenn.dev/tsubasa_tech/articles/5238844010c097</guid><pubDate>Thu, 20 Mar 2025 12:04:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--h3wdR_rn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Streamlit%2520in%2520Snowflake%2520%2528SiS%2529%2520%25E3%2581%25A8%2520Cortex%2520AI%2520%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E5%259B%25B3%25E8%2587%25AA%25E5%258B%2595%25E4%25BD%259C%25E6%2588%2590%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tsubasa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIzNTYwMzlkYjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tsubasa</dc:creator></item><item><title><![CDATA[Panderaの基本から応用まで]]></title><description><![CDATA[
 Panderaの基本から応用まで

 はじめに
データ分析や機械学習プロジェクトにおいて、データの品質は成功を左右する重要な要素です。しかし、現実のデータは常に完璧というわけではなく、欠損値、異常値、型の不一致など、様々な問題を含んでいます。これらの問題を見逃すと、分析結果の誤りやモデルの性能低下を招き、最終的には誤った意思決定につながる可能性があります。
Python環境でデータ処理を行う際、多くの開発者はPandasを使用していますが、Pandasだけではデータが期待通りの構造や値を持っているかを確認することに限界があります。このギャップを埋めるのが、強力なデータバリデーションラ...]]></description><link>https://zenn.dev/zenn_tkc/articles/e07b34716237b6</link><guid isPermaLink="true">https://zenn.dev/zenn_tkc/articles/e07b34716237b6</guid><pubDate>Thu, 20 Mar 2025 08:45:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Js1YcZnF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Pandera%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%258B%25E3%2582%2589%25E5%25BF%259C%25E7%2594%25A8%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tkc%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRlM2FiNjJjYjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tkc</dc:creator></item></channel></rss>