<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「TypeScript」のフィード]]></title><description><![CDATA[Zennのトピック「TypeScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/typescript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/f13e758fdb.png</url><title>Zennの「TypeScript」のフィード</title><link>https://zenn.dev/topics/typescript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 03 Mar 2025 06:27:36 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/typescript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[oxlint で eslint を高速化させる]]></title><description><![CDATA[rust 製の爆速 Linter こと oxlint で eslint を高速化したいんじゃ！！！
https://oxc.rs/docs/guide/usage/linter.html#features
というわけでレッツゴー！

 eslint + typescript-eslint は遅い
JavaScript におけるリンターのデファクトとなっている ESLint
また ESLint に TypeScript 対応を拡張する typescript-eslint も広く使われている
typescript-eslint がやってくれることは以下の 2 つ

TypeScript 構文...]]></description><link>https://zenn.dev/hiruno_tarte/articles/how-to-use-oxlint</link><guid isPermaLink="true">https://zenn.dev/hiruno_tarte/articles/how-to-use-oxlint</guid><pubDate>Mon, 03 Mar 2025 05:34:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EdFFCeHk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:oxlint%2520%25E3%2581%25A7%2520eslint%2520%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B2%25E3%2582%258B%25E3%2581%25AE%25E3%2581%259F%25E3%2582%258B%25E3%2581%25A8%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Q4NDM4ZjYxODAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ひるのたると</dc:creator></item><item><title><![CDATA[AtCoderやPaizaラーニングをTypeScriptで解くためのテンプレートを用意できるVS Code拡張機能を作った]]></title><description><![CDATA[
 作ったきっかけ
問題を解くたびにテンプレートをコピペするのが面倒…関数名そのままだと怒られるし…
こんなことを思ったことはありませんか？
私自身、問題を解くたびにテンプレートを用意するのが面倒に感じ、「それなら拡張機能を作ってしまえばいいのでは？」と思い、この拡張機能を開発しました。

 導入方法


VS Code Marketplaceをクリック

インストール ボタンをクリック
インストール完了後、VS Code を再起動

または、以下のコマンドを実行：
code --install-extension vs-competitive-starter

 機能の説明


ctr...]]></description><link>https://zenn.dev/loootus/articles/178286bd2a7fa6</link><guid isPermaLink="true">https://zenn.dev/loootus/articles/178286bd2a7fa6</guid><pubDate>Mon, 03 Mar 2025 02:57:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bwyCRQ3A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AtCoder%25E3%2582%2584Paiza%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258B%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592TypeScript%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E7%2594%25A8%25E6%2584%258F%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258BVS%2520Code%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258C%25E3%2582%2593%25E3%2582%258C%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlNGMxODYyODUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>れんれん</dc:creator></item><item><title><![CDATA[[Flutter]Hono✖️Supabaseでアプリを作る- Get -]]></title><description><![CDATA[
 HonoとSupabaseでアプリを作った話
触れる話
Honoの基本、CRUD操作とFlutterの実装
触れない話
デプロイの仕方
FlutterでのAPI秘匿化
普段はFlutterの開発がメインなのですがTypeScriptに入門し自分のメインのフレームワークであるFlutterと連携して作成したいなと思いAPIを簡単に作成でき、最近注目のフレームワークを使った開発がしたくて今回作成しました。
サーバーはSupabaseを使用し、honoでCRUD操作を行います。フロントエンドは普段から使用しているFlutterでGitHubからCloudFrearにデプロイする形で実装して...]]></description><link>https://zenn.dev/tolto/articles/a1cb22bcdb5eac</link><guid isPermaLink="true">https://zenn.dev/tolto/articles/a1cb22bcdb5eac</guid><pubDate>Mon, 03 Mar 2025 02:51:34 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--amRiyBrM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BFlutter%255DHono%2520Supabase%25E3%2581%25A7%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B-%2520Get%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tolto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhOGVmY2QxOWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tolto</dc:creator></item><item><title><![CDATA[シングルクォートかダブルクォートか]]></title><description><![CDATA[
 シングルクォートかダブルクォートか

 はじめに
フロントエンド開発において、一見些細に思えるコード規約の問題が、チーム開発では意外と大きな議論になることがある。特にシングルクォート（'）とダブルクォート（"）のどちらを使うべきかという問題は、Next.js や React のプロジェクトでもよく出てくる話題だ。個人的には「こんな細かいことで議論するのもどうかと思う」と感じることもあるが、一貫性のあるコードベースを維持するためには、チームとして明確な方針を持つことが重要だろう。
この記事では、Next.js（React）開発におけるシングルクォートとダブルクォートの選択について、実践...]]></description><link>https://zenn.dev/apollo880/articles/single-quote-vs-double-quote-in-nextjs</link><guid isPermaLink="true">https://zenn.dev/apollo880/articles/single-quote-vs-double-quote-in-nextjs</guid><pubDate>Mon, 03 Mar 2025 00:53:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oSGPCII7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2583%25AB%25E3%2582%25AF%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%25E3%2583%2580%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25AF%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%2588%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:apollo880%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dINHpRNC1vODhBZ0NTSDRnTUduZkFjTjFtTDR4Zk1BNFNrSUQtaEE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>apollo880</dc:creator></item><item><title><![CDATA[Hono Zod OpenAPIのエラーハンドリング]]></title><description><![CDATA[
 はじめに
今回は、Honoとその3rd-party MiddlewareであるZod OpenAPIを使ったときのAPIエラーハンドリングについて紹介します。APIのエラーハンドリングというと、主に以下のようなケースが考えられます。

パスやボディ、クエリなどのリクエストパラメータが不正な場合のバリデーションエラー（400 Bad Request）
トークンが存在しなかったり、期限切れになっているなどの認証エラー（401 Unauthorized）
データベース接続の失敗や外部サービスとの連携時に起こるサーバーエラー（500 Internal Server Error）

Honoの...]]></description><link>https://zenn.dev/frontendflat/articles/hono-zod-openapi-error-handling</link><guid isPermaLink="true">https://zenn.dev/frontendflat/articles/hono-zod-openapi-error-handling</guid><pubDate>Mon, 03 Mar 2025 00:38:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CTcnlHZy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono%2520Zod%2520OpenAPI%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ito%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyMjUxMzg1ODUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEFLAT%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3dOM1FTR3R3V3FtQVJpWTMtbllYOWlIcjJjcjRFZkh5YUg5b3V1djRZLUY4PXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ito</dc:creator></item><item><title><![CDATA[CDKを用いたAWS WAF CAPTCHA設定]]></title><description><![CDATA[
 導入

 背景・目的

AWS WAF CAPTCHAを設定してユーザにCAPTCHAチャレンジを要求することは、ボットによるアクセスをブロックするのに有用です。
本記事では、CloudFrontで配信されるフォーム画面へのAWS WAF CAPTCHA設定方法について、CDKサンプルコードとともに解説します。


 対象読者

本記事は、AWS 認定ソリューションアーキテクト - アソシエイトレベルの知識を持つ読者を想定しており、AWSサービスの基本的な解説は省略します。


 環境概要
本記事で構築する環境の全体像を説明します。


 CAPTCHA設定

 AWS資源構築
CD...]]></description><link>https://zenn.dev/acntechjp/articles/684c2e89159899</link><guid isPermaLink="true">https://zenn.dev/acntechjp/articles/684c2e89159899</guid><pubDate>Sun, 02 Mar 2025 21:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BSdLUdlM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CDK%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259FAWS%2520WAF%2520CAPTCHA%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazuyaasawa%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2ZDA4MDY5ODcuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Accenture%2520Japan%2520%2528%25E6%259C%2589%25E5%25BF%2597%2529%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhNDZkNmE2Y2IuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuyaasawa</dc:creator></item><item><title><![CDATA[Next.jsでフラッシュメッセージを実装する]]></title><description><![CDATA[
 これは何？

タイトルの通り。サーバーアクションの結果をフロントに伝達するためにフラッシュメッセージを実装したときのメモ
環境

Next.js 15.2.0 App Router
shadcn/ui



以前の記事をブラッシュアップして、前回より汎用的に使えるようにしました。


 ユースケース
Ruby on Railsと同じ要領で、サーバー側のアクション（今回はReact Server Action）が実行されたら、期限0秒のcookieを設定し、フロント側にトーストメッセージを出す。

 動作デモ


 コード設計

 レイアウトに配置するコンポーネント

 flash-t...]]></description><link>https://zenn.dev/yasuakiomokawa/articles/caf10cde778714</link><guid isPermaLink="true">https://zenn.dev/yasuakiomokawa/articles/caf10cde778714</guid><pubDate>Sun, 02 Mar 2025 13:15:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DI1J-40Y--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%2583%25E3%2582%25BB%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%259D%25A2%25E5%25B7%259D%25E6%25B3%25B0%25E6%2598%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o4Z2JYdTRLN2ZxZHJfaGhJTjlKWWZ5TDUtRG1qVDd2aWpKVWVFVXc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>面川泰明</dc:creator></item><item><title><![CDATA[【React v19】use APIの基本的な使い方 ~Promise編~]]></title><description><![CDATA[
 はじめに
こんにちは！
今回はReact v19で新しく追加されたuseAPIのプロミス（Promise）に関する使い方についてアウトプットを兼ねてまとめたいと思います！
※記載されているデモコードの実行環境は以下になります
実行環境"next": "15.2.0",
"react": "19.0.0",
"react-dom": "19.0.0",
"react-error-boundary": "^5.0.0"


 記事を読むメリット


useAPIのプロミスに関する概要・使い方、メリットを知ることができる


 結論


useを使うことで、サーバコンポーネントから受け取っ...]]></description><link>https://zenn.dev/mocchio/articles/f02186a325ab6f</link><guid isPermaLink="true">https://zenn.dev/mocchio/articles/f02186a325ab6f</guid><pubDate>Sun, 02 Mar 2025 10:37:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QArnGpbY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590React%2520v19%25E3%2580%2591use%2520API%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2520%7EPromise%25E7%25B7%25A8%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mocchio%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUzZTUwNTgwOWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mocchio</dc:creator></item><item><title><![CDATA[非UTF-8ページのOGPを取得する]]></title><description><![CDATA[いろんな方法があるのであくまでパターン・方法の1つという感じで残しておく
今回の私の場合の環境は以下の感じ

Cloudflare Workers上で動作する
OGPの取得そのものはopen graph scaraper liteを利用していた
コードはTypeScriptで記述されていた

https://github.com/jshemas/openGraphScraperLite

 改良前（UTF-8のみ対応）
一部抜粋で書くとこんな感じだった
const response = fetch(url, {headers: {'User-Agent': 'bot'}})
const ...]]></description><link>https://zenn.dev/maretol/articles/cd4b17db5eda96</link><guid isPermaLink="true">https://zenn.dev/maretol/articles/cd4b17db5eda96</guid><pubDate>Sun, 02 Mar 2025 09:18:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pAIM-oKm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%259D%259EUTF-8%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AEOGP%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maretol%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hHd3ROUEQtTzQxSkszUmNIbmUtel9hb1hhQ3d2M2phWlBJVzlDPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maretol</dc:creator></item><item><title><![CDATA[自分のコーディングスタイル(TDD/DDD/FP)をAIに叩き込む]]></title><description><![CDATA[AI に自分のスタイルでコードを書かせたい。
自分のコーディングスタイルを端的にまとめると、たぶんこう。

TDD でミニマルにはじめるのが好き
でも DDD で段階的にドメインモデリングもしたい
実装は関数型ドメインモデリングに寄せる

これをAIに叩き込みたい。資料を読ませてプロンプトを作って、それにそって実装させる。
エヴァンスのDDDと軽量DDDの2つでやらせてみる。
コードはここ
https://github.com/mizchi/ailab

 自分のコーディングスタイルに合わせたプロンプトを作成する
MCPエージェントで検索とURL展開を使える状態で次のように指示をした。(...]]></description><link>https://zenn.dev/mizchi/articles/ai-ddd-tdd-prompt</link><guid isPermaLink="true">https://zenn.dev/mizchi/articles/ai-ddd-tdd-prompt</guid><pubDate>Sun, 02 Mar 2025 08:03:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Z5q6U7aG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2528TDD%252FDDD%252FFP%2529%25E3%2582%2592AI%25E3%2581%25AB%25E5%258F%25A9%25E3%2581%258D%25E8%25BE%25BC%25E3%2582%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mizchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mizchi</dc:creator></item><item><title><![CDATA[Vue.js + TypeScript + Vite + VSCode DevContainers で開発環境を作る]]></title><description><![CDATA[
 はじめに
お仕事でVSCodeのDevContainersを用いて開発を行っております。
そちらが便利でしたので備忘録として残します。

 動作環境

MacOS(intel)
Visual Studio Code: v1.97.2
Node.js: v22.14.0
npm: v10.9.2


 用語補足



用語
説明




Dev Containers
Dockerのコンテナを活用して、開発環境を構築・管理するVSCodeの拡張機能


Docker
アプリケーションをすばやく構築、テスト、デプロイできるプラットフォーム


コンテナ
アプリケーションの実行に必要な環境を...]]></description><link>https://zenn.dev/mk663/articles/6861978fa091a3</link><guid isPermaLink="true">https://zenn.dev/mk663/articles/6861978fa091a3</guid><pubDate>Sun, 02 Mar 2025 05:51:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nii2yXq5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue.js%2520%252B%2520TypeScript%2520%252B%2520Vite%2520%252B%2520VSCode%2520DevContainers%2520%25E3%2581%25A7%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZkMDAzMjEzMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mk</dc:creator></item><item><title><![CDATA[SSG向け日本語対応の全文検索エンジンを作りました(5) - 使いやすい検索にしたい！]]></title><description><![CDATA[
第一回 日本語で検索したい！

第二回 英語でももちろん検索したい！

第三回 打ち間違いしても検索したい！

第四回 WebGPUで検索したい！

第五回 使いやすい検索にしたい！(今回)

前回のあらすじ！あいまい検索の高性能化を模索していたぼくは、GPUによる検索のオフロードという手法があることを知りました。GPUのアーキテクチャを確認し、WebGPUの長い作法とバッファの扱いの難しさを超え、なんとかWGSLでbitapを実装することができました。プロファイル結果に不明な点はあれど、CPUで実行するbitapに比べ、10倍程度の高速化を達成できました。
以下のサイトで、ぼくが作成...]]></description><link>https://zenn.dev/lulliecat/articles/fdecd7dae36f89</link><guid isPermaLink="true">https://zenn.dev/lulliecat/articles/fdecd7dae36f89</guid><pubDate>Sun, 02 Mar 2025 02:43:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yN4l2cuh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSG%25E5%2590%2591%25E3%2581%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25285%2529%2520-%2520%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25AB%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lulliecat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYmM0MzgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lulliecat</dc:creator></item><item><title><![CDATA[型 '{ children: ReactNode; }' には型 'IntrinsicAttributes' と共通のプロパティがありません]]></title><description><![CDATA[
 タイトルのエラー文について
&lt;Provider&gt;部分の問題のようです

layout.tsx
import Provider from "./Provider";

export default function Layout({
  children,
}: {
  children: React.ReactNode;
}) {
  return &lt;Provider&gt;{children}&lt;/Provider&gt;;
}


Provider.tsx
export default function Provider() {}


 解決方法

Prov...]]></description><link>https://zenn.dev/wakki/articles/9d9ec7820cecbb</link><guid isPermaLink="true">https://zenn.dev/wakki/articles/9d9ec7820cecbb</guid><pubDate>Sat, 01 Mar 2025 19:06:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ztq0kcb7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%259E%258B%2520%2527%257B%2520children%253A%2520ReactNode%253B%2520%257D%2527%2520%25E3%2581%25AB%25E3%2581%25AF%25E5%259E%258B%2520%2527IntrinsicAttributes%2527%2520%25E3%2581%25A8%25E5%2585%25B1...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%25AF%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkOTg4YTEyNmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ワッキー</dc:creator></item><item><title><![CDATA[Notion Cloneを作って学ぶReact, Next.js, TypeScript]]></title><description><![CDATA[React 19, Next.js 15, TypeScript, Tailwind CSS 4を使ってNotionのクローンを作りながら学ぶ]]></description><link>https://zenn.dev/oyamiya/books/notion-clone</link><guid isPermaLink="true">https://zenn.dev/oyamiya/books/notion-clone</guid><pubDate>Sat, 01 Mar 2025 17:25:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WdmIw_AT--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9hZDY5MmY2MmZhLnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Miyako Oyadomari</dc:creator></item><item><title><![CDATA[自分で型を書く力をつけるTypeScript実践ガイド]]></title><description><![CDATA[そろそろTypeScriptの型をまじめに勉強しなきゃな...ということで、自分の勉強も兼ねて「一歩先の型活用」をまとめてみました。そのためユニオン[1]、インターセクション[2]、ユーティリティ型[3]といった基本的な部分は触れていません。
この投稿では：

できる限りTypeScript特有の用語には脚注でハンドブックのリンクを示しています
実際のコードを示すことで「実際に動かして学べるように」しています
可能な限り極端な例を出して分かりやすくなるようにしています

ここで示すコードが実務には適さない場合もあります


順序立ててなるべく分かりやすいように説明しています(自分も忘れて...]]></description><link>https://zenn.dev/yoshipc/articles/fad98d25929f86</link><guid isPermaLink="true">https://zenn.dev/yoshipc/articles/fad98d25929f86</guid><pubDate>Sat, 01 Mar 2025 13:03:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tj_Onrl9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E5%259E%258B%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%25E5%258A%259B%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%258BTypeScript%25E5%25AE%259F%25E8%25B7%25B5%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yoooo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y5MTUyNGZlZTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yoooo</dc:creator></item><item><title><![CDATA[LogTape 0.9.0 リリース：同期設定APIとランタイム互換性の向上]]></title><description><![CDATA[LogTape 0.9.0のリリースを発表できることを嬉しく思います！このバージョンでは、さまざまなJavaScript環境での柔軟性を高めながら、一般的なユースケースでの設定を簡素化する重要な改善が含まれています。

 新機能

 同期設定API：セットアップの簡素化
同期バージョンの設定関数が追加されました：


configureSync()：LogTapeを同期的に設定

disposeSync()：LogTapeリソースを同期的に破棄

resetSync()：LogTape設定を同期的にリセット

これらの関数は、非同期操作が不要なシナリオ向けに、よりシンプルなAPIを提供し...]]></description><link>https://zenn.dev/hongminhee/articles/98989e400c5fcf</link><guid isPermaLink="true">https://zenn.dev/hongminhee/articles/98989e400c5fcf</guid><pubDate>Sat, 01 Mar 2025 10:13:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2n9skZgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LogTape%25200.9.0%2520%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25EF%25BC%259A%25E5%2590%258C%25E6%259C%259F%25E8%25A8%25AD%25E5%25AE%259AAPI%25E3%2581%25A8%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25A0%25E4%25BA%2592%25E6%258F%259B%25E6%2580%25A7%25E3%2581%25AE%25E5%2590%2591%25E4%25B8%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%25B4%25AA%2520%25E6%25B0%2591%25E6%2586%2599%25EF%25BC%2588%25E3%2583%259B%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%259F%25E3%2583%25B3%25E3%2583%2592%25EF%25BC%2589%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE4Yzk5ZDE5YWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>洪 民憙（ホン・ミンヒ）</dc:creator></item><item><title><![CDATA[SSG向け日本語対応の全文検索エンジンを作りました(4) - WebGPUで検索したい！]]></title><description><![CDATA[
第一回 日本語で検索したい！

第二回 英語でももちろん検索したい！

第三回 打ち間違いしても検索したい！

第四回 WebGPUで検索したい！(今回)
第五回 使いやすい検索にしたい！


前回のおさらい！そもそも転置インデックスを作る必要すらなく線形探索で十分な性能が出ることがわかりました。やることがなくなってしまった私は、苦し紛れに新しい機能、あいまい検索を導入しました。基本的なアルゴリズムであるbitapの実装を行い、それがちゃんと遅いことを確認（？）したのちに、英語はトライを導入、日本語はbigram一致数の緩和を行うことであいまい検索を1ms以下で実現できました。しかし、...]]></description><link>https://zenn.dev/lulliecat/articles/9a92836ef90dc1</link><guid isPermaLink="true">https://zenn.dev/lulliecat/articles/9a92836ef90dc1</guid><pubDate>Sat, 01 Mar 2025 09:23:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IqEtzukn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SSG%25E5%2590%2591%25E3%2581%2591%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AE%25E5%2585%25A8%25E6%2596%2587%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25284%2529%2520-%2520WebGPU%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:lulliecat%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYmM0MzgwNDAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>lulliecat</dc:creator></item><item><title><![CDATA[Supabase での型キャスト対応と RPC 関数による柔軟な検索処理の実装例]]></title><description><![CDATA[この記事では、Supabase を利用したデータ検索処理において、クライアント側で直接 SQL のキャストができないという課題に対し、データベース側で RPC 関数を作成して解決する方法について説明します。
具体的には、数値型や日付型のカラムに対して部分一致検索を行う際のキャスト処理や、戻り値の型の不一致エラーに対処するための手順、そして TypeScript の型定義に合わせた実装例についてまとめています。


 背景
Supabase のクエリビルダーでは、.or() などのフィルター構文内に直接 SQL のキャスト構文（例：amount::text）を埋め込むことがサポートされてい...]]></description><link>https://zenn.dev/ktrszk/articles/0b5127f9d4f7d8</link><guid isPermaLink="true">https://zenn.dev/ktrszk/articles/0b5127f9d4f7d8</guid><pubDate>Sat, 01 Mar 2025 04:29:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w0GXxrwR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Supabase%2520%25E3%2581%25A7%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25AD%25E3%2583%25A3%25E3%2582%25B9%25E3%2583%2588%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25A8%2520RPC%2520%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%259F%2594%25E8%25BB%259F%25E3%2581%25AA%25E6%25A4%259C%25E7%25B4%25A2%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E4%25BE%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kotaro%2520Suzuki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXc3F4bl9xenpWS2duS0l0TjctNFNLOEh4dzhmaDY5bnNBQ3I0NGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kotaro Suzuki</dc:creator></item><item><title><![CDATA[カスタムフックの紹介と導入【React】]]></title><description><![CDATA[
 はじめに
先日、React の勉強会で、カスタムフックの実装について取り上げました 🪝
コンポーネントからロジックを分離することで、
より保守性の高い React アプリケーションの構築に繋がります！
今回は、カスタムフック初心者の方向けに、
「カスタムフックの利点と使用法」についてまとめました！
カスタムフック導入の第一歩として、参考になれば嬉しいです 🙌

 React のカスタムフックとは？
https://ja.react.dev/learn/reusing-logic-with-custom-hooks
公式の紹介を要約すると、

React には useState、use...]]></description><link>https://zenn.dev/b13o/articles/tutorial-custom-hook</link><guid isPermaLink="true">https://zenn.dev/b13o/articles/tutorial-custom-hook</guid><pubDate>Fri, 28 Feb 2025 13:44:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J-wPNyAp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E5%25B0%258E%25E5%2585%25A5%25E3%2580%2590React%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kazzyfrog%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkYWE3NjM3NGMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:b13o%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMzRmZDk1NTIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazzyfrog</dc:creator></item><item><title><![CDATA[TypeScript で enum は不要? なにそれ?]]></title><description><![CDATA[TypeScript は JavaScript に静的型付けのパワーをもたらす言語として、フロントエンドからバックエンドまで幅広く利用されています。そんな TypeScript の機能の一つとして、enum（列挙型）があります。enum は、あらかじめ決まっている複数の値をまとめて定義する仕組みです。
本記事では、TypeScript の enum がどのように役立つのか、そのメリットやユースケース、さらに注意点や代替案との比較を解説していきます。


 1. enum とは？
enumは、「あらかじめ決まっている複数の値をまとめて定義するための機能」です。たとえば、ユーザーのロール（A...]]></description><link>https://zenn.dev/tcool/articles/447bc896d049c8</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/447bc896d049c8</guid><pubDate>Fri, 28 Feb 2025 11:47:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nzcw7CQO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TypeScript%2520%25E3%2581%25A7%2520enum%2520%25E3%2581%25AF%25E4%25B8%258D%25E8%25A6%2581%253F%2520%25E3%2581%25AA%25E3%2581%25AB%25E3%2581%259D%25E3%2582%258C%253F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item></channel></rss>