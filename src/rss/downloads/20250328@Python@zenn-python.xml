<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 28 Mar 2025 06:40:41 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【Python】enumerate関数の使い方]]></title><description><![CDATA[
 まず、enumerate関数とは？
Pythonの enumerate() 関数は、リストやタプルなどの反復可能なオブジェクトをループ処理する際に、要素のインデックス（番号）と値を同時に取得できる便利な関数です。

 enumerate() の基本的な使い方
fruits = ["apple", "banana", "cherry"]

for index, fruit in enumerate(fruits):
    print(index, fruit)
出力
0 apple
1 banana
2 cherry

 start 引数でインデックスを変更
デフォルトではインデック...]]></description><link>https://zenn.dev/daichi09167/articles/3f4bad215fdd44</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/3f4bad215fdd44</guid><pubDate>Fri, 28 Mar 2025 06:08:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I-joglPy--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591enumerate%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YTc4OTEwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item><item><title><![CDATA[使いやすさにこだわった自作Python画像圧縮ツールの紹介]]></title><description><![CDATA[
 1.はじめに-ツール作成の背景
こんにちは！ごく一般の理系大学院生 けんじえんどうです！今回は，趣味で開発した 「画像圧縮ツール」 について紹介します！！

 1.1.このツールの開発動機
学部時代に，初めて学会の予稿集用の論文をLaTeXを用いて執筆しました．その際に，提出する論文のファイルサイズに制限があるのを初めて知り，むやみやたらに図を記載していた私は，ファイルサイズの制限をゆうに超えました．その時，画像を圧縮するためのWebサイトを使用しましたが，そのWebサイトは，一度に圧縮できる画像ファイル数の制限があったり，ダウンロードをしたりしたため，面倒な作業だと考えました．そこ...]]></description><link>https://zenn.dev/kenjiendou/articles/88895e3b3256c0</link><guid isPermaLink="true">https://zenn.dev/kenjiendou/articles/88895e3b3256c0</guid><pubDate>Fri, 28 Mar 2025 05:49:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sWlVrkvc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2595%25E3%2581%25AB%25E3%2581%2593%25E3%2581%25A0%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E8%2587%25AA%25E4%25BD%259CPython%25E7%2594%25BB%25E5%2583%258F%25E5%259C%25A7%25E7%25B8%25AE%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2591%25E3%2582%2593%25E3%2581%2598%25E3%2581%2588%25E3%2582%2593%25E3%2581%25A9%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U1ODFiNmE1MmEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>けんじえんどう</dc:creator></item><item><title><![CDATA[FastAPIの非同期処理と並行処理の使い分け]]></title><description><![CDATA[業務でFastAPIのパフォーマンスチューニングに触れる機会があり、非同期処理（async def）と並行処理（def）の違いってなんだっけ？みたいな感じになったので、備忘録で残します。

 はじめに（おさらい）

 1. 同期処理とは？
同期処理は、タスクを一つずつ順番に処理する方法です。一つのタスクが終わるまで次のタスクは待機します。
# 同期処理の例
def make_banana_smoothie():
    peel_banana()    # 完了するまで待つ
    cut_banana()     # 完了するまで待つ
    blend_banana()   # 完了...]]></description><link>https://zenn.dev/headwaters/articles/c992bba6d245c8</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/c992bba6d245c8</guid><pubDate>Fri, 28 Mar 2025 05:35:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--q69-TmGS--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FastAPI%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A8%25E4%25B8%25A6%25E8%25A1%258C%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:hyodo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5wbmc=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hyodo</dc:creator></item><item><title><![CDATA[リストモナドをPythonで再現したい part 2]]></title><description><![CDATA[
 前回のおさらい
https://zenn.dev/kazuma624/articles/cc1022c7407322
Python で Haskell のリストモナドを再現しました。
def foldr(f, z, xxs):
    if xxs == []:
        return z

    x = xxs[0]
    xs = xxs[1:]
    return f(x, foldr(f, z, xs))


def concat(xxs):
    plus = lambda x, y: x + y
    return foldr(plus, [], xxs)...]]></description><link>https://zenn.dev/kazuma624/articles/2c2e10605ab282</link><guid isPermaLink="true">https://zenn.dev/kazuma624/articles/2c2e10605ab282</guid><pubDate>Fri, 28 Mar 2025 00:45:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xWtMWlrn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A2%25E3%2583%258A%25E3%2583%2589%25E3%2582%2592Python%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2520part%25202%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma624%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuma624</dc:creator></item><item><title><![CDATA[理論物理学の（まともな）論文を生成するAIを作りたい #3]]></title><description><![CDATA[
 3日目

 NumPy で行列の演算
ちょっとおもろい（行列の積すぐ計算してくれるからスゲー）
ブロードキャストとかいうやつ、自動で足りひん行（列）補完するとか危なくないか？
諸刃の剣すぎるやろ
エラーも出えへんし、上手く行ってるとか思ってたら、想定外の処理してました
嬉しいと思ってた結果はそれ依存で、実は何も成果なかったです
とかならへんのか？
なるやろ

 Pandas
データの取り出しとか　代表値の計算とか
おもんない
なんでpandaなん？
パイソンの中にパンダ作んなよ。丸呑みされてるみたいやんけ。
動物園におるPythonが得意なアルビノのパンダ、白PyPy。

 scik...]]></description><link>https://zenn.dev/physicist/articles/bfce3ec1035aac</link><guid isPermaLink="true">https://zenn.dev/physicist/articles/bfce3ec1035aac</guid><pubDate>Thu, 27 Mar 2025 15:58:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rrs-jTW7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2590%2586%25E8%25AB%2596%25E7%2589%25A9%25E7%2590%2586%25E5%25AD%25A6%25E3%2581%25AE%25EF%25BC%2588%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2582%25E3%2581%25AA%25EF%25BC%2589%25E8%25AB%2596%25E6%2596%2587%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258BAI%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%259F%25E3%2581%2584%2520%25233%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25AD%25E3%2581%25AE%25E6%25A0%2593%25E6%258A%259C%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1N2UxNWI3YjUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ティキの栓抜き</dc:creator></item><item><title><![CDATA[【FastAPI開発者必見】"email-validator version >= 2.0 required" エラーの解決方法]]></title><description><![CDATA[FastAPIでアプリを起動しようとしたとき、以下のようなエラーに遭遇したことはありませんか？
ImportError: email-validator version &gt;= 2.0 required, run pip install -U email-validator
この記事では、このエラーの原因と、最短での解決方法を解説します。


 ❓ エラー内容
FastAPIを uvicorn で起動すると、次のようなエラーが表示されて起動に失敗します。
ImportError: email-validator version &gt;= 2.0 required, run pip ...]]></description><link>https://zenn.dev/homatsu_tech/articles/efb91e0738970d</link><guid isPermaLink="true">https://zenn.dev/homatsu_tech/articles/efb91e0738970d</guid><pubDate>Thu, 27 Mar 2025 15:29:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wDpkpdZP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590FastAPI%25E9%2596%258B%25E7%2599%25BA%25E8%2580%2585%25E5%25BF%2585%25E8%25A6%258B%25E3%2580%2591%2522email-validator%2520version%2520%253E%253D%25202.0%2520required%2522%2520%25E3%2582%25A8...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25AE%259D%25E6%259D%25BE%2540%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZWQ1ZGYyMjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>宝松@システムエンジニア</dc:creator></item><item><title><![CDATA[三項演算子(Ternary Operator)とは]]></title><description><![CDATA[こんにちは！三項演算子(Ternary Operator)について、JavaScript、TypeScript、Pythonでそれぞれで解説していきたいと思います。

 まず、三項演算子(Ternary Operator)とは？
三項演算子（Ternary Operator）は、簡潔に条件分岐を記述できる演算子です。
以下の構文で表現されます：
条件式 ? 真の値 : 偽の値

 1. JavaScript の場合
JavaScript では if...else の短縮形として三項演算子を使用できます。

 基本構文

const age = 20;
const isAdult = ag...]]></description><link>https://zenn.dev/daichi09167/articles/fc4e5c4e31f748</link><guid isPermaLink="true">https://zenn.dev/daichi09167/articles/fc4e5c4e31f748</guid><pubDate>Thu, 27 Mar 2025 15:15:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sn7lOIJa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E4%25B8%2589%25E9%25A0%2585%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2528Ternary%2520Operator%2529%25E3%2581%25A8%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daichi09167%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3YTc4OTEwMDcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daichi09167</dc:creator></item><item><title><![CDATA[Prisma + Supabase ポート6543の罠！謎のエラーとの格闘記]]></title><description><![CDATA[
 【結論】Prisma + Supabase 接続でハマらないために
この記事は、Prisma から Supabase のデータベースに接続する際に発生しやすい prepared statement "..." already exists というエラーとの格闘記録です。最初に、ハマりやすいポイントとその対策をまとめます。

 🚨 注意すべきこと
Prisma Client は、Supabase が提供するコネクションプーラー（PgBouncer）のトランザクションプーリングモードと相性が悪く、prepared statement "..." already exists (Postg...]]></description><link>https://zenn.dev/taka4rest/articles/bef721a313f5b1</link><guid isPermaLink="true">https://zenn.dev/taka4rest/articles/bef721a313f5b1</guid><pubDate>Thu, 27 Mar 2025 12:19:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--288sNipD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Prisma%2520%252B%2520Supabase%2520%25E3%2583%259D%25E3%2583%25BC%25E3%2583%25886543%25E3%2581%25AE%25E7%25BD%25A0%25EF%25BC%2581%25E8%25AC%258E%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%25AE%25E6%25A0%25BC%25E9%2597%2598%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka4rest%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTEYzSGx1OWRMNF9FWC1kY3duQUVJLWl2dzRub01LNmNiZTNaTVRzTFN2blVaOVdJbz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka4rest</dc:creator></item><item><title><![CDATA[ビッグ・オー記法を学ぶ]]></title><description><![CDATA[生成AIは本当に便利で、使っていて楽しいですね。
一方で、レビュー側に回ることになった人間としては頭を抱えることも多いのではないでしょうか。
その中の一つに計算量があると思います。
改めてビッグ・オーを学ぶことで、生成AIが出力したコードを疑えるようになろう！
という、本日行う社内勉強会に向けた資料です。突貫で作成。

 ビッグ・オーとは
プログラムの性能を記述するために使う表記方法のことです。
次のような表記を見たことがあるのではないでしょうか。

O(N), O(logN), O(N^2), O(2^N)


 3つの計算量

 時間計算量
プログラムの実行時間。
喫茶店で例えるなら...]]></description><link>https://zenn.dev/fleagne/articles/765e399c56669f</link><guid isPermaLink="true">https://zenn.dev/fleagne/articles/765e399c56669f</guid><pubDate>Thu, 27 Mar 2025 09:20:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ieDFzX4G--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2593%25E3%2583%2583%25E3%2582%25B0%25E3%2583%25BB%25E3%2582%25AA%25E3%2583%25BC%25E8%25A8%2598%25E6%25B3%2595%25E3%2582%2592%25E5%25AD%25A6%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fleagne%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JhMTg0YjlmYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fleagne</dc:creator></item><item><title><![CDATA[AIをつくったら自分でアプリ化してみよう]]></title><description><![CDATA[「AIモデルをつくって終わり」「データ分析をグラフにしただけ」で満足していませんか？

本書は、Pythonを使って構築したAIやデータ分析の成果を、“アプリケーションとして誰かに届ける”ための手段として、Streamlitというフレームワークを活用し、
その実践方法を解説する1冊です。

■ 本書でできること
・Pythonで構築したAIモデルのアプリ化
・ユーザーと会話できるChatBotアプリの作成
・購買データを使ったグラフ付き分析ダッシュボードの構築
・SQLベースでの集計処理 × Pandas × Plotlyによる美しい可視化

■ 読者対象
・Pythonの基礎を学び終えた初中級者
・Streamlitに興味があるが、実際のアプリ例を知りたい方
・自分のAI・分析を「見せる」「使ってもらう」形にしたい方
・社内にデータ分析結果を共有したいビジネスパーソン]]></description><link>https://zenn.dev/paxdare_labo/books/44009f2ceafa2f</link><guid isPermaLink="true">https://zenn.dev/paxdare_labo/books/44009f2ceafa2f</guid><pubDate>Thu, 27 Mar 2025 04:57:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W7hwURvo--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci82Yzg1NzAxNmFkLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>データ分析普及推進研究所</dc:creator></item><item><title><![CDATA[MCPを活用して社内システムをClaudeから操作する]]></title><description><![CDATA[
 はじめに
みなさん、MCPサーバーで遊んでいますでしょうか。すでにOSS用のMCPサーバや主要なサービスはMCPサーバを提供していますね。以下にMCPサーバのリストの一種ですが提示しておきます。
https://github.com/modelcontextprotocol/servers
ところで、主要なサービスにはMCPサーバが提供されていますが、社内のシステムにはどうでしょうか。提供されていない場合は私の記事を参考にしていただければと思います。
したがって、今回は社内のシステムにMCPサーバを導入して、Claudeから社内のシステムを操作する方法を紹介します。
!
MCPサーバ...]]></description><link>https://zenn.dev/coco9122/articles/mcp-server-coco9122</link><guid isPermaLink="true">https://zenn.dev/coco9122/articles/mcp-server-coco9122</guid><pubDate>Wed, 26 Mar 2025 16:36:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--v-n2gOJd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:MCP%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E7%25A4%25BE%25E5%2586%2585%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592Claude%25E3%2581%258B%25E3%2582%2589%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:CoCo9122%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hLY1FkbTlXblJabGVYLTBPeE5sM0tBTmpXNDVwcGpPU3pwMXdrPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>CoCo9122</dc:creator></item><item><title><![CDATA[【Web開発】どのプログラミング言語が最適？用途別の技術スタックまとめてみた]]></title><description><![CDATA[
 はじめに
Webサイトやオンラインサービスを作るとき、どの言語やフレームワークを使えばよいか迷ったことありませんか？
そんな悩みにお答えすべく、ケース別で最適なプログラミング言語をまとめました。
サービス開発の一助となれば幸いです！


 1. 画像や動画を速く表示したい
画像や動画をサクサク表示したいならNext.jsが最適。画像を自動で圧縮してくれるので表示速度がぐっとアップします。
アクセスが集中するサイトには、同時処理に強いNode.jsや高速処理のGoを使えばさらに快適です！



技術
特徴




Next.js
画像を自動で軽くして表示速度を上げてくれる（WebPなど...]]></description><link>https://zenn.dev/tomo0108/articles/dee47c616413ca</link><guid isPermaLink="true">https://zenn.dev/tomo0108/articles/dee47c616413ca</guid><pubDate>Wed, 26 Mar 2025 13:49:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qRdSlJLR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Webw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ToMo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTElVaUtHaTlGYTZrbjM1eVFjX1Vvd3FTQVRaRWUwWUx5SzVmeHhhRWhCdWJBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ToMo</dc:creator></item><item><title><![CDATA[GitHub Actionsでpyファイルをexe化する(ウイルス誤検知対策も)]]></title><description><![CDATA[
 背景
とあるソフトウェアを作ったものの、リリース前に毎回ビルド→zip→アップロードするのも怠いのでActionsを使おう!!って。
でも検索してもpyinstallerのブートローダーのビルドを行っている例がなくて。
あれやらないとウイルス判定されるので。
んじゃ書くしかねぇ!!ってことで不慣れながら書いてみた。

 できたもの
name: Build Windows EXE

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'リリースバージョン (例: v1.0.0)'
      ...]]></description><link>https://zenn.dev/ziaensochan/articles/b55a5f38e1667b</link><guid isPermaLink="true">https://zenn.dev/ziaensochan/articles/b55a5f38e1667b</guid><pubDate>Wed, 26 Mar 2025 10:12:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GZh79IuL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7py%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592exe%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2528%25E3%2582%25A6%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B9%25E8%25AA%25A4%25E6%25A4%259C%25E7%259F%25A5%25E5%25AF%25BE%25E7%25AD%2596%25E3%2582%2582%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:samenoko%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwM2U4Y2M2ZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>samenoko</dc:creator></item><item><title><![CDATA[LINEボットをつくろう（Python, flask, Vercel）]]></title><description><![CDATA[
 はじめに
誰でも、簡単にLINEボットをつくれる方法を紹介したいと思います。普段は、Next.jsで開発をしているのですが、Pythonを用いて、簡単にLINEボットをつくれる方法を紹介したいと思います。
今回は、オウム返しをゴールに進めていきます。

 事前準備
作成するにあたって、以下の事前準備を行わないといけません。すでに出来ている人は、先に進んでください。

Cusorのインストール（VScodeやほかのコードエディターでも可）
Python環境構築
Githubアカウントの作成
Vercelアカウントの作成
gitインストール
LINE公式アカウントの作成


 Curso...]]></description><link>https://zenn.dev/tanileo/articles/0f8facc6ef7bd3</link><guid isPermaLink="true">https://zenn.dev/tanileo/articles/0f8facc6ef7bd3</guid><pubDate>Wed, 26 Mar 2025 06:21:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1Uu416mk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LINE%25E3%2583%259C%25E3%2583%2583%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258D%25E3%2581%2586%25EF%25BC%2588Python%252C%2520flask%252C%2520Vercel%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25BF%25E3%2583%258B%25E3%2583%25AC%25E3%2582%25AA%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSlFQbmhsRVVTYnNZR1ltS3JYUXNudUw4VTUxekVZeGRqcGIybHU2bmI0dG1aOGM5LXo9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>タニレオ</dc:creator></item><item><title><![CDATA[OpenAI Agents SDKのエージェントの実装の種類（agent_patterns）について解説する]]></title><description><![CDATA[
 エージェントの実装パターン
以下のgithubのサンプルについて解説する。
https://github.com/openai/openai-agents-python/blob/main/examples/agent_patterns/README.md

 決定論的フロー（Deterministic flows）
タスクを複数の小さなステップに分割して事前にコード上で定義しておき、それぞれをエージェントに処理させる方法。前のエージェントの出力が次のエージェントの入力となる。
上位エージェントが動的に振り分けをしているわけではなく、事前に定義したフローチャートに従って実行される。分...]]></description><link>https://zenn.dev/k_zumi_dev/articles/6db95e11ab9f36</link><guid isPermaLink="true">https://zenn.dev/k_zumi_dev/articles/6db95e11ab9f36</guid><pubDate>Wed, 26 Mar 2025 05:35:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--92J0m9ZL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:OpenAI%2520Agents%2520SDK%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E7%25A8%25AE%25E9%25A1%259E%25EF%25BC%2588agent_patterns%25EF%25BC%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25A7%25A3%25E8%25AA%25AC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:k_zumi_dev%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiMTRjZTg1MTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>k_zumi_dev</dc:creator></item><item><title><![CDATA[【Python】スライス記法（slice notation）について]]></title><description><![CDATA[スライス記法は、リストや文字列から一部分を取り出すための便利な方法です。
まるでケーキを切り分けるように、データの一部を簡単に取り出せます！

 スライス記法の基本
スライス記法は、[開始位置:終了位置:ステップ数]という形で書きます。
終了位置は、ここの手前まで取ります。ですので、この位置自体は含みません。
ちょっと難しそうに聞こえるかもしれませんが、実際に使ってみるととても簡単ですよ。
my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
print(my_list[2:7])  # [2, 3, 4, 5, 6]
この例では、my_listの2番目から7...]]></description><link>https://zenn.dev/hovinci/articles/acf8bb44fda120</link><guid isPermaLink="true">https://zenn.dev/hovinci/articles/acf8bb44fda120</guid><pubDate>Wed, 26 Mar 2025 02:22:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--B5atWLu6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%25E8%25A8%2598%25E6%25B3%2595%25EF%25BC%2588slice%2520notation%25EF%25BC%2589%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259B%25E3%2583%25B4%25E3%2582%25A3%25E3%2583%25B3%25E3%2583%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI0MWFjY2M3YWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ホヴィンチ</dc:creator></item><item><title><![CDATA[sgmap: AWSセキュリティグループの可視化ツール]]></title><description><![CDATA[
 はじめに
AWS のセキュリティグループは、インスタンスへのトラフィックを制御する重要な仕組みですが、複数の VPC やリージョンにまたがる環境では、セキュリティグループの関係性を把握することが難しくなります。特に大規模な環境では、どのセキュリティグループがどのリソースに関連付けられているのか、またそれらの間の通信経路を理解することは容易ではありません。
この課題を解決するために開発したのが「sgmap」です。sgmap は、AWS のセキュリティグループの関係性を可視化し、セキュリティ設定の理解と管理を容易にするツールです。

 sgmap とは
sgmap は、AWS のセキュリ...]]></description><link>https://zenn.dev/youyo/articles/sgmap-aws-security-group-mapping-tool</link><guid isPermaLink="true">https://zenn.dev/youyo/articles/sgmap-aws-security-group-mapping-tool</guid><pubDate>Wed, 26 Mar 2025 01:47:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--I8fyiWE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:sgmap%253A%2520AWS%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B0%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2597%25E3%2581%25AE%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2520Ishizawa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o3Q2VNcXFDdjJfQ3ZqWGNHcGUwWWx1Q2w5SjJFLWxZbUNUd1ZsVFlvPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoto Ishizawa</dc:creator></item><item><title><![CDATA[リストモナドをPythonで再現したい]]></title><description><![CDATA[Haskell にはリストモナドというものがあるらしいです。
instance Monad [] where
    return x = [x]
    xs &gt;&gt;= f = concat (map f xs)
リストの各要素に計算を施しながらその結果をどんどん結合していく感じです。
組み合わせを列挙したりする際に便利らしいです。
例えば、二つのリストから要素を取り出してペアを作っていく関数などに使えます。
pairs :: [Int] -&gt; [Int] -&gt; [(Int, Int)]
pairs xs ys = do
    x &lt;- xs
    y ...]]></description><link>https://zenn.dev/kazuma624/articles/cc1022c7407322</link><guid isPermaLink="true">https://zenn.dev/kazuma624/articles/cc1022c7407322</guid><pubDate>Tue, 25 Mar 2025 23:12:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9rImqGgp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25A2%25E3%2583%258A%25E3%2583%2589%25E3%2582%2592Python%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kazuma624%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kazuma624</dc:creator></item><item><title><![CDATA[Kindleで読めるエンジニアの超絶オススメ本を10冊厳選してみた]]></title><description><![CDATA[
 スラスラ読める Pythonふりがなプログラミング
https://amzn.to/41ZbVDj
プログラミング初学者やPython入門者にとって、非常に優しい一冊です。

 プロフェッショナルPython ソフトウェアデザインの原則と実践
https://amzn.to/4iGrxmn
ある程度のPython経験を持ち、より洗練されたコードを書きたいと考えるエンジニアに適した書籍です。

 JavaScriptモダンプログラミング完全ガイド
https://amzn.to/4hLXA2Z
モダンJavaScriptの重要な概念とテクニックを網羅的に解説しています。

 オブジェク...]]></description><link>https://zenn.dev/0sc/articles/7af31e96d8855a</link><guid isPermaLink="true">https://zenn.dev/0sc/articles/7af31e96d8855a</guid><pubDate>Tue, 25 Mar 2025 13:05:54 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9vZNAcoM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Kindle%25E3%2581%25A7%25E8%25AA%25AD%25E3%2582%2581%25E3%2582%258B%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2581%25AE%25E8%25B6%2585%25E7%25B5%25B6%25E3%2582%25AA%25E3%2582%25B9%25E3%2582%25B9%25E3%2583%25A1%25E6%259C%25AC%25E3%2582%259210%25E5%2586%258A%25E5%258E%25B3%25E9%2581%25B8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mikan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EwMDFiMDBmNTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mikan</dc:creator></item><item><title><![CDATA[「gpt-4o-transcribe」、「gpt-4o-mini-transcribe」、「gpt-4o-mini-tts」について]]></title><description><![CDATA[
 前置き

情報は2025年3月のものとなります。今後、情報が変わることは大いにあります。


 概要

OpenAIは2025年3月20日(米国時間)に3つの新しい音声AIモデル"gpt-4o-transcribe"、"gpt-4o-mini-transcribe"、"gpt-4o-mini-tts"をリリースしました。（下記、英語ですがURLです。翻訳しながら読んでください）
https://openai.com/index/introducing-our-next-generation-audio-models/

OpenAIのX
https://x.com/OpenAIDev...]]></description><link>https://zenn.dev/headwaters/articles/049d84ae10c155</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/049d84ae10c155</guid><pubDate>Tue, 25 Mar 2025 11:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2vESWDpz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258Cgpt-4o-transcribe%25E3%2580%258D%25E3%2580%2581%25E3%2580%258Cgpt-4o-mini-transcribe%25E3%2580%258D%25E3%2580%2581%25E3%2580%258Cgpt-4o-mini...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:jemiya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlNjlhNTFjMDIuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jemiya</dc:creator></item></channel></rss>