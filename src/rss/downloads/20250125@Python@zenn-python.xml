<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 25 Jan 2025 01:18:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【覚書】Pythonとリスト内包表記とLINQ]]></title><description><![CDATA[
 リスト内包表記とは
for を展開して配列を作る式、みたいな感じ。
C#のLINQ的な感じです。

 Pythonなら
na = [v*2 for v in a]
配列aに対して、forの後のvでイテレーション保存して、forの前のv*2の値が戻り値になって、それが配列分繰り返す…。
というところ。

 C#なら
na = a.Select(v =&gt; v * 2).ToArray();
かな。

 Where
制限をかけるときはどうするのか。

 C#なら
表題の通り、Whereを使います。
var a = new []
{
    new {id = 1, is_star =...]]></description><link>https://zenn.dev/yakumo3/articles/109fada7a428c4</link><guid isPermaLink="true">https://zenn.dev/yakumo3/articles/109fada7a428c4</guid><pubDate>Sat, 25 Jan 2025 00:22:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TMjUIejT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E8%25A6%259A%25E6%259B%25B8%25E3%2580%2591Python%25E3%2581%25A8%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E5%2586%2585%25E5%258C%2585%25E8%25A1%25A8%25E8%25A8%2598%25E3%2581%25A8LINQ%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%25AB%25E9%259B%25B2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg1ZGJkODllMDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>八雲</dc:creator></item><item><title><![CDATA[【MotionBuilder】Python SDK 入門 第9回 『UI・ツール開発 - 実践』]]></title><description><![CDATA[この記事は、Python SDK 入門 の第9回目の記事です。
https://zenn.dev/nadegata_memo/articles/77a0fbce3b3387
この記事が Python SDK 入門の最終回となります。今回は、第7回・8回で扱ってきたUI・ツール開発の実践編として、Qt（PySide）を用いた実際のツール開発の方法と応用例を説明します。


 1. FBWidgetHolderクラス

 1.1. クラス概要

Native Widget Holder (can be used to embed native Qt Widget inside MoBu UI...]]></description><link>https://zenn.dev/nadegata_memo/articles/mobu_pyfbsdk_intro_09</link><guid isPermaLink="true">https://zenn.dev/nadegata_memo/articles/mobu_pyfbsdk_intro_09</guid><pubDate>Sat, 25 Jan 2025 00:19:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KNpIS753--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590MotionBuilder%25E3%2580%2591Python%2520SDK%2520%25E5%2585%25A5%25E9%2596%2580%2520%25E7%25AC%25AC9%25E5%259B%259E%2520%25E3%2580%258EUI%25E3%2583%25BB%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%2520-%2520%25E5%25AE%259F%25E8%25B7%25B5%25E3%2580%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ndgt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4ZThkYTY3ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ndgt</dc:creator></item><item><title><![CDATA[Azure AI Agentを動かしてエージェンティックワールドに入門する話]]></title><description><![CDATA[
 はじめに
AI Agent、最近話題ですよね。
とはいえまだ実態が掴めていない方も多いかと思います。
そういうわけでAI Agentを動かしてエージェンティックワールドに入門してみようという記事になります。

 事前準備

 事前に必要なもの

Azureアカウント
必要なロール
python実行環境(今回はjupyterで動かします。)
Azure CLI


 環境構築

 ローカル
ローカル環境では、Agentの作成と、エージェントが呼び出す関数の実行等行います。
Azure CLIでログインしておいてください。
az login
pip install azure-ai-pr...]]></description><link>https://zenn.dev/headwaters/articles/3a47816751441b</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/3a47816751441b</guid><pubDate>Fri, 24 Jan 2025 15:00:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7Rq8wQPe--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520AI%2520Agent%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2583%25E3%2582%25AF%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sakabe%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NWQ2ZDVlMWUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sakabe</dc:creator></item><item><title><![CDATA[AWS WranglerとPyAthenaの設定・活用備忘録]]></title><description><![CDATA[
 AWS WranglerとPyAthenaの設定・活用備忘録
AWS Wranglerは、AWSのデータサービスとPythonの間のギャップを埋める便利なライブラリです。特にAthenaやGlue、S3などを効率的に操作する際に非常に有用です。本記事では、AWS Wranglerの基本的なセットアップ方法から、PyAthenaとの併用、閉域網環境での設定方法、そしてそれぞれの使用用途についてまとめます。


 目次

AWS Wranglerとは？
環境のセットアップ

AWS Wranglerのインストール方法（インターネット環境/閉域網）


AWS Wranglerの使い方

...]]></description><link>https://zenn.dev/uepon/articles/f78b0c3f3cac94</link><guid isPermaLink="true">https://zenn.dev/uepon/articles/f78b0c3f3cac94</guid><pubDate>Fri, 24 Jan 2025 11:00:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1TPgOTub--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Wrangler%25E3%2581%25A8PyAthena%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2583%25BB%25E6%25B4%25BB%25E7%2594%25A8%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ue%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lIVW4zSmVfbW43ZlowbXlNVXRtOXpyLWZ1S0J3YjVTVUhnMXJWSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ue</dc:creator></item><item><title><![CDATA[[Browser Use] 触ってみた結果と感想]]></title><description><![CDATA[
 はじめに
この記事では、Browser Useを触る機会がありその感想をまとめます。
参考資料



 結論
!

 1. Zennで自分の最新記事を取得する
結果: できた
補足: 本記事で解説してます


 2. 調べたら分かりそうなこと
結果: できた
補足: 自社の社長の名前を調べて正しかった


 3. 自社の勤怠管理の操作
結果: できなかった
補足: 自社の勤怠管理を検索したが、オープンな情報ではないので見つけられない。
また、たまたま名前が同じサービスを検索結果から見つけてログインページを探すが迷走していた。


 4. 自社の勤怠管理の操作 + URLを教える
結果...]]></description><link>https://zenn.dev/aew2sbee/articles/browser-use-tutorial</link><guid isPermaLink="true">https://zenn.dev/aew2sbee/articles/browser-use-tutorial</guid><pubDate>Fri, 24 Jan 2025 07:22:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--41ff8_pi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BBrowser%2520Use%255D%2520%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E7%25B5%2590%25E6%259E%259C%25E3%2581%25A8%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%2580%2589%25E3%2581%2582%25E3%2582%2593%2520%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FhZTc3ZDA0MzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小倉あん🥝</dc:creator></item><item><title><![CDATA[AWS Bedrockで回答の続きを取得する方法]]></title><description><![CDATA[
 方法


invoke_modelを使います。
レスポンスが "stop_reason": "max_tokens" のとき、messages に {"role": "assistant", "content": [{"type": "text", "text": {生成されたテキスト}}]を追加して、再度invoke_modelを実行します。
レスポンスが "stop_reason": "end_turn" になるまで続けます。


 環境

Python 3
boto3
モデル: Claude 3 Haiku


 サンプルコード
max_tokens で打ち切られるたびに応答を...]]></description><link>https://zenn.dev/tnmt_1/articles/ca867e6f200d39</link><guid isPermaLink="true">https://zenn.dev/tnmt_1/articles/ca867e6f200d39</guid><pubDate>Fri, 24 Jan 2025 00:15:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dP2NHjfW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Bedrock%25E3%2581%25A7%25E5%259B%259E%25E7%25AD%2594%25E3%2581%25AE%25E7%25B6%259A%25E3%2581%258D%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tnmt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0xjVXJvOWdCOXNEZkluOVdwbXhlNzZYenZFaHBVeDBSSDZUOU4wb0d5eS1xQWRYNGlSdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tnmt</dc:creator></item><item><title><![CDATA[【Python・Pysparkで学ぶ！】データ分析の基礎【データ分析の最適化②カンマ】]]></title><description><![CDATA[
 【データフレームの確認】
↓市場別時価総額(historical_jika_table)月末時価総額（2024年12月）のサンプル



End_of_Month
Prime
Standard
Growth
Tokyo_Pro_Market
Total
y
m
d




44679
683684685
21483209
6338312
125677
711631885
2024
31
01


44712
686009079
21426743
6125602
129398
713690824
2024
31
01


44742
672823024
21341379
6086298...]]></description><link>https://zenn.dev/taiking/articles/09645a4325bcd4</link><guid isPermaLink="true">https://zenn.dev/taiking/articles/09645a4325bcd4</guid><pubDate>Thu, 23 Jan 2025 16:05:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lX18y3vD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%25E3%2583%25BBPyspark%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25EF%25BC%2581%25E3%2580%2591%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E3%2580%2590%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%2588%2586%25E6%259E%2590%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25E2%2591%25A1%25E3%2582%25AB%25E3%2583%25B3%25E3%2583%259E%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2581%2584%25E3%2581%258D%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2IzNTFhOTQ1NDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たいき</dc:creator></item><item><title><![CDATA[PydanticAIでエージェントを作る-3:deps_typeの利用]]></title><description><![CDATA[すべてがdictにな〜れ〜

 TL;DR
前回はPydantic AI[1]を使って、簡単なエージェント作成[2]、ツールの利用[3]をやってきました。今回は、入力の依存性(deps_type)の設定を使っていきたいと思います。
この機能、本当にいろいろなことが出来そうですが、今回は「スケジュールをプロンプトから更新するエージェント」を例にして、「入力に使ったデータを、エージェントの出力をもとに更新する」ケースを実装していきます。

入出力をPydanticのBaseModelで定義すると楽。
BaseModel &lt;-&gt; dict の相互変換は楽。
(BaseModel._...]]></description><link>https://zenn.dev/bluetang/articles/pdai_agent_03</link><guid isPermaLink="true">https://zenn.dev/bluetang/articles/pdai_agent_03</guid><pubDate>Thu, 23 Jan 2025 15:48:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YTM3xLC6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PydanticAI%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B-3%253Adeps_type%25E3%2581%25AE%25E5%2588%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bluetang%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM3ZDRkMjc1MzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bluetang</dc:creator></item><item><title><![CDATA[GoとPythonの命名規則について改めて考える]]></title><description><![CDATA[
 はじめに
普段からGoとPythonを使っている上で命名規則に関して、時々どっちだっけ？となることがあったので、改めてまとめてみました。

 Pythonの命名規則
Pythonでは、公式ガイドラインである PEP 8 に従うのが基本です。
PEP 8は、スネークケース（snake_case）や簡潔で明確な名前を推奨しており、可読性を重視した設計が特徴です。

 一般ルール


スネークケースを基本とする。
意味が明確で簡潔な名前を使う。
クラス名はキャメルケース（PascalCase）で記述する。


 命名規則



種類
命名規則
例




変数
スネークケース

user_...]]></description><link>https://zenn.dev/bidire_ai/articles/db6f41b67a537f</link><guid isPermaLink="true">https://zenn.dev/bidire_ai/articles/db6f41b67a537f</guid><pubDate>Thu, 23 Jan 2025 15:44:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oTXgIS3Q--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Go%25E3%2581%25A8Python%25E3%2581%25AE%25E5%2591%25BD%25E5%2590%258D%25E8%25A6%258F%25E5%2589%2587%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E6%2594%25B9%25E3%2582%2581%25E3%2581%25A6%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2583%258F%25E3%2583%25AB%25E3%2581%25A1%25E3%2582%2593%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlZTMwNzc3OTYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:BIDIRE%2520%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDhfQWxsbUEzdUNWSDl4b2dCaGR6RWNjXzdyUm1zUWhjOEZDVWRwU2JlNGs1a0RlND1zOTYtYw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハルちん</dc:creator></item><item><title><![CDATA[新NISAで話題のオルカン、実際の成長率を徹底解剖！]]></title><description><![CDATA[
 新NISAで話題のオルカン、実際の成長率を徹底解剖！

 モチベーション
近年、新NISAの開始により、世の中はまさに投資ブーム。特にインデックス投資は注目されており、オルカン（全世界株式）といった名前をよく耳にするようになりました。
そこで、誰もが気になるのが「実際、どれくらいの利回り（成長率）があるのか？」という点。しかし、インターネット上のサイトを見ると、オルカンの成長率は5%、10%、30%などと様々で、一体どれが本当なのかと困惑してしまいます。
そこで、今回は実際に自分でオルカンの成長率を計算し、その実態を解き明かすことにしました。

 そもそもインデックス投資とは？
イン...]]></description><link>https://zenn.dev/k_takumi/articles/how-to-calculate-olcan-return</link><guid isPermaLink="true">https://zenn.dev/k_takumi/articles/how-to-calculate-olcan-return</guid><pubDate>Thu, 23 Jan 2025 15:01:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--44ZV7vlf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2596%25B0NISA%25E3%2581%25A7%25E8%25A9%25B1%25E9%25A1%258C%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%25AB%25E3%2582%25AB%25E3%2583%25B3%25E3%2580%2581%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AE%25E6%2588%2590%25E9%2595%25B7%25E7%258E%2587%25E3%2582%2592%25E5%25BE%25B9%25E5%25BA%2595%25E8%25A7%25A3%25E5%2589%2596%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ4NGJmZGZiOTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tk</dc:creator></item><item><title><![CDATA[【Python/アルゴリズム】数学の壁をぶち壊してナップザック問題を理解したい...!!]]></title><description><![CDATA[
 はじめに
こんにちは！数学嫌いですか！！！！？？？？
数学は嫌いだけど論理的思考は好きなんですよね....
きっとこれを手にとっている皆さんなら嫌いでしょう。信じています。
今回はそこまで数学を嫌ってきた私が「数学的に難しい理論は抜きにして、実務で実装するイメージでナップザック問題を理解してみよう！」というコンセプトでPythonのコードを交えながら解説します。想定読者はコンピュータサイエンス専攻の学生や、アルゴリズムを学びたい方です。ナップザック問題自体を初めて知る人にもわかりやすいように進めますので、ぜひ最後まで読んでみてください！


 1. ナップザック問題とは？

 1. ...]]></description><link>https://zenn.dev/yusukekikuta/articles/98079d67f0f5bf</link><guid isPermaLink="true">https://zenn.dev/yusukekikuta/articles/98079d67f0f5bf</guid><pubDate>Thu, 23 Jan 2025 13:38:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zM1tD8qA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Python%252F%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%25B4%25E3%2583%25AA%25E3%2582%25BA%25E3%2583%25A0%25E3%2580%2591%25E6%2595%25B0%25E5%25AD%25A6%25E3%2581%25AE%25E5%25A3%2581%25E3%2582%2592%25E3%2581%25B6%25E3%2581%25A1%25E5%25A3%258A%25E3%2581%2597%25E3%2581%25A6%25E3%2583%258A%25E3%2583%2583%25E3%2583%2597%25E3%2582%25B6%25E3%2583%2583%25E3%2582%25AF%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584...%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258F%258A%25E7%2594%25B0%25E4%25BD%2591%25E8%25BC%2594%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RkY2M4NmQ2YmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>菊田佑輔</dc:creator></item><item><title><![CDATA[Pythonのitertools. groupby()で困った話]]></title><description><![CDATA[
 はじめに
こんにちは！美味しいものに目がないPOCO🐶です。
アプリを自作する中で、SQLでの処理が複雑になり、どうにか効率化できないかと模索していました。
その際に出会ったのがPythonのitertools.groupby()です。「これは便利そう！」と感じ、さっそく使ってみたのですが、実際に活用してみると意外な落とし穴があり、試行錯誤の連続でした。
今回の記事では、私がgroupby()に挑戦した経験を通じて感じた学びについて共有します。
同じように迷う初心者エンジニアの方々にとって、少しでも参考になれば幸いです！

 対象読者
Python初心者

 結論
groupby()...]]></description><link>https://zenn.dev/richancona/articles/2eae7717b10cd1</link><guid isPermaLink="true">https://zenn.dev/richancona/articles/2eae7717b10cd1</guid><pubDate>Thu, 23 Jan 2025 02:10:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0x736esg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AEitertools.%2520groupby%2528%2529%25E3%2581%25A7%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:pocotsubu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdiYjg3YWNjZWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>pocotsubu</dc:creator></item><item><title><![CDATA[ちょっとだけ触ってみるDjango]]></title><description><![CDATA[PythonでWebアプリ作るには何を使うの？
てかそもそも作れるの？
Python勉強したけど次何しよう・・・ 
という人におススメ！ Djangoで簡単なwebアプリケーションを作ってみませんか？
（初めて作ったので適宜改版しますw）
]]></description><link>https://zenn.dev/picaneru/books/10a1798e73adef</link><guid isPermaLink="true">https://zenn.dev/picaneru/books/10a1798e73adef</guid><pubDate>Thu, 23 Jan 2025 00:45:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FliNjTSg--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9lMTFmODkwNGQzLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>絶対定時退勤</dc:creator></item><item><title><![CDATA[PydanticAI の新機能：pydantic-graph で AI エージェントのワークフローを作る]]></title><description><![CDATA[
 はじめに
先月の Advent Calendar の記事で、PydanticAI という Pydantic の開発チームから公開された AI エージェントライブラリの紹介をしました。
https://qiita.com/atsukish/items/a1613c77cecd41980467
そして先日の v0.0.19 のリリースで、pydantic-graphというグラフ API が追加され、いわゆる Agentic Workflow が実装できるようになりました。
https://x.com/samuel_colvin/status/1879627376990224417
htt...]]></description><link>https://zenn.dev/atsukish/articles/8169318b02e39c</link><guid isPermaLink="true">https://zenn.dev/atsukish/articles/8169318b02e39c</guid><pubDate>Wed, 22 Jan 2025 23:31:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FUFTjZMM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:PydanticAI%2520%25E3%2581%25AE%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25EF%25BC%259Apydantic-graph%2520%25E3%2581%25A7%2520AI%2520%25E3%2582%25A8%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:atsukish%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1ZWMzOTBhY2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>atsukish</dc:creator></item><item><title><![CDATA[Discord-Slack連携Botで業務効率化にチャレンジしてみた]]></title><description><![CDATA[
 🌟 はじめに
みなさん、こんにちは！仕事や研究でDiscordとSlackの両方を使っている方、必見です！
今回は、情報共有を効率化するために作った連携Botの開発記録を共有したいと思います。

 こんな悩みありませんか？

「あれ？その連絡Slackだっけ？Discordだっけ？」
「重要な連絡、見逃してた...やばい」
「同じファイル、両方にアップロードするの面倒だな...」

私も同じ悩みを抱えていました。そこで、「両方のツールを連携させれば解決するのでは？」と思い立ち、Botを開発することにしました！

 導入効果がスゴイ！
実際に使ってみたところ...
📈 数字で見る改善効...]]></description><link>https://zenn.dev/miguel/articles/f0a584b423d19e</link><guid isPermaLink="true">https://zenn.dev/miguel/articles/f0a584b423d19e</guid><pubDate>Wed, 22 Jan 2025 11:24:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--McgLnyPD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Discord-Slack%25E9%2580%25A3%25E6%2590%25BABot%25E3%2581%25A7%25E6%25A5%25AD%25E5%258B%2599%25E5%258A%25B9%25E7%258E%2587%25E5%258C%2596%25E3%2581%25AB%25E3%2583%2581%25E3%2583%25A3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B8%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2591%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25B3%25E3%2583%25AA%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU0YWNhNjJjMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>パラッコリー</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-387｜A - Happy New Year 2025]]></title><description><![CDATA[
 設問ページ

🔗ABC-387 A - Happy New Year 2025



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    A, B = getIntMap()

    print((A + B) ** 2)


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/dd8c0530ed10e3</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/dd8c0530ed10e3</guid><pubDate>Wed, 22 Jan 2025 10:48:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LZGBrMNl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-387%25EF%25BD%259CA%2520-%2520Happy%2520New%2520Year%25202025%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-388｜A - ?UPC]]></title><description><![CDATA[
 設問ページ

🔗ABC-388 A - ?UPC



 提出結果
def getString():
    return input()


def main():
    S = getString()

    print(S[0] + "UPC")


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/6c41b6a47f5c7d</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/6c41b6a47f5c7d</guid><pubDate>Wed, 22 Jan 2025 10:48:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--O406Z-y8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-388%25EF%25BD%259CA%2520-%2520%253FUPC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-388｜B - Heavy Snake]]></title><description><![CDATA[
 設問ページ

🔗ABC-388 B - Heavy Snake



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def main():
    N, D = getIntMap()
    TL = getIntListRow(N)

    for i in range(1, D + 1):
        w = 0
     ...]]></description><link>https://zenn.dev/hyperdb/articles/4dab64551d45fd</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/4dab64551d45fd</guid><pubDate>Wed, 22 Jan 2025 10:48:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--r-tXnDo9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-388%25EF%25BD%259CB%2520-%2520Heavy%2520Snake%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-387｜B - 9x9 Sum]]></title><description><![CDATA[
 設問ページ

🔗ABC-387 B - 9x9 Sum



 提出結果
def getInt():
    return int(input())


def main():
    X = getInt()

    a = []
    for i in range(1, 10):
        a += [x * i for x in range(1, 10)]

    c = a.count(X)

    print(sum(a) - c * X)


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/2b4d62d77e99f5</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/2b4d62d77e99f5</guid><pubDate>Wed, 22 Jan 2025 10:48:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_nWHtcMp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-387%25EF%25BD%259CB%2520-%25209x9%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[`uv run`でファイルパスを補完する方法]]></title><description><![CDATA[Pythonの世界は進化が激しく、ちょっと前までvenvでプロジェクトを作るのが主流だったのが今はuvだという。
https://docs.astral.sh/uv/
このuvはRustベースで動作も機敏だし、venvの環境やpyproject.tomlも自動で作ってくれるので完成度が高い。今後デファクトになっていくのではないかと思う。
しかし、uvを使ってみると1つだけ痒いところに手が届かない問題がある。表題の、uv runでファイルパス補完が効かない問題だ。
uv run [ファイルパス]
!
zshで、と報告されているので、macOSなどでzshを使っているときのみ起こる問題かもし...]]></description><link>https://zenn.dev/tadayosi/articles/522efbda48fbf4</link><guid isPermaLink="true">https://zenn.dev/tadayosi/articles/522efbda48fbf4</guid><pubDate>Wed, 22 Jan 2025 05:33:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KLjENxC6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2560uv%2520run%2560%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2591%25E3%2582%25B9%25E3%2582%2592%25E8%25A3%259C%25E5%25AE%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25BD%2590%25E8%2597%25A4%2520%25E5%258C%25A1%25E5%2589%259B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3MWZkMDJmY2YuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>佐藤 匡剛</dc:creator></item></channel></rss>