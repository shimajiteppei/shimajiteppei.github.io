<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 08 Jul 2025 12:04:47 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Django REST frameworkのserializersを使った外部キーモデルの参照]]></title><description><![CDATA[!
この記事は Qiita に2024年2月に投稿した内容を、最新の構成に基づいて再編集したものです。


 概要
Django REST frameworkの serializers ライブラリを使い、dict型で取得されたdjango-adminのデータをJSONに変換した状態でフロントエンドに連携する仕組みを実装したのですが、外部キーを使ったモデル設計の場合はもう一工夫必要であることがわかったため記載します。

 実装機能


Django REST framework(DRF)の導入
外部キーを用いたモデルの設計、実装




項番
記事




1
React + Django...]]></description><link>https://zenn.dev/xinome/articles/8fe337a7a6cd08</link><guid isPermaLink="true">https://zenn.dev/xinome/articles/8fe337a7a6cd08</guid><pubDate>Tue, 08 Jul 2025 10:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ksAuQQ-u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520framework%25E3%2581%25AEserializers%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E5%25A4%2596%25E9%2583%25A8%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E5%258F%2582%25E7%2585%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xinome%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMTQ2NWJhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>xinome</dc:creator></item><item><title><![CDATA[Webページにマインドマップ機能を簡単に統合 - Mind Elixir]]></title><description><![CDATA[情報爆発の時代において、私たちは日々大量の複雑な情報やアイデアを処理しなければなりません。従来の線形ノートでは思考の飛躍性や関連性を表現することが困難ですが、マインドマップは半自動的なノートツールとして、思考の整理、知識構造の体系化、創造的インスピレーションの刺激に役立ち、同時にホワイトボードや描画ソフトウェアよりも操作が便利です。
知識管理プラットフォーム、オンライン教育サイト、コラボレーションツールの構築において、マインドマップ機能の統合はユーザーエクスペリエンスを大幅に向上させ、複雑な情報の表示とインタラクションをより直感的で効率的にします。
あなたのWebプロジェクトにマインドマ...]]></description><link>https://zenn.dev/darksouls/articles/b6f116dbfe5b4e</link><guid isPermaLink="true">https://zenn.dev/darksouls/articles/b6f116dbfe5b4e</guid><pubDate>Tue, 08 Jul 2025 06:27:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l3D__j9k--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Web%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E3%2583%259E%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2589%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E7%25B5%25B1%25E5%2590%2588%2520-%2520Mind%2520Elixir%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ssshooter%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWZ3QnEyUGVyMEZkVVZKeTA5QnM4X3F5ZzJmekVfaHNDSG5iLTRnR2VOMFZxMEY2YWE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ssshooter</dc:creator></item><item><title><![CDATA[jQuery やめようぜ]]></title><description><![CDATA[
警告: 本記事にはレガシーの粉塵と遠慮ゼロの批判が含まれます。IE9 未満の読者は画面がちらつく副作用を起こす可能性があります。[1][2]



 0. TL;DR をあえて冗長に


jQuery: 2006 年製の "Write less, debug more" 発電機。$() が短いことだけが 唯一 の高速化。[3][4]


Vanilla JS (ES2015~): ネイティブ API の筋肉で DOM を粉砕。querySelector が $ より読めるという衝撃事実。[5][6]


モダン FW: React/Vue/Svelte… 仮想 DOM で世界を焼き直す...]]></description><link>https://zenn.dev/4_4_rest/articles/a1c9fca2b7b293</link><guid isPermaLink="true">https://zenn.dev/4_4_rest/articles/a1c9fca2b7b293</guid><pubDate>Tue, 08 Jul 2025 03:10:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cP8hKo2n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:jQuery%2520%25E3%2582%2584%25E3%2582%2581%25E3%2582%2588%25E3%2581%2586%25E3%2581%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%2585%25A8%25E4%25BC%2591%25E7%25AC%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VlOGY1YTNlZjMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>全休符</dc:creator></item><item><title><![CDATA[JavaScriptのモジュールシステムの20年：混乱、分裂、そして透明性を目指して]]></title><description><![CDATA[
 一、引言：「モジュール化」は本当に解決したのだろうか？
JavaScriptのモジュールシステムは標準化され、import/exportで終わりと思われているかもしれません。
しかし現実は違います：構築エラー、依存性衝突、ロード失敗...ほぼ日常茶食です。
&lt;script&gt; から require() 、そして import/exportへ。我々はずっと、過去の選択の緣因を支払っています。

 モジュールは本来、複雑な開発を支える基盤であるべきですが、JavaScriptにおいては常に難手な領域となっています。



 二、混乱の歴史：無法一線の20年

 1. モジュール...]]></description><link>https://zenn.dev/zoe_nichika/articles/5d79c8914edfcc</link><guid isPermaLink="true">https://zenn.dev/zoe_nichika/articles/5d79c8914edfcc</guid><pubDate>Mon, 07 Jul 2025 14:40:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fS_uoC-j--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2581%25AE20%25E5%25B9%25B4%25EF%25BC%259A%25E6%25B7%25B7%25E4%25B9%25B1%25E3%2580%2581%25E5%2588%2586%25E8%25A3%2582%25E3%2580%2581%25E3%2581%259D%25E3%2581%2597%25E3%2581%25A6%25E9%2580%258F%25E6%2598%258E%25E6%2580%25A7%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2597%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:NichikaP%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRiMDI5ZjQ1YmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>NichikaP</dc:creator></item><item><title><![CDATA[ミニマムで理解するTypeScript入門]]></title><description><![CDATA[TypeScriptの説明をする際によく話す内容

 TypeScriptってなに？
TypeScriptは、MicroSoft製のAltJSの一種。

パッケージとしてインストールし、tsconfig.jsonで構文ルールを管理する方法が主流
「トランスパイル」という変換を実行すると、JavaScriptとして出力される

AltJS = JavaScript開発をより効率的にするための機能・ライブラリの一種

ほかには CoffeeScript などがある


 TypeScript の書き方

 簡単なサンプル
挨拶を標準出力するサンプルプログラム
const greetName ...]]></description><link>https://zenn.dev/slopwelljp/articles/fabec2857b0a3c</link><guid isPermaLink="true">https://zenn.dev/slopwelljp/articles/fabec2857b0a3c</guid><pubDate>Mon, 07 Jul 2025 14:17:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UukvEC04--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%259F%25E3%2583%258B%25E3%2583%259E%25E3%2583%25A0%25E3%2581%25A7%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258BTypeScript%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2599%25E3%2582%258D%25E3%2581%25A3%25E3%2581%25BA%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NlYTkxZDE2M2UuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>すろっぺる</dc:creator></item><item><title><![CDATA[Apple Silicon Macで始める Vue 3超入門 ―― Viteで秒速 Hello World]]></title><description><![CDATA[― “最新 Vite” で最短 Hello World！
!
対象:
MacBook (Apple Silicon) を買って「まずは Vue を触ってみたい」人
“ビルドツールの攻略” より “Vue を動かす楽しさ” を優先したい人


 1. 事前準備（5 分）



ツール
推奨バージョン
インストール例




Homebrew
最新
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"


Node.js
20 LTS

brew inst...]]></description><link>https://zenn.dev/exmedia/articles/vue-3-quickstart-on-apple-silicon</link><guid isPermaLink="true">https://zenn.dev/exmedia/articles/vue-3-quickstart-on-apple-silicon</guid><pubDate>Mon, 07 Jul 2025 12:18:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H4TrMXka--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apple%2520Silicon%2520Mac%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2520Vue%25203%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%2520%25E2%2580%2595%25E2%2580%2595%2520Vite%25E3%2581%25A7%25E7%25A7%2592%25E9%2580%259F%2520Hello%2520World%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:exMedia%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdjNzZmZjNmMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>exMedia</dc:creator></item><item><title><![CDATA[Django REST framework(DRF)を使ったAPIサーバーとReactとのデータ連携]]></title><description><![CDATA[!
この記事は Qiita に2024年2月に投稿した内容を、再編集したものです。


 概要
今回はDjango REST frameworkを使用し、Django-adminで設計されたデータの取得とフロント側での表示を実装します。

 実装機能


Django REST framework(DRF)の導入
Django管理画面で実装したデータの取得




項番
記事




1
React + Django + CORSを使ったフロントエンド / バックエンドのデータ連携


2
Django 管理画面のカスタマイズ


3
Django REST framework(DRF)...]]></description><link>https://zenn.dev/xinome/articles/4ddf5b02bac39a</link><guid isPermaLink="true">https://zenn.dev/xinome/articles/4ddf5b02bac39a</guid><pubDate>Mon, 07 Jul 2025 10:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6m8u5rVL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520REST%2520framework%2528DRF%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FAPI%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25A8React%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E9%2580%25A3%25E6%2590%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xinome%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMTQ2NWJhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>xinome</dc:creator></item><item><title><![CDATA[比較演算子 厳格な等価性と抽象的な等価性]]></title><description><![CDATA[
 まずは、比較演算子から解説していきましょう！
比較演算子とは、二つの値を比較するために使用する記号のことです。
==、===、&lt;、&gt;、など色々とありますが、今回は二つの値が等しいかどうかを確認するための==、===について解説していきます。

 ==、===のどちらにも共通していることは
値の比較があることです。

 ===は厳格な等価性
型の比較があります。型が異なっているとfalseを返します。

 ==は抽象的な等価性
型の比較がありません。型が異なっていても値が同じだとtrueを返します。

 初心者は===を推奨
==だと暗黙的な型変換が多く、バグが多くなるから...]]></description><link>https://zenn.dev/0xyusuke/articles/88b52a9b0741a0</link><guid isPermaLink="true">https://zenn.dev/0xyusuke/articles/88b52a9b0741a0</guid><pubDate>Mon, 07 Jul 2025 07:53:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--u8SDQ8Xu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AF%2594%25E8%25BC%2583%25E6%25BC%2594%25E7%25AE%2597%25E5%25AD%2590%2520%25E5%258E%25B3%25E6%25A0%25BC%25E3%2581%25AA%25E7%25AD%2589%25E4%25BE%25A1%25E6%2580%25A7%25E3%2581%25A8%25E6%258A%25BD%25E8%25B1%25A1%25E7%259A%2584%25E3%2581%25AA%25E7%25AD%2589%25E4%25BE%25A1%25E6%2580%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[暗黙的な型変換]]></title><description><![CDATA[
 まずは、動的型付け言語と静的型付け言語の違いについて

 動的型付け言語とは？
変数宣言時の型の宣言がなく、変数使用時の状況によって型変換が起こる言語のことです。
なお、JavaScriptは動的型付け言語となります。

 静的型付け言語とは？
変数宣言時の型の宣言があり、変数使用時の状況がいかなる状況であっても、常に同じ変数の型を保持する言語のことです。

 暗黙的な型変換って何？
変数が呼ばれたときの状況に合わせて変数の型が自動的に変換されることです。
let str = "20";
let num = Number(str); // "20"の型は文字列ではなく整数になる

 ...]]></description><link>https://zenn.dev/0xyusuke/articles/07bf79b38f3699</link><guid isPermaLink="true">https://zenn.dev/0xyusuke/articles/07bf79b38f3699</guid><pubDate>Mon, 07 Jul 2025 07:28:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7X55gA1n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259A%2597%25E9%25BB%2599%25E7%259A%2584%25E3%2581%25AA%25E5%259E%258B%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[[続き] Misoca API v3を使って、請求書を複製し続けたくなった]]></title><description><![CDATA[こんにちは☀️
TRUSTART株式会社のみつです！
前回の記事では、Misoca API v3を使ってみたり、請求書の複製をしてみたりしました。
せっかくなので実際に使いたい〜〜と思い、さらに気分で実装を続けている記事です！

 前回書いた記事
https://zenn.dev/trustart_dev/articles/ef4a4ffbf386b4

 前回まで
前回は、

認証までしてみる
トークンを取得してみる
リフレッシュトークンを取得して、使ってみる
請求書を取得してみる
請求書を複製してみる

をしました。
今回は、そのリフレッシュトークンが切れない（ローカルの実行では、....]]></description><link>https://zenn.dev/trustart_dev/articles/17f56412010254</link><guid isPermaLink="true">https://zenn.dev/trustart_dev/articles/17f56412010254</guid><pubDate>Mon, 07 Jul 2025 00:45:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--z9f0ZI3c--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E7%25B6%259A%25E3%2581%258D%255D%2520Misoca%2520API%2520v3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E8%25AB%258B%25E6%25B1%2582%25E6%259B%25B8%25E3%2582%2592%25E8%25A4%2587%25E8%25A3%25BD%25E3%2581%2597%25E7%25B6%259A%25E3%2581%2591%25E3%2581%259F%25E3%2581%258F%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mi2__user%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU4Y2I1MTc4ODAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:TRUSTART%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI4Mzg0MzQ2ZDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mi2__user</dc:creator></item><item><title><![CDATA[データ型を表にまとめてみた]]></title><description><![CDATA[


データ型
説明




undefined
値が未定義であることを示す型


null
意図的に空であることを示す型


真偽値 (Boolean)

true または false の値を持つ型


数値 (Number)
整数や浮動小数点数を表す型


文字列 (String)
テキストデータを表し、シングルやダブルクォートで囲まれる型


シンボル (Symbol)
ユニークで不変な値を持つ型


ビッグイント (BigInt)
非常に大きな整数を表す型。非常に新しい型なので対応していないブラウザがあるかもしれない。


オブジェクト (Object)
プロパティと値の集合を表...]]></description><link>https://zenn.dev/0xyusuke/articles/279a57dd584a37</link><guid isPermaLink="true">https://zenn.dev/0xyusuke/articles/279a57dd584a37</guid><pubDate>Sun, 06 Jul 2025 20:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3DoHwxPr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259E%258B%25E3%2582%2592%25E8%25A1%25A8%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[JavaScriptの`Map`と`Object`の違いと使い分け]]></title><description><![CDATA[
 はじめに
JavaScriptには、キーと値のペアを扱うための構造として「Object」と「Map」があります。一見似ていますが、それぞれに異なる特徴と使いどころがあります。
この記事では、MapとObjectの違いをコード例とともに整理し、どちらを選ぶべきかを解説します。

 1. キーの種類


Object
キーとして使えるのは文字列またはシンボルのみ。数値やオブジェクトなどは自動的に文字列に変換されます。
const obj = {};
obj[1] = 'one'; // 数値キー → "1"に変換
console.log(obj); // { '1': 'one' }

...]]></description><link>https://zenn.dev/oharu121/articles/588cdd182c0b19</link><guid isPermaLink="true">https://zenn.dev/oharu121/articles/588cdd182c0b19</guid><pubDate>Sun, 06 Jul 2025 14:54:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_-xMk3I0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%2560Map%2560%25E3%2581%25A8%2560Object%2560%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2581%25A8%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O%2520Haru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdQdmFwaGptVTIwMkxrb29lbU5jcDFRREdnRU40NE5RVTB5U0VKdHBqUUJWSjNQMFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O Haru</dc:creator></item><item><title><![CDATA[複雑な条件分岐を整理する！関数 + Map で書くスマートな条件処理]]></title><description><![CDATA[
 はじめに
JavaScriptで複雑な条件分岐を記述する場合、switch文やif-elseを使うのが一般的です。しかし、各条件に複数行の処理や一時変数が含まれる場合、コードが非常に読みにくくなります。
そこで本記事では、関数とMapを組み合わせて条件ごとの処理を整理するテクニックを紹介します。各処理を独立した関数に分けることで、読みやすさ・保守性が格段に向上します。

 読みにくい典型例：switch文の肥大化
function handleEvent(eventType, data) {
  switch (eventType) {
    case 'login':
     ...]]></description><link>https://zenn.dev/oharu121/articles/fa2e16c37151c5</link><guid isPermaLink="true">https://zenn.dev/oharu121/articles/fa2e16c37151c5</guid><pubDate>Sun, 06 Jul 2025 14:46:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LbOF-5ZJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%25A4%2587%25E9%259B%2591%25E3%2581%25AA%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2581%25E9%2596%25A2%25E6%2595%25B0%2520%252B%2520Map%2520%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258F%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AA%25E6%259D%25A1%25E4%25BB%25B6%25E5%2587%25A6%25E7%2590%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O%2520Haru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdQdmFwaGptVTIwMkxrb29lbU5jcDFRREdnRU40NE5RVTB5U0VKdHBqUUJWSjNQMFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O Haru</dc:creator></item><item><title><![CDATA[let, const, varの違い]]></title><description><![CDATA[
 違いを表にまとめてみた



タイプ
再代入
再宣言
生成されるスコープ
初期化
備考




var
可
可
関数
undefined
ES6以降は非推奨なので使ってはいけない


let
可
不可
ブロック
不可
ループ処理や、後から値を更新するときに使う


const
不可
不可
ブロック
不可
ほとんどがconst。再代入する必要がない場合に使う




 参考リンク

JavaScriptで書く「var,let,const」の違いと使い分け方法
【JS】ガチで学びたい人のためのJavaScriptメカニズム


]]></description><link>https://zenn.dev/0xyusuke/articles/5d026cbbd31e3a</link><guid isPermaLink="true">https://zenn.dev/0xyusuke/articles/5d026cbbd31e3a</guid><pubDate>Sun, 06 Jul 2025 09:21:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---eSGxMQ9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:let%252C%2520const%252C%2520var%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[オブジェクトのキーをObject.assignでソートする方法]]></title><description><![CDATA[
 はじめに
JavaScriptでオブジェクトを扱う際、オブジェクトのキーを特定の順序で整理したい場合があります。例えば、オブジェクトのデータをCSVに出力する際、特定の順序でキーを並べたいことがあります。この記事では、Object.assignを使用してオブジェクトのキーをソートする方法について解説します。
次のような場面で困ったことはありませんか？

example.ts
import fs from "fs";

const data = await fetch("www.foo.com");
// dataの中身 = { age: 18, hobby: "basketball"...]]></description><link>https://zenn.dev/oharu121/articles/36c4c3c1bbc931</link><guid isPermaLink="true">https://zenn.dev/oharu121/articles/36c4c3c1bbc931</guid><pubDate>Sun, 06 Jul 2025 08:08:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bgQwK3dx--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592Object.assign%25E3%2581%25A7%25E3%2582%25BD%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O%2520Haru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdQdmFwaGptVTIwMkxrb29lbU5jcDFRREdnRU40NE5RVTB5U0VKdHBqUUJWSjNQMFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O Haru</dc:creator></item><item><title><![CDATA[クロージャーを使ったプライベート変数の作成]]></title><description><![CDATA[クロージャーを使ったプライベート変数の作成について備忘録。

 クロージャーとは？
内側に定義している関数からレキシカルスコープの変数を参照できる現象のことです。

 プライベート変数とは？
外から参照できない変数のことです。

 では、普通にオブジェクトを作ってしまったら？
let obj = {
    value: 0
};

console.log(obj.value); // 0

// オブジェクトの外から、変数を直接触ることができてしまう
obj.value = 2000;
console.log(obj.value); /2000

 クロージャーを使ったプライベート変数...]]></description><link>https://zenn.dev/0xyusuke/articles/19855793f9661e</link><guid isPermaLink="true">https://zenn.dev/0xyusuke/articles/19855793f9661e</guid><pubDate>Sun, 06 Jul 2025 05:41:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--oJymcHXC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25BC%25E3%2583%2588%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0ZnZ0WmRlX2xEd1R3bmxpekFYVkhXRl82VHJ5NVQ1VDZSYmNwSW9RUT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[Webpackを使用してTypeScriptをJavaScriptにビルドする]]></title><description><![CDATA[
 はじめに
ts-nodeは実行時にTypeScriptをトランスパイルして実行します。これは開発中の迅速なテストやデバッグには便利ですが、トランスパイル処理が毎回実行時に行われるため、実行速度が遅くなる可能性があります。一方、あらかじめTypeScriptをJavaScriptにビルドしておくと、実行時にトランスパイルのオーバーヘッドがなくなるため、アプリケーションの起動時間や実行速度が向上します。
TypescriptのTSCコマンドを使ってjavascriptビルドすることもできますが、複数typescriptを一つのjavascriptにきれいにまとめることはうまくいけませんで...]]></description><link>https://zenn.dev/oharu121/articles/51d24be894765a</link><guid isPermaLink="true">https://zenn.dev/oharu121/articles/51d24be894765a</guid><pubDate>Sat, 05 Jul 2025 14:24:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9nq6bJjb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Webpack%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6TypeScript%25E3%2582%2592JavaScript%25E3%2581%25AB%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:O%2520Haru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXdQdmFwaGptVTIwMkxrb29lbU5jcDFRREdnRU40NE5RVTB5U0VKdHBqUUJWSjNQMFM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>O Haru</dc:creator></item><item><title><![CDATA[JavaScriptでABC413(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc413

 A - Content Too Large
https://atcoder.jp/contests/abc411/tasks/abc413_a
A全部足してMと比較します。Array.prototype.reduce()の出番。
https://atcoder.jp/contests/abc413/submissions/67294879
1分42秒 AC!

 B - cat 2
https://atcoder.jp/contests/abc411/tasks/abc413_b
Bは愚直
二重ループで全パターン作...]]></description><link>https://zenn.dev/aya_koto/articles/be457973a0d832</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/be457973a0d832</guid><pubDate>Sat, 05 Jul 2025 13:55:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qXtoQFE9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC413%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[【画像表示テスト】ダミー画像のサイズと比率がランダムに入って表示テストできるツール（Lorem Picsumのラッパー）]]></title><description><![CDATA[
 課題
（とくにWordPressなどのCMSで）画像の表示テストが面倒くさいので、サイズや比率がランダムにimgタグに入るようにしたい。

 公開リポジトリ
https://github.com/junphilos/shuffle_dummy_images/

 概要

ランダム画像を返してくれる「Lorem Picsum」ツールのラッパーツール
【コア機能】サイズと比率をランダムに指定して、すべてのimgに後入れする
【サブ機能】テキストと日付もランダムに入るようにしている

※ README.mdに詳しく書いてあります。
]]></description><link>https://zenn.dev/jun_philos/articles/6d27a3ef3922d4</link><guid isPermaLink="true">https://zenn.dev/jun_philos/articles/6d27a3ef3922d4</guid><pubDate>Sat, 05 Jul 2025 10:37:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KmOURXhk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E7%2594%25BB%25E5%2583%258F%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2580%2591%25E3%2583%2580%25E3%2583%259F%25E3%2583%25BC%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25A8%25E6%25AF%2594%25E7%258E%2587%25E3%2581%258C%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25AB%25E5%2585%25A5%25E3%2581%25A3%25E3%2581%25A6%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25EF%25BC%2588Lorem%2520Picsum%25E3%2581%25AE%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%252C%2520philos.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUxNDQyMDJlNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun, philos.</dc:creator></item><item><title><![CDATA[Android 12みたいなリップルエフェクトをWebで実現するReact用ライブラリを作りました。]]></title><description><![CDATA[
 ざっくりまとめると...
!
お急ぎの方はここだけお読みください。
本当に長い記事なので、ここ以外はお時間のある方がざっと読んでいただけたら嬉しいなってくらいです...

Android 12以降に導入された、キラキラと光る演出付きのリップルエフェクトをWeb上で再現するReact用ライブラリを作成しました。

ドキュメント
https://m3ripple.js.org/
npm
https://www.npmjs.com/package/@m_three_ui/m3ripple
GitHubリポジトリ
https://github.com/yuyake-litrain/m3rip...]]></description><link>https://zenn.dev/yuyake_litrain/articles/3cad61ec3a4703</link><guid isPermaLink="true">https://zenn.dev/yuyake_litrain/articles/3cad61ec3a4703</guid><pubDate>Sat, 05 Jul 2025 05:02:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--zonxhB00--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Android%252012%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AB%25E3%2582%25A8%25E3%2583%2595%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592Web%25E3%2581%25A7%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258BReact%25E7%2594%25A8%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Litrain%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwMjFhMDZhOTMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Litrain</dc:creator></item></channel></rss>