<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/75b80a5922.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 01 Jul 2025 08:48:52 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[コンテナ内Claude Codeでも怠惰に並列化したい]]></title><description><![CDATA[
 ざっくりまとめ


git worktree の作業ディレクトリは .git/ 配下に置く
→ ホストとコンテナ間で volume を意識せず変更を残せる

Git2.48+ 環境の worktree.useRelativePaths=true でパス問題を解決
→ 環境による絶対パス差分を気にせず worktree が動作

並列実行補助ツール ccmanager を活用
→ “新規タスク = ワンコマンド”のお手軽並列化

Claude Code盆栽してます。
https://github.com/Wisteria30/claude-code-template

 コンテナ内でC...]]></description><link>https://zenn.dev/wisteria30/articles/c631081f3f7230</link><guid isPermaLink="true">https://zenn.dev/wisteria30/articles/c631081f3f7230</guid><pubDate>Mon, 30 Jun 2025 23:30:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rHijx4ou--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E5%2586%2585Claude%2520Code%25E3%2581%25A7%25E3%2582%2582%25E6%2580%25A0%25E6%2583%25B0%25E3%2581%25AB%25E4%25B8%25A6%25E5%2588%2597%25E5%258C%2596%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258B%25E3%2581%25A3%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lBT25tc1dwSEdtbzJ1TUItZzFlR2RKOWlLYXJvN0RRa1lfOFRGUGc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>かっか</dc:creator></item><item><title><![CDATA[ClickHouseに入門してみた]]></title><description><![CDATA[
 ClickHouseとは
リアルタイムデータウェアハウスです。OLAPなのに超高速でコストがとても安いというのが魅力なサービスになります。インテグレーションも豊富で便利ということに尽きます。
似た製品はBigQuery、Redshift、Snowflakeあたりです。ログ補完とビジュアライズという文脈で使うのであればDatadog、NewRelicの代替製品にもなり得ます。
速度と料金は多くの場合上回るというメリットがあるのですが、彼らほど柔軟性に富んではいないため技術的ハードルと運用コストがデメリットになります。

※公式サイトを引用
https://clickhouse.com/...]]></description><link>https://zenn.dev/icck/articles/ac888ea3863150</link><guid isPermaLink="true">https://zenn.dev/icck/articles/ac888ea3863150</guid><pubDate>Mon, 30 Jun 2025 19:42:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qzBD2s0C--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ClickHouse%25E3%2581%25AB%25E5%2585%25A5%25E9%2596%2580%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:icck%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmYTRiZDQ3YzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>icck</dc:creator></item><item><title><![CDATA[AWS BedrockでRAG×streamlitを構築してみた［環境構築編］]]></title><description><![CDATA[
 社内ナレッジ検索AIをAWS Bedrockで構築する【環境構築編】
社内ドキュメントやナレッジを横断検索できるAIチャットボットを作ってみたい！
本記事では、そのための基盤となる AWS Bedrock + Docker 環境の構築手順 を、初学者向けにわかりやすくまとめています。

💡 対象読者

AWS や Docker にこれから触れる方
生成AIを使った業務効率化に興味がある方
Bedrock を試してみたいエンジニア




 📚 目次

✅【本記事】環境構築編
🚀実装編（チャットボット構築） ※近日公開予定



 ✅ 環境構築編
このパートでは以下のステップで進めてい...]]></description><link>https://zenn.dev/1ie_1uv/articles/757760c01b69b0</link><guid isPermaLink="true">https://zenn.dev/1ie_1uv/articles/757760c01b69b0</guid><pubDate>Mon, 30 Jun 2025 14:40:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GLdaHvCp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AWS%2520Bedrock%25E3%2581%25A7RAG%25C3%2597streamlit%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%25BB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%25EF%25BC%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%25BF%25E3%2582%25B0%25E3%2583%2583%25E3%2583%2588%25E3%2583%259E%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lUcGNWMFh3Q0tEWFF5NndZbGVsd0lGdXpUejNmX0Rxc0ZydG9JbkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みみグットマン</dc:creator></item><item><title><![CDATA[WSL2＋Dockerによって圧迫されている容量を解放する方法（vhdxファイルの最適化）]]></title><description><![CDATA[WSL2ではvhdxという仮想ハードディスク形式が用いられています。最大64TB（記事執筆時点ではWSL2用vhdxファイルのデフォルト設定は最大1TB）まで自動で拡張しながら容量を確保してくれますが、一方でWSL2内でファイルを削除しても確保された容量が自動で小さくなってはくれません。そのため、WSL2では手動で容量を解放（最適化）してあげる必要があるので、良く使っている方法を備忘録的に残しておきます。Powershellのコマンドにoptimize-vhdがなかった方（Windows Homeを使っている方）向けの記事です。

 Dockerがため込んでいるデータをまるっと削除（WS...]]></description><link>https://zenn.dev/safle1427/articles/173f128cc5fe80</link><guid isPermaLink="true">https://zenn.dev/safle1427/articles/173f128cc5fe80</guid><pubDate>Mon, 30 Jun 2025 07:04:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PiVg0A4_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25EF%25BC%258BDocker%25E3%2581%25AB%25E3%2582%2588%25E3%2581%25A3%25E3%2581%25A6%25E5%259C%25A7%25E8%25BF%25AB%25E3%2581%2595%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E5%25AE%25B9%25E9%2587%258F%25E3%2582%2592%25E8%25A7%25A3%25E6%2594%25BE%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588vhdx%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E5%258C%2596%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2595%25E3%2581%25B5%25E3%2582%258C%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzg3YTcwN2Y5YjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>さふれ</dc:creator></item><item><title><![CDATA[WindowsでDockerを始める前に知っておきたいコンテナの基礎知識]]></title><description><![CDATA[
 はじめに
WindowsでDockerを使ってみたいけど「そもそもコンテナって何？」という状態から、コンテナがなんとなくわかるようになるまでの話です。
コンテナ、仮想化についてコンテナ技術の1つである Docker をベースにして調べたことをまとめています。
Docker のコマンドや利用方法には触れず、あくまでも「コンテナとは？」「仮想化とは？」にフォーカスしていきます。
!
Docker はコンテナ技術としてはメジャーで歴史も古く情報も多いですが、コンテナ = Docker というわけではありません。
コンテナが分からない状態から学ぶには Docker がとっつきやすく勉強しやす...]]></description><link>https://zenn.dev/kitacom_blog/articles/9f3bb142b6efe6</link><guid isPermaLink="true">https://zenn.dev/kitacom_blog/articles/9f3bb142b6efe6</guid><pubDate>Mon, 30 Jun 2025 05:31:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7AArPndl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Windows%25E3%2581%25A7Docker%25E3%2582%2592%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%25E5%2589%258D%25E3%2581%25AB%25E7%259F%25A5%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258A%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25AE%25E5%259F%25BA%25E7%25A4%258E%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25AC%25E3%2583%2591%25E3%2582%25AA%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25B9%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UxYjdlNzNiODMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E5%258C%2597%25E6%2597%25A5%25E6%259C%25AC%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2594%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyNzA0ZjdiNDEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ガパオライス</dc:creator></item><item><title><![CDATA[macOSコンテナ環境でのClaude Code使い方]]></title><description><![CDATA[
 はじめに
Claude CodeなどのAI AgentをMac上で安全に動かすため、隔離されたコンテナ環境での実行方法をご紹介します。macOS + Docker Desktop + VS Code DevContainersを使用し、システムへの予期せぬ影響を防ぎつつ、効率的な開発環境を構築できます。

 TL;DR


セキュリティ向上: Claude Codeをコンテナ内で実行し、ホストシステムを保護

簡単セットアップ: Docker Desktop + DevContainersで一発構築

自動化対応: Shell scriptで起動からClaude Code実行まで自動...]]></description><link>https://zenn.dev/stzone/articles/74db53edce07f0</link><guid isPermaLink="true">https://zenn.dev/stzone/articles/74db53edce07f0</guid><pubDate>Mon, 30 Jun 2025 05:29:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1DN0j9L9--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:macOS%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2581%25AEClaude%2520Code%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259E%25E3%2581%25ADZone%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzM0MjZjNWE0NmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぞねZone</dc:creator></item><item><title><![CDATA[【Docker編】Found orphan containers ([]) for this project.の解決方法]]></title><description><![CDATA[おかえりなさい。
今回は、Dockerで以下の警告が出たときの対処について記載しています。
Found orphan containers ([]) for this project. If you removed or renamed this service in your compose file, you can run this command with the --remove-orphans flag to clean it up.

 発生原因
過去の docker compose run で作成された 一時的なコンテナ（runコマンドによるもの） が、今の docker...]]></description><link>https://zenn.dev/justintime/articles/c4fe869a40c339</link><guid isPermaLink="true">https://zenn.dev/justintime/articles/c4fe869a40c339</guid><pubDate>Sun, 29 Jun 2025 15:26:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uNwug54u--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E7%25B7%25A8%25E3%2580%2591Found%2520orphan%2520containers%2520%2528%255B%255D%2529%2520for%2520this%2520project.%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:justin%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzRrSEx6UzVKZ3ZOLTJLeW40NnFNeXk0Z2JlOXhkbnp5cFF5aXZldnhyV3F1Zm9RPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>justin</dc:creator></item><item><title><![CDATA[Laravelバージョンアップ対応時のgit worktree活用法]]></title><description><![CDATA[
 はじめに
Laravel のバージョンアップ対応を行う際、既存の保守対応と並行して作業を進める必要がある場面があります。そんな時に便利なのが git worktree を使った並行開発環境の構築です。
この記事では、git worktree と Docker を組み合わせて、既存環境に影響を与えることなくバージョンアップ対応を行うため、git worktreeを利用していきます。

 環境概要

 ディレクトリ構成

既存ソース: ~/project/src

worktree用ソース: ~/project/worktree



 PHP バージョン

既存環境: PHP 7.4、...]]></description><link>https://zenn.dev/jskn_d/articles/7ba3fb1ec61ca7</link><guid isPermaLink="true">https://zenn.dev/jskn_d/articles/7ba3fb1ec61ca7</guid><pubDate>Sun, 29 Jun 2025 13:14:18 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--w4kMRhKg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laravel%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E5%25AF%25BE%25E5%25BF%259C%25E6%2599%2582%25E3%2581%25AEgit%2520worktree%25E6%25B4%25BB%25E7%2594%25A8%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:jokooooo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VhMjE4ODI1ZDkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>jokooooo</dc:creator></item><item><title><![CDATA[Docker Desktop for Mac/Win で始める Kubernetes 入門]]></title><description><![CDATA[
 はじめに
Kubernetes (k8s) はコンテナオーケストレーションのデファクトスタンダードですが、学習を始めるには環境構築のハードルが高いと感じる方も多いでしょう。しかし、Docker Desktop for Mac/Windows には、ローカルマシンで手軽に Kubernetes クラスタを有効化する機能が組み込まれています。
この記事では、Docker Desktop を使って Kubernetes を有効化し、基本的なリソース（Deployment, Service）を作成して、Nginx サーバーを動かすまでの一連の流れを解説します。

 準備：Kubernetes...]]></description><link>https://zenn.dev/hashito/articles/c064464773c5ce</link><guid isPermaLink="true">https://zenn.dev/hashito/articles/c064464773c5ce</guid><pubDate>Sun, 29 Jun 2025 00:19:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DqPOBqAW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%2520for%2520Mac%252FWin%2520%25E3%2581%25A7%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2520Kubernetes%2520%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hashito</dc:creator></item><item><title><![CDATA[🕓️ Docker で Cron なうに使っていいよ]]></title><description><![CDATA[
 ◯ 概要
HiroyukiMakita/docker-cron: This is Cron of Debian provide Docker Compose
作ったので共有

 ◯ 使い方
クローンしてくる
git clone git@github.com:HiroyukiMakita/docker-cron.git
ビルド＆起動（プロジェクトルートで）
cd docker-cron
make
これだけ。

 ◯ デフォルト動作
コンテナの /etc/cron.d/schedule に配置しているファイル。
毎分 date コマンド実行結果をファイルに出力してます。
* * * * ...]]></description><link>https://zenn.dev/hiroyuki_makita/articles/b592a3447a1880</link><guid isPermaLink="true">https://zenn.dev/hiroyuki_makita/articles/b592a3447a1880</guid><pubDate>Sat, 28 Jun 2025 19:12:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4TT3XIhr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%2520%2520Docker%2520%25E3%2581%25A7%2520Cron%2520%25E3%2581%25AA%25E3%2581%2586%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%2584%25E3%2582%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hiroyuki_makita%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSkJKdG1Ja2NHUS1ZQlY4Q2QtZlZ6ODVSQVFvUDhCRUxaZ0pJSzAwcXdTTkF3NTJGdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hiroyuki_makita</dc:creator></item><item><title><![CDATA[VS Code + Docker Desktop で Python の開発を行うための設定と要点解説]]></title><description><![CDATA[VS Code の Developing inside a Container で Python の開発を行うための
各種設定の要点を解説します
なぜプログラム開発に仮想環境を使うべきなのかについては次を参照お願いします:
https://futureys.tokyo/lets-use-docker-when-create-virtual-environment-for-development/
https://futureys.tokyo/lets-use-virtual-environment-to-prepare-program-development/
VS Code と Doc...]]></description><link>https://zenn.dev/y_shinoda/articles/python-development-settings</link><guid isPermaLink="true">https://zenn.dev/y_shinoda/articles/python-development-settings</guid><pubDate>Sat, 28 Jun 2025 11:29:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nvHSoQm2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520%252B%2520Docker%2520Desktop%2520%25E3%2581%25A7%2520Python%2520%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25A8%25E8%25A6%2581%25E7%2582%25B9%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25AF%25A0%25E7%2594%25B0%2520%25E5%25B0%2586%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWtoTi1MMk9aSmVZVWVzN1NBazM3eDZjOVpzTlJYX01EaWdmS21ReHRPcWhjaVpBTHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>篠田 将彦</dc:creator></item><item><title><![CDATA[Python 開発を行うための devcontainer.json 設定 2025年版]]></title><description><![CDATA[devcontainer.json の customizations.vscode の設定のベストプラクティスは
短期間ですぐ変わるので、
この記事では Python 開発を行うために自分が使っている
devcontainer.json の設定とその根拠をまとめています
この設定で使う formatter や linter を一度にインストールして使う方法は
次の記事を参照お願いします:
https://zenn.dev/y_shinoda/articles/python-development-settings-pyproject-toml

.devcontainer/devcont...]]></description><link>https://zenn.dev/y_shinoda/articles/python-development-settings-devcontainer-json</link><guid isPermaLink="true">https://zenn.dev/y_shinoda/articles/python-development-settings-devcontainer-json</guid><pubDate>Sat, 28 Jun 2025 10:08:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Y-YhaEyI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520devcontainer.json%2520%25E8%25A8%25AD%25E5%25AE%259A%25202025%25E5%25B9%25B4%25E7%2589%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25AF%25A0%25E7%2594%25B0%2520%25E5%25B0%2586%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWtoTi1MMk9aSmVZVWVzN1NBazM3eDZjOVpzTlJYX01EaWdmS21ReHRPcWhjaVpBTHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>篠田 将彦</dc:creator></item><item><title><![CDATA[Laradock + Laravel環境構築のハマりどころ備忘録【2025年版】]]></title><description><![CDATA[
 はじめに
PHPフレームワークであるLaravelの学習を始める際、開発環境の構築は最初のハードルです。Laradockは、Dockerを利用してLaravelに最適化された開発環境を簡単に構築できる非常に便利なツールですが、いくつかの「お約束」を知らないと、思わぬエラーで時間を溶かしてしまうことがあります。
この記事は、筆者がLaradockでLaravel環境を構築しようとして実際に遭遇したエラーと、その解決策をまとめた備忘録です。同じように困っている方の助けになれば幸いです。

 前提条件

DockerおよびDocker Composeがローカルマシンにインストールされている...]]></description><link>https://zenn.dev/hashito/articles/601e444578f1a8</link><guid isPermaLink="true">https://zenn.dev/hashito/articles/601e444578f1a8</guid><pubDate>Sat, 28 Jun 2025 08:23:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AW54IcYK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Laradock%2520%252B%2520Laravel%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25AE%25E3%2583%258F%25E3%2583%259E%25E3%2582%258A%25E3%2581%25A9%25E3%2581%2593%25E3%2582%258D%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%25E3%2580%25902025%25E5%25B9%25B4%25E7%2589%2588%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hashito%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmMmRhOTE0MGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hashito</dc:creator></item><item><title><![CDATA[VS Code + Docker Desktop デフォルトが親ディレクトリーをマウントする設定の理由]]></title><description><![CDATA[

 経緯
VS Code のコマンドパレット (Ctrl+Shift+P, ⇧⌘P, または F1) で
[Add dev container configuration files...] を選択すると追加される
Developing inside a Container の設定ファイルが、
2023 年頃、次のように変更されました:

.devcontainer/docker-compose.yml
version: '3.8'
services:
  # Update this to the name of the service you want to work with in...]]></description><link>https://zenn.dev/y_shinoda/articles/reasons-why-parent-folder-is-mounted-by-default</link><guid isPermaLink="true">https://zenn.dev/y_shinoda/articles/reasons-why-parent-folder-is-mounted-by-default</guid><pubDate>Sat, 28 Jun 2025 08:11:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iSrcZxJM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:VS%2520Code%2520%252B%2520Docker%2520Desktop%2520%25E3%2583%2587%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2588%25E3%2581%258C%25E8%25A6%25AA%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%2592%25E3%2583%259E%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AE%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%25AF%25A0%25E7%2594%25B0%2520%25E5%25B0%2586%25E5%25BD%25A6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWtoTi1MMk9aSmVZVWVzN1NBazM3eDZjOVpzTlJYX01EaWdmS21ReHRPcWhjaVpBTHk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>篠田 将彦</dc:creator></item><item><title><![CDATA[Docker Desktop起動エラー「virtual machine platform not enabled」の解決 Windows11]]></title><description><![CDATA[
 Docker Desktop起動エラー「virtual machine platform not enabled」の解決
Docker Desktopを起動した際、「virtual machine platform not enabled」というエラーが表示され、起動できない問題が発生しました。
この記事では、この問題を解決するために私が行った手順をまとめます。


 1. 重要な設定項目の確認
Docker Desktopが正しく動作するために必要な、以下の項目が設定されているかを確認しました。


Windows ハイパーバイザー プラットフォームの有効化
Windowsの「Wi...]]></description><link>https://zenn.dev/yukimaru_dev/articles/21cd63650b575f</link><guid isPermaLink="true">https://zenn.dev/yukimaru_dev/articles/21cd63650b575f</guid><pubDate>Sat, 28 Jun 2025 04:40:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--odAt1i3---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%25E8%25B5%25B7%25E5%258B%2595%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2580%258Cvirtual%2520machine%2520platform%2520not%2520enabled%25E3%2580%258D...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2528%25E5%25B9%25B8%2529%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RiNzI0Y2QwOGMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>(幸)</dc:creator></item><item><title><![CDATA[localtonetでMinecraftクロスプレイサーバーを公開する]]></title><description><![CDATA[自宅のポートを開放せずとも、Minecraftクロスプレイサーバーを公開できます。
Docker、Paper、GeyserMC、Floodgateを使用します。

NgrokとかCloudflareTunnelではダメなの？

NgrokはUDPに対応してないため、統合版向けのサーバーを公開することができません。(Javaのみだったら可能)
また、Cloudflareは、PCに専用のソフトを入れる必要があり、スマホからの参加にも対応できません。

 Minecraftサーバー公開までの流れ
⓪ Dockerを導入する (この記事では割愛。docker composeが使用できればOK)
...]]></description><link>https://zenn.dev/skota11/articles/898fccc0505e79</link><guid isPermaLink="true">https://zenn.dev/skota11/articles/898fccc0505e79</guid><pubDate>Sat, 28 Jun 2025 02:54:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--IwIY0frQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:localtonet%25E3%2581%25A7Minecraft%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B9%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Skota11%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYzFiZTgwODIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Skota11</dc:creator></item><item><title><![CDATA[オンプレKubernetesでメリクリを叫ぶ]]></title><description><![CDATA[
 はじめに
最近業務でGCP＋Kubernetes上にアプリを構築しています。
これまでブラックボックスだったKubernetesについて基本的な構造や利用方法を勉強したのでハンズオンを交えて記事にしてみました。
ざっとKubernetesの特徴や使い方を知りたい人向けです。
初投稿なので何か不備などあればコメントいただけると幸いです。

 Dockerとは
Kubernetesの基盤をなす技術要素としてコンテナ仮想化があげられます。そのツールのデファクトスタンダードと言えるのがDockerです。
コンテナ仮想化とはアプリケーションをホストマシンの環境から切り離してパッケージ化する技術...]]></description><link>https://zenn.dev/mockn/articles/70f4da38242e50</link><guid isPermaLink="true">https://zenn.dev/mockn/articles/70f4da38242e50</guid><pubDate>Fri, 27 Jun 2025 13:05:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZUDlWEcC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25ACKubernetes%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25AA%25E3%2582%25AF%25E3%2583%25AA%25E3%2582%2592%25E5%258F%25AB%25E3%2581%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mockn%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc0YTI5ZWNjZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mockn</dc:creator></item><item><title><![CDATA[初心者がDockerでApacheサーバーを立ち上げてみた話【実践記】]]></title><description><![CDATA[
 初心者がDockerでApacheサーバを立ち上げてみた話

 はじめに
私は大学3年生でインフラエンジニア職を目指しています!
初心者ながらDockerを使ってApacheサーバの構築に挑戦しました。
この記事では実際にやったことや、つまづいたポイント、学んだことをまとめています。
同じ初心者の方にも役立つ内容になれば嬉しいです。

 やったこと

 Windows11にDocker Desktopをインストール
Dockerはコンテナ技術を使うためのソフトウェアです。
Windows11に公式サイトからインストーラーをダウンロードし、簡単にインストールできました。
インストール中...]]></description><link>https://zenn.dev/yama74/articles/2fc6831f1c5c0d</link><guid isPermaLink="true">https://zenn.dev/yama74/articles/2fc6831f1c5c0d</guid><pubDate>Fri, 27 Jun 2025 09:09:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ai21XCbH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E3%2581%258CDocker%25E3%2581%25A7Apache%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%2590%25E5%25AE%259F%25E8%25B7%25B5%25E8%25A8%2598%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yama74%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG02RzZFT3ZvV21EbXk5b3JfU1U4YlZvVUg5em5EeVhlOTZ4NFp4bWdkdXo4cW9nPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yama74</dc:creator></item><item><title><![CDATA[WSL2でSSHトンネルを構築してDockerで使用する方法：なぜこの最適解に辿り着いたのか]]></title><description><![CDATA[
 WSL2でSSHトンネルを構築してDockerで使用する方法：なぜこの最適解に辿り着いたのか

 はじめに
WSL2環境でSSHトンネルを確立し、Dockerコンテナから利用する方法にお悩みではありませんか？ 安定稼働させるまでに様々な試行錯誤を重ねてきました。この記事では、なぜ「WSL起動スクリプト + nohup」という現在の方法に落ち着いたのか、そして他の一般的な方法と比較して、なぜそれらでは不十分だったのかを詳しく解説します。特有の制約を乗り越え、Docker開発をより快適にするための実践的な知見を共有します。
前回は「新しい環境で活用！ZshとOh My Zshの設定ガイド...]]></description><link>https://zenn.dev/carenet/articles/wsl2-ssh-docker</link><guid isPermaLink="true">https://zenn.dev/carenet/articles/wsl2-ssh-docker</guid><pubDate>Fri, 27 Jun 2025 08:16:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LsVxoKYv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:WSL2%25E3%2581%25A7SSH%25E3%2583%2588%25E3%2583%25B3%25E3%2583%258D%25E3%2583%25AB%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6Docker%25E3%2581%25A7%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%259A%25E3%2581%25AA%25E3%2581%259C%25E3%2581%2593%25E3%2581%25AE%25E6%259C%2580%25E9%2581%25A9%25E8%25A7%25A3%25E3%2581%25AB%25E8%25BE%25BF%25E3%2582%258A%25E7%259D%2580%25E3%2581%2584%25E3%2581%259F%25E3%2581%25AE%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:Kou%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE0MTRiZmIwZWQuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:CareNet%2520Engineers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUdObXl4YjAxZHZYTmpqcFVER2lmaDBXNVRCQjlCcTFWTVpHc3NpSV9yN1A9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kou</dc:creator></item><item><title><![CDATA[Docker×Power CMS ローカル構築の記録]]></title><description><![CDATA[Dockerを活用してPowerCMSのローカル環境を作ってみました。

【ご留意事項】
私自身Dockerを触ったりPowerCMS構築の経験が少ないのでデバックに不慣れな点が見受けられます。
エラーは一番ぶつかった内容を抜粋して記録しています。]]></description><link>https://zenn.dev/penguin800dash/books/09637e4cbcecdc</link><guid isPermaLink="true">https://zenn.dev/penguin800dash/books/09637e4cbcecdc</guid><pubDate>Thu, 26 Jun 2025 05:02:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UtXLmsZJ--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iZmZkNDgzMzQyLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>とり天 こっこちゃん</dc:creator></item></channel></rss>