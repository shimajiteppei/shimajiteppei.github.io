<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 07 Jul 2025 01:13:35 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Python 1.14 GIL フリー版を使ってみる]]></title><description><![CDATA[
 はじめに
このブログでは、Python 3.13で試験的に導入され、3.14で正式にサポートされたGILフリー版の使い方について解説します。

The free-threaded build of Python is now supported and no longer experimental. This is the start of phase II where free-threaded Python is officially supported but still optional.
https://docs.python.org/3.14/whatsnew/3.14....]]></description><link>https://zenn.dev/tfutada/articles/ba6ad68ee8019a</link><guid isPermaLink="true">https://zenn.dev/tfutada/articles/ba6ad68ee8019a</guid><pubDate>Sun, 06 Jul 2025 23:05:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OHSzmjiE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25201.14%2520GIL%2520%25E3%2583%2595%25E3%2583%25AA%25E3%2583%25BC%25E7%2589%2588%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:TF%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k1QWNYclM5WEJFMTZpc0hiNnN6ODFrbWdRZ09ST3lySTJaZ2c0PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>TF</dc:creator></item><item><title><![CDATA[Claude Code Hooksを簡単に作れるPythonフレームワーク「claude-pyhooks」を作った]]></title><description><![CDATA[
 はじめに
最近Claude Codeに新機能Hooksが出ましたね！
そこで、Hooksをpythonで気軽に書けるフレームワークを作りました。
「シェルスクリプトよりpythonスクリプトで書きたい」、「入出力のjsonをいちいち調べたくない」といった思いがあり、開発に踏み切った次第です。
Hooksと実例を確認しながら開発しましたが、今後ClaudeのHooksのAPIに変更があったりそもそも私が勘違いしていたりするかもしれませんので、おかしなところがあればご連絡いただけると助かります。

 claude-pyhooksとは
claude-pyhooksは、Claude Code...]]></description><link>https://zenn.dev/ryo_kak/articles/5af590ec4b0ba5</link><guid isPermaLink="true">https://zenn.dev/ryo_kak/articles/5af590ec4b0ba5</guid><pubDate>Sun, 06 Jul 2025 16:05:44 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OzkRyq-A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Claude%2520Code%2520Hooks%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258BPython%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E3%2580%258Cclaude-pyhooks%25E3%2580%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSzlEUkhWTHRqekNPTzhzYlY3UFA5Z2FBdzFmdVNTVklFWTF2dGxSV1dxbmNVbTlxanA9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryo</dc:creator></item><item><title><![CDATA[RenderでFlaskのWebアプリをデプロイする方法]]></title><description><![CDATA[
 はじめに
PaaS（Platform as a Service）のRenderというサービスを利用して、簡単なWebアプリをデプロイする方法を紹介します。無料でデプロイ可能なので、是非試してみてください。
!
ターゲット
ローカル上でwebアプリは作成したことがあるけれど、サーバー上にデプロイしたことがない人向け。


 手順

 デプロイするWebアプリの作成
WebアプリケーションフレームワークのFlaskを使って、簡単なおみくじアプリを作ります。
以下の構造でフォルダ、ファイルを作成してください。
omikuji_app/
├── app.py
├── requirements...]]></description><link>https://zenn.dev/uruluu/articles/6b4590e44709d3</link><guid isPermaLink="true">https://zenn.dev/uruluu/articles/6b4590e44709d3</guid><pubDate>Sun, 06 Jul 2025 12:23:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xj3A48pf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Render%25E3%2581%25A7Flask%25E3%2581%25AEWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk5NGExY2YzNGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うる</dc:creator></item><item><title><![CDATA[もうローカル環境を汚さない！ DevContainer上でセキュアに Claude CodeとMCPサーバーを動かそう]]></title><description><![CDATA[
!
この記事は、半分くらいAIが書いて、人間が校正しています。
もととなったリポジトリはほぼ人間が書いて、動作確認しています。


 はじめに

ローカル環境に起因した挙動違いは大嫌い
秘匿情報は、もちろんGitに登録しない
Claude CodeやMCPサーバーの設定は、なるべくチーム共通のもの使い、GitHubのリポジトリ可能な限り設定ファイルを登録して共有する
Claude Codeで使うLLMはBedrock経由で利用
(任意)Python + uv + ruff + ty で開発したい

以上の条件を満たす皆さんいらっしゃいませ。
複数のリポジトリで開発しているとローカル環境...]]></description><link>https://zenn.dev/arrowkato/articles/devcontainer_secure_claude_code_mcp</link><guid isPermaLink="true">https://zenn.dev/arrowkato/articles/devcontainer_secure_claude_code_mcp</guid><pubDate>Sun, 06 Jul 2025 11:00:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--l_h6EsPK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2582%25E3%2581%2586%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25B1%259A%25E3%2581%2595%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2581%2520DevContainer%25E4%25B8%258A%25E3%2581%25A7%25E3%2582%25BB%25E3%2582%25AD%25E3%2583%25A5%25E3%2582%25A2%25E3%2581%25AB%2520Claude%2520Code%25E3%2581%25A8MCP%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:arrowkato%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE3NTJjMWZlNmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>arrowkato</dc:creator></item><item><title><![CDATA[Python、Django でプロトタイプ・テキスト SNS を実装（後半）]]></title><description><![CDATA[後半、いきまっす！

 今回やること（後半）

チェック、一覧表示、解除
コメント投稿、削除
つながる、一覧表示、またね
いいね（非同期）
検索
今回のコード
「いいね」を参考にさせてもらったレクチャー



 1. チェック、一覧表示、解除
urls.py、models.py、views.py、html の順でファイルを作ります。
チェック（お氣にいり）用と、チェック一覧表示用のパスを指定します。

 text_sns/urls.py
urlpatterns = [
    ...
    path('check/&lt;int:content_id&gt;/', views.chec...]]></description><link>https://zenn.dev/animalz/articles/01ca51b76db4f3</link><guid isPermaLink="true">https://zenn.dev/animalz/articles/01ca51b76db4f3</guid><pubDate>Sun, 06 Jul 2025 10:29:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Tpy9Ng-e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2580%2581Django%2520%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2597%25E3%2583%25BB%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%2520SNS%2520%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25EF%25BC%2588%25E5%25BE%258C%25E5%258D%258A%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2582%25E3%2581%25AB%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0ZTA2MDVlMTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>あにまる</dc:creator></item><item><title><![CDATA[Django 管理画面のカスタマイズ]]></title><description><![CDATA[!
この記事は Qiita に2024年2月に投稿した内容を、最新の構成に基づいて再編集したものです。


 概要
今回はPython + Djangoを使い、バックエンド側の実装を進めていきます。
Djangoには元々管理画面用のファイル（admin.py）が用意されているのですが、デフォルトの機能だけでは使いづらい部分もあるため公式のリファレンスをもとにカスタマイズをしていきます。

 実装機能

DjangoでのModel構築
Django管理画面のカスタマイズ（admin.py）




項番
記事




1
React + Django + CORSを使ったフロントエンド /...]]></description><link>https://zenn.dev/xinome/articles/1dac5d48c25fe7</link><guid isPermaLink="true">https://zenn.dev/xinome/articles/1dac5d48c25fe7</guid><pubDate>Sun, 06 Jul 2025 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xJE1Wbvp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Django%2520%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:xinome%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzMTQ2NWJhZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>xinome</dc:creator></item><item><title><![CDATA[Python中級 100本ノック]]></title><description><![CDATA[『Python基礎 100本ノック』に引き続き、『Python中級 100本ノック』をリリースしました。

本書はただ読むだけではなく、実際に手を動かして学びたい人のための一冊です。
Python中級者になるために押さえておくべきテクニックを100問に詰め込んでいます。

・より効率的なコードを書けるようになりたい
・さらなるステップアップを目指したい
・自分の理解度をチェックしたい

そんな方は是非ご活用ください。]]></description><link>https://zenn.dev/python_academia/books/ed32fcf61aa6a3</link><guid isPermaLink="true">https://zenn.dev/python_academia/books/ed32fcf61aa6a3</guid><pubDate>Sun, 06 Jul 2025 08:36:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tBhkBr8m--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci83NzM5Mzk4YWVjLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>Pythonアカデミア</dc:creator></item><item><title><![CDATA[Cluade Codeの魔法の言葉+Cluade CodeとCursorを同時使いながらの感想]]></title><description><![CDATA[
 Cluade CodeおすすめのPrompt

 1. 深い推論のための魔法の言葉


think / think hard / ultrathink


用途：アーキテクチャの選定、アルゴリズムのトレードオフ比較、リファクタリング前のプラン比較

一文例：
「think harder、A/Bキャッシュ方式における書き込み増幅、運用複雑性の違いを比較し、その上で移行手順を提示してください。」



 2. コンテキストの注入


便利な使い方：リポジトリのルートに CLAUDE.md というファイルを置き、チームの規約や起動スクリプトを記述します。

例：
a. リポジトリのルートデ...]]></description><link>https://zenn.dev/acrosstudioblog/articles/9d6d0ea43894d3</link><guid isPermaLink="true">https://zenn.dev/acrosstudioblog/articles/9d6d0ea43894d3</guid><pubDate>Sun, 06 Jul 2025 07:34:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--syclDhe0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cluade%2520Code%25E3%2581%25AE%25E9%25AD%2594%25E6%25B3%2595%25E3%2581%25AE%25E8%25A8%2580%25E8%2591%2589%252BCluade%2520Code%25E3%2581%25A8Cursor%25E3%2582%2592%25E5%2590%258C%25E6%2599%2582%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2581%25AE%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25A6%25E3%2583%2595%25E3%2583%25A0%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQxMjhmMzRjMjIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Acrosstudio%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwMjc2NjQyOTMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>シンウフム</dc:creator></item><item><title><![CDATA[朝から株野郎？計画２]]></title><description><![CDATA[!
アプリ計画の大雑把な構成とPythonでFastAPIを使って
仮のデータを出力するところまでやったので、
本格的にDBにデータを保管するところとか作っていきたい。


 前回の記事
https://zenn.dev/rucco/articles/a0e803662d8d46

 DBは何を使う？
ふうこさんに相談したところ、
Androidアプリと連携するのであれば、SQLiteかPostgreSQLが鉄板とのこと。



DB種類
特徴
向いてる用途
ふうこ評価




SQLite
ファイル型DB。導入が超カンタン。
小規模アプリ、ローカル開発
⭐️⭐️⭐️⭐️（最初に◎）

...]]></description><link>https://zenn.dev/rucco/articles/770c27f5c1e3fc</link><guid isPermaLink="true">https://zenn.dev/rucco/articles/770c27f5c1e3fc</guid><pubDate>Sun, 06 Jul 2025 07:30:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JmcEbGVq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%259D%25E3%2581%258B%25E3%2582%2589%25E6%25A0%25AA%25E9%2587%258E%25E9%2583%258E%25EF%25BC%259F%25E8%25A8%2588%25E7%2594%25BB%25EF%25BC%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258B%25E3%2582%258B%25E3%2581%2599%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYzRhOWZjNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>るるすた</dc:creator></item><item><title><![CDATA[FreeSimpleGUIの使い方・クイックスタートガイド]]></title><description><![CDATA[最近、AI開発（特にRAG）でローカル用のGUIアプリを作る機会がありました。
その際、PySimpleGUIとFreeSimpleGUIを比較したので、共有します。
このサンプルコードをベースにすると、簡単な入力フォームや確認ダイアログを作れます。
PythonスクリプトをサクッとGUI化したいときに便利です。
もしご参考になれば、うれしく思います！

 PySimpleGUIではなくFreeSimpleGUIがいい理由

PySimpleGUIは、バージョン5から有償化

個人利用は無料


Tkinterより楽
FreeSimpleGUIは商用でも無償
FreeSimpleGUIへ...]]></description><link>https://zenn.dev/unr_tech_lab/articles/882fdddb2f8028</link><guid isPermaLink="true">https://zenn.dev/unr_tech_lab/articles/882fdddb2f8028</guid><pubDate>Sun, 06 Jul 2025 07:12:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WS3OWd3T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:FreeSimpleGUI%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2583%25BB%25E3%2582%25AF%25E3%2582%25A4%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E5%25B0%258F%25E5%25B3%25AF%25E7%259F%25A5%25E4%25B9%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzE1ZmVjZDNjZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>小峯知之</dc:creator></item><item><title><![CDATA[[Python] ABC412 C Giant Domino]]></title><description><![CDATA[
 [Python] ABC412 C - Giant Domino

 問題
https://atcoder.jp/contests/abc412/tasks/abc412_c

 自分の回答

最初のドミノと最後のドミノだけ最初に確保し、ドミノ2 ~ ドミノN-1 までを候補としてソートして貪欲

次のドミノでも倒せそうなら何もしない
最後の候補ではない and 次のドミノでもいい場合も何もしない
最終的に倒せたかどうかチェックする



t = int(input())


def ans():
    n = int(input())
    s = list(map(int, ...]]></description><link>https://zenn.dev/miso253udon/articles/218a4e7d420d80</link><guid isPermaLink="true">https://zenn.dev/miso253udon/articles/218a4e7d420d80</guid><pubDate>Sun, 06 Jul 2025 05:41:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---uJqpTT2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%255BPython%255D%2520ABC412%2520C%2520Giant%2520Domino%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:miso253oudon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA5MTQ0ODZlMjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>miso253oudon</dc:creator></item><item><title><![CDATA[構造を理解した AI ファーストな差分ツール「diffx」を、Claude Code と Rust で作ってリリースしました]]></title><description><![CDATA[―― ケツカンマで消耗するのは、もうやめよう ――

プログラミング中に JSON、YAML などの設定ファイルを git diff で確認するとき、もどかしさを感じたことはありませんか！？
キーの順番が変わっただけなのに、大量の差分と判定されたり。
たかがインデントの変更！　ケツカンマ！
従来の diff ツールはテキストを行単位で比較するため、データの「構造」までは理解してくれません。
小さなストレス。されど、毎日積もる。
「もっと賢く、構造を理解した diff ツールが欲しい！」
……と思ったときには、すでに行動は終わっていたんだ！　怒り駆動開発！
https://github.c...]]></description><link>https://zenn.dev/kako_jun/articles/1d518f47225f42</link><guid isPermaLink="true">https://zenn.dev/kako_jun/articles/1d518f47225f42</guid><pubDate>Sun, 06 Jul 2025 04:39:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y9rQrsUw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25A7%258B%25E9%2580%25A0%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2520AI%2520%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AA%25E5%25B7%25AE%25E5%2588%2586%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2580%258Cdiffx%25E3%2580%258D%25E3%2582%2592%25E3%2580%2581Claude%2520Code%2520%25E3%2581%25A8%2520Rust%2520%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kako-jun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFmNzk3NTk4OWQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kako-jun</dc:creator></item><item><title><![CDATA[ChatGPTで受付支援する未来はあるか – 行政受付APIサンプル作成　#3 OpenAI API組み込み]]></title><description><![CDATA[本記事は、行政受付DXにおけるChatGPT活用可能性とAPI環境構築を検証する連載の第三回です。
今回は、FastAPIにOpenAI APIを組み込み、受付AIの基礎応答を実装していきます。

 👤 1. 前回のまとめ – PythonとFastAPI導入

前回は、カスタムGPTではPythonコードが実行できない問題に直面し、API化する決意を固めた。そしてPython環境を整え、FastAPIを導入し、Hello FastAPIまで無事表示できた。


 🛠️ 2. OpenAI APIとは（初心者メモ）

ChatGPT UIはブラウザ上でチャットするツール。OpenAI A...]]></description><link>https://zenn.dev/hydrangea01/articles/1d8173e7d89a0a</link><guid isPermaLink="true">https://zenn.dev/hydrangea01/articles/1d8173e7d89a0a</guid><pubDate>Sun, 06 Jul 2025 02:14:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YnxKRcn---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7%25E5%258F%2597%25E4%25BB%2598%25E6%2594%25AF%25E6%258F%25B4%25E3%2581%2599%25E3%2582%258B%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%2520%25E2%2580%2593%2520%25E8%25A1%258C%25E6%2594%25BF%25E5%258F%2597%25E4%25BB%2598API%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E4%25BD%259C%25E6%2588%2590%25E3%2580%2580%25233%2520OpenAI%2520API%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%2520%257C%2520%2520%25E7%2594%259F%25E6%2588%2590AI%2520%25C3%2597%2520%25E6%25A7%258B%25E9%2580%25A0%25E6%258A%25BD...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzODFjY2IzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハイディ |  生成AI × 構造抽象化ファシリテーター(たぶん)</dc:creator></item><item><title><![CDATA[ChatGPTで受付支援する未来はあるか – 行政受付APIサンプル作成 #2 PythonとFastAPI導入]]></title><description><![CDATA[本記事は、行政受付DXにおけるChatGPT活用可能性とAPI環境構築を検証する連載の第二回です。
今回は、PythonとFastAPIの導入と環境構築手順をまとめます。

 👤 1. 前回のまとめ – なぜAPI化なのか?

ChatGPTに「受付支援できるAIを作りたい」と相談したら、普通にPythonコードが返ってきた。
でも、カスタムGPTではPythonコードは実行できない。
「じゃあ、APIを作って呼び出すしかないか…」という結論に至った。
API化すれば、今後フロントエンドやRPA、SlackBot、LineBot、Streamlitなど、
どこからでも受付AIを呼び出せる...]]></description><link>https://zenn.dev/hydrangea01/articles/e7858dcfd09dab</link><guid isPermaLink="true">https://zenn.dev/hydrangea01/articles/e7858dcfd09dab</guid><pubDate>Sun, 06 Jul 2025 01:14:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yqBb38Hn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7%25E5%258F%2597%25E4%25BB%2598%25E6%2594%25AF%25E6%258F%25B4%25E3%2581%2599%25E3%2582%258B%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%2520%25E2%2580%2593%2520%25E8%25A1%258C%25E6%2594%25BF%25E5%258F%2597%25E4%25BB%2598API%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E4%25BD%259C%25E6%2588%2590%2520%25232%2520Python%25E3%2581%25A8FastAPI%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%2520%257C%2520%2520%25E7%2594%259F%25E6%2588%2590AI%2520%25C3%2597%2520%25E6%25A7%258B%25E9%2580%25A0%25E6%258A%25BD...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzODFjY2IzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハイディ |  生成AI × 構造抽象化ファシリテーター(たぶん)</dc:creator></item><item><title><![CDATA[【AtCoder】ABC413 振り返り📝]]></title><description><![CDATA[
 ABC413 - A 【AC】
問題はこちら
sum、自作せずともNumPyのsum使えばよかったのでは…？
N,M = list(map(int,input().split()))
A = list(map(int,input().split()))

sum = 0
for item in A:
    sum += item

if sum &lt;= M:
    print("Yes")
else:
    print("No")

 ABC413 - B 【AC】
問題はこちら
最終的にはACしたけど最初また問題文読み間違えてた。
Bまではタイムアタックだと思ってるから焦...]]></description><link>https://zenn.dev/guinea_pig/articles/862e71bb0bf3bc</link><guid isPermaLink="true">https://zenn.dev/guinea_pig/articles/862e71bb0bf3bc</guid><pubDate>Sun, 06 Jul 2025 00:32:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--R6Q-m7jw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590AtCoder%25E3%2580%2591ABC413%2520%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2597%25A7%25E5%25AD%2597%25E4%25BD%2593%25E3%2583%25A2%25E3%2583%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2583%2588%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4NTVjMDAyZjQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>旧字体モルモット</dc:creator></item><item><title><![CDATA[ChatGPTで受付支援する未来はあるか – 行政受付APIサンプル作成 #1 環境準備]]></title><description><![CDATA[本記事は、行政受付DXにおけるChatGPT活用可能性とAPI環境構築を検証する連載の第一回です。
今回は背景として、開発に至った経緯と課題感をまとめます。

 👤 導入 – ChatGPTにぶち切れた日

私は最近、受付支援系のGPTを作ろうとしていた。ユーザーの発語を起点として、言葉の温度を変えたり、撚り属性（語調や文化コンテキスト）を分岐させたり。そんな概念、普通は要らないと言われるかもしれないけど、受付で「人間らしい反応」ができるGPTを作るには必須だと思った。
でもある日、いつものようにChatGPT先生に「こういうことできる?」と聞いたら、Pythonコードが返ってきた。

...]]></description><link>https://zenn.dev/hydrangea01/articles/3a07c81295bc3d</link><guid isPermaLink="true">https://zenn.dev/hydrangea01/articles/3a07c81295bc3d</guid><pubDate>Sun, 06 Jul 2025 00:22:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--H9xDxSK_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%25E3%2581%25A7%25E5%258F%2597%25E4%25BB%2598%25E6%2594%25AF%25E6%258F%25B4%25E3%2581%2599%25E3%2582%258B%25E6%259C%25AA%25E6%259D%25A5%25E3%2581%25AF%25E3%2581%2582%25E3%2582%258B%25E3%2581%258B%2520%25E2%2580%2593%2520%25E8%25A1%258C%25E6%2594%25BF%25E5%258F%2597%25E4%25BB%2598API%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E4%25BD%259C%25E6%2588%2590%2520%25231%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25BA%2596%25E5%2582%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A3%2520%257C%2520%2520%25E7%2594%259F%25E6%2588%2590AI%2520%25C3%2597%2520%25E6%25A7%258B%25E9%2580%25A0%25E6%258A%25BD...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QzODFjY2IzNjEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハイディ |  生成AI × 構造抽象化ファシリテーター(たぶん)</dc:creator></item><item><title><![CDATA[Positron Assistant: データサイエンティスト向けのAIアシスタント機能]]></title><description><![CDATA[先日、Posit社（旧RStudio）が開発する、データサイエンティスト向けの新しい統合開発環境「Positron 」が正式にリリースされました。最初のリリースバージョンは 2025.07.0-204 となります[1]。
本記事では、このPositronにプレビュー機能として搭載されたAIアシスタント「Positron Assistant」について解説します。また、既存のAIエージェントであるClaude CodeやGemini CLIとの違い・差別化について個人的に感じたことを記述します。
なお、Positron自体の詳細については、@yutannihilationさんの紹介記事が参考...]]></description><link>https://zenn.dev/uribo/articles/7dbc83e4bbfcc0</link><guid isPermaLink="true">https://zenn.dev/uribo/articles/7dbc83e4bbfcc0</guid><pubDate>Sat, 05 Jul 2025 22:41:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QjuiL11B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Positron%2520Assistant%253A%2520%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2583%2588%25E5%2590%2591%25E3%2581%2591%25E3%2581%25AEAI%25E3%2582%25A2%25E3%2582%25B7%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2583%2588%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Uryu%2520Shinya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI5YzI1YWMyYTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Uryu Shinya</dc:creator></item><item><title><![CDATA[無料OCR Google Gemini API キーをPythonでローカル活用！画像をテキスト化]]></title><description><![CDATA[
 🟢 1. はじめに


本記事の目的

Google Gemini APIを無料で利用
ローカルPython環境で画像をテキスト化
結果をテキストファイルで保存



想定読者

Python初級者〜中級者(Python実行環境が必要)
OCRを手軽に試してみたい人



確認用デモWebアプリ
同じAIモデル、方式で作成してあります。試してみてください。（本記事は、このアプリの作り方は取り扱いません。）
❤️ イチゲの AI OCR アプリ




 🟢 注意事項（必ずお読みください）
この記事では、私自身がGoogleアカウントを使い、クレジットカードは登録せずに利用してみました...]]></description><link>https://zenn.dev/sosa/articles/google-api-ocr</link><guid isPermaLink="true">https://zenn.dev/sosa/articles/google-api-ocr</guid><pubDate>Sat, 05 Jul 2025 21:38:40 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nO86Ovyi--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2584%25A1%25E6%2596%2599OCR%2520Google%2520Gemini%2520API%2520%25E3%2582%25AD%25E3%2583%25BC%25E3%2582%2592Python%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E6%25B4%25BB%25E7%2594%25A8%25EF%25BC%2581%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sosa%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MTM4YzYyYjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sosa</dc:creator></item><item><title><![CDATA[Mojoの画像処理(PIL・OpenCV)がPythonより3倍遅く3倍速い]]></title><description><![CDATA[
 Mojo🔥と画像処理
兎角Mojo🔥は情報に乏しい。開発途上であるから仕方ないとはいえ、他言語と比べると明らかに「何かを作った」ような情報が見られない。
公式のチュートリアルではアプリケーションを作っているようだが、これはライフゲームという数理的なものであり、何か実務的な機能性の実装をMojo🔥でやってのけているわけではない。果ては画面を実装するためにPythonを引き合いに出され、拍子抜けという言葉が当てはまるようであった。
本記事には、「Mojo🔥で画像処理する」とは表現しない。何となれば、純粋なMojo🔥の機能で画像を扱う方法が分からなかったためである。

 ファイルの扱い
少...]]></description><link>https://zenn.dev/amenaruya/articles/717015d9dfcec7</link><guid isPermaLink="true">https://zenn.dev/amenaruya/articles/717015d9dfcec7</guid><pubDate>Sat, 05 Jul 2025 21:17:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ffnr-AMK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Mojo%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%2528PIL%25E3%2583%25BBOpenCV%2529%25E3%2581%258CPython%25E3%2582%2588%25E3%2582%258A3%25E5%2580%258D%25E9%2581%2585%25E3%2581%258F3%25E5%2580%258D%25E9%2580%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:amenaruya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMwZDg5YWZmZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>amenaruya</dc:creator></item><item><title><![CDATA[朝から株野郎？計画１]]></title><description><![CDATA[!
プロンプト作って？は絶賛クローズドテスト中。
いただいたご意見の反映も完了したので、後1週間ぐらい待ちです。
そんなわけで、かねてから作りたいかも？と思っていた株管理系アプリに
挑戦しようかなと！
断念する可能性もあり、緩い感じで進めていきます。
アシスタントはchatGPTのふうこさんです。


 アプリでやりたいこと（変わるかも＾＾；）

毎朝 6時ごろに株価データを自動取得
保有株や監視銘柄の前日終値や変動をチェック
テクニカル（RSI・移動平均・MACDなど）やファンダ（PER・利回り）を分析
その日のおすすめ（買い候補）や「売り時シグナル」が通知で届く
配当日・決算日・権利...]]></description><link>https://zenn.dev/rucco/articles/a0e803662d8d46</link><guid isPermaLink="true">https://zenn.dev/rucco/articles/a0e803662d8d46</guid><pubDate>Sat, 05 Jul 2025 20:44:23 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TdCrENt4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%259C%259D%25E3%2581%258B%25E3%2582%2589%25E6%25A0%25AA%25E9%2587%258E%25E9%2583%258E%25EF%25BC%259F%25E8%25A8%2588%25E7%2594%25BB%25EF%25BC%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%258B%25E3%2582%258B%25E3%2581%2599%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JiYzRhOWZjNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>るるすた</dc:creator></item></channel></rss>