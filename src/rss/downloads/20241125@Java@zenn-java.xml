<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Java」のフィード]]></title><description><![CDATA[Zennのトピック「Java」のRSSフィードです]]></description><link>https://zenn.dev/topics/java</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/5c47bb8423.png</url><title>Zennの「Java」のフィード</title><link>https://zenn.dev/topics/java</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 25 Nov 2024 09:59:22 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/java/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Java の DBUnit を使ったテストを Testcontainers で実行してみる]]></title><description><![CDATA[
 はじめに
最近チームで Javaエンジニアのための ソフトウェアテスト実践入門　～自動化と生成AIによるモダンなテスト技法～ を読んでいます。
その中で取り扱われていた DBUnit を以前学習した Testcontainers で動かしてみたいなと思ったのでやってみました。
https://gihyo.jp/book/2024/978-4-297-14435-7

 目次
第1章　ソフトウェアテストの全体像
1.1　ソフトウェアテストの概要
1.1.1　ソフトウェアテストの基本的な考え方
テストの定義と本書のスコープ
「ソフトウェアテストの7原則」
ソフトウェアテストの目的と意義
...]]></description><link>https://zenn.dev/rescuenow/articles/466e9b197312ba</link><guid isPermaLink="true">https://zenn.dev/rescuenow/articles/466e9b197312ba</guid><pubDate>Mon, 25 Nov 2024 03:51:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--dzyCo4uc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520%25E3%2581%25AE%2520DBUnit%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%2520Testcontainers%2520%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takeuchi_kazuya%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0NWI1N2NlZmMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%25AC%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%258A%25E3%2582%25A6%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNmZGM2NTEzMmUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takeuchi_kazuya</dc:creator></item><item><title><![CDATA[【Java】階乗値]]></title><description><![CDATA[この記事は、「新・明解Javaで学ぶアルゴリズムとデータ構造」を読んで学んだことを、個人的な備忘録目的でまとめています。
ただし、本を参考にして自分なりに構成やコードを変更しているためご注意ください。
アルゴリズムの詳細や解説は是非参考書をお手に取って読まれてください。

【リンク紹介】
・Javaで学ぶアルゴリズムとデータ構造
・これまで書いたシリーズ記事一覧


 階乗値
package chap05;

import java.util.Scanner;

public class Factorial {
	
	//--- 非負の整数値nの階乗値を返却 ---//
	static ...]]></description><link>https://zenn.dev/youken/articles/0153b0220c5550</link><guid isPermaLink="true">https://zenn.dev/youken/articles/0153b0220c5550</guid><pubDate>Mon, 25 Nov 2024 00:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4PtRao0n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2580%2590Java%25E3%2580%2591%25E9%259A%258E%25E4%25B9%2597%25E5%2580%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:youken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Mzc2MDk0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>youken</dc:creator></item><item><title><![CDATA[Learn Java with Math]]></title><description><![CDATA[https://link.springer.com/book/10.1007/978-1-4842-5209-3

https://github.com/Apress/learn-java-with-math


English version is available on amazon.com
https://www.amazon.com/Learn-Java-Math-Using-Projects/dp/148425208X/ref=sr_1_1?crid=2L1NB14D0UWIP&dib=eyJ2IjoiMSJ9.onM3wM3TBGd2zEu30thDz9ryyfUlqE6hCbuDS8EbSA5GRiPTuoTX8TIVx3WEE8BOS7EQ1MV98FZ-YINGZXOYgdqps8bf7Lb1FIpiHZJ8T7G9vrRvCiok-Vq9VBm6amzQzsXfFLrV8ANOBKkPrSyk8Qmck7qp9ID7MFpSrovp1jx9VbWJFkZ4ZCnExZsTP1LWD6SfhhgBKKEQvo2qM0nlHZNQVk2Ydl_R2tq69ibmh-4.RCaGVUqb2FFg2wl23B254N0NZfrwZaJ7DHNjnEc8p98&dib_tag=se&keywords=Learn+Java+with+math&qid=1732481376&sprefix=learn+java+with+math%2Caps%2C179&sr=8-1]]></description><link>https://zenn.dev/ronosh/books/e1de03f06e7df6</link><guid isPermaLink="true">https://zenn.dev/ronosh/books/e1de03f06e7df6</guid><pubDate>Sun, 24 Nov 2024 20:48:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3wZrTreM--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9iYjk2YmQ5ZTdlLmpwZWc=%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>ロン</dc:creator></item><item><title><![CDATA[JavaでClass(クラス)を使いこなそう]]></title><description><![CDATA[
 はじめに
Javaを勉強しててすごく思うのは、Classの概念が難しすぎる。それは、アクセス修飾子とか、InstanceとClassの違いとか、本当にいろいろな要素が絡んでいることから来るのだと思う。しかしこの要素をまとめて、かつ簡単に解説しているサイトはなかった。だからその解説をやってみたいというのが趣旨。

 Classとその周辺の用語ついて
Class(クラス)は、キャラ設定で考えるとわかりやすい。
スマブラを考えてみよう。それぞれのキャラクターには、名前とか、ダメージ率とか、攻撃力とか、そういった値が細かく設定されている。こういった設定されたステータスのことをField(フィ...]]></description><link>https://zenn.dev/taketooon/articles/388927e557d968</link><guid isPermaLink="true">https://zenn.dev/taketooon/articles/388927e557d968</guid><pubDate>Sun, 24 Nov 2024 15:48:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PCwbgE16--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A7Class%2528%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%2529%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2584%25E3%2581%2593%25E3%2581%25AA%25E3%2581%259D%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taketooon%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUxtNXd1MXhCSlVRclJob19aUHVvYWhwQTdaNGFpZGtQNzRfY0NDZ0Ztd0w9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taketooon</dc:creator></item><item><title><![CDATA[１度やってみて！Webアプリ開発でのプロンプトエンジニアリング]]></title><description><![CDATA[
こんにちは、Naotoです。
表題の件ですが、ざっと経緯だけ説明をさせてください。
私が参画しているプロジェクトでChatGPTにプログラムコードやプロジェクト内の相談をしていたところ、

同僚：「もしかしてプロンプトエンジニアリングをされてます？」
私：「そんな大層なものじゃないけど、AIにマクロ組んでもらってますよ」
同僚：「そのやり方を手順書におこしてほしい!!」
私：「独学だから教本と合わせて確認してね(笑)」

複数のプロジェクトや研修でご一緒した方に毎回聞かれるので、いっそオープンなところで記事を書こうと考えた次第です。


 読者の方々に質問です
プロンプトエンジニアリン...]]></description><link>https://zenn.dev/naoto_z_matsuo/articles/fa52c3efa65593</link><guid isPermaLink="true">https://zenn.dev/naoto_z_matsuo/articles/fa52c3efa65593</guid><pubDate>Sun, 24 Nov 2024 15:46:21 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--57RojzCh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%2591%25E5%25BA%25A6%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25A6%25EF%25BC%2581Web%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2597%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Naoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAyZTVjMTZmZDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Naoto</dc:creator></item><item><title><![CDATA[TDD グリーンバーにするための 3 つの戦略]]></title><description><![CDATA[
 はじめに
ソフトウェア開発の設計手法として広く認知されている TDD ですが、きちんと勉強したことがなかったので、TDD の原典とも言えるテスト駆動開発を読みました。
https://books.rakuten.co.jp/rb/14869144/
「テストを先に書くもの」くらいの浅い認識しかなかったので、とても学びになりました。
この記事では、先にテストを書いてレッドバーにしたあと、それをグリーンバーにするための戦略についてシンプルなコードを使って書いてみます。

 お題
今回のサンプルでは、正の整数を表現する PositiveInt クラスがすでに実装されており、それに偶数判定を...]]></description><link>https://zenn.dev/junjujun/articles/c37c788190e564</link><guid isPermaLink="true">https://zenn.dev/junjujun/articles/c37c788190e564</guid><pubDate>Sun, 24 Nov 2024 14:42:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--axQgMqSL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:TDD%2520%25E3%2582%25B0%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%25B3%25E3%2583%2590%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25203%2520%25E3%2581%25A4%25E3%2581%25AE%25E6%2588%25A6%25E7%2595%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWU3MDRjYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun</dc:creator></item><item><title><![CDATA[Gradle を使った Java のビルド環境構築]]></title><description><![CDATA[
 これを書く背景
学習のためにシンプルな Java 開発環境が欲しくなったが、ビルドツールってどうやって使えるようにするんだっけ？と躓いてしまった。
Java で何か作ろうとするとき、普段は Spring Initializer を使ってプロジェクトの初期化をしているので、ビルドツールを手動でインストールして～ということをしてこなかったからかもしれません。
今さらこんなことで躓くなんて、正直恥ずかしい気持ちになったが、ログに残す良い機会とも思い、ここにその方法を残しておきます。

 環境
WSL2
仕事は Mac だが家の PC は Windows。妻も使うことがあるので（こういう人っ...]]></description><link>https://zenn.dev/junjujun/articles/1a8b7c6ad30b2f</link><guid isPermaLink="true">https://zenn.dev/junjujun/articles/1a8b7c6ad30b2f</guid><pubDate>Sun, 24 Nov 2024 10:07:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CINWcsK3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Gradle%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%2520Java%2520%25E3%2581%25AE%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Jun%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyMWU3MDRjYWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Jun</dc:creator></item><item><title><![CDATA[【Java】キュー]]></title><description><![CDATA[この記事は、「新・明解Javaで学ぶアルゴリズムとデータ構造」を読んで学んだことを、個人的な備忘録目的でまとめています。
ただし、本を参考にして自分なりに構成やコードを変更しているためご注意ください。
アルゴリズムの詳細や解説は是非参考書をお手に取って読まれてください。

【リンク紹介】
・Javaで学ぶアルゴリズムとデータ構造
・これまで書いたシリーズ記事一覧


 キュー
package chap04;

public class IntQueue {
	
	private int[] que;         // キュー用の配列
	private int   capacity; ...]]></description><link>https://zenn.dev/youken/articles/cea3d93e824192</link><guid isPermaLink="true">https://zenn.dev/youken/articles/cea3d93e824192</guid><pubDate>Sun, 24 Nov 2024 08:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UJbL988x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:youken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Mzc2MDk0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>youken</dc:creator></item><item><title><![CDATA[【Java】 s+=VAL + ++s問題]]></title><description><![CDATA[
 はじめに
Javaでs+=VAL + ++sというコードを書いた場合、16になる理由が分からないという話を聞いたので調べてみた。先に、結論を書くとこれは理解すべき問題ではない。最初にそういう実装してしまったので互換性を保つためにそうしていることを知識として覚えておけと言う話になる。
この計算をclangでコンパイルすると以下のようなワーニングが出る。
test.c:6:14: warning: unsequenced modification and access to 's' [-Wunsequenced]
6 |   s += VAL + ++s;
　|     ~       ...]]></description><link>https://zenn.dev/mith_mmk/articles/dee31b767201a7</link><guid isPermaLink="true">https://zenn.dev/mith_mmk/articles/dee31b767201a7</guid><pubDate>Sun, 24 Nov 2024 01:39:38 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uKtL5hO7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%2520s%252B%253DVAL%2520%252B%2520%252B%252Bs%25E5%2595%258F%25E9%25A1%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EyZGQwZWQ1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みし</dc:creator></item><item><title><![CDATA[Java Gold ラムダ式(関数)について]]></title><description><![CDATA[
 ラムダ式とは何か
ラムダ式は、匿名関数（名前を持たない関数）を簡潔に表現するための構文です。従来、匿名クラスを使用して記述していたコードを、よりシンプルに書くことができます。これにより、コードの可読性が向上し、開発効率もアップします。
例：匿名クラスとラムダ式の比較
// 匿名クラスを使用
Runnable runnable = new Runnable() {
    @Override
    public void run() {
        System.out.println("Hello, World!");
    }
};

// ラムダ式を使用
Runnable...]]></description><link>https://zenn.dev/jk447/articles/0a1a5d5f053f02</link><guid isPermaLink="true">https://zenn.dev/jk447/articles/0a1a5d5f053f02</guid><pubDate>Sat, 23 Nov 2024 16:45:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Mgt9SHAq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520Gold%2520%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%2528%25E9%2596%25A2%25E6%2595%25B0%2529%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JK447%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YTQ1YzQwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JK447</dc:creator></item><item><title><![CDATA[Java Gold ScheduledExecutorServiceのまとめ]]></title><description><![CDATA[
 1. ScheduledExecutorService の特徴

 ScheduledExecutor=スケジュールドエグゼキュータ
遅延実行: タスクを指定した遅延時間の後に1回だけ実行できます。
定期実行: タスクを一定の間隔で繰り返し実行することができます。
スレッドプールの管理: 複数のスレッドでタスクを管理し、スレッドの使い回しによるリソースの効率化を実現します。
これにより、タイマーのような動作が必要な場合や、特定の時間ごとに実行したい処理を簡単に実装できます。

 2. ScheduledExecutorService の作成方法
ScheduledExecutorSe...]]></description><link>https://zenn.dev/jk447/articles/24fc5f32d5bf34</link><guid isPermaLink="true">https://zenn.dev/jk447/articles/24fc5f32d5bf34</guid><pubDate>Sat, 23 Nov 2024 16:44:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--W72XlWa7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%2520Gold%2520ScheduledExecutorService%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:JK447%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E0YTQ1YzQwNjkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>JK447</dc:creator></item><item><title><![CDATA[【Java】スタック]]></title><description><![CDATA[この記事は、「新・明解Javaで学ぶアルゴリズムとデータ構造」を読んで学んだことを、個人的な備忘録目的でまとめています。
ただし、本を参考にして自分なりに構成やコードを変更しているためご注意ください。
アルゴリズムの詳細や解説は是非参考書をお手に取って読まれてください。

【リンク紹介】
・Javaで学ぶアルゴリズムとデータ構造
・これまで書いたシリーズ記事一覧


 スタック
package chap04;

public class IntStack {
	
	private int[] stk;        // スタック用の配列
	private int   capacity;...]]></description><link>https://zenn.dev/youken/articles/16c71f780042bd</link><guid isPermaLink="true">https://zenn.dev/youken/articles/16c71f780042bd</guid><pubDate>Sat, 23 Nov 2024 13:38:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--J4ELudaj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:youken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Mzc2MDk0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>youken</dc:creator></item><item><title><![CDATA[[初心者向け🔰]ハンドラーに対する理解度が上がった話]]></title><description><![CDATA[JavaFXでGUIについて勉強をしている最中にイベントハンドラーという用語に出くわしました。ハンドラーというと、Pythonでロガーを作成をする時に、logging.handlersで使っていたりAWSのlambdaでlambda_handlerでメソッド書いていたりとそれなりに馴染みがある言葉でした。が、そもそもハンドラーとは何者なのかという疑問が浮かんできたので、調査を経て自分なりに理解した特徴をこの記事にまとめてみました。

 'XXX-er'の仲間たち
プログラミング用語には動詞+erを末尾に付ける用語を頻繁に目にします。何をするオブジェクトなのか一目で分かりますからね。ハンド...]]></description><link>https://zenn.dev/yo__shi/articles/6b94940d5d4212</link><guid isPermaLink="true">https://zenn.dev/yo__shi/articles/6b94940d5d4212</guid><pubDate>Sat, 23 Nov 2024 06:21:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--otpduuS7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%2520%255D%25E3%2583%258F%25E3%2583%25B3%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E7%2590%2586%25E8%25A7%25A3%25E5%25BA%25A6%25E3%2581%258C%25E4%25B8%258A%25E3%2581%258C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzJjMTM1NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshi</dc:creator></item><item><title><![CDATA[i++と++i、実行順序で迷う方へ  〜自戒を込めて〜]]></title><description><![CDATA[
 はじめに
早速ですが、抜き打ちテストです。
Q.次のプログラムの実行結果は？
public class Test {
    public static void main(String[] args) {
        int i = 0;
        System.out.println(i++ + ++i);
    }
}
答え
2 （0 + 2 = 2）

抜き打ちテストはこれで終了です。いかがだったでしょうか？
即答できたあなたへ
おめでとうございます！この記事の内容はすでにマスター済みですね。どうぞそっと記事を閉じていただいて構いません。

即答できなかったあなた...]]></description><link>https://zenn.dev/5hige99/articles/980917ac3f8c5c</link><guid isPermaLink="true">https://zenn.dev/5hige99/articles/980917ac3f8c5c</guid><pubDate>Sat, 23 Nov 2024 03:36:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--T-iQrlRF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:i%252B%252B%25E3%2581%25A8%252B%252Bi%25E3%2580%2581%25E5%25AE%259F%25E8%25A1%258C%25E9%25A0%2586%25E5%25BA%258F%25E3%2581%25A7%25E8%25BF%25B7%25E3%2581%2586%25E6%2596%25B9%25E3%2581%25B8%2520%2520%25E3%2580%259C%25E8%2587%25AA%25E6%2588%2592%25E3%2582%2592%25E8%25BE%25BC%25E3%2582%2581%25E3%2581%25A6%25E3%2580%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:shige%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTG8xbmI1YzN4c2NjQUNVUW5OVlR1blhFUmZ5c1FwRk93NnF3NkQxMF9iMWkwT1VtQT1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>shige</dc:creator></item><item><title><![CDATA[Javaと比較するKotlin入門]]></title><description><![CDATA[
 前置き
Android開発でKotlinを使用する前に、まずは基礎知識から勉強します。
元々Java(やGroovy)での開発経験があるのでJavaと比較しながらみていきます。

 変数宣言
Kotlinは型推論が強力なので明示的な形指定は不要
JavaはJava10以降でvarが使用できるようになったが、あまり見なかった印象
(あとはRVコメントでfinalを付け忘れるなと言われた記憶)
Java
String message = "Hello";  // 変更可能
final String finalMessage = "Hello";  // 変更不可能
Kotlin
var ...]]></description><link>https://zenn.dev/ncdc/articles/2c683e63824d92</link><guid isPermaLink="true">https://zenn.dev/ncdc/articles/2c683e63824d92</guid><pubDate>Fri, 22 Nov 2024 09:12:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--N4-8V0RC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25A8%25E6%25AF%2594%25E8%25BC%2583%25E3%2581%2599%25E3%2582%258BKotlin%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%258F%25E3%2582%2589%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhODZhNDA5ZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:NCDC%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkY2YyYWEzZGEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>わら</dc:creator></item><item><title><![CDATA[【Java】オープンアドレス法を用いたハッシュ法]]></title><description><![CDATA[この記事は、「新・明解Javaで学ぶアルゴリズムとデータ構造」を読んで学んだことを、個人的な備忘録目的でまとめています。
ただし、本を参考にして自分なりに構成やコードを変更しているためご注意ください。
アルゴリズムの詳細や解説は是非参考書をお手に取って読まれてください。

【リンク紹介】
・Javaで学ぶアルゴリズムとデータ構造
・これまで書いたシリーズ記事一覧


 ハッシュ法
package chap03;

public class OpenHash&lt;K, V&gt; {
	
	//--- バケットの状態 ---//
	enum Status {
		OCCUPIED,   ...]]></description><link>https://zenn.dev/youken/articles/9f7e2f9d99b1ea</link><guid isPermaLink="true">https://zenn.dev/youken/articles/9f7e2f9d99b1ea</guid><pubDate>Thu, 21 Nov 2024 15:32:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vLxVMtbj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2582%25A2%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:youken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Mzc2MDk0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>youken</dc:creator></item><item><title><![CDATA[初めてのジェネリクス奮闘記]]></title><description><![CDATA[一般的に、クラスやメソッドを作成した場合、何らかのデータを扱う場合が大半かと思います。その際、扱うデータの型は違えど、ロジックはそのまま一般化できると利便性が高まります。ジェネリクスは取り扱うデータ型を動的に指定することができる便利機能を指しています。今回初めてジェネリクスを使った実装を行う中で、個人的に躓いた点や勉強になった部分をまとめてみました。

 型パラメータ
Javaでコレクションを扱う場合、public class LinkedList&lt;E&gt;のように&lt;E&gt;でそのクラスやメソッド内で取り扱うデータ型を指定することができます。Eの部分をStringにすれば...]]></description><link>https://zenn.dev/yo__shi/articles/4dc2ef50ec82fc</link><guid isPermaLink="true">https://zenn.dev/yo__shi/articles/4dc2ef50ec82fc</guid><pubDate>Thu, 21 Nov 2024 06:36:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--23b88PNN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25AE%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25B9%25E5%25A5%25AE%25E9%2597%2598%25E8%25A8%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzJjMTM1NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshi</dc:creator></item><item><title><![CDATA[【Java】チェイン法を用いたハッシュ法]]></title><description><![CDATA[この記事は、「新・明解Javaで学ぶアルゴリズムとデータ構造」を読んで学んだことを、個人的な備忘録目的でまとめています。
ただし、本を参考にして自分なりに構成やコードを変更しているためご注意ください。
アルゴリズムの詳細や解説は是非参考書をお手に取って読まれてください。

【リンク紹介】
・Javaで学ぶアルゴリズムとデータ構造
・これまで書いたシリーズ記事一覧


 ハッシュ法

package chap03;

//--- チェイン法によるハッシュ ---//

public class ChainHash&lt;K, V&gt; {
	
	//--- ハッシュを構成するノード --...]]></description><link>https://zenn.dev/youken/articles/0d9bd89e1ba1e5</link><guid isPermaLink="true">https://zenn.dev/youken/articles/0d9bd89e1ba1e5</guid><pubDate>Tue, 19 Nov 2024 15:17:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--7bB8zWyq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Java%25E3%2580%2591%25E3%2583%2581%25E3%2582%25A7%25E3%2582%25A4%25E3%2583%25B3%25E6%25B3%2595%25E3%2582%2592%25E7%2594%25A8%25E3%2581%2584%25E3%2581%259F%25E3%2583%258F%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:youken%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M1Mzc2MDk0YWEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>youken</dc:creator></item><item><title><![CDATA[Javaのプログラムが実行されるまでの一連の流れ]]></title><description><![CDATA[
 Javaプログラムの実行プロセス ～JVMとバイトコードの仕組み～
JAVAerのみなさん、こんにちは。
Javaを使用していると、「JVM」や「バイトコード」という用語をよく耳にします。これらはJavaの実行モデルの核となる概念であり、Javaの大きな特徴である「Write Once, Run Anywhere（一度書けば、どこでも実行できる）」を実現する重要な要素です。この記事では、Javaプログラムが実際にどう実行されているのかを自分なりにまとめたいと思います。

 1. Javaプログラムの実行環境と開発ツール

 1.1 Javaプログラム実行の流れ
Javaプログラムは次...]]></description><link>https://zenn.dev/slum_dunk/articles/78eb4e1957775a</link><guid isPermaLink="true">https://zenn.dev/slum_dunk/articles/78eb4e1957775a</guid><pubDate>Tue, 19 Nov 2024 09:26:16 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--63D96ITz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%25A0%25E3%2581%258C%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E4%25B8%2580%25E9%2580%25A3%25E3%2581%25AE%25E6%25B5%2581%25E3%2582%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Sakuragi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZhNWM2M2IxMDQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Sakuragi</dc:creator></item><item><title><![CDATA[Javaのプリミティブ型の本質に気付いた瞬間]]></title><description><![CDATA[Javaの"Generics"という概念を勉強する中で、自分は「型」というものに対する理解が浅いことに気付きました。そこで、Javaの型について個人的に調査した結果をここに記します。

 私の&lt;型&gt;への理解
以前書いたポリモーフィズムとは何か？型とオブジェクトの関係を紐解くという記事の中で、Javaにおける宣言と型の関係について調査をしています。私の理解を端的に述べると次のようになります。


宣言: メモリ領域にどのようなデータを保存するかを定める
型: メモリ領域に格納されたデータをどのように活用するかを定める



型は目的物をどのように見るかを決めるフィルターレンズの...]]></description><link>https://zenn.dev/yo__shi/articles/10a6562668d85e</link><guid isPermaLink="true">https://zenn.dev/yo__shi/articles/10a6562668d85e</guid><pubDate>Mon, 18 Nov 2024 21:55:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZiuOLuKg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Java%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AA%25E3%2583%259F%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E5%259E%258B%25E3%2581%25AE%25E6%259C%25AC%25E8%25B3%25AA%25E3%2581%25AB%25E6%25B0%2597%25E4%25BB%2598%25E3%2581%2584%25E3%2581%259F%25E7%259E%25AC%25E9%2596%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I4NzJjMTM1NDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yoshi</dc:creator></item></channel></rss>