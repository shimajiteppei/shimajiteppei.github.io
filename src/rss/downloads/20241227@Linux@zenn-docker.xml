<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Docker」のフィード]]></title><description><![CDATA[Zennのトピック「Docker」のRSSフィードです]]></description><link>https://zenn.dev/topics/docker</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/01c7f20365.png</url><title>Zennの「Docker」のフィード</title><link>https://zenn.dev/topics/docker</link></image><generator>zenn.dev</generator><lastBuildDate>Fri, 27 Dec 2024 10:00:20 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/docker/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Docker Desktop から Rancher Desktop へそのまま移行できるか試してみた]]></title><description><![CDATA[
 はじめに
Docker Desktop は現在、一定規模の企業で利用する場合に有料プランへ移行する必要がある。元々 Docker Desktop 自体使うのを辞めたいという理由もあったが、Rancher Desktop が良いという噂を聞いたので、試してみた。
※ Docker Desktop 辞めたいよねという話は for Mac の場合は内部的に Hyperkit を用いた VM を使っているためだが、Rancher Desktop に関しても同様なので移行する理由としては弱い

 手順
まず rancher を cask 経由でインストールする。
brew install --...]]></description><link>https://zenn.dev/killinsun/articles/18d81f3fc2e600</link><guid isPermaLink="true">https://zenn.dev/killinsun/articles/18d81f3fc2e600</guid><pubDate>Fri, 27 Dec 2024 07:05:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KfvexSx4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%2520%25E3%2581%258B%25E3%2582%2589%2520Rancher%2520Desktop%2520%25E3%2581%25B8%25E3%2581%259D%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25BE%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%258B%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E9%25A6%2596%25E7%2584%25A1%25E3%2581%2597%25E3%2582%25AD%25E3%2583%25AA%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RmYTM3MDU1NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>首無しキリン</dc:creator></item><item><title><![CDATA[同一インスタンスに複数の GPU コンテナをデプロイする【ECS on EC2】]]></title><description><![CDATA[
 はじめに
Amazon ECS(AWS Fargate ではなく EC2 で稼働) 上に GPU コンテナをデプロイしようとすると、「タスクが 1 インスタンスに 1 つしか立ち上がらない」問題にぶつかりました。コンテナを複数個起動してGPUリソースを共有したいのに、これじゃあECSにしてる意味ないじゃん！ってことで、EC2 上で GPU リソースを最大限に活用するための ECS コンテナ配置方法を解説したいと思います。

 前提: なぜ 1 インスタンスに 1 タスクしか起動しないのか？
考えられる理由は以下の通りです。

ECSサービスの「タスク配置」が複数のアベイラビリティーゾ...]]></description><link>https://zenn.dev/1mono2/articles/a99b7a9ca3abc3</link><guid isPermaLink="true">https://zenn.dev/1mono2/articles/a99b7a9ca3abc3</guid><pubDate>Fri, 27 Dec 2024 05:24:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--KgnWNZtU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%2590%258C%25E4%25B8%2580%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25E3%2581%25AB%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%2520GPU%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%2592%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E3%2580%2590ECS%2520on%2520EC2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:1mono2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dTeENxcFE2VXBZX2dJa1E4cTBmVzBEbFpMTnpIc0FoZWl1czJNaUE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>1mono2</dc:creator></item><item><title><![CDATA[act を使ってローカルマシンで CI/CD:Linux 使い（略）Advent Calendar 2024]]></title><description><![CDATA[
 はじめに
これは「Linux 使いになりたい人のための Advent Calendar 2024」の記事です。
筆者は、Web エンジニアを志望する人には、セルフホスト Git サービスを稼働させて利用することをオススメしています。もし Git を使ったことがないなら、Git を学ぶときに、セルフホスト Git サービスを稼働させることも視野に含めながら学習するのが効率的だと考えています。
セルフホスト Git サービスを稼働させると良い理由については、これまでもいくつか説明してきていますが、個人的に一番大きかったのは、個人開発でも CI/CD 環境が必須となる時代になっていると感じ...]]></description><link>https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_18</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_18</guid><pubDate>Tue, 24 Dec 2024 09:40:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ww__LtL4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:act%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2583%259E%25E3%2582%25B7%25E3%2583%25B3%25E3%2581%25A7%2520CI%252FCD%253ALinux%2520%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2588%25E7%2595%25A5%25EF%25BC%2589Advent%2520Calendar%25202024%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[ghcr.io docker container registry 個人利用方法]]></title><description><![CDATA[GitHub Container Registry(ghcr.io)にDockerイメージをpushする手順 #DockerHub - Qiita と同じような内容。詳しく知りたい人はそっちのほうがいいかも。
以下にデモを短く書く。


前提: Macを使う。Docker Desktop が起動していて docker コマンドが利用できること。
なんでもいいので docker imageを用意する。今回は以下の手順で ghcr.io/hoshinotsuyoshi/busybox というイメージをこしらえる。 hoshinotsuyoshi は 私のGitHubのアカウント名。

# な...]]></description><link>https://zenn.dev/hoshinotsuyoshi/articles/917e8f3848b572</link><guid isPermaLink="true">https://zenn.dev/hoshinotsuyoshi/articles/917e8f3848b572</guid><pubDate>Tue, 24 Dec 2024 02:22:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--rBHuN7dT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ghcr.io%2520docker%2520container%2520registry%2520%25E5%2580%258B%25E4%25BA%25BA%25E5%2588%25A9%25E7%2594%25A8%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hoshinotsuyoshi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2c5ZDgwZ3l0akF1UnlQREJ5cHdLdWNqLVhiVE1JQllEazhBNUFpM2c9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hoshinotsuyoshi</dc:creator></item><item><title><![CDATA[kmyblueをdockerで立ち上げる個人的メモ]]></title><description><![CDATA[
 おことわり

これは私個人のメモであり、参考程度にしてください


 前提

dockerがインストール済み
cloudflaredを使用している
nginxは今回使用してません。


 一番最初にすること
git clone https://github.com/kmycode/mastodon/
cd mastodon
cp .env.production.sample .env.production

 docker-compose.ymlの書き替え
web/sidekiq
#build .
image: ghcr.io/lqvp/kmyblue-ghcr:latest-16
...]]></description><link>https://zenn.dev/il/articles/cf3fb397a07b8a</link><guid isPermaLink="true">https://zenn.dev/il/articles/cf3fb397a07b8a</guid><pubDate>Tue, 24 Dec 2024 02:10:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MxKFLKab--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kmyblue%25E3%2582%2592docker%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:il2cpp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZmFhNmE0MTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>il2cpp</dc:creator></item><item><title><![CDATA[GitHub ActionsでGoのコンテナイメージをビルド・プッシュする際のベストプラクティスを考える]]></title><description><![CDATA[この記事は MICIN Advent Calendar 2024 の 24日目の記事です。
https://adventar.org/calendars/10022
前回は菅原さんの、「MiROHAのエンジニアとして入社してみて」 でした。


 はじめに
本記事では、GitHub ActionsでGoのコンテナイメージをビルド・プッシュする際のベストプラクティスを検討、紹介します。特に、キャッシュをどう設定するかに主軸を置いて展開していきます。
Goのコンテナイメージのビルド・プッシュに関する公式ドキュメント、記事などはたくさんある一方で、実際のプロダクト開発でどうCIを組めばベストな...]]></description><link>https://zenn.dev/micin/articles/build-and-push-go-app-iamge-in-github-actions</link><guid isPermaLink="true">https://zenn.dev/micin/articles/build-and-push-go-app-iamge-in-github-actions</guid><pubDate>Tue, 24 Dec 2024 00:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lbQ8V3xB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:GitHub%2520Actions%25E3%2581%25A7Go%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2582%25A4%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2583%25BB%25E3%2583%2597%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:abekoh%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzRmZDEzMmY4YTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BEMICIN%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzczYTY0YzEyYjkuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>abekoh</dc:creator></item><item><title><![CDATA[Podman DesktopとWSL2上のPodmanを同期したい]]></title><description><![CDATA[本記事は、某企業アドベントカレンダー2024の24日目の記事です。
クリスマスイブですね。メリークリスマス！🎅
有馬記念で8000円失いましたが、自分へのクリスマスプレゼントに熱いレースの観戦チケットを8000円で購入したと思えば痛くありません。
痛くなんて...痛くなんてないんだからね！！ないん..だからね...。
さて、本題に入ります。
Docker Desktopの代替としてPodman DesktopをWindows環境へ導入にするあたり、普段開発で用いているWSL2上のPodmanとPodman Desktopを同期したいと思いました。途中詰まったところもありましたが、同期され...]]></description><link>https://zenn.dev/coffee_peng/articles/b7f1fc243dcbf9</link><guid isPermaLink="true">https://zenn.dev/coffee_peng/articles/b7f1fc243dcbf9</guid><pubDate>Mon, 23 Dec 2024 15:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--wKQw9M9U--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Podman%2520Desktop%25E3%2581%25A8WSL2%25E4%25B8%258A%25E3%2581%25AEPodman%25E3%2582%2592%25E5%2590%258C%25E6%259C%259F%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E7%258F%2588%25E7%2590%25B2%25E3%2583%259A%25E3%2583%25B3%25E3%2582%25AE%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlN2JjM2EwYzkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>珈琲ペンギン</dc:creator></item><item><title><![CDATA[Docker 版 GitLab Runner で CI/CD:Linux 使い（略）Advent Calendar 2024]]></title><description><![CDATA[
 はじめに
これは「Linux 使いになりたい人のための Advent Calendar 2024」の記事です。
筆者は、Web エンジニアを志望する人には、セルフホスト Git サービスを稼働させて利用することをオススメしています。もし Git を使ったことがないなら、Git を学ぶときに、セルフホスト Git サービスを稼働させることも視野に含めながら学習するのが効率的だと考えています。
!
この記事は、次の3つの記事の続きです。





 Docker 版 GitLab Runner で CI/CD
前回まで、3回に渡ってcfssl で自己認証局、サーバー証明書を用意し、それら...]]></description><link>https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_17</link><guid isPermaLink="true">https://zenn.dev/hiro345/articles/20241201_advent_calendar_2024_17</guid><pubDate>Mon, 23 Dec 2024 10:05:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vcoeY3S_--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E7%2589%2588%2520GitLab%2520Runner%2520%25E3%2581%25A7%2520CI%252FCD%253ALinux%2520%25E4%25BD%25BF%25E3%2581%2584%25EF%25BC%2588%25E7%2595%25A5%25EF%25BC%2589Advent%2520Calendar...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Hiroshi%2520Koyama%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2k5ZzdjLS0xTFk0S2k0LWw3dVFSSFZRdEdQcWZHYTlibVRJYUtFM0E9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Hiroshi Koyama</dc:creator></item><item><title><![CDATA[大人の学びなおしDocker（3）～ネットワーク編～]]></title><description><![CDATA[
 はじめに
前回はDockerの基礎の中身について書きました。
今回はさらにDockerのネットワーク部分について調べたいと思います。

 Dockerの内部ネットワークはどうなっているのか
ホストとコンテナ・ネットワークの関係は以下のようになっています。

引用：https://github.com/KamranAzeem/learn-docker/blob/master/docs/images/docker-bridge-network-1.png
docker network lsでネットワーク一覧を表示すると、bridgeという名前のネットワークがデフォルトで作成されています。...]]></description><link>https://zenn.dev/collabostyle/articles/58e1e7fb0a1f62</link><guid isPermaLink="true">https://zenn.dev/collabostyle/articles/58e1e7fb0a1f62</guid><pubDate>Mon, 23 Dec 2024 02:33:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ed8GWSAh--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%25A4%25A7%25E4%25BA%25BA%25E3%2581%25AE%25E5%25AD%25A6%25E3%2581%25B3%25E3%2581%25AA%25E3%2581%258A%25E3%2581%2597Docker%25EF%25BC%25883%25EF%25BC%2589%25EF%25BD%259E%25E3%2583%258D%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%25E7%25B7%25A8%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:goro%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViM2I3NTQxYzUuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B3%25E3%2583%25A9%25E3%2583%259C%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%2520Developers%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E3NGE1ZTI4NzUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>goro</dc:creator></item><item><title><![CDATA[Cantaloupe: Microsoft Azure Blob Storageに格納した画像を配信する]]></title><description><![CDATA[
 概要
IIIFイメージサーバの一つであるCantaloupe Image Serverについて、Microsoft Azure Blob Storageに格納した画像を配信する方法の備忘録です。
以下のMicrosoft Azure Blob Storage版です。
https://zenn.dev/nakamura196/articles/b59cdbca551984

 方法
今回はDocker版を使用します。
https://zenn.dev/nakamura196/articles/35b2192171c29e
以下のリポジトリをクローンしてください。
https://git...]]></description><link>https://zenn.dev/nakamura196/articles/2141a75d1e3e42</link><guid isPermaLink="true">https://zenn.dev/nakamura196/articles/2141a75d1e3e42</guid><pubDate>Mon, 23 Dec 2024 02:21:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Rx_EIRRg--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cantaloupe%253A%2520Microsoft%2520Azure%2520Blob%2520Storage%25E3%2581%25AB%25E6%25A0%25BC%25E7%25B4%258D%25E3%2581%2597%25E3%2581%259F%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E9%2585%258D%25E4%25BF%25A1%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nakamura196%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkd3BpX1gzTWIzV3VqTnVnV2tPTlJlU3VsNFNTN1BNMWlPQm9LRm5JPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nakamura196</dc:creator></item><item><title><![CDATA[よく使う起動コマンド_フルスタックWebアプリ開発_2]]></title><description><![CDATA[
 1. GitHub
GitHub自体はローカルで起動するものではなく、Webサービスとして利用します。ローカルでの操作は、主にGitコマンドを通じて行います。以下に一般的なGit操作のコマンドを示します。
# リポジトリのクローン
git clone &lt;repository_url&gt;

# リポジトリのブランチを作成
git branch &lt;branch_name&gt;

# ブランチの切り替え
git checkout &lt;branch_name&gt;

# 変更内容のステージング
git add .

# 変更内容のコミット
git commit -m ...]]></description><link>https://zenn.dev/kikigigi_teck6/articles/7ada9a5b2ba30d</link><guid isPermaLink="true">https://zenn.dev/kikigigi_teck6/articles/7ada9a5b2ba30d</guid><pubDate>Sun, 22 Dec 2024 20:23:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yHfAbMop--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E8%25B5%25B7%25E5%258B%2595%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589_%25E3%2583%2595%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AFWeb%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA_2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nana%2520%257C%2520GAI%2520%25E3%2583%25BB%25E8%2587%25AA%25E7%2584%25B6%25E8%25A8%2580%25E8%25AA%259E%25E3%2583%2597%25E3%2583%25AD...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2I1ZmNiMzg0NmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nana | GAI ・自然言語プログラミング探究家</dc:creator></item><item><title><![CDATA[コンテナでbunをパッケージマネージャーとして使うんだったらこう書く]]></title><description><![CDATA[
 何がしたいか？
今回はJSランタイムとしてbunを使うのではなく高速なnpm互換パッケージマネージャーとして利用することを焦点においた話になります。そのためbunをランタイムや様々な用途で組み込もうとしている用途での記事ではないのでご注意ください。
実現したいことを箇条書きにすると以下です

CI/CDの中でbunを高速なnpm互換のパッケージマネージャーとして組み込みたい
CI/CDで十分なパフォーマンスを出すためにロックファイルはbun.lockbを使いたい
↓
開発環境のコンテナでもbunをパッケージマネージャーとして利用して環境を統一したい

”そもそもbunとは”のための説...]]></description><link>https://zenn.dev/awonosuke/articles/71cf275af55d71</link><guid isPermaLink="true">https://zenn.dev/awonosuke/articles/71cf275af55d71</guid><pubDate>Sun, 22 Dec 2024 13:47:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cmlkmw0A--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%258A%25E3%2581%25A7bun%25E3%2582%2592%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%259E%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A3%25E3%2583%25BC%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%2593%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E3%2581%2593%25E3%2581%2586%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:awonosuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhMjljMWI3NWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>awonosuke</dc:creator></item><item><title><![CDATA[Docker DesktopでNo space left on deviceとなった場合の対処]]></title><description><![CDATA[Docker Desktopを長く使用しているとNo space left on deviceと表示されて新たなコンテナが作れなくなることがあります。その場合の対処法です。

 現状の使用量を確認する
以下のコマンドで確認できます。
$ docker system df
TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE
Images          3         3         2.08GB    0B (0%)
Containers      3         3         8.181GB   0B ...]]></description><link>https://zenn.dev/haru_iida/articles/docker_desktop_no_space</link><guid isPermaLink="true">https://zenn.dev/haru_iida/articles/docker_desktop_no_space</guid><pubDate>Sun, 22 Dec 2024 07:46:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uR3sYVXp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520Desktop%25E3%2581%25A7No%2520space%2520left%2520on%2520device%25E3%2581%25A8%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:haru_iida%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1dnZCTVV6aGszeVZpSEVxbmdKQ0tsM0lIUmczR2lKX19SN25Dc2RNPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>haru_iida</dc:creator></item><item><title><![CDATA[Coolifyで自作のデプロイ環境を作る]]></title><description><![CDATA[
 はじめに
この記事では、Coolifyを使って自作のDeploy環境を作る方法を紹介します。
VercelやCloudflare Pagesのようなサービスは便利です。しかし、プロジェクト数や容量に制限があり、さらにデータベースのプロバイダーにも制限があります。毎回無料枠だけでやりくりするのは面倒ですよね。
そこで、Coolifyで自作Deploy環境を作って、これらの問題を解決しましょう！

 Coolifyとは
Coolifyは、オープンソースの自己ホスト型PaaS(Platform as a Service)で、VercelやNetlifyの代替として機能するデプロイプラットフ...]]></description><link>https://zenn.dev/caru/articles/6b994972c8a43f</link><guid isPermaLink="true">https://zenn.dev/caru/articles/6b994972c8a43f</guid><pubDate>Sun, 22 Dec 2024 07:41:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kehn-skj--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Coolify%25E3%2581%25A7%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%25AE%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:caru%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAxNDAzMmQ3ODkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>caru</dc:creator></item><item><title><![CDATA[エッセンシャル フルスタックエンジニア ~フロントエンド・バックエンド編~]]></title><description><![CDATA[フロントエンド、バックエンド、データベース、Dockerを用いたWebアプリケーションを作成しながら、Webアプリケーションの作成に必要な知識を身につけることを目指します。できるだけモダンな技術を用いながらコンパクトにまとめているのが特徴です。
またリンターやフォーマッターの設定、APIドキュメントの作成等、チームで開発する上でも重要になるツールの設定も行います。]]></description><link>https://zenn.dev/sushi_ramen/books/essential-fullstack</link><guid isPermaLink="true">https://zenn.dev/sushi_ramen/books/essential-fullstack</guid><pubDate>Sun, 22 Dec 2024 06:24:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4F1YSwA8--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zMDZjOGExMjY1LnBuZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg" length="0" type="image/jpeg"/><dc:creator>soichiro.fujioka</dc:creator></item><item><title><![CDATA[【Docker】ERROR [web internal] load build context の解決方法]]></title><description><![CDATA[
エラーメッセージ
$ docker-compose up --build
[+] Building 5.8s (6/14)                                          docker:default
 =&gt; [web internal] load build definition from Dockerfile                    0.0s
 =&gt; =&gt; transferring dockerfile: 1.09kB                                      0.0s 
 =&gt;...]]></description><link>https://zenn.dev/code_journey_ys/articles/4c1ac788a8550e</link><guid isPermaLink="true">https://zenn.dev/code_journey_ys/articles/4c1ac788a8550e</guid><pubDate>Sun, 22 Dec 2024 05:53:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZfeZ8dVf--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Docker%25E3%2580%2591ERROR%2520%255Bweb%2520internal%255D%2520load%2520build%2520context%2520%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yusuke%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QxYmU5MTc2ZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Yusuke</dc:creator></item><item><title><![CDATA[モノレポ構成のNext.jsプロジェクトをDocker化する方法]]></title><description><![CDATA[
 はじめに
モノレポ構成の Next.js アプリを Docker 化する方法の紹介です。Webアプリの開発でモノレポを導入することはだいぶ一般的になってきましたが、Docker化するための情報があまりなくハマりポイントが多かったのでポイントを交えて紹介します。おなじような悩みを抱えている方のお役にたてれば幸いです。

 準備

 ビルドに使うライブラリ
pNPM を使ってモノレポプロジェクトを管理して Turborepo でビルドを実行します。今回利用した各種ライブラリのバージョンは以下です。

pnpm 9.15.1
Turborepo 2.3.3
Nextjs 14.2.8
Re...]]></description><link>https://zenn.dev/glassonion1/articles/734b8db0f5a47e</link><guid isPermaLink="true">https://zenn.dev/glassonion1/articles/734b8db0f5a47e</guid><pubDate>Sun, 22 Dec 2024 05:39:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CX8ELEU7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2583%258E%25E3%2583%25AC%25E3%2583%259D%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AENext.js%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592Docker%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:glassonion1%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ExMzcxN2Y0ZGUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>glassonion1</dc:creator></item><item><title><![CDATA[Dockerを使って開発するときに必須な設定3つ]]></title><description><![CDATA[

 対象読者

Docker初心者
Dockerをつかってアプリケーションの構築を行おうとしている人


 事前準備

Windowsの場合、Dockerの利用環境としてwslをインストールする

WSL を使用して Windows に Linux をインストールする方法
下記のコマンドを実行



wsl --install

 Dockerを使って開発するときに必須な設定

ネットワーク
マウント
ホットリロード


 1. ネットワーク
ホスト環境での動作確認や、アプリケーション同士の接続に必須の設定。

 ホストとコンテナのポートをマッピングする
アプリケーションをホスト環境か...]]></description><link>https://zenn.dev/eiyp_8r/articles/62a1813876b27b</link><guid isPermaLink="true">https://zenn.dev/eiyp_8r/articles/62a1813876b27b</guid><pubDate>Sun, 22 Dec 2024 05:29:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MIdRm1ki--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E5%25BF%2585%25E9%25A0%2588%25E3%2581%25AA%25E8%25A8%25AD%25E5%25AE%259A3%25E3%2581%25A4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25B5%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2QwMmQ4OGE2M2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ふ</dc:creator></item><item><title><![CDATA[Dockerチュートリアルをやってみた。]]></title><description><![CDATA[
 はじめに
Dockerチュートリアルでやったことをメモ程度でまとめます。
https://docs.docker.com/get-started/introduction/develop-with-containers/

 コンテナで開発する

プロジェクトをクローンして初めていきます。

git clone https://github.com/docker/getting-started-todo-app
cd getting-started-todo-app

開発環境を起動します。

docker compose watch

この時、yarn installでエラーが起き...]]></description><link>https://zenn.dev/monaka0309/articles/02a3541d0d222c</link><guid isPermaLink="true">https://zenn.dev/monaka0309/articles/02a3541d0d222c</guid><pubDate>Fri, 20 Dec 2024 07:03:39 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tsyM1bm8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E3%2582%2592%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2581%25AA%25E3%2581%258B%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3OTBkYzczMmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もなか</dc:creator></item><item><title><![CDATA[Docker コマンドチートシート]]></title><description><![CDATA[
 Docker コマンドチートシート
本記事では、Dockerの主要コンポーネントの関連性とよく使用するコマンドをまとめます。
!
本記事のDocker Composeコマンド, Dockerコマンドは、
バージョンにより変更となる可能性がありますので、ご注意ください。


 環境
OS$ sw_vers
ProductName:            macOS
ProductVersion:         15.2
BuildVersion:           24C101

Docker$ docker version
Client:
 Version:           ...]]></description><link>https://zenn.dev/breakedge/articles/aa781e7d8a0845</link><guid isPermaLink="true">https://zenn.dev/breakedge/articles/aa781e7d8a0845</guid><pubDate>Fri, 20 Dec 2024 00:38:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--D-As7uBo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:ytogo%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLmRldi9pbWFnZXMvZGVmYXVsdC1wdWJsaWNhdGlvbi1hdmF0YXIucG5n%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2596%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%2583%25E3%2582%25B8%2520%25E6%258A%2580%25E8%25A1%2593%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSm1ZUFhBd3hBOWtmbTQtY0hTb3ZrY2F4ZWtIcEtnTm4tUzhTZEVPdG5rRGpwTVNnPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ytogo</dc:creator></item></channel></rss>