<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 14 Nov 2024 01:02:17 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[MotionBuilder Scripts - Custom Text HUD]]></title><description><![CDATA[
 目標
独自のText HUD（Text表示のHeads Up Display）を作成する。

 使用例

60 fpsでフレーム数をViewerに表示

 解説
Text HUDに対して、Custom PropertyとRelation Constraintを用いる[1]。

 HUD関連
ベースのHUDを作成する。
# configure text hud element
lHud = FBHUD("CustomHUD")
lHud_frames = FBHUDTextElement("Previs_frames")
lHud_frames.Content = "frame in ...]]></description><link>https://zenn.dev/nadegata_memo/articles/b4abc816f4d9c1</link><guid isPermaLink="true">https://zenn.dev/nadegata_memo/articles/b4abc816f4d9c1</guid><pubDate>Thu, 14 Nov 2024 00:20:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iglMaPEq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_66:MotionBuilder%2520Scripts%2520-%2520Custom%2520Text%2520HUD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ndgt%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E4ZThkYTY3ZGYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ndgt</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【内包表記編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第20章 内包表記
内包表記は、リスト、集合、辞書などのデータ構造を簡潔に作成するための強力な機能です。
forループと同様の処理を1行で記述することができます。

 20.1 リスト内包表記
リスト内包表記は、リストを作成するための内包表記です。
基本的な構文は以下の通りです。
[式 for 変数 in イテラブルオブジェクト]
式は、リストの要素となる値を生成する式です。
変数は、イテラブルオブジェクトの要素を順に取り出すための変数です。
イテラブルオブジェクトは、リスト、タプル、文字列などの、要素を順に取り出すことができるオブジェクトです。

...]]></description><link>https://zenn.dev/zundalab/articles/ef9e6cabd4eb02</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/ef9e6cabd4eb02</guid><pubDate>Wed, 13 Nov 2024 19:31:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--74A43YMN--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E5%2586%2585%25E5%258C%2585%25E8%25A1%25A8%25E8%25A8%2598%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【オブジェクト指向（クラス・インスタンス）編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第19章 オブジェクト指向（クラス・インスタンス）
オブジェクト指向プログラミングは、プログラムをモノ（オブジェクト）を中心として設計する考え方です。
それぞれのモノはデータ（属性）と操作（メソッド）を持ち、モノ同士がメッセージをやり取りすることでプログラムが動作します。
この章では、Pythonにおけるオブジェクト指向プログラミングの基本について解説します。

 19.1 名前とオブジェクト
Pythonでは、すべてのデータはオブジェクトとして扱われます。
オブジェクトは、それぞれ固有のIDを持ち、型と値を持っています。
例えば、 a = 10 と...]]></description><link>https://zenn.dev/zundalab/articles/e9d3b1ab7ae041</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/e9d3b1ab7ae041</guid><pubDate>Wed, 13 Nov 2024 19:31:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UAHMuiUK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%258C%2587%25E5%2590%2591%25EF%25BC%2588%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%25BB%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%25B9%25EF%25BC%2589%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【標準ライブラリ編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第18章 標準ライブラリ
Pythonには「標準ライブラリ」と呼ばれる、便利な機能をまとめたものがたくさん用意されています。 これらのライブラリを使うことで、複雑な処理を簡単に実現することができます。  本章では、標準ライブラリのうち、特に重要なものをいくつか紹介します。

 18.1 OSへのインターフェース

 18.1.1 osモジュール
os モジュールは、オペレーティングシステムに関連する様々な機能を提供します。 ファイルやフォルダの操作、環境変数の取得、プロセス管理など、OSに依存する処理を行う際に使用します。 例えば、 os.getcw...]]></description><link>https://zenn.dev/zundalab/articles/d479f75fc910f2</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/d479f75fc910f2</guid><pubDate>Wed, 13 Nov 2024 19:31:04 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Q34SaDxc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【ファイル・フォルダ操作編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第17章 ファイル・フォルダ操作

 17.1 ファイル操作の基本

 17.1.1 ファイルを開く
Pythonでファイルを読み書きするには、まずファイルを開く必要があります。ファイルを開くには、open() 関数を使用します。
f = open("myfile.txt", "r")
open() 関数の最初の引数は、開きたいファイルの名前です。2番目の引数は、ファイルを開くモードです。 "r" は読み込みモード、 "w" は書き込みモード、 "a" は追記モードを表します。

 17.1.2 ファイルを読む
ファイルを開いたら、ファイルの内容を読...]]></description><link>https://zenn.dev/zundalab/articles/b85dd70a1649ce</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/b85dd70a1649ce</guid><pubDate>Wed, 13 Nov 2024 19:31:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--lBviswNU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%25BB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25AB%25E3%2583%2580%25E6%2593%258D%25E4%25BD%259C%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【正規表現編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第21章 正規表現

 21.1 正規表現とは
「正規表現」って何か、イメージしにくいですよね。簡単に言うと、複雑な文字列のパターンを表現する方法のことです。
例えば、「メールアドレスの形式」や「電話番号の形式」など、あるルールに従った文字列のパターンを表現したい場合に、正規表現が役立ちます。
正規表現は、一見難しそうに見える特殊な記号を組み合わせてパターンを表現します。でも、基本的なルールを理解すれば、誰でも簡単に使いこなせるようになります。

 21.2 正規表現の基本

 21.2.1 メタキャラクタ
正規表現では、メタキャラクタと呼ばれる特殊...]]></description><link>https://zenn.dev/zundalab/articles/923f7f2ebf0683</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/923f7f2ebf0683</guid><pubDate>Wed, 13 Nov 2024 19:31:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--sBXG_ych--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【ラムダ式（無名関数）編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第22章 ラムダ式（無名関数）

 22.1 ラムダ式とは
ラムダ式は、小さな無名関数を手軽に作成するための方法です。無名関数とは、名前を持たない関数のことを指します。
通常の関数は def キーワードを使って定義しますが、ラムダ式は lambda キーワードを使って定義します。ラムダ式は、関数を一行で簡潔に表現できるため、コードの可読性を向上させることができます。

 22.2 ラムダ式の基本構文
ラムダ式の基本構文は以下のとおりです。
lambda 引数: 式


lambda キーワード: ラムダ式であることを示します。
引数: 関数に渡す引数...]]></description><link>https://zenn.dev/zundalab/articles/17010715245f6a</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/17010715245f6a</guid><pubDate>Wed, 13 Nov 2024 19:31:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vMIjlbaI--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%2580%25E5%25BC%258F%25EF%25BC%2588%25E7%2584%25A1%25E5%2590%258D%25E9%2596%25A2%25E6%2595%25B0%25EF%25BC%2589%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[LangChain Runnable入門：基本的な使い方と実装パターン]]></title><description><![CDATA[
 はじめに
LangChainのRunnableは、AI処理パイプラインを構築する上で非常に重要なコンポーネントです。この記事では、LangChainのRunnableの基本的な使い方から、より複雑な実装パターンまでを、実践的なコード例を交えて解説します。

 この記事で学べること

Runnableの基本的な概念と使い方
段階的に複雑さを増す実装パターン
実践的なエラーハンドリングとログ管理
チェーンの構築と最適化のベストプラクティス


 環境構築
まず、必要なパッケージをインストールします：
pip install langchain langchain-openai pytho...]]></description><link>https://zenn.dev/sunwood_ai_labs/articles/langchain-runnable-tutorial</link><guid isPermaLink="true">https://zenn.dev/sunwood_ai_labs/articles/langchain-runnable-tutorial</guid><pubDate>Wed, 13 Nov 2024 17:14:58 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vw0Fqr-n--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:LangChain%2520Runnable%25E5%2585%25A5%25E9%2596%2580%25EF%25BC%259A%25E5%259F%25BA%25E6%259C%25AC%25E7%259A%2584%25E3%2581%25AA%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2581%25A8%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Maki%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTDdpSmVyNldLVlpKLUd4N054QWVuSFVtYXQ3MUhhd1NXaU5hRG5FTnZiMXZZdHBIaGs9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Maki</dc:creator></item><item><title><![CDATA[Act 15. Pythonで線形回帰を試す]]></title><description><![CDATA[
 はじめに
Act 01. AIで外国為替を自動売買するまでの道のりをベースに学習を進めて行く。
前回は線形回帰の概要について学習した。
なので今回は実際にpythonで線形回帰分析をしてみようと思う。
データセットが必要になるため、今回はpythonで提供されているカリフォルニア住宅価格のデータセットを使用する。

 線形回帰分析
まずは必要なライブラリのインストールを行う。
pip install scikit-learn
これで準備ができたため、コードを書いていこうと思う。
まずはデータセットを確認してみる。

Act15.py
from sklearn.datasets imp...]]></description><link>https://zenn.dev/onishi_ai_lad/articles/eeb5ffc7f47f0f</link><guid isPermaLink="true">https://zenn.dev/onishi_ai_lad/articles/eeb5ffc7f47f0f</guid><pubDate>Wed, 13 Nov 2024 14:08:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YPG1RQ-7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Act%252015.%2520Python%25E3%2581%25A7%25E7%25B7%259A%25E5%25BD%25A2%25E5%259B%259E%25E5%25B8%25B0%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%258A%25E3%2581%25AB%25E3%2581%2597%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFlYzRlYjFmNjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>おにし</dc:creator></item><item><title><![CDATA[毎日Discordにオススメ記事を配信してくれるAI Botを一瞬で作る！]]></title><description><![CDATA[以下の様な最新記事を毎日配信してくれる兄貴がいたらありがたいですよね！
今回は、FastAPIとGemini APIを使用して、LambdaとEventBridgeでサクっとBotを作成する方法をまとめました！

説明はいいから、さっさとコードだけ見せろやって方はコチラ👇
https://github.com/mk668a/lambda-discord-rss-bot
使用する技術は以下になります。Gemini APIが無料なので今回はGeminiを選びました。

Python3.12
FastAPI
Lambda
EventBridge
Docker
Gemini API


 事前準...]]></description><link>https://zenn.dev/mk668a/articles/b93e3369652c37</link><guid isPermaLink="true">https://zenn.dev/mk668a/articles/b93e3369652c37</guid><pubDate>Wed, 13 Nov 2024 14:02:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CqBxoyDJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%25AF%258E%25E6%2597%25A5Discord%25E3%2581%25AB%25E3%2582%25AA%25E3%2582%25B9%25E3%2582%25B9%25E3%2583%25A1%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E9%2585%258D%25E4%25BF%25A1%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2582%258BAI%2520Bot%25E3%2582%2592%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:mk668a%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2JlNzcxZTA4ZDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mk668a</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-035｜A - テレビ]]></title><description><![CDATA[
 設問ページ

🔗ABC-035 A - テレビ



 提出結果
def getIntMap():
    return map(int, input().split())


def main():
    W, H = getIntMap()

    print('16:9' if W % 16 == 0 and H % 9 == 0 else '4:3')


if __name__ == "__main__":
    main()
]]></description><link>https://zenn.dev/hyperdb/articles/f9a7a25b203a6e</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/f9a7a25b203a6e</guid><pubDate>Wed, 13 Nov 2024 10:54:29 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--osqSlVPl--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-035%25EF%25BD%259CA%2520-%2520%25E3%2583%2586%25E3%2583%25AC%25E3%2583%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-035｜B - ドローン]]></title><description><![CDATA[
 設問ページ

🔗ABC-035 B - ドローン



 提出結果
def getInt():
    return int(input())


def getString():
    return input()


def main():
    S = list(getString())
    T = getInt()

    x = S.count(("R")) - S.count("L")
    y = S.count(("U")) - S.count("D")
    q = S.count("?")

    for i in range(q):
      ...]]></description><link>https://zenn.dev/hyperdb/articles/dd1321d7b4888c</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/dd1321d7b4888c</guid><pubDate>Wed, 13 Nov 2024 10:54:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WIbve-fU--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-035%25EF%25BD%259CB%2520-%2520%25E3%2583%2589%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[［AtCoder］ABC-035｜C - オセロ]]></title><description><![CDATA[
 設問ページ

🔗ABC-035 C - オセロ



 提出結果
def getIntMap():
    return map(int, input().split())


def getIntListRow(N):
    return [list(map(int, input().split())) for _ in range(N)]


def main():
    N, Q = getIntMap()
    lr = getIntListRow(Q)

    b = [0] + [0 for _ in range(N)]

    # いもす法
    for l...]]></description><link>https://zenn.dev/hyperdb/articles/817575c5673ece</link><guid isPermaLink="true">https://zenn.dev/hyperdb/articles/817575c5673ece</guid><pubDate>Wed, 13 Nov 2024 10:54:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yX103r4V--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25EF%25BC%25BBAtCoder%25EF%25BC%25BDABC-035%25EF%25BD%259CC%2520-%2520%25E3%2582%25AA%25E3%2582%25BB%25E3%2583%25AD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AF%25E3%2581%2584%25E3%2581%25B1%25E3%2581%2581%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhODJkODgwMzQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>はいぱぁ</dc:creator></item><item><title><![CDATA[kaggleのコンペでDuckdbを使用して前処理を高速化しようとしたら失敗した話]]></title><description><![CDATA[
 参加させていただいたコンペ

 人狼ゲームのログ解析による犯人予測と勝利チームの予測
人狼ゲームのプレイヤーログデータ(csvに記載)を用いて、犯人（人狼）予測と勝利チームの予測を行う機械学習モデルの構築を目指しました。
例えばカラムとしてmessage(発言内容),role(役職)などが記載されている6万行×10列の訓練データを用いて機械学習を行うというものでした。
特徴量に関しても例えばこの人は毎回人狼になるとか勝率が良い人もいるとか非常に凝った内容になって面白かったです。
もしよければ探してみて下さい。

 記事を書いた経緯
今回、kaggleのコンペに初めて参加しました。正直...]]></description><link>https://zenn.dev/amana/articles/5e873a62bd9e3a</link><guid isPermaLink="true">https://zenn.dev/amana/articles/5e873a62bd9e3a</guid><pubDate>Wed, 13 Nov 2024 10:41:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--24XecnL5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:kaggle%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259A%25E3%2581%25A7Duckdb%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E5%2589%258D%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E9%25AB%2598%25E9%2580%259F%25E5%258C%2596%25E3%2581%2597%25E3%2582%2588%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nk_work%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ1MjJkN2U5MzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nk_work</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【例外処理編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第16章 例外処理

 16.1 例外とは
プログラムを実行している際に、予期しない状況が発生することがあります。例えば、存在しないファイルを開こうとしたり、ゼロで割ろうとしたりする場合です。このような予期しない状況が発生した場合、プログラムはエラーメッセージを表示して停止してしまうことがあります。
Pythonでは、このような予期しない状況を例外と呼びます。例外が発生すると、プログラムは例外が発生した場所から処理を中断し、例外を処理するコードを探します。例外を処理するコードが見つからない場合は、プログラムはエラーメッセージを表示して停止します。

...]]></description><link>https://zenn.dev/zundalab/articles/5600ea2d7312ff</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/5600ea2d7312ff</guid><pubDate>Wed, 13 Nov 2024 07:53:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ElvDTeY5--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E4%25BE%258B%25E5%25A4%2596%25E5%2587%25A6%25E7%2590%2586%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【日付時刻操作編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第15章 日付時刻操作

 15.1 日付と時刻のモジュール
Pythonでは、日付と時刻を扱うためのモジュールが用意されています。これらのモジュールを使用すると、現在の日付や時刻の取得、日付や時刻の計算、日付や時刻のフォーマット変換など、様々な操作を行うことができます。

 15.1.1 datetime モジュール
datetimeモジュールは、日付や時刻を表すためのクラスを提供します。datetimeモジュールには、dateクラス、timeクラス、datetimeクラスなど、様々なクラスが含まれています。


date クラス: 年、月、日を扱...]]></description><link>https://zenn.dev/zundalab/articles/0a346ea7a2283b</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/0a346ea7a2283b</guid><pubDate>Wed, 13 Nov 2024 07:53:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--4eVh8UMD--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E6%2597%25A5%25E4%25BB%2598%25E6%2599%2582%25E5%2588%25BB%25E6%2593%258D%25E4%25BD%259C%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【実行時エラー編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第14章 実行時エラー

 14.1 実行時エラーとは
プログラムを実行したときに発生するエラーのことを、実行時エラーといいます。実行時エラーは、プログラムの文法には誤りがなくても、プログラムが実行しようとした操作が不正である場合などに発生します。
例えば、存在しないファイルをオープンしようとしたり、0で割ろうとしたりすると、実行時エラーが発生します。
実行時エラーが発生すると、プログラムは通常、エラーメッセージを表示して停止します。

 14.2 実行時エラーの例

 14.2.1 ZeroDivisionError
0で割ろうとしたときに発生する...]]></description><link>https://zenn.dev/zundalab/articles/f0063e135b88a7</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/f0063e135b88a7</guid><pubDate>Wed, 13 Nov 2024 07:46:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---A-Qpl5Z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E5%25AE%259F%25E8%25A1%258C%25E6%2599%2582%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【構文エラー編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第13章 構文エラー

 13.1 構文エラーとは
Pythonのプログラムは、人間が理解できるプログラミング言語で書かれていますが、コンピュータが直接理解できるわけではありません。 コンピュータがプログラムを実行するためには、人間が書いたプログラムをコンピュータが理解できる形式に変換する必要があります。 この変換を行うプログラムを「インタプリタ」と呼びます。
構文エラーとは、Pythonのプログラムの文法規則に違反しているために、インタプリタがプログラムを理解できないエラーのことです。 人間は多少文法が間違っていても意味を理解することができますが、...]]></description><link>https://zenn.dev/zundalab/articles/d8507bd6e9ab78</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/d8507bd6e9ab78</guid><pubDate>Wed, 13 Nov 2024 07:46:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kVISkGvW--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E6%25A7%258B%25E6%2596%2587%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【組込み関数編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第12章 組込み関数

 12.1 組込み関数とは
組込み関数とは、Pythonにあらかじめ組み込まれている関数のことを指します。 これらの関数は、Pythonをインストールした時点で、すぐに使うことができます。 関数を呼び出すだけで、様々な処理を実行することができます。
例えば、画面に文字列を出力したい場合は print() 関数、文字列の長さを知りたい場合は len() 関数を使うことができます。

 12.2 データ型に関する組込み関数

 12.2.1 type() 関数
type() 関数は、オブジェクトのデータ型を取得するための関数です。...]]></description><link>https://zenn.dev/zundalab/articles/ce80e0e39fa64b</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/ce80e0e39fa64b</guid><pubDate>Wed, 13 Nov 2024 07:46:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_riUgajO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E7%25B5%2584%25E8%25BE%25BC%25E3%2581%25BF%25E9%2596%25A2%25E6%2595%25B0%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item><item><title><![CDATA[Pythonチュートリアル徹底調査【条件分岐編】]]></title><description><![CDATA[NotebookLMプロンプト集

 第10章 条件分岐

 10.1 条件分岐とは
条件分岐とは、ある条件が満たされているかどうかによって、プログラムの処理を分岐させることです。
例えば、ゲームでプレイヤーの残りHPが0になった場合、ゲームオーバーの処理を実行するといった場合に条件分岐が使われます。

 10.2  if 文
Pythonで条件分岐を行うには、 if 文を使います。 if 文の基本的な構文は以下のようになります。
if 条件式:
    条件式が真の場合に実行される処理
条件式 の部分が真 (True) の場合、 条件式が真の場合に実行される処理 が実行されます。 条件...]]></description><link>https://zenn.dev/zundalab/articles/790362751e1188</link><guid isPermaLink="true">https://zenn.dev/zundalab/articles/790362751e1188</guid><pubDate>Tue, 12 Nov 2024 19:39:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k5y27CaA--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2583%2581%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25AB%25E5%25BE%25B9%25E5%25BA%2595%25E8%25AA%25BF%25E6%259F%25BB%25E3%2580%2590%25E6%259D%25A1%25E4%25BB%25B6%25E5%2588%2586%25E5%25B2%2590%25E7%25B7%25A8%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Zunda%2520Lab.%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvei5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Zunda Lab.</dc:creator></item></channel></rss>