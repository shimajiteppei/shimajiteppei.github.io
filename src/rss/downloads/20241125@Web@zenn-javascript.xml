<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Mon, 25 Nov 2024 10:48:46 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【JavaScript × Terraform】次世代のモダン AltJS「JS.tf」の紹介]]></title><description><![CDATA[人類は HCL (Hashicorp Configuration Language) で JavaScript を記述するべきなので、次世代のモダン AltJS である「JS.tf」をリリースしました。
https://github.com/koki-develop/terraform-provider-js
https://registry.terraform.io/providers/koki-develop/js/latest/docs
例えば次のコードは標準出力に hello world と出力する JS.tf のプログラムです。

example.tf
data "js_fun...]]></description><link>https://zenn.dev/terraform_jp/articles/jstf-introduction</link><guid isPermaLink="true">https://zenn.dev/terraform_jp/articles/jstf-introduction</guid><pubDate>Mon, 25 Nov 2024 09:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--k7kumZFu--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%2520%25C3%2597%2520Terraform%25E3%2580%2591%25E6%25AC%25A1%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3%2520AltJS%25E3%2580%258CJS.tf%25E3%2580%258D%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:koki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzIwYzYyOWJmZDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:terraform-jp%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hiNFlHemhPbVVNRThrZjV5Z01DakFoOWsxeEtCTzRLdWdVMExDQWc9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>koki</dc:creator></item><item><title><![CDATA[この世でいちばん分かりやすいPromiseの用語1分図解 (「resolvedだがsettledではない」とは)]]></title><description><![CDATA[
 図解

すべてのPromiseは​pending(処理中)/settled(完了した)の​2つの状態のいずれかに属します​


settled(完了した)はfullfilled(満たされた、成功した)/rejected(拒否された、失敗した)のいずれかに分類されます


また、resolved(解決された)​という状態もあります

他のPromiseに処理を委譲した(=locked in)ときのみ「解決したが、完了していない」​という状態になります





 locked in

locked inは「他のPromiseに処理を委譲している」状態です。
「あなたのタスクを部下に丸投...]]></description><link>https://zenn.dev/alma/articles/b7af6ae4e8a133</link><guid isPermaLink="true">https://zenn.dev/alma/articles/b7af6ae4e8a133</guid><pubDate>Mon, 25 Nov 2024 08:10:26 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--JlPwe7zm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%2593%25E3%2581%25AE%25E4%25B8%2596%25E3%2581%25A7%25E3%2581%2584%25E3%2581%25A1%25E3%2581%25B0%25E3%2582%2593%25E5%2588%2586%25E3%2581%258B%25E3%2582%258A%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584Promise%25E3%2581%25AE%25E7%2594%25A8%25E8%25AA%259E1%25E5%2588%2586%25E5%259B%25B3%25E8%25A7%25A3%2520%2528%25E3%2580%258Cresolved%25E3%2581%25A0%25E3%2581%258Csettled%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E3%2580%258D%25E3%2581%25A8%25E3%2581%25AF%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Alma%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSXJlWlFRMk8tVEpDb2x1WFh6bWtnMVlZRVJKVjN6bXotZnpEallvdm9MSmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Alma</dc:creator></item><item><title><![CDATA[NodeCGでスポーツコーダ#4:環境構築(ESLintの設定)]]></title><description><![CDATA[[重要]今回の設定は難しいので、飛ばしても問題ありません

 概要
NodeCGを使ってスポーツコーダが作れるか検証していきます。
今回はESLintを設定して、エラー箇所を素早く発見します。
また、前回導入したPrettierとESLintは機能が一部競合するのでエラーが起きないようにします。

 ESLintとは
ESLintは、JavaScriptやTypeScriptのコードを静的解析してエラーやコードスタイルの問題を検出し、修正を提案してくれるツールです。端的にいうと「コードをチェックして間違いや汚い部分を教えてくれる賢い先生」です。
ただし、コード整形はPrettierで行う...]]></description><link>https://zenn.dev/holypotter0304/articles/4de1f6c6c6d123</link><guid isPermaLink="true">https://zenn.dev/holypotter0304/articles/4de1f6c6c6d123</guid><pubDate>Mon, 25 Nov 2024 05:51:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mb5nuaco--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NodeCG%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25234%253A%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528ESLint%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2582%258A%25E3%2581%25BD%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZTZlMjBlZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほりぽた</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#２ Lenis Smooth Scroll】]]></title><description><![CDATA[
 【#２ Lenis Smooth Scroll】
YouTube: https://youtu.be/N1sRwkCvdHk
https://youtu.be/N1sRwkCvdHk
今回はSmooth Scroll用のライブラリ
「Lenis」の設定を行います。
https://lenis.darkroom.engineering/
スクロールできる要素の作成と
「Lenis」の読み込みを行います。

index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
  &lt;head&gt;
    &lt;meta charset...]]></description><link>https://zenn.dev/web_life_ch/articles/56bf5fa0ad5741</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/56bf5fa0ad5741</guid><pubDate>Mon, 25 Nov 2024 04:33:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TaKiIgoR--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2592%2520Lenis%2520Smooth%2520Scroll%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[駅すぱあと路線図JavaScriptライブラリrosen.jsを使って路線図のハイライトを描く]]></title><description><![CDATA[本記事はヴァル研究所の支援として作成された記事です
駅すぱあとは乗り換え案内サービスとして有名ですが、駅すぱあとの路線図をWebページに埋め込むことができるのを知っているでしょうか。駅すぱあとの路線図をWebページに埋め込むことで、Webサイトへの訪問者が目的地までの経路を探しやすくなります。日本の大都市圏では電車での移動が多いので、路線図を中心とした地図は便利です。
そんな地図埋め込みを手軽に実現してくれるライブラリがrosen.jsです。これは駅すぱあと公式のライブラリであり、地図と駅・路線情報などを組み合わせてさまざまな可視化を行えます。

本記事では、rosen.jsを使って路線...]]></description><link>https://zenn.dev/ekispert_api/articles/81f6dc6661e9a1</link><guid isPermaLink="true">https://zenn.dev/ekispert_api/articles/81f6dc6661e9a1</guid><pubDate>Mon, 25 Nov 2024 00:54:45 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--0GKz4v2f--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3JavaScript%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AArosen.js%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E8%25B7%25AF%25E7%25B7%259A%25E5%259B%25B3%25E3%2581%25AE%25E3%2583%258F%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E6%258F%258F%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25A2%25E3%2583%2584%25E3%2582%25B7%2540MOONGIFT%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllZWU4MmU5MDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520API%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqN3UwNEd0OEkzbTVsd2xaRUhBbjNlcko0QjZxNWlBd1V6N2tqT1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アツシ@MOONGIFT</dc:creator></item><item><title><![CDATA[[Typescript]日付を扱う上で出会ったバグについて]]></title><description><![CDATA[最近業務で日付関連のフォームをいじることが多々あり、その際起きたバグについてシェアします。

 new Date()でパースしたら挙動が異なる
yyyy-MM-dd、yyyy.MM.dd、yyyyMMdd形式で入力した日付文字列をyyyy/MM/ddにフォーマットする処理で出会いました。

// yyyy-MM-dd形式

// Chrome
new Date('2024-11-20')
// =&gt; Wed Nov 20 2024 09:00:00 GMT+0900 (日本標準時)

new Date('2023-02-29')
// =&gt; Wed Mar 01 2023 0...]]></description><link>https://zenn.dev/barabara/articles/8f9f6351acfc91</link><guid isPermaLink="true">https://zenn.dev/barabara/articles/8f9f6351acfc91</guid><pubDate>Sun, 24 Nov 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--A_1oK-zL--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255BTypescript%255D%25E6%2597%25A5%25E4%25BB%2598%25E3%2582%2592%25E6%2589%25B1%25E3%2581%2586%25E4%25B8%258A%25E3%2581%25A7%25E5%2587%25BA%25E4%25BC%259A%25E3%2581%25A3%25E3%2581%259F%25E3%2583%2590%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%2590%25E3%2583%25A9%25E3%2583%2590%25E3%2583%25A9%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzEyYWRmZGRkNzIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>バラバラ</dc:creator></item><item><title><![CDATA[SPAでAuth0のライブラリを使ってログインした際にセットされるCookieについて]]></title><description><![CDATA[
 この記事の内容について
正直、Auth0のコミュニティサイトで展開された内容を読めば十分です。
上記リンクの内容を自分で改めてまとめたにすぎません。

 はじめに
SPAでAuth0を使用し、ログインを行うと以下画像のようなCookieがセットされます。

何かしら使用されていそうですが、実際に何に使用しているかは分かっていませんでした。
そこで、今回はauth0から始まるCookieが何のために存在しているかについて、まとめた記事です。

 結論

当該Cookieはブラウザ上でログインしているかを検証するフラグ的な役割です

そのため、盗まれても特に不都合はありません


トーク...]]></description><link>https://zenn.dev/maronn/articles/cookie-by-auth0-in-spa</link><guid isPermaLink="true">https://zenn.dev/maronn/articles/cookie-by-auth0-in-spa</guid><pubDate>Sun, 24 Nov 2024 16:01:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--3G1V2tHd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:SPA%25E3%2581%25A7Auth0%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2597%25E3%2581%259F%25E9%259A%259B%25E3%2581%25AB%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2582%258BCookie%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%259E%25E3%2583%25AD%25E3%2583%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVkYzVlMmFlYTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>マロン</dc:creator></item><item><title><![CDATA[Next.js App routerでパフォーマンス・UX改善をする4つの方法]]></title><description><![CDATA[
 はじめに
Next.js App routerは、なんとなく開発しているとUXの悪いアプリケーションができてしまいがちです。
ですが、今回紹介する方法を実装すれば、ユーザーがストレスの感じないアプリケーションをそれなりに開発できますので、ぜひみていただければと思います。
対象: Next.js v14

 この記事を見て欲しい人

Next.js App router 初心者の人
Next.js App routerで開発したアプリケーションが、もったりしていて悩んでいる人
Next.js App routerで、UXやパフォーマンスの良いアプリケーションを作りたい人


 pref...]]></description><link>https://zenn.dev/yarai/articles/89bc38843153eb</link><guid isPermaLink="true">https://zenn.dev/yarai/articles/89bc38843153eb</guid><pubDate>Sun, 24 Nov 2024 13:44:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bSGXxZVX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%2520App%2520router%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%25BBUX%25E6%2594%25B9%25E5%2596%2584%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B4%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:yuu_aoringo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2U2MWQzYjIxZDIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>yuu_aoringo</dc:creator></item><item><title><![CDATA[JSConf JP 2024 に参加しました！]]></title><description><![CDATA[
 はじめに
2024/11/23 に開催された JSConf JP 2024 に参加しました。
今回が初参加です。
気付いたらチケットが売り切れており、 waiting list に登録して購入できました 🙌
また、各セッションはライブ配信されており、当日現地参加できなかった方も視聴できるようです。ありがたいです。
最大4トラック進行されていました。セッション数が多く、ボリューミーなカンファレンスでした。

 聴いたセッション

 LT: Promise.try: シンプルで強力な同期/非同期統合の未来 - 実装の深層とPromiseの進化
https://jsconf.jp/2024...]]></description><link>https://zenn.dev/conayw/articles/f11db09f92df8d</link><guid isPermaLink="true">https://zenn.dev/conayw/articles/f11db09f92df8d</guid><pubDate>Sun, 24 Nov 2024 13:31:52 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UcYNY3k7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSConf%2520JP%25202024%2520%25E3%2581%25AB%25E5%258F%2582%25E5%258A%25A0%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:conayw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZkNjE4YWY3Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>conayw</dc:creator></item><item><title><![CDATA[【JavaScript】textareaに改行制限を実装する方法（予測変換(IME)対応）]]></title><description><![CDATA[
 はじめに
とあるプロジェクトで入力可能な文字数と行数が決まっているtextareaを実装する必要がありました。
文字数制限はmaxLengthを使って簡単に解決できましたが、行数制限はなかなか難しかったので、解決方法を記事として書こうと思います。

 この記事で実装するtextareaの条件

5行目まで入力可能。
textareaの標準のスクロールバーとリサイズ機能は非表示にする。


index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
  &lt;head&gt;
    &lt;meta charset="UTF-8"...]]></description><link>https://zenn.dev/kariu/articles/186c61a6192e9a</link><guid isPermaLink="true">https://zenn.dev/kariu/articles/186c61a6192e9a</guid><pubDate>Sun, 24 Nov 2024 09:16:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--86-rgp7l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591textarea%25E3%2581%25AB%25E6%2594%25B9%25E8%25A1%258C%25E5%2588%25B6%25E9%2599%2590%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25EF%25BC%2588%25E4%25BA%2588%25E6%25B8%25AC%25E5%25A4%2589%25E6%258F%259B%2528IME%2529%25E5%25AF%25BE%25E5%25BF%259C%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kariu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2FlOGU0ZmFlMmMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kariu</dc:creator></item><item><title><![CDATA[JavaScript用Azure OpenAIライブラリはv2でOpenAIを利用するように変更された]]></title><description><![CDATA[
 要約
Azure OpenAI ライブラリにクライアント実装は含まれなくなったのでOpenAIを利用しましょう。

 Azure OpenAIライブラリとは？
Azure OpenAI Serviceでは本家OpenAIとほとんど同じAPIを提供していますが、Azure用のライブラリ(@azure/openai
)が別に提供されていました。どちらのライブラリでも、どちらのAPIにアクセスすることが可能でした。

 @azure/openai v2リリース
ほとんど同じ物が実装されているためか、@azure/openaiのv2からは本家OpenAIのクライアント(openai)を利用す...]]></description><link>https://zenn.dev/ashphy/articles/c300a963d1e53e</link><guid isPermaLink="true">https://zenn.dev/ashphy/articles/c300a963d1e53e</guid><pubDate>Sun, 24 Nov 2024 08:32:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fFEToBZq--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E7%2594%25A8Azure%2520OpenAI%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AFv2%25E3%2581%25A7OpenAI%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E5%25A4%2589%25E6%259B%25B4%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ashphy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l5YWstZi01V09kbXFWT1d0TWxkWVpVdUlkYWVuZDJEdkRnMlBQSHc9czI1MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ashphy</dc:creator></item><item><title><![CDATA[NodeCGでスポーツコーダ#1:環境構築(Reactなしver)]]></title><description><![CDATA[
 概要
NodeCGを使ってスポーツコーダが作れるか検証していきます。
今回はNodeCGをJavascirpt(Reactなし)で構築します。

 背景

 スポーツコーダとは
スポーツコーダはスポーツ中継やライブ配信時に使うテロップシステムです。今までは専用機や専用システムを使っていましたが、NodeCGで代替できないか実際に構築しながら検証をしていきます。

 NodeCGとは
NodeCGは、主にライブ配信やeスポーツ大会で使われるオープンソースのツールで、配信画面に表示するオーバーレイや情報パネルを簡単に管理・作成できるフレームワーク(Node.js)です。
主な特徴：

ス...]]></description><link>https://zenn.dev/holypotter0304/articles/557c87bcaab0a7</link><guid isPermaLink="true">https://zenn.dev/holypotter0304/articles/557c87bcaab0a7</guid><pubDate>Sun, 24 Nov 2024 06:49:47 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QDXR1piT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:NodeCG%25E3%2581%25A7%25E3%2582%25B9%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2584%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25231%253A%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2528React%25E3%2581%25AA%25E3%2581%2597ver%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BB%25E3%2582%258A%25E3%2581%25BD%25E3%2581%259F%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkZTZlMjBlZWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ほりぽた</dc:creator></item><item><title><![CDATA[リッチテキストエディタの作成 - ReactやDraft.jsを活用]]></title><description><![CDATA[
 はじめに
リッチテキストエディタは、テキストを装飾する、リンクを挿入する、画像を埋め込むなど、多彩な操作が可能なツールです。エディタはブログ記事作成ツールやCMSなど、さまざまな用途で利用されています。本記事では、ReactとDraft.jsを活用して、基本的なリッチテキストエディタを自作する方法を解説します。


 なぜDraft.jsを選ぶのか？
Draft.jsは、Facebookが開発したリッチテキストエディタのためのフレームワークです。
以下の特徴があります：


豊富な拡張性：プラグインやカスタムデータ構造の追加が容易。

リアルタイム編集：状態管理がしやすく、エディタ内...]]></description><link>https://zenn.dev/ippei523/articles/b09f2f8e35d6f4</link><guid isPermaLink="true">https://zenn.dev/ippei523/articles/b09f2f8e35d6f4</guid><pubDate>Sun, 24 Nov 2024 06:02:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AKzskBKd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2581%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A8%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25BF%25E3%2581%25AE%25E4%25BD%259C%25E6%2588%2590%2520-%2520React%25E3%2582%2584Draft.js%25E3%2582%2592%25E6%25B4%25BB%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259A%2587%25E4%25BA%25BA%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiNTRjZWFmYmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>暇人エンジニア</dc:creator></item><item><title><![CDATA[nodeでjsの実行環境を一瞬で構築する方法]]></title><description><![CDATA[
 1. Node.jsをインストール



公式サイトにアクセス
Node.js公式サイトにアクセスします。


バージョンを選択


LTS (Long Term Support): 安定版。推奨。

Current: 最新の機能を試したい場合に選択。



インストール
ダウンロードしたインストーラを実行し、インストール手順に従います。


確認
インストール後、ターミナルまたはコマンドプロンプトで以下のコマンドを実行してインストールを確認します:
node -v
npm -v

これにより、Node.jsとnpm（Node Package Manager）のバージョンが表示されま...]]></description><link>https://zenn.dev/aki_on/articles/addf23f8be8683</link><guid isPermaLink="true">https://zenn.dev/aki_on/articles/addf23f8be8683</guid><pubDate>Sat, 23 Nov 2024 08:28:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--vTRvUljG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:node%25E3%2581%25A7js%25E3%2581%25AE%25E5%25AE%259F%25E8%25A1%258C%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aki_on%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyMWRmYzJhY2QuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aki_on</dc:creator></item><item><title><![CDATA[JavaScriptでCookieにデータを保存する]]></title><description><![CDATA[
 はじめに
Cookieは、平たく言えばウェブサイトを閉じてもデータが消えないように保存する仕組みです。
この記事ではフレームワークを用いないで、JavaScirptを使ってCookieにデータを保存し、呼び出す方法を解説します。

 サンプルコード
今回作るものは本当に簡素で、以下のようなものにします。


index.html
&lt;!DOCTYPE html&gt;
&lt;html lang="ja"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="widt...]]></description><link>https://zenn.dev/as_atushi/articles/e46520d974c5d0</link><guid isPermaLink="true">https://zenn.dev/as_atushi/articles/e46520d974c5d0</guid><pubDate>Sat, 23 Nov 2024 08:14:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EvZrE0Uw--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7Cookie%25E3%2581%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2588%25E3%2583%25BC%25E3%2581%2588%25E3%2581%2599%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU3ZWFhMjk3ODMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>えーえす</dc:creator></item><item><title><![CDATA[空配列や空オブジェクトの真偽判定のプログラミング言語ごとの違い]]></title><description><![CDATA[私は現在、業務で主にTypeScriptを使っています。
以下のようなコードを、nullや空文字などのfalsyな値の対策でよく書くと思います。
hoge &amp;&amp; console.log("hogeはtruthyです");
空配列や空オブジェクトはtruthyなので、falsyと勘違いして上記のようなコードを書くと、意図しない挙動をすることがあるわけですが、
他の言語でも空配列や空オブジェクトはtruthyとして扱われるのか疑問に思って少し調べてみました。

 JavaScriptの場合
先述の通り、truthyです。
以下のコードを動作させればわかります。
const e...]]></description><link>https://zenn.dev/ohimusdev46301/articles/bd823ebf99a961</link><guid isPermaLink="true">https://zenn.dev/ohimusdev46301/articles/bd823ebf99a961</guid><pubDate>Sat, 23 Nov 2024 07:52:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CkJx_JSd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%25A9%25BA%25E9%2585%258D%25E5%2588%2597%25E3%2582%2584%25E7%25A9%25BA%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E7%259C%259F%25E5%2581%25BD%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Wataru%2520Takiguchi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzdkOTBhM2EyYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Wataru Takiguchi</dc:creator></item><item><title><![CDATA[【Popover API/Tooltip Pattern】アクセシビリティのことを考えながらツールチップを実装する]]></title><description><![CDATA[
 そもそもツールチップとはなにか
ポップオーバーとも呼ばれる UI パーツです。
Zenn の記事を PC で開いた時、本文の左側にいくつかのアイコンが表示されていますね。Web に慣れたユーザーであれば、これらのアイコンを見て「記事をそれぞれのサービスでシェアするためのボタンかな」と推測することができるでしょう。但し、馴染みがないユーザーにとってはどうでしょうか。文字はなく、アイコンのみで表示されたボタンにどういったアクションがあるのか、瞬時に理解することは難しいでしょう。
この場合に有用なのがポップオーバーです。ホバーやフォーカスなどで追加の情報を表示させることができ、設置されてい...]]></description><link>https://zenn.dev/poetrainy/articles/5c7b162540b2e1</link><guid isPermaLink="true">https://zenn.dev/poetrainy/articles/5c7b162540b2e1</guid><pubDate>Sat, 23 Nov 2024 03:08:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pPSrI3yc--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Popover%2520API%252FTooltip%2520Pattern%25E3%2580%2591%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B7%25E3%2583%2593%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E3%2581%25AE%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:poetrainy%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS0JET29VN3NHZmVUZWxUR1ZQRXV4NUdpRmZ4NFVNYVlzbkxaalh0R2s1NWMwbkhjcTI9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>poetrainy</dc:creator></item><item><title><![CDATA[【JavaScript】オブジェクト操作メソッドを理解する Object.entries Object.fromEntriesなど]]></title><description><![CDATA[
 概要
この記事では JavaScriptのオブジェクト操作で使用されるObject.keys、Object.values、Object.entries、Object.fromEntriesの使い方について書いています。


Object.keys: オブジェクトのキー一覧を取得

Object.values: オブジェクトの値一覧を取得

Object.entries: オブジェクトをキーと値のタプル配列に変換

Object.fromEntries: 配列からオブジェクトを生成

Object.entries、Object.fromEntriesはたまにしか使わず、毎回挙動を忘れて...]]></description><link>https://zenn.dev/shimiyu/articles/31d620736a8763</link><guid isPermaLink="true">https://zenn.dev/shimiyu/articles/31d620736a8763</guid><pubDate>Fri, 22 Nov 2024 22:14:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ClMwylvT--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E6%2593%258D%25E4%25BD%259C%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2520Object.entries%2520Object.fromE...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2581%25BF%25E3%2582%2586%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0OWE2NTYxY2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しみゆー</dc:creator></item><item><title><![CDATA[nodejsの歴史(簡単に)]]></title><description><![CDATA[
 nodejsとは？

 javascriptの誕生(1995~)
javascriptはネットスケープ社がウェブブラウザで動くスクリプト言語として開発された。
このころにもjavascriptをサーバ側で動かす試みがあったが、当時はPerlやPHPが人気を集めていた。

 V8エンジン(2008~)
Javascriptを高速に動作させるためJITコンパイルを使っている(Just In Time)
V8エンジンの登場によって、スクリプト言語だけでなく、サーバサイドでも使える技術として強力な基盤を持つ。

 nodejsの誕生(2009~)
軽量でイベント駆動の非同期IOを提供できるサ...]]></description><link>https://zenn.dev/endeavor_robot/articles/1cffc0e887bf7f</link><guid isPermaLink="true">https://zenn.dev/endeavor_robot/articles/1cffc0e887bf7f</guid><pubDate>Fri, 22 Nov 2024 19:29:42 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--tascXIal--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:nodejs%25E3%2581%25AE%25E6%25AD%25B4%25E5%258F%25B2%2528%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:inumina%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzI2NzZiMTdmZjIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>inumina</dc:creator></item><item><title><![CDATA[JSONから表形式への変換：詳細ガイド]]></title><description><![CDATA[データフォーマットを効率的に変換することは、現代のデータ処理において不可欠です。JSON（JavaScript Object Notation）は柔軟性のあるデータ交換フォーマットとして広く利用されており、CSVやExcelなどの表形式データは、分析や可視化において特に優れています。本ガイドでは、JSONを表形式データに変換するさまざまな方法を解説し、データ分析および可視化のワークフローを向上させるための手助けをします。

 JSONと表形式データの理解

 JSONフォーマット
JSONは、軽量かつテキストベースのフォーマットであり、人間と機械の両方にとって読み書きが容易です。主に以下...]]></description><link>https://zenn.dev/kasuna/articles/e501f6260cbfc5</link><guid isPermaLink="true">https://zenn.dev/kasuna/articles/e501f6260cbfc5</guid><pubDate>Fri, 22 Nov 2024 11:00:20 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--QVHDsp_e--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JSON%25E3%2581%258B%25E3%2582%2589%25E8%25A1%25A8%25E5%25BD%25A2%25E5%25BC%258F%25E3%2581%25B8%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%25EF%25BC%259A%25E8%25A9%25B3%25E7%25B4%25B0%25E3%2582%25AC%25E3%2582%25A4%25E3%2583%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Kasuna%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Kasuna</dc:creator></item></channel></rss>