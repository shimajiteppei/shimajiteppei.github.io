<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Sat, 28 Dec 2024 04:00:21 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[自分がよく使っているブックマークレット公開所]]></title><description><![CDATA[
 使い方(ブックマークレットの概要)
javascript:alert("ブックマークレットのソースコード");
←範囲選択ここまで

↑のコードブロックを範囲選択して、ブラウザのブックマークにドラックドロップ
名前がソースコードになってるので、自分のわかりやすい名前に変更する


 Xで、表示中のURLかXのポストIDの反応を検索
javascript:(function(){let xSearch;if(location.hostname=="x.com"&amp;&amp;0&lt;location.href.indexOf("/status/")){xSearch=locati...]]></description><link>https://zenn.dev/ihok/articles/c3d02cb7bea8b9</link><guid isPermaLink="true">https://zenn.dev/ihok/articles/c3d02cb7bea8b9</guid><pubDate>Sat, 28 Dec 2024 02:51:00 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FuWDy9qP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E8%2587%25AA%25E5%2588%2586%25E3%2581%258C%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2583%2596%25E3%2583%2583%25E3%2582%25AF%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25AF%25E3%2583%25AC%25E3%2583%2583%25E3%2583%2588%25E5%2585%25AC%25E9%2596%258B%25E6%2589%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ihok%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhESUZGcEliSGtLNnV4SnBJQnl1eGtCQkwwWU5zamE5VGx6bzk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ihok</dc:creator></item><item><title><![CDATA[JavaScriptで解く！『LeetCode Arai 60』#5 Zigzag Conversion]]></title><description><![CDATA[
 JavaScriptで解く！『LeetCode Arai 60』#5 Zigzag Conversion
「Zigzag Conversion」は、文字列をジグザグ（上下に行ったり来たり）に並べ替える問題です。
この問題を解くポイントはどうやってジグザグに文字を配置するかというところ。
ここでは、2次元配列を使った解法を取り上げます。


 1. 問題のイメージ
例えば、文字列 "PAYPALISHIRING" を行数3でジグザグに並べると：
P   A   H   N
A P L S I I G
Y   I   R
これを1行で読み取ると、"PAHNAPLSIIGYIR" という文...]]></description><link>https://zenn.dev/tcool/articles/38cf6b0d451148</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/38cf6b0d451148</guid><pubDate>Fri, 27 Dec 2024 11:41:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--fY7h8Vtp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E3%2580%258ELeetCode%2520Arai%252060%25E3%2580%258F%25235%2520Zigzag%2520Conversion%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[this を操るABC : apply, bind, call (JavaScript)]]></title><description><![CDATA[JavaScriptを使っていると、「this」の意味について迷うことは、初学者の大きな課題の一つです。
JavaScriptでは、コンテキストによって「this」が指す対象は変わるため、独自にある関数を実行するときに「この関数を〈この = this〉オブジェクトに結びつけたい」というときがあります。
これを実現する方法の一つが「call」「apply」「bind」です。これらのメソッドの違いと実用方法を詳しく解説します。


 「call」の解説
要素:

すぐに関数を実行したいときに使う
第一対象に「this」に結びつけるオブジェクトを渡し、その後に実際の引数を渡す


 例:
fu...]]></description><link>https://zenn.dev/tcool/articles/50040e1f657fea</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/50040e1f657fea</guid><pubDate>Fri, 27 Dec 2024 10:43:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TzlU4z8x--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:this%2520%25E3%2582%2592%25E6%2593%258D%25E3%2582%258BABC%2520%253A%2520apply%252C%2520bind%252C%2520call%2520%2528JavaScript%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[JavaScriptで解く！『LeetCode Arai 60』#4 First Unique Character in a String]]></title><description><![CDATA[この記事では、LeetCode Arai 60 シリーズ第4問、First Unique Character in a String を JavaScript を使って解く方法を解説します。


 問題の概要
文字列 s が与えられます。この中から、

一度しか登場しない文字
その中で、一番最初に現れる文字の位置（インデックス）


を見つける問題です。
もしそのような文字が存在しなければ -1 を返します。


 例

 入力例1
s = "loveleetcode"


"l" → 1回だけ登場（インデックス 0）

"o" → 2回登場

"v" → 1回だけ登場（インデックス 2...]]></description><link>https://zenn.dev/tcool/articles/a23e83dd0da09f</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/a23e83dd0da09f</guid><pubDate>Fri, 27 Dec 2024 10:29:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--og5oDRMQ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E3%2580%258ELeetCode%2520Arai%252060%25E3%2580%258F%25234%2520First%2520Unique%2520Character...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[ExpressにてESLint、Prettierを設定してみた]]></title><description><![CDATA[
 設定

ESLintの設定
最初に必要なパッケージを追加する
yarn add --dev prettier eslint-config-prettier eslint-plugin-prettier


コマンド実行後にできたファイルを編集
例
import globals from "globals";
import pluginJs from "@eslint/js";
import tseslint from "@typescript-eslint/eslint-plugin";
import tsparser from "@typescript-eslint/parser"...]]></description><link>https://zenn.dev/nineball/articles/351b56692ead42</link><guid isPermaLink="true">https://zenn.dev/nineball/articles/351b56692ead42</guid><pubDate>Fri, 27 Dec 2024 09:14:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ZL_e9xuO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Express%25E3%2581%25AB%25E3%2581%25A6ESLint%25E3%2580%2581Prettier%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nineball%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3YWM1ZTllYzAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nineball</dc:creator></item><item><title><![CDATA[JavaScriptで解く！『LeetCode Arai 60』#3 繰り返し文字のない最長の部分文字列]]></title><description><![CDATA[この記事では、LeetCode Arai60 の第3問 「Longest Substring Without Repeating Characters」 を、スライドウィンドウ法 (Sliding Window) の手法を使って解きます。


 1. 問題について


入力: 文字列 s


出力:


s の中で、同じ文字が重複しない 連続した部分（＝部分文字列）のうち、一番長いものの「長さ」を求める




 例
s = "abcabcbb"


abc → 長さ 3

bca → 長さ 3

cab → 長さ 3
…
最長 3 となる。


部分文字列: 元の文字列から「連続する形...]]></description><link>https://zenn.dev/tcool/articles/9245a4891ec3c7</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/9245a4891ec3c7</guid><pubDate>Fri, 27 Dec 2024 09:13:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Ma4Q-dhG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E3%2580%258ELeetCode%2520Arai%252060%25E3%2580%258F%25233%2520%25E7%25B9%25B0%25E3%2582%258A%25E8%25BF%2594%25E3%2581%2597%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AE%25E3%2581%25AA%25E3%2581%2584%25E6%259C%2580%25E9%2595%25B7%25E3%2581%25AE%25E9%2583%25A8%25E5%2588%2586%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[JavaScriptで解く！『LeetCode Arai 60』#2 Add Two Numbers]]></title><description><![CDATA[このシリーズでは、LeetCode で良問として知られている Arai 60 を、JavaScript を用いて順番に解説していきます。
第2問となる「Add Two Numbers」は、単一連結リストというデータ構造を扱いながら、再帰処理の基本を学ぶことができる良問です。
ぜひ、この記事を参考にしながら取り組んでみてください！


 第2問「Add Two Numbers」について

 問題へのアクセス
Add Two Numbers 問題ページ（LeetCode）

 問題概要

問題
2つの非負整数を、「各桁の数字」を逆順に並べた形で 単一連結リスト（以下、リスト と表記）で受け取...]]></description><link>https://zenn.dev/tcool/articles/88dc4a02afbad7</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/88dc4a02afbad7</guid><pubDate>Fri, 27 Dec 2024 08:17:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Xgjke762--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E3%2580%258ELeetCode%2520Arai%252060%25E3%2580%258F%25232%2520Add%2520Two%2520Numbers%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[アプリのパフォーマンス改善でライブラリの実装の理解が役立った話]]></title><description><![CDATA[
 はじめに
技術で開発上の問題を突破できると嬉しいですよね。
しかもバックエンドで学んだことがフロントエンドで活用できると面白いですよね。
そこでGraphQLサーバーの開発でDataLoaderの実装を勉強したことが、フロントエンドのパフォーマンス改善で役に立った話を紹介します。[1]
（DataLoaderを知らなくても読めるようにこの記事は書いています！！！）

 パフォーマンス問題
ReactでExcelのようなテーブルを持ったアプリを開発していました。
アプリには変更のあった行の色が変わる機能がありました。
画面の雰囲気:

ある日、データ件数が大きいときにペーストを行うと非...]]></description><link>https://zenn.dev/aidemy/articles/understanding-library-impl-helped-app-perf</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/understanding-library-impl-helped-app-perf</guid><pubDate>Fri, 27 Dec 2024 03:38:53 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--WsBdxvfV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%2594%25B9%25E5%2596%2584%25E3%2581%25A7%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%25AE%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%258C%25E5%25BD%25B9%25E7%25AB%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mosh%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzAzNjI3YTFkMmMuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mosh</dc:creator></item><item><title><![CDATA[[関数型プログラミング]評価とファーストクラスとは？]]></title><description><![CDATA[
 評価とファーストクラスとは？
関数型プログラミングは、純粋関数、高階関数、不変性などを中心に構成されます。これらの特徴を学ぶ前に密接に関連している 評価와 ファーストクラスの概念を理解することが重要です。

 なぜ評価とファーストクラスは関数型プログラミングで重要なのか？
関数型プログラミングを学ぶ前にこの概念を学ぶ理由は以下の通りです：


コード実行の原理理解
評価とファーストクラスは、コードの実行方法や記述方法を理解する上で重要な役割を果たします。コードがどのように実行され、結果が導かれるのかを理解すると、問題解決能力が向上します。

効率的で柔軟なコード作成
評価プロセスを理...]]></description><link>https://zenn.dev/heatherjin/articles/c3983b3a22bba3</link><guid isPermaLink="true">https://zenn.dev/heatherjin/articles/c3983b3a22bba3</guid><pubDate>Fri, 27 Dec 2024 01:39:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--geCQt8L7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%255B%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%255D%25E8%25A9%2595%25E4%25BE%25A1%25E3%2581%25A8%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AA%25E3%2583%259C%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUQ0NnhSVTRQalhfb1c3RVMyRzQ5eS1kbXFibHp4azBWTDRGQjlCOHFuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハリボー</dc:creator></item><item><title><![CDATA[AirリザーブのURLパラメータから予約種別を判定し、予約種別ごとの計測をする]]></title><description><![CDATA[
 背景と目的
Airリザーブでの予約フローでは、URLパラメータschdlIdで予約種別を区別しています。このパラメータを利用して、予約種別ごとの計測を実現します。

 実装の課題

URLパラメータは入り口ページにのみ存在
予約フロー全体で予約種別を維持する必要性
複数の分析会社での同時計測への対応


 解決策：JavaScriptによる実装
//airrsv_event_sender.js
(function() {
  function getReservationType() {
    try {
      //URLパラメータ取得
      var urlParams...]]></description><link>https://zenn.dev/sarap422/articles/846966eb63e7a8</link><guid isPermaLink="true">https://zenn.dev/sarap422/articles/846966eb63e7a8</guid><pubDate>Thu, 26 Dec 2024 15:11:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--pEGCuSzO--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Air%25E3%2583%25AA%25E3%2582%25B6%25E3%2583%25BC%25E3%2583%2596%25E3%2581%25AEURL%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%258B%25E3%2582%2589%25E4%25BA%2588%25E7%25B4%2584%25E7%25A8%25AE%25E5%2588%25A5%25E3%2582%2592%25E5%2588%25A4%25E5%25AE%259A%25E3%2581%2597%25E3%2580%2581%25E4%25BA%2588%25E7%25B4%2584%25E7%25A8%25AE%25E5%2588%25A5%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E8%25A8%2588%25E6%25B8%25AC%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:sarap422%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sarap422</dc:creator></item><item><title><![CDATA[CCSのみでメニュー表示切替]]></title><description><![CDATA[
 はじめに
ちゃんと知っておきたい人のHTML/CSS完全入門でHTML／CSSの学習で最も良いとされている実践的な勉強方法は「模写」であると書いてあったので、Writeー書くためのテーマを模写し始めたが、メニューの表示でいきなり詰まってしまいました。HTMLとCSSの本だから、JavaScriptを使わずにできるのかと思い調べたらできました。


 CCSのみで切り替える流れ
① チェックボックスを非表示にして利用
&lt;input type="checkbox" id="menu-toggle" class="menu-button" /&gt;
② Labelのfor属性でクリ...]]></description><link>https://zenn.dev/tryeverything/articles/a0008_css_menubutton</link><guid isPermaLink="true">https://zenn.dev/tryeverything/articles/a0008_css_menubutton</guid><pubDate>Thu, 26 Dec 2024 10:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UszWd-Tb--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:CCS%25E3%2581%25AE%25E3%2581%25BF%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E8%25A1%25A8%25E7%25A4%25BA%25E5%2588%2587%25E6%259B%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%259F%25E3%2582%2593%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2NDc5YTUwMzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>たんさん</dc:creator></item><item><title><![CDATA[【GSAP】GSAP Practice【#１０ GSAP Sample2 SVG Animation2】]]></title><description><![CDATA[
 【#１０ GSAP Sample2 SVG Animation2】
YouTube: https://youtu.be/aoE-vWFvNLE
https://youtu.be/aoE-vWFvNLE
今回はマウスカーソルの動きに合わせたアニメーションの設定を行います。

js/main.js
// use a script tag or an external JS file
document.addEventListener("DOMContentLoaded", (event) =&gt; {
  gsap.registerPlugin(ScrollTrigger);
  ne...]]></description><link>https://zenn.dev/web_life_ch/articles/985faf7c6e4de6</link><guid isPermaLink="true">https://zenn.dev/web_life_ch/articles/985faf7c6e4de6</guid><pubDate>Thu, 26 Dec 2024 04:20:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---T9yzDQJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590GSAP%25E3%2580%2591GSAP%2520Practice%25E3%2580%2590%2523%25EF%25BC%2591%25EF%25BC%2590%2520GSAP%2520Sample2%2520SVG%2520Animation2%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Web%2520Life%2520CH%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUl0YnZtbWNjTWFMM3dyd2x3VE5sVVZjTlhmZHEzZzF2QnJfMUJMSkJrN049czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Web Life CH</dc:creator></item><item><title><![CDATA[そのJSのAPIって何に準拠する？]]></title><description><![CDATA[おそらくXで、Node.jsを知るにはv8エンジンを知る必要がある。みたいなポストをみて、v8エンジンを少し学習しました。
v8エンジンについては引き続き学習が必要ですが、その過程でjsのAPIが何に準拠するかを知り、「へー」となったので備忘録的に記事にします。

 そもそもv8エンジンとは
Googleが提供するjsエンジンのこと。ecmascriptを実装しています。
つまり、このv8エンジンを使えば、ecmascriptの仕様に則りjsを実行することができます。

 ecmascript
JSの標準仕様のことです。jsの様々なAPIの仕様が https://402.ecma-int...]]></description><link>https://zenn.dev/aki_chan_desu/articles/8c52219c0e52d8</link><guid isPermaLink="true">https://zenn.dev/aki_chan_desu/articles/8c52219c0e52d8</guid><pubDate>Wed, 25 Dec 2024 15:11:19 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9dfa6RE2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%259D%25E3%2581%25AEJS%25E3%2581%25AEAPI%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25E3%2581%25AB%25E6%25BA%2596%25E6%258B%25A0%25E3%2581%2599%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%25A2%25E3%2582%25AD%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NTNhNzU0NWUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アキ</dc:creator></item><item><title><![CDATA[モジュールじゃない JavaScript コードを Vitest でテストする]]></title><description><![CDATA[
 お題
ぜんぜんモジュールじゃない、以下のような JavaScript ファイルについて、Vitest でテストを書くことになりました。

app/sum.js
function sum(a, b) {
  return a+ b;
}


 Vitest テストプロジェクトを立ち上げる
まずは以下のようにして、test フォルダに Vitest のテストプロジェクトを新規作成します。
$ mkdir test
$ cd ./test
$ npm init -y
$ npm install --save-dev vitest
$ _
続けて、この test フォルダ内に生成された pa...]]></description><link>https://zenn.dev/j_sakamoto/articles/609bb6b644a129</link><guid isPermaLink="true">https://zenn.dev/j_sakamoto/articles/609bb6b644a129</guid><pubDate>Wed, 25 Dec 2024 13:20:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--x0FwffPz--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2598%25E3%2582%2583%25E3%2581%25AA%25E3%2581%2584%2520JavaScript%2520%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%2520Vitest%2520%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%2540jsakamoto%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dVX243dnJ5ZFlLb2NxdUhSUkIxSGZ4NGpVekNsdGNmZ290R2hfNWc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>@jsakamoto</dc:creator></item><item><title><![CDATA[【javascript】jsonファイルデータを取得して、html画面へ表示する]]></title><description><![CDATA[
 1.jsonファイルを準備する
[
    {
        "municipalityCode": 10006,
        "prefectures": "北海道",
        "prefecturesKana": "ホッカイドウ"
    },
    {
        "municipalityCode": 20001,
        "prefectures": "青森県",
        "prefecturesKana": "アオモリケン"
    },
    {
        "municipalityCode": 30007,
        ...]]></description><link>https://zenn.dev/saru_no_note/articles/76b035b4f6c1e3</link><guid isPermaLink="true">https://zenn.dev/saru_no_note/articles/76b035b4f6c1e3</guid><pubDate>Wed, 25 Dec 2024 13:20:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--yzJ9nJaJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590javascript%25E3%2580%2591json%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581html%25E7%2594%25BB%25E9%259D%25A2%25E3%2581%25B8%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:saru%2540%25E6%2596%2587%25E7%25B3%25BB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA4MWU3ZDhiYTcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>saru@文系コーダー</dc:creator></item><item><title><![CDATA[JavaScriptで解く！『LeetCode Arai 60』#1 Two Sum]]></title><description><![CDATA[このシリーズでは、LeetCode で良問として知られている Arai 60 を、JavaScript を用いて順番に解説していきます。
第1問となる「Two Sum」は、問題設定がシンプルでありながら、アルゴリズム学習の要点を押さえるには最適なトピックです。
ぜひ、この記事を参考にしながら取り組んでみてください！


 第1問「Two Sum」について

 問題へのアクセス
Two Sum 問題ページ（LeetCode）

 問題概要

問題
整数からなる配列 nums とある整数 target が与えられる。
このとき、足し合わせると target になる 2つの数のインデックスを返...]]></description><link>https://zenn.dev/tcool/articles/ad6b517c8afc8d</link><guid isPermaLink="true">https://zenn.dev/tcool/articles/ad6b517c8afc8d</guid><pubDate>Wed, 25 Dec 2024 11:46:10 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--2-E6USnY--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25A7%25E8%25A7%25A3%25E3%2581%258F%25EF%25BC%2581%25E3%2580%258ELeetCode%2520Arai%252060%25E3%2580%258F%25231%2520Two%2520Sum%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:t-cool%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liVmViMFdEdFlWcUtvVDRvYktNeDNTUGZvRTVFOW9rNUV0c21Dc2RvPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>t-cool</dc:creator></item><item><title><![CDATA[Figmaの便利プラグインをChatGPTでつくってみた]]></title><description><![CDATA[!
この記事はポート株式会社 Advent Calendar 2024 その２の25日目の記事です🤶
その1はこちら🎄


 はじめに
就活会議のデザイナーのkonです。
今回は業務効率化のため、サービスに特化したダミーテキストプラグインを作ってみました。
コードが書けないデザイナーが、ChatGPTを使ってFigmaのプラグインを作成した過程をまとめました。

 基本スキル
UIデザイン：★★★★★ できる
html、CSS：★★☆☆☆ ちょっとわかる
JavaScript：☆☆☆☆☆ わからない

 こんな人におすすめ🤶

コードが書けないけどFigmaのプラグインを作りたい
プラグ...]]></description><link>https://zenn.dev/port_inc/articles/9a3e402956309e</link><guid isPermaLink="true">https://zenn.dev/port_inc/articles/9a3e402956309e</guid><pubDate>Wed, 25 Dec 2024 03:31:30 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5PXZcYBG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Figma%25E3%2581%25AE%25E4%25BE%25BF%25E5%2588%25A9%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592ChatGPT%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kon%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcyNzc0NTRhOWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2520%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVhYzVhN2ZmMzUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kon</dc:creator></item><item><title><![CDATA[メールで送られる認証コードを半自動的にクリップボードにコピーする]]></title><description><![CDATA[これは GENDA Advent Calendar 2024 の25日目の記事です。
https://qiita.com/advent-calendar/2024/genda

 はじめに
GENDAが提供する各アプリでは、GENDA IDでログインできるように対応が進んでいます。GENDA IDではセキュリティを高めるために2段階認証を採用しており、ログイン時には登録メールアドレスに届いた認証コードの入力を求められます。
私は今年の11月にリリースしたカラオケBanBan新アプリ開発にFlutterエンジニアとして携わりました。このアプリにもGENDA IDによる認証が採用されています...]]></description><link>https://zenn.dev/oinariman/articles/ed944443114891</link><guid isPermaLink="true">https://zenn.dev/oinariman/articles/ed944443114891</guid><pubDate>Tue, 24 Dec 2024 22:00:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TkpgK6Ta--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A1%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E9%2580%2581%25E3%2582%2589%25E3%2582%258C%25E3%2582%258B%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%258D%258A%25E8%2587%25AA%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ryosuke%2520Mihara%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBhZDZkYWY0ZWIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ryosuke Mihara</dc:creator></item><item><title><![CDATA[ENCA 25日目: 正規表現の Well-known Symbols メソッドをプリミティブに対して実行しない（進行中）]]></title><description><![CDATA[!
この記事は 1人 ECMAScript Normative Changes Advent Calendar 2024 の 25 日目です。


 正規表現の Well-known Symbols メソッド
前回の記事で触れていますが、文字列のメソッドの引数に正規表現を渡した際に Well-known Symbols メソッドが実行されます。6つのメソッドに対応する Well-known Symbols が5つあります。



文字列のメソッド
対応する正規表現の Well-known Symbols




String.prototype.match
Symbol.match


...]]></description><link>https://zenn.dev/pixiv/articles/47ffaf53e7d664</link><guid isPermaLink="true">https://zenn.dev/pixiv/articles/47ffaf53e7d664</guid><pubDate>Tue, 24 Dec 2024 15:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--uR-UE9SX--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ENCA%252025%25E6%2597%25A5%25E7%259B%25AE%253A%2520%25E6%25AD%25A3%25E8%25A6%258F%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%25AE%2520Well-known%2520Symbols%2520%25E3%2583%25A1%25E3%2582%25BD%25E3%2583%2583%25E3%2583%2589%25E3%2582%2592%25E3%2583%2597%25E3%2583%25AA%25E3%2583%259F%25E3%2583%2586%25E3%2582%25A3%25E3%2583%2596%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2597%25E3%2581%25A6%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25AA%25E3%2581%2584%25EF%25BC%2588...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:petamoriken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMDc3ZWRhZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:pixiv%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODlhMzQ2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>petamoriken</dc:creator></item><item><title><![CDATA[ENCA 24日目: IsRegExp の挙動変更（リジェクト）]]></title><description><![CDATA[!
この記事は 1人 ECMAScript Normative Changes Advent Calendar 2024 の 24 日目です。


 IsRegExp とは
ECMAScript の仕様に IsRegExp が定義されています。これは文字列のメソッド内で、渡された引数が正規表現オブジェクトかどうかを判定する際に用いられます。使われている箇所について見てみると以下の2つのパターンに分類できます。

引数として文字列のみを許容するため、正規表現オブジェクトが渡ってきたら TypeError を投げたい場合

String.prototype.includes
String.p...]]></description><link>https://zenn.dev/pixiv/articles/803b5650d3b1a1</link><guid isPermaLink="true">https://zenn.dev/pixiv/articles/803b5650d3b1a1</guid><pubDate>Tue, 24 Dec 2024 14:02:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--_3D5gUSk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ENCA%252024%25E6%2597%25A5%25E7%259B%25AE%253A%2520IsRegExp%2520%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E5%25A4%2589%25E6%259B%25B4%25EF%25BC%2588%25E3%2583%25AA%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:petamoriken%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZhMDc3ZWRhZTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:pixiv%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzMzODlhMzQ2ZjQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>petamoriken</dc:creator></item></channel></rss>