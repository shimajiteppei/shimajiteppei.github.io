<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Thu, 11 Sep 2025 00:46:45 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[AIによる大量コードのマイグレーションスクリプト作成の試行錯誤と知見]]></title><description><![CDATA[!
この記事は、CYBOZU SUMMER BLOG FES '25の記事です。


 大量コードのマイグレーション with AI
「アーキテクチャの刷新のため、1000 ファイルほどを書き換えてください」
こんな要件が明日あなたの手元にも飛び込んでくるかもしれません。
私には先日飛び込んできました。
でも今の時代、我々には AI があります。
AI に全部やってもらいましょう！
いやー、便利な時代でよかったよかった！

 本当にうまくいく？
ということで、意気揚々と AI ツールを使って大量ファイルの書き換えにトライしてみると、実際にはなかなか厳しい点が見えてきます。

 実行の遅さ...]]></description><link>https://zenn.dev/cybozu_frontend/articles/ai-migration-script-muzui</link><guid isPermaLink="true">https://zenn.dev/cybozu_frontend/articles/ai-migration-script-muzui</guid><pubDate>Wed, 10 Sep 2025 15:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bjaBRfYt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:AI%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25A4%25A7%25E9%2587%258F%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E3%2581%25AE%25E8%25A9%25A6%25E8%25A1%258C%25E9%258C%25AF%25E8%25AA%25A4%25E3%2581%25A8%25E7%259F%25A5%25E8%25A6%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:mugi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VjOTA1OThlNjEuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%259C%25E3%2582%25A6%25E3%2582%25BA%2520%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lZS0x0S2tsVUwtM01qTkJ2YU1DWkZxdmFGTWtMVFl2T2pJT29SLVE9czI1MC1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>mugi</dc:creator></item><item><title><![CDATA[DiscordBotでEmbedを送信しよう！]]></title><description><![CDATA[DiscordBotでEmbedを作成し特別なメッセージを送信する方法]]></description><link>https://zenn.dev/hinamikan/books/6dbbb9944630bb</link><guid isPermaLink="true">https://zenn.dev/hinamikan/books/6dbbb9944630bb</guid><pubDate>Wed, 10 Sep 2025 12:13:01 GMT</pubDate><dc:creator>ひな</dc:creator></item><item><title><![CDATA[JS 画像のBASE64変換と変換画像の品質管理について]]></title><description><![CDATA[
 目的
画像のBASE64の変換とサイズの考え方を理解する。
最適な画像圧縮をするための考え方を理解する。

 背景
electronで、リッチテキストエディタを製作している。このリッチテキストエディタは、画像の設定も可能です。実際に設定してみたところ、10枚で20MBにもなることが分かった。
ＪＳＯＮですべてを管理するリッチテキストエディタにおいて、ＪＳＯＮの中に20ＭＢの画像のデータが入っていることは、読み込みの遅延につながり問題である。
そのため、画像を圧縮することにした。

 圧縮先の画像拡張子の選定
画像の種類は、jpeg,png,webp等あるが、今回は、webpにした。
...]]></description><link>https://zenn.dev/kemii/articles/8f6009f335f35b</link><guid isPermaLink="true">https://zenn.dev/kemii/articles/8f6009f335f35b</guid><pubDate>Wed, 10 Sep 2025 10:15:55 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--HoE6Y4ya--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JS%2520%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AEBASE64%25E5%25A4%2589%25E6%258F%259B%25E3%2581%25A8%25E5%25A4%2589%25E6%258F%259B%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E5%2593%2581%25E8%25B3%25AA%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kemii%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2E5ZGYyMjM5ZmIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kemii</dc:creator></item><item><title><![CDATA[HTTP通信で使うリクエストボディ形式チートシート（FastAPI × JS編）]]></title><description><![CDATA[
 はじめに
Web 開発で API を作るとき、「HTTP リクエストの body にどんな形式でデータを載せるか？」を理解することはとても重要です。
この記事では FastAPI（バックエンド） と JavaScript fetch（フロントエンド） の組み合わせで、よく使うボディ形式をチートシートとしてまとめます。


 ✅ 1. JSON（application/json）
最も一般的。REST API では基本これ。

 フロント（JS）
const data = { username: "taro", age: 20 };

fetch("http://localhost:8...]]></description><link>https://zenn.dev/nunu_nai/articles/ab58661668e759</link><guid isPermaLink="true">https://zenn.dev/nunu_nai/articles/ab58661668e759</guid><pubDate>Wed, 10 Sep 2025 10:05:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--OIb8V_0---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:HTTP%25E9%2580%259A%25E4%25BF%25A1%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2583%25AA%25E3%2582%25AF%25E3%2582%25A8%25E3%2582%25B9%25E3%2583%2588%25E3%2583%259C%25E3%2583%2587%25E3%2582%25A3%25E5%25BD%25A2%25E5%25BC%258F%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%25EF%25BC%2588FastAPI%2520%25C3%2597%2520JS%25E7%25B7%25A8%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25AC%25E3%2581%25AC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2UyNTU3YmJlMzcuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ぬぬ</dc:creator></item><item><title><![CDATA[勝手に「JavaScript三十六景 裏富士」]]></title><description><![CDATA[https://zenn.dev/kenjimorita/articles/3e18a07dda529b
https://zenn.dev/link/comments/a54dfa0d6f01c0

いろいろコメントがついていますが、記事があってはじめていろいろ議論できているので、遠慮なく記事投稿しちゃっていいと思います。(中略)
ネット上の資料は質がまちまちですので、いろいろな情報を比較して、新しめのいいコードを参考にしてみてください。

たしかに〜と思ったので私の知ってることを投げようと思ったのですが、36個も思いつかなかったので裏富士ってことで許してください
マサカリ歓迎

 1....]]></description><link>https://zenn.dev/aya_koto/articles/33c9a2baf75d8a</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/33c9a2baf75d8a</guid><pubDate>Wed, 10 Sep 2025 06:15:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s---_BfddbV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E5%258B%259D%25E6%2589%258B%25E3%2581%25AB%25E3%2580%258CJavaScript%25E4%25B8%2589%25E5%258D%2581%25E5%2585%25AD%25E6%2599%25AF%2520%25E8%25A3%258F%25E5%25AF%258C%25E5%25A3%25AB%25E3%2580%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[JavaScriptのコールバック関数とは？]]></title><description><![CDATA[JavaScriptの「コールバック関数」とは、ある関数の引数として渡される関数のことを指します。コールバック関数は、非同期処理やイベント処理、配列操作など様々な場面で活用されます。
何言っているかわけわからないと思うので実際のコードを見ながら解説していきます。

 コールバック関数の基本
コールバック関数は、他の関数に渡されて、その関数の中で実行されます。簡単な例を見てみましょう。
function greeting(name, callback) {
    console.log("Hello, " + name + "!");
    callback();
}

functio...]]></description><link>https://zenn.dev/monmontraining/articles/29715728c76c30</link><guid isPermaLink="true">https://zenn.dev/monmontraining/articles/29715728c76c30</guid><pubDate>Wed, 10 Sep 2025 05:47:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--Yc1hneFn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:JavaScript%25E3%2581%25AE%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%25AB%25E3%2583%2590%25E3%2583%2583%25E3%2582%25AF%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%25AF%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2582%2582%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ZiNDAwYTJhNjAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>もん</dc:creator></item><item><title><![CDATA[Vue3のリストレンダリング]]></title><description><![CDATA[
 Vue 3のComposition APIでリストレンダリングを行うには、主にv-forディレクティブを使い、リアクティブなデータソース（refやreactiveで作成）をループ処理します。

 基本的なリストレンダリング
基本的なリストレンダリングは、配列データをv-forで繰り返し描画します。
例：文字列の配列を表示する
&lt;script setup&gt;
import { ref } from 'vue';

// リアクティブな配列を定義
const fruits = ref(['🍎 りんご', '🍌 バナナ', '🍊 みかん']);
&lt;/script&gt;

...]]></description><link>https://zenn.dev/shunsuke_stack/articles/a1c59a460bf1e5</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/a1c59a460bf1e5</guid><pubDate>Wed, 10 Sep 2025 01:02:14 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--LlsQttEm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AE%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[hasOwnProperty(memo)]]></title><description><![CDATA[
 hasOwnPropertyとは？
オブジェクト自信が引数に指定されたプロパティを持っているか確かめることができる。BOOLEANが返ってくるので条件式にそのまま入れてエラーを飛ばそう

 使用例

example.js
const CONTRIBUTION_WEIGHTS = {
  review_count: 2,
  picture_count: 5,
  description_edit_count: 8,
  onsen_add_count: 10
};

async function updateUserContribution(client, userId, type)...]]></description><link>https://zenn.dev/tqw000402/articles/396e14ad92676e</link><guid isPermaLink="true">https://zenn.dev/tqw000402/articles/396e14ad92676e</guid><pubDate>Tue, 09 Sep 2025 07:23:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--aJ0E3R6W--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_76:hasOwnProperty%2528memo%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:tqqqqw%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhkOTFhYmJmODEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>tqqqqw</dc:creator></item><item><title><![CDATA[ESLint + Prettier から Biome への移行（Powered by Rust）]]></title><description><![CDATA[
 はじめに
フロントエンド開発において、コードの品質管理は ESLint と Prettier の組み合わせが長らく標準的なソリューションでした。しかし、近年注目を集めているのが Biome です。Rust で書かれたこのツールチェーンは、リンターとフォーマッターを統合し、従来のツールを大幅に上回る性能を実現しています。
本記事では、実際に ESLint + Prettier から Biome への移行を行った経験をもとに、移行の動機、Rustによる性能向上、実際のセットアップ方法について解説します。

 Biome とは
Biome は JavaScript、TypeScript、J...]]></description><link>https://zenn.dev/duckdevv/articles/77133b4dcfd1e0</link><guid isPermaLink="true">https://zenn.dev/duckdevv/articles/77133b4dcfd1e0</guid><pubDate>Tue, 09 Sep 2025 02:15:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--xeosetNC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ESLint%2520%252B%2520Prettier%2520%25E3%2581%258B%25E3%2582%2589%2520Biome%2520%25E3%2581%25B8%25E3%2581%25AE%25E7%25A7%25BB%25E8%25A1%258C%25EF%25BC%2588Powered%2520by%2520Rust%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duckdevv%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3MTNlN2IxZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>duckdevv</dc:creator></item><item><title><![CDATA[Docker 開発での node_modules マウント、Anonymous Volume という選択肢]]></title><description><![CDATA[Docker Compose（ローカル開発環境）を使って JavaScript / TypeScript プロジェクトを動かすとき、node_modules はどうマウントしているでしょうか？
私は以前は「ローカルの node_modules をコンテナに直接マウントする」方式（Direct Mount Override）を使っていましたが、最終的には Anonymous Volume（匿名ボリューム） に落ち着きました。
この記事では、両者の違いと Anonymous Volume 戦略のメリットを整理します。


 直接マウントする方法とそのメリット
以下のようにローカルの node...]]></description><link>https://zenn.dev/duckdevv/articles/1f680e4debbf2d</link><guid isPermaLink="true">https://zenn.dev/duckdevv/articles/1f680e4debbf2d</guid><pubDate>Tue, 09 Sep 2025 01:11:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AAyfS8Lo--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Docker%2520%25E9%2596%258B%25E7%2599%25BA%25E3%2581%25A7%25E3%2581%25AE%2520node_modules%2520%25E3%2583%259E%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2588%25E3%2580%2581Anonymous%2520Volume%2520%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E9%2581%25B8%25E6%258A%259E%25E8%2582%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:duckdevv%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk3MTNlN2IxZTkuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>duckdevv</dc:creator></item><item><title><![CDATA[Jest mockResolvedValueの型エラーを1分で解決]]></title><description><![CDATA[
 概要
個人開発中に該当のエラーに遭遇し、AIに尋ねたのですが回りくどい解決策を提案されてしまい、「初めから公式を参照した方が早かったな」という体験をしたため、記事として投稿することにしました。
https://jestjs.io/docs/mock-function-api#mockfnmockresolvedvaluevalue

 問題
Jest + TypeScriptの組み合わせでmockResolvedValueを使うときに、下記のような型エラーに遭遇することがあります：
// ❌ 型エラー
const mockFn = jest.fn().mockResolvedValu...]]></description><link>https://zenn.dev/hasuto/articles/jest-typescript-mockresolvedvalue-fix</link><guid isPermaLink="true">https://zenn.dev/hasuto/articles/jest-typescript-mockresolvedvalue-fix</guid><pubDate>Mon, 08 Sep 2025 22:32:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e7LGshf2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Jest%2520mockResolvedValue%25E3%2581%25AE%25E5%259E%258B%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%25921%25E5%2588%2586%25E3%2581%25A7%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:hasu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y2ODRhYzg3MTYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>hasu</dc:creator></item><item><title><![CDATA[日本語文字数カウンターの技術分析：kantan.tools を例に]]></title><description><![CDATA[
 はじめに
日本語テキストの文字数カウントは、一見シンプルに見える機能ですが、実は複数の書字体系（ひらがな、カタカナ、漢字）や Unicode の複雑な仕様を適切に処理する必要がある、技術的に興味深い分野です。
今回は、kantan.tools の文字数カウント機能（mojisuu）と、類似ツールである 文字数-JP の技術的実装について分析し、日本語テキスト処理における課題と解決方法を探ります。

 日本語テキスト処理の技術的課題

 1. 複数書字体系の混在
現代日本語の特徴的な課題は、一つの文章内に複数の書字体系が混在することです：


ひらがな: 和語や文法要素に使用（46基本...]]></description><link>https://zenn.dev/suowu/articles/afed314250a810</link><guid isPermaLink="true">https://zenn.dev/suowu/articles/afed314250a810</guid><pubDate>Mon, 08 Sep 2025 17:26:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bHEJmXKm--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E6%2596%2587%25E5%25AD%2597%25E6%2595%25B0%25E3%2582%25AB%25E3%2582%25A6%25E3%2583%25B3%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E5%2588%2586%25E6%259E%2590%25EF%25BC%259Akantan.tools%2520%25E3%2582%2592%25E4%25BE%258B%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%259D%258E%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSU9OZVBWTHlZZkRzeVpzRU9pcGJISl9wb2RtMGhDT21HaHl0UWlpYXRvT3BMZFVBPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>李</dc:creator></item><item><title><![CDATA[ArrayBufferって何なんだろう。]]></title><description><![CDATA[
 経緯
クライアントからbase64形式で送られてきた情報をサーバーで復元し保存するという実装をLLMに教えてもらった。
const fileBuffer = Buffer.from(base64Data, "base64");
const uint8Array = new Uint8Array(fileBuffer);
return new File([uint8Array], name, { type: contentType });
Buffer、ArrayBuffer、Base64、uint8Arrayなど見覚えはあるけれど、どんなもの達なのかしっかりと理解できていないので調べ...]]></description><link>https://zenn.dev/dotlog_techblog/articles/6e636824e7dd16</link><guid isPermaLink="true">https://zenn.dev/dotlog_techblog/articles/6e636824e7dd16</guid><pubDate>Mon, 08 Sep 2025 14:47:12 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6syliQa6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ArrayBuffer%25E3%2581%25A3%25E3%2581%25A6%25E4%25BD%2595%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25E3%2582%258D%25E3%2581%2586%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:sinano%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2NiYjk5ODg5MDAuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%25E3%2583%2589%25E3%2583%2583%25E3%2583%2588%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ozaUYxV0NPZTlLakIyeHNpQVBPU0EtWXB1UVBVYzV2d2pJeUZPSVE9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>sinano</dc:creator></item><item><title><![CDATA[『モダンJavaScriptの基本から始める React実践の教科書』で、最新環境だと5章序盤が動かないので、動くように読み替えたことメモ]]></title><description><![CDATA[
 読み替えたこと

131ページ～：インストールするパッケージの変更

- ▼ node-sass のインストール（npm）
- nmp install node-sass
+ ▼ node-sass のインストール（npm）
+ npm install sass
※ node-sassが開発終了しており、最新のreact環境だと怒られるっぽいです

 備考

後半の Tailwind CSS でも、そのままだと動かないのですが、こちらはAmazonレビューの方で。

]]></description><link>https://zenn.dev/ihok/articles/2d50317855745a</link><guid isPermaLink="true">https://zenn.dev/ihok/articles/2d50317855745a</guid><pubDate>Mon, 08 Sep 2025 07:43:03 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--bee2vxTF--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258E%25E3%2583%25A2%25E3%2583%2580%25E3%2583%25B3JavaScript%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2582%2581%25E3%2582%258B%2520React%25E5%25AE%259F%25E8%25B7%25B5%25E3%2581%25AE%25E6%2595%2599%25E7%25A7%2591%25E6%259B%25B8%25E3%2580%258F%25E3%2581%25A7%25E3%2580%2581%25E6%259C%2580%25E6%2596%25B0%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A0%25E3%2581%25A85%25E7%25AB%25A0%25E5%25BA%258F%25E7%259B%25A4%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E3%2580%2581%25E5%258B%2595%25E3%2581%258F...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ihok%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKejhESUZGcEliSGtLNnV4SnBJQnl1eGtCQkwwWU5zamE5VGx6bzk9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ihok</dc:creator></item><item><title><![CDATA[React 基礎基本と仕組みについて]]></title><description><![CDATA[Reactの基礎を整理した本]]></description><link>https://zenn.dev/watari0408/books/react-guide-book-2025</link><guid isPermaLink="true">https://zenn.dev/watari0408/books/react-guide-book-2025</guid><pubDate>Mon, 08 Sep 2025 06:49:31 GMT</pubDate><dc:creator>watari</dc:creator></item><item><title><![CDATA[Vue3の条件付きレンダリングについて調べてみた]]></title><description><![CDATA[Vue3の条件付きレンダリングは、特定の条件に基づいてDOM（Webページの構造）の一部を描画したり、しなかったりする機能です。これにより、動的なユーザーインターフェースを効率的に作成できます。主に v-if と v-show という2つのディレクティブ（Vue独自の属性）を使います。


 v-if: 条件が真のときだけ描画
v-if ディレクティブは、指定された条件式が true の場合にのみ、その要素とそれに含まれるコンテンツをDOMに描画します。条件が false の場合は、DOMから要素が完全に取り除かれます（HTML内にコメントとして残ることもあります）。
JavaScrip...]]></description><link>https://zenn.dev/shunsuke_stack/articles/1548f75c172724</link><guid isPermaLink="true">https://zenn.dev/shunsuke_stack/articles/1548f75c172724</guid><pubDate>Mon, 08 Sep 2025 01:06:28 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6u31N0vp--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Vue3%25E3%2581%25AE%25E6%259D%25A1%25E4%25BB%25B6%25E4%25BB%2598%25E3%2581%258D%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Nakajima.js%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFhZmNlYzMzOWYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Nakajima.js</dc:creator></item><item><title><![CDATA[データ型とリテラル]]></title><description><![CDATA[
 データ型とリテラルについて
!
プログラミングでは、扱う情報にはいろいろな「種類」があります。例えば、数字、文字、YES/NOの真偽、などなど。これらの情報の種類のことを「データ型」と呼びます。
そして、「リテラル」というのは、プログラムの中に「直接、値を書き込むときの書き方」のことです。
データ型は「何を表現したいか」（例：数字、文字、YES/NO）
リテラルは「それをどう表現するか」（例：123、"abc"、true）


 💡データ型

データ型はプリミティブ型とオブジェクトからなる

!
データ型とは、プログラムで扱うデータの種類や性質を定義するものです。JavaScript...]]></description><link>https://zenn.dev/y_mi/articles/bdb685a3274651</link><guid isPermaLink="true">https://zenn.dev/y_mi/articles/bdb685a3274651</guid><pubDate>Mon, 08 Sep 2025 00:37:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--iYpLqK-l--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259E%258B%25E3%2581%25A8%25E3%2583%25AA%25E3%2583%2586%25E3%2583%25A9%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2583%25BC%25E3%2580%2582%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちー。</dc:creator></item><item><title><![CDATA[Discord botコマンド登録の個人的チートシート]]></title><description><![CDATA[友人と2人で創作をやっているDiscordサーバに入れる用のbotを開発しました。
Vide Codingで終われるはずがbotのコマンド登録でつまづき、知見が得られたので自分用にまとめておきます。
ちなみに作ったbotはこちら:
https://github.com/t-esserac-t/meetingSetBot

 前提

 対象

Node.jsでDiscord botを開発する人

JavaScript初心者だけどやっていく人




 開発環境
プラットフォーム: Cloudflare Workers + Durable Objects
開発言語: TypeScript
W...]]></description><link>https://zenn.dev/tesseract/articles/fc8a1cf64dd7e2</link><guid isPermaLink="true">https://zenn.dev/tesseract/articles/fc8a1cf64dd7e2</guid><pubDate>Sun, 07 Sep 2025 06:32:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--nKgJ62nG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Discord%2520bot%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%25AE%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2583%2581%25E3%2583%25BC%25E3%2583%2588%25E3%2582%25B7%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:HANAE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPS0Z0VGxtQlJEcGdZXzgzel9BdXZ5ajFhZ0ZuczdZajRWck8yUmE4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>HANAE</dc:creator></item><item><title><![CDATA[JavaScriptでABC422(A-C)]]></title><description><![CDATA[https://atcoder.jp/contests/abc422

 A - Stage Clear
https://atcoder.jp/contests/abc422/tasks/abc422_a
${n}-8なら${n+1}-1、そうでなければ${n}-${x+1}
やるだけではある
https://atcoder.jp/contests/abc422/submissions/69098053
2分16秒 AC!

 B - Looped Rope
https://atcoder.jp/contests/abc422/tasks/abc422_b
Bは愚直
範囲外を見ようとした...]]></description><link>https://zenn.dev/aya_koto/articles/5d8044a3aadcf4</link><guid isPermaLink="true">https://zenn.dev/aya_koto/articles/5d8044a3aadcf4</guid><pubDate>Sun, 07 Sep 2025 06:09:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--kyeNXJ9T--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_72:JavaScript%25E3%2581%25A7ABC422%2528A-C%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ayasaka-Koto%2520%252F%2520Aya...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2VkNTRlMDBjYTIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ayasaka-Koto / AyagawaP</dc:creator></item><item><title><![CDATA[アクセシビリティ実装レシピ20 — Webサイトを美味しくする作り方]]></title><description><![CDATA[
 はじめに
オライリーから出版されている『Web Accessibility Cookbook』を読みました。
https://accessibility-cookbook.com/
この本は、ナビゲーション、フォーム、テーブル、ダイアログなどといった Webでよく使うコンポーネントをアクセシブルに実装するための「レシピ集」 です。
単に「こう作る」だけでなく「なぜそれが必要なのか」まで解説されており、問題 → 解決策 → 実装例 → 議論という流れで整理されているのが特徴です。
読んでいて「これはフロントエンド実装で押さえておきたい」と感じた項目を、20個に絞ってまとめました。
!
...]]></description><link>https://zenn.dev/kalubi/articles/6dda7001f8fdcf</link><guid isPermaLink="true">https://zenn.dev/kalubi/articles/6dda7001f8fdcf</guid><pubDate>Sun, 07 Sep 2025 00:14:49 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PZu7nMqV--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B7%25E3%2583%2593%25E3%2583%25AA%25E3%2583%2586%25E3%2582%25A3%25E5%25AE%259F%25E8%25A3%2585%25E3%2583%25AC%25E3%2582%25B7%25E3%2583%259420%2520%25E2%2580%2594%2520Web%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E7%25BE%258E%25E5%2591%25B3%25E3%2581%2597%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E4%25B8%258A%25E3%2581%258B%25E3%2582%258B%25E3%2581%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc2YmMxZjZlZGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>上かるび</dc:creator></item></channel></rss>