<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「JavaScript」のフィード]]></title><description><![CDATA[Zennのトピック「JavaScript」のRSSフィードです]]></description><link>https://zenn.dev/topics/javascript</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/64acd76870.png</url><title>Zennの「JavaScript」のフィード</title><link>https://zenn.dev/topics/javascript</link></image><generator>zenn.dev</generator><lastBuildDate>Wed, 08 Jan 2025 06:30:43 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/javascript/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[Cloudflare Workersプロキシ Request/Responseの複製時のエラー]]></title><description><![CDATA[
 概要
Cloudflare Workersをリバースプロキシとして使用するとき、度々RequestとResponseの複製(clone、reconstruct)に悩まされます。
この記事ではそれらに関連して発生するエラーのパターンについて記載しています。
エラーメッセージなどでたどり着いた方の助けになれば幸いです。
Cloudflare Workersのプロキシについては以下の記事や公式Exampleが参考になります。
https://zenn.dev/yusukebe/articles/647aa9ba8c1550

 基本となるコード
Cloudflare WorkersをRou...]]></description><link>https://zenn.dev/aidemy/articles/d082d32c222bb2</link><guid isPermaLink="true">https://zenn.dev/aidemy/articles/d082d32c222bb2</guid><pubDate>Wed, 08 Jan 2025 06:09:31 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--jLASRDH7--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Cloudflare%2520Workers%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%2520Request%252FResponse%25E3%2581%25AE%25E8%25A4%2587%25E8%25A3%25BD%25E6%2599%2582%25E3%2581%25AE%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:satoshun00%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzNhNmVhZTQ3ZDkuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Aidemy%2520Tech%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFjSFR0Y3oyUWpxNG9uVFZEX1poVjMyb3p4VDRDTGdEbF9LVWR5Tl9XcGxYMEN1QWJFPXM5Ni1j%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>satoshun00</dc:creator></item><item><title><![CDATA[ChatGPT API に文章のタイトルを考えてもらい、それを一覧表示する]]></title><description><![CDATA[ChatGPTを使って、文章のタイトルを考えてもらうシステム
ChatGPTに文章のタイトルをいくつか考えてもらい、そのタイトルを一覧で表示する。
手順

考えてもらうための文章を準備する
マークダウン形式でお願いする
返ってきたデータを加工する

まず、基礎となるChatGPT　APIとやりとりする大まかな方法をaxiosを使ってご紹介します・
ChatGPT APIは、modelとmessageとOpenAIで発行したKeyでやりとりすることができます。
以下の通りで出来ます。
const MODEL = "gpt-3.5-turbo"
const API_KEY = "" // O...]]></description><link>https://zenn.dev/1000_x_t30/articles/13874887b02dd8</link><guid isPermaLink="true">https://zenn.dev/1000_x_t30/articles/13874887b02dd8</guid><pubDate>Wed, 08 Jan 2025 04:40:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--EV0pUtHP--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ChatGPT%2520API%2520%25E3%2581%25AB%25E6%2596%2587%25E7%25AB%25A0%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%2588%25E3%2583%25AB%25E3%2582%2592%25E8%2580%2583%25E3%2581%2588%25E3%2581%25A6%25E3%2582%2582%25E3%2582%2589%25E3%2581%2584%25E3%2580%2581%25E3%2581%259D%25E3%2582%258C%25E3%2582%2592%25E4%25B8%2580%25E8%25A6%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:taka%2540ngtmtkyk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFkNjk2NzYzNzguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>taka@ngtmtkyk</dc:creator></item><item><title><![CDATA[Sharp.js: 最強のNode.js画像処理フレームワーク]]></title><description><![CDATA[

 Node.js環境におけるSharpモジュールを用いた画像の効率的な処理方法
この記事では、Node.js環境においてSharpモジュールを用いて画像を効率的に処理する方法を紹介します。実際のコード例を通じて、大きな画像ファイルをネットワーク送信に適したJPEG、PNG、WebP、AVIF形式に変換する方法を示します。同時に、libvipsライブラリの強力な機能を利用して、画像処理の効率を高める方法も紹介します。

 1. Sharpモジュールのはじめに

 1.1 Sharpモジュールの紹介
視覚情報爆発の今日の時代において、画像処理技術は極めて重要になっています。Node.js...]]></description><link>https://zenn.dev/leapcell/articles/7270d133a71634</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/7270d133a71634</guid><pubDate>Wed, 08 Jan 2025 04:32:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--qnoiD5IJ--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Sharp.js%253A%2520%25E6%259C%2580%25E5%25BC%25B7%25E3%2581%25AENode.js%25E7%2594%25BB%25E5%2583%258F%25E5%2587%25A6%25E7%2590%2586%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[input が含まれないcustom element にすれば大体解決した話]]></title><description><![CDATA[ということで 前回の話 の &lt;toggle-checkbox&gt;&lt;/toggle-checkbox&gt; の内部で使っていた input を排除した toggle-checkbox が完成しました。
ポイントとしては以下の通り

内部 checked は this.#checked に一元化
validation が必要かは ElementInternals.willValidate でチェック
validate で focus したい場合は 子として 何らかの要素が必要（自身ではダメ？
disabled の対応は別途実装必要

例: tabindex とか


spa...]]></description><link>https://zenn.dev/juners/articles/dc1d4b881879c3</link><guid isPermaLink="true">https://zenn.dev/juners/articles/dc1d4b881879c3</guid><pubDate>Wed, 08 Jan 2025 03:32:13 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CHWwhLK4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:input%2520%25E3%2581%258C%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584custom%2520element%2520%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258C%25E3%2581%25B0%25E5%25A4%25A7%25E4%25BD%2593%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:juner%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pJLTZTZnZQaDFwb0M5dmMxYUpVeTFoelB0R1g1RXRmUHRpQzF4QWR3PXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>juner</dc:creator></item><item><title><![CDATA[Reactで、Featuresにスタイルを持たないようにしてみた]]></title><description><![CDATA[
 前提

bulletproof-react を基準にしていること
tanstack-router を使用していること
react-hook-form と zod を使用していること
shadcn(UI ライブラリ)を使用していること
筆者自身に技術力を期待しないこと


 モチベーション
いつも悩んでいたのが、pages と features 両方でレイアウト（以下スタイル）を適応していた。features は、form タグの中身のレイアウトも適応させる形にしていた。
2024 年 9 月あたりで、SOLID 原則について改めて触れる機会があり、
ふと、「単一責任を考えるのであれば...]]></description><link>https://zenn.dev/nekomals/articles/b18f07095d5b86</link><guid isPermaLink="true">https://zenn.dev/nekomals/articles/b18f07095d5b86</guid><pubDate>Wed, 08 Jan 2025 02:05:25 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AUBgIeq4--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:React%25E3%2581%25A7%25E3%2580%2581Features%25E3%2581%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E6%258C%2581%25E3%2581%259F%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2586%25E3%2582%2593%25E3%2582%2584%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jS2tLcEsxSENsbUlvUWRaWkI3VXVmeGJkb0tTLWIyQ1VSWDVqYWxSbE9LeDJFQ3JVT3Yzdz1zOTYtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>うんや</dc:creator></item><item><title><![CDATA[ES6で変わったリストの巡回とイテラブル/イテレーターのプロトコル]]></title><description><![CDATA[この記事では、JavaScript ES6で導入された新しいリスト巡回方式と、それを支えるイテラブル/イテレーターのプロトコルについて解説します。

 1. 従来の方式と変化したES6でのリスト巡回

 従来のES5におけるリスト巡回
ES5では、リストを巡回するために以下のように記述していました：
const list = [1, 2, 3];

for (var i = 0; i &lt; list.length; i++) {
    console.log(list[i]);
}


list.lengthというプロパティを利用して、繰り返し条件を設定します。
インデックスiを使...]]></description><link>https://zenn.dev/heatherjin/articles/a98dc2c972abcb</link><guid isPermaLink="true">https://zenn.dev/heatherjin/articles/a98dc2c972abcb</guid><pubDate>Wed, 08 Jan 2025 01:44:24 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--y0Z6YR3d--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:ES6%25E3%2581%25A7%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E5%25B7%25A1%25E5%259B%259E%25E3%2581%25A8%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25A9%25E3%2583%2596%25E3%2583%25AB%252F%25E3%2582%25A4%25E3%2583%2586%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2588%25E3%2582%25B3%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2583%258F%25E3%2583%25AA%25E3%2583%259C%25E3%2583%25BC%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSUQ0NnhSVTRQalhfb1c3RVMyRzQ5eS1kbXFibHp4azBWTDRGQjlCOHFuPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ハリボー</dc:creator></item><item><title><![CDATA[【JavaScript】Object.groupByを使って日毎の配列を作成する]]></title><description><![CDATA[こんにちは！
スペースマーケットでフロントエンドエンジニアをしているwharaguchiです。
今回は、先日あげた以下の記事に Object.groupByについてのコメントをいただいたため、そちらを試した記事になります。
https://zenn.dev/spacemarket/articles/cec64a21e2545a

 Object.groupBy とは
Object.groupByはES2024で新たに追加された静的メソッドで、特定のキーや条件に基づいてグループ化をするためのメソッドです。
先日の記事では、日をキーとした日毎の配列を作成したので確かにObject.group...]]></description><link>https://zenn.dev/spacemarket/articles/fbcb31d70aa17e</link><guid isPermaLink="true">https://zenn.dev/spacemarket/articles/fbcb31d70aa17e</guid><pubDate>Wed, 08 Jan 2025 01:12:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GmW7CVij--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590JavaScript%25E3%2580%2591Object.groupBy%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2597%25A5%25E6%25AF%258E%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:wharaguchi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc1NTA1NzM5OGYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%259E%25E3%2583%25BC%25E3%2582%25B1%25E3%2583%2583%25E3%2583%2588%2520Engineer%2520Blog%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzFjMmY1NGY2MjEuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wharaguchi</dc:creator></item><item><title><![CDATA[Recoil 終了のお知らせ]]></title><description><![CDATA[
 Recoil 終了のお知らせ
Recoilが2025年始にarchivedされたようです。
冗長的な書き方をせずにglabal stateを扱えるライブラリだったので、度々使用していましたが、何かしらの影響で開発停止となりました。

This repository has been archived by the owner on Jan 2, 2025. It is now read-only.

https://github.com/facebookexperimental/Recoil

 理由を調べてみた
元Metaのメンテナーの方が、以下のようなポストをしていました。
ht...]]></description><link>https://zenn.dev/mk668a/articles/88685dfa915474</link><guid isPermaLink="true">https://zenn.dev/mk668a/articles/88685dfa915474</guid><pubDate>Tue, 07 Jan 2025 16:33:06 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--d_ix3Oli--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Recoil%2520%25E7%25B5%2582%25E4%25BA%2586%25E3%2581%25AE%25E3%2581%258A%25E7%259F%25A5%25E3%2582%2589%25E3%2581%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:m%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNGY0NjgzMGIuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>m</dc:creator></item><item><title><![CDATA[Node.jsのfetchでプロキシを利用する]]></title><description><![CDATA[Node.jsのv18からfetchが使えますが、このfetchは環境変数のHTTPS_PROXYやHTTP_PROXY、NO_PROXYなどに応じてプロキシを使ってくれるといったようなことはありません。
fetchを使っている箇所を適宜プロキシを使う形に書き換えるのは面倒なのと、利用しているライブラリ内でfetchを使っていると変更するのが困難な場合も発生しそうです。(実際発生してこれを書いています)

 Node.jsのfetchで環境変数に応じてプロキシを利用する方法
一律設定する方法が無いか調べたところ、Node.jsのfetchの実装として利用されているundiciのEnvHt...]]></description><link>https://zenn.dev/onozaty/articles/node-fetch-proxy</link><guid isPermaLink="true">https://zenn.dev/onozaty/articles/node-fetch-proxy</guid><pubDate>Tue, 07 Jan 2025 15:08:15 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--9WxfBHl6--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Node.js%25E3%2581%25AEfetch%25E3%2581%25A7%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25AD%25E3%2582%25B7%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:onozaty%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA0NjRiMDVlZmYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>onozaty</dc:creator></item><item><title><![CDATA[react-queryをリコーディング | Reactでの非同期データ取得＆キャッシングのための軽量フックの紹介]]></title><description><![CDATA[皆さん、こんにちは！
私はReact Queryの基本的な機能（フェッチ、キャッシング、リトライなど）を模倣しつつ、よりコンパクトでカスタマイズしやすいパッケージとして軽量なReactフックに取り組んでいました。以下に、その内部動作の簡単な概要を、関連するコードセクションを参照しながら説明します。完全なコードを見たい場合は、リポジトリをご覧ください：
GitHubのフルソースコード。
このフックはnpmでも利用可能です：api-refetch。




 なぜ自作のフックを作ったのか？
React QueryやSWRはどちらも優れたライブラリですが、以下の理由からよりハンズオンなアプロー...]]></description><link>https://zenn.dev/aymericzip/articles/c7c8e42ac990b3</link><guid isPermaLink="true">https://zenn.dev/aymericzip/articles/c7c8e42ac990b3</guid><pubDate>Tue, 07 Jan 2025 14:26:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UzAl8wQB--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:react-query%25E3%2582%2592%25E3%2583%25AA%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%2520%257C%2520React%25E3%2581%25A7%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%258F%2596%25E5%25BE%2597%25EF%25BC%2586%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E8%25BB%25BD%25E9%2587%258F%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:aymericzip%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNDI4NDMxMTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>aymericzip</dc:creator></item><item><title><![CDATA[Chromium系ブラウザで使える拡張機能の作り方]]></title><description><![CDATA[
 執筆日
2025/01/07

 概要
年末年始に遊んでみて面白かったのでご紹介。(今更って言われるとつらい)
今回はブラウザでテキストを選択してショートカットキーを押すとWeb版ChatGPTが開いて質問する、という拡張機能を作ってみます。

 環境
自分が普段Microsoft Edgeを使っているため、紹介するコードはEdgeで動作テストしています。（Chrominum系では同じjavascriptが使えるはずなのでChrome等でも動作すると思います）

 前提

edgeブラウザの拡張機能で開発者モードを有効化（後述）
ブラウザでWeb版のChatGPTにログイン


 ス...]]></description><link>https://zenn.dev/headwaters/articles/acd471d92157e9</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/acd471d92157e9</guid><pubDate>Tue, 07 Jan 2025 10:12:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6R5BAZr0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Chromium%25E7%25B3%25BB%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:kodani%2520takushi%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZmNzIzMThiZjcuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kodani takushi</dc:creator></item><item><title><![CDATA[Swiperの基本知識]]></title><description><![CDATA[
 前書き
Swiperを実装する際に知っておくべき基本知識を整理しました。
これらを理解しておけば、Swiperの実装がスムーズになると思います。

 1️⃣ Swiperの基本構造
Swiperを使うには、以下の基本的な構造を知る必要があります：

 HTMLの基本構造
&lt;div class="swiper"&gt;
  &lt;div class="swiper-wrapper"&gt;
    &lt;div class="swiper-slide"&gt;スライド1&lt;/div&gt;
    &lt;div class="swiper-slide"&gt;スライド2...]]></description><link>https://zenn.dev/kimascript/articles/658d31f1cea0e0</link><guid isPermaLink="true">https://zenn.dev/kimascript/articles/658d31f1cea0e0</guid><pubDate>Tue, 07 Jan 2025 01:21:36 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TJvmKzt8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Swiper%25E3%2581%25AE%25E5%259F%25BA%25E6%259C%25AC%25E7%259F%25A5%25E8%25AD%2598%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQ2N2UwMmQyNDEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>...</dc:creator></item><item><title><![CDATA[「State of JavaScript 2024」で各分野ごとのトップに輝いた技術やツールをまとめてみた]]></title><description><![CDATA[
 「State of JavaScript 2024」で各分野ごとのトップに輝いた技術やツールをまとめてみた
JavaScriptエコシステムの動向を毎年調査している「State of JavaScript」。2024年版では、各分野で開発者に最も支持された技術やツールが発表されました。本記事では、それらを具体例や使いどころを交えてご紹介します。


 構文機能: Null合体演算子 (??)


 特徴

デフォルト値を簡潔に設定できる構文です。null または undefined の場合にのみ右辺の値を返すため、意図しない挙動を避けられます。
例:
const value = nu...]]></description><link>https://zenn.dev/japan/articles/af8c38d6709c6e</link><guid isPermaLink="true">https://zenn.dev/japan/articles/af8c38d6709c6e</guid><pubDate>Tue, 07 Jan 2025 00:18:11 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--s-sqbEEv--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%258CState%2520of%2520JavaScript%25202024%25E3%2580%258D%25E3%2581%25A7%25E5%2590%2584%25E5%2588%2586%25E9%2587%258E%25E3%2581%2594%25E3%2581%25A8%25E3%2581%25AE%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E3%2581%25AB%25E8%25BC%259D%25E3%2581%2584%25E3%2581%259F%25E6%258A%2580%25E8%25A1%2593%25E3%2582%2584%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:SOFTBASE%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzBmODJiNmYwZGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>SOFTBASE</dc:creator></item><item><title><![CDATA[なぜYouTubeでは動画を全画面表示しながらスクロールが可能なのか？]]></title><description><![CDATA[こちらは JavaScript Advent Calendar 2024の 25 日目の記事です。
https://qiita.com/advent-calendar/2024/javascript

 はじめに
YouTubeは全画面表示中でもスクロールできて便利ですね[1]。

動画を全画面表示中でもスクロールできる
しかし Fullscreen API を用いて動画を全画面にした場合、通常はスクロール不可能なはずです。
YouTube ではどのようにスクロール可能な全画面を実現しているのでしょうか？
本記事では、その実装方法を解説します（Fullscreen APIとは）。

 調...]]></description><link>https://zenn.dev/popopon/articles/scrollable-fullscreen-video</link><guid isPermaLink="true">https://zenn.dev/popopon/articles/scrollable-fullscreen-video</guid><pubDate>Mon, 06 Jan 2025 23:00:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--e3_ucncs--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CYouTube%25E3%2581%25A7%25E3%2581%25AF%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E5%2585%25A8%25E7%2594%25BB%25E9%259D%25A2%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%258C%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%2597%25E3%2582%2593%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzgwYzhlNDRjMDMuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>しん</dc:creator></item><item><title><![CDATA[Hono.js: 最速を目指すNode.jsフレームワーク]]></title><description><![CDATA[

 Why Learn Hono

既に市場にはNode.js用の多くのバックエンドライブラリやフレームワークが存在しています。以前、私はいくつかの小規模なプロジェクトでNest.jsを使ったことがあります。それは機能が充実しており、プロジェクトを迅速に実装できます。しかし、私の小規模プロジェクトにとって、その多くの機能は本当に必要以上であり、高度なカプセル化がされており、コードを書く際の自由度が少ないです。
偶然にも、私はオンラインでHonoに出会いました。そのドキュメントを読んでみると：


超高速 🚀 - ルータのRegExpRouterは本当に速いです。線形ループを使用していま...]]></description><link>https://zenn.dev/leapcell/articles/1ebf8086a1c51e</link><guid isPermaLink="true">https://zenn.dev/leapcell/articles/1ebf8086a1c51e</guid><pubDate>Mon, 06 Jan 2025 14:27:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--C_KqjTZ8--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Hono.js%253A%2520%25E6%259C%2580%25E9%2580%259F%25E3%2582%2592%25E7%259B%25AE%25E6%258C%2587%25E3%2581%2599Node.js%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E3%2583%25AF%25E3%2583%25BC%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Leapcell%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2Y0N2E0MGQ3NGEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Leapcell</dc:creator></item><item><title><![CDATA[Recoilリポジトリアーカイブのニュースを受けて、Jotaiの過去記事をまとめてみた]]></title><description><![CDATA[昨日、たまたまRecoilのリポジトリが元日にアーカイブされていたのを知って、ツイートしたらすごい反響になってました。
https://x.com/dai_shi/status/1875910305802514649
せっかくなので、私が過去に書いたJotai関連のZenn記事をリストアップしてみようと思います。新しい順に載せますので、もし時系列を追いたい場合は下の方から見てください。あまり内容のある記事を書いていませんが、もしこれがきっかけで何か参考になれば幸いです。
https://zenn.dev/dai_shi/articles/f770b771b75f73
https://ze...]]></description><link>https://zenn.dev/dai_shi/articles/14e0451a0fc149</link><guid isPermaLink="true">https://zenn.dev/dai_shi/articles/14e0451a0fc149</guid><pubDate>Mon, 06 Jan 2025 14:12:27 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--SoZvHBm3--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Recoil%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%25A2%25E3%2583%25BC%25E3%2582%25AB%25E3%2582%25A4%25E3%2583%2596%25E3%2581%25AE%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2581%25A6%25E3%2580%2581Jotai%25E3%2581%25AE%25E9%2581%258E%25E5%258E%25BB%25E8%25A8%2598%25E4%25BA%258B%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:daishi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzcwZGNhM2E2Y2IuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>daishi</dc:creator></item><item><title><![CDATA[<label>で<button>を囲んでいるときにclickイベントが2回発火する問題の原因と対策]]></title><description><![CDATA[皆さんこんにちは。今回は、最近筆者が遭遇した、&lt;label&gt;で&lt;button&gt;を囲んでいるときにclickイベントが2回発火することがある問題について解説します。
さっそくですが、こちらのCodePenをご覧ください。

ここでは、0と書かれたボタンが表示されています。このボタンは1回クリックすると数字が1増えるように実装されています。
しかし、ボタンに表示されている数字をクリックすると、数字が2増えてしまいます。これは、clickイベントが2回発火しているためです。それ以外の部分（ボタンの端や、ラベル）をクリックした場合は数字が1増えます。
実装のHTMLとJa...]]></description><link>https://zenn.dev/uhyo/articles/label-button-onclick-twice</link><guid isPermaLink="true">https://zenn.dev/uhyo/articles/label-button-onclick-twice</guid><pubDate>Mon, 06 Jan 2025 13:57:46 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TImfEdWt--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%253Clabel%253E%25E3%2581%25A7%253Cbutton%253E%25E3%2582%2592%25E5%259B%25B2%25E3%2582%2593%25E3%2581%25A7%25E3%2581%2584%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25ABclick%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C2%25E5%259B%259E%25E7%2599%25BA%25E7%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%25E3%2581%25A8%25E5%25AF%25BE%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uhyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjYjFlMDJlNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uhyo</dc:creator></item><item><title><![CDATA[Rust を WebAssembly にコンパイルして JavaScript から呼び出す方法のまとめ]]></title><description><![CDATA[以前の記事にも書いたように、Rust コードを JavaScript でコンパイルするのは wasm-pack を使うと簡単にできます。しかし、wasm-pack が使えない場合はいくつか面倒な点があったり、wasm-pack を使う場合でも若干引っかかる点があったりします。
この記事では、JavaScript 側のビルドツールとしては Vite を使う前提で説明します。
また、ツールやライブラリのバージョンは以下を前提とします。

rustc 1.83.0
emcc 3.1.74
vite 5.4.11
vite-plugin-top-level-await 1.4.4


 wasm...]]></description><link>https://zenn.dev/semiexp/articles/96e1b65d9a38aa</link><guid isPermaLink="true">https://zenn.dev/semiexp/articles/96e1b65d9a38aa</guid><pubDate>Mon, 06 Jan 2025 10:22:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--mIvlZi7b--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Rust%2520%25E3%2582%2592%2520WebAssembly%2520%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%2520JavaScript%2520%25E3%2581%258B%25E3%2582%2589%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:semiexp%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0M2JkNjUyOTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>semiexp</dc:creator></item><item><title><![CDATA[フロントエンドからファイルをダウンロードさせるやり方について]]></title><description><![CDATA[いまどきのWebアプリにおいては、ファイルのダウンロード機能が必要な場面が多々あります。例えば、バックエンドが生成したCSVデータをファイルとしてダウンロードさせる「CSVダウンロード」機能などです。
!
この記事は筆者が趣味で書いたものです。筆者の業務とは一切関係ありません。関係ありませんよ。

今回はAPI[1]から得られたデータをファイルとしてダウンロードさせたい場合のフロントエンドの実装方法について考察します。

 要件
今回考える要件は、前述のとおり、APIから得られたデータをファイルとしてダウンロードさせることです。具体的には、以下のような要件を考えます。

APIをGETリ...]]></description><link>https://zenn.dev/uhyo/articles/file-download-from-web-api</link><guid isPermaLink="true">https://zenn.dev/uhyo/articles/file-download-from-web-api</guid><pubDate>Mon, 06 Jan 2025 10:12:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--UmWCjb4B--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%258B%25E3%2582%2589%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%2592%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%2584%25E3%2582%258A%25E6%2596%25B9%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:uhyo%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzVjYjFlMDJlNGQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>uhyo</dc:creator></item><item><title><![CDATA[【Servicenow】スクリプトでなりすまし/代理操作を行う方法]]></title><description><![CDATA[
 はじめに
GlideRecordSecureやCanReadを手軽に確認できる方法を模索していた際に、スクリプトでできないかと模索していました。模索した結果や試行錯誤の結果を書いていきます。

 スクリプト
代理操作するだけであれば以下のスクリプトで実行できます。
var userid = 'user_sys_id';
var og = gs.getSession().impersonate(userid); //なりすまし開始
gs.getSession().impersonate(og); //なりすまし終了

 注意点
なりすましが終了する前にスクリプトエラーが発生した場合、セ...]]></description><link>https://zenn.dev/kymk_zenn/articles/b73efd0b05f036</link><guid isPermaLink="true">https://zenn.dev/kymk_zenn/articles/b73efd0b05f036</guid><pubDate>Mon, 06 Jan 2025 03:29:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--GWjRWB_---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Servicenow%25E3%2580%2591%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2581%25A7%25E3%2581%25AA%25E3%2582%258A%25E3%2581%2599%25E3%2581%25BE%25E3%2581%2597%252F%25E4%25BB%25A3%25E7%2590%2586%25E6%2593%258D%25E4%25BD%259C%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:kymk%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJlNzg5Y2E1YjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>kymk</dc:creator></item></channel></rss>