<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Zennの「Python」のフィード]]></title><description><![CDATA[Zennのトピック「Python」のRSSフィードです]]></description><link>https://zenn.dev/topics/python</link><image><url>https://storage.googleapis.com/zenn-user-upload/topics/ebddf7c6bb.png</url><title>Zennの「Python」のフィード</title><link>https://zenn.dev/topics/python</link></image><generator>zenn.dev</generator><lastBuildDate>Tue, 13 May 2025 07:09:15 GMT</lastBuildDate><atom:link href="https://zenn.dev/topics/python/feed" rel="self" type="application/rss+xml"/><language><![CDATA[ja]]></language><item><title><![CDATA[【失敗談】Gemini 2.0 APIでグーグル検索によるグラウンディング機能を使おうとして2日間潰した話]]></title><description><![CDATA[
 結論を3行で

Gemini APIに検索させると、Brave APIでURLを取得してスクレイピングするよりも早くて便利らしいと知る
公式のサンプルはGemini 1.5 モデル用。2.0以降のやり方を探すのに2日間かかる
解決した後に親切な方がnoteに書いてるのを知って力抜ける

最初にそのnoteの記事も紹介しておきます。
https://note.com/masa_kazama/n/n8eff1a4be1da

 事の経緯
ある時、Xで「Brave APIを使うよりもGeminiに検索させた方が速くて便利」って話を見かけて、自分でもやってみたくなった、というのがすべてです。...]]></description><link>https://zenn.dev/mirai_asset/articles/2d813cec0e63fa</link><guid isPermaLink="true">https://zenn.dev/mirai_asset/articles/2d813cec0e63fa</guid><pubDate>Tue, 13 May 2025 06:27:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--1MojTUYH--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%25A4%25B1%25E6%2595%2597%25E8%25AB%2587%25E3%2580%2591Gemini%25202.0%2520API%25E3%2581%25A7%25E3%2582%25B0%25E3%2583%25BC%25E3%2582%25B0%25E3%2583%25AB%25E6%25A4%259C%25E7%25B4%25A2%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E3%2582%25B0%25E3%2583%25A9%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%258A%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A62%25E6%2597%25A5%25E9%2596%2593%25E6%25BD%25B0%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25BF%25E3%2582%2589%25E3%2581%2584%25E3%2582%2588%25E3%2581%259F%25E3%2582%258D%25E3%2581%2586%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jTGtpS2J0RDdlbUJiaWVnaEMxV1RWVkQ4NmxtS0lEajB5UFl5bVVIRnp0MkkwTDZOR3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>みらいよたろう</dc:creator></item><item><title><![CDATA[Next.js×Python連携の無料最適解: Vercel+Render.comで無料デプロイする方法]]></title><description><![CDATA[
 Next.js×Pythonの無料最適解 - Vercel+Render.comの連携

 はじめに
nemuriです。
現在100日チャレンジをしていて、その結果をポートフォリオにして公開して5日目です。
今後pythonで書いたコードを表示したくなるだろうと思い、今日はその実装をしました。
フロントエンドにNext.js、バックエンドにPythonを使うアプリケーションを無料でデプロイする方法を知りたくありませんか？
本記事では、「NumPy計算機」の実装を通して、Vercel + Render.comを組み合わせたデプロイ手法を紹介します。

 背景: 直面した課題
当初の目標...]]></description><link>https://zenn.dev/nemuri/articles/80204dbc9c327f</link><guid isPermaLink="true">https://zenn.dev/nemuri/articles/80204dbc9c327f</guid><pubDate>Tue, 13 May 2025 06:26:32 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--V_HFVU0X--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Next.js%25C3%2597Python%25E9%2580%25A3%25E6%2590%25BA%25E3%2581%25AE%25E7%2584%25A1%25E6%2596%2599%25E6%259C%2580%25E9%2581%25A9%25E8%25A7%25A3%253A%2520Vercel%252BRender.com%25E3%2581%25A7%25E7%2584%25A1%25E6%2596%2599%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:nemuri%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzUwYzRiMzQ4YTUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>nemuri</dc:creator></item><item><title><![CDATA[seleniumの使い方　第４回　クリック自動化などelementの操作（python×Microsoft Edge）]]></title><description><![CDATA[こんにちは、星杜なぎさです
今回は、seleniumで文字入力やクリックを行う方法について学びます。
環境構築がまだの人は、以下の記事で準備してから本記事を読まれるとよいでしょう
https://zenn.dev/hoshinagi1219/articles/b61f220e0908c5

 1. はじめに

Seleniumは、Webブラウザの操作を自動化するためのツール
オープンソースなので、無料で利用可能
WebスクレイピングやRPA（Robotic Process Automation）などに活用できる


 1.1 この記事について

Seleniumでできることを端的に表した...]]></description><link>https://zenn.dev/hoshinagi1219/articles/759662aac990ec</link><guid isPermaLink="true">https://zenn.dev/hoshinagi1219/articles/759662aac990ec</guid><pubDate>Tue, 13 May 2025 03:34:05 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--AC9-orXa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:selenium%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%25E3%2580%2580%25E7%25AC%25AC%25EF%25BC%2594%25E5%259B%259E%25E3%2580%2580%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2582%25AF%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%25AA%25E3%2581%25A9element%25E3%2581%25AE%25E6%2593%258D%25E4%25BD%259C%25EF%25BC%2588python%25C3%2597Microsoft%2520Edge%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E6%2598%259F%25E6%259D%259C%25E3%2581%25AA%25E3%2581%258E%25E3%2581%2595%25EF%25BC%2588Nagisa%2520Hoshi...%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MzMTgwYmFjZjYuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>星杜なぎさ（Nagisa Hoshimori）</dc:creator></item><item><title><![CDATA[【初心者向け】Pythonの is と == の違いを整理する]]></title><description><![CDATA[
 はじめに
Pythonを書いていると、ときどき == と is の違いに戸惑うことがあります。
私自身、最初は「なんとなく同じような意味だろう」と思って使っていたのですが、
実際は まったく異なる意味と用途を持った演算子 です。
本記事では、is と == の違いについて、
「値の比較」と「オブジェクトの同一性」という視点から整理してみます。

 1. == は「値が同じかどうか」を比較する
== は、値（内容）が等しいかどうかをチェックする演算子です。
a = [1, 2, 3]
b = [1, 2, 3]

print(a == b)  # True
この場合、リスト a と b...]]></description><link>https://zenn.dev/fd2025/articles/66452bb88071fb</link><guid isPermaLink="true">https://zenn.dev/fd2025/articles/66452bb88071fb</guid><pubDate>Tue, 13 May 2025 00:39:48 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--PPF_FYMG--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590%25E5%2588%259D%25E5%25BF%2583%25E8%2580%2585%25E5%2590%2591%25E3%2581%2591%25E3%2580%2591Python%25E3%2581%25AE%2520is%2520%25E3%2581%25A8%2520%253D%253D%2520%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%25E3%2582%2592%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:fd2025%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2EzMzVlNTI5MmQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>fd2025</dc:creator></item><item><title><![CDATA[1日を全録する②　GEMINI を利用して1日のまとめ作成]]></title><description><![CDATA[
 動機
言った、言わない、本当に無駄な時間ですよね。
言ったか言わないか自分で覚えられない場合は全部録音してしまえばいいのでは・・？
そう、ソニーならね。
https://www.sony.jp/ic-recorder/products/ICD-TX660/?srsltid=AfmBOop3LJN6J6M3ltngk0zfBBe9JHwRxt1WmoPFJUnX8QTNIGa9QbdB
ということで言った言わないを撲滅するため、1日すべてを録音し、文字起こししてそれをGeminiに読んでいい感じにまとめてもらおうというのが今回の趣旨です。
どんなLLMでも良いのですが、そのへんの抽象化...]]></description><link>https://zenn.dev/yoheikusano/articles/d181b3f4406af4</link><guid isPermaLink="true">https://zenn.dev/yoheikusano/articles/d181b3f4406af4</guid><pubDate>Mon, 12 May 2025 15:20:59 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--m2DLobaa--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E6%2597%25A5%25E3%2582%2592%25E5%2585%25A8%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A1%25E3%2580%2580GEMINI%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A61%25E6%2597%25A5%25E3%2581%25AE%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E9%2587%258E%25E6%25B4%258B%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZDIwYTZkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草野洋平</dc:creator></item><item><title><![CDATA[1日を全録する①　kotoba-whisperによる文字起こし]]></title><description><![CDATA[
 動機
言った、言わない、本当に無駄な時間ですよね。
言ったか言わないか自分で覚えられない場合は全部録音してしまえばいいのでは・・？
そう、ソニーならね。
https://www.sony.jp/ic-recorder/products/ICD-TX660/?srsltid=AfmBOop3LJN6J6M3ltngk0zfBBe9JHwRxt1WmoPFJUnX8QTNIGa9QbdB
ということで言った言わないを撲滅するため、1日すべてを録音し、文字起こししてそれをGeminiに読んでもらおうというのが今回の趣旨です。
この記事ではkotoba-whisperによる文字起こしを行って...]]></description><link>https://zenn.dev/yoheikusano/articles/b69245e08da3fc</link><guid isPermaLink="true">https://zenn.dev/yoheikusano/articles/b69245e08da3fc</guid><pubDate>Mon, 12 May 2025 15:19:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--YIc474kn--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:1%25E6%2597%25A5%25E3%2582%2592%25E5%2585%25A8%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%25E2%2591%25A0%25E3%2580%2580kotoba-whisper%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E8%25B5%25B7%25E3%2581%2593%25E3%2581%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%258D%2589%25E9%2587%258E%25E6%25B4%258B%25E5%25B9%25B3%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2YzZDIwYTZkZDUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>草野洋平</dc:creator></item><item><title><![CDATA[爆速 Python 型チェッカーの ty を触ってみる]]></title><description><![CDATA[
 はじめに
今や Python の環境構築のスタンダードになりつつある uv (rye) や 高速 Linter の ruff などを管理する Astral から、Rust 製高速型チェッカーの ty がリリースされました。2025年5月現在、プレリリース版とのことで公式ドキュメントも整備されていない状態ではありますが、公式の README を読みながら試してみます。

 インストール方法
uv を使っている方は以下のコマンドでグローバルにインストールできます。
uv tool install ty@latest
開発環境で使いたい場合は、
uv add --dev ty
もしくは p...]]></description><link>https://zenn.dev/prgckwb/articles/ty-type-checker</link><guid isPermaLink="true">https://zenn.dev/prgckwb/articles/ty-type-checker</guid><pubDate>Mon, 12 May 2025 15:19:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TBbs8nbM--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E7%2588%2586%25E9%2580%259F%2520Python%2520%25E5%259E%258B%25E3%2583%2581%25E3%2582%25A7%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E3%2581%25AE%2520ty%2520%25E3%2582%2592%25E8%25A7%25A6%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E3%2581%25A1%25E3%2581%258F%25E3%2582%258F%25E3%2581%25B6%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzU1MWU5MTZhMjguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ちくわぶ</dc:creator></item><item><title><![CDATA[ランレングス符号化をPythonで実装してみた]]></title><description><![CDATA[今回は、ランレングス符号化をPythonで実装してみたので、その解説をしてみようと思いまs。

 ランレングス符号化とは？
ランレングス符号化とはデータ圧縮方式の一つで、連続する同じデータをまとめて扱うことで圧縮をするというものです。
たとえばAABBBCCCCというテキストがあった場合に、各文字とそれがいくつ連続しているかという情報に変換してみます。するとA2B3C4のように変換でき、元のテキストの長さ9文字と比較して6文字に収めることができます。
ただし、ランレングス符号化では必ず圧縮後のデータ量が小さくなる保証はありません。たとえばABCDEF....XYZのようにアルファベットが...]]></description><link>https://zenn.dev/akasan/articles/9430f41e6cff7a</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/9430f41e6cff7a</guid><pubDate>Mon, 12 May 2025 14:35:35 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--a_73k5hE--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%25AC%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%25B9%25E7%25AC%25A6%25E5%258F%25B7%25E5%258C%2596%25E3%2582%2592Python%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[Python と VOICEVOX で俳句読み上げ動画を自動生成する]]></title><description><![CDATA[本チュートリアルでは、Python と VOICEVOX Core、MoviePy v2を用いて「俳句を読み上げる動画」を自動生成するシステムを段階的に構築していきます。この記事は ChatGPT の力を借りて書きました。

 前回の振り返りと今回の課題
前回の記事では run.py で音声ファイルを生成し、コマンドツールの FFmpeg を使って音声ファイルを結合したり、動画を生成しました。背景画像の生成には ImageMagick を使いました。細々としたコマンドオプションを使うので、作業は意外と煩雑であることがわかりました。
今回は前回確認したワークフローの処理を Python の...]]></description><link>https://zenn.dev/masakielastic/articles/309b6a803d65f3</link><guid isPermaLink="true">https://zenn.dev/masakielastic/articles/309b6a803d65f3</guid><pubDate>Mon, 12 May 2025 11:11:37 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--ixbSL0od--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%25E3%2581%25A8%2520VOICEVOX%2520%25E3%2581%25A7%25E4%25BF%25B3%25E5%258F%25A5%25E8%25AA%25AD%25E3%2581%25BF%25E4%25B8%258A%25E3%2581%2592%25E5%258B%2595%25E7%2594%25BB%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Masaki%2520Kagaya%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzc3ODAxZTNiZTAuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Masaki Kagaya</dc:creator></item><item><title><![CDATA[【Terraform /python】- Python-Terraform ってなんだ？？]]></title><description><![CDATA[
 執筆日
2025/5/12

 Python-Terraform
Terraform をPythonから制御できるライブラリです。
https://github.com/beelit94/python-terraform

 コード
ライブラリをインストールする
pip install python-terraform
以下の構成でフォルダを構成します。


main.py
from python_terraform import Terraform

tf = Terraform(working_dir='./terraform')

# initを実行
return_code, ...]]></description><link>https://zenn.dev/headwaters/articles/c53de97cebcf7d</link><guid isPermaLink="true">https://zenn.dev/headwaters/articles/c53de97cebcf7d</guid><pubDate>Mon, 12 May 2025 09:00:01 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--6JdHGlL0--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2580%2590Terraform%2520%252Fpython%25E3%2580%2591-%2520Python-Terraform%2520%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%2593%25E3%2581%25A0%25EF%25BC%259F%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:takekawa%2520tomoki%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZjNGExY2UxMDYuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/g_south_west%2Ch_34%2Cl_default:og-publication-pro-mark-xcosax%2Cw_34%2Cx_217%2Cy_158/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%2598%25E3%2583%2583%25E3%2583%2589%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25B9%2Cx_255%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzJhYjVkMGQ0YjYuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>takekawa tomoki</dc:creator></item><item><title><![CDATA[Python + Gmail でヤマト運輸の荷物追跡を自動化する]]></title><description><![CDATA[
 ✅ はじめに

荷物のステータスが更新されたらすぐ知りたい！
Web画面を毎回開くのが面倒なので、Pythonで自動化してみた


 🔧 必要なもの

Python 3.x
ライブラリ: httpx, beautifulsoup4, smtplib, email

Gmail アカウントとアプリパスワード（2段階認証を有効にする必要あり）


 📦 ステップ1: 追跡情報の取得
import httpx
from bs4 import BeautifulSoup

def get_yamato_status(tracking_code):
    url = "https://toi...]]></description><link>https://zenn.dev/jianbo/articles/74b3ef2ac4036b</link><guid isPermaLink="true">https://zenn.dev/jianbo/articles/74b3ef2ac4036b</guid><pubDate>Mon, 12 May 2025 08:26:51 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--MNGVhj9t--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%2520%252B%2520Gmail%2520%25E3%2581%25A7%25E3%2583%25A4%25E3%2583%259E%25E3%2583%2588%25E9%2581%258B%25E8%25BC%25B8%25E3%2581%25AE%25E8%258D%25B7%25E7%2589%25A9%25E8%25BF%25BD%25E8%25B7%25A1%25E3%2582%2592%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:bob%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FGZFp1Y294R080dWFKVXlVNEZBZW1pdWt5cnZjQmhRMGdIQ09OMzJ6NThCSFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>bob</dc:creator></item><item><title><![CDATA[BigQuery Python UDF 完全に理解した]]></title><description><![CDATA[マイベスト データエンジニアの snhryt です。
先月頭に、BigQueryにユーザー定義関数 (UDF) をPythonで書ける機能がプレビュー版でやってきました🎉
少し時間が空いてしまいましたが、自分でもいろいろ触って完全に理解した[1]ので、体験記をまとめます。
!
Python UDFについて網羅的に知りたい方は以下の公式ドキュメント or DevelopersIOの記事を先に読むこと推奨です。
https://cloud.google.com/bigquery/docs/user-defined-functions-python?hl=ja
https://dev.clas...]]></description><link>https://zenn.dev/mybest_dev/articles/b788f15c81ebb6</link><guid isPermaLink="true">https://zenn.dev/mybest_dev/articles/b788f15c81ebb6</guid><pubDate>Mon, 12 May 2025 07:54:43 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--o6jrDneK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:BigQuery%2520Python%2520UDF%2520%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:snhryt%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2MxMmM4NTBlYTMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E3%2583%259E%25E3%2582%25A4%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%2520%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzQwOGYwMTQ0MDQuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>snhryt</dc:creator></item><item><title><![CDATA[Azure AI Document IntelligenceのOCR機能を使ってPDFをテキスト化し、Difyで使えるナレッジベース化する]]></title><description><![CDATA[
 はじめに
業務や学習で使う膨大な量のPDFファイルから、内容の要約や必要な箇所のみの情報を確認したいときはありませんか？
今回はAzureが提供するDocument IntelligenceのOCR機能を使って、PDFから自動でテキストを抽出し、Difyのナレッジで活用できるようにしてみました。

 背景と課題
企業やチームの中には、日々蓄積される大量の資料、たとえばマニュアル、レポート、提案書、議事録などがPDF形式で保管されています。
それらの多くは、画像ベースのスキャン資料や、構造を持たない単なる文章ファイルとして存在しており、検索性・活用性に大きな課題を抱えています。
また、...]]></description><link>https://zenn.dev/solvio/articles/9d9643ec24dd96</link><guid isPermaLink="true">https://zenn.dev/solvio/articles/9d9643ec24dd96</guid><pubDate>Mon, 12 May 2025 05:29:41 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--toyyvym2--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Azure%2520AI%2520Document%2520Intelligence%25E3%2581%25AEOCR%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6PDF%25E3%2582%2592%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E5%258C%2596%25E3%2581%2597%25E3%2580%2581Dify%25E3%2581%25A7%25E4%25BD%25BF...%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:okawa_%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzhlNjEyZGFhZWIuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:Solvio%25E6%25A0%25AA%25E5%25BC%258F%25E4%25BC%259A%25E7%25A4%25BE%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzkxNjU0ZTk1MmUuanBlZw==%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>okawa_</dc:creator></item><item><title><![CDATA[なぜPythonはAIコード生成の王者なのか：LLM時代における開発言語の選び方（2025年5月版）]]></title><description><![CDATA[2025年5月の今、AIを活用したアプリケーション開発の鍵は「コード生成精度の高い言語を選ぶこと」にあります。生成AIはもはやアイデア段階からアプリの完成までをサポートする開発パートナーとなりつつありますが、そのパフォーマンスは選択するプログラミング言語によって大きく変わります。中でも、Pythonは依然として圧倒的な優位性を持つ言語です。
最新の大規模言語モデル（LLM）—GPT-4o、Claude 3、Gemini 1.5 など—はいずれもGitHub、Kaggle、StackOverflowをはじめとする膨大なPythonコードを学習データとして取り入れており、文法や設計思想、ライ...]]></description><link>https://zenn.dev/ken1618/articles/7cd623cd9e56df</link><guid isPermaLink="true">https://zenn.dev/ken1618/articles/7cd623cd9e56df</guid><pubDate>Mon, 12 May 2025 04:49:50 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--DHsNxptk--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E3%2581%25AA%25E3%2581%259CPython%25E3%2581%25AFAI%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E7%2594%259F%25E6%2588%2590%25E3%2581%25AE%25E7%258E%258B%25E8%2580%2585%25E3%2581%25AA%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259ALLM%25E6%2599%2582%25E4%25BB%25A3%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E9%2596%258B%25E7%2599%25BA%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25AE%25E9%2581%25B8%25E3%2581%25B3%25E6%2596%25B9%25EF%25BC%25882025%25E5%25B9%25B45%25E6%259C%2588%25E7%2589%2588%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:ken1618%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2RlYTJjY2E0YTQuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>ken1618</dc:creator></item><item><title><![CDATA[mise + uv + dbt-coreで、ゼロから爆速でdbtの環境構築]]></title><description><![CDATA[
 Summary


miseで、ローカルマシン上のPythonバージョンを管理

uvで、プロジェクトごとのPythonパッケージを管理

dbt-coreで、dbtプロジェクトの開発環境を管理

上記の構成でdbtの環境構築をスムーズに完了できたので、手順を紹介します。
Python開発は不慣れですが、過去pipやcondaで頑張っていた時と比較して、以下のメリットを実感できました。

実行すべきコマンド数が少ない。
OSデフォルトのPython構成を汚さない。
Python特有のvenvのactivate/deactivateを（ほとんど）意識する必要がない。
mise, uvと...]]></description><link>https://zenn.dev/soomattsu/articles/08357285c98eaf</link><guid isPermaLink="true">https://zenn.dev/soomattsu/articles/08357285c98eaf</guid><pubDate>Mon, 12 May 2025 02:33:09 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--TieLG4FK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:mise%2520%252B%2520uv%2520%252B%2520dbt-core%25E3%2581%25A7%25E3%2580%2581%25E3%2582%25BC%25E3%2583%25AD%25E3%2581%258B%25E3%2582%2589%25E7%2588%2586%25E9%2580%259F%25E3%2581%25A7dbt%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:soomattsu%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzA3OTgzZGM0YzUuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>soomattsu</dc:creator></item><item><title><![CDATA[Pythonのプロファイラ cProfile でコードのボトルネックを調べる際に使うコマンド集]]></title><description><![CDATA[リファレンス:
https://docs.python.org/3.14/library/profile.html

構文

python -m cProfile [-o output_file] [-s sort_order] (-m module | myscript.py)
&lt;sort_order&gt;に指定できる値



引数
enum 引数
意味




'calls'
SortKey.CALLS
呼び出し回数


'cumulative'
SortKey.CUMULATIVE
累積時間


'cumtime'
—
累積時間


'file'
—
ファイル名


'fi...]]></description><link>https://zenn.dev/moxak/articles/c2cecea17920f9</link><guid isPermaLink="true">https://zenn.dev/moxak/articles/c2cecea17920f9</guid><pubDate>Mon, 12 May 2025 00:50:22 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--cshL5x1z--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25A9%2520cProfile%2520%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E3%2583%259C%25E3%2583%2588%25E3%2583%25AB%25E3%2583%258D%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E8%25AA%25BF%25E3%2581%25B9%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%25B3%25E3%2583%259E%25E3%2583%25B3%25E3%2583%2589%25E9%259B%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Ackkerman%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2M2NDY2ZTM5NTguanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Ackkerman</dc:creator></item><item><title><![CDATA[駅すぱあと Python SDKを使って、定期券の払い戻し計算を行う]]></title><description><![CDATA[本記事はヴァル研究所の支援として作成された記事です
駅すぱあとはAPIを公開しており、駅情報や経路探索などをAPI経由で行えます。メソッドはすべてGETメソッドで、情報取得系のみです。レスポンスはJSONまたはXMLで返ってきます。
この駅すぱあと APIを利用しやすくするSDKを開発しはじめました。SDKはPythonで作っており、CLIやWebサービスなどから利用できます。
今回は、スタンダードプランで提供されている定期券の払い戻し計算APIに対応しました。
定期券は有効期間が長いほど割引率が高くなりますが、定期券の利用中にお引越しや異動などで購入した定期券を払い戻す必要がある場合も...]]></description><link>https://zenn.dev/ekispert_api/articles/4d6b0703b383fa</link><guid isPermaLink="true">https://zenn.dev/ekispert_api/articles/4d6b0703b383fa</guid><pubDate>Mon, 12 May 2025 00:48:56 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--5_-ewDJK--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520Python%2520SDK%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2580%2581%25E5%25AE%259A%25E6%259C%259F%25E5%2588%25B8%25E3%2581%25AE%25E6%2589%2595%25E3%2581%2584%25E6%2588%25BB%25E3%2581%2597%25E8%25A8%2588%25E7%25AE%2597%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_34:%25E3%2582%25A2%25E3%2583%2584%25E3%2582%25B7%2540MOONGIFT%2Cx_220%2Cy_108/bo_3px_solid_rgb:d6e3ed%2Cg_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzllZWU4MmU5MDMuanBlZw==%2Cr_20%2Cw_90%2Cx_92%2Cy_102/co_rgb:6e7b85%2Cg_south_west%2Cl_text:notosansjp-medium.otf_30:%25E9%25A7%2585%25E3%2581%2599%25E3%2581%25B1%25E3%2581%2582%25E3%2581%25A8%2520API%2Cx_220%2Cy_160/bo_4px_solid_white%2Cg_south_west%2Ch_50%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqN3UwNEd0OEkzbTVsd2xaRUhBbjNlcko0QjZxNWlBd1V6N2tqT1E9czk2LWM=%2Cr_max%2Cw_50%2Cx_139%2Cy_84/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>アツシ@MOONGIFT</dc:creator></item><item><title><![CDATA[Polars Struct]]></title><description><![CDATA[
 struct
df = pl.DataFrame(
    {"person": [{"name": "Alice", "age": 32}, {"name": "Bob", "age": 41}]}
)
shape: (2, 1)
┌──────────────┐
│ person       │
│ ---          │
│ struct[2]    │
╞══════════════╡
│ {"Alice",32} │
│ {"Bob",41}   │
└──────────────┘

 structの値を個別に取得する
structのfield nameを指定して取...]]></description><link>https://zenn.dev/wacky/articles/ec02cfda31b88f</link><guid isPermaLink="true">https://zenn.dev/wacky/articles/ec02cfda31b88f</guid><pubDate>Mon, 12 May 2025 00:47:33 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--CIMWT_H---/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80:Polars%2520Struct%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:wacky%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvdy5wbmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>wacky</dc:creator></item><item><title><![CDATA[Python 3.13の新機能について調べてみた]]></title><description><![CDATA[今回は、Python3.13で導入される新機能についてまとめてみました。私自身、普段は3.11または3.12を使うことが多く、3.13についてはどのような機能が追加されるか認識していなかったので調べてみました。

 追加される新機能
まず、Python3.13で導入される新機能はこちらにまとまっていますので、詳しくは参照ください。
https://docs.python.org/3/whatsnew/3.13.html#other-language-changes

 よりよいインタラクティブインタプリタ
PyPyプロジェクトのコードをベースとした新しいインタラクティブシェルをデフォルト...]]></description><link>https://zenn.dev/akasan/articles/423451d2bb8249</link><guid isPermaLink="true">https://zenn.dev/akasan/articles/423451d2bb8249</guid><pubDate>Sun, 11 May 2025 14:23:08 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--FvHqmvGr--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Python%25203.13%25E3%2581%25AE%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%25AA%25BF%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Akasan%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUVkRlRwNXJfNDFtel9OY3dPYUtMRE1vc09tbVB6YmxHM0V5N3lNZzI3QWM9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>Akasan</dc:creator></item><item><title><![CDATA[Appleの認証処理をPythonとRustで再現できるか試してみた]]></title><description><![CDATA[
 Appleの認証における全体像
Appleのサービスでは、Apple IDとパスワードだけでなく、多要素認証とSRPを使って本人確認をセキュアに実施しています。
SRPを使う目的は、盗聴防止でパスワードをネットワーク上に送らず認証するためであり、Appleにもパスワードを保存しない形になっています。また、多要素認証を行うことによって、他人によるなりすましを防ぐことができます。

 必要な構成要素

 srp_client: パスワードを使った安全な認証鍵
通信の流れは、以下のようになっています。
クライアントとサーバーで共通鍵を計算する
↓
サーバーに「私はこの共通鍵を知ってるよ」と...]]></description><link>https://zenn.dev/bamboo_nova/articles/ff98a3efcb3f80</link><guid isPermaLink="true">https://zenn.dev/bamboo_nova/articles/ff98a3efcb3f80</guid><pubDate>Sun, 11 May 2025 11:02:02 GMT</pubDate><enclosure url="https://res.cloudinary.com/zenn/image/upload/s--BAoLjlfC--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:Apple%25E3%2581%25AE%25E8%25AA%258D%25E8%25A8%25BC%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592Python%25E3%2581%25A8Rust%25E3%2581%25A7%25E5%2586%258D%25E7%258F%25BE%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2581%258B%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:%25E8%25A1%2580%25E5%25A8%2581%25E8%258F%25AF%25E6%2588%2591%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzZiMmY0NjM5OTEuanBlZw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png" length="0" type="image/png"/><dc:creator>血威華我</dc:creator></item></channel></rss>